    TEST(gbcemu, opcode_cb_7e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 7E 0000
        gbc.setState(0x58ef, 0x1ab3, 0x9ce0, 0x3226, 0x9f8d, 0x57b1, 0x0, 0x1);
        gbc.writeMem(0x57b1, { 0x9f });
        gbc.writeMem(0x58ef, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1ab3, gbc.sp());
        EXPECT(0x58f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0001
        gbc.setState(0x9343, 0x4b06, 0xd900, 0xc3d, 0x785d, 0x35c6, 0x1, 0x1);
        gbc.writeMem(0x35c6, { 0x1c });
        gbc.writeMem(0x9343, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b06, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9343));
        EXPECT(0x7e, gbc.readMem(0x9344));
        // CB 7E 0002
        gbc.setState(0x6908, 0xf678, 0x8e00, 0xc945, 0xfbf5, 0xcb46, 0x0, 0x0);
        gbc.writeMem(0x6908, { 0xcb, 0x7e });
        gbc.writeMem(0xcb46, { 0x1 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf678, gbc.sp());
        EXPECT(0x690a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xcb46));
        // CB 7E 0003
        gbc.setState(0x3b9b, 0x6f3b, 0x4030, 0xb18f, 0x74b0, 0x8a3f, 0x0, 0x1);
        gbc.writeMem(0x3b9b, { 0xcb, 0x7e });
        gbc.writeMem(0x8a3f, { 0x79 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6f3b, gbc.sp());
        EXPECT(0x3b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8a3f));
        // CB 7E 0004
        gbc.setState(0xa80d, 0x6e69, 0x1130, 0xd612, 0xce1a, 0xa48, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0xf1 });
        gbc.writeMem(0xa80d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6e69, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0x7e, gbc.readMem(0xa80e));
        // CB 7E 0005
        gbc.setState(0x927, 0x7c34, 0xf390, 0xffc3, 0x9b9b, 0xab69, 0x1, 0x0);
        gbc.writeMem(0x927, { 0xcb, 0x7e });
        gbc.writeMem(0xab69, { 0x4c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0x929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xab69));
        // CB 7E 0006
        gbc.setState(0xa3fa, 0x262b, 0x29a0, 0xc998, 0x2b85, 0x2c17, 0x1, 0x0);
        gbc.writeMem(0x2c17, { 0x53 });
        gbc.writeMem(0xa3fa, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x262b, gbc.sp());
        EXPECT(0xa3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fa));
        EXPECT(0x7e, gbc.readMem(0xa3fb));
        // CB 7E 0007
        gbc.setState(0x16eb, 0x89eb, 0x5620, 0x912f, 0x2ae3, 0xdce1, 0x0, 0x1);
        gbc.writeMem(0x16eb, { 0xcb, 0x7e });
        gbc.writeMem(0xdce1, { 0x60 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x89eb, gbc.sp());
        EXPECT(0x16ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xdce1));
        // CB 7E 0008
        gbc.setState(0xc56, 0x43e9, 0xc340, 0x118, 0x69f8, 0x2b11, 0x1, 0x0);
        gbc.writeMem(0xc56, { 0xcb, 0x7e });
        gbc.writeMem(0x2b11, { 0xa0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0xc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0009
        gbc.setState(0x71bb, 0xed56, 0x210, 0xed7, 0xec98, 0xca43, 0x1, 0x0);
        gbc.writeMem(0x71bb, { 0xcb, 0x7e });
        gbc.writeMem(0xca43, { 0x4e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed56, gbc.sp());
        EXPECT(0x71bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xca43));
        // CB 7E 000A
        gbc.setState(0xd174, 0xfa00, 0xb8c0, 0x3a68, 0xac9b, 0x6b4c, 0x1, 0x0);
        gbc.writeMem(0x6b4c, { 0x4a });
        gbc.writeMem(0xd174, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfa00, gbc.sp());
        EXPECT(0xd176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd174));
        EXPECT(0x7e, gbc.readMem(0xd175));
        // CB 7E 000B
        gbc.setState(0x5b0c, 0xc55e, 0x9230, 0xb64e, 0x8257, 0x36f6, 0x1, 0x0);
        gbc.writeMem(0x36f6, { 0xe9 });
        gbc.writeMem(0x5b0c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc55e, gbc.sp());
        EXPECT(0x5b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 000C
        gbc.setState(0x57, 0x1ab1, 0xb8b0, 0xefcc, 0x7e30, 0x273c, 0x0, 0x1);
        gbc.writeMem(0x57, { 0xcb, 0x7e });
        gbc.writeMem(0x273c, { 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1ab1, gbc.sp());
        EXPECT(0x59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 000D
        gbc.setState(0x904, 0x2893, 0xcf0, 0xc15b, 0x77e6, 0x4c95, 0x0, 0x0);
        gbc.writeMem(0x904, { 0xcb, 0x7e });
        gbc.writeMem(0x4c95, { 0xe1 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2893, gbc.sp());
        EXPECT(0x906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 000F
        gbc.setState(0xddc, 0xd0cd, 0x1940, 0x2777, 0xeaa7, 0xd744, 0x0, 0x0);
        gbc.writeMem(0xddc, { 0xcb, 0x7e });
        gbc.writeMem(0xd744, { 0x90 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd0cd, gbc.sp());
        EXPECT(0xdde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xd744));
        // CB 7E 0010
        gbc.setState(0x4cb0, 0xc56b, 0x8120, 0x6464, 0x46ac, 0xc17a, 0x0, 0x0);
        gbc.writeMem(0x4cb0, { 0xcb, 0x7e });
        gbc.writeMem(0xc17a, { 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc56b, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc17a));
        // CB 7E 0011
        gbc.setState(0xe25e, 0xa1e4, 0xd430, 0x9c1b, 0x1c8f, 0xfe85, 0x0, 0x1);
        gbc.writeMem(0xe25e, { 0xcb, 0x7e });
        gbc.writeMem(0xfe85, { 0x3e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa1e4, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25e));
        EXPECT(0x7e, gbc.readMem(0xe25f));
        EXPECT(0x3e, gbc.readMem(0xfe85));
        // CB 7E 0012
        gbc.setState(0x139c, 0xbbbc, 0x46a0, 0xb732, 0x41e2, 0x267c, 0x0, 0x0);
        gbc.writeMem(0x139c, { 0xcb, 0x7e });
        gbc.writeMem(0x267c, { 0xb6 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xbbbc, gbc.sp());
        EXPECT(0x139e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0013
        gbc.setState(0xa723, 0xfcb, 0x5610, 0xf000, 0x50d6, 0xad0c, 0x1, 0x0);
        gbc.writeMem(0xa723, { 0xcb, 0x7e });
        gbc.writeMem(0xad0c, { 0xbb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfcb, gbc.sp());
        EXPECT(0xa725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa723));
        EXPECT(0x7e, gbc.readMem(0xa724));
        EXPECT(0xbb, gbc.readMem(0xad0c));
        // CB 7E 0014
        gbc.setState(0xb8f3, 0xc024, 0x6880, 0xc897, 0x8933, 0xa755, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0x9b });
        gbc.writeMem(0xb8f3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc024, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa755));
        EXPECT(0xcb, gbc.readMem(0xb8f3));
        EXPECT(0x7e, gbc.readMem(0xb8f4));
        // CB 7E 0015
        gbc.setState(0x6250, 0xb38c, 0x2fa0, 0xc1a7, 0xda31, 0xd61f, 0x0, 0x1);
        gbc.writeMem(0x6250, { 0xcb, 0x7e });
        gbc.writeMem(0xd61f, { 0xf4 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb38c, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xd61f));
        // CB 7E 0016
        gbc.setState(0x520b, 0x9d56, 0x11d0, 0xb497, 0xb280, 0x715e, 0x1, 0x0);
        gbc.writeMem(0x520b, { 0xcb, 0x7e });
        gbc.writeMem(0x715e, { 0xad });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9d56, gbc.sp());
        EXPECT(0x520d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0017
        gbc.setState(0xdafa, 0x92f5, 0xbaa0, 0x1477, 0x1fdd, 0xe7fa, 0x0, 0x1);
        gbc.writeMem(0xdafa, { 0xcb, 0x7e });
        gbc.writeMem(0xe7fa, { 0x20 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0xdafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafa));
        EXPECT(0x7e, gbc.readMem(0xdafb));
        EXPECT(0x20, gbc.readMem(0xe7fa));
        // CB 7E 0018
        gbc.setState(0xd3c6, 0x74a8, 0x60e0, 0x63f3, 0xcd7, 0xe1c8, 0x0, 0x1);
        gbc.writeMem(0xd3c6, { 0xcb, 0x7e });
        gbc.writeMem(0xe1c8, { 0x51 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x74a8, gbc.sp());
        EXPECT(0xd3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c6));
        EXPECT(0x7e, gbc.readMem(0xd3c7));
        EXPECT(0x51, gbc.readMem(0xe1c8));
        // CB 7E 0019
        gbc.setState(0x11a8, 0xe3f8, 0xd620, 0x9b08, 0xa31c, 0x473a, 0x1, 0x1);
        gbc.writeMem(0x11a8, { 0xcb, 0x7e });
        gbc.writeMem(0x473a, { 0xfa });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe3f8, gbc.sp());
        EXPECT(0x11aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 001A
        gbc.setState(0xcbd8, 0x642c, 0x3760, 0xdaab, 0x2312, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x72f9, { 0xef });
        gbc.writeMem(0xcbd8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0xcbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd8));
        EXPECT(0x7e, gbc.readMem(0xcbd9));
        // CB 7E 001B
        gbc.setState(0xc8c, 0x1b20, 0xc90, 0x6810, 0xa198, 0xa604, 0x0, 0x1);
        gbc.writeMem(0xc8c, { 0xcb, 0x7e });
        gbc.writeMem(0xa604, { 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1b20, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa604));
        // CB 7E 001C
        gbc.setState(0x6b80, 0xb061, 0x3280, 0xea54, 0x1215, 0xa19e, 0x0, 0x0);
        gbc.writeMem(0x6b80, { 0xcb, 0x7e });
        gbc.writeMem(0xa19e, { 0xea });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb061, gbc.sp());
        EXPECT(0x6b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xa19e));
        // CB 7E 001D
        gbc.setState(0x5115, 0xd001, 0xbb00, 0xc71, 0x41e8, 0x3832, 0x0, 0x0);
        gbc.writeMem(0x3832, { 0xc5 });
        gbc.writeMem(0x5115, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd001, gbc.sp());
        EXPECT(0x5117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 001E
        gbc.setState(0xa551, 0xbe80, 0xcec0, 0x379a, 0x20ca, 0x8c1e, 0x0, 0x0);
        gbc.writeMem(0x8c1e, { 0x61 });
        gbc.writeMem(0xa551, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbe80, gbc.sp());
        EXPECT(0xa553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8c1e));
        EXPECT(0xcb, gbc.readMem(0xa551));
        EXPECT(0x7e, gbc.readMem(0xa552));
        // CB 7E 001F
        gbc.setState(0x153a, 0x9a9b, 0xe8c0, 0xbcba, 0x3ee7, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0x153a, { 0xcb, 0x7e });
        gbc.writeMem(0xd9e7, { 0xd6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9a9b, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd9e7));
        // CB 7E 0020
        gbc.setState(0xcdb5, 0x9f6c, 0xe50, 0xc3b2, 0xb7c3, 0x3fde, 0x0, 0x1);
        gbc.writeMem(0x3fde, { 0xac });
        gbc.writeMem(0xcdb5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9f6c, gbc.sp());
        EXPECT(0xcdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb5));
        EXPECT(0x7e, gbc.readMem(0xcdb6));
        // CB 7E 0021
        gbc.setState(0xdb0e, 0x5484, 0xe450, 0xf61, 0x74f5, 0xf608, 0x0, 0x0);
        gbc.writeMem(0xdb0e, { 0xcb, 0x7e });
        gbc.writeMem(0xf608, { 0x5a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5484, gbc.sp());
        EXPECT(0xdb10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0e));
        EXPECT(0x7e, gbc.readMem(0xdb0f));
        EXPECT(0x5a, gbc.readMem(0xf608));
        // CB 7E 0022
        gbc.setState(0xae03, 0xb0dc, 0xb980, 0x394, 0x4500, 0x78cf, 0x1, 0x0);
        gbc.writeMem(0x78cf, { 0x77 });
        gbc.writeMem(0xae03, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb0dc, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae03));
        EXPECT(0x7e, gbc.readMem(0xae04));
        // CB 7E 0023
        gbc.setState(0x7bdb, 0x8189, 0xd300, 0xc555, 0x9898, 0x3faa, 0x1, 0x1);
        gbc.writeMem(0x3faa, { 0x6d });
        gbc.writeMem(0x7bdb, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8189, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0024
        gbc.setState(0xe75e, 0xd470, 0x3c90, 0xfd01, 0xa6d0, 0x1a12, 0x0, 0x1);
        gbc.writeMem(0x1a12, { 0xc7 });
        gbc.writeMem(0xe75e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd470, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75e));
        EXPECT(0x7e, gbc.readMem(0xe75f));
        // CB 7E 0025
        gbc.setState(0x33da, 0x49e4, 0xa2f0, 0x54f, 0x99c9, 0x943a, 0x1, 0x0);
        gbc.writeMem(0x33da, { 0xcb, 0x7e });
        gbc.writeMem(0x943a, { 0x51 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x49e4, gbc.sp());
        EXPECT(0x33dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x943a));
        // CB 7E 0026
        gbc.setState(0xa123, 0x41c4, 0x1470, 0x963f, 0x203e, 0xd559, 0x1, 0x0);
        gbc.writeMem(0xa123, { 0xcb, 0x7e });
        gbc.writeMem(0xd559, { 0xf6 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x41c4, gbc.sp());
        EXPECT(0xa125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa123));
        EXPECT(0x7e, gbc.readMem(0xa124));
        EXPECT(0xf6, gbc.readMem(0xd559));
        // CB 7E 0027
        gbc.setState(0x5868, 0x646e, 0x82a0, 0x7100, 0x8f3d, 0x5904, 0x1, 0x1);
        gbc.writeMem(0x5868, { 0xcb, 0x7e });
        gbc.writeMem(0x5904, { 0x61 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x646e, gbc.sp());
        EXPECT(0x586a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0028
        gbc.setState(0x5fd1, 0xb53e, 0xf540, 0x3ff, 0x4d66, 0x3375, 0x1, 0x1);
        gbc.writeMem(0x3375, { 0x95 });
        gbc.writeMem(0x5fd1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0x5fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0029
        gbc.setState(0xd58b, 0x47b6, 0x7670, 0x385c, 0x8d58, 0x3d60, 0x0, 0x1);
        gbc.writeMem(0x3d60, { 0x49 });
        gbc.writeMem(0xd58b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x47b6, gbc.sp());
        EXPECT(0xd58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58b));
        EXPECT(0x7e, gbc.readMem(0xd58c));
        // CB 7E 002A
        gbc.setState(0x5c32, 0x639a, 0x6370, 0xda8e, 0xf399, 0x34ac, 0x0, 0x0);
        gbc.writeMem(0x34ac, { 0xf8 });
        gbc.writeMem(0x5c32, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x639a, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 002B
        gbc.setState(0x5ff9, 0xe06d, 0xb300, 0xb24c, 0x7977, 0xbfb, 0x1, 0x1);
        gbc.writeMem(0xbfb, { 0xcb });
        gbc.writeMem(0x5ff9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0x5ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 002C
        gbc.setState(0xc5ed, 0x9690, 0x8d80, 0x384, 0x8a70, 0x6675, 0x0, 0x0);
        gbc.writeMem(0x6675, { 0xac });
        gbc.writeMem(0xc5ed, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9690, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ed));
        EXPECT(0x7e, gbc.readMem(0xc5ee));
        // CB 7E 002D
        gbc.setState(0x2bde, 0x45a5, 0x19d0, 0x4e89, 0xbb32, 0xd222, 0x0, 0x0);
        gbc.writeMem(0x2bde, { 0xcb, 0x7e });
        gbc.writeMem(0xd222, { 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x45a5, gbc.sp());
        EXPECT(0x2be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd222));
        // CB 7E 002E
        gbc.setState(0x227b, 0x5e0c, 0xc910, 0x592d, 0x5ee4, 0x23c0, 0x1, 0x1);
        gbc.writeMem(0x227b, { 0xcb, 0x7e });
        gbc.writeMem(0x23c0, { 0xde });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5e0c, gbc.sp());
        EXPECT(0x227d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 002F
        gbc.setState(0x342b, 0x7104, 0x4bd0, 0x3f34, 0x27a7, 0xb537, 0x1, 0x1);
        gbc.writeMem(0x342b, { 0xcb, 0x7e });
        gbc.writeMem(0xb537, { 0xbb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7104, gbc.sp());
        EXPECT(0x342d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb537));
        // CB 7E 0030
        gbc.setState(0xd61a, 0xafc8, 0xb680, 0x239, 0x42fd, 0xed8e, 0x0, 0x1);
        gbc.writeMem(0xd61a, { 0xcb, 0x7e });
        gbc.writeMem(0xed8e, { 0x44 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xafc8, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61a));
        EXPECT(0x7e, gbc.readMem(0xd61b));
        EXPECT(0x44, gbc.readMem(0xed8e));
        // CB 7E 0031
        gbc.setState(0x6574, 0x2106, 0x9e70, 0x71b6, 0x4a00, 0xeed0, 0x0, 0x0);
        gbc.writeMem(0x6574, { 0xcb, 0x7e });
        gbc.writeMem(0xeed0, { 0x3 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2106, gbc.sp());
        EXPECT(0x6576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xeed0));
        // CB 7E 0033
        gbc.setState(0x31, 0xb54d, 0x3fa0, 0xaffc, 0x98f7, 0xd07b, 0x1, 0x1);
        gbc.writeMem(0x31, { 0xcb, 0x7e });
        gbc.writeMem(0xd07b, { 0x53 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0x33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd07b));
        // CB 7E 0034
        gbc.setState(0x98f, 0x42b0, 0x5710, 0xa1c5, 0x741c, 0x2a24, 0x0, 0x1);
        gbc.writeMem(0x98f, { 0xcb, 0x7e });
        gbc.writeMem(0x2a24, { 0xc9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x42b0, gbc.sp());
        EXPECT(0x991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0036
        gbc.setState(0x5ece, 0xd434, 0xa730, 0x77dc, 0xd57a, 0xf12b, 0x0, 0x0);
        gbc.writeMem(0x5ece, { 0xcb, 0x7e });
        gbc.writeMem(0xf12b, { 0x7c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x5ed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xf12b));
        // CB 7E 0037
        gbc.setState(0x5d70, 0x5c0f, 0x1e70, 0x3fc6, 0xef40, 0x640b, 0x1, 0x1);
        gbc.writeMem(0x5d70, { 0xcb, 0x7e });
        gbc.writeMem(0x640b, { 0xb6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5c0f, gbc.sp());
        EXPECT(0x5d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0038
        gbc.setState(0x74c4, 0x2b35, 0x53d0, 0x8606, 0x5633, 0xc09d, 0x0, 0x1);
        gbc.writeMem(0x74c4, { 0xcb, 0x7e });
        gbc.writeMem(0xc09d, { 0x69 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0x74c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc09d));
        // CB 7E 0039
        gbc.setState(0x7be3, 0xc126, 0x51a0, 0x3efa, 0x1b02, 0x2969, 0x1, 0x0);
        gbc.writeMem(0x2969, { 0x37 });
        gbc.writeMem(0x7be3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc126, gbc.sp());
        EXPECT(0x7be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 003B
        gbc.setState(0x28c8, 0xbdfe, 0xa590, 0x407d, 0x83e3, 0x434a, 0x0, 0x1);
        gbc.writeMem(0x28c8, { 0xcb, 0x7e });
        gbc.writeMem(0x434a, { 0x9e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbdfe, gbc.sp());
        EXPECT(0x28ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 003C
        gbc.setState(0x2a95, 0x8b94, 0x4060, 0xfc89, 0x39f4, 0x6617, 0x0, 0x1);
        gbc.writeMem(0x2a95, { 0xcb, 0x7e });
        gbc.writeMem(0x6617, { 0xb4 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0x2a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 003D
        gbc.setState(0xcd4f, 0x4567, 0x4370, 0xf39b, 0xf005, 0xb83, 0x1, 0x0);
        gbc.writeMem(0xb83, { 0xb0 });
        gbc.writeMem(0xcd4f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4567, gbc.sp());
        EXPECT(0xcd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4f));
        EXPECT(0x7e, gbc.readMem(0xcd50));
        // CB 7E 003E
        gbc.setState(0x1e33, 0x2448, 0xfca0, 0xff52, 0x440e, 0xd87c, 0x1, 0x1);
        gbc.writeMem(0x1e33, { 0xcb, 0x7e });
        gbc.writeMem(0xd87c, { 0x52 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0x1e35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xd87c));
        // CB 7E 003F
        gbc.setState(0x657f, 0xf739, 0x5540, 0x4583, 0x153c, 0x3f72, 0x1, 0x1);
        gbc.writeMem(0x3f72, { 0xd4 });
        gbc.writeMem(0x657f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf739, gbc.sp());
        EXPECT(0x6581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0040
        gbc.setState(0x4e78, 0x6b23, 0x4860, 0xc320, 0x3a7d, 0x4d63, 0x0, 0x0);
        gbc.writeMem(0x4d63, { 0x1f });
        gbc.writeMem(0x4e78, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6b23, gbc.sp());
        EXPECT(0x4e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0041
        gbc.setState(0xa746, 0xb884, 0x34c0, 0x8fd8, 0x3b30, 0xb8f2, 0x0, 0x1);
        gbc.writeMem(0xa746, { 0xcb, 0x7e });
        gbc.writeMem(0xb8f2, { 0x4d });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb884, gbc.sp());
        EXPECT(0xa748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa746));
        EXPECT(0x7e, gbc.readMem(0xa747));
        EXPECT(0x4d, gbc.readMem(0xb8f2));
        // CB 7E 0042
        gbc.setState(0xd2d2, 0x468a, 0xd220, 0x31e7, 0x6da5, 0x1ed7, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0x7e });
        gbc.writeMem(0xd2d2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x468a, gbc.sp());
        EXPECT(0xd2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d2));
        EXPECT(0x7e, gbc.readMem(0xd2d3));
        // CB 7E 0043
        gbc.setState(0x89d7, 0xfa61, 0xe570, 0x955a, 0x9f24, 0x8087, 0x0, 0x1);
        gbc.writeMem(0x8087, { 0xdf });
        gbc.writeMem(0x89d7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfa61, gbc.sp());
        EXPECT(0x89d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8087));
        EXPECT(0xcb, gbc.readMem(0x89d7));
        EXPECT(0x7e, gbc.readMem(0x89d8));
        // CB 7E 0044
        gbc.setState(0x9c3, 0x7fd5, 0x2db0, 0x6bb5, 0x7211, 0xa480, 0x1, 0x0);
        gbc.writeMem(0x9c3, { 0xcb, 0x7e });
        gbc.writeMem(0xa480, { 0x91 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7fd5, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa480));
        // CB 7E 0045
        gbc.setState(0x40c3, 0x3536, 0x8c0, 0x6a4d, 0x80ce, 0x89f5, 0x0, 0x1);
        gbc.writeMem(0x40c3, { 0xcb, 0x7e });
        gbc.writeMem(0x89f5, { 0x14 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3536, gbc.sp());
        EXPECT(0x40c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0x89f5));
        // CB 7E 0046
        gbc.setState(0x8120, 0xd60f, 0x64b0, 0xf1, 0x54e7, 0x6603, 0x0, 0x0);
        gbc.writeMem(0x6603, { 0xcc });
        gbc.writeMem(0x8120, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd60f, gbc.sp());
        EXPECT(0x8122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8120));
        EXPECT(0x7e, gbc.readMem(0x8121));
        // CB 7E 0047
        gbc.setState(0x2c20, 0xb4d4, 0xfef0, 0x84cd, 0xc706, 0xafc9, 0x1, 0x0);
        gbc.writeMem(0x2c20, { 0xcb, 0x7e });
        gbc.writeMem(0xafc9, { 0xe4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb4d4, gbc.sp());
        EXPECT(0x2c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xafc9));
        // CB 7E 0048
        gbc.setState(0xe9dd, 0xc667, 0xb5f0, 0x9f5d, 0x4412, 0xf9cd, 0x1, 0x0);
        gbc.writeMem(0xe9dd, { 0xcb, 0x7e });
        gbc.writeMem(0xf9cd, { 0xde });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc667, gbc.sp());
        EXPECT(0xe9df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9dd));
        EXPECT(0x7e, gbc.readMem(0xe9de));
        EXPECT(0xde, gbc.readMem(0xf9cd));
        // CB 7E 0049
        gbc.setState(0x86e7, 0x88f4, 0xe3a0, 0xcbdc, 0x4135, 0xcb37, 0x0, 0x1);
        gbc.writeMem(0x86e7, { 0xcb, 0x7e });
        gbc.writeMem(0xcb37, { 0xa2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x88f4, gbc.sp());
        EXPECT(0x86e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e7));
        EXPECT(0x7e, gbc.readMem(0x86e8));
        EXPECT(0xa2, gbc.readMem(0xcb37));
        // CB 7E 004A
        gbc.setState(0xd87a, 0x42b2, 0xfb50, 0x8f22, 0x925e, 0x82e5, 0x0, 0x1);
        gbc.writeMem(0x82e5, { 0x0 });
        gbc.writeMem(0xd87a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x42b2, gbc.sp());
        EXPECT(0xd87c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x82e5));
        EXPECT(0xcb, gbc.readMem(0xd87a));
        EXPECT(0x7e, gbc.readMem(0xd87b));
        // CB 7E 004B
        gbc.setState(0x44f5, 0x6083, 0xb5c0, 0x4e1f, 0xe11b, 0x357, 0x1, 0x1);
        gbc.writeMem(0x357, { 0x53 });
        gbc.writeMem(0x44f5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0x44f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 004C
        gbc.setState(0x281e, 0x68a5, 0x8630, 0x8d78, 0x6efb, 0x321b, 0x0, 0x0);
        gbc.writeMem(0x281e, { 0xcb, 0x7e });
        gbc.writeMem(0x321b, { 0xa8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x68a5, gbc.sp());
        EXPECT(0x2820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 004D
        gbc.setState(0x71d1, 0x8b10, 0xf8f0, 0x2248, 0x3201, 0x962d, 0x1, 0x1);
        gbc.writeMem(0x71d1, { 0xcb, 0x7e });
        gbc.writeMem(0x962d, { 0xb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8b10, gbc.sp());
        EXPECT(0x71d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x962d));
        // CB 7E 004E
        gbc.setState(0x9f71, 0x2c64, 0xae50, 0x498b, 0x3d7e, 0x1dab, 0x1, 0x0);
        gbc.writeMem(0x1dab, { 0x7d });
        gbc.writeMem(0x9f71, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2c64, gbc.sp());
        EXPECT(0x9f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f71));
        EXPECT(0x7e, gbc.readMem(0x9f72));
        // CB 7E 004F
        gbc.setState(0x5a41, 0xfaa2, 0x2b00, 0x7ba8, 0x22c5, 0x3a18, 0x0, 0x0);
        gbc.writeMem(0x3a18, { 0x34 });
        gbc.writeMem(0x5a41, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0x5a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0050
        gbc.setState(0x29a1, 0x373, 0xd2c0, 0xca2d, 0x372, 0xaeb9, 0x1, 0x1);
        gbc.writeMem(0x29a1, { 0xcb, 0x7e });
        gbc.writeMem(0xaeb9, { 0x25 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x373, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaeb9));
        // CB 7E 0051
        gbc.setState(0x1d, 0x4f6b, 0xbcc0, 0x654b, 0x3db2, 0x7b45, 0x0, 0x0);
        gbc.writeMem(0x1d, { 0xcb, 0x7e });
        gbc.writeMem(0x7b45, { 0x66 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4f6b, gbc.sp());
        EXPECT(0x1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0053
        gbc.setState(0xd8b5, 0x164, 0x9140, 0xf154, 0x8910, 0x57d2, 0x0, 0x1);
        gbc.writeMem(0x57d2, { 0x5 });
        gbc.writeMem(0xd8b5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x164, gbc.sp());
        EXPECT(0xd8b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b5));
        EXPECT(0x7e, gbc.readMem(0xd8b6));
        // CB 7E 0054
        gbc.setState(0x636a, 0x1951, 0x8560, 0x5ee4, 0xb379, 0x2b6e, 0x1, 0x1);
        gbc.writeMem(0x2b6e, { 0x34 });
        gbc.writeMem(0x636a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1951, gbc.sp());
        EXPECT(0x636c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0055
        gbc.setState(0xba3d, 0x203c, 0x52c0, 0xe98f, 0x453c, 0x3641, 0x0, 0x1);
        gbc.writeMem(0x3641, { 0xe6 });
        gbc.writeMem(0xba3d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x203c, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0x7e, gbc.readMem(0xba3e));
        // CB 7E 0056
        gbc.setState(0x652a, 0xb5a3, 0x7680, 0x3e97, 0xe921, 0xeb50, 0x0, 0x1);
        gbc.writeMem(0x652a, { 0xcb, 0x7e });
        gbc.writeMem(0xeb50, { 0xb8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb5a3, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xeb50));
        // CB 7E 0057
        gbc.setState(0xba17, 0x8dfa, 0x6b90, 0x38dc, 0xa5e2, 0x9efa, 0x0, 0x0);
        gbc.writeMem(0x9efa, { 0x30 });
        gbc.writeMem(0xba17, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8dfa, gbc.sp());
        EXPECT(0xba19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x9efa));
        EXPECT(0xcb, gbc.readMem(0xba17));
        EXPECT(0x7e, gbc.readMem(0xba18));
        // CB 7E 0058
        gbc.setState(0xe319, 0x776e, 0x8010, 0xedc8, 0x8d16, 0xea64, 0x1, 0x0);
        gbc.writeMem(0xe319, { 0xcb, 0x7e });
        gbc.writeMem(0xea64, { 0x47 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x776e, gbc.sp());
        EXPECT(0xe31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe319));
        EXPECT(0x7e, gbc.readMem(0xe31a));
        EXPECT(0x47, gbc.readMem(0xea64));
        // CB 7E 0059
        gbc.setState(0x5009, 0x6de8, 0x6ae0, 0xc2db, 0x57a, 0xb368, 0x0, 0x0);
        gbc.writeMem(0x5009, { 0xcb, 0x7e });
        gbc.writeMem(0xb368, { 0xa9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6de8, gbc.sp());
        EXPECT(0x500b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xb368));
        // CB 7E 005A
        gbc.setState(0x9169, 0x9b7c, 0x7d30, 0x98fd, 0xa124, 0xf615, 0x0, 0x1);
        gbc.writeMem(0x9169, { 0xcb, 0x7e });
        gbc.writeMem(0xf615, { 0x82 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b7c, gbc.sp());
        EXPECT(0x916b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9169));
        EXPECT(0x7e, gbc.readMem(0x916a));
        EXPECT(0x82, gbc.readMem(0xf615));
        // CB 7E 005B
        gbc.setState(0xdb2d, 0x5365, 0xfe50, 0x2d9, 0xbe76, 0x3cb7, 0x1, 0x1);
        gbc.writeMem(0x3cb7, { 0x96 });
        gbc.writeMem(0xdb2d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5365, gbc.sp());
        EXPECT(0xdb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb2d));
        EXPECT(0x7e, gbc.readMem(0xdb2e));
        // CB 7E 005C
        gbc.setState(0xa38c, 0xc29c, 0x1540, 0x9b98, 0x353, 0xc92e, 0x0, 0x1);
        gbc.writeMem(0xa38c, { 0xcb, 0x7e });
        gbc.writeMem(0xc92e, { 0x38 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc29c, gbc.sp());
        EXPECT(0xa38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38c));
        EXPECT(0x7e, gbc.readMem(0xa38d));
        EXPECT(0x38, gbc.readMem(0xc92e));
        // CB 7E 005D
        gbc.setState(0x4277, 0x82a5, 0xe5a0, 0x39a0, 0xa586, 0x8a50, 0x1, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0x7e });
        gbc.writeMem(0x8a50, { 0x33 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x82a5, gbc.sp());
        EXPECT(0x4279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8a50));
        // CB 7E 005E
        gbc.setState(0xd57b, 0x65be, 0x8ea0, 0x5f11, 0xba02, 0x4410, 0x1, 0x0);
        gbc.writeMem(0x4410, { 0x1e });
        gbc.writeMem(0xd57b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x65be, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57b));
        EXPECT(0x7e, gbc.readMem(0xd57c));
        // CB 7E 005F
        gbc.setState(0xc209, 0x76f1, 0x7a90, 0xeb05, 0x3ae0, 0xe375, 0x1, 0x0);
        gbc.writeMem(0xc209, { 0xcb, 0x7e });
        gbc.writeMem(0xe375, { 0xe6 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0xc20b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc209));
        EXPECT(0x7e, gbc.readMem(0xc20a));
        EXPECT(0xe6, gbc.readMem(0xe375));
        // CB 7E 0060
        gbc.setState(0x62a8, 0x3ca1, 0xd760, 0x2f2b, 0xa504, 0xa270, 0x0, 0x1);
        gbc.writeMem(0x62a8, { 0xcb, 0x7e });
        gbc.writeMem(0xa270, { 0x8d });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3ca1, gbc.sp());
        EXPECT(0x62aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xa270));
        // CB 7E 0061
        gbc.setState(0x2b62, 0x5007, 0xe760, 0x6d17, 0xa11e, 0xe8db, 0x0, 0x1);
        gbc.writeMem(0x2b62, { 0xcb, 0x7e });
        gbc.writeMem(0xe8db, { 0x22 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5007, gbc.sp());
        EXPECT(0x2b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe8db));
        // CB 7E 0062
        gbc.setState(0x60f4, 0x930e, 0xcf00, 0x89aa, 0xd171, 0xec74, 0x0, 0x1);
        gbc.writeMem(0x60f4, { 0xcb, 0x7e });
        gbc.writeMem(0xec74, { 0x99 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x930e, gbc.sp());
        EXPECT(0x60f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xec74));
        // CB 7E 0063
        gbc.setState(0xb59f, 0xac49, 0x77e0, 0x2898, 0x470d, 0xd284, 0x1, 0x0);
        gbc.writeMem(0xb59f, { 0xcb, 0x7e });
        gbc.writeMem(0xd284, { 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xac49, gbc.sp());
        EXPECT(0xb5a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb59f));
        EXPECT(0x7e, gbc.readMem(0xb5a0));
        EXPECT(0x9f, gbc.readMem(0xd284));
        // CB 7E 0064
        gbc.setState(0x8d5, 0x76cd, 0xbd70, 0x8495, 0x275, 0xefb5, 0x1, 0x1);
        gbc.writeMem(0x8d5, { 0xcb, 0x7e });
        gbc.writeMem(0xefb5, { 0x29 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xefb5));
        // CB 7E 0065
        gbc.setState(0x8053, 0x75f6, 0xdb00, 0xad55, 0xac10, 0x63fe, 0x1, 0x1);
        gbc.writeMem(0x63fe, { 0xc4 });
        gbc.writeMem(0x8053, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x75f6, gbc.sp());
        EXPECT(0x8055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8053));
        EXPECT(0x7e, gbc.readMem(0x8054));
        // CB 7E 0066
        gbc.setState(0xa9f8, 0x6185, 0xca00, 0x7be5, 0x940e, 0x740e, 0x1, 0x1);
        gbc.writeMem(0x740e, { 0x63 });
        gbc.writeMem(0xa9f8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6185, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f8));
        EXPECT(0x7e, gbc.readMem(0xa9f9));
        // CB 7E 0067
        gbc.setState(0xec75, 0x8bfb, 0x5f20, 0xa567, 0xa01d, 0x827e, 0x0, 0x0);
        gbc.writeMem(0x827e, { 0x4a });
        gbc.writeMem(0xec75, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8bfb, gbc.sp());
        EXPECT(0xec77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x827e));
        EXPECT(0xcb, gbc.readMem(0xec75));
        EXPECT(0x7e, gbc.readMem(0xec76));
        // CB 7E 0068
        gbc.setState(0x463c, 0x9894, 0xd300, 0xfe32, 0x3766, 0x1737, 0x0, 0x1);
        gbc.writeMem(0x1737, { 0x4b });
        gbc.writeMem(0x463c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9894, gbc.sp());
        EXPECT(0x463e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0069
        gbc.setState(0x96f7, 0x5143, 0xb2b0, 0x8ffb, 0xa535, 0x7a4, 0x0, 0x1);
        gbc.writeMem(0x7a4, { 0xa3 });
        gbc.writeMem(0x96f7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5143, gbc.sp());
        EXPECT(0x96f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f7));
        EXPECT(0x7e, gbc.readMem(0x96f8));
        // CB 7E 006A
        gbc.setState(0x920c, 0x170c, 0x8260, 0x7e42, 0x91e6, 0x90e9, 0x0, 0x1);
        gbc.writeMem(0x90e9, { 0xc7 });
        gbc.writeMem(0x920c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x170c, gbc.sp());
        EXPECT(0x920e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x90e9));
        EXPECT(0xcb, gbc.readMem(0x920c));
        EXPECT(0x7e, gbc.readMem(0x920d));
        // CB 7E 006C
        gbc.setState(0x9f66, 0x85d3, 0x5320, 0x7b18, 0xeec4, 0x3d2d, 0x0, 0x1);
        gbc.writeMem(0x3d2d, { 0x6b });
        gbc.writeMem(0x9f66, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x85d3, gbc.sp());
        EXPECT(0x9f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f66));
        EXPECT(0x7e, gbc.readMem(0x9f67));
        // CB 7E 006D
        gbc.setState(0xa80a, 0x7c0f, 0xcc90, 0xbaa0, 0xc9ec, 0x57ec, 0x0, 0x1);
        gbc.writeMem(0x57ec, { 0x83 });
        gbc.writeMem(0xa80a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7c0f, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0x7e, gbc.readMem(0xa80b));
        // CB 7E 006E
        gbc.setState(0x7896, 0x1b97, 0xe2f0, 0xb395, 0xc7d9, 0x620b, 0x0, 0x0);
        gbc.writeMem(0x620b, { 0x21 });
        gbc.writeMem(0x7896, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1b97, gbc.sp());
        EXPECT(0x7898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 006F
        gbc.setState(0xab68, 0x28ec, 0xbac0, 0x7845, 0xfc16, 0x5070, 0x1, 0x1);
        gbc.writeMem(0x5070, { 0x64 });
        gbc.writeMem(0xab68, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x28ec, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab68));
        EXPECT(0x7e, gbc.readMem(0xab69));
        // CB 7E 0070
        gbc.setState(0x8331, 0x75c6, 0xdf0, 0xb5c2, 0x9e90, 0x561f, 0x0, 0x0);
        gbc.writeMem(0x561f, { 0x1b });
        gbc.writeMem(0x8331, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x75c6, gbc.sp());
        EXPECT(0x8333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8331));
        EXPECT(0x7e, gbc.readMem(0x8332));
        // CB 7E 0071
        gbc.setState(0xb764, 0x284f, 0x7680, 0x753d, 0xcbcb, 0x4306, 0x1, 0x0);
        gbc.writeMem(0x4306, { 0x3d });
        gbc.writeMem(0xb764, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x284f, gbc.sp());
        EXPECT(0xb766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb764));
        EXPECT(0x7e, gbc.readMem(0xb765));
        // CB 7E 0072
        gbc.setState(0x45a9, 0x2d20, 0x3b50, 0x3ca1, 0xf6ed, 0x638, 0x0, 0x0);
        gbc.writeMem(0x638, { 0xc5 });
        gbc.writeMem(0x45a9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2d20, gbc.sp());
        EXPECT(0x45ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0073
        gbc.setState(0x3208, 0x31ae, 0x8c90, 0x3810, 0xef38, 0xac11, 0x1, 0x0);
        gbc.writeMem(0x3208, { 0xcb, 0x7e });
        gbc.writeMem(0xac11, { 0x69 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x31ae, gbc.sp());
        EXPECT(0x320a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xac11));
        // CB 7E 0074
        gbc.setState(0x8a8e, 0x31ec, 0xec50, 0x7114, 0x6200, 0x32a3, 0x1, 0x0);
        gbc.writeMem(0x32a3, { 0xd9 });
        gbc.writeMem(0x8a8e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x31ec, gbc.sp());
        EXPECT(0x8a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a8e));
        EXPECT(0x7e, gbc.readMem(0x8a8f));
        // CB 7E 0075
        gbc.setState(0x4b0a, 0x8cb1, 0x9d90, 0x9cad, 0x7f27, 0xf0f0, 0x0, 0x1);
        gbc.writeMem(0x4b0a, { 0xcb, 0x7e });
        gbc.writeMem(0xf0f0, { 0xb7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8cb1, gbc.sp());
        EXPECT(0x4b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf0f0));
        // CB 7E 0076
        gbc.setState(0x6c1d, 0x70ef, 0xfd0, 0xe1c, 0x116a, 0xbfb4, 0x0, 0x1);
        gbc.writeMem(0x6c1d, { 0xcb, 0x7e });
        gbc.writeMem(0xbfb4, { 0x94 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x70ef, gbc.sp());
        EXPECT(0x6c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbfb4));
        // CB 7E 0077
        gbc.setState(0x9797, 0x6971, 0x5f00, 0x264a, 0xc881, 0xc044, 0x0, 0x1);
        gbc.writeMem(0x9797, { 0xcb, 0x7e });
        gbc.writeMem(0xc044, { 0x1c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0x9799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9797));
        EXPECT(0x7e, gbc.readMem(0x9798));
        EXPECT(0x1c, gbc.readMem(0xc044));
        // CB 7E 0078
        gbc.setState(0x90dd, 0x5734, 0xa8d0, 0xea, 0x9cb0, 0x9502, 0x1, 0x0);
        gbc.writeMem(0x90dd, { 0xcb, 0x7e });
        gbc.writeMem(0x9502, { 0x1e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0x90df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90dd));
        EXPECT(0x7e, gbc.readMem(0x90de));
        EXPECT(0x1e, gbc.readMem(0x9502));
        // CB 7E 0079
        gbc.setState(0x51c, 0xc743, 0x9720, 0x8906, 0x8c32, 0x3a07, 0x1, 0x0);
        gbc.writeMem(0x51c, { 0xcb, 0x7e });
        gbc.writeMem(0x3a07, { 0x2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc743, gbc.sp());
        EXPECT(0x51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 007A
        gbc.setState(0x2b76, 0xaa7f, 0x6280, 0xc5a9, 0xc629, 0xe68f, 0x0, 0x1);
        gbc.writeMem(0x2b76, { 0xcb, 0x7e });
        gbc.writeMem(0xe68f, { 0xc7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaa7f, gbc.sp());
        EXPECT(0x2b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xe68f));
        // CB 7E 007B
        gbc.setState(0x5bb2, 0xe392, 0xc5a0, 0x6915, 0xf189, 0xe542, 0x1, 0x0);
        gbc.writeMem(0x5bb2, { 0xcb, 0x7e });
        gbc.writeMem(0xe542, { 0x5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0x5bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xe542));
        // CB 7E 007C
        gbc.setState(0x7eae, 0x196a, 0x3160, 0xadf5, 0x4402, 0xf0c1, 0x1, 0x1);
        gbc.writeMem(0x7eae, { 0xcb, 0x7e });
        gbc.writeMem(0xf0c1, { 0x56 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x196a, gbc.sp());
        EXPECT(0x7eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xf0c1));
        // CB 7E 007D
        gbc.setState(0x44c9, 0x5e4d, 0x56c0, 0xd83a, 0x148b, 0xa172, 0x1, 0x1);
        gbc.writeMem(0x44c9, { 0xcb, 0x7e });
        gbc.writeMem(0xa172, { 0x3a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0x44cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa172));
        // CB 7E 007E
        gbc.setState(0xcab0, 0x4ca9, 0x7380, 0x178b, 0xce8f, 0xe606, 0x0, 0x1);
        gbc.writeMem(0xcab0, { 0xcb, 0x7e });
        gbc.writeMem(0xe606, { 0xb0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0xcab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab0));
        EXPECT(0x7e, gbc.readMem(0xcab1));
        EXPECT(0xb0, gbc.readMem(0xe606));
        // CB 7E 007F
        gbc.setState(0xbcc3, 0xbe11, 0xf490, 0xda8d, 0x8814, 0xfbd0, 0x0, 0x1);
        gbc.writeMem(0xbcc3, { 0xcb, 0x7e });
        gbc.writeMem(0xfbd0, { 0x74 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc3));
        EXPECT(0x7e, gbc.readMem(0xbcc4));
        EXPECT(0x74, gbc.readMem(0xfbd0));
        // CB 7E 0080
        gbc.setState(0x831c, 0xd57b, 0x9060, 0x59e7, 0xddf8, 0x10ee, 0x1, 0x0);
        gbc.writeMem(0x10ee, { 0xbe });
        gbc.writeMem(0x831c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd57b, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x831c));
        EXPECT(0x7e, gbc.readMem(0x831d));
        // CB 7E 0081
        gbc.setState(0x3268, 0xc2ec, 0x5ac0, 0x6561, 0x4040, 0x5b0e, 0x0, 0x0);
        gbc.writeMem(0x3268, { 0xcb, 0x7e });
        gbc.writeMem(0x5b0e, { 0xb2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc2ec, gbc.sp());
        EXPECT(0x326a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0082
        gbc.setState(0xd94c, 0x9911, 0xa130, 0xb3e5, 0x4d, 0xf46, 0x1, 0x0);
        gbc.writeMem(0xf46, { 0x7f });
        gbc.writeMem(0xd94c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9911, gbc.sp());
        EXPECT(0xd94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd94c));
        EXPECT(0x7e, gbc.readMem(0xd94d));
        // CB 7E 0084
        gbc.setState(0xd1ed, 0xa777, 0x6750, 0x5d7, 0xb392, 0x85a3, 0x0, 0x0);
        gbc.writeMem(0x85a3, { 0x71 });
        gbc.writeMem(0xd1ed, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa777, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x85a3));
        EXPECT(0xcb, gbc.readMem(0xd1ed));
        EXPECT(0x7e, gbc.readMem(0xd1ee));
        // CB 7E 0085
        gbc.setState(0xb932, 0xbc4a, 0x5200, 0x14e7, 0xbee9, 0xabab, 0x1, 0x1);
        gbc.writeMem(0xabab, { 0x98 });
        gbc.writeMem(0xb932, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xbc4a, gbc.sp());
        EXPECT(0xb934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xabab));
        EXPECT(0xcb, gbc.readMem(0xb932));
        EXPECT(0x7e, gbc.readMem(0xb933));
        // CB 7E 0086
        gbc.setState(0xa7ea, 0x142c, 0xb030, 0x9a61, 0x7bec, 0xffc6, 0x0, 0x1);
        gbc.writeMem(0xa7ea, { 0xcb, 0x7e });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0xa7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ea));
        EXPECT(0x7e, gbc.readMem(0xa7eb));
        EXPECT(0x37, gbc.readMem(0xffc6));
        // CB 7E 0087
        gbc.setState(0x9c71, 0x11d2, 0x1a90, 0xcb0f, 0xaf46, 0x9d13, 0x0, 0x1);
        gbc.writeMem(0x9c71, { 0xcb, 0x7e });
        gbc.writeMem(0x9d13, { 0x18 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x11d2, gbc.sp());
        EXPECT(0x9c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c71));
        EXPECT(0x7e, gbc.readMem(0x9c72));
        EXPECT(0x18, gbc.readMem(0x9d13));
        // CB 7E 0088
        gbc.setState(0xd81d, 0x2511, 0xd100, 0x4060, 0x5a95, 0xfba2, 0x0, 0x0);
        gbc.writeMem(0xd81d, { 0xcb, 0x7e });
        gbc.writeMem(0xfba2, { 0xe8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2511, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81d));
        EXPECT(0x7e, gbc.readMem(0xd81e));
        EXPECT(0xe8, gbc.readMem(0xfba2));
        // CB 7E 0089
        gbc.setState(0xbaa9, 0x6076, 0xdc30, 0x8f3f, 0x6836, 0x57ea, 0x1, 0x1);
        gbc.writeMem(0x57ea, { 0x3 });
        gbc.writeMem(0xbaa9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6076, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa9));
        EXPECT(0x7e, gbc.readMem(0xbaaa));
        // CB 7E 008A
        gbc.setState(0x8a5b, 0x101e, 0xef70, 0x6b31, 0x5efd, 0xa8eb, 0x1, 0x0);
        gbc.writeMem(0x8a5b, { 0xcb, 0x7e });
        gbc.writeMem(0xa8eb, { 0x6c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x101e, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5b));
        EXPECT(0x7e, gbc.readMem(0x8a5c));
        EXPECT(0x6c, gbc.readMem(0xa8eb));
        // CB 7E 008B
        gbc.setState(0x18dd, 0x541, 0xe140, 0xae3, 0xe7aa, 0x7188, 0x1, 0x1);
        gbc.writeMem(0x18dd, { 0xcb, 0x7e });
        gbc.writeMem(0x7188, { 0x2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x541, gbc.sp());
        EXPECT(0x18df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 008C
        gbc.setState(0xbd5d, 0x2a91, 0x7590, 0xb720, 0x36ca, 0x2503, 0x0, 0x0);
        gbc.writeMem(0x2503, { 0xe4 });
        gbc.writeMem(0xbd5d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2a91, gbc.sp());
        EXPECT(0xbd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5d));
        EXPECT(0x7e, gbc.readMem(0xbd5e));
        // CB 7E 008D
        gbc.setState(0x1d4c, 0x3fd8, 0x76d0, 0xf294, 0x70f5, 0x92, 0x1, 0x1);
        gbc.writeMem(0x92, { 0xbb });
        gbc.writeMem(0x1d4c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3fd8, gbc.sp());
        EXPECT(0x1d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 008E
        gbc.setState(0xe0d9, 0xe70a, 0xe9e0, 0x2674, 0x77db, 0x748f, 0x0, 0x0);
        gbc.writeMem(0x748f, { 0xbd });
        gbc.writeMem(0xe0d9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe70a, gbc.sp());
        EXPECT(0xe0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0d9));
        EXPECT(0x7e, gbc.readMem(0xe0da));
        // CB 7E 008F
        gbc.setState(0xd36d, 0xb6cd, 0xaed0, 0xcbb8, 0x709e, 0xe0b4, 0x0, 0x0);
        gbc.writeMem(0xd36d, { 0xcb, 0x7e });
        gbc.writeMem(0xe0b4, { 0xf4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0xd36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd36d));
        EXPECT(0x7e, gbc.readMem(0xd36e));
        EXPECT(0xf4, gbc.readMem(0xe0b4));
        // CB 7E 0090
        gbc.setState(0x2c80, 0xd229, 0xc030, 0xfba2, 0xf639, 0xc75, 0x0, 0x0);
        gbc.writeMem(0xc75, { 0x3 });
        gbc.writeMem(0x2c80, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd229, gbc.sp());
        EXPECT(0x2c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0091
        gbc.setState(0x1e6, 0x409c, 0x1120, 0xb499, 0xa87e, 0xe688, 0x1, 0x0);
        gbc.writeMem(0x1e6, { 0xcb, 0x7e });
        gbc.writeMem(0xe688, { 0x2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x409c, gbc.sp());
        EXPECT(0x1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xe688));
        // CB 7E 0092
        gbc.setState(0xcdee, 0xfef4, 0x3180, 0x8723, 0x243b, 0xc738, 0x1, 0x0);
        gbc.writeMem(0xc738, { 0x1d });
        gbc.writeMem(0xcdee, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfef4, gbc.sp());
        EXPECT(0xcdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xc738));
        EXPECT(0xcb, gbc.readMem(0xcdee));
        EXPECT(0x7e, gbc.readMem(0xcdef));
        // CB 7E 0093
        gbc.setState(0x8b5d, 0xa523, 0xd4b0, 0x7a6e, 0xe708, 0x4daf, 0x1, 0x1);
        gbc.writeMem(0x4daf, { 0xbd });
        gbc.writeMem(0x8b5d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa523, gbc.sp());
        EXPECT(0x8b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5d));
        EXPECT(0x7e, gbc.readMem(0x8b5e));
        // CB 7E 0094
        gbc.setState(0x1434, 0x8d27, 0x53d0, 0xe5a5, 0x981b, 0x725a, 0x0, 0x0);
        gbc.writeMem(0x1434, { 0xcb, 0x7e });
        gbc.writeMem(0x725a, { 0x4d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8d27, gbc.sp());
        EXPECT(0x1436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0095
        gbc.setState(0x9808, 0xdecf, 0xa590, 0xa89c, 0x70b4, 0xbc68, 0x1, 0x1);
        gbc.writeMem(0x9808, { 0xcb, 0x7e });
        gbc.writeMem(0xbc68, { 0x90 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9808));
        EXPECT(0x7e, gbc.readMem(0x9809));
        EXPECT(0x90, gbc.readMem(0xbc68));
        // CB 7E 0096
        gbc.setState(0xc817, 0x6a0c, 0x24e0, 0xcd93, 0xff46, 0x2ad, 0x0, 0x0);
        gbc.writeMem(0x2ad, { 0x62 });
        gbc.writeMem(0xc817, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0xc819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc817));
        EXPECT(0x7e, gbc.readMem(0xc818));
        // CB 7E 0097
        gbc.setState(0x4644, 0x6956, 0x4f40, 0x1f8f, 0x5edd, 0x2bd9, 0x1, 0x1);
        gbc.writeMem(0x2bd9, { 0x16 });
        gbc.writeMem(0x4644, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6956, gbc.sp());
        EXPECT(0x4646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0098
        gbc.setState(0xbc20, 0x5fee, 0xe400, 0x70a2, 0xc73c, 0xae21, 0x0, 0x1);
        gbc.writeMem(0xae21, { 0x7a });
        gbc.writeMem(0xbc20, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5fee, gbc.sp());
        EXPECT(0xbc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xae21));
        EXPECT(0xcb, gbc.readMem(0xbc20));
        EXPECT(0x7e, gbc.readMem(0xbc21));
        // CB 7E 0099
        gbc.setState(0xa48a, 0x79d, 0xa040, 0x7673, 0xdae6, 0xea31, 0x0, 0x1);
        gbc.writeMem(0xa48a, { 0xcb, 0x7e });
        gbc.writeMem(0xea31, { 0xb8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x79d, gbc.sp());
        EXPECT(0xa48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48a));
        EXPECT(0x7e, gbc.readMem(0xa48b));
        EXPECT(0xb8, gbc.readMem(0xea31));
        // CB 7E 009A
        gbc.setState(0x9840, 0x6a0a, 0xe600, 0x180, 0xbdf0, 0x7b7c, 0x0, 0x0);
        gbc.writeMem(0x7b7c, { 0xe8 });
        gbc.writeMem(0x9840, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6a0a, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9840));
        EXPECT(0x7e, gbc.readMem(0x9841));
        // CB 7E 009B
        gbc.setState(0x6ee9, 0x16c9, 0x3c70, 0x3f8e, 0xf856, 0x4f76, 0x0, 0x0);
        gbc.writeMem(0x4f76, { 0xba });
        gbc.writeMem(0x6ee9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x6eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 009C
        gbc.setState(0xdaf8, 0x76fd, 0xada0, 0xb5c4, 0xebe5, 0x340c, 0x0, 0x0);
        gbc.writeMem(0x340c, { 0x89 });
        gbc.writeMem(0xdaf8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x76fd, gbc.sp());
        EXPECT(0xdafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf8));
        EXPECT(0x7e, gbc.readMem(0xdaf9));
        // CB 7E 009D
        gbc.setState(0xa7a3, 0x5897, 0xc6d0, 0xfb3a, 0xd331, 0xc582, 0x0, 0x1);
        gbc.writeMem(0xa7a3, { 0xcb, 0x7e });
        gbc.writeMem(0xc582, { 0xf8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5897, gbc.sp());
        EXPECT(0xa7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a3));
        EXPECT(0x7e, gbc.readMem(0xa7a4));
        EXPECT(0xf8, gbc.readMem(0xc582));
        // CB 7E 009E
        gbc.setState(0x7d7d, 0x23c0, 0xdc70, 0x6bf1, 0x2410, 0xdeaa, 0x0, 0x0);
        gbc.writeMem(0x7d7d, { 0xcb, 0x7e });
        gbc.writeMem(0xdeaa, { 0xb8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x23c0, gbc.sp());
        EXPECT(0x7d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xdeaa));
        // CB 7E 009F
        gbc.setState(0x90b4, 0x7e74, 0x3de0, 0xfeb5, 0xacd8, 0x2145, 0x1, 0x1);
        gbc.writeMem(0x2145, { 0x28 });
        gbc.writeMem(0x90b4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7e74, gbc.sp());
        EXPECT(0x90b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b4));
        EXPECT(0x7e, gbc.readMem(0x90b5));
        // CB 7E 00A0
        gbc.setState(0x1a1f, 0xfe22, 0x1c30, 0x84df, 0x32c3, 0x4dd5, 0x1, 0x0);
        gbc.writeMem(0x1a1f, { 0xcb, 0x7e });
        gbc.writeMem(0x4dd5, { 0xce });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfe22, gbc.sp());
        EXPECT(0x1a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00A1
        gbc.setState(0x3ae3, 0x7b07, 0xc9b0, 0xd91e, 0xe988, 0x330c, 0x1, 0x0);
        gbc.writeMem(0x330c, { 0x56 });
        gbc.writeMem(0x3ae3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7b07, gbc.sp());
        EXPECT(0x3ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00A2
        gbc.setState(0x6cd5, 0x8897, 0xa080, 0xe8fb, 0x2263, 0xa1fd, 0x0, 0x0);
        gbc.writeMem(0x6cd5, { 0xcb, 0x7e });
        gbc.writeMem(0xa1fd, { 0x3a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8897, gbc.sp());
        EXPECT(0x6cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xa1fd));
        // CB 7E 00A3
        gbc.setState(0x7e8d, 0x44b0, 0x3b20, 0x8792, 0xfa46, 0x1f57, 0x1, 0x0);
        gbc.writeMem(0x1f57, { 0xc6 });
        gbc.writeMem(0x7e8d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x44b0, gbc.sp());
        EXPECT(0x7e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00A4
        gbc.setState(0xa7b5, 0x369e, 0xc0, 0xde3, 0x7cc9, 0xa254, 0x0, 0x0);
        gbc.writeMem(0xa254, { 0xc8 });
        gbc.writeMem(0xa7b5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x369e, gbc.sp());
        EXPECT(0xa7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa254));
        EXPECT(0xcb, gbc.readMem(0xa7b5));
        EXPECT(0x7e, gbc.readMem(0xa7b6));
        // CB 7E 00A5
        gbc.setState(0x2596, 0x7e2a, 0x9100, 0x64b1, 0x5f6f, 0xd7f4, 0x0, 0x1);
        gbc.writeMem(0x2596, { 0xcb, 0x7e });
        gbc.writeMem(0xd7f4, { 0x40 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7e2a, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd7f4));
        // CB 7E 00A6
        gbc.setState(0x8b28, 0xa89, 0x5b90, 0x1992, 0x4029, 0xcb8c, 0x0, 0x0);
        gbc.writeMem(0x8b28, { 0xcb, 0x7e });
        gbc.writeMem(0xcb8c, { 0x14 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0x8b2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b28));
        EXPECT(0x7e, gbc.readMem(0x8b29));
        EXPECT(0x14, gbc.readMem(0xcb8c));
        // CB 7E 00A7
        gbc.setState(0x6293, 0x6500, 0x1220, 0x3fc3, 0x466b, 0x5a7, 0x1, 0x1);
        gbc.writeMem(0x5a7, { 0x37 });
        gbc.writeMem(0x6293, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6500, gbc.sp());
        EXPECT(0x6295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00A8
        gbc.setState(0x28aa, 0xe7a9, 0x380, 0x7562, 0xa77a, 0xa52, 0x0, 0x1);
        gbc.writeMem(0xa52, { 0x7a });
        gbc.writeMem(0x28aa, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe7a9, gbc.sp());
        EXPECT(0x28ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00AA
        gbc.setState(0x2466, 0x2c6f, 0x3dd0, 0xa62, 0xfb9a, 0x53cf, 0x0, 0x0);
        gbc.writeMem(0x2466, { 0xcb, 0x7e });
        gbc.writeMem(0x53cf, { 0x9f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2c6f, gbc.sp());
        EXPECT(0x2468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00AB
        gbc.setState(0xd76e, 0xb7c2, 0x7390, 0xf06a, 0xec7f, 0x5508, 0x0, 0x0);
        gbc.writeMem(0x5508, { 0x93 });
        gbc.writeMem(0xd76e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb7c2, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76e));
        EXPECT(0x7e, gbc.readMem(0xd76f));
        // CB 7E 00AC
        gbc.setState(0x5d0, 0x8d75, 0x4070, 0x71b3, 0xfdef, 0xa6ae, 0x0, 0x1);
        gbc.writeMem(0x5d0, { 0xcb, 0x7e });
        gbc.writeMem(0xa6ae, { 0xa2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa6ae));
        // CB 7E 00AE
        gbc.setState(0x37ba, 0x947c, 0x2890, 0x7181, 0x2eb6, 0xc826, 0x0, 0x1);
        gbc.writeMem(0x37ba, { 0xcb, 0x7e });
        gbc.writeMem(0xc826, { 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x947c, gbc.sp());
        EXPECT(0x37bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc826));
        // CB 7E 00AF
        gbc.setState(0xe16, 0x8d, 0x9710, 0x65aa, 0xbe76, 0xd6bb, 0x0, 0x1);
        gbc.writeMem(0xe16, { 0xcb, 0x7e });
        gbc.writeMem(0xd6bb, { 0xd9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8d, gbc.sp());
        EXPECT(0xe18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd6bb));
        // CB 7E 00B0
        gbc.setState(0x1aa4, 0xc12, 0x90e0, 0x6393, 0x9abf, 0x80d4, 0x1, 0x0);
        gbc.writeMem(0x1aa4, { 0xcb, 0x7e });
        gbc.writeMem(0x80d4, { 0x77 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc12, gbc.sp());
        EXPECT(0x1aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x80d4));
        // CB 7E 00B1
        gbc.setState(0x4088, 0x283c, 0x5900, 0x9ca7, 0x57e0, 0x7488, 0x0, 0x1);
        gbc.writeMem(0x4088, { 0xcb, 0x7e });
        gbc.writeMem(0x7488, { 0xe5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x283c, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00B2
        gbc.setState(0xb1ae, 0xcd1d, 0xe290, 0xbc36, 0x690c, 0x173f, 0x0, 0x1);
        gbc.writeMem(0x173f, { 0x59 });
        gbc.writeMem(0xb1ae, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xcd1d, gbc.sp());
        EXPECT(0xb1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ae));
        EXPECT(0x7e, gbc.readMem(0xb1af));
        // CB 7E 00B3
        gbc.setState(0xe1f5, 0xffc4, 0x5ca0, 0x1230, 0x12e3, 0xe35c, 0x1, 0x0);
        gbc.writeMem(0xe1f5, { 0xcb, 0x7e });
        gbc.writeMem(0xe35c, { 0xa3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xffc4, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f5));
        EXPECT(0x7e, gbc.readMem(0xe1f6));
        EXPECT(0xa3, gbc.readMem(0xe35c));
        // CB 7E 00B4
        gbc.setState(0x4809, 0xd6fc, 0xebb0, 0x1f6, 0x4a06, 0x1f75, 0x0, 0x1);
        gbc.writeMem(0x1f75, { 0x6f });
        gbc.writeMem(0x4809, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd6fc, gbc.sp());
        EXPECT(0x480b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00B5
        gbc.setState(0xc0cd, 0xfdf, 0x8250, 0x406c, 0x265c, 0x5390, 0x1, 0x0);
        gbc.writeMem(0x5390, { 0x88 });
        gbc.writeMem(0xc0cd, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfdf, gbc.sp());
        EXPECT(0xc0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0cd));
        EXPECT(0x7e, gbc.readMem(0xc0ce));
        // CB 7E 00B6
        gbc.setState(0x6a92, 0x16ca, 0x9bb0, 0x5801, 0xa016, 0x7aaa, 0x0, 0x1);
        gbc.writeMem(0x6a92, { 0xcb, 0x7e });
        gbc.writeMem(0x7aaa, { 0xc8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x16ca, gbc.sp());
        EXPECT(0x6a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00B7
        gbc.setState(0xe5ad, 0x2097, 0xef60, 0x44, 0x6765, 0xc716, 0x0, 0x1);
        gbc.writeMem(0xc716, { 0x2b });
        gbc.writeMem(0xe5ad, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2097, gbc.sp());
        EXPECT(0xe5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xc716));
        EXPECT(0xcb, gbc.readMem(0xe5ad));
        EXPECT(0x7e, gbc.readMem(0xe5ae));
        // CB 7E 00B8
        gbc.setState(0xe41b, 0xd9a0, 0xebb0, 0x176f, 0x859, 0x3d13, 0x0, 0x0);
        gbc.writeMem(0x3d13, { 0x6 });
        gbc.writeMem(0xe41b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0xe41d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41b));
        EXPECT(0x7e, gbc.readMem(0xe41c));
        // CB 7E 00B9
        gbc.setState(0x7a4c, 0x98fc, 0xdde0, 0x153, 0xa934, 0xa7b, 0x1, 0x0);
        gbc.writeMem(0xa7b, { 0x4f });
        gbc.writeMem(0x7a4c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x98fc, gbc.sp());
        EXPECT(0x7a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00BA
        gbc.setState(0x62b8, 0x7877, 0xb840, 0x5461, 0xd9a6, 0xdf91, 0x0, 0x0);
        gbc.writeMem(0x62b8, { 0xcb, 0x7e });
        gbc.writeMem(0xdf91, { 0xce });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7877, gbc.sp());
        EXPECT(0x62ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xdf91));
        // CB 7E 00BB
        gbc.setState(0x2c72, 0xd80c, 0x2cd0, 0x18f9, 0xa321, 0x7f8d, 0x0, 0x1);
        gbc.writeMem(0x2c72, { 0xcb, 0x7e });
        gbc.writeMem(0x7f8d, { 0x30 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd80c, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00BC
        gbc.setState(0x650c, 0x69d4, 0xa410, 0xb98e, 0x3b4c, 0xaf9, 0x0, 0x1);
        gbc.writeMem(0xaf9, { 0xdb });
        gbc.writeMem(0x650c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x69d4, gbc.sp());
        EXPECT(0x650e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00BD
        gbc.setState(0x9bf5, 0xdc4b, 0xf8a0, 0x465c, 0x3863, 0x9f3c, 0x1, 0x0);
        gbc.writeMem(0x9bf5, { 0xcb, 0x7e });
        gbc.writeMem(0x9f3c, { 0x2b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdc4b, gbc.sp());
        EXPECT(0x9bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf5));
        EXPECT(0x7e, gbc.readMem(0x9bf6));
        EXPECT(0x2b, gbc.readMem(0x9f3c));
        // CB 7E 00BE
        gbc.setState(0x644a, 0xeef2, 0xf9e0, 0x72e3, 0x1bfb, 0xed94, 0x0, 0x1);
        gbc.writeMem(0x644a, { 0xcb, 0x7e });
        gbc.writeMem(0xed94, { 0x12 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeef2, gbc.sp());
        EXPECT(0x644c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xed94));
        // CB 7E 00BF
        gbc.setState(0x7765, 0xfe82, 0x8a70, 0xc52f, 0x31eb, 0xe4c2, 0x0, 0x0);
        gbc.writeMem(0x7765, { 0xcb, 0x7e });
        gbc.writeMem(0xe4c2, { 0x6d });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfe82, gbc.sp());
        EXPECT(0x7767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xe4c2));
        // CB 7E 00C0
        gbc.setState(0xe932, 0x11e7, 0xbdb0, 0xe925, 0x113f, 0xf43c, 0x1, 0x0);
        gbc.writeMem(0xe932, { 0xcb, 0x7e });
        gbc.writeMem(0xf43c, { 0xf3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0xe934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe932));
        EXPECT(0x7e, gbc.readMem(0xe933));
        EXPECT(0xf3, gbc.readMem(0xf43c));
        // CB 7E 00C1
        gbc.setState(0x51c0, 0xe320, 0xa330, 0x7ce2, 0xe166, 0x9c64, 0x0, 0x1);
        gbc.writeMem(0x51c0, { 0xcb, 0x7e });
        gbc.writeMem(0x9c64, { 0x71 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe320, gbc.sp());
        EXPECT(0x51c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9c64));
        // CB 7E 00C2
        gbc.setState(0xc398, 0xa97c, 0xaf10, 0xa1b7, 0x718c, 0xe830, 0x0, 0x0);
        gbc.writeMem(0xc398, { 0xcb, 0x7e });
        gbc.writeMem(0xe830, { 0x7d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa97c, gbc.sp());
        EXPECT(0xc39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc398));
        EXPECT(0x7e, gbc.readMem(0xc399));
        EXPECT(0x7d, gbc.readMem(0xe830));
        // CB 7E 00C3
        gbc.setState(0x501, 0x4450, 0x8170, 0xc29a, 0xcfe2, 0x380, 0x1, 0x1);
        gbc.writeMem(0x380, { 0x76 });
        gbc.writeMem(0x501, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0x503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00C4
        gbc.setState(0xaaf9, 0x9813, 0x9280, 0x77e4, 0xe361, 0xe58f, 0x0, 0x1);
        gbc.writeMem(0xaaf9, { 0xcb, 0x7e });
        gbc.writeMem(0xe58f, { 0x38 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9813, gbc.sp());
        EXPECT(0xaafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf9));
        EXPECT(0x7e, gbc.readMem(0xaafa));
        EXPECT(0x38, gbc.readMem(0xe58f));
        // CB 7E 00C5
        gbc.setState(0xf87, 0xfe59, 0x9440, 0xa949, 0x1870, 0xf12c, 0x1, 0x0);
        gbc.writeMem(0xf87, { 0xcb, 0x7e });
        gbc.writeMem(0xf12c, { 0x7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfe59, gbc.sp());
        EXPECT(0xf89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xf12c));
        // CB 7E 00C6
        gbc.setState(0xd829, 0xd57c, 0x4910, 0x40bc, 0x95f9, 0xcbc2, 0x0, 0x1);
        gbc.writeMem(0xcbc2, { 0x31 });
        gbc.writeMem(0xd829, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd57c, gbc.sp());
        EXPECT(0xd82b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xcbc2));
        EXPECT(0xcb, gbc.readMem(0xd829));
        EXPECT(0x7e, gbc.readMem(0xd82a));
        // CB 7E 00C7
        gbc.setState(0x4905, 0xc515, 0xf260, 0xf744, 0xc5c8, 0x31ba, 0x1, 0x0);
        gbc.writeMem(0x31ba, { 0x57 });
        gbc.writeMem(0x4905, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc515, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00C8
        gbc.setState(0xe0b4, 0xf703, 0x9a0, 0x4f96, 0x7cea, 0x28ea, 0x1, 0x0);
        gbc.writeMem(0x28ea, { 0x3a });
        gbc.writeMem(0xe0b4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf703, gbc.sp());
        EXPECT(0xe0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b4));
        EXPECT(0x7e, gbc.readMem(0xe0b5));
        // CB 7E 00C9
        gbc.setState(0x2283, 0x8160, 0xb110, 0x41c3, 0x6654, 0x6fae, 0x1, 0x1);
        gbc.writeMem(0x2283, { 0xcb, 0x7e });
        gbc.writeMem(0x6fae, { 0xe1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00CA
        gbc.setState(0xda7b, 0xa2dd, 0x1490, 0x68fa, 0x9656, 0x9323, 0x0, 0x1);
        gbc.writeMem(0x9323, { 0xa5 });
        gbc.writeMem(0xda7b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa2dd, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x9323));
        EXPECT(0xcb, gbc.readMem(0xda7b));
        EXPECT(0x7e, gbc.readMem(0xda7c));
        // CB 7E 00CB
        gbc.setState(0x67b1, 0x9100, 0xbb50, 0xbe1a, 0xc544, 0x4a7a, 0x0, 0x0);
        gbc.writeMem(0x4a7a, { 0xda });
        gbc.writeMem(0x67b1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9100, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00CC
        gbc.setState(0xbfd6, 0x91f3, 0x2e90, 0x2f62, 0xa39c, 0x72cb, 0x0, 0x1);
        gbc.writeMem(0x72cb, { 0xae });
        gbc.writeMem(0xbfd6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x91f3, gbc.sp());
        EXPECT(0xbfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfd6));
        EXPECT(0x7e, gbc.readMem(0xbfd7));
        // CB 7E 00CD
        gbc.setState(0xc2ca, 0x8ba5, 0xb890, 0xfae, 0xcc25, 0x54d5, 0x1, 0x1);
        gbc.writeMem(0x54d5, { 0x64 });
        gbc.writeMem(0xc2ca, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8ba5, gbc.sp());
        EXPECT(0xc2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ca));
        EXPECT(0x7e, gbc.readMem(0xc2cb));
        // CB 7E 00CE
        gbc.setState(0xb614, 0xa3a2, 0x3a60, 0x4e4c, 0x26b7, 0x7680, 0x1, 0x0);
        gbc.writeMem(0x7680, { 0x92 });
        gbc.writeMem(0xb614, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa3a2, gbc.sp());
        EXPECT(0xb616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb614));
        EXPECT(0x7e, gbc.readMem(0xb615));
        // CB 7E 00CF
        gbc.setState(0x66b6, 0x1257, 0x8630, 0xc63d, 0x8bff, 0x1959, 0x0, 0x0);
        gbc.writeMem(0x1959, { 0x4b });
        gbc.writeMem(0x66b6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1257, gbc.sp());
        EXPECT(0x66b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00D0
        gbc.setState(0xb858, 0x3b26, 0xa200, 0xee8f, 0x3b47, 0xec3a, 0x0, 0x1);
        gbc.writeMem(0xb858, { 0xcb, 0x7e });
        gbc.writeMem(0xec3a, { 0x2b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3b26, gbc.sp());
        EXPECT(0xb85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb858));
        EXPECT(0x7e, gbc.readMem(0xb859));
        EXPECT(0x2b, gbc.readMem(0xec3a));
        // CB 7E 00D1
        gbc.setState(0xb9de, 0x5eb9, 0x46d0, 0xc563, 0x8f22, 0x17a3, 0x0, 0x1);
        gbc.writeMem(0x17a3, { 0x73 });
        gbc.writeMem(0xb9de, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5eb9, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0x7e, gbc.readMem(0xb9df));
        // CB 7E 00D2
        gbc.setState(0x5383, 0x80c4, 0x5d40, 0xad4b, 0x8322, 0xc6d, 0x0, 0x1);
        gbc.writeMem(0xc6d, { 0x9a });
        gbc.writeMem(0x5383, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x80c4, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00D3
        gbc.setState(0x4b3d, 0xd219, 0x1cf0, 0xa102, 0xad00, 0xa0e9, 0x1, 0x0);
        gbc.writeMem(0x4b3d, { 0xcb, 0x7e });
        gbc.writeMem(0xa0e9, { 0x3 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd219, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa0e9));
        // CB 7E 00D4
        gbc.setState(0x67c, 0x81e9, 0x1290, 0xbc47, 0xed45, 0x8b54, 0x0, 0x0);
        gbc.writeMem(0x67c, { 0xcb, 0x7e });
        gbc.writeMem(0x8b54, { 0xcb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x81e9, gbc.sp());
        EXPECT(0x67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b54));
        // CB 7E 00D5
        gbc.setState(0x3c99, 0x878c, 0xaab0, 0x8141, 0x711, 0x9a19, 0x1, 0x1);
        gbc.writeMem(0x3c99, { 0xcb, 0x7e });
        gbc.writeMem(0x9a19, { 0xed });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x878c, gbc.sp());
        EXPECT(0x3c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9a19));
        // CB 7E 00D6
        gbc.setState(0x2f69, 0x622a, 0x6a00, 0x45c0, 0x3468, 0x7951, 0x0, 0x0);
        gbc.writeMem(0x2f69, { 0xcb, 0x7e });
        gbc.writeMem(0x7951, { 0x3e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x622a, gbc.sp());
        EXPECT(0x2f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00D7
        gbc.setState(0x2db7, 0x9d5b, 0x39a0, 0xfde3, 0x4aac, 0xb2db, 0x0, 0x1);
        gbc.writeMem(0x2db7, { 0xcb, 0x7e });
        gbc.writeMem(0xb2db, { 0xbb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9d5b, gbc.sp());
        EXPECT(0x2db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb2db));
        // CB 7E 00D8
        gbc.setState(0x4e71, 0xa853, 0x9710, 0x30d8, 0x49ca, 0x2f9c, 0x0, 0x1);
        gbc.writeMem(0x2f9c, { 0x53 });
        gbc.writeMem(0x4e71, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa853, gbc.sp());
        EXPECT(0x4e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00D9
        gbc.setState(0x39af, 0xd97b, 0x57c0, 0xa941, 0x1e13, 0xcf14, 0x1, 0x1);
        gbc.writeMem(0x39af, { 0xcb, 0x7e });
        gbc.writeMem(0xcf14, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd97b, gbc.sp());
        EXPECT(0x39b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf14));
        // CB 7E 00DA
        gbc.setState(0x2e38, 0xde05, 0x8dc0, 0x5500, 0x4bc3, 0x307d, 0x1, 0x1);
        gbc.writeMem(0x2e38, { 0xcb, 0x7e });
        gbc.writeMem(0x307d, { 0x7c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xde05, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00DB
        gbc.setState(0x7def, 0xba6e, 0x4cd0, 0x55f8, 0x52cb, 0xbfd3, 0x0, 0x1);
        gbc.writeMem(0x7def, { 0xcb, 0x7e });
        gbc.writeMem(0xbfd3, { 0x23 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xba6e, gbc.sp());
        EXPECT(0x7df1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xbfd3));
        // CB 7E 00DC
        gbc.setState(0x1fe5, 0xf1bf, 0x1270, 0xc9ed, 0x4515, 0xf06b, 0x0, 0x1);
        gbc.writeMem(0x1fe5, { 0xcb, 0x7e });
        gbc.writeMem(0xf06b, { 0x59 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf1bf, gbc.sp());
        EXPECT(0x1fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xf06b));
        // CB 7E 00DD
        gbc.setState(0x251, 0xb5be, 0x25d0, 0xba3, 0x705e, 0xaad9, 0x0, 0x0);
        gbc.writeMem(0x251, { 0xcb, 0x7e });
        gbc.writeMem(0xaad9, { 0x76 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xaad9));
        // CB 7E 00DE
        gbc.setState(0x6e84, 0x8b0f, 0xddf0, 0x5dd, 0x8c19, 0x7723, 0x1, 0x0);
        gbc.writeMem(0x6e84, { 0xcb, 0x7e });
        gbc.writeMem(0x7723, { 0x42 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8b0f, gbc.sp());
        EXPECT(0x6e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00DF
        gbc.setState(0x9586, 0xd733, 0x8820, 0xe93, 0x87c0, 0x84be, 0x1, 0x1);
        gbc.writeMem(0x84be, { 0x6a });
        gbc.writeMem(0x9586, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd733, gbc.sp());
        EXPECT(0x9588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x84be));
        EXPECT(0xcb, gbc.readMem(0x9586));
        EXPECT(0x7e, gbc.readMem(0x9587));
        // CB 7E 00E0
        gbc.setState(0x1c76, 0x4e7f, 0xad10, 0xc825, 0x7489, 0x98ed, 0x1, 0x0);
        gbc.writeMem(0x1c76, { 0xcb, 0x7e });
        gbc.writeMem(0x98ed, { 0x7d });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4e7f, gbc.sp());
        EXPECT(0x1c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0x98ed));
        // CB 7E 00E1
        gbc.setState(0x681a, 0xe817, 0xce50, 0x7530, 0xddac, 0x6ca7, 0x1, 0x0);
        gbc.writeMem(0x681a, { 0xcb, 0x7e });
        gbc.writeMem(0x6ca7, { 0xe4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe817, gbc.sp());
        EXPECT(0x681c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00E2
        gbc.setState(0x66a4, 0x520c, 0x2450, 0xb71c, 0x9152, 0xb4c1, 0x1, 0x0);
        gbc.writeMem(0x66a4, { 0xcb, 0x7e });
        gbc.writeMem(0xb4c1, { 0xa6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x520c, gbc.sp());
        EXPECT(0x66a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb4c1));
        // CB 7E 00E3
        gbc.setState(0xd69e, 0xa488, 0x7eb0, 0xca26, 0x36, 0x1462, 0x0, 0x0);
        gbc.writeMem(0x1462, { 0x9a });
        gbc.writeMem(0xd69e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa488, gbc.sp());
        EXPECT(0xd6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69e));
        EXPECT(0x7e, gbc.readMem(0xd69f));
        // CB 7E 00E4
        gbc.setState(0xe4a9, 0x3b88, 0x4ed0, 0x9058, 0xdc2d, 0x685d, 0x0, 0x0);
        gbc.writeMem(0x685d, { 0xf9 });
        gbc.writeMem(0xe4a9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0x7e, gbc.readMem(0xe4aa));
        // CB 7E 00E5
        gbc.setState(0x9cef, 0x806b, 0x6e70, 0x5376, 0xd173, 0xb736, 0x0, 0x1);
        gbc.writeMem(0x9cef, { 0xcb, 0x7e });
        gbc.writeMem(0xb736, { 0x95 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0x9cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cef));
        EXPECT(0x7e, gbc.readMem(0x9cf0));
        EXPECT(0x95, gbc.readMem(0xb736));
        // CB 7E 00E6
        gbc.setState(0xb619, 0xb1da, 0x9a10, 0xe6e3, 0x1e6e, 0xbd57, 0x1, 0x0);
        gbc.writeMem(0xb619, { 0xcb, 0x7e });
        gbc.writeMem(0xbd57, { 0x36 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb1da, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb619));
        EXPECT(0x7e, gbc.readMem(0xb61a));
        EXPECT(0x36, gbc.readMem(0xbd57));
        // CB 7E 00E7
        gbc.setState(0xe921, 0xfb48, 0x6560, 0x4269, 0xc69d, 0x2a4a, 0x1, 0x1);
        gbc.writeMem(0x2a4a, { 0xda });
        gbc.writeMem(0xe921, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfb48, gbc.sp());
        EXPECT(0xe923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe921));
        EXPECT(0x7e, gbc.readMem(0xe922));
        // CB 7E 00E8
        gbc.setState(0x25d6, 0x8d15, 0x8a80, 0xac4e, 0xe77f, 0x78a6, 0x1, 0x1);
        gbc.writeMem(0x25d6, { 0xcb, 0x7e });
        gbc.writeMem(0x78a6, { 0x72 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8d15, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00E9
        gbc.setState(0x4017, 0x14fd, 0xc390, 0x7b32, 0x5e0a, 0x4223, 0x1, 0x0);
        gbc.writeMem(0x4017, { 0xcb, 0x7e });
        gbc.writeMem(0x4223, { 0x8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x14fd, gbc.sp());
        EXPECT(0x4019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00EA
        gbc.setState(0x715d, 0x7dd8, 0xf010, 0x58c1, 0x2b16, 0x4659, 0x0, 0x1);
        gbc.writeMem(0x4659, { 0xf6 });
        gbc.writeMem(0x715d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7dd8, gbc.sp());
        EXPECT(0x715f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00EB
        gbc.setState(0x515e, 0x4d8b, 0xf930, 0xa864, 0x7248, 0xb5ed, 0x1, 0x1);
        gbc.writeMem(0x515e, { 0xcb, 0x7e });
        gbc.writeMem(0xb5ed, { 0xc2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4d8b, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xb5ed));
        // CB 7E 00EC
        gbc.setState(0x89bc, 0xc075, 0xa600, 0x3b89, 0x59c2, 0xc276, 0x0, 0x1);
        gbc.writeMem(0x89bc, { 0xcb, 0x7e });
        gbc.writeMem(0xc276, { 0x49 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc075, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0x7e, gbc.readMem(0x89bd));
        EXPECT(0x49, gbc.readMem(0xc276));
        // CB 7E 00ED
        gbc.setState(0x387f, 0x3d0, 0xf320, 0xe46e, 0x3770, 0xa881, 0x0, 0x0);
        gbc.writeMem(0x387f, { 0xcb, 0x7e });
        gbc.writeMem(0xa881, { 0x25 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3d0, gbc.sp());
        EXPECT(0x3881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xa881));
        // CB 7E 00EE
        gbc.setState(0x1e00, 0x367e, 0x91f0, 0xdaf8, 0x40e8, 0x1491, 0x1, 0x0);
        gbc.writeMem(0x1491, { 0x96 });
        gbc.writeMem(0x1e00, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x367e, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00EF
        gbc.setState(0x39fe, 0xc413, 0xf800, 0x6d3d, 0x3d6b, 0x617, 0x0, 0x1);
        gbc.writeMem(0x617, { 0x1b });
        gbc.writeMem(0x39fe, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc413, gbc.sp());
        EXPECT(0x3a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00F0
        gbc.setState(0x71be, 0xc624, 0x5580, 0xb98d, 0xf7c2, 0x86a5, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0xcb, 0x7e });
        gbc.writeMem(0x86a5, { 0xd9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc624, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x86a5));
        // CB 7E 00F1
        gbc.setState(0x825b, 0xcb4a, 0x4be0, 0x6d9b, 0xe73e, 0xfd29, 0x1, 0x1);
        gbc.writeMem(0x825b, { 0xcb, 0x7e });
        gbc.writeMem(0xfd29, { 0x93 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcb4a, gbc.sp());
        EXPECT(0x825d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825b));
        EXPECT(0x7e, gbc.readMem(0x825c));
        EXPECT(0x93, gbc.readMem(0xfd29));
        // CB 7E 00F2
        gbc.setState(0x5e41, 0xfa90, 0x67c0, 0x2e7c, 0xedf4, 0x9bd6, 0x1, 0x1);
        gbc.writeMem(0x5e41, { 0xcb, 0x7e });
        gbc.writeMem(0x9bd6, { 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfa90, gbc.sp());
        EXPECT(0x5e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9bd6));
        // CB 7E 00F3
        gbc.setState(0xe707, 0x4ad4, 0xb8d0, 0xaa3e, 0x3b55, 0x7f98, 0x0, 0x1);
        gbc.writeMem(0x7f98, { 0x22 });
        gbc.writeMem(0xe707, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4ad4, gbc.sp());
        EXPECT(0xe709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe707));
        EXPECT(0x7e, gbc.readMem(0xe708));
        // CB 7E 00F4
        gbc.setState(0x212a, 0xc463, 0x4a50, 0x1316, 0x999b, 0x914d, 0x0, 0x1);
        gbc.writeMem(0x212a, { 0xcb, 0x7e });
        gbc.writeMem(0x914d, { 0x98 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc463, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x914d));
        // CB 7E 00F5
        gbc.setState(0x495b, 0xf4bb, 0x9f80, 0xd716, 0x279b, 0xd5b1, 0x0, 0x0);
        gbc.writeMem(0x495b, { 0xcb, 0x7e });
        gbc.writeMem(0xd5b1, { 0x87 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0x495d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xd5b1));
        // CB 7E 00F6
        gbc.setState(0x2d, 0xa304, 0x23c0, 0xf0d4, 0x3f48, 0x73c, 0x0, 0x1);
        gbc.writeMem(0x2d, { 0xcb, 0x7e });
        gbc.writeMem(0x73c, { 0x3d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa304, gbc.sp());
        EXPECT(0x2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00F7
        gbc.setState(0x43ff, 0x72dc, 0x96f0, 0xccea, 0xdb37, 0x9db, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0x55 });
        gbc.writeMem(0x43ff, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x72dc, gbc.sp());
        EXPECT(0x4401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00F8
        gbc.setState(0x374, 0x1be7, 0x65e0, 0x9aec, 0x9691, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0x374, { 0xcb, 0x7e });
        gbc.writeMem(0x63e6, { 0xec });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1be7, gbc.sp());
        EXPECT(0x376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 00F9
        gbc.setState(0xa706, 0xaf3b, 0x6c70, 0x18ba, 0xce28, 0xc3ba, 0x1, 0x1);
        gbc.writeMem(0xa706, { 0xcb, 0x7e });
        gbc.writeMem(0xc3ba, { 0xd3 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xaf3b, gbc.sp());
        EXPECT(0xa708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa706));
        EXPECT(0x7e, gbc.readMem(0xa707));
        EXPECT(0xd3, gbc.readMem(0xc3ba));
        // CB 7E 00FA
        gbc.setState(0x67b2, 0xa8f0, 0x2690, 0xd7a7, 0xb399, 0x135f, 0x0, 0x0);
        gbc.writeMem(0x135f, { 0x25 });
        gbc.writeMem(0x67b2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa8f0, gbc.sp());
        EXPECT(0x67b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 00FB
        gbc.setState(0xe21e, 0x1bfa, 0x5460, 0x316, 0xdae7, 0x5558, 0x1, 0x1);
        gbc.writeMem(0x5558, { 0xd6 });
        gbc.writeMem(0xe21e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1bfa, gbc.sp());
        EXPECT(0xe220, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21e));
        EXPECT(0x7e, gbc.readMem(0xe21f));
        // CB 7E 00FC
        gbc.setState(0x908f, 0x391c, 0xd590, 0x481d, 0x1dbf, 0x7360, 0x1, 0x1);
        gbc.writeMem(0x7360, { 0x83 });
        gbc.writeMem(0x908f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x391c, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908f));
        EXPECT(0x7e, gbc.readMem(0x9090));
        // CB 7E 00FD
        gbc.setState(0x58a9, 0x4220, 0xd230, 0x9df0, 0xebb8, 0xeaca, 0x0, 0x1);
        gbc.writeMem(0x58a9, { 0xcb, 0x7e });
        gbc.writeMem(0xeaca, { 0xb6 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4220, gbc.sp());
        EXPECT(0x58ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xeaca));
        // CB 7E 00FE
        gbc.setState(0xb0d8, 0x18b3, 0xf4b0, 0xc51e, 0x42f4, 0x1275, 0x1, 0x0);
        gbc.writeMem(0x1275, { 0xec });
        gbc.writeMem(0xb0d8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x18b3, gbc.sp());
        EXPECT(0xb0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d8));
        EXPECT(0x7e, gbc.readMem(0xb0d9));
        // CB 7E 00FF
        gbc.setState(0x5f08, 0x216, 0x28c0, 0xbcb7, 0xb8ea, 0x2c18, 0x0, 0x1);
        gbc.writeMem(0x2c18, { 0xcd });
        gbc.writeMem(0x5f08, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x216, gbc.sp());
        EXPECT(0x5f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0100
        gbc.setState(0x2af1, 0x959b, 0x2e30, 0x4e24, 0x246f, 0xa939, 0x1, 0x1);
        gbc.writeMem(0x2af1, { 0xcb, 0x7e });
        gbc.writeMem(0xa939, { 0xe8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa939));
        // CB 7E 0101
        gbc.setState(0xf5, 0xd213, 0x9010, 0x9c28, 0xa38a, 0xecfd, 0x0, 0x1);
        gbc.writeMem(0xf5, { 0xcb, 0x7e });
        gbc.writeMem(0xecfd, { 0xd4 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0xf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xecfd));
        // CB 7E 0102
        gbc.setState(0x6a43, 0x5c1, 0xf410, 0xd642, 0xa9a9, 0xc7ed, 0x0, 0x1);
        gbc.writeMem(0x6a43, { 0xcb, 0x7e });
        gbc.writeMem(0xc7ed, { 0x9d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5c1, gbc.sp());
        EXPECT(0x6a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc7ed));
        // CB 7E 0103
        gbc.setState(0x6fd6, 0x23a1, 0x150, 0x50a5, 0x1af5, 0xa79, 0x0, 0x0);
        gbc.writeMem(0xa79, { 0xcd });
        gbc.writeMem(0x6fd6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x23a1, gbc.sp());
        EXPECT(0x6fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0104
        gbc.setState(0x7346, 0xaf75, 0xc9d0, 0x83af, 0xc4bb, 0x1b40, 0x0, 0x1);
        gbc.writeMem(0x1b40, { 0x21 });
        gbc.writeMem(0x7346, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xaf75, gbc.sp());
        EXPECT(0x7348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0105
        gbc.setState(0xed54, 0xab5b, 0x6780, 0x18d7, 0x2e9c, 0x676a, 0x1, 0x0);
        gbc.writeMem(0x676a, { 0x3a });
        gbc.writeMem(0xed54, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xab5b, gbc.sp());
        EXPECT(0xed56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed54));
        EXPECT(0x7e, gbc.readMem(0xed55));
        // CB 7E 0106
        gbc.setState(0xe8a, 0xc285, 0x3ba0, 0x9dd1, 0xcbb4, 0x4fd0, 0x0, 0x1);
        gbc.writeMem(0xe8a, { 0xcb, 0x7e });
        gbc.writeMem(0x4fd0, { 0x29 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc285, gbc.sp());
        EXPECT(0xe8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0107
        gbc.setState(0x2a6b, 0x9a42, 0x2800, 0x3c13, 0x9856, 0x3d9e, 0x1, 0x0);
        gbc.writeMem(0x2a6b, { 0xcb, 0x7e });
        gbc.writeMem(0x3d9e, { 0xad });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9a42, gbc.sp());
        EXPECT(0x2a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0108
        gbc.setState(0xc4e, 0xd9aa, 0xdb0, 0x760c, 0x3f7f, 0x8037, 0x1, 0x0);
        gbc.writeMem(0xc4e, { 0xcb, 0x7e });
        gbc.writeMem(0x8037, { 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd9aa, gbc.sp());
        EXPECT(0xc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x8037));
        // CB 7E 0109
        gbc.setState(0x2af9, 0xfe33, 0x67e0, 0x4cea, 0x5160, 0x1d67, 0x1, 0x0);
        gbc.writeMem(0x1d67, { 0xde });
        gbc.writeMem(0x2af9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfe33, gbc.sp());
        EXPECT(0x2afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 010A
        gbc.setState(0xc06, 0x2369, 0xb860, 0x3413, 0x6a92, 0xcc2b, 0x0, 0x1);
        gbc.writeMem(0xc06, { 0xcb, 0x7e });
        gbc.writeMem(0xcc2b, { 0xa });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2369, gbc.sp());
        EXPECT(0xc08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xcc2b));
        // CB 7E 010B
        gbc.setState(0x2a42, 0xe2df, 0x8c10, 0x3843, 0x5d89, 0x21d6, 0x1, 0x0);
        gbc.writeMem(0x21d6, { 0xc2 });
        gbc.writeMem(0x2a42, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe2df, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 010C
        gbc.setState(0x7a88, 0x95d0, 0x7af0, 0x7148, 0xbf0e, 0x8a19, 0x0, 0x1);
        gbc.writeMem(0x7a88, { 0xcb, 0x7e });
        gbc.writeMem(0x8a19, { 0x68 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x95d0, gbc.sp());
        EXPECT(0x7a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x8a19));
        // CB 7E 010D
        gbc.setState(0x19d0, 0xe965, 0x4a0, 0x76ee, 0x6363, 0x9b9c, 0x1, 0x0);
        gbc.writeMem(0x19d0, { 0xcb, 0x7e });
        gbc.writeMem(0x9b9c, { 0x9e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe965, gbc.sp());
        EXPECT(0x19d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9b9c));
        // CB 7E 010F
        gbc.setState(0xa9f8, 0x2cce, 0xcbb0, 0xa81f, 0x38ee, 0x6b00, 0x0, 0x1);
        gbc.writeMem(0x6b00, { 0x6f });
        gbc.writeMem(0xa9f8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0xa9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9f8));
        EXPECT(0x7e, gbc.readMem(0xa9f9));
        // CB 7E 0110
        gbc.setState(0xc69f, 0x488f, 0x40a0, 0xae8, 0x7f2d, 0x8382, 0x1, 0x1);
        gbc.writeMem(0x8382, { 0xd1 });
        gbc.writeMem(0xc69f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x488f, gbc.sp());
        EXPECT(0xc6a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0x8382));
        EXPECT(0xcb, gbc.readMem(0xc69f));
        EXPECT(0x7e, gbc.readMem(0xc6a0));
        // CB 7E 0111
        gbc.setState(0xceef, 0x5f00, 0xd940, 0x9419, 0x439d, 0xa64f, 0x0, 0x0);
        gbc.writeMem(0xa64f, { 0xef });
        gbc.writeMem(0xceef, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0xcef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa64f));
        EXPECT(0xcb, gbc.readMem(0xceef));
        EXPECT(0x7e, gbc.readMem(0xcef0));
        // CB 7E 0112
        gbc.setState(0x5d5a, 0x7750, 0x6900, 0xb89, 0x9b80, 0x7267, 0x1, 0x1);
        gbc.writeMem(0x5d5a, { 0xcb, 0x7e });
        gbc.writeMem(0x7267, { 0xc4 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7750, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0113
        gbc.setState(0xac94, 0xed98, 0xadc0, 0x4ec2, 0x27d4, 0xf70c, 0x0, 0x0);
        gbc.writeMem(0xac94, { 0xcb, 0x7e });
        gbc.writeMem(0xf70c, { 0xa5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xed98, gbc.sp());
        EXPECT(0xac96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac94));
        EXPECT(0x7e, gbc.readMem(0xac95));
        EXPECT(0xa5, gbc.readMem(0xf70c));
        // CB 7E 0114
        gbc.setState(0x8739, 0xb2a3, 0xd480, 0xcda4, 0xed2a, 0x4ecc, 0x0, 0x1);
        gbc.writeMem(0x4ecc, { 0x61 });
        gbc.writeMem(0x8739, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0x873b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8739));
        EXPECT(0x7e, gbc.readMem(0x873a));
        // CB 7E 0115
        gbc.setState(0x16b9, 0xfa4d, 0x980, 0xc4e, 0x2242, 0xe96d, 0x0, 0x1);
        gbc.writeMem(0x16b9, { 0xcb, 0x7e });
        gbc.writeMem(0xe96d, { 0x61 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfa4d, gbc.sp());
        EXPECT(0x16bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xe96d));
        // CB 7E 0116
        gbc.setState(0x3fbf, 0x610c, 0xf80, 0xcafc, 0x9eb0, 0x8c7c, 0x1, 0x1);
        gbc.writeMem(0x3fbf, { 0xcb, 0x7e });
        gbc.writeMem(0x8c7c, { 0x5c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x610c, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x8c7c));
        // CB 7E 0117
        gbc.setState(0x8e3d, 0x7c95, 0xee80, 0x746d, 0x5d72, 0x661e, 0x1, 0x1);
        gbc.writeMem(0x661e, { 0x55 });
        gbc.writeMem(0x8e3d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7c95, gbc.sp());
        EXPECT(0x8e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3d));
        EXPECT(0x7e, gbc.readMem(0x8e3e));
        // CB 7E 0118
        gbc.setState(0x5443, 0x3ff0, 0x3a20, 0xeba9, 0xe6e7, 0xc24c, 0x1, 0x1);
        gbc.writeMem(0x5443, { 0xcb, 0x7e });
        gbc.writeMem(0xc24c, { 0xe6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3ff0, gbc.sp());
        EXPECT(0x5445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc24c));
        // CB 7E 0119
        gbc.setState(0xe5e7, 0xc7bf, 0xa9d0, 0x5c86, 0xd682, 0xdec4, 0x1, 0x0);
        gbc.writeMem(0xdec4, { 0x57 });
        gbc.writeMem(0xe5e7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdec4));
        EXPECT(0xcb, gbc.readMem(0xe5e7));
        EXPECT(0x7e, gbc.readMem(0xe5e8));
        // CB 7E 011A
        gbc.setState(0x6791, 0x4c0, 0x1d30, 0xa349, 0xcea5, 0xd9c2, 0x0, 0x0);
        gbc.writeMem(0x6791, { 0xcb, 0x7e });
        gbc.writeMem(0xd9c2, { 0x70 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4c0, gbc.sp());
        EXPECT(0x6793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xd9c2));
        // CB 7E 011B
        gbc.setState(0x9cc2, 0x5cc0, 0x9340, 0x2b30, 0x467b, 0xad84, 0x0, 0x1);
        gbc.writeMem(0x9cc2, { 0xcb, 0x7e });
        gbc.writeMem(0xad84, { 0x4 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5cc0, gbc.sp());
        EXPECT(0x9cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc2));
        EXPECT(0x7e, gbc.readMem(0x9cc3));
        EXPECT(0x4, gbc.readMem(0xad84));
        // CB 7E 011C
        gbc.setState(0x8cbd, 0xaf31, 0xc130, 0x7d09, 0x406, 0x2bc6, 0x1, 0x1);
        gbc.writeMem(0x2bc6, { 0xf4 });
        gbc.writeMem(0x8cbd, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaf31, gbc.sp());
        EXPECT(0x8cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbd));
        EXPECT(0x7e, gbc.readMem(0x8cbe));
        // CB 7E 011D
        gbc.setState(0x2fac, 0xb7d5, 0xaa20, 0x9387, 0x47fd, 0x633b, 0x0, 0x0);
        gbc.writeMem(0x2fac, { 0xcb, 0x7e });
        gbc.writeMem(0x633b, { 0x14 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb7d5, gbc.sp());
        EXPECT(0x2fae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 011E
        gbc.setState(0x1c97, 0x456a, 0x8db0, 0x2186, 0x8ee2, 0x8623, 0x0, 0x0);
        gbc.writeMem(0x1c97, { 0xcb, 0x7e });
        gbc.writeMem(0x8623, { 0xa6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x456a, gbc.sp());
        EXPECT(0x1c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0x8623));
        // CB 7E 011F
        gbc.setState(0xdf0d, 0x295f, 0xb400, 0x8019, 0x6f98, 0x5f0c, 0x0, 0x0);
        gbc.writeMem(0x5f0c, { 0x3a });
        gbc.writeMem(0xdf0d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x295f, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0d));
        EXPECT(0x7e, gbc.readMem(0xdf0e));
        // CB 7E 0120
        gbc.setState(0x6475, 0x5418, 0xe970, 0x3ea2, 0x2de, 0x6ce7, 0x1, 0x1);
        gbc.writeMem(0x6475, { 0xcb, 0x7e });
        gbc.writeMem(0x6ce7, { 0x2b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5418, gbc.sp());
        EXPECT(0x6477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0121
        gbc.setState(0x5386, 0x6a9, 0x5fb0, 0x77, 0x319e, 0xdeeb, 0x0, 0x0);
        gbc.writeMem(0x5386, { 0xcb, 0x7e });
        gbc.writeMem(0xdeeb, { 0x95 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6a9, gbc.sp());
        EXPECT(0x5388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xdeeb));
        // CB 7E 0122
        gbc.setState(0x3dab, 0xa96c, 0x5bd0, 0x2c3c, 0x284, 0x66df, 0x1, 0x0);
        gbc.writeMem(0x3dab, { 0xcb, 0x7e });
        gbc.writeMem(0x66df, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa96c, gbc.sp());
        EXPECT(0x3dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0123
        gbc.setState(0x9280, 0xb297, 0xd760, 0x89e6, 0xe77f, 0xee09, 0x0, 0x1);
        gbc.writeMem(0x9280, { 0xcb, 0x7e });
        gbc.writeMem(0xee09, { 0xe6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb297, gbc.sp());
        EXPECT(0x9282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9280));
        EXPECT(0x7e, gbc.readMem(0x9281));
        EXPECT(0xe6, gbc.readMem(0xee09));
        // CB 7E 0124
        gbc.setState(0x5b7d, 0x2a4b, 0xdd0, 0xb993, 0xfa4e, 0xf9cc, 0x0, 0x1);
        gbc.writeMem(0x5b7d, { 0xcb, 0x7e });
        gbc.writeMem(0xf9cc, { 0x22 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0x5b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xf9cc));
        // CB 7E 0125
        gbc.setState(0x8a3, 0x7c55, 0x9370, 0xa9f2, 0x220d, 0x1fab, 0x1, 0x0);
        gbc.writeMem(0x8a3, { 0xcb, 0x7e });
        gbc.writeMem(0x1fab, { 0xb5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7c55, gbc.sp());
        EXPECT(0x8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0126
        gbc.setState(0xe764, 0xa2c0, 0xdc40, 0x2984, 0x9601, 0xc8d9, 0x0, 0x1);
        gbc.writeMem(0xc8d9, { 0x98 });
        gbc.writeMem(0xe764, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0xe766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xc8d9));
        EXPECT(0xcb, gbc.readMem(0xe764));
        EXPECT(0x7e, gbc.readMem(0xe765));
        // CB 7E 0127
        gbc.setState(0xcff9, 0xc33a, 0x5680, 0x8fdd, 0x7b8c, 0xcf87, 0x0, 0x0);
        gbc.writeMem(0xcf87, { 0x58 });
        gbc.writeMem(0xcff9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xcf87));
        EXPECT(0xcb, gbc.readMem(0xcff9));
        EXPECT(0x7e, gbc.readMem(0xcffa));
        // CB 7E 0128
        gbc.setState(0x5cb8, 0x317e, 0x4640, 0x3b7, 0xb996, 0x9558, 0x1, 0x0);
        gbc.writeMem(0x5cb8, { 0xcb, 0x7e });
        gbc.writeMem(0x9558, { 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x317e, gbc.sp());
        EXPECT(0x5cba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9558));
        // CB 7E 0129
        gbc.setState(0x43d1, 0xcb2b, 0xadb0, 0x1ce2, 0xca87, 0x8a66, 0x1, 0x0);
        gbc.writeMem(0x43d1, { 0xcb, 0x7e });
        gbc.writeMem(0x8a66, { 0x8b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcb2b, gbc.sp());
        EXPECT(0x43d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8a66));
        // CB 7E 012A
        gbc.setState(0xaa25, 0xb96b, 0xe700, 0x1a5d, 0x2bfb, 0xd796, 0x1, 0x0);
        gbc.writeMem(0xaa25, { 0xcb, 0x7e });
        gbc.writeMem(0xd796, { 0x46 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb96b, gbc.sp());
        EXPECT(0xaa27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa25));
        EXPECT(0x7e, gbc.readMem(0xaa26));
        EXPECT(0x46, gbc.readMem(0xd796));
        // CB 7E 012B
        gbc.setState(0xc2b1, 0xa31a, 0xdd40, 0xd2c2, 0x9513, 0xe491, 0x1, 0x0);
        gbc.writeMem(0xc2b1, { 0xcb, 0x7e });
        gbc.writeMem(0xe491, { 0x58 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa31a, gbc.sp());
        EXPECT(0xc2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b1));
        EXPECT(0x7e, gbc.readMem(0xc2b2));
        EXPECT(0x58, gbc.readMem(0xe491));
        // CB 7E 012C
        gbc.setState(0xbab9, 0x45fe, 0x21e0, 0x15b2, 0xa1d0, 0x496d, 0x1, 0x1);
        gbc.writeMem(0x496d, { 0x23 });
        gbc.writeMem(0xbab9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x45fe, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab9));
        EXPECT(0x7e, gbc.readMem(0xbaba));
        // CB 7E 012D
        gbc.setState(0x5f9e, 0x2faa, 0x99f0, 0x3202, 0xc6fe, 0x2149, 0x1, 0x0);
        gbc.writeMem(0x2149, { 0x46 });
        gbc.writeMem(0x5f9e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2faa, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 012E
        gbc.setState(0x196c, 0x7eb8, 0x40b0, 0x369a, 0x52c, 0x982b, 0x0, 0x1);
        gbc.writeMem(0x196c, { 0xcb, 0x7e });
        gbc.writeMem(0x982b, { 0x6b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7eb8, gbc.sp());
        EXPECT(0x196e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0x982b));
        // CB 7E 012F
        gbc.setState(0xa978, 0x1d17, 0xe550, 0x2742, 0x7b93, 0x1d66, 0x1, 0x0);
        gbc.writeMem(0x1d66, { 0x1d });
        gbc.writeMem(0xa978, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1d17, gbc.sp());
        EXPECT(0xa97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa978));
        EXPECT(0x7e, gbc.readMem(0xa979));
        // CB 7E 0130
        gbc.setState(0x604d, 0x44fb, 0x9350, 0x4303, 0x54d9, 0x447f, 0x0, 0x1);
        gbc.writeMem(0x447f, { 0xb4 });
        gbc.writeMem(0x604d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x44fb, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0131
        gbc.setState(0xb611, 0x9a16, 0xd210, 0xaf7b, 0x83b9, 0x8886, 0x0, 0x1);
        gbc.writeMem(0x8886, { 0x65 });
        gbc.writeMem(0xb611, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9a16, gbc.sp());
        EXPECT(0xb613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8886));
        EXPECT(0xcb, gbc.readMem(0xb611));
        EXPECT(0x7e, gbc.readMem(0xb612));
        // CB 7E 0132
        gbc.setState(0x8697, 0xe39, 0x2f10, 0x5915, 0xf45d, 0xd852, 0x0, 0x1);
        gbc.writeMem(0x8697, { 0xcb, 0x7e });
        gbc.writeMem(0xd852, { 0x85 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe39, gbc.sp());
        EXPECT(0x8699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8697));
        EXPECT(0x7e, gbc.readMem(0x8698));
        EXPECT(0x85, gbc.readMem(0xd852));
        // CB 7E 0133
        gbc.setState(0xd97a, 0x6c9, 0x28c0, 0x3158, 0xe74a, 0xc1d, 0x1, 0x0);
        gbc.writeMem(0xc1d, { 0x66 });
        gbc.writeMem(0xd97a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6c9, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0x7e, gbc.readMem(0xd97b));
        // CB 7E 0134
        gbc.setState(0x9d70, 0x5161, 0xbcd0, 0xdb25, 0x71b1, 0x884d, 0x0, 0x1);
        gbc.writeMem(0x884d, { 0x91 });
        gbc.writeMem(0x9d70, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5161, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x884d));
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0x7e, gbc.readMem(0x9d71));
        // CB 7E 0135
        gbc.setState(0xb9d3, 0x7d72, 0x7060, 0x1ecf, 0x70c3, 0xb334, 0x1, 0x0);
        gbc.writeMem(0xb334, { 0xda });
        gbc.writeMem(0xb9d3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7d72, gbc.sp());
        EXPECT(0xb9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb334));
        EXPECT(0xcb, gbc.readMem(0xb9d3));
        EXPECT(0x7e, gbc.readMem(0xb9d4));
        // CB 7E 0136
        gbc.setState(0xe8e9, 0x95d, 0x8340, 0xa127, 0x57d2, 0x2336, 0x0, 0x0);
        gbc.writeMem(0x2336, { 0xf4 });
        gbc.writeMem(0xe8e9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x95d, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e9));
        EXPECT(0x7e, gbc.readMem(0xe8ea));
        // CB 7E 0139
        gbc.setState(0xe939, 0x33d1, 0x4e00, 0x46d7, 0x39f7, 0x7e5e, 0x1, 0x1);
        gbc.writeMem(0x7e5e, { 0xed });
        gbc.writeMem(0xe939, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0xe93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe939));
        EXPECT(0x7e, gbc.readMem(0xe93a));
        // CB 7E 013A
        gbc.setState(0x7681, 0x5160, 0x8a90, 0x7e5f, 0xa2f1, 0xc89b, 0x1, 0x1);
        gbc.writeMem(0x7681, { 0xcb, 0x7e });
        gbc.writeMem(0xc89b, { 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5160, gbc.sp());
        EXPECT(0x7683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xc89b));
        // CB 7E 013B
        gbc.setState(0x37ba, 0x941b, 0x7a0, 0x1396, 0x4e82, 0x19, 0x1, 0x1);
        gbc.writeMem(0x19, { 0x9c });
        gbc.writeMem(0x37ba, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x941b, gbc.sp());
        EXPECT(0x37bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 013C
        gbc.setState(0x987e, 0x31e1, 0x88a0, 0x8755, 0x3de4, 0x6031, 0x0, 0x0);
        gbc.writeMem(0x6031, { 0xa9 });
        gbc.writeMem(0x987e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x31e1, gbc.sp());
        EXPECT(0x9880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987e));
        EXPECT(0x7e, gbc.readMem(0x987f));
        // CB 7E 013D
        gbc.setState(0x7eab, 0x9387, 0xdad0, 0x1ced, 0x7554, 0x65f3, 0x0, 0x0);
        gbc.writeMem(0x65f3, { 0x2 });
        gbc.writeMem(0x7eab, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9387, gbc.sp());
        EXPECT(0x7ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 013E
        gbc.setState(0x717a, 0x6214, 0xfb70, 0xb298, 0x4f65, 0xe335, 0x0, 0x1);
        gbc.writeMem(0x717a, { 0xcb, 0x7e });
        gbc.writeMem(0xe335, { 0xae });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6214, gbc.sp());
        EXPECT(0x717c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xe335));
        // CB 7E 013F
        gbc.setState(0x6ed7, 0xed18, 0xf190, 0xc485, 0x275b, 0x8c8b, 0x0, 0x1);
        gbc.writeMem(0x6ed7, { 0xcb, 0x7e });
        gbc.writeMem(0x8c8b, { 0x46 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xed18, gbc.sp());
        EXPECT(0x6ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8c8b));
        // CB 7E 0140
        gbc.setState(0x4a92, 0xf366, 0x6c20, 0x8473, 0x86d5, 0xd20c, 0x0, 0x1);
        gbc.writeMem(0x4a92, { 0xcb, 0x7e });
        gbc.writeMem(0xd20c, { 0xc });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf366, gbc.sp());
        EXPECT(0x4a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xd20c));
        // CB 7E 0141
        gbc.setState(0x1abe, 0xf1b, 0x4d60, 0xd0a2, 0x4db5, 0xe44a, 0x1, 0x0);
        gbc.writeMem(0x1abe, { 0xcb, 0x7e });
        gbc.writeMem(0xe44a, { 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf1b, gbc.sp());
        EXPECT(0x1ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xe44a));
        // CB 7E 0142
        gbc.setState(0x9457, 0x5c1b, 0x9280, 0x7b73, 0x6440, 0x60e9, 0x0, 0x0);
        gbc.writeMem(0x60e9, { 0x34 });
        gbc.writeMem(0x9457, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5c1b, gbc.sp());
        EXPECT(0x9459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9457));
        EXPECT(0x7e, gbc.readMem(0x9458));
        // CB 7E 0143
        gbc.setState(0xe0e1, 0x8c9, 0x1c60, 0xb7c8, 0xbc33, 0x437, 0x0, 0x0);
        gbc.writeMem(0x437, { 0x5a });
        gbc.writeMem(0xe0e1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0xe0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e1));
        EXPECT(0x7e, gbc.readMem(0xe0e2));
        // CB 7E 0144
        gbc.setState(0x4c14, 0xbca0, 0x9c50, 0x4e4d, 0x3cc6, 0xa86c, 0x0, 0x0);
        gbc.writeMem(0x4c14, { 0xcb, 0x7e });
        gbc.writeMem(0xa86c, { 0x60 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbca0, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xa86c));
        // CB 7E 0145
        gbc.setState(0x29f1, 0x5d6a, 0x790, 0xcf4c, 0xbeb3, 0x88fb, 0x1, 0x0);
        gbc.writeMem(0x29f1, { 0xcb, 0x7e });
        gbc.writeMem(0x88fb, { 0xf8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5d6a, gbc.sp());
        EXPECT(0x29f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x88fb));
        // CB 7E 0146
        gbc.setState(0x551a, 0xcbab, 0x5d10, 0x7db1, 0xaac6, 0xece6, 0x0, 0x0);
        gbc.writeMem(0x551a, { 0xcb, 0x7e });
        gbc.writeMem(0xece6, { 0x11 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xcbab, gbc.sp());
        EXPECT(0x551c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xece6));
        // CB 7E 0147
        gbc.setState(0x78bf, 0x937, 0xe320, 0xa153, 0x3930, 0xf166, 0x0, 0x0);
        gbc.writeMem(0x78bf, { 0xcb, 0x7e });
        gbc.writeMem(0xf166, { 0x8b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x937, gbc.sp());
        EXPECT(0x78c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xf166));
        // CB 7E 0148
        gbc.setState(0xc258, 0x574e, 0x2910, 0xd72f, 0xe54e, 0xae05, 0x0, 0x1);
        gbc.writeMem(0xae05, { 0xfe });
        gbc.writeMem(0xc258, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x574e, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xae05));
        EXPECT(0xcb, gbc.readMem(0xc258));
        EXPECT(0x7e, gbc.readMem(0xc259));
        // CB 7E 0149
        gbc.setState(0xc50c, 0xfc21, 0x4c70, 0x7ab, 0x7fc, 0x8db6, 0x0, 0x0);
        gbc.writeMem(0x8db6, { 0x51 });
        gbc.writeMem(0xc50c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfc21, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8db6));
        EXPECT(0xcb, gbc.readMem(0xc50c));
        EXPECT(0x7e, gbc.readMem(0xc50d));
        // CB 7E 014A
        gbc.setState(0x2e4c, 0x392b, 0x1200, 0x9c80, 0xc559, 0x6022, 0x0, 0x0);
        gbc.writeMem(0x2e4c, { 0xcb, 0x7e });
        gbc.writeMem(0x6022, { 0x38 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x2e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 014B
        gbc.setState(0x8513, 0xb70, 0xf0, 0x8160, 0x3879, 0xe7d0, 0x1, 0x1);
        gbc.writeMem(0x8513, { 0xcb, 0x7e });
        gbc.writeMem(0xe7d0, { 0xcf });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb70, gbc.sp());
        EXPECT(0x8515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8513));
        EXPECT(0x7e, gbc.readMem(0x8514));
        EXPECT(0xcf, gbc.readMem(0xe7d0));
        // CB 7E 014C
        gbc.setState(0x91cd, 0x3194, 0xd160, 0x3699, 0xf74d, 0xd808, 0x0, 0x0);
        gbc.writeMem(0x91cd, { 0xcb, 0x7e });
        gbc.writeMem(0xd808, { 0x3d });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x91cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cd));
        EXPECT(0x7e, gbc.readMem(0x91ce));
        EXPECT(0x3d, gbc.readMem(0xd808));
        // CB 7E 014D
        gbc.setState(0xca36, 0x7a18, 0xd6f0, 0xac3, 0xdb17, 0x5ea, 0x1, 0x1);
        gbc.writeMem(0x5ea, { 0x7d });
        gbc.writeMem(0xca36, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7a18, gbc.sp());
        EXPECT(0xca38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca36));
        EXPECT(0x7e, gbc.readMem(0xca37));
        // CB 7E 014E
        gbc.setState(0xc29e, 0x4cdb, 0x2740, 0xdf5b, 0x707b, 0x666f, 0x1, 0x1);
        gbc.writeMem(0x666f, { 0xb8 });
        gbc.writeMem(0xc29e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4cdb, gbc.sp());
        EXPECT(0xc2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc29e));
        EXPECT(0x7e, gbc.readMem(0xc29f));
        // CB 7E 014F
        gbc.setState(0xed20, 0x73c2, 0x19d0, 0x705f, 0x861d, 0xf9d, 0x0, 0x0);
        gbc.writeMem(0xf9d, { 0xb });
        gbc.writeMem(0xed20, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x73c2, gbc.sp());
        EXPECT(0xed22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed20));
        EXPECT(0x7e, gbc.readMem(0xed21));
        // CB 7E 0150
        gbc.setState(0x76c5, 0xf64f, 0x1740, 0x99c9, 0x6a9f, 0xdba6, 0x0, 0x0);
        gbc.writeMem(0x76c5, { 0xcb, 0x7e });
        gbc.writeMem(0xdba6, { 0x64 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf64f, gbc.sp());
        EXPECT(0x76c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xdba6));
        // CB 7E 0151
        gbc.setState(0x40d2, 0x3087, 0xc6d0, 0xc9d2, 0x52d8, 0x3810, 0x1, 0x1);
        gbc.writeMem(0x3810, { 0x23 });
        gbc.writeMem(0x40d2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3087, gbc.sp());
        EXPECT(0x40d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0152
        gbc.setState(0x39c5, 0x42a4, 0xeed0, 0x9194, 0xd39b, 0xc6df, 0x1, 0x0);
        gbc.writeMem(0x39c5, { 0xcb, 0x7e });
        gbc.writeMem(0xc6df, { 0xf0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x42a4, gbc.sp());
        EXPECT(0x39c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xc6df));
        // CB 7E 0153
        gbc.setState(0x2b53, 0x1fe4, 0x300, 0x9336, 0xc0e3, 0xfc43, 0x0, 0x1);
        gbc.writeMem(0x2b53, { 0xcb, 0x7e });
        gbc.writeMem(0xfc43, { 0x4 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1fe4, gbc.sp());
        EXPECT(0x2b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xfc43));
        // CB 7E 0154
        gbc.setState(0x9fe6, 0x990, 0xdc40, 0xd112, 0x80d8, 0x51d5, 0x0, 0x0);
        gbc.writeMem(0x51d5, { 0xde });
        gbc.writeMem(0x9fe6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x990, gbc.sp());
        EXPECT(0x9fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe6));
        EXPECT(0x7e, gbc.readMem(0x9fe7));
        // CB 7E 0155
        gbc.setState(0xda6c, 0x93e3, 0x1f50, 0x9fd, 0xd7cd, 0x3be2, 0x1, 0x0);
        gbc.writeMem(0x3be2, { 0xc9 });
        gbc.writeMem(0xda6c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x93e3, gbc.sp());
        EXPECT(0xda6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6c));
        EXPECT(0x7e, gbc.readMem(0xda6d));
        // CB 7E 0156
        gbc.setState(0x350f, 0x30fc, 0xb60, 0x2b89, 0xe58c, 0x6cf3, 0x0, 0x0);
        gbc.writeMem(0x350f, { 0xcb, 0x7e });
        gbc.writeMem(0x6cf3, { 0x15 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x30fc, gbc.sp());
        EXPECT(0x3511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0157
        gbc.setState(0x466b, 0x8a0e, 0x1540, 0xcff5, 0x54ae, 0xa8be, 0x1, 0x1);
        gbc.writeMem(0x466b, { 0xcb, 0x7e });
        gbc.writeMem(0xa8be, { 0x39 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8a0e, gbc.sp());
        EXPECT(0x466d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa8be));
        // CB 7E 0158
        gbc.setState(0x201d, 0x5db, 0x710, 0x283e, 0xcc05, 0xad0a, 0x0, 0x0);
        gbc.writeMem(0x201d, { 0xcb, 0x7e });
        gbc.writeMem(0xad0a, { 0xbb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5db, gbc.sp());
        EXPECT(0x201f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xad0a));
        // CB 7E 0159
        gbc.setState(0x87e2, 0xbabc, 0x7340, 0xa987, 0x5eb8, 0x987e, 0x0, 0x1);
        gbc.writeMem(0x87e2, { 0xcb, 0x7e });
        gbc.writeMem(0x987e, { 0x6e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0x87e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e2));
        EXPECT(0x7e, gbc.readMem(0x87e3));
        EXPECT(0x6e, gbc.readMem(0x987e));
        // CB 7E 015A
        gbc.setState(0xbbf8, 0xe0a3, 0x4e70, 0xef10, 0x7ef, 0x5907, 0x0, 0x0);
        gbc.writeMem(0x5907, { 0xbd });
        gbc.writeMem(0xbbf8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe0a3, gbc.sp());
        EXPECT(0xbbfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf8));
        EXPECT(0x7e, gbc.readMem(0xbbf9));
        // CB 7E 015B
        gbc.setState(0xbac, 0xcd20, 0xe9f0, 0xd8ef, 0x1540, 0x2448, 0x0, 0x0);
        gbc.writeMem(0xbac, { 0xcb, 0x7e });
        gbc.writeMem(0x2448, { 0x21 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcd20, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 015D
        gbc.setState(0x65be, 0xe2d5, 0xe750, 0xff38, 0xa8a1, 0x52ed, 0x0, 0x1);
        gbc.writeMem(0x52ed, { 0x9f });
        gbc.writeMem(0x65be, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe2d5, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 015E
        gbc.setState(0x3a04, 0xe248, 0x4790, 0xaf03, 0xd1a5, 0xc7a1, 0x0, 0x1);
        gbc.writeMem(0x3a04, { 0xcb, 0x7e });
        gbc.writeMem(0xc7a1, { 0x32 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe248, gbc.sp());
        EXPECT(0x3a06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xc7a1));
        // CB 7E 015F
        gbc.setState(0xdf62, 0xa27a, 0x9c90, 0xcd97, 0xa4f9, 0xd9ee, 0x1, 0x0);
        gbc.writeMem(0xd9ee, { 0x4 });
        gbc.writeMem(0xdf62, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa27a, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xd9ee));
        EXPECT(0xcb, gbc.readMem(0xdf62));
        EXPECT(0x7e, gbc.readMem(0xdf63));
        // CB 7E 0160
        gbc.setState(0x9503, 0x819c, 0x95c0, 0xe225, 0x50d3, 0x2ff1, 0x1, 0x1);
        gbc.writeMem(0x2ff1, { 0xaa });
        gbc.writeMem(0x9503, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x819c, gbc.sp());
        EXPECT(0x9505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9503));
        EXPECT(0x7e, gbc.readMem(0x9504));
        // CB 7E 0161
        gbc.setState(0xac5b, 0x7e9e, 0x4030, 0x3cca, 0x3c7a, 0x9f1d, 0x0, 0x0);
        gbc.writeMem(0x9f1d, { 0x21 });
        gbc.writeMem(0xac5b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7e9e, gbc.sp());
        EXPECT(0xac5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9f1d));
        EXPECT(0xcb, gbc.readMem(0xac5b));
        EXPECT(0x7e, gbc.readMem(0xac5c));
        // CB 7E 0162
        gbc.setState(0x4a89, 0x4113, 0x9920, 0x1233, 0xad5e, 0xe762, 0x1, 0x0);
        gbc.writeMem(0x4a89, { 0xcb, 0x7e });
        gbc.writeMem(0xe762, { 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4113, gbc.sp());
        EXPECT(0x4a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xe762));
        // CB 7E 0163
        gbc.setState(0x9cc6, 0x2a1b, 0x3d30, 0x7031, 0x260d, 0xf0cc, 0x1, 0x1);
        gbc.writeMem(0x9cc6, { 0xcb, 0x7e });
        gbc.writeMem(0xf0cc, { 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2a1b, gbc.sp());
        EXPECT(0x9cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc6));
        EXPECT(0x7e, gbc.readMem(0x9cc7));
        EXPECT(0xcb, gbc.readMem(0xf0cc));
        // CB 7E 0164
        gbc.setState(0x599b, 0xddc4, 0x8f50, 0xa34a, 0x183, 0xbef9, 0x0, 0x1);
        gbc.writeMem(0x599b, { 0xcb, 0x7e });
        gbc.writeMem(0xbef9, { 0xfe });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xddc4, gbc.sp());
        EXPECT(0x599d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xbef9));
        // CB 7E 0165
        gbc.setState(0xb365, 0x8cd0, 0xc3d0, 0x9009, 0xe613, 0x734e, 0x1, 0x1);
        gbc.writeMem(0x734e, { 0x84 });
        gbc.writeMem(0xb365, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8cd0, gbc.sp());
        EXPECT(0xb367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb365));
        EXPECT(0x7e, gbc.readMem(0xb366));
        // CB 7E 0166
        gbc.setState(0xdc8e, 0x64ff, 0x7930, 0x8dfa, 0x5898, 0xea16, 0x0, 0x0);
        gbc.writeMem(0xdc8e, { 0xcb, 0x7e });
        gbc.writeMem(0xea16, { 0x2a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x64ff, gbc.sp());
        EXPECT(0xdc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8e));
        EXPECT(0x7e, gbc.readMem(0xdc8f));
        EXPECT(0x2a, gbc.readMem(0xea16));
        // CB 7E 0167
        gbc.setState(0xd5de, 0x856d, 0x9ab0, 0xdcf1, 0xcc2d, 0xb779, 0x0, 0x0);
        gbc.writeMem(0xb779, { 0x9c });
        gbc.writeMem(0xd5de, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xb779));
        EXPECT(0xcb, gbc.readMem(0xd5de));
        EXPECT(0x7e, gbc.readMem(0xd5df));
        // CB 7E 0168
        gbc.setState(0x5358, 0xa59f, 0x7c20, 0x9e3a, 0x6fdd, 0xc327, 0x1, 0x1);
        gbc.writeMem(0x5358, { 0xcb, 0x7e });
        gbc.writeMem(0xc327, { 0x6b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa59f, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xc327));
        // CB 7E 0169
        gbc.setState(0x45f6, 0xbde9, 0x3e00, 0xfab3, 0xc64, 0x4e43, 0x1, 0x0);
        gbc.writeMem(0x45f6, { 0xcb, 0x7e });
        gbc.writeMem(0x4e43, { 0xde });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbde9, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 016A
        gbc.setState(0x8718, 0x4750, 0xa300, 0x118a, 0xb975, 0xf795, 0x0, 0x0);
        gbc.writeMem(0x8718, { 0xcb, 0x7e });
        gbc.writeMem(0xf795, { 0x66 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4750, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8718));
        EXPECT(0x7e, gbc.readMem(0x8719));
        EXPECT(0x66, gbc.readMem(0xf795));
        // CB 7E 016B
        gbc.setState(0xd057, 0xbd0b, 0xf5c0, 0x4238, 0xa4cd, 0xa515, 0x1, 0x0);
        gbc.writeMem(0xa515, { 0xe5 });
        gbc.writeMem(0xd057, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbd0b, gbc.sp());
        EXPECT(0xd059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa515));
        EXPECT(0xcb, gbc.readMem(0xd057));
        EXPECT(0x7e, gbc.readMem(0xd058));
        // CB 7E 016C
        gbc.setState(0xa473, 0x45e5, 0x3660, 0x4000, 0x7db2, 0x2dbd, 0x0, 0x1);
        gbc.writeMem(0x2dbd, { 0xe1 });
        gbc.writeMem(0xa473, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x45e5, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa473));
        EXPECT(0x7e, gbc.readMem(0xa474));
        // CB 7E 016D
        gbc.setState(0x3b61, 0x54e5, 0x3020, 0x7682, 0x94d3, 0xe59e, 0x0, 0x1);
        gbc.writeMem(0x3b61, { 0xcb, 0x7e });
        gbc.writeMem(0xe59e, { 0x69 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x54e5, gbc.sp());
        EXPECT(0x3b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe59e));
        // CB 7E 016E
        gbc.setState(0xb289, 0x3f08, 0x2d10, 0xec92, 0x1a2, 0x232e, 0x1, 0x1);
        gbc.writeMem(0x232e, { 0xb1 });
        gbc.writeMem(0xb289, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0xb28b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb289));
        EXPECT(0x7e, gbc.readMem(0xb28a));
        // CB 7E 016F
        gbc.setState(0xcb34, 0x37b2, 0xfb60, 0x6cd8, 0x3495, 0xc8ae, 0x0, 0x1);
        gbc.writeMem(0xc8ae, { 0x33 });
        gbc.writeMem(0xcb34, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x37b2, gbc.sp());
        EXPECT(0xcb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xc8ae));
        EXPECT(0xcb, gbc.readMem(0xcb34));
        EXPECT(0x7e, gbc.readMem(0xcb35));
        // CB 7E 0170
        gbc.setState(0x7666, 0xc30e, 0x2540, 0x3b0b, 0x3f9a, 0xd1cb, 0x1, 0x1);
        gbc.writeMem(0x7666, { 0xcb, 0x7e });
        gbc.writeMem(0xd1cb, { 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc30e, gbc.sp());
        EXPECT(0x7668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xd1cb));
        // CB 7E 0171
        gbc.setState(0x4b2d, 0x61d6, 0x8a10, 0x6f07, 0x8f31, 0x2442, 0x0, 0x0);
        gbc.writeMem(0x2442, { 0x5 });
        gbc.writeMem(0x4b2d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x61d6, gbc.sp());
        EXPECT(0x4b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0172
        gbc.setState(0xd576, 0x7ea, 0x2f70, 0xb408, 0xb9a6, 0x26ea, 0x0, 0x1);
        gbc.writeMem(0x26ea, { 0xbe });
        gbc.writeMem(0xd576, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7ea, gbc.sp());
        EXPECT(0xd578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd576));
        EXPECT(0x7e, gbc.readMem(0xd577));
        // CB 7E 0173
        gbc.setState(0xcb86, 0xab4e, 0xf010, 0x6917, 0x9a79, 0x7fe8, 0x1, 0x0);
        gbc.writeMem(0x7fe8, { 0xe1 });
        gbc.writeMem(0xcb86, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0xcb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb86));
        EXPECT(0x7e, gbc.readMem(0xcb87));
        // CB 7E 0174
        gbc.setState(0x77c7, 0xa451, 0x6840, 0x3b70, 0x232f, 0xe57a, 0x0, 0x1);
        gbc.writeMem(0x77c7, { 0xcb, 0x7e });
        gbc.writeMem(0xe57a, { 0x20 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa451, gbc.sp());
        EXPECT(0x77c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xe57a));
        // CB 7E 0175
        gbc.setState(0x2e12, 0xb27c, 0xa470, 0x1de9, 0x8e5a, 0xc122, 0x1, 0x1);
        gbc.writeMem(0x2e12, { 0xcb, 0x7e });
        gbc.writeMem(0xc122, { 0xcc });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc122));
        // CB 7E 0176
        gbc.setState(0xa833, 0x1880, 0x1830, 0x1483, 0x9b57, 0xb43c, 0x0, 0x0);
        gbc.writeMem(0xa833, { 0xcb, 0x7e });
        gbc.writeMem(0xb43c, { 0x75 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1880, gbc.sp());
        EXPECT(0xa835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa833));
        EXPECT(0x7e, gbc.readMem(0xa834));
        EXPECT(0x75, gbc.readMem(0xb43c));
        // CB 7E 0177
        gbc.setState(0xc990, 0xd727, 0xd490, 0x99dd, 0x7ddd, 0x2888, 0x1, 0x1);
        gbc.writeMem(0x2888, { 0x9e });
        gbc.writeMem(0xc990, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd727, gbc.sp());
        EXPECT(0xc992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc990));
        EXPECT(0x7e, gbc.readMem(0xc991));
        // CB 7E 0178
        gbc.setState(0xaeab, 0xacf6, 0x14a0, 0xef1d, 0xad1c, 0xb9fe, 0x1, 0x1);
        gbc.writeMem(0xaeab, { 0xcb, 0x7e });
        gbc.writeMem(0xb9fe, { 0xcc });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xacf6, gbc.sp());
        EXPECT(0xaead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeab));
        EXPECT(0x7e, gbc.readMem(0xaeac));
        EXPECT(0xcc, gbc.readMem(0xb9fe));
        // CB 7E 0179
        gbc.setState(0xe124, 0xb653, 0x3ea0, 0x394a, 0x2690, 0x4e17, 0x1, 0x1);
        gbc.writeMem(0x4e17, { 0xc8 });
        gbc.writeMem(0xe124, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb653, gbc.sp());
        EXPECT(0xe126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe124));
        EXPECT(0x7e, gbc.readMem(0xe125));
        // CB 7E 017A
        gbc.setState(0x7f54, 0x5f39, 0x2f00, 0x3dd6, 0x878d, 0x65e8, 0x0, 0x0);
        gbc.writeMem(0x65e8, { 0x87 });
        gbc.writeMem(0x7f54, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5f39, gbc.sp());
        EXPECT(0x7f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 017B
        gbc.setState(0x5421, 0x8a3b, 0x9cb0, 0x3041, 0x20d2, 0xba31, 0x0, 0x1);
        gbc.writeMem(0x5421, { 0xcb, 0x7e });
        gbc.writeMem(0xba31, { 0xa5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8a3b, gbc.sp());
        EXPECT(0x5423, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xba31));
        // CB 7E 017C
        gbc.setState(0xe73, 0x4e8, 0xfdc0, 0x1939, 0xf3ff, 0x7bb6, 0x0, 0x1);
        gbc.writeMem(0xe73, { 0xcb, 0x7e });
        gbc.writeMem(0x7bb6, { 0x14 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4e8, gbc.sp());
        EXPECT(0xe75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 017D
        gbc.setState(0x4cf3, 0xeefd, 0x4030, 0xca90, 0x248f, 0x693, 0x1, 0x0);
        gbc.writeMem(0x693, { 0xe6 });
        gbc.writeMem(0x4cf3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeefd, gbc.sp());
        EXPECT(0x4cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 017E
        gbc.setState(0x65ae, 0xb7a1, 0xacb0, 0xd29, 0x7ed4, 0xc78a, 0x0, 0x1);
        gbc.writeMem(0x65ae, { 0xcb, 0x7e });
        gbc.writeMem(0xc78a, { 0xff });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb7a1, gbc.sp());
        EXPECT(0x65b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xc78a));
        // CB 7E 017F
        gbc.setState(0x2a86, 0xb76a, 0x36f0, 0xa8a8, 0x2570, 0x9bdc, 0x0, 0x1);
        gbc.writeMem(0x2a86, { 0xcb, 0x7e });
        gbc.writeMem(0x9bdc, { 0x43 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb76a, gbc.sp());
        EXPECT(0x2a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9bdc));
        // CB 7E 0180
        gbc.setState(0xa3ef, 0x3c33, 0xaf10, 0xedf4, 0x710, 0x2814, 0x0, 0x0);
        gbc.writeMem(0x2814, { 0x6c });
        gbc.writeMem(0xa3ef, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3c33, gbc.sp());
        EXPECT(0xa3f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ef));
        EXPECT(0x7e, gbc.readMem(0xa3f0));
        // CB 7E 0181
        gbc.setState(0xd875, 0x8338, 0xbf10, 0x3da7, 0x13cb, 0x6d8c, 0x0, 0x0);
        gbc.writeMem(0x6d8c, { 0x21 });
        gbc.writeMem(0xd875, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8338, gbc.sp());
        EXPECT(0xd877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd875));
        EXPECT(0x7e, gbc.readMem(0xd876));
        // CB 7E 0182
        gbc.setState(0xe183, 0x3807, 0xfb60, 0x1fce, 0x552a, 0xd18c, 0x0, 0x0);
        gbc.writeMem(0xd18c, { 0xb9 });
        gbc.writeMem(0xe183, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3807, gbc.sp());
        EXPECT(0xe185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd18c));
        EXPECT(0xcb, gbc.readMem(0xe183));
        EXPECT(0x7e, gbc.readMem(0xe184));
        // CB 7E 0183
        gbc.setState(0xde79, 0xcfea, 0x3fe0, 0xa777, 0x2cd7, 0x665d, 0x0, 0x1);
        gbc.writeMem(0x665d, { 0x5f });
        gbc.writeMem(0xde79, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde79));
        EXPECT(0x7e, gbc.readMem(0xde7a));
        // CB 7E 0184
        gbc.setState(0xe678, 0x774e, 0xb1a0, 0x1bf, 0x6b7a, 0x6802, 0x0, 0x1);
        gbc.writeMem(0x6802, { 0xb4 });
        gbc.writeMem(0xe678, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x774e, gbc.sp());
        EXPECT(0xe67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe678));
        EXPECT(0x7e, gbc.readMem(0xe679));
        // CB 7E 0185
        gbc.setState(0x9cc0, 0x29d, 0x6170, 0xc95e, 0xfde8, 0x861c, 0x0, 0x0);
        gbc.writeMem(0x861c, { 0xf6 });
        gbc.writeMem(0x9cc0, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x29d, gbc.sp());
        EXPECT(0x9cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x861c));
        EXPECT(0xcb, gbc.readMem(0x9cc0));
        EXPECT(0x7e, gbc.readMem(0x9cc1));
        // CB 7E 0186
        gbc.setState(0x98ab, 0xa7db, 0x5880, 0x5d1a, 0x9641, 0x2b3a, 0x0, 0x1);
        gbc.writeMem(0x2b3a, { 0x7f });
        gbc.writeMem(0x98ab, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa7db, gbc.sp());
        EXPECT(0x98ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ab));
        EXPECT(0x7e, gbc.readMem(0x98ac));
        // CB 7E 0187
        gbc.setState(0x53a6, 0x7ff, 0xbc90, 0x97cd, 0x6849, 0x5346, 0x0, 0x0);
        gbc.writeMem(0x5346, { 0xa3 });
        gbc.writeMem(0x53a6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7ff, gbc.sp());
        EXPECT(0x53a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0188
        gbc.setState(0x15d7, 0x833e, 0x7740, 0x9f44, 0x4a57, 0x44a, 0x0, 0x1);
        gbc.writeMem(0x44a, { 0x49 });
        gbc.writeMem(0x15d7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x833e, gbc.sp());
        EXPECT(0x15d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0189
        gbc.setState(0x5455, 0xb069, 0xaac0, 0x81d0, 0x29d4, 0x19d1, 0x0, 0x0);
        gbc.writeMem(0x19d1, { 0x14 });
        gbc.writeMem(0x5455, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb069, gbc.sp());
        EXPECT(0x5457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 018A
        gbc.setState(0x7d5e, 0x2ea0, 0x3640, 0xcc38, 0x2cc0, 0x9bec, 0x1, 0x0);
        gbc.writeMem(0x7d5e, { 0xcb, 0x7e });
        gbc.writeMem(0x9bec, { 0x8f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2ea0, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bec));
        // CB 7E 018B
        gbc.setState(0xc2b2, 0x3819, 0x4740, 0xcff8, 0xf11a, 0xdcf0, 0x1, 0x0);
        gbc.writeMem(0xc2b2, { 0xcb, 0x7e });
        gbc.writeMem(0xdcf0, { 0x7f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3819, gbc.sp());
        EXPECT(0xc2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b2));
        EXPECT(0x7e, gbc.readMem(0xc2b3));
        EXPECT(0x7f, gbc.readMem(0xdcf0));
        // CB 7E 018C
        gbc.setState(0xe7d0, 0xef82, 0x27b0, 0xbcc5, 0x1d12, 0x3e8, 0x0, 0x0);
        gbc.writeMem(0x3e8, { 0x9f });
        gbc.writeMem(0xe7d0, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xef82, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d0));
        EXPECT(0x7e, gbc.readMem(0xe7d1));
        // CB 7E 018D
        gbc.setState(0x8f04, 0xe99a, 0x4580, 0x1386, 0x1df8, 0x79a1, 0x1, 0x0);
        gbc.writeMem(0x79a1, { 0xfb });
        gbc.writeMem(0x8f04, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe99a, gbc.sp());
        EXPECT(0x8f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f04));
        EXPECT(0x7e, gbc.readMem(0x8f05));
        // CB 7E 018F
        gbc.setState(0x9bce, 0xe669, 0xc9b0, 0x55de, 0x5d10, 0x5894, 0x0, 0x1);
        gbc.writeMem(0x5894, { 0xfa });
        gbc.writeMem(0x9bce, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe669, gbc.sp());
        EXPECT(0x9bd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bce));
        EXPECT(0x7e, gbc.readMem(0x9bcf));
        // CB 7E 0190
        gbc.setState(0x8961, 0x226f, 0x5860, 0xf894, 0x9c30, 0xd6f0, 0x0, 0x0);
        gbc.writeMem(0x8961, { 0xcb, 0x7e });
        gbc.writeMem(0xd6f0, { 0x4c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x8963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8961));
        EXPECT(0x7e, gbc.readMem(0x8962));
        EXPECT(0x4c, gbc.readMem(0xd6f0));
        // CB 7E 0191
        gbc.setState(0xe29d, 0x9423, 0x53d0, 0xc5b9, 0xc924, 0x94ac, 0x1, 0x0);
        gbc.writeMem(0x94ac, { 0x53 });
        gbc.writeMem(0xe29d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9423, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x94ac));
        EXPECT(0xcb, gbc.readMem(0xe29d));
        EXPECT(0x7e, gbc.readMem(0xe29e));
        // CB 7E 0192
        gbc.setState(0xd847, 0x7f68, 0x2190, 0x2b59, 0x7a9b, 0x1e99, 0x0, 0x0);
        gbc.writeMem(0x1e99, { 0xb6 });
        gbc.writeMem(0xd847, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7f68, gbc.sp());
        EXPECT(0xd849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd847));
        EXPECT(0x7e, gbc.readMem(0xd848));
        // CB 7E 0193
        gbc.setState(0x524, 0xc02b, 0xcf0, 0xdeeb, 0xe82f, 0x42a6, 0x0, 0x0);
        gbc.writeMem(0x524, { 0xcb, 0x7e });
        gbc.writeMem(0x42a6, { 0x31 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc02b, gbc.sp());
        EXPECT(0x526, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0194
        gbc.setState(0xda81, 0xfed1, 0x3ba0, 0xd193, 0x4323, 0x3836, 0x0, 0x0);
        gbc.writeMem(0x3836, { 0x79 });
        gbc.writeMem(0xda81, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfed1, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda81));
        EXPECT(0x7e, gbc.readMem(0xda82));
        // CB 7E 0195
        gbc.setState(0xbb8c, 0xaa67, 0xaa20, 0xfce3, 0xcf59, 0x2cc4, 0x1, 0x1);
        gbc.writeMem(0x2cc4, { 0x13 });
        gbc.writeMem(0xbb8c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaa67, gbc.sp());
        EXPECT(0xbb8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb8c));
        EXPECT(0x7e, gbc.readMem(0xbb8d));
        // CB 7E 0196
        gbc.setState(0x4b75, 0x6bc4, 0x31f0, 0xbcb8, 0xa0d1, 0xd18a, 0x0, 0x0);
        gbc.writeMem(0x4b75, { 0xcb, 0x7e });
        gbc.writeMem(0xd18a, { 0x8d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0x4b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd18a));
        // CB 7E 0197
        gbc.setState(0x333e, 0x8ec4, 0x4860, 0xc8f2, 0x3558, 0x4163, 0x1, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0x7e });
        gbc.writeMem(0x4163, { 0x14 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8ec4, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0198
        gbc.setState(0xb10c, 0xa28, 0x4630, 0x7829, 0x8558, 0x1327, 0x1, 0x1);
        gbc.writeMem(0x1327, { 0x5a });
        gbc.writeMem(0xb10c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0xb10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb10c));
        EXPECT(0x7e, gbc.readMem(0xb10d));
        // CB 7E 0199
        gbc.setState(0xc6bf, 0x9993, 0x5820, 0x6174, 0x1975, 0xb2d1, 0x1, 0x0);
        gbc.writeMem(0xb2d1, { 0x45 });
        gbc.writeMem(0xc6bf, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9993, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xb2d1));
        EXPECT(0xcb, gbc.readMem(0xc6bf));
        EXPECT(0x7e, gbc.readMem(0xc6c0));
        // CB 7E 019A
        gbc.setState(0x3eb8, 0x3615, 0x7c90, 0xd8f5, 0xcb67, 0xc720, 0x0, 0x1);
        gbc.writeMem(0x3eb8, { 0xcb, 0x7e });
        gbc.writeMem(0xc720, { 0xe9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3615, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xc720));
        // CB 7E 019B
        gbc.setState(0x81a3, 0xca6d, 0x8e40, 0x2502, 0x6825, 0x4cea, 0x1, 0x1);
        gbc.writeMem(0x4cea, { 0x75 });
        gbc.writeMem(0x81a3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xca6d, gbc.sp());
        EXPECT(0x81a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a3));
        EXPECT(0x7e, gbc.readMem(0x81a4));
        // CB 7E 019C
        gbc.setState(0x5dad, 0xf035, 0x1070, 0xa4d6, 0x89ca, 0x75fd, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0xcb, 0x7e });
        gbc.writeMem(0x75fd, { 0x4d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf035, gbc.sp());
        EXPECT(0x5daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 019D
        gbc.setState(0xe478, 0x8352, 0x2d0, 0x1489, 0x363, 0x879b, 0x0, 0x0);
        gbc.writeMem(0x879b, { 0x3c });
        gbc.writeMem(0xe478, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8352, gbc.sp());
        EXPECT(0xe47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x879b));
        EXPECT(0xcb, gbc.readMem(0xe478));
        EXPECT(0x7e, gbc.readMem(0xe479));
        // CB 7E 019E
        gbc.setState(0x2151, 0xbd65, 0xd130, 0x56f0, 0xea3d, 0xba9d, 0x0, 0x1);
        gbc.writeMem(0x2151, { 0xcb, 0x7e });
        gbc.writeMem(0xba9d, { 0xa6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0x2153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xba9d));
        // CB 7E 019F
        gbc.setState(0x11d5, 0x11d1, 0x4a50, 0x50b3, 0xb5a4, 0x205b, 0x1, 0x1);
        gbc.writeMem(0x11d5, { 0xcb, 0x7e });
        gbc.writeMem(0x205b, { 0xba });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x11d1, gbc.sp());
        EXPECT(0x11d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01A0
        gbc.setState(0xc787, 0x26e6, 0xd480, 0x3da6, 0xf0e0, 0xd8ca, 0x0, 0x0);
        gbc.writeMem(0xc787, { 0xcb, 0x7e });
        gbc.writeMem(0xd8ca, { 0x6f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x26e6, gbc.sp());
        EXPECT(0xc789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc787));
        EXPECT(0x7e, gbc.readMem(0xc788));
        EXPECT(0x6f, gbc.readMem(0xd8ca));
        // CB 7E 01A2
        gbc.setState(0x14b9, 0x3660, 0x1f80, 0x1053, 0xfd1d, 0xcda, 0x0, 0x0);
        gbc.writeMem(0xcda, { 0x92 });
        gbc.writeMem(0x14b9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0x14bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01A3
        gbc.setState(0x9e64, 0xd8bd, 0x6290, 0xb3aa, 0xebb3, 0xa46d, 0x0, 0x0);
        gbc.writeMem(0x9e64, { 0xcb, 0x7e });
        gbc.writeMem(0xa46d, { 0xd5 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd8bd, gbc.sp());
        EXPECT(0x9e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e64));
        EXPECT(0x7e, gbc.readMem(0x9e65));
        EXPECT(0xd5, gbc.readMem(0xa46d));
        // CB 7E 01A4
        gbc.setState(0x2446, 0xcfae, 0x4e60, 0x2436, 0x4d1f, 0xfe23, 0x0, 0x1);
        gbc.writeMem(0x2446, { 0xcb, 0x7e });
        gbc.writeMem(0xfe23, { 0x9f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xcfae, gbc.sp());
        EXPECT(0x2448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xfe23));
        // CB 7E 01A5
        gbc.setState(0x1864, 0xa96d, 0x7ec0, 0x6a6d, 0xc451, 0xbd06, 0x0, 0x0);
        gbc.writeMem(0x1864, { 0xcb, 0x7e });
        gbc.writeMem(0xbd06, { 0x35 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa96d, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbd06));
        // CB 7E 01A6
        gbc.setState(0x6001, 0x20d8, 0xdc90, 0x37, 0x6198, 0xa8be, 0x1, 0x1);
        gbc.writeMem(0x6001, { 0xcb, 0x7e });
        gbc.writeMem(0xa8be, { 0x39 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0x6003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xa8be));
        // CB 7E 01A7
        gbc.setState(0x2e6, 0x9acf, 0x2ff0, 0x6158, 0xc2c5, 0x99b6, 0x1, 0x1);
        gbc.writeMem(0x2e6, { 0xcb, 0x7e });
        gbc.writeMem(0x99b6, { 0xc0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9acf, gbc.sp());
        EXPECT(0x2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x99b6));
        // CB 7E 01A8
        gbc.setState(0xbe5e, 0x160c, 0x9eb0, 0xffa0, 0x9271, 0xc540, 0x0, 0x0);
        gbc.writeMem(0xbe5e, { 0xcb, 0x7e });
        gbc.writeMem(0xc540, { 0x98 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x160c, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe5e));
        EXPECT(0x7e, gbc.readMem(0xbe5f));
        EXPECT(0x98, gbc.readMem(0xc540));
        // CB 7E 01A9
        gbc.setState(0xb6fd, 0x7867, 0xa7a0, 0xfef9, 0x3c0f, 0xce0d, 0x1, 0x1);
        gbc.writeMem(0xb6fd, { 0xcb, 0x7e });
        gbc.writeMem(0xce0d, { 0x98 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7867, gbc.sp());
        EXPECT(0xb6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6fd));
        EXPECT(0x7e, gbc.readMem(0xb6fe));
        EXPECT(0x98, gbc.readMem(0xce0d));
        // CB 7E 01AA
        gbc.setState(0xca08, 0x6fa1, 0x5460, 0xeca4, 0xab9, 0xe4b7, 0x1, 0x1);
        gbc.writeMem(0xca08, { 0xcb, 0x7e });
        gbc.writeMem(0xe4b7, { 0x46 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6fa1, gbc.sp());
        EXPECT(0xca0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca08));
        EXPECT(0x7e, gbc.readMem(0xca09));
        EXPECT(0x46, gbc.readMem(0xe4b7));
        // CB 7E 01AB
        gbc.setState(0x938, 0x1397, 0xb5f0, 0xf156, 0xdc88, 0xd2c7, 0x0, 0x0);
        gbc.writeMem(0x938, { 0xcb, 0x7e });
        gbc.writeMem(0xd2c7, { 0x35 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0x93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xd2c7));
        // CB 7E 01AC
        gbc.setState(0xcaa8, 0xe931, 0xf6c0, 0x6fc5, 0xadf7, 0x85f, 0x1, 0x1);
        gbc.writeMem(0x85f, { 0x94 });
        gbc.writeMem(0xcaa8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe931, gbc.sp());
        EXPECT(0xcaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa8));
        EXPECT(0x7e, gbc.readMem(0xcaa9));
        // CB 7E 01AD
        gbc.setState(0x66ac, 0x2138, 0xa3f0, 0xbc80, 0x86d6, 0x7c05, 0x0, 0x0);
        gbc.writeMem(0x66ac, { 0xcb, 0x7e });
        gbc.writeMem(0x7c05, { 0xa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0x66ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01AE
        gbc.setState(0x9caa, 0xc1f3, 0xf7c0, 0xa4c8, 0x2c1f, 0x615d, 0x0, 0x1);
        gbc.writeMem(0x615d, { 0x5b });
        gbc.writeMem(0x9caa, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc1f3, gbc.sp());
        EXPECT(0x9cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caa));
        EXPECT(0x7e, gbc.readMem(0x9cab));
        // CB 7E 01B0
        gbc.setState(0xcd00, 0x526c, 0xf4e0, 0x7c9d, 0xfa60, 0xa209, 0x0, 0x1);
        gbc.writeMem(0xa209, { 0x8e });
        gbc.writeMem(0xcd00, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x526c, gbc.sp());
        EXPECT(0xcd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa209));
        EXPECT(0xcb, gbc.readMem(0xcd00));
        EXPECT(0x7e, gbc.readMem(0xcd01));
        // CB 7E 01B1
        gbc.setState(0xea68, 0xcd9c, 0x13a0, 0x5efc, 0xa2ac, 0x2a59, 0x0, 0x1);
        gbc.writeMem(0x2a59, { 0x47 });
        gbc.writeMem(0xea68, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcd9c, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea68));
        EXPECT(0x7e, gbc.readMem(0xea69));
        // CB 7E 01B2
        gbc.setState(0x2247, 0x3cdd, 0x3ec0, 0x8e69, 0x8329, 0x9470, 0x1, 0x1);
        gbc.writeMem(0x2247, { 0xcb, 0x7e });
        gbc.writeMem(0x9470, { 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3cdd, gbc.sp());
        EXPECT(0x2249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9470));
        // CB 7E 01B3
        gbc.setState(0xeca3, 0x5a9a, 0xe440, 0xec32, 0x1fc6, 0x3d69, 0x0, 0x1);
        gbc.writeMem(0x3d69, { 0xd7 });
        gbc.writeMem(0xeca3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5a9a, gbc.sp());
        EXPECT(0xeca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca3));
        EXPECT(0x7e, gbc.readMem(0xeca4));
        // CB 7E 01B4
        gbc.setState(0x429a, 0x41e8, 0x3350, 0x880d, 0x3431, 0xc5dd, 0x0, 0x1);
        gbc.writeMem(0x429a, { 0xcb, 0x7e });
        gbc.writeMem(0xc5dd, { 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x41e8, gbc.sp());
        EXPECT(0x429c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xc5dd));
        // CB 7E 01B5
        gbc.setState(0xcea6, 0x14a1, 0x9360, 0x5215, 0xe8f8, 0xe8b6, 0x0, 0x0);
        gbc.writeMem(0xcea6, { 0xcb, 0x7e });
        gbc.writeMem(0xe8b6, { 0xeb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x14a1, gbc.sp());
        EXPECT(0xcea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea6));
        EXPECT(0x7e, gbc.readMem(0xcea7));
        EXPECT(0xeb, gbc.readMem(0xe8b6));
        // CB 7E 01B6
        gbc.setState(0x311f, 0x6902, 0x2a70, 0x3027, 0x7401, 0xefb, 0x1, 0x0);
        gbc.writeMem(0xefb, { 0x2c });
        gbc.writeMem(0x311f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6902, gbc.sp());
        EXPECT(0x3121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01B7
        gbc.setState(0xabb2, 0x97d0, 0x25b0, 0x5010, 0xdf6f, 0x9b8, 0x0, 0x1);
        gbc.writeMem(0x9b8, { 0x7d });
        gbc.writeMem(0xabb2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x97d0, gbc.sp());
        EXPECT(0xabb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb2));
        EXPECT(0x7e, gbc.readMem(0xabb3));
        // CB 7E 01B8
        gbc.setState(0x21c5, 0x2ee9, 0x1930, 0x6013, 0xfaef, 0xb5c5, 0x1, 0x1);
        gbc.writeMem(0x21c5, { 0xcb, 0x7e });
        gbc.writeMem(0xb5c5, { 0x92 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2ee9, gbc.sp());
        EXPECT(0x21c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb5c5));
        // CB 7E 01B9
        gbc.setState(0x197d, 0x2384, 0xbf40, 0x15f0, 0x766b, 0xe666, 0x0, 0x1);
        gbc.writeMem(0x197d, { 0xcb, 0x7e });
        gbc.writeMem(0xe666, { 0xe7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0x197f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xe666));
        // CB 7E 01BA
        gbc.setState(0x676f, 0x1ce0, 0x2f40, 0xa509, 0x1f8f, 0xf6fa, 0x1, 0x1);
        gbc.writeMem(0x676f, { 0xcb, 0x7e });
        gbc.writeMem(0xf6fa, { 0xb5 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1ce0, gbc.sp());
        EXPECT(0x6771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf6fa));
        // CB 7E 01BB
        gbc.setState(0x7512, 0xd335, 0xf690, 0x920d, 0xfc4c, 0x79b5, 0x1, 0x0);
        gbc.writeMem(0x7512, { 0xcb, 0x7e });
        gbc.writeMem(0x79b5, { 0xa2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd335, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01BD
        gbc.setState(0x13c1, 0x7732, 0xe8c0, 0x29e2, 0x7d9e, 0x2466, 0x1, 0x1);
        gbc.writeMem(0x13c1, { 0xcb, 0x7e });
        gbc.writeMem(0x2466, { 0x53 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7732, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01BE
        gbc.setState(0x65a8, 0xc7c8, 0xc2c0, 0xe3b0, 0x534, 0x14fc, 0x1, 0x1);
        gbc.writeMem(0x14fc, { 0x78 });
        gbc.writeMem(0x65a8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0x65aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01C0
        gbc.setState(0x34ba, 0xbdd0, 0xd220, 0xd457, 0x7da3, 0x1fbe, 0x1, 0x1);
        gbc.writeMem(0x1fbe, { 0x4 });
        gbc.writeMem(0x34ba, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbdd0, gbc.sp());
        EXPECT(0x34bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01C1
        gbc.setState(0x956f, 0x68af, 0x9470, 0x1c2d, 0x665a, 0xdeda, 0x1, 0x1);
        gbc.writeMem(0x956f, { 0xcb, 0x7e });
        gbc.writeMem(0xdeda, { 0x43 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0x9571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956f));
        EXPECT(0x7e, gbc.readMem(0x9570));
        EXPECT(0x43, gbc.readMem(0xdeda));
        // CB 7E 01C2
        gbc.setState(0x8b37, 0x2cb3, 0xf3e0, 0x3ec7, 0x4214, 0x2bf4, 0x0, 0x0);
        gbc.writeMem(0x2bf4, { 0xbd });
        gbc.writeMem(0x8b37, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x8b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b37));
        EXPECT(0x7e, gbc.readMem(0x8b38));
        // CB 7E 01C3
        gbc.setState(0x2bf5, 0x6498, 0x11e0, 0x53c4, 0x125f, 0x95cc, 0x1, 0x1);
        gbc.writeMem(0x2bf5, { 0xcb, 0x7e });
        gbc.writeMem(0x95cc, { 0x26 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6498, gbc.sp());
        EXPECT(0x2bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x95cc));
        // CB 7E 01C4
        gbc.setState(0x9826, 0xf36, 0x3810, 0x795e, 0x5c44, 0xf93a, 0x0, 0x1);
        gbc.writeMem(0x9826, { 0xcb, 0x7e });
        gbc.writeMem(0xf93a, { 0x41 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0x9828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9826));
        EXPECT(0x7e, gbc.readMem(0x9827));
        EXPECT(0x41, gbc.readMem(0xf93a));
        // CB 7E 01C5
        gbc.setState(0x2184, 0x2e4c, 0xe420, 0xf13, 0xc7b7, 0x68de, 0x1, 0x0);
        gbc.writeMem(0x2184, { 0xcb, 0x7e });
        gbc.writeMem(0x68de, { 0x6c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2e4c, gbc.sp());
        EXPECT(0x2186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01C6
        gbc.setState(0x90cc, 0xe0bc, 0xd4c0, 0x221c, 0xc636, 0x416a, 0x1, 0x0);
        gbc.writeMem(0x416a, { 0x51 });
        gbc.writeMem(0x90cc, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe0bc, gbc.sp());
        EXPECT(0x90ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90cc));
        EXPECT(0x7e, gbc.readMem(0x90cd));
        // CB 7E 01C7
        gbc.setState(0x14a4, 0x37a4, 0x7eb0, 0x703, 0x6e9c, 0xd9e1, 0x0, 0x1);
        gbc.writeMem(0x14a4, { 0xcb, 0x7e });
        gbc.writeMem(0xd9e1, { 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x37a4, gbc.sp());
        EXPECT(0x14a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xd9e1));
        // CB 7E 01C8
        gbc.setState(0xac4e, 0xc0c2, 0x3b40, 0x1c4b, 0xae4e, 0xfdc8, 0x1, 0x1);
        gbc.writeMem(0xac4e, { 0xcb, 0x7e });
        gbc.writeMem(0xfdc8, { 0x19 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc0c2, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4e));
        EXPECT(0x7e, gbc.readMem(0xac4f));
        EXPECT(0x19, gbc.readMem(0xfdc8));
        // CB 7E 01CA
        gbc.setState(0xb005, 0x3ff0, 0xe4a0, 0x5d5a, 0x427a, 0x1fb4, 0x1, 0x1);
        gbc.writeMem(0x1fb4, { 0x29 });
        gbc.writeMem(0xb005, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3ff0, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb005));
        EXPECT(0x7e, gbc.readMem(0xb006));
        // CB 7E 01CB
        gbc.setState(0x5a59, 0x3ed8, 0x3520, 0x5131, 0x5111, 0x8d29, 0x0, 0x0);
        gbc.writeMem(0x5a59, { 0xcb, 0x7e });
        gbc.writeMem(0x8d29, { 0xa9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3ed8, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8d29));
        // CB 7E 01CC
        gbc.setState(0x2943, 0x11b4, 0x6e30, 0x4e6e, 0x759d, 0xec34, 0x0, 0x0);
        gbc.writeMem(0x2943, { 0xcb, 0x7e });
        gbc.writeMem(0xec34, { 0xa8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x11b4, gbc.sp());
        EXPECT(0x2945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xec34));
        // CB 7E 01CD
        gbc.setState(0x58ab, 0x2034, 0x21b0, 0x4c31, 0x8273, 0x2ca8, 0x1, 0x0);
        gbc.writeMem(0x2ca8, { 0xde });
        gbc.writeMem(0x58ab, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0x58ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01CE
        gbc.setState(0x42de, 0xb06b, 0x9350, 0x4d40, 0xcdf9, 0x71a9, 0x0, 0x0);
        gbc.writeMem(0x42de, { 0xcb, 0x7e });
        gbc.writeMem(0x71a9, { 0x39 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb06b, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01CF
        gbc.setState(0x7a5b, 0x62a1, 0xe70, 0x689e, 0xc80, 0x1274, 0x0, 0x1);
        gbc.writeMem(0x1274, { 0xb9 });
        gbc.writeMem(0x7a5b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x62a1, gbc.sp());
        EXPECT(0x7a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01D0
        gbc.setState(0xa4fd, 0xefc8, 0x16f0, 0x8c7, 0x61ff, 0xc8c7, 0x1, 0x0);
        gbc.writeMem(0xa4fd, { 0xcb, 0x7e });
        gbc.writeMem(0xc8c7, { 0x4a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0xa4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fd));
        EXPECT(0x7e, gbc.readMem(0xa4fe));
        EXPECT(0x4a, gbc.readMem(0xc8c7));
        // CB 7E 01D1
        gbc.setState(0x7f50, 0x8baf, 0x8b10, 0xe36d, 0x7235, 0xbddc, 0x0, 0x1);
        gbc.writeMem(0x7f50, { 0xcb, 0x7e });
        gbc.writeMem(0xbddc, { 0x2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8baf, gbc.sp());
        EXPECT(0x7f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xbddc));
        // CB 7E 01D2
        gbc.setState(0x274e, 0xfa84, 0x6480, 0xc01f, 0x50eb, 0x52e2, 0x1, 0x0);
        gbc.writeMem(0x274e, { 0xcb, 0x7e });
        gbc.writeMem(0x52e2, { 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x2750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01D3
        gbc.setState(0x6208, 0xbcd5, 0xa980, 0x513a, 0x69c0, 0xac81, 0x1, 0x0);
        gbc.writeMem(0x6208, { 0xcb, 0x7e });
        gbc.writeMem(0xac81, { 0x27 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbcd5, gbc.sp());
        EXPECT(0x620a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xac81));
        // CB 7E 01D4
        gbc.setState(0x9af1, 0xd92, 0xf0e0, 0x79e9, 0x830b, 0x678a, 0x0, 0x1);
        gbc.writeMem(0x678a, { 0x78 });
        gbc.writeMem(0x9af1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd92, gbc.sp());
        EXPECT(0x9af3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af1));
        EXPECT(0x7e, gbc.readMem(0x9af2));
        // CB 7E 01D5
        gbc.setState(0xe825, 0x9a34, 0x20, 0xf220, 0x3ecd, 0x424b, 0x1, 0x1);
        gbc.writeMem(0x424b, { 0x4f });
        gbc.writeMem(0xe825, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0xe827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe825));
        EXPECT(0x7e, gbc.readMem(0xe826));
        // CB 7E 01D6
        gbc.setState(0x1fa7, 0x7fd0, 0x8770, 0xe15b, 0xe317, 0x8c69, 0x0, 0x1);
        gbc.writeMem(0x1fa7, { 0xcb, 0x7e });
        gbc.writeMem(0x8c69, { 0x3b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7fd0, gbc.sp());
        EXPECT(0x1fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8c69));
        // CB 7E 01D7
        gbc.setState(0x6f21, 0xb1ae, 0x4250, 0x1b7c, 0xe25a, 0x928f, 0x0, 0x1);
        gbc.writeMem(0x6f21, { 0xcb, 0x7e });
        gbc.writeMem(0x928f, { 0xc8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb1ae, gbc.sp());
        EXPECT(0x6f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x928f));
        // CB 7E 01D8
        gbc.setState(0xa920, 0x3c8e, 0x3110, 0x3aa6, 0x84f, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0xa920, { 0xcb, 0x7e });
        gbc.writeMem(0xda7e, { 0x11 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3c8e, gbc.sp());
        EXPECT(0xa922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa920));
        EXPECT(0x7e, gbc.readMem(0xa921));
        EXPECT(0x11, gbc.readMem(0xda7e));
        // CB 7E 01D9
        gbc.setState(0xb32, 0xa86e, 0xbb80, 0x6c9f, 0xa0bd, 0xdbe9, 0x0, 0x0);
        gbc.writeMem(0xb32, { 0xcb, 0x7e });
        gbc.writeMem(0xdbe9, { 0x6c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa86e, gbc.sp());
        EXPECT(0xb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xdbe9));
        // CB 7E 01DA
        gbc.setState(0x2a64, 0x1f63, 0x2fd0, 0x6441, 0xf42d, 0xccef, 0x1, 0x0);
        gbc.writeMem(0x2a64, { 0xcb, 0x7e });
        gbc.writeMem(0xccef, { 0xdd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1f63, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xccef));
        // CB 7E 01DB
        gbc.setState(0xe8eb, 0x9830, 0x7cb0, 0xabcc, 0x28e0, 0xb483, 0x0, 0x1);
        gbc.writeMem(0xb483, { 0x63 });
        gbc.writeMem(0xe8eb, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9830, gbc.sp());
        EXPECT(0xe8ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xb483));
        EXPECT(0xcb, gbc.readMem(0xe8eb));
        EXPECT(0x7e, gbc.readMem(0xe8ec));
        // CB 7E 01DC
        gbc.setState(0x8b7, 0xe181, 0x9cb0, 0xa848, 0xcb92, 0x444c, 0x0, 0x1);
        gbc.writeMem(0x8b7, { 0xcb, 0x7e });
        gbc.writeMem(0x444c, { 0x50 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe181, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01DD
        gbc.setState(0x2fa, 0x2451, 0xd850, 0x57d5, 0x60a8, 0xe1b3, 0x0, 0x0);
        gbc.writeMem(0x2fa, { 0xcb, 0x7e });
        gbc.writeMem(0xe1b3, { 0x69 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2451, gbc.sp());
        EXPECT(0x2fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe1b3));
        // CB 7E 01DE
        gbc.setState(0xe7e, 0x1d35, 0x8de0, 0xd86e, 0xe985, 0x3d5d, 0x0, 0x1);
        gbc.writeMem(0xe7e, { 0xcb, 0x7e });
        gbc.writeMem(0x3d5d, { 0xe1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1d35, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01DF
        gbc.setState(0xe5b0, 0x28f0, 0x7820, 0xa27c, 0xcc63, 0x92a0, 0x1, 0x1);
        gbc.writeMem(0x92a0, { 0xab });
        gbc.writeMem(0xe5b0, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x28f0, gbc.sp());
        EXPECT(0xe5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x92a0));
        EXPECT(0xcb, gbc.readMem(0xe5b0));
        EXPECT(0x7e, gbc.readMem(0xe5b1));
        // CB 7E 01E0
        gbc.setState(0x327e, 0x7006, 0xa100, 0x117, 0x88d9, 0xdc9a, 0x0, 0x0);
        gbc.writeMem(0x327e, { 0xcb, 0x7e });
        gbc.writeMem(0xdc9a, { 0xc3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7006, gbc.sp());
        EXPECT(0x3280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xdc9a));
        // CB 7E 01E1
        gbc.setState(0x6992, 0xff4a, 0x7dd0, 0x7950, 0xe58d, 0xedef, 0x0, 0x0);
        gbc.writeMem(0x6992, { 0xcb, 0x7e });
        gbc.writeMem(0xedef, { 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0x6994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xedef));
        // CB 7E 01E2
        gbc.setState(0x64c4, 0xdf23, 0xb6b0, 0xc8af, 0x3ded, 0x38a7, 0x1, 0x0);
        gbc.writeMem(0x38a7, { 0xb });
        gbc.writeMem(0x64c4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdf23, gbc.sp());
        EXPECT(0x64c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01E3
        gbc.setState(0xbca5, 0xeb3, 0xe620, 0x6bee, 0x62a2, 0x12bd, 0x0, 0x0);
        gbc.writeMem(0x12bd, { 0xef });
        gbc.writeMem(0xbca5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xeb3, gbc.sp());
        EXPECT(0xbca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca5));
        EXPECT(0x7e, gbc.readMem(0xbca6));
        // CB 7E 01E4
        gbc.setState(0xb555, 0x593a, 0x7120, 0x26a3, 0x8d9, 0xad35, 0x1, 0x1);
        gbc.writeMem(0xad35, { 0x4b });
        gbc.writeMem(0xb555, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0xb557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xad35));
        EXPECT(0xcb, gbc.readMem(0xb555));
        EXPECT(0x7e, gbc.readMem(0xb556));
        // CB 7E 01E5
        gbc.setState(0xc44a, 0x3c2e, 0x1250, 0x4bb5, 0x75c5, 0x4269, 0x1, 0x0);
        gbc.writeMem(0x4269, { 0xf7 });
        gbc.writeMem(0xc44a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44a));
        EXPECT(0x7e, gbc.readMem(0xc44b));
        // CB 7E 01E6
        gbc.setState(0xa1d4, 0x36f5, 0xdf90, 0x7110, 0x37b5, 0x5e42, 0x1, 0x1);
        gbc.writeMem(0x5e42, { 0x86 });
        gbc.writeMem(0xa1d4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x36f5, gbc.sp());
        EXPECT(0xa1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1d4));
        EXPECT(0x7e, gbc.readMem(0xa1d5));
        // CB 7E 01E7
        gbc.setState(0xb161, 0xcbf9, 0xb690, 0x630, 0x8864, 0xddaa, 0x0, 0x0);
        gbc.writeMem(0xb161, { 0xcb, 0x7e });
        gbc.writeMem(0xddaa, { 0xae });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcbf9, gbc.sp());
        EXPECT(0xb163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb161));
        EXPECT(0x7e, gbc.readMem(0xb162));
        EXPECT(0xae, gbc.readMem(0xddaa));
        // CB 7E 01E8
        gbc.setState(0x5f3b, 0x41b0, 0xca70, 0xaaa9, 0x6424, 0x4e79, 0x0, 0x1);
        gbc.writeMem(0x4e79, { 0xe9 });
        gbc.writeMem(0x5f3b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x41b0, gbc.sp());
        EXPECT(0x5f3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 01E9
        gbc.setState(0x9ae0, 0x9945, 0x4890, 0x24a4, 0x5f74, 0xa8ff, 0x1, 0x0);
        gbc.writeMem(0x9ae0, { 0xcb, 0x7e });
        gbc.writeMem(0xa8ff, { 0x68 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9945, gbc.sp());
        EXPECT(0x9ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae0));
        EXPECT(0x7e, gbc.readMem(0x9ae1));
        EXPECT(0x68, gbc.readMem(0xa8ff));
        // CB 7E 01EA
        gbc.setState(0x605a, 0xde46, 0x47b0, 0x45b, 0xe40, 0xa896, 0x1, 0x0);
        gbc.writeMem(0x605a, { 0xcb, 0x7e });
        gbc.writeMem(0xa896, { 0xb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0x605c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa896));
        // CB 7E 01EB
        gbc.setState(0x7bfd, 0x6bad, 0xb3e0, 0xe5b9, 0x166d, 0xd4fc, 0x1, 0x0);
        gbc.writeMem(0x7bfd, { 0xcb, 0x7e });
        gbc.writeMem(0xd4fc, { 0x47 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6bad, gbc.sp());
        EXPECT(0x7bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd4fc));
        // CB 7E 01EC
        gbc.setState(0xbe05, 0x512e, 0xacc0, 0x810c, 0xbde8, 0x1565, 0x1, 0x0);
        gbc.writeMem(0x1565, { 0xda });
        gbc.writeMem(0xbe05, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x512e, gbc.sp());
        EXPECT(0xbe07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe05));
        EXPECT(0x7e, gbc.readMem(0xbe06));
        // CB 7E 01ED
        gbc.setState(0x246, 0xcb88, 0x67e0, 0xf5fa, 0xc535, 0xf9e2, 0x1, 0x0);
        gbc.writeMem(0x246, { 0xcb, 0x7e });
        gbc.writeMem(0xf9e2, { 0xf2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcb88, gbc.sp());
        EXPECT(0x248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xf9e2));
        // CB 7E 01EE
        gbc.setState(0x12e3, 0x1739, 0x9d60, 0xe93a, 0x195b, 0x300f, 0x0, 0x0);
        gbc.writeMem(0x12e3, { 0xcb, 0x7e });
        gbc.writeMem(0x300f, { 0x2f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1739, gbc.sp());
        EXPECT(0x12e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01EF
        gbc.setState(0x9ea, 0xa7c1, 0x9f20, 0xb0c8, 0x24c1, 0x6400, 0x1, 0x0);
        gbc.writeMem(0x9ea, { 0xcb, 0x7e });
        gbc.writeMem(0x6400, { 0x91 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa7c1, gbc.sp());
        EXPECT(0x9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01F0
        gbc.setState(0x651c, 0x7fbc, 0x90, 0x417e, 0xcc08, 0x8408, 0x0, 0x1);
        gbc.writeMem(0x651c, { 0xcb, 0x7e });
        gbc.writeMem(0x8408, { 0x98 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7fbc, gbc.sp());
        EXPECT(0x651e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8408));
        // CB 7E 01F1
        gbc.setState(0x8fc2, 0x958, 0xa4f0, 0x9479, 0x8bc3, 0x1510, 0x0, 0x1);
        gbc.writeMem(0x1510, { 0x5 });
        gbc.writeMem(0x8fc2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0x8fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc2));
        EXPECT(0x7e, gbc.readMem(0x8fc3));
        // CB 7E 01F2
        gbc.setState(0x1cdf, 0x693e, 0x80d0, 0xc155, 0x3b6, 0xed9f, 0x1, 0x0);
        gbc.writeMem(0x1cdf, { 0xcb, 0x7e });
        gbc.writeMem(0xed9f, { 0x9a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x693e, gbc.sp());
        EXPECT(0x1ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xed9f));
        // CB 7E 01F3
        gbc.setState(0xb366, 0x4f97, 0x7a60, 0xc732, 0x2b56, 0xfb12, 0x0, 0x0);
        gbc.writeMem(0xb366, { 0xcb, 0x7e });
        gbc.writeMem(0xfb12, { 0x97 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4f97, gbc.sp());
        EXPECT(0xb368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb366));
        EXPECT(0x7e, gbc.readMem(0xb367));
        EXPECT(0x97, gbc.readMem(0xfb12));
        // CB 7E 01F4
        gbc.setState(0x56cb, 0x36d6, 0xa310, 0x5078, 0x22e3, 0x8b4a, 0x1, 0x0);
        gbc.writeMem(0x56cb, { 0xcb, 0x7e });
        gbc.writeMem(0x8b4a, { 0x71 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x36d6, gbc.sp());
        EXPECT(0x56cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8b4a));
        // CB 7E 01F5
        gbc.setState(0xb3fe, 0xd3f2, 0xa3a0, 0xa844, 0x5852, 0xacff, 0x0, 0x0);
        gbc.writeMem(0xacff, { 0x5e });
        gbc.writeMem(0xb3fe, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xacff));
        EXPECT(0xcb, gbc.readMem(0xb3fe));
        EXPECT(0x7e, gbc.readMem(0xb3ff));
        // CB 7E 01F6
        gbc.setState(0xdcdf, 0x6f22, 0xb740, 0xb3a7, 0xfadc, 0xb529, 0x1, 0x0);
        gbc.writeMem(0xb529, { 0xf4 });
        gbc.writeMem(0xdcdf, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6f22, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xb529));
        EXPECT(0xcb, gbc.readMem(0xdcdf));
        EXPECT(0x7e, gbc.readMem(0xdce0));
        // CB 7E 01F7
        gbc.setState(0x3ebb, 0x2966, 0x3740, 0x5fd0, 0xca17, 0xf11c, 0x0, 0x1);
        gbc.writeMem(0x3ebb, { 0xcb, 0x7e });
        gbc.writeMem(0xf11c, { 0x96 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2966, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xf11c));
        // CB 7E 01F8
        gbc.setState(0xe05a, 0x4a4f, 0x3080, 0x2218, 0x4e59, 0x8d5f, 0x1, 0x0);
        gbc.writeMem(0x8d5f, { 0x61 });
        gbc.writeMem(0xe05a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4a4f, gbc.sp());
        EXPECT(0xe05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8d5f));
        EXPECT(0xcb, gbc.readMem(0xe05a));
        EXPECT(0x7e, gbc.readMem(0xe05b));
        // CB 7E 01F9
        gbc.setState(0xa304, 0x1b7b, 0x7270, 0x36d5, 0x424d, 0x36ed, 0x0, 0x1);
        gbc.writeMem(0x36ed, { 0x2 });
        gbc.writeMem(0xa304, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1b7b, gbc.sp());
        EXPECT(0xa306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa304));
        EXPECT(0x7e, gbc.readMem(0xa305));
        // CB 7E 01FA
        gbc.setState(0x8ebc, 0x4237, 0x50, 0x5a63, 0x6aac, 0x345, 0x1, 0x1);
        gbc.writeMem(0x345, { 0x71 });
        gbc.writeMem(0x8ebc, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4237, gbc.sp());
        EXPECT(0x8ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebc));
        EXPECT(0x7e, gbc.readMem(0x8ebd));
        // CB 7E 01FB
        gbc.setState(0x14c2, 0x4c4d, 0xca20, 0x5087, 0xa618, 0x5b2a, 0x1, 0x0);
        gbc.writeMem(0x14c2, { 0xcb, 0x7e });
        gbc.writeMem(0x5b2a, { 0x63 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4c4d, gbc.sp());
        EXPECT(0x14c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 01FC
        gbc.setState(0x8da7, 0x9379, 0xe4e0, 0x2ffb, 0x59db, 0x230f, 0x1, 0x1);
        gbc.writeMem(0x230f, { 0x3d });
        gbc.writeMem(0x8da7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9379, gbc.sp());
        EXPECT(0x8da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da7));
        EXPECT(0x7e, gbc.readMem(0x8da8));
        // CB 7E 01FD
        gbc.setState(0xa9d6, 0xffcf, 0xcc40, 0x87b4, 0xa86c, 0xdc07, 0x1, 0x0);
        gbc.writeMem(0xa9d6, { 0xcb, 0x7e });
        gbc.writeMem(0xdc07, { 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d6));
        EXPECT(0x7e, gbc.readMem(0xa9d7));
        EXPECT(0x8f, gbc.readMem(0xdc07));
        // CB 7E 01FE
        gbc.setState(0xe3a5, 0xeccf, 0x5d70, 0xde2f, 0xd50c, 0xc5a7, 0x1, 0x0);
        gbc.writeMem(0xc5a7, { 0x5d });
        gbc.writeMem(0xe3a5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xeccf, gbc.sp());
        EXPECT(0xe3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xc5a7));
        EXPECT(0xcb, gbc.readMem(0xe3a5));
        EXPECT(0x7e, gbc.readMem(0xe3a6));
        // CB 7E 01FF
        gbc.setState(0x5871, 0xad29, 0xeba0, 0x96ff, 0xc5ae, 0xed04, 0x0, 0x0);
        gbc.writeMem(0x5871, { 0xcb, 0x7e });
        gbc.writeMem(0xed04, { 0xcf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xad29, gbc.sp());
        EXPECT(0x5873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xed04));
        // CB 7E 0200
        gbc.setState(0xc295, 0x84, 0x7ca0, 0x2e36, 0xae94, 0xf322, 0x1, 0x0);
        gbc.writeMem(0xc295, { 0xcb, 0x7e });
        gbc.writeMem(0xf322, { 0x4c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x84, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc295));
        EXPECT(0x7e, gbc.readMem(0xc296));
        EXPECT(0x4c, gbc.readMem(0xf322));
        // CB 7E 0201
        gbc.setState(0x2395, 0x6b0e, 0x1600, 0x8340, 0xb37c, 0x495d, 0x1, 0x0);
        gbc.writeMem(0x2395, { 0xcb, 0x7e });
        gbc.writeMem(0x495d, { 0xe1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0x2397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0202
        gbc.setState(0x15f5, 0xbbec, 0x57c0, 0xd048, 0xafcf, 0xc231, 0x1, 0x0);
        gbc.writeMem(0x15f5, { 0xcb, 0x7e });
        gbc.writeMem(0xc231, { 0x66 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbbec, gbc.sp());
        EXPECT(0x15f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xc231));
        // CB 7E 0203
        gbc.setState(0x1cc5, 0x129e, 0x3da0, 0xe998, 0x24bd, 0xed61, 0x1, 0x1);
        gbc.writeMem(0x1cc5, { 0xcb, 0x7e });
        gbc.writeMem(0xed61, { 0xdc });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x129e, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xed61));
        // CB 7E 0204
        gbc.setState(0xd3a2, 0xf91c, 0xe780, 0x8bdd, 0xde8f, 0xd125, 0x1, 0x1);
        gbc.writeMem(0xd125, { 0x9d });
        gbc.writeMem(0xd3a2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf91c, gbc.sp());
        EXPECT(0xd3a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd125));
        EXPECT(0xcb, gbc.readMem(0xd3a2));
        EXPECT(0x7e, gbc.readMem(0xd3a3));
        // CB 7E 0205
        gbc.setState(0x1a70, 0x561f, 0xbfe0, 0xc619, 0xe8db, 0xe99f, 0x1, 0x1);
        gbc.writeMem(0x1a70, { 0xcb, 0x7e });
        gbc.writeMem(0xe99f, { 0x84 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe99f));
        // CB 7E 0206
        gbc.setState(0x9cac, 0x8001, 0xb4b0, 0x953a, 0xbfd2, 0x5f10, 0x1, 0x0);
        gbc.writeMem(0x5f10, { 0x3c });
        gbc.writeMem(0x9cac, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8001, gbc.sp());
        EXPECT(0x9cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cac));
        EXPECT(0x7e, gbc.readMem(0x9cad));
        // CB 7E 0207
        gbc.setState(0xd078, 0xdd16, 0x8a10, 0x8710, 0x7ce2, 0xa155, 0x0, 0x0);
        gbc.writeMem(0xa155, { 0x5f });
        gbc.writeMem(0xd078, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdd16, gbc.sp());
        EXPECT(0xd07a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xa155));
        EXPECT(0xcb, gbc.readMem(0xd078));
        EXPECT(0x7e, gbc.readMem(0xd079));
        // CB 7E 0208
        gbc.setState(0xc829, 0xf113, 0x43b0, 0xace4, 0x76d2, 0x4d3b, 0x1, 0x1);
        gbc.writeMem(0x4d3b, { 0xfa });
        gbc.writeMem(0xc829, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf113, gbc.sp());
        EXPECT(0xc82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc829));
        EXPECT(0x7e, gbc.readMem(0xc82a));
        // CB 7E 0209
        gbc.setState(0x1bc9, 0x517c, 0x7f60, 0xa07b, 0xb626, 0x9185, 0x0, 0x0);
        gbc.writeMem(0x1bc9, { 0xcb, 0x7e });
        gbc.writeMem(0x9185, { 0xf7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x517c, gbc.sp());
        EXPECT(0x1bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x9185));
        // CB 7E 020A
        gbc.setState(0x7ecd, 0xbc84, 0x57d0, 0xb2ed, 0x4d75, 0xa987, 0x0, 0x1);
        gbc.writeMem(0x7ecd, { 0xcb, 0x7e });
        gbc.writeMem(0xa987, { 0xbc });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbc84, gbc.sp());
        EXPECT(0x7ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xa987));
        // CB 7E 020B
        gbc.setState(0xb861, 0x7d6b, 0xaca0, 0x9d16, 0xa66f, 0x6543, 0x1, 0x0);
        gbc.writeMem(0x6543, { 0x5e });
        gbc.writeMem(0xb861, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7d6b, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb861));
        EXPECT(0x7e, gbc.readMem(0xb862));
        // CB 7E 020C
        gbc.setState(0xe8df, 0xd4e5, 0xeaa0, 0xf2a4, 0xb252, 0xa668, 0x0, 0x0);
        gbc.writeMem(0xa668, { 0xb0 });
        gbc.writeMem(0xe8df, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd4e5, gbc.sp());
        EXPECT(0xe8e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa668));
        EXPECT(0xcb, gbc.readMem(0xe8df));
        EXPECT(0x7e, gbc.readMem(0xe8e0));
        // CB 7E 020D
        gbc.setState(0x4231, 0x7900, 0xaf90, 0xd4f6, 0x5825, 0xee3b, 0x1, 0x1);
        gbc.writeMem(0x4231, { 0xcb, 0x7e });
        gbc.writeMem(0xee3b, { 0xd7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7900, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xee3b));
        // CB 7E 020E
        gbc.setState(0x60f3, 0xdc3d, 0x69d0, 0xf4ae, 0x21a8, 0x8d48, 0x1, 0x1);
        gbc.writeMem(0x60f3, { 0xcb, 0x7e });
        gbc.writeMem(0x8d48, { 0x46 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdc3d, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x8d48));
        // CB 7E 020F
        gbc.setState(0x6f77, 0xe7c4, 0xfe30, 0xfb45, 0x2a1, 0x54c, 0x1, 0x1);
        gbc.writeMem(0x54c, { 0xc });
        gbc.writeMem(0x6f77, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe7c4, gbc.sp());
        EXPECT(0x6f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0210
        gbc.setState(0xe993, 0x307c, 0x9930, 0x7a4a, 0xe32a, 0xe74, 0x0, 0x1);
        gbc.writeMem(0xe74, { 0x2f });
        gbc.writeMem(0xe993, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x307c, gbc.sp());
        EXPECT(0xe995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe993));
        EXPECT(0x7e, gbc.readMem(0xe994));
        // CB 7E 0211
        gbc.setState(0xdcff, 0xcc2e, 0x1840, 0x8c3e, 0x961a, 0x5761, 0x1, 0x0);
        gbc.writeMem(0x5761, { 0x2c });
        gbc.writeMem(0xdcff, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcc2e, gbc.sp());
        EXPECT(0xdd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcff));
        EXPECT(0x7e, gbc.readMem(0xdd00));
        // CB 7E 0212
        gbc.setState(0x5de5, 0xee74, 0x9670, 0xf47, 0xa150, 0x31f4, 0x1, 0x1);
        gbc.writeMem(0x31f4, { 0x29 });
        gbc.writeMem(0x5de5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xee74, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0213
        gbc.setState(0x4777, 0x91a4, 0xdf0, 0x55cc, 0xa4f, 0x6f26, 0x0, 0x1);
        gbc.writeMem(0x4777, { 0xcb, 0x7e });
        gbc.writeMem(0x6f26, { 0xd8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x91a4, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0214
        gbc.setState(0x7dc1, 0xfdc, 0x7870, 0xb3de, 0xa863, 0xcb9e, 0x0, 0x1);
        gbc.writeMem(0x7dc1, { 0xcb, 0x7e });
        gbc.writeMem(0xcb9e, { 0xb4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfdc, gbc.sp());
        EXPECT(0x7dc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xcb9e));
        // CB 7E 0215
        gbc.setState(0xea2, 0x8786, 0x80e0, 0xfe2d, 0x2b62, 0xfa73, 0x1, 0x1);
        gbc.writeMem(0xea2, { 0xcb, 0x7e });
        gbc.writeMem(0xfa73, { 0x18 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8786, gbc.sp());
        EXPECT(0xea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xfa73));
        // CB 7E 0217
        gbc.setState(0xcfa7, 0x2cad, 0xfc40, 0x24ba, 0xdf28, 0x4226, 0x0, 0x1);
        gbc.writeMem(0x4226, { 0xe7 });
        gbc.writeMem(0xcfa7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2cad, gbc.sp());
        EXPECT(0xcfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa7));
        EXPECT(0x7e, gbc.readMem(0xcfa8));
        // CB 7E 0218
        gbc.setState(0x3c05, 0xe0cb, 0xdf0, 0x63ad, 0x2f09, 0x99a5, 0x1, 0x0);
        gbc.writeMem(0x3c05, { 0xcb, 0x7e });
        gbc.writeMem(0x99a5, { 0xf8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe0cb, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x99a5));
        // CB 7E 0219
        gbc.setState(0x7be6, 0xc587, 0xae0, 0xe3ed, 0x9838, 0x721a, 0x0, 0x1);
        gbc.writeMem(0x721a, { 0x9f });
        gbc.writeMem(0x7be6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc587, gbc.sp());
        EXPECT(0x7be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 021A
        gbc.setState(0xcf3a, 0x4714, 0x2e80, 0x82f7, 0x26df, 0xb9b7, 0x1, 0x0);
        gbc.writeMem(0xb9b7, { 0xa1 });
        gbc.writeMem(0xcf3a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4714, gbc.sp());
        EXPECT(0xcf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb9b7));
        EXPECT(0xcb, gbc.readMem(0xcf3a));
        EXPECT(0x7e, gbc.readMem(0xcf3b));
        // CB 7E 021B
        gbc.setState(0x7b00, 0x9ae2, 0x3f0, 0xdab4, 0xc980, 0x5c76, 0x0, 0x0);
        gbc.writeMem(0x5c76, { 0xb });
        gbc.writeMem(0x7b00, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0x7b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 021C
        gbc.setState(0x1a9a, 0x5835, 0xadd0, 0xbad6, 0xd97b, 0x78f3, 0x1, 0x1);
        gbc.writeMem(0x1a9a, { 0xcb, 0x7e });
        gbc.writeMem(0x78f3, { 0x43 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5835, gbc.sp());
        EXPECT(0x1a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 021D
        gbc.setState(0x51f8, 0xda3f, 0xedc0, 0xfca1, 0x7ae8, 0x6178, 0x1, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0x7e });
        gbc.writeMem(0x6178, { 0x13 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xda3f, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 021E
        gbc.setState(0xaa22, 0xa6b4, 0x4a60, 0x8471, 0x94ef, 0xac26, 0x1, 0x0);
        gbc.writeMem(0xaa22, { 0xcb, 0x7e });
        gbc.writeMem(0xac26, { 0xdc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa6b4, gbc.sp());
        EXPECT(0xaa24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa22));
        EXPECT(0x7e, gbc.readMem(0xaa23));
        EXPECT(0xdc, gbc.readMem(0xac26));
        // CB 7E 0220
        gbc.setState(0xae3a, 0xf530, 0x5d80, 0x8486, 0xa0a, 0x4b12, 0x0, 0x1);
        gbc.writeMem(0x4b12, { 0xc4 });
        gbc.writeMem(0xae3a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3a));
        EXPECT(0x7e, gbc.readMem(0xae3b));
        // CB 7E 0221
        gbc.setState(0x32c1, 0x344b, 0xb6a0, 0xf7d5, 0xa4b2, 0x35b4, 0x0, 0x0);
        gbc.writeMem(0x32c1, { 0xcb, 0x7e });
        gbc.writeMem(0x35b4, { 0xd9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x344b, gbc.sp());
        EXPECT(0x32c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0222
        gbc.setState(0x5963, 0xafa1, 0x20a0, 0xa370, 0xb320, 0x707e, 0x0, 0x1);
        gbc.writeMem(0x5963, { 0xcb, 0x7e });
        gbc.writeMem(0x707e, { 0x4f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xafa1, gbc.sp());
        EXPECT(0x5965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0223
        gbc.setState(0xd49a, 0x8646, 0xa700, 0x25c1, 0x522a, 0x521f, 0x1, 0x1);
        gbc.writeMem(0x521f, { 0x88 });
        gbc.writeMem(0xd49a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0xd49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49a));
        EXPECT(0x7e, gbc.readMem(0xd49b));
        // CB 7E 0224
        gbc.setState(0xc9a3, 0xf4d6, 0x92e0, 0x973e, 0xba8e, 0x6f1a, 0x1, 0x0);
        gbc.writeMem(0x6f1a, { 0x25 });
        gbc.writeMem(0xc9a3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf4d6, gbc.sp());
        EXPECT(0xc9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a3));
        EXPECT(0x7e, gbc.readMem(0xc9a4));
        // CB 7E 0225
        gbc.setState(0x2c8f, 0x1fb8, 0x75c0, 0x157e, 0xa6e7, 0x21f0, 0x1, 0x0);
        gbc.writeMem(0x21f0, { 0x83 });
        gbc.writeMem(0x2c8f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0x2c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0226
        gbc.setState(0xb089, 0x1e79, 0xa120, 0x322, 0x4938, 0x8f30, 0x1, 0x1);
        gbc.writeMem(0x8f30, { 0xea });
        gbc.writeMem(0xb089, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1e79, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8f30));
        EXPECT(0xcb, gbc.readMem(0xb089));
        EXPECT(0x7e, gbc.readMem(0xb08a));
        // CB 7E 0227
        gbc.setState(0x2526, 0x74d7, 0xe5a0, 0xf30d, 0xb565, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0x2526, { 0xcb, 0x7e });
        gbc.writeMem(0xcc74, { 0x28 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x74d7, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xcc74));
        // CB 7E 0228
        gbc.setState(0xe8b4, 0xd550, 0xc360, 0x29b4, 0x1fda, 0xd9de, 0x1, 0x1);
        gbc.writeMem(0xd9de, { 0x9d });
        gbc.writeMem(0xe8b4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd550, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xd9de));
        EXPECT(0xcb, gbc.readMem(0xe8b4));
        EXPECT(0x7e, gbc.readMem(0xe8b5));
        // CB 7E 022A
        gbc.setState(0x880b, 0x6173, 0x85d0, 0x45bb, 0xb807, 0x2b8d, 0x1, 0x0);
        gbc.writeMem(0x2b8d, { 0x2f });
        gbc.writeMem(0x880b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0x880d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880b));
        EXPECT(0x7e, gbc.readMem(0x880c));
        // CB 7E 022B
        gbc.setState(0x70b7, 0x440f, 0xb6c0, 0x1652, 0xf24f, 0xccb3, 0x0, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0x7e });
        gbc.writeMem(0xccb3, { 0x6b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xccb3));
        // CB 7E 022C
        gbc.setState(0x11c8, 0xd23f, 0xa350, 0x8c3b, 0x12de, 0x805c, 0x0, 0x1);
        gbc.writeMem(0x11c8, { 0xcb, 0x7e });
        gbc.writeMem(0x805c, { 0xa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd23f, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x805c));
        // CB 7E 022D
        gbc.setState(0x4e8, 0x7e8d, 0x71a0, 0x8eaa, 0x7ee3, 0x92f, 0x0, 0x1);
        gbc.writeMem(0x4e8, { 0xcb, 0x7e });
        gbc.writeMem(0x92f, { 0x7c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0x4ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 022F
        gbc.setState(0xf5e, 0x3e9, 0xff50, 0x2819, 0xc88e, 0xc3f7, 0x1, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0x7e });
        gbc.writeMem(0xc3f7, { 0x14 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3e9, gbc.sp());
        EXPECT(0xf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc3f7));
        // CB 7E 0230
        gbc.setState(0x3e83, 0x8c7a, 0x60, 0x8508, 0xc07b, 0xeaed, 0x1, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0x7e });
        gbc.writeMem(0xeaed, { 0x97 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8c7a, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xeaed));
        // CB 7E 0231
        gbc.setState(0xec06, 0x4edc, 0x6af0, 0xc89c, 0x672d, 0xb765, 0x1, 0x0);
        gbc.writeMem(0xb765, { 0x90 });
        gbc.writeMem(0xec06, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4edc, gbc.sp());
        EXPECT(0xec08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb765));
        EXPECT(0xcb, gbc.readMem(0xec06));
        EXPECT(0x7e, gbc.readMem(0xec07));
        // CB 7E 0232
        gbc.setState(0x77eb, 0x5abc, 0x9a20, 0x6c51, 0x3e83, 0x163d, 0x1, 0x0);
        gbc.writeMem(0x163d, { 0x45 });
        gbc.writeMem(0x77eb, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5abc, gbc.sp());
        EXPECT(0x77ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0233
        gbc.setState(0xb4ee, 0xae49, 0xa8b0, 0x3ff7, 0x30c, 0xc56, 0x0, 0x0);
        gbc.writeMem(0xc56, { 0x43 });
        gbc.writeMem(0xb4ee, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xae49, gbc.sp());
        EXPECT(0xb4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ee));
        EXPECT(0x7e, gbc.readMem(0xb4ef));
        // CB 7E 0234
        gbc.setState(0x5c76, 0x926c, 0x5ba0, 0xe6e3, 0xb011, 0x20b8, 0x0, 0x0);
        gbc.writeMem(0x20b8, { 0x7 });
        gbc.writeMem(0x5c76, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x926c, gbc.sp());
        EXPECT(0x5c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0235
        gbc.setState(0x3bae, 0x5f33, 0x2f60, 0xcc00, 0x23fd, 0xbc6d, 0x1, 0x1);
        gbc.writeMem(0x3bae, { 0xcb, 0x7e });
        gbc.writeMem(0xbc6d, { 0xdd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5f33, gbc.sp());
        EXPECT(0x3bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xbc6d));
        // CB 7E 0236
        gbc.setState(0xc94e, 0x7f6, 0x4b30, 0xec66, 0x382f, 0xa64e, 0x0, 0x0);
        gbc.writeMem(0xa64e, { 0x1a });
        gbc.writeMem(0xc94e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7f6, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa64e));
        EXPECT(0xcb, gbc.readMem(0xc94e));
        EXPECT(0x7e, gbc.readMem(0xc94f));
        // CB 7E 0237
        gbc.setState(0x4c77, 0x9b86, 0x26a0, 0x3ef9, 0xa42a, 0xe710, 0x0, 0x0);
        gbc.writeMem(0x4c77, { 0xcb, 0x7e });
        gbc.writeMem(0xe710, { 0xbf });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9b86, gbc.sp());
        EXPECT(0x4c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe710));
        // CB 7E 0238
        gbc.setState(0x6f10, 0xc1cb, 0x4480, 0x7bb4, 0xc97d, 0x79a1, 0x0, 0x0);
        gbc.writeMem(0x6f10, { 0xcb, 0x7e });
        gbc.writeMem(0x79a1, { 0xfb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc1cb, gbc.sp());
        EXPECT(0x6f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0239
        gbc.setState(0xed4, 0x498a, 0x1d10, 0x57bc, 0x908c, 0x658b, 0x1, 0x1);
        gbc.writeMem(0xed4, { 0xcb, 0x7e });
        gbc.writeMem(0x658b, { 0x60 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0xed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 023A
        gbc.setState(0x12f9, 0x2faf, 0x4130, 0xb233, 0x6d72, 0x83c8, 0x1, 0x1);
        gbc.writeMem(0x12f9, { 0xcb, 0x7e });
        gbc.writeMem(0x83c8, { 0x66 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2faf, gbc.sp());
        EXPECT(0x12fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x83c8));
        // CB 7E 023B
        gbc.setState(0xc53d, 0x2c29, 0xea20, 0x9fbb, 0xda28, 0x5e68, 0x1, 0x1);
        gbc.writeMem(0x5e68, { 0xe7 });
        gbc.writeMem(0xc53d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2c29, gbc.sp());
        EXPECT(0xc53f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53d));
        EXPECT(0x7e, gbc.readMem(0xc53e));
        // CB 7E 023C
        gbc.setState(0xb21b, 0xe7f6, 0xb970, 0xd507, 0x2694, 0xd5b6, 0x0, 0x0);
        gbc.writeMem(0xb21b, { 0xcb, 0x7e });
        gbc.writeMem(0xd5b6, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe7f6, gbc.sp());
        EXPECT(0xb21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21b));
        EXPECT(0x7e, gbc.readMem(0xb21c));
        EXPECT(0x8f, gbc.readMem(0xd5b6));
        // CB 7E 023D
        gbc.setState(0x2b4c, 0x7bc5, 0xdef0, 0x2a3b, 0x9986, 0x3485, 0x0, 0x0);
        gbc.writeMem(0x2b4c, { 0xcb, 0x7e });
        gbc.writeMem(0x3485, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7bc5, gbc.sp());
        EXPECT(0x2b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 023E
        gbc.setState(0xe193, 0x9904, 0xe90, 0x2536, 0x2b4c, 0xc6bf, 0x0, 0x1);
        gbc.writeMem(0xc6bf, { 0x1f });
        gbc.writeMem(0xe193, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9904, gbc.sp());
        EXPECT(0xe195, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xc6bf));
        EXPECT(0xcb, gbc.readMem(0xe193));
        EXPECT(0x7e, gbc.readMem(0xe194));
        // CB 7E 023F
        gbc.setState(0xece9, 0x9462, 0x4950, 0x910a, 0xb655, 0x96fe, 0x0, 0x1);
        gbc.writeMem(0x96fe, { 0xd7 });
        gbc.writeMem(0xece9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9462, gbc.sp());
        EXPECT(0xeceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x96fe));
        EXPECT(0xcb, gbc.readMem(0xece9));
        EXPECT(0x7e, gbc.readMem(0xecea));
        // CB 7E 0240
        gbc.setState(0xac06, 0x1d05, 0x9b80, 0xeff2, 0xc018, 0x7352, 0x0, 0x1);
        gbc.writeMem(0x7352, { 0x23 });
        gbc.writeMem(0xac06, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1d05, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac06));
        EXPECT(0x7e, gbc.readMem(0xac07));
        // CB 7E 0241
        gbc.setState(0xab8b, 0x2930, 0x2af0, 0x9557, 0xf4e9, 0x4e38, 0x0, 0x0);
        gbc.writeMem(0x4e38, { 0x51 });
        gbc.writeMem(0xab8b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0xab8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab8b));
        EXPECT(0x7e, gbc.readMem(0xab8c));
        // CB 7E 0242
        gbc.setState(0x430b, 0xd236, 0x2f80, 0xed4c, 0x30d0, 0xa657, 0x0, 0x0);
        gbc.writeMem(0x430b, { 0xcb, 0x7e });
        gbc.writeMem(0xa657, { 0x17 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x430d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa657));
        // CB 7E 0243
        gbc.setState(0x6f3c, 0x2a30, 0xc3a0, 0x9d30, 0x9eb9, 0x29a8, 0x0, 0x0);
        gbc.writeMem(0x29a8, { 0xd0 });
        gbc.writeMem(0x6f3c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2a30, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0244
        gbc.setState(0x53ec, 0xace6, 0x2da0, 0x7a1d, 0x52bc, 0xc843, 0x1, 0x1);
        gbc.writeMem(0x53ec, { 0xcb, 0x7e });
        gbc.writeMem(0xc843, { 0xcd });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xace6, gbc.sp());
        EXPECT(0x53ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xc843));
        // CB 7E 0245
        gbc.setState(0x284c, 0xdcaf, 0xb380, 0x4b07, 0xeca5, 0xbfb4, 0x0, 0x1);
        gbc.writeMem(0x284c, { 0xcb, 0x7e });
        gbc.writeMem(0xbfb4, { 0x94 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdcaf, gbc.sp());
        EXPECT(0x284e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xbfb4));
        // CB 7E 0246
        gbc.setState(0xb34, 0xefac, 0xeac0, 0xe085, 0x818, 0x1c53, 0x1, 0x1);
        gbc.writeMem(0xb34, { 0xcb, 0x7e });
        gbc.writeMem(0x1c53, { 0xc1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xefac, gbc.sp());
        EXPECT(0xb36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0247
        gbc.setState(0xc16c, 0xd156, 0xbe0, 0xba7b, 0x8a01, 0x60c7, 0x0, 0x1);
        gbc.writeMem(0x60c7, { 0x8e });
        gbc.writeMem(0xc16c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd156, gbc.sp());
        EXPECT(0xc16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16c));
        EXPECT(0x7e, gbc.readMem(0xc16d));
        // CB 7E 0248
        gbc.setState(0x9d8a, 0x5fcc, 0xb400, 0xf8ac, 0x123a, 0x7e07, 0x0, 0x1);
        gbc.writeMem(0x7e07, { 0x44 });
        gbc.writeMem(0x9d8a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5fcc, gbc.sp());
        EXPECT(0x9d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8a));
        EXPECT(0x7e, gbc.readMem(0x9d8b));
        // CB 7E 0249
        gbc.setState(0x6472, 0x12ff, 0x2800, 0x476d, 0xe08d, 0xa973, 0x0, 0x0);
        gbc.writeMem(0x6472, { 0xcb, 0x7e });
        gbc.writeMem(0xa973, { 0x5b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x12ff, gbc.sp());
        EXPECT(0x6474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa973));
        // CB 7E 024A
        gbc.setState(0x21a3, 0x2190, 0x3770, 0x2718, 0x7806, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0x21a3, { 0xcb, 0x7e });
        gbc.writeMem(0x55b0, { 0x6b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2190, gbc.sp());
        EXPECT(0x21a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 024B
        gbc.setState(0x28e5, 0xfb7e, 0x1f20, 0x6f43, 0xb5c0, 0x9c91, 0x0, 0x1);
        gbc.writeMem(0x28e5, { 0xcb, 0x7e });
        gbc.writeMem(0x9c91, { 0x91 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfb7e, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x9c91));
        // CB 7E 024C
        gbc.setState(0xc0fa, 0x2ac0, 0x6360, 0x5370, 0x3a18, 0x6578, 0x1, 0x0);
        gbc.writeMem(0x6578, { 0x3f });
        gbc.writeMem(0xc0fa, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2ac0, gbc.sp());
        EXPECT(0xc0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fa));
        EXPECT(0x7e, gbc.readMem(0xc0fb));
        // CB 7E 024D
        gbc.setState(0x6a23, 0x9741, 0x71f0, 0xf473, 0xa359, 0xbdbe, 0x0, 0x0);
        gbc.writeMem(0x6a23, { 0xcb, 0x7e });
        gbc.writeMem(0xbdbe, { 0x4a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9741, gbc.sp());
        EXPECT(0x6a25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xbdbe));
        // CB 7E 024E
        gbc.setState(0x9b97, 0x1dde, 0x5830, 0xd0f6, 0x347c, 0xc0c2, 0x1, 0x1);
        gbc.writeMem(0x9b97, { 0xcb, 0x7e });
        gbc.writeMem(0xc0c2, { 0xda });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1dde, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b97));
        EXPECT(0x7e, gbc.readMem(0x9b98));
        EXPECT(0xda, gbc.readMem(0xc0c2));
        // CB 7E 024F
        gbc.setState(0x31cd, 0x299d, 0xb80, 0x982a, 0xc1a1, 0x841f, 0x0, 0x1);
        gbc.writeMem(0x31cd, { 0xcb, 0x7e });
        gbc.writeMem(0x841f, { 0x6d });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x299d, gbc.sp());
        EXPECT(0x31cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x841f));
        // CB 7E 0250
        gbc.setState(0x70dc, 0x6b49, 0x3780, 0x4670, 0x5473, 0x2f33, 0x1, 0x0);
        gbc.writeMem(0x2f33, { 0xbd });
        gbc.writeMem(0x70dc, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6b49, gbc.sp());
        EXPECT(0x70de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0251
        gbc.setState(0xa0f3, 0x9856, 0xd5a0, 0xd78, 0x28, 0xa7a, 0x0, 0x1);
        gbc.writeMem(0xa7a, { 0x3 });
        gbc.writeMem(0xa0f3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9856, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f3));
        EXPECT(0x7e, gbc.readMem(0xa0f4));
        // CB 7E 0252
        gbc.setState(0x16ea, 0x77a, 0xca90, 0x7ffb, 0x17b3, 0x9873, 0x1, 0x1);
        gbc.writeMem(0x16ea, { 0xcb, 0x7e });
        gbc.writeMem(0x9873, { 0xc4 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x77a, gbc.sp());
        EXPECT(0x16ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0x9873));
        // CB 7E 0253
        gbc.setState(0x1635, 0x3e3, 0x3860, 0xe763, 0x46ed, 0xdc63, 0x0, 0x0);
        gbc.writeMem(0x1635, { 0xcb, 0x7e });
        gbc.writeMem(0xdc63, { 0x3b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3e3, gbc.sp());
        EXPECT(0x1637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xdc63));
        // CB 7E 0254
        gbc.setState(0x133d, 0x52a8, 0x24d0, 0x4baa, 0xca56, 0xdefc, 0x0, 0x0);
        gbc.writeMem(0x133d, { 0xcb, 0x7e });
        gbc.writeMem(0xdefc, { 0xba });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x52a8, gbc.sp());
        EXPECT(0x133f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xdefc));
        // CB 7E 0255
        gbc.setState(0x6474, 0x7138, 0x5c00, 0xbb35, 0x4692, 0x2eb7, 0x1, 0x0);
        gbc.writeMem(0x2eb7, { 0x4e });
        gbc.writeMem(0x6474, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7138, gbc.sp());
        EXPECT(0x6476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0256
        gbc.setState(0x7eb6, 0xb389, 0x9630, 0x5d36, 0x96b6, 0x695b, 0x1, 0x0);
        gbc.writeMem(0x695b, { 0x5 });
        gbc.writeMem(0x7eb6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb389, gbc.sp());
        EXPECT(0x7eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0257
        gbc.setState(0x5078, 0xd227, 0xb400, 0x8e84, 0x1d01, 0xb3af, 0x0, 0x1);
        gbc.writeMem(0x5078, { 0xcb, 0x7e });
        gbc.writeMem(0xb3af, { 0xe2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd227, gbc.sp());
        EXPECT(0x507a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xb3af));
        // CB 7E 0258
        gbc.setState(0x593d, 0xdeff, 0xf4c0, 0x89cf, 0xf9c6, 0xa894, 0x0, 0x1);
        gbc.writeMem(0x593d, { 0xcb, 0x7e });
        gbc.writeMem(0xa894, { 0xcd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdeff, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa894));
        // CB 7E 0259
        gbc.setState(0xaa99, 0xc32d, 0x68d0, 0xb72a, 0xe4be, 0x80e6, 0x0, 0x0);
        gbc.writeMem(0x80e6, { 0x86 });
        gbc.writeMem(0xaa99, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc32d, gbc.sp());
        EXPECT(0xaa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0x80e6));
        EXPECT(0xcb, gbc.readMem(0xaa99));
        EXPECT(0x7e, gbc.readMem(0xaa9a));
        // CB 7E 025A
        gbc.setState(0xc361, 0x4439, 0x6190, 0xe159, 0xe4a7, 0x18df, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0x74 });
        gbc.writeMem(0xc361, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4439, gbc.sp());
        EXPECT(0xc363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc361));
        EXPECT(0x7e, gbc.readMem(0xc362));
        // CB 7E 025B
        gbc.setState(0xf37, 0xba5e, 0xee80, 0x9d5d, 0x9a29, 0x8933, 0x1, 0x0);
        gbc.writeMem(0xf37, { 0xcb, 0x7e });
        gbc.writeMem(0x8933, { 0x30 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xba5e, gbc.sp());
        EXPECT(0xf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8933));
        // CB 7E 025C
        gbc.setState(0xac48, 0x351b, 0xe170, 0xe714, 0x1a76, 0xb096, 0x1, 0x0);
        gbc.writeMem(0xac48, { 0xcb, 0x7e });
        gbc.writeMem(0xb096, { 0x2f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x351b, gbc.sp());
        EXPECT(0xac4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac48));
        EXPECT(0x7e, gbc.readMem(0xac49));
        EXPECT(0x2f, gbc.readMem(0xb096));
        // CB 7E 025D
        gbc.setState(0x2c6d, 0xde58, 0xe10, 0x9767, 0x7c80, 0x37bb, 0x1, 0x0);
        gbc.writeMem(0x2c6d, { 0xcb, 0x7e });
        gbc.writeMem(0x37bb, { 0xa1 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xde58, gbc.sp());
        EXPECT(0x2c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 025E
        gbc.setState(0xd388, 0xd867, 0xd630, 0x780f, 0x5946, 0xc634, 0x1, 0x1);
        gbc.writeMem(0xc634, { 0x9c });
        gbc.writeMem(0xd388, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd867, gbc.sp());
        EXPECT(0xd38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xc634));
        EXPECT(0xcb, gbc.readMem(0xd388));
        EXPECT(0x7e, gbc.readMem(0xd389));
        // CB 7E 0260
        gbc.setState(0x4d1d, 0x2b43, 0xf7e0, 0x5ee, 0xff05, 0xccf0, 0x0, 0x1);
        gbc.writeMem(0x4d1d, { 0xcb, 0x7e });
        gbc.writeMem(0xccf0, { 0xb2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2b43, gbc.sp());
        EXPECT(0x4d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xccf0));
        // CB 7E 0261
        gbc.setState(0x5c2d, 0x9b1b, 0x99f0, 0x2c2c, 0x1424, 0x1cbe, 0x1, 0x1);
        gbc.writeMem(0x1cbe, { 0xd3 });
        gbc.writeMem(0x5c2d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0262
        gbc.setState(0x5dc8, 0x6d25, 0xdfc0, 0x1b37, 0x69c, 0xdf28, 0x0, 0x1);
        gbc.writeMem(0x5dc8, { 0xcb, 0x7e });
        gbc.writeMem(0xdf28, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6d25, gbc.sp());
        EXPECT(0x5dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdf28));
        // CB 7E 0263
        gbc.setState(0x33be, 0x4955, 0xad20, 0x249e, 0x5527, 0xd468, 0x1, 0x0);
        gbc.writeMem(0x33be, { 0xcb, 0x7e });
        gbc.writeMem(0xd468, { 0xa0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4955, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd468));
        // CB 7E 0264
        gbc.setState(0xdf4a, 0x89fc, 0xad70, 0xf50c, 0x7238, 0x5928, 0x1, 0x1);
        gbc.writeMem(0x5928, { 0x8a });
        gbc.writeMem(0xdf4a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x89fc, gbc.sp());
        EXPECT(0xdf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf4a));
        EXPECT(0x7e, gbc.readMem(0xdf4b));
        // CB 7E 0265
        gbc.setState(0x8b50, 0xecba, 0x8aa0, 0x899d, 0x88b4, 0x677d, 0x0, 0x0);
        gbc.writeMem(0x677d, { 0x8 });
        gbc.writeMem(0x8b50, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xecba, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b50));
        EXPECT(0x7e, gbc.readMem(0x8b51));
        // CB 7E 0266
        gbc.setState(0xa7d2, 0x857f, 0x4930, 0x22f2, 0x743e, 0xf9b4, 0x1, 0x0);
        gbc.writeMem(0xa7d2, { 0xcb, 0x7e });
        gbc.writeMem(0xf9b4, { 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x857f, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d2));
        EXPECT(0x7e, gbc.readMem(0xa7d3));
        EXPECT(0xf2, gbc.readMem(0xf9b4));
        // CB 7E 0267
        gbc.setState(0xe3d, 0x820a, 0xbdd0, 0x15e0, 0x8291, 0xafe9, 0x1, 0x1);
        gbc.writeMem(0xe3d, { 0xcb, 0x7e });
        gbc.writeMem(0xafe9, { 0xfe });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x820a, gbc.sp());
        EXPECT(0xe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xafe9));
        // CB 7E 0268
        gbc.setState(0xda28, 0x8529, 0x7fa0, 0x1c8, 0xfa55, 0xd494, 0x0, 0x0);
        gbc.writeMem(0xd494, { 0x39 });
        gbc.writeMem(0xda28, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8529, gbc.sp());
        EXPECT(0xda2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xd494));
        EXPECT(0xcb, gbc.readMem(0xda28));
        EXPECT(0x7e, gbc.readMem(0xda29));
        // CB 7E 0269
        gbc.setState(0xbda0, 0x5ef5, 0x9b30, 0xa03a, 0x16ef, 0x62cd, 0x1, 0x1);
        gbc.writeMem(0x62cd, { 0x2d });
        gbc.writeMem(0xbda0, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5ef5, gbc.sp());
        EXPECT(0xbda2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda0));
        EXPECT(0x7e, gbc.readMem(0xbda1));
        // CB 7E 026A
        gbc.setState(0xe23d, 0x6eea, 0xa0c0, 0xe3bb, 0xe2df, 0x35e3, 0x1, 0x1);
        gbc.writeMem(0x35e3, { 0xd2 });
        gbc.writeMem(0xe23d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6eea, gbc.sp());
        EXPECT(0xe23f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23d));
        EXPECT(0x7e, gbc.readMem(0xe23e));
        // CB 7E 026B
        gbc.setState(0xc195, 0xde19, 0xc970, 0x4f13, 0xb1c, 0x7b34, 0x1, 0x1);
        gbc.writeMem(0x7b34, { 0x4d });
        gbc.writeMem(0xc195, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xde19, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc195));
        EXPECT(0x7e, gbc.readMem(0xc196));
        // CB 7E 026C
        gbc.setState(0xed7e, 0x18d4, 0x5070, 0x600d, 0x8d9e, 0x4ce5, 0x0, 0x1);
        gbc.writeMem(0x4ce5, { 0xe8 });
        gbc.writeMem(0xed7e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x18d4, gbc.sp());
        EXPECT(0xed80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7e));
        EXPECT(0x7e, gbc.readMem(0xed7f));
        // CB 7E 026D
        gbc.setState(0x82bf, 0x96ce, 0xd450, 0x342a, 0x9edc, 0x3931, 0x0, 0x1);
        gbc.writeMem(0x3931, { 0xc1 });
        gbc.writeMem(0x82bf, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x96ce, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bf));
        EXPECT(0x7e, gbc.readMem(0x82c0));
        // CB 7E 026E
        gbc.setState(0xa13a, 0x6850, 0xc260, 0x8234, 0xe122, 0x9230, 0x0, 0x0);
        gbc.writeMem(0x9230, { 0x63 });
        gbc.writeMem(0xa13a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6850, gbc.sp());
        EXPECT(0xa13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x9230));
        EXPECT(0xcb, gbc.readMem(0xa13a));
        EXPECT(0x7e, gbc.readMem(0xa13b));
        // CB 7E 026F
        gbc.setState(0x4ebc, 0x2e51, 0xc620, 0xb8ba, 0x1dd, 0xef95, 0x1, 0x0);
        gbc.writeMem(0x4ebc, { 0xcb, 0x7e });
        gbc.writeMem(0xef95, { 0x54 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2e51, gbc.sp());
        EXPECT(0x4ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xef95));
        // CB 7E 0270
        gbc.setState(0x10f, 0xab77, 0x8a50, 0xe795, 0xb664, 0x1673, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0xcb, 0x7e });
        gbc.writeMem(0x1673, { 0x93 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xab77, gbc.sp());
        EXPECT(0x111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0272
        gbc.setState(0x73f4, 0xad43, 0x8be0, 0xa22c, 0xb162, 0x82c9, 0x0, 0x0);
        gbc.writeMem(0x73f4, { 0xcb, 0x7e });
        gbc.writeMem(0x82c9, { 0xd4 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xad43, gbc.sp());
        EXPECT(0x73f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x82c9));
        // CB 7E 0273
        gbc.setState(0xbdf8, 0xe0f0, 0x7860, 0xb1c2, 0xd8d2, 0x276b, 0x0, 0x1);
        gbc.writeMem(0x276b, { 0x5e });
        gbc.writeMem(0xbdf8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe0f0, gbc.sp());
        EXPECT(0xbdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf8));
        EXPECT(0x7e, gbc.readMem(0xbdf9));
        // CB 7E 0274
        gbc.setState(0x3266, 0xab90, 0x70d0, 0xb1a1, 0x843e, 0xa4ed, 0x1, 0x1);
        gbc.writeMem(0x3266, { 0xcb, 0x7e });
        gbc.writeMem(0xa4ed, { 0x59 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xab90, gbc.sp());
        EXPECT(0x3268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xa4ed));
        // CB 7E 0275
        gbc.setState(0x6045, 0x1ae7, 0x1e90, 0xe78b, 0x35a7, 0x596b, 0x1, 0x1);
        gbc.writeMem(0x596b, { 0xac });
        gbc.writeMem(0x6045, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1ae7, gbc.sp());
        EXPECT(0x6047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0276
        gbc.setState(0xe2c3, 0xe13e, 0xac40, 0xa735, 0xcdbc, 0x5fcd, 0x1, 0x1);
        gbc.writeMem(0x5fcd, { 0xcc });
        gbc.writeMem(0xe2c3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c3));
        EXPECT(0x7e, gbc.readMem(0xe2c4));
        // CB 7E 0277
        gbc.setState(0x278e, 0xada6, 0x9110, 0xa085, 0xd22c, 0x2eee, 0x0, 0x0);
        gbc.writeMem(0x278e, { 0xcb, 0x7e });
        gbc.writeMem(0x2eee, { 0xf6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xada6, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0278
        gbc.setState(0xafd6, 0x38d7, 0xfe60, 0x509f, 0x1cbb, 0x2598, 0x0, 0x1);
        gbc.writeMem(0x2598, { 0x59 });
        gbc.writeMem(0xafd6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0xafd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd6));
        EXPECT(0x7e, gbc.readMem(0xafd7));
        // CB 7E 0279
        gbc.setState(0xf03, 0xd5ae, 0x8d50, 0xa243, 0x94f1, 0x26d2, 0x0, 0x1);
        gbc.writeMem(0xf03, { 0xcb, 0x7e });
        gbc.writeMem(0x26d2, { 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0xf05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 027A
        gbc.setState(0x3065, 0x81b5, 0xcf60, 0x97d, 0xb452, 0x832f, 0x0, 0x1);
        gbc.writeMem(0x3065, { 0xcb, 0x7e });
        gbc.writeMem(0x832f, { 0x33 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x81b5, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x832f));
        // CB 7E 027B
        gbc.setState(0xc4d0, 0x58c3, 0x8f80, 0x62d5, 0x88b7, 0x213f, 0x1, 0x1);
        gbc.writeMem(0x213f, { 0xad });
        gbc.writeMem(0xc4d0, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x58c3, gbc.sp());
        EXPECT(0xc4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d0));
        EXPECT(0x7e, gbc.readMem(0xc4d1));
        // CB 7E 027C
        gbc.setState(0x6b2, 0x4b0d, 0x6590, 0x4d86, 0x86bb, 0x19a5, 0x1, 0x1);
        gbc.writeMem(0x6b2, { 0xcb, 0x7e });
        gbc.writeMem(0x19a5, { 0xe0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4b0d, gbc.sp());
        EXPECT(0x6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 027D
        gbc.setState(0x7a94, 0xbe1c, 0x5660, 0xd635, 0x6e5e, 0xb9b, 0x1, 0x0);
        gbc.writeMem(0xb9b, { 0xea });
        gbc.writeMem(0x7a94, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbe1c, gbc.sp());
        EXPECT(0x7a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 027E
        gbc.setState(0x3ae5, 0xbc4f, 0x74d0, 0x7fb0, 0x4b53, 0x81e0, 0x0, 0x0);
        gbc.writeMem(0x3ae5, { 0xcb, 0x7e });
        gbc.writeMem(0x81e0, { 0xe3 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0x3ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x81e0));
        // CB 7E 027F
        gbc.setState(0x9690, 0x284b, 0x6aa0, 0xdd9c, 0x2f37, 0x8470, 0x1, 0x1);
        gbc.writeMem(0x8470, { 0x75 });
        gbc.writeMem(0x9690, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x284b, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8470));
        EXPECT(0xcb, gbc.readMem(0x9690));
        EXPECT(0x7e, gbc.readMem(0x9691));
        // CB 7E 0281
        gbc.setState(0xefb, 0x3144, 0x8b10, 0x3c36, 0xcd90, 0x1389, 0x1, 0x1);
        gbc.writeMem(0xefb, { 0xcb, 0x7e });
        gbc.writeMem(0x1389, { 0xd6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3144, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0283
        gbc.setState(0xe49, 0x11c, 0xe390, 0x5f4, 0xf7d9, 0xd1b1, 0x0, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0x7e });
        gbc.writeMem(0xd1b1, { 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x11c, gbc.sp());
        EXPECT(0xe4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd1b1));
        // CB 7E 0284
        gbc.setState(0x8536, 0x9b05, 0xd390, 0x786d, 0xf909, 0x6a13, 0x0, 0x1);
        gbc.writeMem(0x6a13, { 0x8d });
        gbc.writeMem(0x8536, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9b05, gbc.sp());
        EXPECT(0x8538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8536));
        EXPECT(0x7e, gbc.readMem(0x8537));
        // CB 7E 0285
        gbc.setState(0xbb87, 0xa087, 0x12a0, 0x6209, 0x4679, 0xc453, 0x1, 0x1);
        gbc.writeMem(0xbb87, { 0xcb, 0x7e });
        gbc.writeMem(0xc453, { 0x38 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa087, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb87));
        EXPECT(0x7e, gbc.readMem(0xbb88));
        EXPECT(0x38, gbc.readMem(0xc453));
        // CB 7E 0286
        gbc.setState(0x804f, 0xa73f, 0x9760, 0x6326, 0xde3b, 0xf001, 0x0, 0x0);
        gbc.writeMem(0x804f, { 0xcb, 0x7e });
        gbc.writeMem(0xf001, { 0x4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa73f, gbc.sp());
        EXPECT(0x8051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804f));
        EXPECT(0x7e, gbc.readMem(0x8050));
        EXPECT(0x4, gbc.readMem(0xf001));
        // CB 7E 0287
        gbc.setState(0xeed4, 0x789, 0x3b80, 0x769, 0x7aa0, 0x6015, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0x1d });
        gbc.writeMem(0xeed4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x789, gbc.sp());
        EXPECT(0xeed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed4));
        EXPECT(0x7e, gbc.readMem(0xeed5));
        // CB 7E 0288
        gbc.setState(0xed45, 0xf043, 0x58d0, 0x7276, 0x6101, 0x4cdd, 0x0, 0x1);
        gbc.writeMem(0x4cdd, { 0x9a });
        gbc.writeMem(0xed45, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf043, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed45));
        EXPECT(0x7e, gbc.readMem(0xed46));
        // CB 7E 0289
        gbc.setState(0x60b1, 0xb1c4, 0xae70, 0x9f92, 0x7825, 0x3e8d, 0x0, 0x1);
        gbc.writeMem(0x3e8d, { 0x21 });
        gbc.writeMem(0x60b1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb1c4, gbc.sp());
        EXPECT(0x60b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 028A
        gbc.setState(0x2071, 0x9c5c, 0x38d0, 0x67d6, 0x5240, 0xa72d, 0x0, 0x1);
        gbc.writeMem(0x2071, { 0xcb, 0x7e });
        gbc.writeMem(0xa72d, { 0xed });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0x2073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xa72d));
        // CB 7E 028B
        gbc.setState(0x5902, 0x58fb, 0xa0d0, 0xd027, 0xc0ed, 0x86d5, 0x1, 0x0);
        gbc.writeMem(0x5902, { 0xcb, 0x7e });
        gbc.writeMem(0x86d5, { 0x85 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x58fb, gbc.sp());
        EXPECT(0x5904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x86d5));
        // CB 7E 028C
        gbc.setState(0x669a, 0xc47a, 0x9e10, 0xc242, 0xe45a, 0x72ab, 0x1, 0x0);
        gbc.writeMem(0x669a, { 0xcb, 0x7e });
        gbc.writeMem(0x72ab, { 0x95 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc47a, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 028D
        gbc.setState(0xab77, 0x90ea, 0x9d20, 0x3839, 0x13a8, 0xf85e, 0x1, 0x0);
        gbc.writeMem(0xab77, { 0xcb, 0x7e });
        gbc.writeMem(0xf85e, { 0x67 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x90ea, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab77));
        EXPECT(0x7e, gbc.readMem(0xab78));
        EXPECT(0x67, gbc.readMem(0xf85e));
        // CB 7E 028E
        gbc.setState(0x9ee8, 0x31e4, 0xed80, 0x9aa1, 0x325a, 0x676d, 0x1, 0x1);
        gbc.writeMem(0x676d, { 0x69 });
        gbc.writeMem(0x9ee8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x31e4, gbc.sp());
        EXPECT(0x9eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee8));
        EXPECT(0x7e, gbc.readMem(0x9ee9));
        // CB 7E 028F
        gbc.setState(0xb374, 0xce2b, 0xe950, 0x58b3, 0x75dc, 0x827d, 0x1, 0x1);
        gbc.writeMem(0x827d, { 0x98 });
        gbc.writeMem(0xb374, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0xb376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x827d));
        EXPECT(0xcb, gbc.readMem(0xb374));
        EXPECT(0x7e, gbc.readMem(0xb375));
        // CB 7E 0290
        gbc.setState(0xa17b, 0x9340, 0x7960, 0xcac8, 0xeaff, 0x8e2b, 0x0, 0x1);
        gbc.writeMem(0x8e2b, { 0x15 });
        gbc.writeMem(0xa17b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0xa17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8e2b));
        EXPECT(0xcb, gbc.readMem(0xa17b));
        EXPECT(0x7e, gbc.readMem(0xa17c));
        // CB 7E 0291
        gbc.setState(0xb107, 0xc7a0, 0x66a0, 0xd83c, 0x3f61, 0xe0b9, 0x0, 0x0);
        gbc.writeMem(0xb107, { 0xcb, 0x7e });
        gbc.writeMem(0xe0b9, { 0xed });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc7a0, gbc.sp());
        EXPECT(0xb109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb107));
        EXPECT(0x7e, gbc.readMem(0xb108));
        EXPECT(0xed, gbc.readMem(0xe0b9));
        // CB 7E 0292
        gbc.setState(0x6201, 0x40d8, 0x9820, 0x7c9b, 0x70f, 0x10ee, 0x1, 0x1);
        gbc.writeMem(0x10ee, { 0xbe });
        gbc.writeMem(0x6201, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x40d8, gbc.sp());
        EXPECT(0x6203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0293
        gbc.setState(0x34df, 0x8da8, 0xed50, 0xc76d, 0x8a60, 0xfd51, 0x1, 0x1);
        gbc.writeMem(0x34df, { 0xcb, 0x7e });
        gbc.writeMem(0xfd51, { 0x8c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8da8, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xfd51));
        // CB 7E 0294
        gbc.setState(0x95f6, 0xc694, 0x0, 0x1af, 0x19b8, 0xfc7, 0x1, 0x0);
        gbc.writeMem(0xfc7, { 0x6e });
        gbc.writeMem(0x95f6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc694, gbc.sp());
        EXPECT(0x95f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f6));
        EXPECT(0x7e, gbc.readMem(0x95f7));
        // CB 7E 0295
        gbc.setState(0xc7d2, 0x4027, 0xaf40, 0xf700, 0x7be1, 0x5290, 0x1, 0x1);
        gbc.writeMem(0x5290, { 0xc7 });
        gbc.writeMem(0xc7d2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4027, gbc.sp());
        EXPECT(0xc7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d2));
        EXPECT(0x7e, gbc.readMem(0xc7d3));
        // CB 7E 0296
        gbc.setState(0xa1ee, 0x9244, 0xb0d0, 0x8abe, 0x107a, 0x7bc0, 0x1, 0x0);
        gbc.writeMem(0x7bc0, { 0x35 });
        gbc.writeMem(0xa1ee, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9244, gbc.sp());
        EXPECT(0xa1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ee));
        EXPECT(0x7e, gbc.readMem(0xa1ef));
        // CB 7E 0297
        gbc.setState(0x1eec, 0x73f6, 0x4a80, 0x8436, 0xf0cd, 0xab31, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0x7e });
        gbc.writeMem(0xab31, { 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x73f6, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xab31));
        // CB 7E 0298
        gbc.setState(0xe784, 0x4bf5, 0xa310, 0x9dad, 0x843e, 0xc8d6, 0x0, 0x1);
        gbc.writeMem(0xc8d6, { 0x24 });
        gbc.writeMem(0xe784, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4bf5, gbc.sp());
        EXPECT(0xe786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc8d6));
        EXPECT(0xcb, gbc.readMem(0xe784));
        EXPECT(0x7e, gbc.readMem(0xe785));
        // CB 7E 0299
        gbc.setState(0x188b, 0x952d, 0xbf40, 0x32bb, 0x2b3f, 0x8cf, 0x1, 0x1);
        gbc.writeMem(0x8cf, { 0x24 });
        gbc.writeMem(0x188b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0x188d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 029A
        gbc.setState(0x6c50, 0x5304, 0xb040, 0xa332, 0x9d7d, 0xf0a5, 0x0, 0x0);
        gbc.writeMem(0x6c50, { 0xcb, 0x7e });
        gbc.writeMem(0xf0a5, { 0xd7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0x6c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xf0a5));
        // CB 7E 029C
        gbc.setState(0xa4af, 0xabb4, 0x1a30, 0xc87c, 0x93f, 0xc792, 0x1, 0x0);
        gbc.writeMem(0xa4af, { 0xcb, 0x7e });
        gbc.writeMem(0xc792, { 0x39 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0xa4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4af));
        EXPECT(0x7e, gbc.readMem(0xa4b0));
        EXPECT(0x39, gbc.readMem(0xc792));
        // CB 7E 029D
        gbc.setState(0x38db, 0xedb2, 0x93c0, 0xfaac, 0x425c, 0x5892, 0x0, 0x0);
        gbc.writeMem(0x38db, { 0xcb, 0x7e });
        gbc.writeMem(0x5892, { 0xd6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xedb2, gbc.sp());
        EXPECT(0x38dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 029E
        gbc.setState(0xbaa1, 0x152b, 0xc060, 0x1701, 0x93db, 0x320a, 0x0, 0x0);
        gbc.writeMem(0x320a, { 0x5e });
        gbc.writeMem(0xbaa1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xbaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa1));
        EXPECT(0x7e, gbc.readMem(0xbaa2));
        // CB 7E 029F
        gbc.setState(0xb864, 0x90ee, 0x5bc0, 0xa944, 0x178d, 0xc694, 0x1, 0x1);
        gbc.writeMem(0xb864, { 0xcb, 0x7e });
        gbc.writeMem(0xc694, { 0x96 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x90ee, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb864));
        EXPECT(0x7e, gbc.readMem(0xb865));
        EXPECT(0x96, gbc.readMem(0xc694));
        // CB 7E 02A0
        gbc.setState(0x4cd, 0x59a8, 0x2940, 0xc110, 0x28b0, 0x923, 0x0, 0x1);
        gbc.writeMem(0x4cd, { 0xcb, 0x7e });
        gbc.writeMem(0x923, { 0x70 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x59a8, gbc.sp());
        EXPECT(0x4cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02A1
        gbc.setState(0xc462, 0x3606, 0x4790, 0x58c1, 0x26be, 0xbb3c, 0x1, 0x1);
        gbc.writeMem(0xbb3c, { 0x1 });
        gbc.writeMem(0xc462, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3606, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xbb3c));
        EXPECT(0xcb, gbc.readMem(0xc462));
        EXPECT(0x7e, gbc.readMem(0xc463));
        // CB 7E 02A2
        gbc.setState(0x206b, 0x550f, 0x85a0, 0xcf94, 0x797c, 0x9d93, 0x0, 0x1);
        gbc.writeMem(0x206b, { 0xcb, 0x7e });
        gbc.writeMem(0x9d93, { 0x1d });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x550f, gbc.sp());
        EXPECT(0x206d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x9d93));
        // CB 7E 02A3
        gbc.setState(0xc499, 0x36b9, 0xa3c0, 0x94bb, 0xefd7, 0x26af, 0x0, 0x0);
        gbc.writeMem(0x26af, { 0x5c });
        gbc.writeMem(0xc499, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x36b9, gbc.sp());
        EXPECT(0xc49b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc499));
        EXPECT(0x7e, gbc.readMem(0xc49a));
        // CB 7E 02A4
        gbc.setState(0x489f, 0x8853, 0x4b60, 0xc23b, 0xe889, 0x6f7c, 0x1, 0x1);
        gbc.writeMem(0x489f, { 0xcb, 0x7e });
        gbc.writeMem(0x6f7c, { 0x1e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8853, gbc.sp());
        EXPECT(0x48a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02A5
        gbc.setState(0xb1e2, 0xf87c, 0x9430, 0x9b88, 0x213, 0x41a, 0x0, 0x0);
        gbc.writeMem(0x41a, { 0x6c });
        gbc.writeMem(0xb1e2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf87c, gbc.sp());
        EXPECT(0xb1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e2));
        EXPECT(0x7e, gbc.readMem(0xb1e3));
        // CB 7E 02A6
        gbc.setState(0xb237, 0xf6a8, 0xa160, 0xb0f7, 0x19be, 0xe2f6, 0x0, 0x1);
        gbc.writeMem(0xb237, { 0xcb, 0x7e });
        gbc.writeMem(0xe2f6, { 0xaf });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0xb239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb237));
        EXPECT(0x7e, gbc.readMem(0xb238));
        EXPECT(0xaf, gbc.readMem(0xe2f6));
        // CB 7E 02A7
        gbc.setState(0xe255, 0x2f6d, 0xc290, 0xfc6c, 0x2e86, 0x8388, 0x1, 0x0);
        gbc.writeMem(0x8388, { 0xb4 });
        gbc.writeMem(0xe255, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2f6d, gbc.sp());
        EXPECT(0xe257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0x8388));
        EXPECT(0xcb, gbc.readMem(0xe255));
        EXPECT(0x7e, gbc.readMem(0xe256));
        // CB 7E 02A8
        gbc.setState(0xc8fa, 0xa8c7, 0xd140, 0x7ea2, 0x9c3f, 0xe45e, 0x0, 0x0);
        gbc.writeMem(0xc8fa, { 0xcb, 0x7e });
        gbc.writeMem(0xe45e, { 0xd });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa8c7, gbc.sp());
        EXPECT(0xc8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8fa));
        EXPECT(0x7e, gbc.readMem(0xc8fb));
        EXPECT(0xd, gbc.readMem(0xe45e));
        // CB 7E 02A9
        gbc.setState(0xe640, 0xb410, 0x70f0, 0x24f8, 0x8318, 0x775b, 0x0, 0x0);
        gbc.writeMem(0x775b, { 0xe9 });
        gbc.writeMem(0xe640, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb410, gbc.sp());
        EXPECT(0xe642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe640));
        EXPECT(0x7e, gbc.readMem(0xe641));
        // CB 7E 02AA
        gbc.setState(0xdd76, 0x79a2, 0xe310, 0x9599, 0x1153, 0x3c69, 0x0, 0x1);
        gbc.writeMem(0x3c69, { 0x41 });
        gbc.writeMem(0xdd76, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x79a2, gbc.sp());
        EXPECT(0xdd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd76));
        EXPECT(0x7e, gbc.readMem(0xdd77));
        // CB 7E 02AC
        gbc.setState(0x3a88, 0x2dbd, 0x3050, 0x6ed8, 0xd5c5, 0x6e3d, 0x0, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x7e });
        gbc.writeMem(0x6e3d, { 0x5d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02AD
        gbc.setState(0xc534, 0x356d, 0x3970, 0x8fee, 0x884a, 0x93c1, 0x0, 0x0);
        gbc.writeMem(0x93c1, { 0xaa });
        gbc.writeMem(0xc534, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x356d, gbc.sp());
        EXPECT(0xc536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0x93c1));
        EXPECT(0xcb, gbc.readMem(0xc534));
        EXPECT(0x7e, gbc.readMem(0xc535));
        // CB 7E 02AE
        gbc.setState(0xad2b, 0x2ea6, 0x1020, 0x27c9, 0xf913, 0x8e61, 0x0, 0x0);
        gbc.writeMem(0x8e61, { 0xd4 });
        gbc.writeMem(0xad2b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2ea6, gbc.sp());
        EXPECT(0xad2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8e61));
        EXPECT(0xcb, gbc.readMem(0xad2b));
        EXPECT(0x7e, gbc.readMem(0xad2c));
        // CB 7E 02AF
        gbc.setState(0xd04c, 0x9d46, 0x3010, 0xdbbc, 0xbb25, 0xb8aa, 0x0, 0x1);
        gbc.writeMem(0xb8aa, { 0xe });
        gbc.writeMem(0xd04c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9d46, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb8aa));
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0x7e, gbc.readMem(0xd04d));
        // CB 7E 02B0
        gbc.setState(0x4302, 0xbfca, 0x41e0, 0x4b25, 0x762d, 0xadb3, 0x1, 0x1);
        gbc.writeMem(0x4302, { 0xcb, 0x7e });
        gbc.writeMem(0xadb3, { 0x6b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbfca, gbc.sp());
        EXPECT(0x4304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xadb3));
        // CB 7E 02B1
        gbc.setState(0x26a2, 0x13c9, 0xccf0, 0xdf06, 0xdbcc, 0x2a56, 0x1, 0x0);
        gbc.writeMem(0x26a2, { 0xcb, 0x7e });
        gbc.writeMem(0x2a56, { 0xdd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x13c9, gbc.sp());
        EXPECT(0x26a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02B2
        gbc.setState(0x352d, 0xb977, 0x7f20, 0x91e9, 0xc679, 0x95e6, 0x1, 0x0);
        gbc.writeMem(0x352d, { 0xcb, 0x7e });
        gbc.writeMem(0x95e6, { 0x4a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb977, gbc.sp());
        EXPECT(0x352f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x95e6));
        // CB 7E 02B3
        gbc.setState(0xe05a, 0x5352, 0x48c0, 0x6927, 0x9f73, 0x60f7, 0x1, 0x0);
        gbc.writeMem(0x60f7, { 0x37 });
        gbc.writeMem(0xe05a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5352, gbc.sp());
        EXPECT(0xe05c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05a));
        EXPECT(0x7e, gbc.readMem(0xe05b));
        // CB 7E 02B4
        gbc.setState(0xeb4c, 0xe87b, 0x3d70, 0x8225, 0x726a, 0xab0c, 0x1, 0x0);
        gbc.writeMem(0xab0c, { 0xf8 });
        gbc.writeMem(0xeb4c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe87b, gbc.sp());
        EXPECT(0xeb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xab0c));
        EXPECT(0xcb, gbc.readMem(0xeb4c));
        EXPECT(0x7e, gbc.readMem(0xeb4d));
        // CB 7E 02B5
        gbc.setState(0x4880, 0x4c8b, 0x6510, 0xc933, 0x973, 0x3025, 0x0, 0x1);
        gbc.writeMem(0x3025, { 0x68 });
        gbc.writeMem(0x4880, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4c8b, gbc.sp());
        EXPECT(0x4882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02B6
        gbc.setState(0xdff2, 0xfb23, 0x4540, 0x9b8d, 0x1d69, 0xb86b, 0x1, 0x1);
        gbc.writeMem(0xb86b, { 0x7e });
        gbc.writeMem(0xdff2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfb23, gbc.sp());
        EXPECT(0xdff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb86b));
        EXPECT(0xcb, gbc.readMem(0xdff2));
        EXPECT(0x7e, gbc.readMem(0xdff3));
        // CB 7E 02B7
        gbc.setState(0x87cc, 0x2032, 0x8280, 0x32ad, 0x1f75, 0xcafa, 0x0, 0x1);
        gbc.writeMem(0x87cc, { 0xcb, 0x7e });
        gbc.writeMem(0xcafa, { 0x9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2032, gbc.sp());
        EXPECT(0x87ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87cc));
        EXPECT(0x7e, gbc.readMem(0x87cd));
        EXPECT(0x9, gbc.readMem(0xcafa));
        // CB 7E 02B8
        gbc.setState(0xa2f2, 0xeb5b, 0xa250, 0xb1c1, 0xd184, 0x8370, 0x1, 0x0);
        gbc.writeMem(0x8370, { 0x5a });
        gbc.writeMem(0xa2f2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xeb5b, gbc.sp());
        EXPECT(0xa2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8370));
        EXPECT(0xcb, gbc.readMem(0xa2f2));
        EXPECT(0x7e, gbc.readMem(0xa2f3));
        // CB 7E 02B9
        gbc.setState(0x8300, 0x1862, 0x1930, 0x84cf, 0x2cef, 0x8bb0, 0x0, 0x1);
        gbc.writeMem(0x8300, { 0xcb, 0x7e });
        gbc.writeMem(0x8bb0, { 0xe5 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1862, gbc.sp());
        EXPECT(0x8302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8300));
        EXPECT(0x7e, gbc.readMem(0x8301));
        EXPECT(0xe5, gbc.readMem(0x8bb0));
        // CB 7E 02BA
        gbc.setState(0x6a4a, 0x62d8, 0x3420, 0xec65, 0x7327, 0xbb9b, 0x0, 0x0);
        gbc.writeMem(0x6a4a, { 0xcb, 0x7e });
        gbc.writeMem(0xbb9b, { 0x7e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0x6a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbb9b));
        // CB 7E 02BB
        gbc.setState(0xa90f, 0x66d, 0x7600, 0xef21, 0xc72b, 0xb6c9, 0x1, 0x1);
        gbc.writeMem(0xa90f, { 0xcb, 0x7e });
        gbc.writeMem(0xb6c9, { 0x30 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x66d, gbc.sp());
        EXPECT(0xa911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90f));
        EXPECT(0x7e, gbc.readMem(0xa910));
        EXPECT(0x30, gbc.readMem(0xb6c9));
        // CB 7E 02BC
        gbc.setState(0xc015, 0x7030, 0x9c0, 0xaee9, 0xf4ef, 0xabe4, 0x1, 0x0);
        gbc.writeMem(0xabe4, { 0xc8 });
        gbc.writeMem(0xc015, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0xc017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xabe4));
        EXPECT(0xcb, gbc.readMem(0xc015));
        EXPECT(0x7e, gbc.readMem(0xc016));
        // CB 7E 02BD
        gbc.setState(0x5584, 0x7fce, 0xe120, 0xe9bf, 0xc8c9, 0xaa2d, 0x1, 0x1);
        gbc.writeMem(0x5584, { 0xcb, 0x7e });
        gbc.writeMem(0xaa2d, { 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7fce, gbc.sp());
        EXPECT(0x5586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xaa2d));
        // CB 7E 02BE
        gbc.setState(0xd434, 0x491c, 0x35e0, 0x8873, 0x6a16, 0x6c9d, 0x0, 0x0);
        gbc.writeMem(0x6c9d, { 0x21 });
        gbc.writeMem(0xd434, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x491c, gbc.sp());
        EXPECT(0xd436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd434));
        EXPECT(0x7e, gbc.readMem(0xd435));
        // CB 7E 02BF
        gbc.setState(0x96f8, 0x4d11, 0x2590, 0xdc08, 0xd1b7, 0x13e5, 0x1, 0x1);
        gbc.writeMem(0x13e5, { 0x5e });
        gbc.writeMem(0x96f8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4d11, gbc.sp());
        EXPECT(0x96fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f8));
        EXPECT(0x7e, gbc.readMem(0x96f9));
        // CB 7E 02C0
        gbc.setState(0xb06c, 0x65d5, 0x14a0, 0x5daf, 0xd93, 0xc098, 0x1, 0x0);
        gbc.writeMem(0xb06c, { 0xcb, 0x7e });
        gbc.writeMem(0xc098, { 0xb0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0xb06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06c));
        EXPECT(0x7e, gbc.readMem(0xb06d));
        EXPECT(0xb0, gbc.readMem(0xc098));
        // CB 7E 02C1
        gbc.setState(0x7c3, 0x11b9, 0xeed0, 0x90df, 0xa30c, 0xc0a8, 0x0, 0x0);
        gbc.writeMem(0x7c3, { 0xcb, 0x7e });
        gbc.writeMem(0xc0a8, { 0x78 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x11b9, gbc.sp());
        EXPECT(0x7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc0a8));
        // CB 7E 02C2
        gbc.setState(0x8965, 0x4549, 0x7270, 0x3909, 0x5869, 0xaa54, 0x0, 0x0);
        gbc.writeMem(0x8965, { 0xcb, 0x7e });
        gbc.writeMem(0xaa54, { 0xd7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4549, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8965));
        EXPECT(0x7e, gbc.readMem(0x8966));
        EXPECT(0xd7, gbc.readMem(0xaa54));
        // CB 7E 02C3
        gbc.setState(0x1520, 0xf2e, 0xe9c0, 0x73d9, 0x2bcc, 0xb9c3, 0x1, 0x1);
        gbc.writeMem(0x1520, { 0xcb, 0x7e });
        gbc.writeMem(0xb9c3, { 0x13 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0x1522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xb9c3));
        // CB 7E 02C4
        gbc.setState(0xc1b5, 0xcf79, 0x78a0, 0xe629, 0xe4b9, 0xe32d, 0x0, 0x0);
        gbc.writeMem(0xc1b5, { 0xcb, 0x7e });
        gbc.writeMem(0xe32d, { 0x4 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcf79, gbc.sp());
        EXPECT(0xc1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b5));
        EXPECT(0x7e, gbc.readMem(0xc1b6));
        EXPECT(0x4, gbc.readMem(0xe32d));
        // CB 7E 02C5
        gbc.setState(0xa1f4, 0x2ea2, 0xce10, 0xf2f7, 0x46ed, 0x1c6f, 0x1, 0x0);
        gbc.writeMem(0x1c6f, { 0xbc });
        gbc.writeMem(0xa1f4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0xa1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f4));
        EXPECT(0x7e, gbc.readMem(0xa1f5));
        // CB 7E 02C6
        gbc.setState(0x19bf, 0xf2d9, 0x3440, 0xa4fe, 0x9215, 0x9564, 0x1, 0x0);
        gbc.writeMem(0x19bf, { 0xcb, 0x7e });
        gbc.writeMem(0x9564, { 0x4e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf2d9, gbc.sp());
        EXPECT(0x19c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9564));
        // CB 7E 02C7
        gbc.setState(0xacf, 0x292a, 0xd0f0, 0xd2a5, 0xe3a9, 0xfa08, 0x1, 0x0);
        gbc.writeMem(0xacf, { 0xcb, 0x7e });
        gbc.writeMem(0xfa08, { 0x26 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x292a, gbc.sp());
        EXPECT(0xad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xfa08));
        // CB 7E 02C8
        gbc.setState(0x7dac, 0x7dba, 0x9540, 0xf9b7, 0x8907, 0x9360, 0x0, 0x0);
        gbc.writeMem(0x7dac, { 0xcb, 0x7e });
        gbc.writeMem(0x9360, { 0x43 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0x7dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9360));
        // CB 7E 02C9
        gbc.setState(0xe910, 0x7eb3, 0xdd00, 0x395a, 0x83e8, 0x989f, 0x0, 0x0);
        gbc.writeMem(0x989f, { 0xfc });
        gbc.writeMem(0xe910, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7eb3, gbc.sp());
        EXPECT(0xe912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x989f));
        EXPECT(0xcb, gbc.readMem(0xe910));
        EXPECT(0x7e, gbc.readMem(0xe911));
        // CB 7E 02CA
        gbc.setState(0x6504, 0xbacb, 0x5ac0, 0x3eab, 0x66d, 0x188a, 0x0, 0x0);
        gbc.writeMem(0x188a, { 0x64 });
        gbc.writeMem(0x6504, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0x6506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02CB
        gbc.setState(0x9cca, 0x9156, 0xd00, 0xf15b, 0xb1ac, 0xd518, 0x0, 0x0);
        gbc.writeMem(0x9cca, { 0xcb, 0x7e });
        gbc.writeMem(0xd518, { 0xae });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9156, gbc.sp());
        EXPECT(0x9ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cca));
        EXPECT(0x7e, gbc.readMem(0x9ccb));
        EXPECT(0xae, gbc.readMem(0xd518));
        // CB 7E 02CC
        gbc.setState(0x2a83, 0x93fe, 0xfe90, 0x19f4, 0xdbd8, 0x57ea, 0x0, 0x0);
        gbc.writeMem(0x2a83, { 0xcb, 0x7e });
        gbc.writeMem(0x57ea, { 0x3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x93fe, gbc.sp());
        EXPECT(0x2a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02CD
        gbc.setState(0xcc6a, 0xa03e, 0x1b70, 0x1b1a, 0x4695, 0x567d, 0x0, 0x0);
        gbc.writeMem(0x567d, { 0x69 });
        gbc.writeMem(0xcc6a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa03e, gbc.sp());
        EXPECT(0xcc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6a));
        EXPECT(0x7e, gbc.readMem(0xcc6b));
        // CB 7E 02CE
        gbc.setState(0x3df6, 0x3076, 0xb4a0, 0xb80a, 0x6a41, 0xe56e, 0x0, 0x0);
        gbc.writeMem(0x3df6, { 0xcb, 0x7e });
        gbc.writeMem(0xe56e, { 0x70 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3076, gbc.sp());
        EXPECT(0x3df8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xe56e));
        // CB 7E 02CF
        gbc.setState(0xb31e, 0x5af4, 0x76c0, 0x5137, 0x866c, 0xb0f8, 0x0, 0x0);
        gbc.writeMem(0xb0f8, { 0x67 });
        gbc.writeMem(0xb31e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5af4, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb0f8));
        EXPECT(0xcb, gbc.readMem(0xb31e));
        EXPECT(0x7e, gbc.readMem(0xb31f));
        // CB 7E 02D0
        gbc.setState(0xedb3, 0x4b9b, 0x5c0, 0xeb80, 0xd165, 0x55c9, 0x0, 0x1);
        gbc.writeMem(0x55c9, { 0xd1 });
        gbc.writeMem(0xedb3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4b9b, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb3));
        EXPECT(0x7e, gbc.readMem(0xedb4));
        // CB 7E 02D1
        gbc.setState(0xee2d, 0xaa8d, 0x2370, 0xe7f4, 0xfb21, 0x96e9, 0x0, 0x0);
        gbc.writeMem(0x96e9, { 0x4d });
        gbc.writeMem(0xee2d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xaa8d, gbc.sp());
        EXPECT(0xee2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x96e9));
        EXPECT(0xcb, gbc.readMem(0xee2d));
        EXPECT(0x7e, gbc.readMem(0xee2e));
        // CB 7E 02D2
        gbc.setState(0x4774, 0x1400, 0x6e00, 0xb2f4, 0xea99, 0x5234, 0x1, 0x0);
        gbc.writeMem(0x4774, { 0xcb, 0x7e });
        gbc.writeMem(0x5234, { 0xd2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1400, gbc.sp());
        EXPECT(0x4776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02D3
        gbc.setState(0x72f3, 0x228b, 0xe560, 0x400c, 0x750f, 0x3480, 0x0, 0x0);
        gbc.writeMem(0x3480, { 0x67 });
        gbc.writeMem(0x72f3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x228b, gbc.sp());
        EXPECT(0x72f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02D4
        gbc.setState(0xd4b1, 0xd2e4, 0xc690, 0x8dc6, 0x298f, 0xe0f8, 0x0, 0x1);
        gbc.writeMem(0xd4b1, { 0xcb, 0x7e });
        gbc.writeMem(0xe0f8, { 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd2e4, gbc.sp());
        EXPECT(0xd4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b1));
        EXPECT(0x7e, gbc.readMem(0xd4b2));
        EXPECT(0xb0, gbc.readMem(0xe0f8));
        // CB 7E 02D5
        gbc.setState(0x78a2, 0x483f, 0xda60, 0x2b97, 0x8222, 0xf496, 0x1, 0x1);
        gbc.writeMem(0x78a2, { 0xcb, 0x7e });
        gbc.writeMem(0xf496, { 0x96 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x483f, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xf496));
        // CB 7E 02D6
        gbc.setState(0x1060, 0xe8bc, 0x2f10, 0x8a56, 0x3bfe, 0x5b7f, 0x1, 0x1);
        gbc.writeMem(0x1060, { 0xcb, 0x7e });
        gbc.writeMem(0x5b7f, { 0x4a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe8bc, gbc.sp());
        EXPECT(0x1062, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02D7
        gbc.setState(0x98fd, 0x8597, 0x8210, 0x42a1, 0xdfa9, 0xd08, 0x1, 0x1);
        gbc.writeMem(0xd08, { 0x3c });
        gbc.writeMem(0x98fd, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8597, gbc.sp());
        EXPECT(0x98ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98fd));
        EXPECT(0x7e, gbc.readMem(0x98fe));
        // CB 7E 02D8
        gbc.setState(0x3dd, 0xe36a, 0xa260, 0xef76, 0xd8fd, 0x5270, 0x1, 0x1);
        gbc.writeMem(0x3dd, { 0xcb, 0x7e });
        gbc.writeMem(0x5270, { 0x49 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe36a, gbc.sp());
        EXPECT(0x3df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02D9
        gbc.setState(0x8e8f, 0xf861, 0x7960, 0x6ec4, 0x2f9d, 0xae9e, 0x1, 0x0);
        gbc.writeMem(0x8e8f, { 0xcb, 0x7e });
        gbc.writeMem(0xae9e, { 0xe1 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf861, gbc.sp());
        EXPECT(0x8e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8f));
        EXPECT(0x7e, gbc.readMem(0x8e90));
        EXPECT(0xe1, gbc.readMem(0xae9e));
        // CB 7E 02DB
        gbc.setState(0x4109, 0x3a6d, 0xe400, 0xad48, 0x4ce, 0x55aa, 0x1, 0x0);
        gbc.writeMem(0x4109, { 0xcb, 0x7e });
        gbc.writeMem(0x55aa, { 0xf0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3a6d, gbc.sp());
        EXPECT(0x410b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02DC
        gbc.setState(0xb94b, 0xdf5c, 0xe430, 0x896, 0xc0be, 0x1b2e, 0x0, 0x0);
        gbc.writeMem(0x1b2e, { 0x2d });
        gbc.writeMem(0xb94b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdf5c, gbc.sp());
        EXPECT(0xb94d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94b));
        EXPECT(0x7e, gbc.readMem(0xb94c));
        // CB 7E 02DD
        gbc.setState(0xcb84, 0xb11f, 0xc580, 0x5f6d, 0xc8fc, 0x3e1c, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xdc });
        gbc.writeMem(0xcb84, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb11f, gbc.sp());
        EXPECT(0xcb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb84));
        EXPECT(0x7e, gbc.readMem(0xcb85));
        // CB 7E 02DE
        gbc.setState(0xcc6e, 0xa0b7, 0xd420, 0x272e, 0x1a4a, 0x2e2d, 0x0, 0x1);
        gbc.writeMem(0x2e2d, { 0x8d });
        gbc.writeMem(0xcc6e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa0b7, gbc.sp());
        EXPECT(0xcc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6e));
        EXPECT(0x7e, gbc.readMem(0xcc6f));
        // CB 7E 02DF
        gbc.setState(0x8c11, 0x726a, 0x9ab0, 0x267d, 0x2d86, 0x3399, 0x0, 0x0);
        gbc.writeMem(0x3399, { 0x85 });
        gbc.writeMem(0x8c11, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x726a, gbc.sp());
        EXPECT(0x8c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c11));
        EXPECT(0x7e, gbc.readMem(0x8c12));
        // CB 7E 02E0
        gbc.setState(0xc1d8, 0xa0f4, 0x2100, 0xdcc5, 0xcb4c, 0xea8f, 0x1, 0x0);
        gbc.writeMem(0xc1d8, { 0xcb, 0x7e });
        gbc.writeMem(0xea8f, { 0x41 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa0f4, gbc.sp());
        EXPECT(0xc1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d8));
        EXPECT(0x7e, gbc.readMem(0xc1d9));
        EXPECT(0x41, gbc.readMem(0xea8f));
        // CB 7E 02E1
        gbc.setState(0xb72a, 0x5e25, 0x7910, 0xa625, 0xc291, 0x1354, 0x0, 0x0);
        gbc.writeMem(0x1354, { 0x66 });
        gbc.writeMem(0xb72a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5e25, gbc.sp());
        EXPECT(0xb72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72a));
        EXPECT(0x7e, gbc.readMem(0xb72b));
        // CB 7E 02E2
        gbc.setState(0xdba9, 0x57ec, 0x4f60, 0xe44d, 0xfd48, 0x39f0, 0x0, 0x1);
        gbc.writeMem(0x39f0, { 0xc7 });
        gbc.writeMem(0xdba9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba9));
        EXPECT(0x7e, gbc.readMem(0xdbaa));
        // CB 7E 02E3
        gbc.setState(0xb2f2, 0x405, 0x52d0, 0xa521, 0x6b6c, 0x16a9, 0x1, 0x1);
        gbc.writeMem(0x16a9, { 0x7d });
        gbc.writeMem(0xb2f2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x405, gbc.sp());
        EXPECT(0xb2f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f2));
        EXPECT(0x7e, gbc.readMem(0xb2f3));
        // CB 7E 02E4
        gbc.setState(0x2a08, 0xde23, 0x6db0, 0x88a1, 0x605a, 0x3224, 0x0, 0x1);
        gbc.writeMem(0x2a08, { 0xcb, 0x7e });
        gbc.writeMem(0x3224, { 0xb2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xde23, gbc.sp());
        EXPECT(0x2a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02E6
        gbc.setState(0x5e22, 0xf966, 0x51d0, 0xeb96, 0x888d, 0x2511, 0x0, 0x1);
        gbc.writeMem(0x2511, { 0xbe });
        gbc.writeMem(0x5e22, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0x5e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02E7
        gbc.setState(0x158e, 0xff9a, 0xe470, 0x8d39, 0xc339, 0x9fc4, 0x0, 0x0);
        gbc.writeMem(0x158e, { 0xcb, 0x7e });
        gbc.writeMem(0x9fc4, { 0x7f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xff9a, gbc.sp());
        EXPECT(0x1590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x9fc4));
        // CB 7E 02E9
        gbc.setState(0xdfcf, 0x54a0, 0x4e70, 0xea07, 0xb11d, 0x9a6f, 0x1, 0x1);
        gbc.writeMem(0x9a6f, { 0x9b });
        gbc.writeMem(0xdfcf, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0xdfd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9a6f));
        EXPECT(0xcb, gbc.readMem(0xdfcf));
        EXPECT(0x7e, gbc.readMem(0xdfd0));
        // CB 7E 02EA
        gbc.setState(0xe949, 0xb2f, 0x8c50, 0x957b, 0xbc65, 0xee3b, 0x0, 0x1);
        gbc.writeMem(0xe949, { 0xcb, 0x7e });
        gbc.writeMem(0xee3b, { 0xd7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0xe94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe949));
        EXPECT(0x7e, gbc.readMem(0xe94a));
        EXPECT(0xd7, gbc.readMem(0xee3b));
        // CB 7E 02EB
        gbc.setState(0x4756, 0x6dfb, 0x4bc0, 0x606b, 0xb64f, 0xf17a, 0x1, 0x1);
        gbc.writeMem(0x4756, { 0xcb, 0x7e });
        gbc.writeMem(0xf17a, { 0x5b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6dfb, gbc.sp());
        EXPECT(0x4758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xf17a));
        // CB 7E 02EC
        gbc.setState(0xac0a, 0xfe30, 0x81a0, 0x2197, 0xa881, 0x61c8, 0x0, 0x0);
        gbc.writeMem(0x61c8, { 0xbe });
        gbc.writeMem(0xac0a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfe30, gbc.sp());
        EXPECT(0xac0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0a));
        EXPECT(0x7e, gbc.readMem(0xac0b));
        // CB 7E 02EE
        gbc.setState(0xddc7, 0xb226, 0xfbe0, 0xe5a0, 0xe386, 0xd658, 0x1, 0x0);
        gbc.writeMem(0xd658, { 0xfd });
        gbc.writeMem(0xddc7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb226, gbc.sp());
        EXPECT(0xddc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xd658));
        EXPECT(0xcb, gbc.readMem(0xddc7));
        EXPECT(0x7e, gbc.readMem(0xddc8));
        // CB 7E 02EF
        gbc.setState(0x18de, 0x512b, 0xeac0, 0xbf5c, 0x93ba, 0xb167, 0x0, 0x0);
        gbc.writeMem(0x18de, { 0xcb, 0x7e });
        gbc.writeMem(0xb167, { 0xd5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x18e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb167));
        // CB 7E 02F0
        gbc.setState(0x6e15, 0x7db6, 0x91a0, 0xcf79, 0x16a0, 0x9239, 0x0, 0x0);
        gbc.writeMem(0x6e15, { 0xcb, 0x7e });
        gbc.writeMem(0x9239, { 0x1f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7db6, gbc.sp());
        EXPECT(0x6e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9239));
        // CB 7E 02F1
        gbc.setState(0x63ce, 0x4763, 0x29b0, 0x75c8, 0x7605, 0x834c, 0x1, 0x1);
        gbc.writeMem(0x63ce, { 0xcb, 0x7e });
        gbc.writeMem(0x834c, { 0x7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4763, gbc.sp());
        EXPECT(0x63d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x834c));
        // CB 7E 02F2
        gbc.setState(0x1e01, 0x7ca2, 0xa910, 0xf80, 0x1b10, 0xfaca, 0x1, 0x0);
        gbc.writeMem(0x1e01, { 0xcb, 0x7e });
        gbc.writeMem(0xfaca, { 0x6c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7ca2, gbc.sp());
        EXPECT(0x1e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xfaca));
        // CB 7E 02F3
        gbc.setState(0x2c10, 0xdc20, 0x4420, 0x2651, 0x97d0, 0x9025, 0x1, 0x0);
        gbc.writeMem(0x2c10, { 0xcb, 0x7e });
        gbc.writeMem(0x9025, { 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdc20, gbc.sp());
        EXPECT(0x2c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9025));
        // CB 7E 02F4
        gbc.setState(0x5d1c, 0x67e5, 0x45b0, 0xdb98, 0x13fc, 0x6eee, 0x0, 0x0);
        gbc.writeMem(0x5d1c, { 0xcb, 0x7e });
        gbc.writeMem(0x6eee, { 0x27 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x67e5, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02F5
        gbc.setState(0x1c47, 0x4a7e, 0xa980, 0x427f, 0x2cc5, 0xa4a1, 0x0, 0x0);
        gbc.writeMem(0x1c47, { 0xcb, 0x7e });
        gbc.writeMem(0xa4a1, { 0xf3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0x1c49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa4a1));
        // CB 7E 02F7
        gbc.setState(0x2601, 0x36c5, 0x9f90, 0xc2ec, 0x8138, 0xa761, 0x1, 0x0);
        gbc.writeMem(0x2601, { 0xcb, 0x7e });
        gbc.writeMem(0xa761, { 0x45 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x36c5, gbc.sp());
        EXPECT(0x2603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa761));
        // CB 7E 02F8
        gbc.setState(0xb6ab, 0xfc75, 0x1550, 0xb8da, 0x1169, 0x5d70, 0x1, 0x1);
        gbc.writeMem(0x5d70, { 0x65 });
        gbc.writeMem(0xb6ab, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfc75, gbc.sp());
        EXPECT(0xb6ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ab));
        EXPECT(0x7e, gbc.readMem(0xb6ac));
        // CB 7E 02F9
        gbc.setState(0x3f06, 0xd929, 0x7c60, 0xf666, 0x7594, 0x438a, 0x0, 0x0);
        gbc.writeMem(0x3f06, { 0xcb, 0x7e });
        gbc.writeMem(0x438a, { 0x93 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd929, gbc.sp());
        EXPECT(0x3f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 02FA
        gbc.setState(0x65b5, 0xb15f, 0xb3e0, 0x58a2, 0x7e9a, 0x985d, 0x1, 0x1);
        gbc.writeMem(0x65b5, { 0xcb, 0x7e });
        gbc.writeMem(0x985d, { 0xed });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb15f, gbc.sp());
        EXPECT(0x65b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x985d));
        // CB 7E 02FB
        gbc.setState(0x63ad, 0x1bab, 0x85f0, 0x20f4, 0x72f0, 0x9554, 0x0, 0x1);
        gbc.writeMem(0x63ad, { 0xcb, 0x7e });
        gbc.writeMem(0x9554, { 0x95 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1bab, gbc.sp());
        EXPECT(0x63af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x9554));
        // CB 7E 02FC
        gbc.setState(0x830e, 0x4132, 0x6a60, 0xbec9, 0x1940, 0xed48, 0x0, 0x0);
        gbc.writeMem(0x830e, { 0xcb, 0x7e });
        gbc.writeMem(0xed48, { 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4132, gbc.sp());
        EXPECT(0x8310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830e));
        EXPECT(0x7e, gbc.readMem(0x830f));
        EXPECT(0x2c, gbc.readMem(0xed48));
        // CB 7E 02FD
        gbc.setState(0x2c45, 0xba81, 0xb610, 0xd7df, 0xf40b, 0x26cc, 0x0, 0x1);
        gbc.writeMem(0x26cc, { 0x78 });
        gbc.writeMem(0x2c45, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xba81, gbc.sp());
        EXPECT(0x2c47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 02FE
        gbc.setState(0xdd1b, 0x895a, 0x2460, 0xc448, 0x1a47, 0xfb38, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0xcb, 0x7e });
        gbc.writeMem(0xfb38, { 0x20 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x895a, gbc.sp());
        EXPECT(0xdd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1b));
        EXPECT(0x7e, gbc.readMem(0xdd1c));
        EXPECT(0x20, gbc.readMem(0xfb38));
        // CB 7E 02FF
        gbc.setState(0x4725, 0x4355, 0x3330, 0x811, 0x5e63, 0x8f4, 0x0, 0x0);
        gbc.writeMem(0x8f4, { 0xd4 });
        gbc.writeMem(0x4725, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4355, gbc.sp());
        EXPECT(0x4727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0300
        gbc.setState(0x1b53, 0x7740, 0xba20, 0xe67d, 0xdcb8, 0x6a4b, 0x0, 0x0);
        gbc.writeMem(0x1b53, { 0xcb, 0x7e });
        gbc.writeMem(0x6a4b, { 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7740, gbc.sp());
        EXPECT(0x1b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0301
        gbc.setState(0x1112, 0x23e5, 0xc030, 0xbf1a, 0x2b5e, 0xe529, 0x0, 0x0);
        gbc.writeMem(0x1112, { 0xcb, 0x7e });
        gbc.writeMem(0xe529, { 0x38 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x23e5, gbc.sp());
        EXPECT(0x1114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe529));
        // CB 7E 0302
        gbc.setState(0x2efb, 0xd2d3, 0x8330, 0xfdff, 0xd457, 0x60c0, 0x1, 0x1);
        gbc.writeMem(0x2efb, { 0xcb, 0x7e });
        gbc.writeMem(0x60c0, { 0xfd });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd2d3, gbc.sp());
        EXPECT(0x2efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0303
        gbc.setState(0x7444, 0x2539, 0xcff0, 0x6176, 0x7073, 0x2094, 0x0, 0x1);
        gbc.writeMem(0x2094, { 0x42 });
        gbc.writeMem(0x7444, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2539, gbc.sp());
        EXPECT(0x7446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0304
        gbc.setState(0x39a2, 0xfc9b, 0xd1b0, 0xf4aa, 0xa306, 0xa956, 0x0, 0x1);
        gbc.writeMem(0x39a2, { 0xcb, 0x7e });
        gbc.writeMem(0xa956, { 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfc9b, gbc.sp());
        EXPECT(0x39a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa956));
        // CB 7E 0305
        gbc.setState(0xdfef, 0x95dd, 0x64f0, 0x4602, 0xac28, 0xe361, 0x0, 0x1);
        gbc.writeMem(0xdfef, { 0xcb, 0x7e });
        gbc.writeMem(0xe361, { 0x28 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x95dd, gbc.sp());
        EXPECT(0xdff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfef));
        EXPECT(0x7e, gbc.readMem(0xdff0));
        EXPECT(0x28, gbc.readMem(0xe361));
        // CB 7E 0306
        gbc.setState(0x9a65, 0xd139, 0x7260, 0xcf9a, 0x5093, 0xb045, 0x1, 0x0);
        gbc.writeMem(0x9a65, { 0xcb, 0x7e });
        gbc.writeMem(0xb045, { 0x5f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0x9a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a65));
        EXPECT(0x7e, gbc.readMem(0x9a66));
        EXPECT(0x5f, gbc.readMem(0xb045));
        // CB 7E 0307
        gbc.setState(0x3cf6, 0x11bb, 0xb9c0, 0xdda7, 0xe4bb, 0xdb38, 0x1, 0x1);
        gbc.writeMem(0x3cf6, { 0xcb, 0x7e });
        gbc.writeMem(0xdb38, { 0x39 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x11bb, gbc.sp());
        EXPECT(0x3cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xdb38));
        // CB 7E 0308
        gbc.setState(0x4a58, 0xf62, 0x3360, 0xf61a, 0xdd6e, 0xa0bb, 0x0, 0x1);
        gbc.writeMem(0x4a58, { 0xcb, 0x7e });
        gbc.writeMem(0xa0bb, { 0x49 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf62, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xa0bb));
        // CB 7E 0309
        gbc.setState(0x3d3a, 0xb794, 0x7100, 0x3257, 0x52d3, 0x5c7, 0x0, 0x0);
        gbc.writeMem(0x5c7, { 0xda });
        gbc.writeMem(0x3d3a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb794, gbc.sp());
        EXPECT(0x3d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 030A
        gbc.setState(0x2f1d, 0x37a8, 0x2670, 0xded4, 0x8821, 0x9cca, 0x1, 0x0);
        gbc.writeMem(0x2f1d, { 0xcb, 0x7e });
        gbc.writeMem(0x9cca, { 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x37a8, gbc.sp());
        EXPECT(0x2f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9cca));
        // CB 7E 030B
        gbc.setState(0xe248, 0x30a1, 0x6a30, 0x31bb, 0x4f89, 0xbd7, 0x0, 0x1);
        gbc.writeMem(0xbd7, { 0x4c });
        gbc.writeMem(0xe248, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x30a1, gbc.sp());
        EXPECT(0xe24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe248));
        EXPECT(0x7e, gbc.readMem(0xe249));
        // CB 7E 030C
        gbc.setState(0xed9, 0x26e4, 0x7160, 0xf7ba, 0x4b72, 0x817e, 0x0, 0x1);
        gbc.writeMem(0xed9, { 0xcb, 0x7e });
        gbc.writeMem(0x817e, { 0xc9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x26e4, gbc.sp());
        EXPECT(0xedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x817e));
        // CB 7E 030D
        gbc.setState(0x9725, 0x367d, 0x9d70, 0x5c69, 0xc78a, 0xf824, 0x1, 0x1);
        gbc.writeMem(0x9725, { 0xcb, 0x7e });
        gbc.writeMem(0xf824, { 0xfa });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x367d, gbc.sp());
        EXPECT(0x9727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9725));
        EXPECT(0x7e, gbc.readMem(0x9726));
        EXPECT(0xfa, gbc.readMem(0xf824));
        // CB 7E 030E
        gbc.setState(0x7656, 0x283a, 0x1a0, 0xefc, 0x26f4, 0x753d, 0x0, 0x1);
        gbc.writeMem(0x753d, { 0xa5 });
        gbc.writeMem(0x7656, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x283a, gbc.sp());
        EXPECT(0x7658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 030F
        gbc.setState(0xbd4e, 0xbe9f, 0xb8d0, 0xb0b3, 0x4f06, 0x9c26, 0x0, 0x0);
        gbc.writeMem(0x9c26, { 0x5d });
        gbc.writeMem(0xbd4e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0xbd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9c26));
        EXPECT(0xcb, gbc.readMem(0xbd4e));
        EXPECT(0x7e, gbc.readMem(0xbd4f));
        // CB 7E 0310
        gbc.setState(0xb2cd, 0x375, 0x5290, 0xf759, 0x9e3a, 0x665c, 0x1, 0x1);
        gbc.writeMem(0x665c, { 0x74 });
        gbc.writeMem(0xb2cd, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x375, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cd));
        EXPECT(0x7e, gbc.readMem(0xb2ce));
        // CB 7E 0311
        gbc.setState(0x12f, 0x2f93, 0x2fc0, 0x73b5, 0x7046, 0x494d, 0x1, 0x1);
        gbc.writeMem(0x12f, { 0xcb, 0x7e });
        gbc.writeMem(0x494d, { 0xd });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2f93, gbc.sp());
        EXPECT(0x131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0312
        gbc.setState(0x5887, 0x30a4, 0x7540, 0xa9a8, 0x3142, 0x41dd, 0x1, 0x0);
        gbc.writeMem(0x41dd, { 0x24 });
        gbc.writeMem(0x5887, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x30a4, gbc.sp());
        EXPECT(0x5889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0313
        gbc.setState(0xe4e9, 0x753e, 0xad80, 0xf444, 0xdd1b, 0xf9f, 0x1, 0x0);
        gbc.writeMem(0xf9f, { 0x95 });
        gbc.writeMem(0xe4e9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x753e, gbc.sp());
        EXPECT(0xe4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e9));
        EXPECT(0x7e, gbc.readMem(0xe4ea));
        // CB 7E 0314
        gbc.setState(0x70f, 0xabf7, 0x3b0, 0xae12, 0xd4b, 0xa847, 0x1, 0x1);
        gbc.writeMem(0x70f, { 0xcb, 0x7e });
        gbc.writeMem(0xa847, { 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xabf7, gbc.sp());
        EXPECT(0x711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa847));
        // CB 7E 0315
        gbc.setState(0x2c2c, 0xd21, 0xed80, 0xbde9, 0xced8, 0x66ae, 0x0, 0x0);
        gbc.writeMem(0x2c2c, { 0xcb, 0x7e });
        gbc.writeMem(0x66ae, { 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd21, gbc.sp());
        EXPECT(0x2c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0316
        gbc.setState(0x855d, 0x52fe, 0xd680, 0x2906, 0xcfdf, 0x1f8c, 0x0, 0x1);
        gbc.writeMem(0x1f8c, { 0x0 });
        gbc.writeMem(0x855d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0x855f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855d));
        EXPECT(0x7e, gbc.readMem(0x855e));
        // CB 7E 0317
        gbc.setState(0xcb1d, 0x26c2, 0xa5d0, 0x995e, 0xe3cf, 0xdea0, 0x0, 0x0);
        gbc.writeMem(0xcb1d, { 0xcb, 0x7e });
        gbc.writeMem(0xdea0, { 0x1a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x26c2, gbc.sp());
        EXPECT(0xcb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1d));
        EXPECT(0x7e, gbc.readMem(0xcb1e));
        EXPECT(0x1a, gbc.readMem(0xdea0));
        // CB 7E 0318
        gbc.setState(0x29c, 0xdb2e, 0x9440, 0x31c3, 0x85b3, 0xacc0, 0x0, 0x0);
        gbc.writeMem(0x29c, { 0xcb, 0x7e });
        gbc.writeMem(0xacc0, { 0xef });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdb2e, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xacc0));
        // CB 7E 0319
        gbc.setState(0xc2a3, 0x91f6, 0x8410, 0xebb6, 0x37a2, 0x165c, 0x1, 0x1);
        gbc.writeMem(0x165c, { 0xfe });
        gbc.writeMem(0xc2a3, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x91f6, gbc.sp());
        EXPECT(0xc2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a3));
        EXPECT(0x7e, gbc.readMem(0xc2a4));
        // CB 7E 031A
        gbc.setState(0x4deb, 0x6797, 0xe990, 0xe35e, 0x9d36, 0x85b, 0x1, 0x1);
        gbc.writeMem(0x85b, { 0xa6 });
        gbc.writeMem(0x4deb, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6797, gbc.sp());
        EXPECT(0x4ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 031B
        gbc.setState(0x335a, 0x92d8, 0xff10, 0xe6b8, 0x6317, 0x4378, 0x1, 0x0);
        gbc.writeMem(0x335a, { 0xcb, 0x7e });
        gbc.writeMem(0x4378, { 0x6 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x92d8, gbc.sp());
        EXPECT(0x335c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 031C
        gbc.setState(0xd2da, 0xed0c, 0xcfc0, 0xc41f, 0xa5b, 0x208a, 0x0, 0x1);
        gbc.writeMem(0x208a, { 0x44 });
        gbc.writeMem(0xd2da, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0xd2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2da));
        EXPECT(0x7e, gbc.readMem(0xd2db));
        // CB 7E 031D
        gbc.setState(0x4bc7, 0x40d7, 0x9990, 0xc7b7, 0xc1f4, 0x56bc, 0x0, 0x1);
        gbc.writeMem(0x4bc7, { 0xcb, 0x7e });
        gbc.writeMem(0x56bc, { 0x1c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x40d7, gbc.sp());
        EXPECT(0x4bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 031E
        gbc.setState(0x5d20, 0x1e91, 0xbbe0, 0x623b, 0xd61b, 0x9575, 0x1, 0x0);
        gbc.writeMem(0x5d20, { 0xcb, 0x7e });
        gbc.writeMem(0x9575, { 0x1a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1e91, gbc.sp());
        EXPECT(0x5d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9575));
        // CB 7E 031F
        gbc.setState(0x3bd7, 0xa903, 0xf6e0, 0xc0b2, 0xf612, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x3bd7, { 0xcb, 0x7e });
        gbc.writeMem(0x7a3b, { 0xe3 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa903, gbc.sp());
        EXPECT(0x3bd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0320
        gbc.setState(0x5026, 0x7fad, 0x28c0, 0xca26, 0x2701, 0x3a53, 0x0, 0x1);
        gbc.writeMem(0x3a53, { 0x42 });
        gbc.writeMem(0x5026, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7fad, gbc.sp());
        EXPECT(0x5028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0321
        gbc.setState(0x1f91, 0xa018, 0x8720, 0xf3fa, 0xd5ee, 0x3269, 0x1, 0x0);
        gbc.writeMem(0x1f91, { 0xcb, 0x7e });
        gbc.writeMem(0x3269, { 0x8e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa018, gbc.sp());
        EXPECT(0x1f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0322
        gbc.setState(0x58eb, 0x5c8b, 0xfb30, 0x34d2, 0x5317, 0x61e, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xe9 });
        gbc.writeMem(0x58eb, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5c8b, gbc.sp());
        EXPECT(0x58ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0324
        gbc.setState(0x93f4, 0xb8eb, 0x2090, 0xe9ee, 0xb93e, 0x1dc3, 0x0, 0x1);
        gbc.writeMem(0x1dc3, { 0xf3 });
        gbc.writeMem(0x93f4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb8eb, gbc.sp());
        EXPECT(0x93f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f4));
        EXPECT(0x7e, gbc.readMem(0x93f5));
        // CB 7E 0325
        gbc.setState(0x6792, 0x6cf3, 0x3190, 0x65e1, 0x9572, 0xd718, 0x1, 0x0);
        gbc.writeMem(0x6792, { 0xcb, 0x7e });
        gbc.writeMem(0xd718, { 0xd8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6cf3, gbc.sp());
        EXPECT(0x6794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd718));
        // CB 7E 0326
        gbc.setState(0x328c, 0x2650, 0xba40, 0xc2b8, 0x8d20, 0xa59c, 0x0, 0x1);
        gbc.writeMem(0x328c, { 0xcb, 0x7e });
        gbc.writeMem(0xa59c, { 0xeb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2650, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa59c));
        // CB 7E 0327
        gbc.setState(0x1eb8, 0xb5e1, 0x7610, 0x7977, 0x7d6b, 0xb7ca, 0x0, 0x1);
        gbc.writeMem(0x1eb8, { 0xcb, 0x7e });
        gbc.writeMem(0xb7ca, { 0xe0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb5e1, gbc.sp());
        EXPECT(0x1eba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb7ca));
        // CB 7E 0328
        gbc.setState(0x5f5b, 0xe467, 0x19e0, 0x95ee, 0x9426, 0xd4c7, 0x1, 0x1);
        gbc.writeMem(0x5f5b, { 0xcb, 0x7e });
        gbc.writeMem(0xd4c7, { 0xce });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe467, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xd4c7));
        // CB 7E 0329
        gbc.setState(0xb578, 0xc64f, 0x45e0, 0x342, 0x2ab2, 0x55a9, 0x0, 0x0);
        gbc.writeMem(0x55a9, { 0xc9 });
        gbc.writeMem(0xb578, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc64f, gbc.sp());
        EXPECT(0xb57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb578));
        EXPECT(0x7e, gbc.readMem(0xb579));
        // CB 7E 032A
        gbc.setState(0x6afc, 0x94b0, 0x390, 0xf804, 0x1b39, 0xecb5, 0x1, 0x0);
        gbc.writeMem(0x6afc, { 0xcb, 0x7e });
        gbc.writeMem(0xecb5, { 0xcd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0x6afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xecb5));
        // CB 7E 032B
        gbc.setState(0x87d6, 0xb840, 0x7830, 0x1b85, 0xfeba, 0xa0f4, 0x1, 0x1);
        gbc.writeMem(0x87d6, { 0xcb, 0x7e });
        gbc.writeMem(0xa0f4, { 0x4a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0x87d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d6));
        EXPECT(0x7e, gbc.readMem(0x87d7));
        EXPECT(0x4a, gbc.readMem(0xa0f4));
        // CB 7E 032C
        gbc.setState(0x4bc9, 0x6739, 0xb50, 0x96b4, 0x54f2, 0xcc87, 0x1, 0x1);
        gbc.writeMem(0x4bc9, { 0xcb, 0x7e });
        gbc.writeMem(0xcc87, { 0x4e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6739, gbc.sp());
        EXPECT(0x4bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xcc87));
        // CB 7E 032D
        gbc.setState(0x4382, 0x396e, 0xbe60, 0x6c5e, 0xf68a, 0xc154, 0x0, 0x1);
        gbc.writeMem(0x4382, { 0xcb, 0x7e });
        gbc.writeMem(0xc154, { 0xc2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x396e, gbc.sp());
        EXPECT(0x4384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc154));
        // CB 7E 032E
        gbc.setState(0xebe9, 0xa076, 0x7760, 0x9bdd, 0x90ba, 0x2caf, 0x0, 0x0);
        gbc.writeMem(0x2caf, { 0xaa });
        gbc.writeMem(0xebe9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0xebeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe9));
        EXPECT(0x7e, gbc.readMem(0xebea));
        // CB 7E 032F
        gbc.setState(0x473b, 0x8109, 0xaa30, 0x949e, 0x739, 0x3ed9, 0x0, 0x0);
        gbc.writeMem(0x3ed9, { 0x3 });
        gbc.writeMem(0x473b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8109, gbc.sp());
        EXPECT(0x473d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0330
        gbc.setState(0x5d5e, 0xba7c, 0xdfa0, 0x8b5f, 0xf838, 0x6bf, 0x0, 0x1);
        gbc.writeMem(0x6bf, { 0x63 });
        gbc.writeMem(0x5d5e, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xba7c, gbc.sp());
        EXPECT(0x5d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0331
        gbc.setState(0x412b, 0x1520, 0xf230, 0xd1e0, 0xf507, 0xd128, 0x0, 0x1);
        gbc.writeMem(0x412b, { 0xcb, 0x7e });
        gbc.writeMem(0xd128, { 0x8b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1520, gbc.sp());
        EXPECT(0x412d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xd128));
        // CB 7E 0332
        gbc.setState(0xbadb, 0x407a, 0x2ce0, 0x5eca, 0x620b, 0x76a8, 0x0, 0x0);
        gbc.writeMem(0x76a8, { 0x4c });
        gbc.writeMem(0xbadb, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x407a, gbc.sp());
        EXPECT(0xbadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadb));
        EXPECT(0x7e, gbc.readMem(0xbadc));
        // CB 7E 0333
        gbc.setState(0x9040, 0xcb27, 0x90a0, 0xa8b1, 0x9278, 0x660d, 0x0, 0x0);
        gbc.writeMem(0x660d, { 0x96 });
        gbc.writeMem(0x9040, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcb27, gbc.sp());
        EXPECT(0x9042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9040));
        EXPECT(0x7e, gbc.readMem(0x9041));
        // CB 7E 0334
        gbc.setState(0x4568, 0x704e, 0x64d0, 0xcea5, 0xe26d, 0xd755, 0x0, 0x0);
        gbc.writeMem(0x4568, { 0xcb, 0x7e });
        gbc.writeMem(0xd755, { 0xfa });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x704e, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd755));
        // CB 7E 0335
        gbc.setState(0x53cd, 0x661c, 0x2bd0, 0x7ce4, 0x28d7, 0x2ed1, 0x0, 0x1);
        gbc.writeMem(0x2ed1, { 0x63 });
        gbc.writeMem(0x53cd, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0x53cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0336
        gbc.setState(0x3346, 0x678e, 0x5bc0, 0x1b7f, 0xc801, 0xd46, 0x1, 0x1);
        gbc.writeMem(0xd46, { 0xf7 });
        gbc.writeMem(0x3346, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x678e, gbc.sp());
        EXPECT(0x3348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0337
        gbc.setState(0x1e02, 0xa568, 0x99d0, 0x8e89, 0x1bc2, 0xcd30, 0x0, 0x1);
        gbc.writeMem(0x1e02, { 0xcb, 0x7e });
        gbc.writeMem(0xcd30, { 0x13 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa568, gbc.sp());
        EXPECT(0x1e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xcd30));
        // CB 7E 0338
        gbc.setState(0xb1a8, 0xe47, 0x7ac0, 0xe1da, 0x8a94, 0x5cfc, 0x1, 0x0);
        gbc.writeMem(0x5cfc, { 0xa4 });
        gbc.writeMem(0xb1a8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe47, gbc.sp());
        EXPECT(0xb1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a8));
        EXPECT(0x7e, gbc.readMem(0xb1a9));
        // CB 7E 0339
        gbc.setState(0x7690, 0x890a, 0x6870, 0xd06f, 0xe9e1, 0x931d, 0x0, 0x1);
        gbc.writeMem(0x7690, { 0xcb, 0x7e });
        gbc.writeMem(0x931d, { 0x50 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x890a, gbc.sp());
        EXPECT(0x7692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x931d));
        // CB 7E 033A
        gbc.setState(0x1400, 0x39f5, 0x7b60, 0x42e6, 0x2bd, 0xe54a, 0x1, 0x1);
        gbc.writeMem(0x1400, { 0xcb, 0x7e });
        gbc.writeMem(0xe54a, { 0x39 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x39f5, gbc.sp());
        EXPECT(0x1402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xe54a));
        // CB 7E 033B
        gbc.setState(0xcc0f, 0xd8ae, 0x4b20, 0x4e1c, 0xc8ea, 0xb3e8, 0x0, 0x0);
        gbc.writeMem(0xb3e8, { 0x17 });
        gbc.writeMem(0xcc0f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd8ae, gbc.sp());
        EXPECT(0xcc11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb3e8));
        EXPECT(0xcb, gbc.readMem(0xcc0f));
        EXPECT(0x7e, gbc.readMem(0xcc10));
        // CB 7E 033C
        gbc.setState(0x5b60, 0x6917, 0x8630, 0x8f16, 0xb7f4, 0x1db6, 0x1, 0x0);
        gbc.writeMem(0x1db6, { 0x27 });
        gbc.writeMem(0x5b60, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6917, gbc.sp());
        EXPECT(0x5b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 033D
        gbc.setState(0x7cc5, 0xb593, 0x6130, 0xd63, 0x5003, 0x998d, 0x1, 0x0);
        gbc.writeMem(0x7cc5, { 0xcb, 0x7e });
        gbc.writeMem(0x998d, { 0x5d });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0x7cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x998d));
        // CB 7E 033E
        gbc.setState(0x1643, 0xea7c, 0xdc0, 0x4f12, 0x535c, 0xa59d, 0x1, 0x1);
        gbc.writeMem(0x1643, { 0xcb, 0x7e });
        gbc.writeMem(0xa59d, { 0xec });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xea7c, gbc.sp());
        EXPECT(0x1645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa59d));
        // CB 7E 033F
        gbc.setState(0xc5ad, 0x9108, 0xb550, 0xf921, 0xffe9, 0x1013, 0x0, 0x0);
        gbc.writeMem(0x1013, { 0x90 });
        gbc.writeMem(0xc5ad, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9108, gbc.sp());
        EXPECT(0xc5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ad));
        EXPECT(0x7e, gbc.readMem(0xc5ae));
        // CB 7E 0340
        gbc.setState(0xa928, 0x4264, 0x60a0, 0x9bcb, 0xe7c8, 0x280a, 0x1, 0x0);
        gbc.writeMem(0x280a, { 0x4d });
        gbc.writeMem(0xa928, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4264, gbc.sp());
        EXPECT(0xa92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa928));
        EXPECT(0x7e, gbc.readMem(0xa929));
        // CB 7E 0342
        gbc.setState(0x8bb7, 0x5e4d, 0x2d50, 0xe3b4, 0x976, 0x9c6f, 0x1, 0x1);
        gbc.writeMem(0x8bb7, { 0xcb, 0x7e });
        gbc.writeMem(0x9c6f, { 0x3d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5e4d, gbc.sp());
        EXPECT(0x8bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb7));
        EXPECT(0x7e, gbc.readMem(0x8bb8));
        EXPECT(0x3d, gbc.readMem(0x9c6f));
        // CB 7E 0343
        gbc.setState(0x17d, 0x35ed, 0x46e0, 0x9d3f, 0x4875, 0xf7f8, 0x1, 0x0);
        gbc.writeMem(0x17d, { 0xcb, 0x7e });
        gbc.writeMem(0xf7f8, { 0xd1 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x35ed, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xf7f8));
        // CB 7E 0344
        gbc.setState(0xc8c6, 0x63a4, 0xdba0, 0xcb3c, 0xe3b9, 0x7676, 0x0, 0x0);
        gbc.writeMem(0x7676, { 0xf0 });
        gbc.writeMem(0xc8c6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x63a4, gbc.sp());
        EXPECT(0xc8c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c6));
        EXPECT(0x7e, gbc.readMem(0xc8c7));
        // CB 7E 0345
        gbc.setState(0xbb52, 0x1761, 0xe660, 0x6bb9, 0x82f, 0x331b, 0x0, 0x1);
        gbc.writeMem(0x331b, { 0x51 });
        gbc.writeMem(0xbb52, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1761, gbc.sp());
        EXPECT(0xbb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb52));
        EXPECT(0x7e, gbc.readMem(0xbb53));
        // CB 7E 0346
        gbc.setState(0x4589, 0x923d, 0xe050, 0xc2a5, 0x6599, 0x459f, 0x1, 0x1);
        gbc.writeMem(0x4589, { 0xcb, 0x7e });
        gbc.writeMem(0x459f, { 0x10 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x923d, gbc.sp());
        EXPECT(0x458b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0347
        gbc.setState(0x130d, 0x2c64, 0x2ac0, 0xf7b9, 0x7494, 0x82c0, 0x0, 0x1);
        gbc.writeMem(0x130d, { 0xcb, 0x7e });
        gbc.writeMem(0x82c0, { 0x60 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2c64, gbc.sp());
        EXPECT(0x130f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x82c0));
        // CB 7E 0348
        gbc.setState(0x7860, 0x4ecc, 0x5b00, 0x9d61, 0x2c86, 0x2688, 0x0, 0x1);
        gbc.writeMem(0x2688, { 0x41 });
        gbc.writeMem(0x7860, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4ecc, gbc.sp());
        EXPECT(0x7862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0349
        gbc.setState(0x52d2, 0x9156, 0x85f0, 0xc512, 0x75ce, 0x5b60, 0x1, 0x0);
        gbc.writeMem(0x52d2, { 0xcb, 0x7e });
        gbc.writeMem(0x5b60, { 0x74 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9156, gbc.sp());
        EXPECT(0x52d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 034A
        gbc.setState(0x53f7, 0x57e4, 0x7710, 0xbb69, 0xfb67, 0xb9e, 0x0, 0x0);
        gbc.writeMem(0xb9e, { 0x48 });
        gbc.writeMem(0x53f7, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x57e4, gbc.sp());
        EXPECT(0x53f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 034B
        gbc.setState(0xec18, 0x1dff, 0x1fe0, 0x600, 0xa9e4, 0x299b, 0x0, 0x1);
        gbc.writeMem(0x299b, { 0xcc });
        gbc.writeMem(0xec18, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1dff, gbc.sp());
        EXPECT(0xec1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec18));
        EXPECT(0x7e, gbc.readMem(0xec19));
        // CB 7E 034C
        gbc.setState(0xb947, 0xdb6d, 0x7de0, 0x191c, 0xc536, 0x7f26, 0x1, 0x0);
        gbc.writeMem(0x7f26, { 0xde });
        gbc.writeMem(0xb947, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdb6d, gbc.sp());
        EXPECT(0xb949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb947));
        EXPECT(0x7e, gbc.readMem(0xb948));
        // CB 7E 034D
        gbc.setState(0x33e0, 0x5797, 0x3d40, 0xe73, 0x9c51, 0x6357, 0x1, 0x0);
        gbc.writeMem(0x33e0, { 0xcb, 0x7e });
        gbc.writeMem(0x6357, { 0x75 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5797, gbc.sp());
        EXPECT(0x33e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 034E
        gbc.setState(0xcff2, 0xb882, 0x3930, 0x880, 0xfa46, 0x8208, 0x0, 0x1);
        gbc.writeMem(0x8208, { 0xa8 });
        gbc.writeMem(0xcff2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb882, gbc.sp());
        EXPECT(0xcff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x8208));
        EXPECT(0xcb, gbc.readMem(0xcff2));
        EXPECT(0x7e, gbc.readMem(0xcff3));
        // CB 7E 034F
        gbc.setState(0x8819, 0x5bc1, 0xe070, 0xb291, 0x9a52, 0x3188, 0x0, 0x0);
        gbc.writeMem(0x3188, { 0x63 });
        gbc.writeMem(0x8819, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5bc1, gbc.sp());
        EXPECT(0x881b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8819));
        EXPECT(0x7e, gbc.readMem(0x881a));
        // CB 7E 0350
        gbc.setState(0xa730, 0x3aa0, 0xe90, 0xd0, 0x3a05, 0x1e7d, 0x1, 0x1);
        gbc.writeMem(0x1e7d, { 0x7 });
        gbc.writeMem(0xa730, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3aa0, gbc.sp());
        EXPECT(0xa732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa730));
        EXPECT(0x7e, gbc.readMem(0xa731));
        // CB 7E 0351
        gbc.setState(0x890e, 0xa048, 0xfe60, 0x1b28, 0xaf8, 0xfd8c, 0x1, 0x0);
        gbc.writeMem(0x890e, { 0xcb, 0x7e });
        gbc.writeMem(0xfd8c, { 0x5d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x8910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890e));
        EXPECT(0x7e, gbc.readMem(0x890f));
        EXPECT(0x5d, gbc.readMem(0xfd8c));
        // CB 7E 0352
        gbc.setState(0xe4a9, 0x5116, 0xb3a0, 0xe42f, 0x8db2, 0xa3ab, 0x1, 0x0);
        gbc.writeMem(0xa3ab, { 0x7 });
        gbc.writeMem(0xe4a9, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa3ab));
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0x7e, gbc.readMem(0xe4aa));
        // CB 7E 0353
        gbc.setState(0x45bf, 0x14e1, 0x3c00, 0xdd56, 0x6dd4, 0xcb7f, 0x1, 0x0);
        gbc.writeMem(0x45bf, { 0xcb, 0x7e });
        gbc.writeMem(0xcb7f, { 0x7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x14e1, gbc.sp());
        EXPECT(0x45c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcb7f));
        // CB 7E 0354
        gbc.setState(0x8951, 0x9509, 0x5360, 0xfa9c, 0x7ec5, 0x8884, 0x1, 0x1);
        gbc.writeMem(0x8884, { 0x57 });
        gbc.writeMem(0x8951, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9509, gbc.sp());
        EXPECT(0x8953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8884));
        EXPECT(0xcb, gbc.readMem(0x8951));
        EXPECT(0x7e, gbc.readMem(0x8952));
        // CB 7E 0355
        gbc.setState(0xb071, 0x5815, 0x63a0, 0x2cc2, 0x9b71, 0x92ca, 0x1, 0x1);
        gbc.writeMem(0x92ca, { 0x2e });
        gbc.writeMem(0xb071, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5815, gbc.sp());
        EXPECT(0xb073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x92ca));
        EXPECT(0xcb, gbc.readMem(0xb071));
        EXPECT(0x7e, gbc.readMem(0xb072));
        // CB 7E 0356
        gbc.setState(0xde8, 0x83f, 0x85d0, 0xfe10, 0x3a12, 0xbcee, 0x0, 0x0);
        gbc.writeMem(0xde8, { 0xcb, 0x7e });
        gbc.writeMem(0xbcee, { 0xa1 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x83f, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xbcee));
        // CB 7E 0357
        gbc.setState(0x8628, 0xbf6c, 0x270, 0x4323, 0x1835, 0xc4c, 0x1, 0x1);
        gbc.writeMem(0xc4c, { 0x2a });
        gbc.writeMem(0x8628, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbf6c, gbc.sp());
        EXPECT(0x862a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8628));
        EXPECT(0x7e, gbc.readMem(0x8629));
        // CB 7E 0358
        gbc.setState(0xace, 0xe88f, 0xb5a0, 0xee36, 0x66b5, 0xa135, 0x1, 0x0);
        gbc.writeMem(0xace, { 0xcb, 0x7e });
        gbc.writeMem(0xa135, { 0x9c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe88f, gbc.sp());
        EXPECT(0xad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xa135));
        // CB 7E 0359
        gbc.setState(0x2872, 0xaa4a, 0x2860, 0x4561, 0x836c, 0x9a1a, 0x1, 0x0);
        gbc.writeMem(0x2872, { 0xcb, 0x7e });
        gbc.writeMem(0x9a1a, { 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a1a));
        // CB 7E 035B
        gbc.setState(0x1a95, 0x9c24, 0xc560, 0xc4e, 0x5df3, 0xda50, 0x1, 0x1);
        gbc.writeMem(0x1a95, { 0xcb, 0x7e });
        gbc.writeMem(0xda50, { 0x92 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0x1a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xda50));
        // CB 7E 035C
        gbc.setState(0x2d34, 0x77f, 0xaf70, 0x194c, 0xcc47, 0x3b1c, 0x0, 0x0);
        gbc.writeMem(0x2d34, { 0xcb, 0x7e });
        gbc.writeMem(0x3b1c, { 0x99 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x77f, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 035D
        gbc.setState(0x5aa, 0x843, 0xb2a0, 0xc18b, 0x497e, 0xec2a, 0x1, 0x0);
        gbc.writeMem(0x5aa, { 0xcb, 0x7e });
        gbc.writeMem(0xec2a, { 0x14 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x843, gbc.sp());
        EXPECT(0x5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xec2a));
        // CB 7E 035F
        gbc.setState(0x2dc6, 0x7be1, 0x76f0, 0x9e0c, 0x147e, 0x88b3, 0x1, 0x0);
        gbc.writeMem(0x2dc6, { 0xcb, 0x7e });
        gbc.writeMem(0x88b3, { 0x73 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7be1, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x88b3));
        // CB 7E 0360
        gbc.setState(0xdae4, 0x327f, 0x770, 0xbdf3, 0x2b5b, 0xaa79, 0x0, 0x0);
        gbc.writeMem(0xaa79, { 0xf1 });
        gbc.writeMem(0xdae4, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x327f, gbc.sp());
        EXPECT(0xdae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xaa79));
        EXPECT(0xcb, gbc.readMem(0xdae4));
        EXPECT(0x7e, gbc.readMem(0xdae5));
        // CB 7E 0361
        gbc.setState(0x7d3f, 0xc7c4, 0x7790, 0x4f5b, 0x890d, 0x1c12, 0x0, 0x0);
        gbc.writeMem(0x1c12, { 0xc7 });
        gbc.writeMem(0x7d3f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc7c4, gbc.sp());
        EXPECT(0x7d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0362
        gbc.setState(0x4767, 0x8dbf, 0x3740, 0xb2ad, 0x8d05, 0x2cb7, 0x0, 0x1);
        gbc.writeMem(0x2cb7, { 0x9f });
        gbc.writeMem(0x4767, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8dbf, gbc.sp());
        EXPECT(0x4769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0363
        gbc.setState(0x6a48, 0x4abb, 0x50b0, 0x1b55, 0xbccb, 0x6f94, 0x0, 0x1);
        gbc.writeMem(0x6a48, { 0xcb, 0x7e });
        gbc.writeMem(0x6f94, { 0x67 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4abb, gbc.sp());
        EXPECT(0x6a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0364
        gbc.setState(0xaa89, 0x8f76, 0x4aa0, 0x16ff, 0xffb6, 0x38ed, 0x0, 0x0);
        gbc.writeMem(0x38ed, { 0x5c });
        gbc.writeMem(0xaa89, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8f76, gbc.sp());
        EXPECT(0xaa8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa89));
        EXPECT(0x7e, gbc.readMem(0xaa8a));
        // CB 7E 0365
        gbc.setState(0x2838, 0x2a64, 0x6d20, 0x1d93, 0xc518, 0x26a8, 0x0, 0x1);
        gbc.writeMem(0x26a8, { 0x73 });
        gbc.writeMem(0x2838, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2a64, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0366
        gbc.setState(0x356a, 0xda55, 0xb540, 0xc789, 0xa994, 0x7aeb, 0x1, 0x0);
        gbc.writeMem(0x356a, { 0xcb, 0x7e });
        gbc.writeMem(0x7aeb, { 0x6e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xda55, gbc.sp());
        EXPECT(0x356c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0367
        gbc.setState(0xcb9, 0x91fd, 0x10b0, 0xed00, 0xfc8f, 0xad60, 0x0, 0x1);
        gbc.writeMem(0xcb9, { 0xcb, 0x7e });
        gbc.writeMem(0xad60, { 0x5d });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x91fd, gbc.sp());
        EXPECT(0xcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xad60));
        // CB 7E 0368
        gbc.setState(0xe000, 0xfa47, 0x6a40, 0xa595, 0xd9b6, 0x5123, 0x0, 0x1);
        gbc.writeMem(0x5123, { 0x80 });
        gbc.writeMem(0xe000, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfa47, gbc.sp());
        EXPECT(0xe002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe000));
        EXPECT(0x7e, gbc.readMem(0xe001));
        // CB 7E 0369
        gbc.setState(0xeaba, 0x5a47, 0x8c30, 0xc4b4, 0x147e, 0x107c, 0x0, 0x0);
        gbc.writeMem(0x107c, { 0xc8 });
        gbc.writeMem(0xeaba, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5a47, gbc.sp());
        EXPECT(0xeabc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaba));
        EXPECT(0x7e, gbc.readMem(0xeabb));
        // CB 7E 036A
        gbc.setState(0x3a9f, 0x6a4c, 0x630, 0xd237, 0xf338, 0xcef7, 0x0, 0x0);
        gbc.writeMem(0x3a9f, { 0xcb, 0x7e });
        gbc.writeMem(0xcef7, { 0x7d });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0x3aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xcef7));
        // CB 7E 036B
        gbc.setState(0xdd61, 0x6337, 0x5120, 0x74dc, 0xb869, 0x1de5, 0x0, 0x0);
        gbc.writeMem(0x1de5, { 0x98 });
        gbc.writeMem(0xdd61, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6337, gbc.sp());
        EXPECT(0xdd63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd61));
        EXPECT(0x7e, gbc.readMem(0xdd62));
        // CB 7E 036C
        gbc.setState(0x41b7, 0x72d5, 0x4150, 0x6915, 0xd3c5, 0x7133, 0x0, 0x1);
        gbc.writeMem(0x41b7, { 0xcb, 0x7e });
        gbc.writeMem(0x7133, { 0xbf });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0x41b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 036D
        gbc.setState(0xa47a, 0x6e77, 0x9d10, 0xd00d, 0xef0a, 0xecaf, 0x1, 0x0);
        gbc.writeMem(0xa47a, { 0xcb, 0x7e });
        gbc.writeMem(0xecaf, { 0x98 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6e77, gbc.sp());
        EXPECT(0xa47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47a));
        EXPECT(0x7e, gbc.readMem(0xa47b));
        EXPECT(0x98, gbc.readMem(0xecaf));
        // CB 7E 036E
        gbc.setState(0x7fe1, 0x83ff, 0xcd30, 0x3e26, 0xa3c1, 0x6282, 0x0, 0x1);
        gbc.writeMem(0x6282, { 0x6d });
        gbc.writeMem(0x7fe1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x7fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 036F
        gbc.setState(0x39da, 0x3283, 0x5510, 0xfe9f, 0xdda, 0x43aa, 0x0, 0x0);
        gbc.writeMem(0x39da, { 0xcb, 0x7e });
        gbc.writeMem(0x43aa, { 0xcd });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0x39dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0370
        gbc.setState(0x90fa, 0x10fb, 0x97d0, 0xa4c5, 0x85d0, 0xa315, 0x0, 0x1);
        gbc.writeMem(0x90fa, { 0xcb, 0x7e });
        gbc.writeMem(0xa315, { 0xb0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x90fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fa));
        EXPECT(0x7e, gbc.readMem(0x90fb));
        EXPECT(0xb0, gbc.readMem(0xa315));
        // CB 7E 0371
        gbc.setState(0x684c, 0x120d, 0xab60, 0x1d35, 0xfa56, 0x76d1, 0x1, 0x0);
        gbc.writeMem(0x684c, { 0xcb, 0x7e });
        gbc.writeMem(0x76d1, { 0x20 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0372
        gbc.setState(0xdca, 0x4b0e, 0x1320, 0xc470, 0x1d44, 0x7577, 0x1, 0x1);
        gbc.writeMem(0xdca, { 0xcb, 0x7e });
        gbc.writeMem(0x7577, { 0xb5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4b0e, gbc.sp());
        EXPECT(0xdcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0373
        gbc.setState(0x8646, 0x5614, 0xa30, 0xe437, 0xf680, 0xd78d, 0x1, 0x0);
        gbc.writeMem(0x8646, { 0xcb, 0x7e });
        gbc.writeMem(0xd78d, { 0x63 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5614, gbc.sp());
        EXPECT(0x8648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8646));
        EXPECT(0x7e, gbc.readMem(0x8647));
        EXPECT(0x63, gbc.readMem(0xd78d));
        // CB 7E 0374
        gbc.setState(0x2fd7, 0x5c2b, 0x1d70, 0xa90, 0x4f50, 0xe781, 0x1, 0x1);
        gbc.writeMem(0x2fd7, { 0xcb, 0x7e });
        gbc.writeMem(0xe781, { 0x41 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5c2b, gbc.sp());
        EXPECT(0x2fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xe781));
        // CB 7E 0375
        gbc.setState(0x30b, 0x770d, 0x55a0, 0x17ec, 0xcf5c, 0x2e5d, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0xcb, 0x7e });
        gbc.writeMem(0x2e5d, { 0xf3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0x30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0376
        gbc.setState(0x47b4, 0x4376, 0x9610, 0x47eb, 0x64cc, 0x7646, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0xcb, 0x7e });
        gbc.writeMem(0x7646, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4376, gbc.sp());
        EXPECT(0x47b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0377
        gbc.setState(0xdf55, 0x616d, 0xaf20, 0xe8c7, 0xc682, 0x3acb, 0x1, 0x1);
        gbc.writeMem(0x3acb, { 0x1b });
        gbc.writeMem(0xdf55, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x616d, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf55));
        EXPECT(0x7e, gbc.readMem(0xdf56));
        // CB 7E 0378
        gbc.setState(0x86c, 0x2953, 0x3ac0, 0x74fd, 0x87b7, 0xb9a5, 0x0, 0x0);
        gbc.writeMem(0x86c, { 0xcb, 0x7e });
        gbc.writeMem(0xb9a5, { 0x2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2953, gbc.sp());
        EXPECT(0x86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xb9a5));
        // CB 7E 0379
        gbc.setState(0x7067, 0xd30c, 0x2d20, 0xb5e9, 0x4e36, 0x901b, 0x0, 0x0);
        gbc.writeMem(0x7067, { 0xcb, 0x7e });
        gbc.writeMem(0x901b, { 0xe8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd30c, gbc.sp());
        EXPECT(0x7069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x901b));
        // CB 7E 037A
        gbc.setState(0x9541, 0xaa41, 0x4da0, 0x549b, 0x819, 0x5072, 0x1, 0x0);
        gbc.writeMem(0x5072, { 0x95 });
        gbc.writeMem(0x9541, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0x9543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9541));
        EXPECT(0x7e, gbc.readMem(0x9542));
        // CB 7E 037B
        gbc.setState(0xd8f2, 0x814, 0xe7d0, 0xcf25, 0x7601, 0xa742, 0x0, 0x1);
        gbc.writeMem(0xa742, { 0xf7 });
        gbc.writeMem(0xd8f2, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0xd8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa742));
        EXPECT(0xcb, gbc.readMem(0xd8f2));
        EXPECT(0x7e, gbc.readMem(0xd8f3));
        // CB 7E 037C
        gbc.setState(0xab5f, 0x16ee, 0x1da0, 0x840b, 0xf642, 0xf2ef, 0x1, 0x0);
        gbc.writeMem(0xab5f, { 0xcb, 0x7e });
        gbc.writeMem(0xf2ef, { 0x28 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0xab61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5f));
        EXPECT(0x7e, gbc.readMem(0xab60));
        EXPECT(0x28, gbc.readMem(0xf2ef));
        // CB 7E 037D
        gbc.setState(0xc2db, 0xeb6f, 0x2010, 0xf171, 0xc1a6, 0xc69f, 0x0, 0x1);
        gbc.writeMem(0xc2db, { 0xcb, 0x7e });
        gbc.writeMem(0xc69f, { 0x1d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xeb6f, gbc.sp());
        EXPECT(0xc2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2db));
        EXPECT(0x7e, gbc.readMem(0xc2dc));
        EXPECT(0x1d, gbc.readMem(0xc69f));
        // CB 7E 037E
        gbc.setState(0x29e6, 0xc74b, 0xd740, 0xa44c, 0xf983, 0xf66c, 0x1, 0x1);
        gbc.writeMem(0x29e6, { 0xcb, 0x7e });
        gbc.writeMem(0xf66c, { 0xdf });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc74b, gbc.sp());
        EXPECT(0x29e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xf66c));
        // CB 7E 0380
        gbc.setState(0x1ae6, 0xdab8, 0xa850, 0x7a29, 0x733a, 0xaf2f, 0x0, 0x1);
        gbc.writeMem(0x1ae6, { 0xcb, 0x7e });
        gbc.writeMem(0xaf2f, { 0xdf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdab8, gbc.sp());
        EXPECT(0x1ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xaf2f));
        // CB 7E 0381
        gbc.setState(0xa8e5, 0x998a, 0xa20, 0x85e8, 0x213b, 0xe1e5, 0x0, 0x0);
        gbc.writeMem(0xa8e5, { 0xcb, 0x7e });
        gbc.writeMem(0xe1e5, { 0xfd });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x998a, gbc.sp());
        EXPECT(0xa8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e5));
        EXPECT(0x7e, gbc.readMem(0xa8e6));
        EXPECT(0xfd, gbc.readMem(0xe1e5));
        // CB 7E 0382
        gbc.setState(0xe4f8, 0x36b4, 0x3140, 0xd311, 0xd72b, 0x331a, 0x1, 0x0);
        gbc.writeMem(0x331a, { 0xba });
        gbc.writeMem(0xe4f8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x36b4, gbc.sp());
        EXPECT(0xe4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f8));
        EXPECT(0x7e, gbc.readMem(0xe4f9));
        // CB 7E 0383
        gbc.setState(0x5df6, 0xd7fd, 0x4ad0, 0xc83, 0xcac0, 0x47dd, 0x1, 0x1);
        gbc.writeMem(0x47dd, { 0xbd });
        gbc.writeMem(0x5df6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd7fd, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0384
        gbc.setState(0x2553, 0xe1f6, 0x9f60, 0x39c2, 0x739f, 0x5c48, 0x0, 0x1);
        gbc.writeMem(0x2553, { 0xcb, 0x7e });
        gbc.writeMem(0x5c48, { 0xf3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe1f6, gbc.sp());
        EXPECT(0x2555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0385
        gbc.setState(0x5694, 0x256, 0x2170, 0xf4cc, 0xd15b, 0x3a06, 0x1, 0x0);
        gbc.writeMem(0x3a06, { 0x3f });
        gbc.writeMem(0x5694, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x256, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0386
        gbc.setState(0xee19, 0x14cd, 0x52b0, 0x9a32, 0x7f77, 0xcbc6, 0x0, 0x1);
        gbc.writeMem(0xcbc6, { 0x3 });
        gbc.writeMem(0xee19, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x14cd, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xcbc6));
        EXPECT(0xcb, gbc.readMem(0xee19));
        EXPECT(0x7e, gbc.readMem(0xee1a));
        // CB 7E 0387
        gbc.setState(0x6ebc, 0x8676, 0xc900, 0x735b, 0xf769, 0x2a2d, 0x0, 0x0);
        gbc.writeMem(0x2a2d, { 0x2d });
        gbc.writeMem(0x6ebc, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8676, gbc.sp());
        EXPECT(0x6ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0388
        gbc.setState(0x4b4b, 0x2289, 0xd2f0, 0xc66f, 0x4cb, 0xc90e, 0x1, 0x1);
        gbc.writeMem(0x4b4b, { 0xcb, 0x7e });
        gbc.writeMem(0xc90e, { 0x13 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2289, gbc.sp());
        EXPECT(0x4b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc90e));
        // CB 7E 038A
        gbc.setState(0xdcec, 0xfccd, 0xaf10, 0xc261, 0xa8ac, 0x7645, 0x0, 0x1);
        gbc.writeMem(0x7645, { 0x5a });
        gbc.writeMem(0xdcec, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0xdcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcec));
        EXPECT(0x7e, gbc.readMem(0xdced));
        // CB 7E 038B
        gbc.setState(0x1322, 0x7120, 0xb9d0, 0xa376, 0x2990, 0x9ce5, 0x0, 0x1);
        gbc.writeMem(0x1322, { 0xcb, 0x7e });
        gbc.writeMem(0x9ce5, { 0x90 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x1324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x9ce5));
        // CB 7E 038C
        gbc.setState(0x179a, 0xb215, 0x47d0, 0xf0cf, 0xd78d, 0x74b, 0x0, 0x1);
        gbc.writeMem(0x74b, { 0xbd });
        gbc.writeMem(0x179a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb215, gbc.sp());
        EXPECT(0x179c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 038D
        gbc.setState(0x256c, 0x2b1a, 0xd2b0, 0xa03b, 0xe414, 0x230d, 0x1, 0x1);
        gbc.writeMem(0x230d, { 0xe3 });
        gbc.writeMem(0x256c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2b1a, gbc.sp());
        EXPECT(0x256e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 038E
        gbc.setState(0x894d, 0xd3c0, 0x3020, 0xba4d, 0xa68f, 0x6647, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0xa6 });
        gbc.writeMem(0x894d, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd3c0, gbc.sp());
        EXPECT(0x894f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894d));
        EXPECT(0x7e, gbc.readMem(0x894e));
        // CB 7E 038F
        gbc.setState(0x6a59, 0x643d, 0x2060, 0x235c, 0xcd51, 0x25bf, 0x1, 0x0);
        gbc.writeMem(0x25bf, { 0xa3 });
        gbc.writeMem(0x6a59, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0x6a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0390
        gbc.setState(0x32bc, 0x5f5a, 0xca30, 0x5cf7, 0xb7ab, 0x1307, 0x1, 0x0);
        gbc.writeMem(0x1307, { 0xe5 });
        gbc.writeMem(0x32bc, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5f5a, gbc.sp());
        EXPECT(0x32be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 0391
        gbc.setState(0x4ff5, 0xecfa, 0x9860, 0xeb07, 0x3a77, 0x19f2, 0x1, 0x1);
        gbc.writeMem(0x19f2, { 0xbc });
        gbc.writeMem(0x4ff5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xecfa, gbc.sp());
        EXPECT(0x4ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 0392
        gbc.setState(0x4a29, 0x5a, 0x6db0, 0xbee1, 0x7083, 0xc5c5, 0x0, 0x1);
        gbc.writeMem(0x4a29, { 0xcb, 0x7e });
        gbc.writeMem(0xc5c5, { 0x26 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5a, gbc.sp());
        EXPECT(0x4a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xc5c5));
        // CB 7E 0393
        gbc.setState(0xafa8, 0x69c, 0x5620, 0xd34a, 0xe9b7, 0x7c31, 0x1, 0x0);
        gbc.writeMem(0x7c31, { 0x71 });
        gbc.writeMem(0xafa8, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x69c, gbc.sp());
        EXPECT(0xafaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa8));
        EXPECT(0x7e, gbc.readMem(0xafa9));
        // CB 7E 0394
        gbc.setState(0xac5a, 0xfdb5, 0xb1f0, 0x6cf2, 0xc8b6, 0xbfc6, 0x1, 0x0);
        gbc.writeMem(0xac5a, { 0xcb, 0x7e });
        gbc.writeMem(0xbfc6, { 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfdb5, gbc.sp());
        EXPECT(0xac5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5a));
        EXPECT(0x7e, gbc.readMem(0xac5b));
        EXPECT(0xac, gbc.readMem(0xbfc6));
        // CB 7E 0395
        gbc.setState(0x63d9, 0x8495, 0xaf50, 0x4e05, 0x677, 0xdddd, 0x1, 0x1);
        gbc.writeMem(0x63d9, { 0xcb, 0x7e });
        gbc.writeMem(0xdddd, { 0x1d });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x63db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdddd));
        // CB 7E 0396
        gbc.setState(0xba9b, 0xbe24, 0x89a0, 0xa25f, 0xea69, 0x397a, 0x0, 0x1);
        gbc.writeMem(0x397a, { 0x4a });
        gbc.writeMem(0xba9b, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe24, gbc.sp());
        EXPECT(0xba9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9b));
        EXPECT(0x7e, gbc.readMem(0xba9c));
        // CB 7E 0397
        gbc.setState(0x3a24, 0x545c, 0xe300, 0x355a, 0xd5d7, 0xe0ce, 0x0, 0x1);
        gbc.writeMem(0x3a24, { 0xcb, 0x7e });
        gbc.writeMem(0xe0ce, { 0x7c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x545c, gbc.sp());
        EXPECT(0x3a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xe0ce));
        // CB 7E 0398
        gbc.setState(0x51ad, 0x7b9c, 0xc650, 0xd09a, 0xe20f, 0x84b6, 0x0, 0x1);
        gbc.writeMem(0x51ad, { 0xcb, 0x7e });
        gbc.writeMem(0x84b6, { 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7b9c, gbc.sp());
        EXPECT(0x51af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0x84b6));
        // CB 7E 0399
        gbc.setState(0xdf19, 0x13df, 0x8370, 0x20ff, 0x51d8, 0x4ec, 0x0, 0x0);
        gbc.writeMem(0x4ec, { 0x51 });
        gbc.writeMem(0xdf19, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x13df, gbc.sp());
        EXPECT(0xdf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf19));
        EXPECT(0x7e, gbc.readMem(0xdf1a));
        // CB 7E 039A
        gbc.setState(0xa3ee, 0x60af, 0x12f0, 0xfb37, 0x9e7c, 0x7f0, 0x1, 0x1);
        gbc.writeMem(0x7f0, { 0xd });
        gbc.writeMem(0xa3ee, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x60af, gbc.sp());
        EXPECT(0xa3f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ee));
        EXPECT(0x7e, gbc.readMem(0xa3ef));
        // CB 7E 039B
        gbc.setState(0xccde, 0x37c7, 0x9900, 0xd8a1, 0xc546, 0xce27, 0x1, 0x1);
        gbc.writeMem(0xccde, { 0xcb, 0x7e });
        gbc.writeMem(0xce27, { 0xbb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccde));
        EXPECT(0x7e, gbc.readMem(0xccdf));
        EXPECT(0xbb, gbc.readMem(0xce27));
        // CB 7E 039C
        gbc.setState(0x2283, 0xbce9, 0xe410, 0x256e, 0xdc99, 0xee8f, 0x1, 0x0);
        gbc.writeMem(0x2283, { 0xcb, 0x7e });
        gbc.writeMem(0xee8f, { 0xd0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbce9, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xee8f));
        // CB 7E 039D
        gbc.setState(0x8f71, 0xebb6, 0x1840, 0xf59a, 0x1e06, 0x5205, 0x1, 0x1);
        gbc.writeMem(0x5205, { 0xaf });
        gbc.writeMem(0x8f71, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xebb6, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0x7e, gbc.readMem(0x8f72));
        // CB 7E 039E
        gbc.setState(0x9a02, 0x56c4, 0x97f0, 0x6ec3, 0x1d9, 0x966f, 0x1, 0x1);
        gbc.writeMem(0x966f, { 0x8c });
        gbc.writeMem(0x9a02, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0x9a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x966f));
        EXPECT(0xcb, gbc.readMem(0x9a02));
        EXPECT(0x7e, gbc.readMem(0x9a03));
        // CB 7E 039F
        gbc.setState(0x5272, 0xd72d, 0xeba0, 0x8c18, 0xa108, 0x8643, 0x1, 0x0);
        gbc.writeMem(0x5272, { 0xcb, 0x7e });
        gbc.writeMem(0x8643, { 0x5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd72d, gbc.sp());
        EXPECT(0x5274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8643));
        // CB 7E 03A0
        gbc.setState(0x8bf5, 0x1949, 0x230, 0xa68, 0x8b04, 0x615b, 0x0, 0x1);
        gbc.writeMem(0x615b, { 0xf4 });
        gbc.writeMem(0x8bf5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1949, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf5));
        EXPECT(0x7e, gbc.readMem(0x8bf6));
        // CB 7E 03A1
        gbc.setState(0xd5c5, 0x3fcc, 0xac0, 0xe3ad, 0xde30, 0x7ffc, 0x1, 0x0);
        gbc.writeMem(0x7ffc, { 0xbb });
        gbc.writeMem(0xd5c5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3fcc, gbc.sp());
        EXPECT(0xd5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c5));
        EXPECT(0x7e, gbc.readMem(0xd5c6));
        // CB 7E 03A2
        gbc.setState(0x22c9, 0xa750, 0x1990, 0x18bf, 0x7238, 0x6b12, 0x1, 0x1);
        gbc.writeMem(0x22c9, { 0xcb, 0x7e });
        gbc.writeMem(0x6b12, { 0xfb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa750, gbc.sp());
        EXPECT(0x22cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 03A3
        gbc.setState(0x64a0, 0x707d, 0x26c0, 0x4fdc, 0x24c8, 0x6718, 0x0, 0x1);
        gbc.writeMem(0x64a0, { 0xcb, 0x7e });
        gbc.writeMem(0x6718, { 0xf0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x707d, gbc.sp());
        EXPECT(0x64a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 03A4
        gbc.setState(0x21bb, 0x1d56, 0x5a80, 0x4e7, 0x909f, 0x99af, 0x0, 0x0);
        gbc.writeMem(0x21bb, { 0xcb, 0x7e });
        gbc.writeMem(0x99af, { 0x15 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x99af));
        // CB 7E 03A5
        gbc.setState(0xa983, 0x7779, 0xee40, 0xc647, 0x3478, 0x7465, 0x0, 0x0);
        gbc.writeMem(0x7465, { 0xc6 });
        gbc.writeMem(0xa983, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7779, gbc.sp());
        EXPECT(0xa985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa983));
        EXPECT(0x7e, gbc.readMem(0xa984));
        // CB 7E 03A6
        gbc.setState(0x361a, 0x1d2b, 0xcf70, 0x7b5a, 0x928e, 0xcd90, 0x1, 0x1);
        gbc.writeMem(0x361a, { 0xcb, 0x7e });
        gbc.writeMem(0xcd90, { 0x9e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1d2b, gbc.sp());
        EXPECT(0x361c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcd90));
        // CB 7E 03A7
        gbc.setState(0x2d6a, 0x2be3, 0xf410, 0x533, 0x2dd9, 0xf720, 0x0, 0x1);
        gbc.writeMem(0x2d6a, { 0xcb, 0x7e });
        gbc.writeMem(0xf720, { 0x9a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2be3, gbc.sp());
        EXPECT(0x2d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf720));
        // CB 7E 03A8
        gbc.setState(0x27c4, 0x9cea, 0x8c20, 0x37c1, 0x259b, 0x6ca4, 0x1, 0x0);
        gbc.writeMem(0x27c4, { 0xcb, 0x7e });
        gbc.writeMem(0x6ca4, { 0x4a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9cea, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 03A9
        gbc.setState(0x4fd7, 0xf48a, 0x6570, 0x4c8e, 0xe5e6, 0x9c0d, 0x1, 0x1);
        gbc.writeMem(0x4fd7, { 0xcb, 0x7e });
        gbc.writeMem(0x9c0d, { 0xc9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf48a, gbc.sp());
        EXPECT(0x4fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9c0d));
        // CB 7E 03AA
        gbc.setState(0x8a7, 0x7f5d, 0x9320, 0x66ed, 0xa491, 0xc4ce, 0x0, 0x0);
        gbc.writeMem(0x8a7, { 0xcb, 0x7e });
        gbc.writeMem(0xc4ce, { 0xed });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7f5d, gbc.sp());
        EXPECT(0x8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xc4ce));
        // CB 7E 03AC
        gbc.setState(0x8598, 0x409e, 0x2160, 0xed97, 0x70d1, 0xeac9, 0x0, 0x1);
        gbc.writeMem(0x8598, { 0xcb, 0x7e });
        gbc.writeMem(0xeac9, { 0x4c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x409e, gbc.sp());
        EXPECT(0x859a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8598));
        EXPECT(0x7e, gbc.readMem(0x8599));
        EXPECT(0x4c, gbc.readMem(0xeac9));
        // CB 7E 03AD
        gbc.setState(0x1881, 0x26dd, 0xab60, 0x5e5, 0x5157, 0x8e9c, 0x0, 0x1);
        gbc.writeMem(0x1881, { 0xcb, 0x7e });
        gbc.writeMem(0x8e9c, { 0x31 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0x1883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e9c));
        // CB 7E 03AE
        gbc.setState(0x46da, 0xdebf, 0x9920, 0x986c, 0xdb87, 0xc361, 0x1, 0x1);
        gbc.writeMem(0x46da, { 0xcb, 0x7e });
        gbc.writeMem(0xc361, { 0x47 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdebf, gbc.sp());
        EXPECT(0x46dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc361));
        // CB 7E 03AF
        gbc.setState(0xb887, 0x846, 0x90a0, 0x740e, 0x1bc3, 0x40f8, 0x1, 0x1);
        gbc.writeMem(0x40f8, { 0x6a });
        gbc.writeMem(0xb887, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0xb889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb887));
        EXPECT(0x7e, gbc.readMem(0xb888));
        // CB 7E 03B1
        gbc.setState(0xe14c, 0x4d78, 0x5190, 0xb0cb, 0xe23f, 0x2213, 0x1, 0x0);
        gbc.writeMem(0x2213, { 0x92 });
        gbc.writeMem(0xe14c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4d78, gbc.sp());
        EXPECT(0xe14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14c));
        EXPECT(0x7e, gbc.readMem(0xe14d));
        // CB 7E 03B2
        gbc.setState(0x7259, 0xd76c, 0xcaa0, 0x1561, 0xb446, 0x22e6, 0x1, 0x1);
        gbc.writeMem(0x22e6, { 0x40 });
        gbc.writeMem(0x7259, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd76c, gbc.sp());
        EXPECT(0x725b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 03B3
        gbc.setState(0xb131, 0x139a, 0x6f50, 0x965f, 0x1de, 0xce57, 0x1, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0x7e });
        gbc.writeMem(0xce57, { 0xcd });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x139a, gbc.sp());
        EXPECT(0xb133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb131));
        EXPECT(0x7e, gbc.readMem(0xb132));
        EXPECT(0xcd, gbc.readMem(0xce57));
        // CB 7E 03B4
        gbc.setState(0xd976, 0xe9df, 0xf230, 0x5e4e, 0x43f8, 0x1f08, 0x1, 0x1);
        gbc.writeMem(0x1f08, { 0x9b });
        gbc.writeMem(0xd976, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0xd978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd976));
        EXPECT(0x7e, gbc.readMem(0xd977));
        // CB 7E 03B5
        gbc.setState(0x8712, 0x7c62, 0xb4c0, 0x9f44, 0x6c85, 0x920b, 0x1, 0x0);
        gbc.writeMem(0x8712, { 0xcb, 0x7e });
        gbc.writeMem(0x920b, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x8714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8712));
        EXPECT(0x7e, gbc.readMem(0x8713));
        EXPECT(0xb4, gbc.readMem(0x920b));
        // CB 7E 03B6
        gbc.setState(0x984, 0x7e3, 0xcbf0, 0x8b74, 0xdc97, 0xdec2, 0x1, 0x1);
        gbc.writeMem(0x984, { 0xcb, 0x7e });
        gbc.writeMem(0xdec2, { 0x59 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7e3, gbc.sp());
        EXPECT(0x986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xdec2));
        // CB 7E 03B7
        gbc.setState(0xae66, 0xe7d8, 0x8d20, 0x84d2, 0x251c, 0xb585, 0x1, 0x0);
        gbc.writeMem(0xae66, { 0xcb, 0x7e });
        gbc.writeMem(0xb585, { 0x56 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe7d8, gbc.sp());
        EXPECT(0xae68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae66));
        EXPECT(0x7e, gbc.readMem(0xae67));
        EXPECT(0x56, gbc.readMem(0xb585));
        // CB 7E 03B8
        gbc.setState(0xad36, 0x34c4, 0x8d90, 0x703d, 0xbe00, 0xf5fe, 0x1, 0x0);
        gbc.writeMem(0xad36, { 0xcb, 0x7e });
        gbc.writeMem(0xf5fe, { 0x56 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x34c4, gbc.sp());
        EXPECT(0xad38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad36));
        EXPECT(0x7e, gbc.readMem(0xad37));
        EXPECT(0x56, gbc.readMem(0xf5fe));
        // CB 7E 03BA
        gbc.setState(0xdca6, 0x73c8, 0x7c20, 0x7e0a, 0x2cba, 0x4e48, 0x0, 0x1);
        gbc.writeMem(0x4e48, { 0xa1 });
        gbc.writeMem(0xdca6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x73c8, gbc.sp());
        EXPECT(0xdca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca6));
        EXPECT(0x7e, gbc.readMem(0xdca7));
        // CB 7E 03BB
        gbc.setState(0x9e48, 0xbf40, 0xe990, 0x816b, 0x96f8, 0x625e, 0x1, 0x1);
        gbc.writeMem(0x625e, { 0x4c });
        gbc.writeMem(0x9e48, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbf40, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e48));
        EXPECT(0x7e, gbc.readMem(0x9e49));
        // CB 7E 03BC
        gbc.setState(0x284e, 0xf3d0, 0x72d0, 0x9cb7, 0xe0c2, 0xdd7b, 0x0, 0x0);
        gbc.writeMem(0x284e, { 0xcb, 0x7e });
        gbc.writeMem(0xdd7b, { 0x8d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf3d0, gbc.sp());
        EXPECT(0x2850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xdd7b));
        // CB 7E 03BD
        gbc.setState(0x40d7, 0xa9cd, 0xee90, 0xe582, 0xec75, 0xdd29, 0x1, 0x1);
        gbc.writeMem(0x40d7, { 0xcb, 0x7e });
        gbc.writeMem(0xdd29, { 0xc7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa9cd, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xdd29));
        // CB 7E 03BE
        gbc.setState(0x59cf, 0x3a78, 0x3970, 0xa4c8, 0x71c1, 0x67e8, 0x0, 0x0);
        gbc.writeMem(0x59cf, { 0xcb, 0x7e });
        gbc.writeMem(0x67e8, { 0xd3 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3a78, gbc.sp());
        EXPECT(0x59d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 03C0
        gbc.setState(0xcc7f, 0x1832, 0x5840, 0x5c00, 0xd6c4, 0x5229, 0x0, 0x0);
        gbc.writeMem(0x5229, { 0x43 });
        gbc.writeMem(0xcc7f, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0xcc81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7f));
        EXPECT(0x7e, gbc.readMem(0xcc80));
        // CB 7E 03C1
        gbc.setState(0x35cf, 0xe725, 0x67b0, 0x451, 0x4480, 0xbabd, 0x0, 0x1);
        gbc.writeMem(0x35cf, { 0xcb, 0x7e });
        gbc.writeMem(0xbabd, { 0xa4 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe725, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xbabd));
        // CB 7E 03C2
        gbc.setState(0x3470, 0x445d, 0x5220, 0x5ae6, 0x4c66, 0xe7f6, 0x1, 0x0);
        gbc.writeMem(0x3470, { 0xcb, 0x7e });
        gbc.writeMem(0xe7f6, { 0x9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x445d, gbc.sp());
        EXPECT(0x3472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe7f6));
        // CB 7E 03C3
        gbc.setState(0xe30c, 0x27f, 0xaa0, 0xfcb6, 0xfff2, 0xe2fe, 0x0, 0x1);
        gbc.writeMem(0xe2fe, { 0x92 });
        gbc.writeMem(0xe30c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x27f, gbc.sp());
        EXPECT(0xe30e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xe2fe));
        EXPECT(0xcb, gbc.readMem(0xe30c));
        EXPECT(0x7e, gbc.readMem(0xe30d));
        // CB 7E 03C4
        gbc.setState(0x3e8, 0x51e8, 0xe470, 0x21b5, 0x9a3f, 0x7d61, 0x0, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x7e });
        gbc.writeMem(0x7d61, { 0xb3 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x51e8, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 03C5
        gbc.setState(0xb226, 0x1afc, 0x2c60, 0xd638, 0xe518, 0x4f5, 0x1, 0x0);
        gbc.writeMem(0x4f5, { 0xd8 });
        gbc.writeMem(0xb226, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0xb228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb226));
        EXPECT(0x7e, gbc.readMem(0xb227));
        // CB 7E 03C6
        gbc.setState(0x268a, 0x1af0, 0x7150, 0x94f8, 0xa50, 0xca1e, 0x0, 0x1);
        gbc.writeMem(0x268a, { 0xcb, 0x7e });
        gbc.writeMem(0xca1e, { 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1af0, gbc.sp());
        EXPECT(0x268c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xca1e));
        // CB 7E 03C7
        gbc.setState(0x6923, 0x9158, 0x93e0, 0xa134, 0xcd9f, 0xdfdc, 0x1, 0x0);
        gbc.writeMem(0x6923, { 0xcb, 0x7e });
        gbc.writeMem(0xdfdc, { 0xbd });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9158, gbc.sp());
        EXPECT(0x6925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xdfdc));
        // CB 7E 03C8
        gbc.setState(0x2dee, 0x9b2d, 0x1f10, 0x9f9, 0xa016, 0x45ab, 0x0, 0x1);
        gbc.writeMem(0x2dee, { 0xcb, 0x7e });
        gbc.writeMem(0x45ab, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9b2d, gbc.sp());
        EXPECT(0x2df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 03C9
        gbc.setState(0xbef, 0xc4cc, 0x8ec0, 0x7b61, 0xb7ac, 0x796a, 0x1, 0x0);
        gbc.writeMem(0xbef, { 0xcb, 0x7e });
        gbc.writeMem(0x796a, { 0x4a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc4cc, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 03CA
        gbc.setState(0xd1a0, 0x244a, 0x5890, 0x7baa, 0xc6e8, 0xd524, 0x0, 0x1);
        gbc.writeMem(0xd1a0, { 0xcb, 0x7e });
        gbc.writeMem(0xd524, { 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0xd1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a0));
        EXPECT(0x7e, gbc.readMem(0xd1a1));
        EXPECT(0x2, gbc.readMem(0xd524));
        // CB 7E 03CB
        gbc.setState(0x1da4, 0x75e4, 0x8290, 0xaee0, 0x7c68, 0x8ddf, 0x0, 0x1);
        gbc.writeMem(0x1da4, { 0xcb, 0x7e });
        gbc.writeMem(0x8ddf, { 0x5 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x75e4, gbc.sp());
        EXPECT(0x1da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8ddf));
        // CB 7E 03CC
        gbc.setState(0xda7a, 0x2957, 0x5240, 0x82f5, 0xfc96, 0x3074, 0x1, 0x1);
        gbc.writeMem(0x3074, { 0x54 });
        gbc.writeMem(0xda7a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7a));
        EXPECT(0x7e, gbc.readMem(0xda7b));
        // CB 7E 03CD
        gbc.setState(0x2a32, 0xfd04, 0x2610, 0x333b, 0x8d9f, 0x171, 0x1, 0x0);
        gbc.writeMem(0x171, { 0xc1 });
        gbc.writeMem(0x2a32, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfd04, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 03CE
        gbc.setState(0xa89c, 0xfdf5, 0xc900, 0x9e8e, 0xef4b, 0x2d02, 0x1, 0x0);
        gbc.writeMem(0x2d02, { 0xb2 });
        gbc.writeMem(0xa89c, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xfdf5, gbc.sp());
        EXPECT(0xa89e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa89c));
        EXPECT(0x7e, gbc.readMem(0xa89d));
        // CB 7E 03CF
        gbc.setState(0xc0f5, 0xef6d, 0x8620, 0x6176, 0xaea0, 0x59ad, 0x1, 0x1);
        gbc.writeMem(0x59ad, { 0xee });
        gbc.writeMem(0xc0f5, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xef6d, gbc.sp());
        EXPECT(0xc0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f5));
        EXPECT(0x7e, gbc.readMem(0xc0f6));
        // CB 7E 03D0
        gbc.setState(0x71ef, 0x967c, 0x30e0, 0x2abe, 0x71de, 0xd566, 0x0, 0x1);
        gbc.writeMem(0x71ef, { 0xcb, 0x7e });
        gbc.writeMem(0xd566, { 0x47 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0x71f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd566));
        // CB 7E 03D1
        gbc.setState(0x2af, 0x5387, 0x58e0, 0x6333, 0xae8f, 0x8a67, 0x0, 0x1);
        gbc.writeMem(0x2af, { 0xcb, 0x7e });
        gbc.writeMem(0x8a67, { 0x36 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5387, gbc.sp());
        EXPECT(0x2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x8a67));
        // CB 7E 03D2
        gbc.setState(0x63af, 0xd3d5, 0xbbb0, 0x6058, 0x2d55, 0x6452, 0x0, 0x1);
        gbc.writeMem(0x63af, { 0xcb, 0x7e });
        gbc.writeMem(0x6452, { 0xd3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd3d5, gbc.sp());
        EXPECT(0x63b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 7E 03D3
        gbc.setState(0x1dfa, 0x9bfc, 0x3040, 0x8f5b, 0x72d1, 0x51d0, 0x0, 0x1);
        gbc.writeMem(0x1dfa, { 0xcb, 0x7e });
        gbc.writeMem(0x51d0, { 0x80 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9bfc, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 7E 03D4
        gbc.setState(0xc73a, 0xae52, 0x7f0, 0x3523, 0xe199, 0x52d3, 0x0, 0x1);
        gbc.writeMem(0x52d3, { 0x82 });
        gbc.writeMem(0xc73a, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xae52, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73a));
        EXPECT(0x7e, gbc.readMem(0xc73b));
        // CB 7E 03D6
        gbc.setState(0xd8d1, 0x958b, 0xd950, 0xecb9, 0xf490, 0xb800, 0x1, 0x1);
        gbc.writeMem(0xb800, { 0xa2 });
        gbc.writeMem(0xd8d1, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x958b, gbc.sp());
        EXPECT(0xd8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb800));
        EXPECT(0xcb, gbc.readMem(0xd8d1));
        EXPECT(0x7e, gbc.readMem(0xd8d2));
        // CB 7E 03D7
        gbc.setState(0x7cfe, 0xe3a7, 0x6470, 0x468f, 0x9682, 0xff44, 0x1, 0x0);
        gbc.writeMem(0x7cfe, { 0xcb, 0x7e });
        gbc.writeMem(0xff44, { 0x93 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe3a7, gbc.sp());
        EXPECT(0x7d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xff44));
        // CB 7E 03D8
        gbc.setState(0x8d70, 0x3c06, 0x31b0, 0xf19f, 0x183a, 0x4b79, 0x0, 0x0);
        gbc.writeMem(0x4b79, { 0x8e });
        gbc.writeMem(0x8d70, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c06, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d70));
        EXPECT(0x7e, gbc.readMem(0x8d71));
        // CB 7E 03D9
        gbc.setState(0xac14, 0xedbb, 0xc9f0, 0xe01e, 0x2f31, 0x7ba0, 0x0, 0x1);
        gbc.writeMem(0x7ba0, { 0x52 });
        gbc.writeMem(0xac14, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xedbb, gbc.sp());
        EXPECT(0xac16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac14));
        EXPECT(0x7e, gbc.readMem(0xac15));
        // CB 7E 03DA
        gbc.setState(0xe631, 0x48c6, 0x7900, 0x2afb, 0x9bc3, 0x85aa, 0x1, 0x1);
        gbc.writeMem(0x85aa, { 0x92 });
        gbc.writeMem(0xe631, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x48c6, gbc.sp());
        EXPECT(0xe633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x85aa));
        EXPECT(0xcb, gbc.readMem(0xe631));
        EXPECT(0x7e, gbc.readMem(0xe632));
        // CB 7E 03DB
        gbc.setState(0xa123, 0x40e, 0x1050, 0x8afc, 0x99b0, 0x421b, 0x1, 0x0);
        gbc.writeMem(0x421b, { 0x85 });
        gbc.writeMem(0xa123, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x40e, gbc.sp());
        EXPECT(0xa125, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa123));
        EXPECT(0x7e, gbc.readMem(0xa124));
        // CB 7E 03DC
        gbc.setState(0x4ca5, 0xe08b, 0xc000, 0x7588, 0x4676, 0xaff2, 0x0, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0x7e });
        gbc.writeMem(0xaff2, { 0xcd });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe08b, gbc.sp());
        EXPECT(0x4ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xaff2));
        // CB 7E 03DD
        gbc.setState(0x9590, 0x7883, 0x8e0, 0xc9b4, 0xce88, 0xd09c, 0x0, 0x0);
        gbc.writeMem(0x9590, { 0xcb, 0x7e });
        gbc.writeMem(0xd09c, { 0xff });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7883, gbc.sp());
        EXPECT(0x9592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9590));
        EXPECT(0x7e, gbc.readMem(0x9591));
        EXPECT(0xff, gbc.readMem(0xd09c));
        // CB 7E 03DE
        gbc.setState(0x6c7b, 0x41fc, 0xbd00, 0xb874, 0xcc25, 0xb242, 0x1, 0x0);
        gbc.writeMem(0x6c7b, { 0xcb, 0x7e });
        gbc.writeMem(0xb242, { 0x63 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x41fc, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xb242));
        // CB 7E 03DF
        gbc.setState(0xa74d, 0x8995, 0xf820, 0x1a5b, 0x659b, 0xa764, 0x1, 0x1);
        gbc.writeMem(0xa74d, { 0xcb, 0x7e });
        gbc.writeMem(0xa764, { 0xf4 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8995, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa74d));
        EXPECT(0x7e, gbc.readMem(0xa74e));
        EXPECT(0xf4, gbc.readMem(0xa764));
        // CB 7E 03E0
        gbc.setState(0xb8ad, 0x87a8, 0x9940, 0xd902, 0x7d7d, 0xe0af, 0x1, 0x0);
        gbc.writeMem(0xb8ad, { 0xcb, 0x7e });
        gbc.writeMem(0xe0af, { 0x78 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x87a8, gbc.sp());
        EXPECT(0xb8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ad));
        EXPECT(0x7e, gbc.readMem(0xb8ae));
        EXPECT(0x78, gbc.readMem(0xe0af));
        // CB 7E 03E1
        gbc.setState(0xb6a9, 0x5309, 0xa430, 0x2184, 0xf6fa, 0xed51, 0x1, 0x0);
        gbc.writeMem(0xb6a9, { 0xcb, 0x7e });
        gbc.writeMem(0xed51, { 0x6c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x5309, gbc.sp());
        EXPECT(0xb6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a9));
        EXPECT(0x7e, gbc.readMem(0xb6aa));
        EXPECT(0x6c, gbc.readMem(0xed51));
        // CB 7E 03E2
        gbc.setState(0xc878, 0x74a8, 0x65e0, 0xec23, 0x1158, 0xdf5a, 0x1, 0x0);
        gbc.writeMem(0xc878, { 0xcb, 0x7e });
        gbc.writeMem(0xdf5a, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x74a8, gbc.sp());
        EXPECT(0xc87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc878));
        EXPECT(0x7e, gbc.readMem(0xc879));
        EXPECT(0x0, gbc.readMem(0xdf5a));
        // CB 7E 03E3
        gbc.setState(0xb2b6, 0x29b9, 0xf8a0, 0xc89a, 0x97c3, 0x58f7, 0x0, 0x0);
        gbc.writeMem(0x58f7, { 0x1f });
        gbc.writeMem(0xb2b6, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x29b9, gbc.sp());
        EXPECT(0xb2b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b6));
        EXPECT(0x7e, gbc.readMem(0xb2b7));
        // CB 7E 03E4
        gbc.setState(0x9284, 0xee09, 0xd880, 0x3de8, 0x476, 0x8ca4, 0x0, 0x1);
        gbc.writeMem(0x8ca4, { 0x32 });
        gbc.writeMem(0x9284, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xee09, gbc.sp());
        EXPECT(0x9286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x8ca4));
        EXPECT(0xcb, gbc.readMem(0x9284));
        EXPECT(0x7e, gbc.readMem(0x9285));
        // CB 7E 03E5
        gbc.setState(0x7a2b, 0xb3f5, 0x13b0, 0xc58e, 0x8519, 0xb87b, 0x1, 0x0);
        gbc.writeMem(0x7a2b, { 0xcb, 0x7e });
        gbc.writeMem(0xb87b, { 0x67 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb3f5, gbc.sp());
        EXPECT(0x7a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0xb87b));
        // CB 7E 03E6
        gbc.setState(0xdc97, 0x6ef3, 0x1c20, 0xde, 0x2517, 0x5569, 0x0, 0x1);
        gbc.writeMem(0x5569, { 0x97 });
        gbc.writeMem(0xdc97, { 0xcb, 0x7e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6ef3, gbc.sp());
        EXPECT(0xdc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc97));
        EXPECT(0x7e, gbc.readMem(0xdc98));
        // CB 7E 03E7
        gbc.setState(0x112, 0x1120, 0x62f0, 0xfe8d, 0xd72b, 0x8ee, 0x1, 0x1);
        gbc.writeMem(0x112, { 0xcb, 0x7e });
        gbc.writeMem(0x8ee, { 0x7e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1120, gbc.sp());
        EXPECT(0x114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
