    TEST(gbcemu, opcode_8f) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 8F 0000
        gbc.setState(0x3235, 0x2606, 0x8650, 0x2281, 0xd4f6, 0x85cf, 0x1, 0x1);
        gbc.writeMem(0x3235, { 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2606, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0001
        gbc.setState(0x95ad, 0x8ed3, 0x90d0, 0xc510, 0x5263, 0x6c6a, 0x1, 0x0);
        gbc.writeMem(0x95ad, { 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8ed3, gbc.sp());
        EXPECT(0x95ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x95ad));
        // 8F 0003
        gbc.setState(0xf99, 0x5fad, 0xcfb0, 0xd22c, 0xf46, 0xe87a, 0x1, 0x0);
        gbc.writeMem(0xf99, { 0x8f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5fad, gbc.sp());
        EXPECT(0xf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0004
        gbc.setState(0xcc0e, 0xe52a, 0x1fa0, 0xb2b9, 0xa466, 0x4781, 0x1, 0x0);
        gbc.writeMem(0xcc0e, { 0x8f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0xcc0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcc0e));
        // 8F 0005
        gbc.setState(0x44c8, 0x82cb, 0x4880, 0xaa32, 0x7574, 0x6675, 0x1, 0x0);
        gbc.writeMem(0x44c8, { 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x82cb, gbc.sp());
        EXPECT(0x44c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0006
        gbc.setState(0xef44, 0xce9, 0xc5b0, 0x4e3e, 0xcaac, 0xa3fd, 0x1, 0x0);
        gbc.writeMem(0xef44, { 0x8f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xce9, gbc.sp());
        EXPECT(0xef45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xef44));
        // 8F 0007
        gbc.setState(0x68ca, 0xf92b, 0x9790, 0x7e03, 0x13fb, 0xab3, 0x0, 0x0);
        gbc.writeMem(0x68ca, { 0x8f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf92b, gbc.sp());
        EXPECT(0x68cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0008
        gbc.setState(0x420d, 0x5063, 0x1780, 0xf6a7, 0xd53d, 0x5cc6, 0x1, 0x1);
        gbc.writeMem(0x420d, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0x420e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 000A
        gbc.setState(0x5e02, 0xaeec, 0x2360, 0x4cde, 0x7a5a, 0xe8bb, 0x0, 0x1);
        gbc.writeMem(0x5e02, { 0x8f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xaeec, gbc.sp());
        EXPECT(0x5e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 000B
        gbc.setState(0xb566, 0x45a0, 0xe670, 0x6b42, 0x22ce, 0xc75a, 0x0, 0x1);
        gbc.writeMem(0xb566, { 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x45a0, gbc.sp());
        EXPECT(0xb567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb566));
        // 8F 000C
        gbc.setState(0x2dd7, 0x190c, 0x4bf0, 0xb651, 0x981, 0x9d74, 0x0, 0x1);
        gbc.writeMem(0x2dd7, { 0x8f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x190c, gbc.sp());
        EXPECT(0x2dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 000D
        gbc.setState(0x3fab, 0x52cb, 0xd600, 0x9935, 0xbda5, 0x9e4e, 0x0, 0x0);
        gbc.writeMem(0x3fab, { 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x52cb, gbc.sp());
        EXPECT(0x3fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 000E
        gbc.setState(0xd516, 0x3bfe, 0xf7b0, 0xf06b, 0x9f85, 0x11f7, 0x1, 0x1);
        gbc.writeMem(0xd516, { 0x8f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3bfe, gbc.sp());
        EXPECT(0xd517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd516));
        // 8F 000F
        gbc.setState(0x245e, 0x40ea, 0x6a30, 0xbeeb, 0xd259, 0xcba5, 0x1, 0x0);
        gbc.writeMem(0x245e, { 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40ea, gbc.sp());
        EXPECT(0x245f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0010
        gbc.setState(0x2dc7, 0xdfcb, 0x6bc0, 0xb692, 0xfb20, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0x2dc7, { 0x8f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdfcb, gbc.sp());
        EXPECT(0x2dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0011
        gbc.setState(0xe5fb, 0xa22f, 0x4b0, 0x721d, 0xfe8b, 0x91fa, 0x1, 0x0);
        gbc.writeMem(0xe5fb, { 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0xe5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe5fb));
        // 8F 0012
        gbc.setState(0x6ea4, 0x98e6, 0x5060, 0x82b8, 0xe88f, 0x4b44, 0x1, 0x0);
        gbc.writeMem(0x6ea4, { 0x8f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x98e6, gbc.sp());
        EXPECT(0x6ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0013
        gbc.setState(0xcbf7, 0xf7c5, 0x6250, 0xab21, 0x9ccb, 0xa2d, 0x0, 0x1);
        gbc.writeMem(0xcbf7, { 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf7c5, gbc.sp());
        EXPECT(0xcbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcbf7));
        // 8F 0014
        gbc.setState(0xa629, 0xf5a3, 0x3840, 0xd653, 0x5de7, 0xf3fa, 0x1, 0x1);
        gbc.writeMem(0xa629, { 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf5a3, gbc.sp());
        EXPECT(0xa62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa629));
        // 8F 0015
        gbc.setState(0x15c8, 0xb29a, 0xe710, 0xebb6, 0xb7c5, 0xacc5, 0x1, 0x0);
        gbc.writeMem(0x15c8, { 0x8f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb29a, gbc.sp());
        EXPECT(0x15c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0016
        gbc.setState(0x691c, 0x1ef1, 0xd7b0, 0x473a, 0xab72, 0xe0bc, 0x1, 0x1);
        gbc.writeMem(0x691c, { 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1ef1, gbc.sp());
        EXPECT(0x691d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0017
        gbc.setState(0xcb78, 0x6b4d, 0x1970, 0x4166, 0x8212, 0x691d, 0x1, 0x1);
        gbc.writeMem(0xcb78, { 0x8f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6b4d, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb78));
        // 8F 0019
        gbc.setState(0xc717, 0x33e8, 0xd7b0, 0x17a3, 0x958, 0x3577, 0x1, 0x1);
        gbc.writeMem(0xc717, { 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x33e8, gbc.sp());
        EXPECT(0xc718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc717));
        // 8F 001A
        gbc.setState(0x3118, 0x891e, 0x5600, 0xfe64, 0x810d, 0xbb17, 0x0, 0x1);
        gbc.writeMem(0x3118, { 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 001B
        gbc.setState(0x89f9, 0xfec9, 0xb3e0, 0xd879, 0x9f77, 0xd7c, 0x1, 0x1);
        gbc.writeMem(0x89f9, { 0x8f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfec9, gbc.sp());
        EXPECT(0x89fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x89f9));
        // 8F 001C
        gbc.setState(0xcae7, 0x5586, 0x5f60, 0x1203, 0xbafe, 0x775c, 0x1, 0x0);
        gbc.writeMem(0xcae7, { 0x8f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5586, gbc.sp());
        EXPECT(0xcae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcae7));
        // 8F 001D
        gbc.setState(0x9d96, 0xd1a5, 0x3bc0, 0xc6a5, 0x84fc, 0xd83c, 0x0, 0x0);
        gbc.writeMem(0x9d96, { 0x8f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd1a5, gbc.sp());
        EXPECT(0x9d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9d96));
        // 8F 001E
        gbc.setState(0xb06b, 0xcdf0, 0x4bd0, 0x56c0, 0xf44e, 0x383e, 0x0, 0x1);
        gbc.writeMem(0xb06b, { 0x8f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcdf0, gbc.sp());
        EXPECT(0xb06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb06b));
        // 8F 001F
        gbc.setState(0xb307, 0xd680, 0x8030, 0xb841, 0x55fc, 0xe15c, 0x0, 0x1);
        gbc.writeMem(0xb307, { 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd680, gbc.sp());
        EXPECT(0xb308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb307));
        // 8F 0020
        gbc.setState(0xef33, 0x9cc7, 0x8c80, 0xb67b, 0xaac4, 0xb782, 0x1, 0x0);
        gbc.writeMem(0xef33, { 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9cc7, gbc.sp());
        EXPECT(0xef34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xef33));
        // 8F 0021
        gbc.setState(0xefae, 0xf2a2, 0x7f30, 0x5f31, 0x20b7, 0xbad, 0x0, 0x1);
        gbc.writeMem(0xefae, { 0x8f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0xefaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xefae));
        // 8F 0022
        gbc.setState(0x3277, 0xc567, 0xe5c0, 0x91fc, 0xd4c, 0xc9ae, 0x1, 0x0);
        gbc.writeMem(0x3277, { 0x8f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0x3278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0023
        gbc.setState(0x69c6, 0xb7b, 0x3340, 0xe985, 0xdd0b, 0xbf8c, 0x0, 0x1);
        gbc.writeMem(0x69c6, { 0x8f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0x69c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0024
        gbc.setState(0x49f3, 0x7399, 0xae90, 0x4543, 0xa431, 0x9ed9, 0x1, 0x0);
        gbc.writeMem(0x49f3, { 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7399, gbc.sp());
        EXPECT(0x49f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0025
        gbc.setState(0x3e82, 0x569e, 0xa720, 0xe88f, 0xfde4, 0x7a9e, 0x1, 0x1);
        gbc.writeMem(0x3e82, { 0x8f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x569e, gbc.sp());
        EXPECT(0x3e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0026
        gbc.setState(0x17de, 0x2f25, 0xc990, 0xe774, 0x3230, 0xaa2a, 0x0, 0x1);
        gbc.writeMem(0x17de, { 0x8f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2f25, gbc.sp());
        EXPECT(0x17df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0027
        gbc.setState(0x8d6c, 0x160d, 0x5c10, 0xada1, 0xd98c, 0xe04b, 0x1, 0x0);
        gbc.writeMem(0x8d6c, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x160d, gbc.sp());
        EXPECT(0x8d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8d6c));
        // 8F 0028
        gbc.setState(0x821e, 0x9a70, 0x4170, 0xd67b, 0x22a1, 0x1322, 0x1, 0x1);
        gbc.writeMem(0x821e, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9a70, gbc.sp());
        EXPECT(0x821f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x821e));
        // 8F 0029
        gbc.setState(0x471f, 0x2e9e, 0xe770, 0xaf5, 0xc690, 0xdbe4, 0x0, 0x0);
        gbc.writeMem(0x471f, { 0x8f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2e9e, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 002A
        gbc.setState(0xe561, 0xf1ce, 0xbee0, 0xed1b, 0xd09b, 0x62a, 0x1, 0x0);
        gbc.writeMem(0xe561, { 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf1ce, gbc.sp());
        EXPECT(0xe562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe561));
        // 8F 002B
        gbc.setState(0xd376, 0xf67b, 0xce40, 0xcda9, 0xb2ac, 0xcb64, 0x0, 0x1);
        gbc.writeMem(0xd376, { 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf67b, gbc.sp());
        EXPECT(0xd377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd376));
        // 8F 002C
        gbc.setState(0xcfd9, 0x8d9c, 0x78e0, 0x68ca, 0x7f0d, 0x1cc7, 0x0, 0x0);
        gbc.writeMem(0xcfd9, { 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8d9c, gbc.sp());
        EXPECT(0xcfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcfd9));
        // 8F 002D
        gbc.setState(0x3454, 0xb7cb, 0xfcf0, 0xd953, 0x47b1, 0x473f, 0x0, 0x1);
        gbc.writeMem(0x3454, { 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb7cb, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 002E
        gbc.setState(0x63a, 0xb071, 0xc340, 0x53ea, 0x8208, 0xdf60, 0x0, 0x1);
        gbc.writeMem(0x63a, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb071, gbc.sp());
        EXPECT(0x63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 002F
        gbc.setState(0x8ce2, 0xd7ac, 0xaf70, 0x8e35, 0x7b57, 0x6801, 0x1, 0x1);
        gbc.writeMem(0x8ce2, { 0x8f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd7ac, gbc.sp());
        EXPECT(0x8ce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8ce2));
        // 8F 0030
        gbc.setState(0x6b44, 0xf014, 0x470, 0x617a, 0x4574, 0xd593, 0x0, 0x0);
        gbc.writeMem(0x6b44, { 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf014, gbc.sp());
        EXPECT(0x6b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0031
        gbc.setState(0xe056, 0x742a, 0x9c0, 0xece3, 0xc89c, 0xe9e5, 0x0, 0x1);
        gbc.writeMem(0xe056, { 0x8f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x742a, gbc.sp());
        EXPECT(0xe057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe056));
        // 8F 0032
        gbc.setState(0x2879, 0xe2b7, 0x57c0, 0x31b, 0x57b3, 0x8aef, 0x1, 0x1);
        gbc.writeMem(0x2879, { 0x8f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe2b7, gbc.sp());
        EXPECT(0x287a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0033
        gbc.setState(0xa09b, 0x84b6, 0x3740, 0x4070, 0x7ae0, 0xe930, 0x0, 0x0);
        gbc.writeMem(0xa09b, { 0x8f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0xa09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa09b));
        // 8F 0034
        gbc.setState(0x275e, 0xcf29, 0x6940, 0xdea1, 0x70d5, 0xe5d2, 0x1, 0x0);
        gbc.writeMem(0x275e, { 0x8f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcf29, gbc.sp());
        EXPECT(0x275f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0035
        gbc.setState(0x2708, 0x5c7c, 0xc20, 0x3d04, 0xbfde, 0x9873, 0x0, 0x0);
        gbc.writeMem(0x2708, { 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5c7c, gbc.sp());
        EXPECT(0x2709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0036
        gbc.setState(0xc90d, 0x36ac, 0x2780, 0x5a2c, 0x7b31, 0xc3f, 0x1, 0x0);
        gbc.writeMem(0xc90d, { 0x8f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x36ac, gbc.sp());
        EXPECT(0xc90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc90d));
        // 8F 0037
        gbc.setState(0x186c, 0x9e5e, 0x55f0, 0x44ba, 0x6c04, 0x5065, 0x0, 0x0);
        gbc.writeMem(0x186c, { 0x8f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9e5e, gbc.sp());
        EXPECT(0x186d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0038
        gbc.setState(0x219f, 0x3e45, 0xc980, 0xb688, 0x91c6, 0x22ed, 0x1, 0x1);
        gbc.writeMem(0x219f, { 0x8f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3e45, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0039
        gbc.setState(0x5f23, 0xa8e2, 0xa040, 0x40ac, 0xdcc0, 0xc41a, 0x1, 0x1);
        gbc.writeMem(0x5f23, { 0x8f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0x5f24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 003A
        gbc.setState(0x5d9e, 0xdb1e, 0xb8c0, 0x1eaa, 0x6878, 0x4593, 0x1, 0x1);
        gbc.writeMem(0x5d9e, { 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdb1e, gbc.sp());
        EXPECT(0x5d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 003B
        gbc.setState(0x8659, 0xb87, 0xd90, 0xb9d6, 0xd4f8, 0x157, 0x0, 0x0);
        gbc.writeMem(0x8659, { 0x8f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb87, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8659));
        // 8F 003D
        gbc.setState(0x54a4, 0xd99, 0xaf60, 0xe16, 0x7cb, 0xf002, 0x0, 0x1);
        gbc.writeMem(0x54a4, { 0x8f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd99, gbc.sp());
        EXPECT(0x54a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 003E
        gbc.setState(0xcd5f, 0x6fd3, 0x95c0, 0xe8d0, 0xe635, 0x2520, 0x0, 0x1);
        gbc.writeMem(0xcd5f, { 0x8f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6fd3, gbc.sp());
        EXPECT(0xcd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcd5f));
        // 8F 003F
        gbc.setState(0x3d13, 0x5c8b, 0x9770, 0xd177, 0x9df8, 0x2b77, 0x0, 0x1);
        gbc.writeMem(0x3d13, { 0x8f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5c8b, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0040
        gbc.setState(0xed99, 0x787c, 0x8d40, 0x1fec, 0x1407, 0xd7b8, 0x1, 0x1);
        gbc.writeMem(0xed99, { 0x8f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x787c, gbc.sp());
        EXPECT(0xed9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xed99));
        // 8F 0041
        gbc.setState(0x836, 0x4ac4, 0x5a10, 0x50e, 0xbc48, 0x3f0a, 0x1, 0x0);
        gbc.writeMem(0x836, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4ac4, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0042
        gbc.setState(0x6f2d, 0x2c9f, 0x31b0, 0xd056, 0xac13, 0xf6c7, 0x1, 0x1);
        gbc.writeMem(0x6f2d, { 0x8f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2c9f, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0043
        gbc.setState(0x4fca, 0x315c, 0xb200, 0xd5ae, 0x93ea, 0x9c33, 0x1, 0x0);
        gbc.writeMem(0x4fca, { 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x315c, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0044
        gbc.setState(0xd787, 0x33b2, 0x43a0, 0xcc5, 0xbc93, 0x147c, 0x1, 0x1);
        gbc.writeMem(0xd787, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x33b2, gbc.sp());
        EXPECT(0xd788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd787));
        // 8F 0045
        gbc.setState(0x9bf9, 0xe455, 0x8870, 0x44b1, 0x1c79, 0x6a6f, 0x0, 0x0);
        gbc.writeMem(0x9bf9, { 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe455, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bf9));
        // 8F 0046
        gbc.setState(0x2099, 0xdffa, 0xddc0, 0x96bc, 0x49fc, 0xc1d1, 0x0, 0x0);
        gbc.writeMem(0x2099, { 0x8f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xdffa, gbc.sp());
        EXPECT(0x209a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0047
        gbc.setState(0x105f, 0xb330, 0x76b0, 0x37cf, 0xd49, 0xf408, 0x1, 0x0);
        gbc.writeMem(0x105f, { 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0x1060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0048
        gbc.setState(0xea1a, 0xd990, 0x2950, 0x2db5, 0x6da8, 0x50cb, 0x1, 0x0);
        gbc.writeMem(0xea1a, { 0x8f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd990, gbc.sp());
        EXPECT(0xea1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xea1a));
        // 8F 0049
        gbc.setState(0x8507, 0xa45e, 0x25f0, 0x9b93, 0xedbb, 0x7ddc, 0x0, 0x1);
        gbc.writeMem(0x8507, { 0x8f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa45e, gbc.sp());
        EXPECT(0x8508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8507));
        // 8F 004A
        gbc.setState(0x3dae, 0xee0e, 0x8af0, 0xc7f6, 0xc0ae, 0x46e, 0x0, 0x1);
        gbc.writeMem(0x3dae, { 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0x3daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 004B
        gbc.setState(0x3284, 0x36e5, 0x2e80, 0x7568, 0x5c1c, 0x546e, 0x0, 0x1);
        gbc.writeMem(0x3284, { 0x8f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x36e5, gbc.sp());
        EXPECT(0x3285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 004C
        gbc.setState(0xb9e, 0xb453, 0x26c0, 0xafc3, 0x268d, 0x4d77, 0x1, 0x1);
        gbc.writeMem(0xb9e, { 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb453, gbc.sp());
        EXPECT(0xb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 004D
        gbc.setState(0x6634, 0x605c, 0x2b10, 0xc5a, 0xfab9, 0xc6c4, 0x0, 0x1);
        gbc.writeMem(0x6634, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x605c, gbc.sp());
        EXPECT(0x6635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 004E
        gbc.setState(0xb4e8, 0x3730, 0xd9d0, 0x7b1d, 0x9d9f, 0x642b, 0x1, 0x1);
        gbc.writeMem(0xb4e8, { 0x8f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3730, gbc.sp());
        EXPECT(0xb4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb4e8));
        // 8F 004F
        gbc.setState(0xb543, 0x345b, 0xd3a0, 0x82f3, 0xc572, 0xc1bf, 0x1, 0x1);
        gbc.writeMem(0xb543, { 0x8f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x345b, gbc.sp());
        EXPECT(0xb544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb543));
        // 8F 0050
        gbc.setState(0x4e1a, 0xd5e8, 0x2f80, 0xe91b, 0xcfe6, 0x632c, 0x1, 0x1);
        gbc.writeMem(0x4e1a, { 0x8f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd5e8, gbc.sp());
        EXPECT(0x4e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0051
        gbc.setState(0x3b6c, 0x4634, 0x74d0, 0xf37d, 0xa7, 0x5b8f, 0x1, 0x0);
        gbc.writeMem(0x3b6c, { 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4634, gbc.sp());
        EXPECT(0x3b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0052
        gbc.setState(0x8618, 0x47c7, 0xc730, 0x7c47, 0x4394, 0x48de, 0x1, 0x0);
        gbc.writeMem(0x8618, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x47c7, gbc.sp());
        EXPECT(0x8619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8618));
        // 8F 0053
        gbc.setState(0x75c7, 0x6e25, 0xd5b0, 0x8b5c, 0xd585, 0xcca8, 0x0, 0x0);
        gbc.writeMem(0x75c7, { 0x8f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0x75c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0054
        gbc.setState(0xa3b5, 0x33b0, 0x0, 0x406f, 0xe571, 0xe3bb, 0x1, 0x0);
        gbc.writeMem(0xa3b5, { 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x33b0, gbc.sp());
        EXPECT(0xa3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa3b5));
        // 8F 0055
        gbc.setState(0x85eb, 0xe81a, 0x2be0, 0x11e2, 0x96aa, 0xf0cb, 0x1, 0x0);
        gbc.writeMem(0x85eb, { 0x8f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe81a, gbc.sp());
        EXPECT(0x85ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x85eb));
        // 8F 0056
        gbc.setState(0x71ba, 0x3f7e, 0x5f20, 0xc4b6, 0x59e7, 0xa6c5, 0x1, 0x1);
        gbc.writeMem(0x71ba, { 0x8f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3f7e, gbc.sp());
        EXPECT(0x71bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0057
        gbc.setState(0xb5d9, 0xcc09, 0x3730, 0xb20b, 0xb6d7, 0x911e, 0x1, 0x0);
        gbc.writeMem(0xb5d9, { 0x8f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcc09, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb5d9));
        // 8F 0058
        gbc.setState(0xe40a, 0xeef8, 0x6550, 0x39ff, 0x1e61, 0x6705, 0x1, 0x1);
        gbc.writeMem(0xe40a, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeef8, gbc.sp());
        EXPECT(0xe40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe40a));
        // 8F 0059
        gbc.setState(0x1801, 0xb4c, 0x41c0, 0x1142, 0x4f76, 0x1af9, 0x1, 0x1);
        gbc.writeMem(0x1801, { 0x8f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb4c, gbc.sp());
        EXPECT(0x1802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 005A
        gbc.setState(0x85bd, 0x1e86, 0xe6d0, 0x4a7a, 0xa24e, 0x6049, 0x0, 0x1);
        gbc.writeMem(0x85bd, { 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1e86, gbc.sp());
        EXPECT(0x85be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x85bd));
        // 8F 005B
        gbc.setState(0x5ea6, 0x4d22, 0x7170, 0x2186, 0x6308, 0x424a, 0x0, 0x0);
        gbc.writeMem(0x5ea6, { 0x8f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4d22, gbc.sp());
        EXPECT(0x5ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 005C
        gbc.setState(0x6ad0, 0x6ef9, 0x5880, 0x8e56, 0x9193, 0x19cf, 0x1, 0x1);
        gbc.writeMem(0x6ad0, { 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6ef9, gbc.sp());
        EXPECT(0x6ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 005E
        gbc.setState(0x4701, 0x2fbf, 0xf9e0, 0xbe01, 0x675d, 0xff27, 0x0, 0x0);
        gbc.writeMem(0x4701, { 0x8f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2fbf, gbc.sp());
        EXPECT(0x4702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 005F
        gbc.setState(0x445c, 0x4af4, 0xa20, 0xe167, 0xe799, 0x3eac, 0x0, 0x0);
        gbc.writeMem(0x445c, { 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4af4, gbc.sp());
        EXPECT(0x445d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0060
        gbc.setState(0x4ec8, 0x12a, 0xc80, 0xfd9b, 0xc113, 0x7e67, 0x1, 0x1);
        gbc.writeMem(0x4ec8, { 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x12a, gbc.sp());
        EXPECT(0x4ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0061
        gbc.setState(0xdc14, 0xa314, 0xc910, 0x7a02, 0x5f22, 0x6b25, 0x0, 0x0);
        gbc.writeMem(0xdc14, { 0x8f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa314, gbc.sp());
        EXPECT(0xdc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdc14));
        // 8F 0062
        gbc.setState(0x886e, 0xbfc7, 0x5d0, 0x81f5, 0xd716, 0x70c6, 0x1, 0x1);
        gbc.writeMem(0x886e, { 0x8f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbfc7, gbc.sp());
        EXPECT(0x886f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x886e));
        // 8F 0063
        gbc.setState(0xe1b8, 0xa32a, 0x1d70, 0xdea7, 0xb075, 0x66d4, 0x0, 0x1);
        gbc.writeMem(0xe1b8, { 0x8f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa32a, gbc.sp());
        EXPECT(0xe1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe1b8));
        // 8F 0064
        gbc.setState(0xa4e6, 0x11b2, 0x7890, 0x40ca, 0x90d5, 0x4cb4, 0x0, 0x1);
        gbc.writeMem(0xa4e6, { 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0xa4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa4e6));
        // 8F 0065
        gbc.setState(0x2032, 0xd8ca, 0x60f0, 0xf33a, 0xd532, 0x2090, 0x0, 0x1);
        gbc.writeMem(0x2032, { 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd8ca, gbc.sp());
        EXPECT(0x2033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0066
        gbc.setState(0x9721, 0x8a95, 0xbe10, 0x7429, 0x609d, 0x57da, 0x0, 0x0);
        gbc.writeMem(0x9721, { 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8a95, gbc.sp());
        EXPECT(0x9722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9721));
        // 8F 0067
        gbc.setState(0x7f12, 0x72f7, 0xddd0, 0xed66, 0xb1f4, 0x1cf7, 0x1, 0x1);
        gbc.writeMem(0x7f12, { 0x8f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x72f7, gbc.sp());
        EXPECT(0x7f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0068
        gbc.setState(0x97ec, 0x31cc, 0x3500, 0x1899, 0x96f0, 0xd4e1, 0x0, 0x1);
        gbc.writeMem(0x97ec, { 0x8f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x31cc, gbc.sp());
        EXPECT(0x97ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x97ec));
        // 8F 0069
        gbc.setState(0x4e32, 0xc261, 0xd770, 0xdb14, 0xd227, 0xe681, 0x0, 0x1);
        gbc.writeMem(0x4e32, { 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc261, gbc.sp());
        EXPECT(0x4e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 006A
        gbc.setState(0x44b4, 0x814e, 0x8410, 0x8bdf, 0xaf00, 0xde4d, 0x1, 0x0);
        gbc.writeMem(0x44b4, { 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x814e, gbc.sp());
        EXPECT(0x44b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 006B
        gbc.setState(0xd841, 0xd524, 0xf950, 0x23c8, 0x3efc, 0x1f59, 0x1, 0x0);
        gbc.writeMem(0xd841, { 0x8f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0xd842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd841));
        // 8F 006C
        gbc.setState(0x17fe, 0x775b, 0xed10, 0x3ee7, 0xc38b, 0x6fb, 0x1, 0x0);
        gbc.writeMem(0x17fe, { 0x8f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0x17ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 006D
        gbc.setState(0x201f, 0xd542, 0xf5d0, 0xbb17, 0x6d76, 0x1a73, 0x0, 0x0);
        gbc.writeMem(0x201f, { 0x8f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd542, gbc.sp());
        EXPECT(0x2020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 006E
        gbc.setState(0x394c, 0xbd95, 0xd070, 0x9c8, 0xb39a, 0xa9f7, 0x0, 0x1);
        gbc.writeMem(0x394c, { 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbd95, gbc.sp());
        EXPECT(0x394d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 006F
        gbc.setState(0x5c2d, 0xa163, 0xd4f0, 0xfe0c, 0x7e1a, 0x92a7, 0x0, 0x1);
        gbc.writeMem(0x5c2d, { 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa163, gbc.sp());
        EXPECT(0x5c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0070
        gbc.setState(0x4db3, 0xe56, 0x28b0, 0xa87a, 0xba71, 0xca11, 0x0, 0x0);
        gbc.writeMem(0x4db3, { 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe56, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0071
        gbc.setState(0xcdea, 0xe315, 0x4c80, 0x6a5c, 0xb88a, 0xe013, 0x1, 0x0);
        gbc.writeMem(0xcdea, { 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe315, gbc.sp());
        EXPECT(0xcdeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcdea));
        // 8F 0072
        gbc.setState(0x9e07, 0xc0cd, 0xe620, 0x20e9, 0xa594, 0x3a7b, 0x1, 0x1);
        gbc.writeMem(0x9e07, { 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc0cd, gbc.sp());
        EXPECT(0x9e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9e07));
        // 8F 0073
        gbc.setState(0x876d, 0x4814, 0xdf00, 0x8bfc, 0x8509, 0x1b04, 0x1, 0x1);
        gbc.writeMem(0x876d, { 0x8f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4814, gbc.sp());
        EXPECT(0x876e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x876d));
        // 8F 0074
        gbc.setState(0xc83b, 0x5544, 0x5560, 0x571b, 0x555, 0x1904, 0x0, 0x0);
        gbc.writeMem(0xc83b, { 0x8f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5544, gbc.sp());
        EXPECT(0xc83c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc83b));
        // 8F 0075
        gbc.setState(0x5540, 0xb68a, 0x4c90, 0xa458, 0x6c98, 0xb25d, 0x0, 0x1);
        gbc.writeMem(0x5540, { 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb68a, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0076
        gbc.setState(0x1735, 0xa739, 0x6720, 0xb89b, 0xb4ac, 0x2b4c, 0x0, 0x1);
        gbc.writeMem(0x1735, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0x1736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0077
        gbc.setState(0xebc3, 0xfe56, 0x850, 0xead3, 0xcf03, 0x7d5a, 0x0, 0x0);
        gbc.writeMem(0xebc3, { 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfe56, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xebc3));
        // 8F 0078
        gbc.setState(0x539a, 0x41ab, 0xd240, 0x6518, 0x28ca, 0xab21, 0x1, 0x0);
        gbc.writeMem(0x539a, { 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x41ab, gbc.sp());
        EXPECT(0x539b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0079
        gbc.setState(0x5fcb, 0xf6cd, 0x9a20, 0x8fdf, 0x6092, 0x768a, 0x1, 0x1);
        gbc.writeMem(0x5fcb, { 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 007A
        gbc.setState(0x1b6c, 0x7a0b, 0xd8e0, 0x4646, 0xc9e3, 0xff74, 0x1, 0x0);
        gbc.writeMem(0x1b6c, { 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0x1b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 007B
        gbc.setState(0xdc5e, 0x463f, 0xd400, 0x1654, 0xb92f, 0x9189, 0x0, 0x0);
        gbc.writeMem(0xdc5e, { 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0xdc5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdc5e));
        // 8F 007C
        gbc.setState(0xb387, 0x3520, 0xfe40, 0x4a1, 0xec15, 0x7ee5, 0x0, 0x1);
        gbc.writeMem(0xb387, { 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3520, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb387));
        // 8F 007D
        gbc.setState(0xe478, 0xd0fe, 0xc40, 0x13b0, 0x192d, 0x3f2a, 0x0, 0x1);
        gbc.writeMem(0xe478, { 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0xe479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe478));
        // 8F 007E
        gbc.setState(0x32a0, 0x6947, 0x6920, 0x4ea2, 0xddec, 0xa5b1, 0x1, 0x0);
        gbc.writeMem(0x32a0, { 0x8f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6947, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 007F
        gbc.setState(0x93f4, 0x636f, 0x9390, 0x9665, 0x4a59, 0x688a, 0x0, 0x1);
        gbc.writeMem(0x93f4, { 0x8f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x636f, gbc.sp());
        EXPECT(0x93f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x93f4));
        // 8F 0080
        gbc.setState(0x836e, 0x1388, 0xb0f0, 0x778c, 0x6200, 0xf217, 0x0, 0x1);
        gbc.writeMem(0x836e, { 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0x836f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x836e));
        // 8F 0081
        gbc.setState(0x1491, 0x8c0b, 0xc050, 0x5423, 0xf0e9, 0xbe46, 0x0, 0x0);
        gbc.writeMem(0x1491, { 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8c0b, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0082
        gbc.setState(0x680e, 0x7184, 0xb0b0, 0xb98, 0xb259, 0xfccf, 0x0, 0x1);
        gbc.writeMem(0x680e, { 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7184, gbc.sp());
        EXPECT(0x680f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0084
        gbc.setState(0xb2a0, 0x3a24, 0xc980, 0x9db8, 0x5f17, 0x6fd, 0x0, 0x1);
        gbc.writeMem(0xb2a0, { 0x8f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3a24, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb2a0));
        // 8F 0085
        gbc.setState(0x831d, 0x3e34, 0xb060, 0x6e34, 0xff0a, 0xc35e, 0x1, 0x1);
        gbc.writeMem(0x831d, { 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3e34, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x831d));
        // 8F 0086
        gbc.setState(0x5ffb, 0x8794, 0x6a70, 0xe331, 0xa766, 0x80a1, 0x0, 0x1);
        gbc.writeMem(0x5ffb, { 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8794, gbc.sp());
        EXPECT(0x5ffc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0087
        gbc.setState(0x9393, 0x7671, 0x1f80, 0x86ee, 0x8a90, 0x9140, 0x1, 0x0);
        gbc.writeMem(0x9393, { 0x8f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7671, gbc.sp());
        EXPECT(0x9394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9393));
        // 8F 0088
        gbc.setState(0xcdfe, 0x90a7, 0x6e90, 0xe9db, 0xaef1, 0x2325, 0x1, 0x0);
        gbc.writeMem(0xcdfe, { 0x8f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x90a7, gbc.sp());
        EXPECT(0xcdff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcdfe));
        // 8F 0089
        gbc.setState(0xf3a, 0xf4f1, 0x9b70, 0xe64, 0x41c3, 0xfb3c, 0x1, 0x0);
        gbc.writeMem(0xf3a, { 0x8f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf4f1, gbc.sp());
        EXPECT(0xf3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 008A
        gbc.setState(0x6627, 0x788e, 0xd010, 0x8a5e, 0x27ba, 0xa146, 0x1, 0x1);
        gbc.writeMem(0x6627, { 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 008C
        gbc.setState(0xa08e, 0xc491, 0xd140, 0x4f76, 0x7a35, 0xe693, 0x0, 0x1);
        gbc.writeMem(0xa08e, { 0x8f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0xa08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa08e));
        // 8F 008D
        gbc.setState(0xd9ba, 0x1877, 0x65d0, 0x1161, 0xa04a, 0x5509, 0x0, 0x0);
        gbc.writeMem(0xd9ba, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1877, gbc.sp());
        EXPECT(0xd9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd9ba));
        // 8F 008E
        gbc.setState(0x11ae, 0xa50, 0x1dc0, 0x87f4, 0xc594, 0xf4da, 0x0, 0x1);
        gbc.writeMem(0x11ae, { 0x8f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa50, gbc.sp());
        EXPECT(0x11af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 008F
        gbc.setState(0x9518, 0xdaff, 0x53c0, 0xb275, 0x7c0c, 0x45d4, 0x1, 0x1);
        gbc.writeMem(0x9518, { 0x8f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdaff, gbc.sp());
        EXPECT(0x9519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9518));
        // 8F 0090
        gbc.setState(0x2b07, 0x20fd, 0xae40, 0x8c6a, 0xd810, 0x9fac, 0x0, 0x0);
        gbc.writeMem(0x2b07, { 0x8f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x20fd, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0091
        gbc.setState(0xbda9, 0x7187, 0xbc10, 0x943d, 0xc24e, 0x88e2, 0x1, 0x0);
        gbc.writeMem(0xbda9, { 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7187, gbc.sp());
        EXPECT(0xbdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbda9));
        // 8F 0092
        gbc.setState(0xc36, 0xbda1, 0x3270, 0x367d, 0x1c4, 0x7bd8, 0x1, 0x1);
        gbc.writeMem(0xc36, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbda1, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0093
        gbc.setState(0xe965, 0xdac1, 0x6ad0, 0x5600, 0xc450, 0x916c, 0x0, 0x0);
        gbc.writeMem(0xe965, { 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdac1, gbc.sp());
        EXPECT(0xe966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe965));
        // 8F 0094
        gbc.setState(0x93bc, 0x6492, 0x3070, 0xa3d1, 0x1248, 0x1bda, 0x1, 0x1);
        gbc.writeMem(0x93bc, { 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6492, gbc.sp());
        EXPECT(0x93bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x93bc));
        // 8F 0095
        gbc.setState(0x649e, 0xe65d, 0x2a40, 0x26c3, 0xe29b, 0xacef, 0x0, 0x0);
        gbc.writeMem(0x649e, { 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe65d, gbc.sp());
        EXPECT(0x649f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0096
        gbc.setState(0x83bd, 0x2a9a, 0xa3c0, 0x59da, 0x2cdc, 0x49a3, 0x0, 0x1);
        gbc.writeMem(0x83bd, { 0x8f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2a9a, gbc.sp());
        EXPECT(0x83be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x83bd));
        // 8F 0097
        gbc.setState(0xd2d, 0xf2f0, 0x2ce0, 0xe652, 0x801d, 0x3cbc, 0x1, 0x0);
        gbc.writeMem(0xd2d, { 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf2f0, gbc.sp());
        EXPECT(0xd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0098
        gbc.setState(0xb497, 0xa474, 0x7e70, 0x365f, 0xc61a, 0xdee4, 0x1, 0x0);
        gbc.writeMem(0xb497, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa474, gbc.sp());
        EXPECT(0xb498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb497));
        // 8F 0099
        gbc.setState(0x7182, 0xf897, 0x35b0, 0xc70c, 0xf23d, 0xf93c, 0x1, 0x1);
        gbc.writeMem(0x7182, { 0x8f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf897, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 009A
        gbc.setState(0xce06, 0xda73, 0xadd0, 0xa580, 0x718e, 0xab84, 0x1, 0x0);
        gbc.writeMem(0xce06, { 0x8f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0xce07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xce06));
        // 8F 009B
        gbc.setState(0x904e, 0xb621, 0x46f0, 0xa222, 0x35aa, 0xa8f4, 0x0, 0x0);
        gbc.writeMem(0x904e, { 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0x904f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x904e));
        // 8F 009C
        gbc.setState(0x9501, 0xe0c6, 0xf7d0, 0x48a7, 0x17a1, 0x3584, 0x1, 0x1);
        gbc.writeMem(0x9501, { 0x8f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe0c6, gbc.sp());
        EXPECT(0x9502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9501));
        // 8F 009D
        gbc.setState(0x7073, 0x4a46, 0x38d0, 0xc9c3, 0x341b, 0x91fa, 0x1, 0x0);
        gbc.writeMem(0x7073, { 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4a46, gbc.sp());
        EXPECT(0x7074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 009E
        gbc.setState(0x8501, 0xec2a, 0x5720, 0x8c38, 0x44e6, 0x83ce, 0x0, 0x1);
        gbc.writeMem(0x8501, { 0x8f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xec2a, gbc.sp());
        EXPECT(0x8502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8501));
        // 8F 009F
        gbc.setState(0x5531, 0x8a66, 0xe360, 0x700f, 0x517c, 0x298c, 0x0, 0x0);
        gbc.writeMem(0x5531, { 0x8f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8a66, gbc.sp());
        EXPECT(0x5532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00A0
        gbc.setState(0xa876, 0x3cb1, 0x59f0, 0xc635, 0xa746, 0xb638, 0x0, 0x0);
        gbc.writeMem(0xa876, { 0x8f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0xa877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa876));
        // 8F 00A1
        gbc.setState(0xec13, 0x7a4d, 0x53b0, 0x9d0e, 0xac43, 0x4d6c, 0x0, 0x1);
        gbc.writeMem(0xec13, { 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7a4d, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xec13));
        // 8F 00A2
        gbc.setState(0x624b, 0xcde5, 0x5c40, 0xd0d5, 0x98d2, 0xf1ee, 0x1, 0x0);
        gbc.writeMem(0x624b, { 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcde5, gbc.sp());
        EXPECT(0x624c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00A3
        gbc.setState(0x60bc, 0x78e8, 0x7d50, 0x444f, 0xfae9, 0x3fac, 0x0, 0x1);
        gbc.writeMem(0x60bc, { 0x8f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x78e8, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00A4
        gbc.setState(0xdca1, 0x3940, 0x5870, 0xd430, 0xc348, 0x59ab, 0x0, 0x0);
        gbc.writeMem(0xdca1, { 0x8f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3940, gbc.sp());
        EXPECT(0xdca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdca1));
        // 8F 00A5
        gbc.setState(0xdb22, 0xed4d, 0x4d30, 0x93b0, 0x643b, 0x92e2, 0x1, 0x1);
        gbc.writeMem(0xdb22, { 0x8f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed4d, gbc.sp());
        EXPECT(0xdb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdb22));
        // 8F 00A6
        gbc.setState(0xb9ac, 0x5bcf, 0xd670, 0xaada, 0xafcc, 0x9e08, 0x1, 0x1);
        gbc.writeMem(0xb9ac, { 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5bcf, gbc.sp());
        EXPECT(0xb9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb9ac));
        // 8F 00A7
        gbc.setState(0x938b, 0x495b, 0x47c0, 0x7cd0, 0xe0d2, 0xc4c2, 0x1, 0x1);
        gbc.writeMem(0x938b, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x495b, gbc.sp());
        EXPECT(0x938c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x938b));
        // 8F 00A9
        gbc.setState(0xbd00, 0xcc6a, 0xd550, 0x6eb8, 0xb27d, 0x3fc1, 0x0, 0x0);
        gbc.writeMem(0xbd00, { 0x8f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcc6a, gbc.sp());
        EXPECT(0xbd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbd00));
        // 8F 00AA
        gbc.setState(0xd7f7, 0x4c06, 0x9d80, 0xf28d, 0x73e0, 0x14e6, 0x0, 0x1);
        gbc.writeMem(0xd7f7, { 0x8f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4c06, gbc.sp());
        EXPECT(0xd7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd7f7));
        // 8F 00AB
        gbc.setState(0x4760, 0xd259, 0xe100, 0x8c3f, 0x2e79, 0xe9cb, 0x1, 0x1);
        gbc.writeMem(0x4760, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd259, gbc.sp());
        EXPECT(0x4761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00AC
        gbc.setState(0xd499, 0xa18b, 0xf290, 0x80ae, 0xcd5d, 0xf7c1, 0x1, 0x0);
        gbc.writeMem(0xd499, { 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa18b, gbc.sp());
        EXPECT(0xd49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd499));
        // 8F 00AD
        gbc.setState(0x1dd3, 0x1642, 0xda20, 0x60a7, 0x56a0, 0xd954, 0x0, 0x1);
        gbc.writeMem(0x1dd3, { 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1642, gbc.sp());
        EXPECT(0x1dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00AE
        gbc.setState(0x1dff, 0xec27, 0x1e0, 0xf1c2, 0xb9d9, 0x537a, 0x1, 0x1);
        gbc.writeMem(0x1dff, { 0x8f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xec27, gbc.sp());
        EXPECT(0x1e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00AF
        gbc.setState(0x73f8, 0xf905, 0x32f0, 0x3997, 0x733f, 0xfc4f, 0x1, 0x0);
        gbc.writeMem(0x73f8, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf905, gbc.sp());
        EXPECT(0x73f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00B0
        gbc.setState(0xeab3, 0x447a, 0xe600, 0xd1c4, 0xf9e3, 0x3783, 0x0, 0x0);
        gbc.writeMem(0xeab3, { 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x447a, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeab3));
        // 8F 00B1
        gbc.setState(0x3bf7, 0xb9, 0x4150, 0x84e8, 0x7db3, 0x526d, 0x1, 0x0);
        gbc.writeMem(0x3bf7, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0x3bf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00B2
        gbc.setState(0x157d, 0x68c5, 0xa2e0, 0x497f, 0xaee8, 0x6ca6, 0x0, 0x1);
        gbc.writeMem(0x157d, { 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x68c5, gbc.sp());
        EXPECT(0x157e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00B3
        gbc.setState(0x24aa, 0xada9, 0x3e50, 0xca7d, 0xe64c, 0x5efe, 0x0, 0x1);
        gbc.writeMem(0x24aa, { 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xada9, gbc.sp());
        EXPECT(0x24ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00B4
        gbc.setState(0xca8f, 0x8d29, 0x1e40, 0x8d65, 0xac8d, 0xdf2c, 0x0, 0x1);
        gbc.writeMem(0xca8f, { 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8d29, gbc.sp());
        EXPECT(0xca90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xca8f));
        // 8F 00B5
        gbc.setState(0x2db0, 0xd435, 0x43f0, 0xeb90, 0x744a, 0x2d15, 0x0, 0x1);
        gbc.writeMem(0x2db0, { 0x8f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd435, gbc.sp());
        EXPECT(0x2db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00B6
        gbc.setState(0x7c97, 0xa36c, 0x3420, 0x1e32, 0xc9ad, 0xd06d, 0x0, 0x0);
        gbc.writeMem(0x7c97, { 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa36c, gbc.sp());
        EXPECT(0x7c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00B7
        gbc.setState(0xd8d4, 0xe64b, 0x7b90, 0xb4a6, 0x7f7a, 0xab17, 0x1, 0x1);
        gbc.writeMem(0xd8d4, { 0x8f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe64b, gbc.sp());
        EXPECT(0xd8d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd8d4));
        // 8F 00B8
        gbc.setState(0xa241, 0x41d3, 0x1220, 0x4849, 0x8e32, 0xfdda, 0x0, 0x0);
        gbc.writeMem(0xa241, { 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x41d3, gbc.sp());
        EXPECT(0xa242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa241));
        // 8F 00B9
        gbc.setState(0xee7, 0x8c0f, 0x6320, 0xc776, 0x7091, 0xfcb2, 0x1, 0x1);
        gbc.writeMem(0xee7, { 0x8f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8c0f, gbc.sp());
        EXPECT(0xee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00BA
        gbc.setState(0x931f, 0x8edd, 0x9da0, 0x2b99, 0x635c, 0xb1cf, 0x0, 0x0);
        gbc.writeMem(0x931f, { 0x8f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0x9320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x931f));
        // 8F 00BB
        gbc.setState(0x863f, 0x8c4d, 0xb0b0, 0xd483, 0xb58f, 0x7eb8, 0x1, 0x1);
        gbc.writeMem(0x863f, { 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x8640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x863f));
        // 8F 00BC
        gbc.setState(0xbcea, 0x1a89, 0xdf50, 0x1e50, 0x57f3, 0x12c4, 0x1, 0x0);
        gbc.writeMem(0xbcea, { 0x8f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0xbceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbcea));
        // 8F 00BD
        gbc.setState(0x9980, 0x476b, 0x1bf0, 0x2901, 0x33f0, 0xf3a9, 0x0, 0x1);
        gbc.writeMem(0x9980, { 0x8f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9980));
        // 8F 00BE
        gbc.setState(0x6006, 0x48d, 0x36a0, 0x356a, 0x6099, 0xb230, 0x0, 0x1);
        gbc.writeMem(0x6006, { 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x48d, gbc.sp());
        EXPECT(0x6007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00BF
        gbc.setState(0x3d6a, 0xbd0e, 0x4950, 0x6a27, 0xd1a7, 0xc043, 0x0, 0x1);
        gbc.writeMem(0x3d6a, { 0x8f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbd0e, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00C0
        gbc.setState(0x5ec, 0xb978, 0xdb10, 0xa69a, 0xffd7, 0x92c8, 0x0, 0x1);
        gbc.writeMem(0x5ec, { 0x8f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb978, gbc.sp());
        EXPECT(0x5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00C1
        gbc.setState(0xb567, 0x1151, 0x3a90, 0x292e, 0x2fd1, 0x7060, 0x0, 0x1);
        gbc.writeMem(0xb567, { 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1151, gbc.sp());
        EXPECT(0xb568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb567));
        // 8F 00C2
        gbc.setState(0x9bca, 0xcd65, 0x7850, 0x87b0, 0x6726, 0xf911, 0x1, 0x0);
        gbc.writeMem(0x9bca, { 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcd65, gbc.sp());
        EXPECT(0x9bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bca));
        // 8F 00C3
        gbc.setState(0x9b19, 0x3be7, 0x1ea0, 0x1de5, 0x2c7c, 0x2de9, 0x0, 0x0);
        gbc.writeMem(0x9b19, { 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3be7, gbc.sp());
        EXPECT(0x9b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9b19));
        // 8F 00C4
        gbc.setState(0x1e6, 0x713b, 0x8f40, 0x3825, 0xfb30, 0x12f9, 0x1, 0x1);
        gbc.writeMem(0x1e6, { 0x8f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x713b, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00C5
        gbc.setState(0xebb5, 0xafc2, 0x50d0, 0xf076, 0xbc4f, 0x9ede, 0x1, 0x0);
        gbc.writeMem(0xebb5, { 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xafc2, gbc.sp());
        EXPECT(0xebb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xebb5));
        // 8F 00C6
        gbc.setState(0x4c72, 0xa1a7, 0xcf0, 0xb762, 0xf21a, 0x7115, 0x1, 0x1);
        gbc.writeMem(0x4c72, { 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa1a7, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00C7
        gbc.setState(0xda8c, 0xaf75, 0x25e0, 0x5bb8, 0xb8af, 0x4567, 0x0, 0x0);
        gbc.writeMem(0xda8c, { 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaf75, gbc.sp());
        EXPECT(0xda8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xda8c));
        // 8F 00C8
        gbc.setState(0x84c5, 0xa472, 0xdd00, 0xc5a6, 0xcc1e, 0x6f91, 0x0, 0x1);
        gbc.writeMem(0x84c5, { 0x8f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0x84c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x84c5));
        // 8F 00C9
        gbc.setState(0x8668, 0x63b6, 0x3b0, 0x6539, 0xe240, 0xca61, 0x0, 0x0);
        gbc.writeMem(0x8668, { 0x8f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x63b6, gbc.sp());
        EXPECT(0x8669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8668));
        // 8F 00CA
        gbc.setState(0x5bc3, 0x1283, 0x2c20, 0xbe7d, 0xf12f, 0x6fc2, 0x1, 0x1);
        gbc.writeMem(0x5bc3, { 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1283, gbc.sp());
        EXPECT(0x5bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00CB
        gbc.setState(0x97a4, 0x58f4, 0xef60, 0x1c57, 0x486a, 0xfba4, 0x1, 0x0);
        gbc.writeMem(0x97a4, { 0x8f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x97a4));
        // 8F 00CC
        gbc.setState(0x6bb9, 0xa960, 0xebc0, 0xcf2e, 0x901a, 0x4fa, 0x0, 0x1);
        gbc.writeMem(0x6bb9, { 0x8f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa960, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00CD
        gbc.setState(0x4694, 0x48a8, 0x5c70, 0x7ee9, 0x139f, 0x8f5e, 0x1, 0x1);
        gbc.writeMem(0x4694, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x48a8, gbc.sp());
        EXPECT(0x4695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00CE
        gbc.setState(0xd00e, 0x4859, 0xff30, 0x938, 0x632b, 0x8fd2, 0x0, 0x1);
        gbc.writeMem(0xd00e, { 0x8f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4859, gbc.sp());
        EXPECT(0xd00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd00e));
        // 8F 00CF
        gbc.setState(0x299, 0x96c4, 0xd2d0, 0x697e, 0xabab, 0xf422, 0x1, 0x0);
        gbc.writeMem(0x299, { 0x8f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x96c4, gbc.sp());
        EXPECT(0x29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00D0
        gbc.setState(0x98c, 0x9c48, 0x4010, 0x2aeb, 0xb27d, 0x3126, 0x1, 0x1);
        gbc.writeMem(0x98c, { 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9c48, gbc.sp());
        EXPECT(0x98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00D1
        gbc.setState(0x2729, 0xdab8, 0x7090, 0xa8fd, 0x33c9, 0xefdd, 0x0, 0x0);
        gbc.writeMem(0x2729, { 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdab8, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00D2
        gbc.setState(0xde44, 0x73a8, 0xa2f0, 0xd445, 0x2262, 0x15e0, 0x1, 0x0);
        gbc.writeMem(0xde44, { 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x73a8, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xde44));
        // 8F 00D3
        gbc.setState(0x5326, 0xf09b, 0x80e0, 0xb224, 0x3d54, 0xaf6b, 0x0, 0x1);
        gbc.writeMem(0x5326, { 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf09b, gbc.sp());
        EXPECT(0x5327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00D4
        gbc.setState(0x9d51, 0xef8f, 0xc720, 0x18f9, 0x9dc, 0xd418, 0x0, 0x1);
        gbc.writeMem(0x9d51, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xef8f, gbc.sp());
        EXPECT(0x9d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9d51));
        // 8F 00D5
        gbc.setState(0xd30c, 0x31bf, 0x5b90, 0xf154, 0x99dc, 0x5b86, 0x1, 0x0);
        gbc.writeMem(0xd30c, { 0x8f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x31bf, gbc.sp());
        EXPECT(0xd30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd30c));
        // 8F 00D6
        gbc.setState(0x6db3, 0xd4bd, 0x9ec0, 0x36d, 0xdd05, 0x5e52, 0x1, 0x0);
        gbc.writeMem(0x6db3, { 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd4bd, gbc.sp());
        EXPECT(0x6db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00D7
        gbc.setState(0x234a, 0x4fec, 0xb270, 0x7f45, 0xda53, 0x680, 0x0, 0x0);
        gbc.writeMem(0x234a, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4fec, gbc.sp());
        EXPECT(0x234b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00D8
        gbc.setState(0xcf9d, 0xc78d, 0x3340, 0x1ae9, 0xd106, 0xb880, 0x1, 0x1);
        gbc.writeMem(0xcf9d, { 0x8f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc78d, gbc.sp());
        EXPECT(0xcf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcf9d));
        // 8F 00D9
        gbc.setState(0x7f2, 0x2239, 0x2160, 0x413, 0x25d2, 0xd0d8, 0x1, 0x0);
        gbc.writeMem(0x7f2, { 0x8f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2239, gbc.sp());
        EXPECT(0x7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00DA
        gbc.setState(0x3b77, 0x5dbb, 0xeb30, 0x656, 0x7f29, 0x28b7, 0x1, 0x0);
        gbc.writeMem(0x3b77, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0x3b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00DB
        gbc.setState(0xbbd8, 0x1afa, 0x1460, 0x21b7, 0x2d07, 0x3b3c, 0x1, 0x1);
        gbc.writeMem(0xbbd8, { 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1afa, gbc.sp());
        EXPECT(0xbbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbbd8));
        // 8F 00DE
        gbc.setState(0xeb7, 0xd903, 0x3760, 0xeb02, 0xee7c, 0xcd30, 0x0, 0x1);
        gbc.writeMem(0xeb7, { 0x8f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd903, gbc.sp());
        EXPECT(0xeb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00DF
        gbc.setState(0xcb90, 0x7263, 0x7100, 0x590e, 0x7ad2, 0x77dd, 0x0, 0x1);
        gbc.writeMem(0xcb90, { 0x8f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7263, gbc.sp());
        EXPECT(0xcb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb90));
        // 8F 00E0
        gbc.setState(0x8f0c, 0x469e, 0x5920, 0x3122, 0xcf88, 0x285, 0x0, 0x0);
        gbc.writeMem(0x8f0c, { 0x8f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0x8f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f0c));
        // 8F 00E1
        gbc.setState(0xd119, 0x90b0, 0xe760, 0xc8c4, 0x241b, 0x204c, 0x1, 0x1);
        gbc.writeMem(0xd119, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x90b0, gbc.sp());
        EXPECT(0xd11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd119));
        // 8F 00E2
        gbc.setState(0xa98e, 0x9dcc, 0x4770, 0x67c, 0x3897, 0xa009, 0x1, 0x0);
        gbc.writeMem(0xa98e, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9dcc, gbc.sp());
        EXPECT(0xa98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa98e));
        // 8F 00E3
        gbc.setState(0x10d8, 0xce4e, 0xd510, 0xf62d, 0xa2b6, 0x2f88, 0x0, 0x0);
        gbc.writeMem(0x10d8, { 0x8f });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0x10d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00E4
        gbc.setState(0x70d, 0xf0fe, 0x950, 0xb052, 0xb233, 0x5762, 0x0, 0x1);
        gbc.writeMem(0x70d, { 0x8f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf0fe, gbc.sp());
        EXPECT(0x70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00E5
        gbc.setState(0xbd73, 0xc7d0, 0xa1d0, 0x8fc, 0x2254, 0x3629, 0x1, 0x1);
        gbc.writeMem(0xbd73, { 0x8f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc7d0, gbc.sp());
        EXPECT(0xbd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbd73));
        // 8F 00E6
        gbc.setState(0xc3fd, 0xf812, 0x24e0, 0xcd8f, 0x3b0a, 0x5f8b, 0x1, 0x0);
        gbc.writeMem(0xc3fd, { 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf812, gbc.sp());
        EXPECT(0xc3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc3fd));
        // 8F 00E7
        gbc.setState(0x3864, 0x8626, 0xf000, 0x9a00, 0x64ca, 0x20e9, 0x1, 0x1);
        gbc.writeMem(0x3864, { 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0x3865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00E8
        gbc.setState(0x9db, 0x81a1, 0x26f0, 0x8f16, 0x591e, 0xa822, 0x1, 0x0);
        gbc.writeMem(0x9db, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x81a1, gbc.sp());
        EXPECT(0x9dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00E9
        gbc.setState(0xb078, 0x2638, 0xa420, 0x1327, 0x4337, 0xc288, 0x1, 0x0);
        gbc.writeMem(0xb078, { 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2638, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb078));
        // 8F 00EA
        gbc.setState(0xa245, 0x6fa1, 0x110, 0xf9b0, 0x3843, 0x77e, 0x0, 0x0);
        gbc.writeMem(0xa245, { 0x8f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6fa1, gbc.sp());
        EXPECT(0xa246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa245));
        // 8F 00EB
        gbc.setState(0x844c, 0xdb3f, 0x7520, 0xf9a2, 0xacbe, 0x3711, 0x0, 0x1);
        gbc.writeMem(0x844c, { 0x8f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0x844d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x844c));
        // 8F 00EC
        gbc.setState(0xb8cb, 0x7db7, 0x22a0, 0xe96, 0x2ba1, 0xf80f, 0x1, 0x1);
        gbc.writeMem(0xb8cb, { 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0xb8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb8cb));
        // 8F 00ED
        gbc.setState(0xafac, 0x9a11, 0x4830, 0x5e20, 0x9ff7, 0x837, 0x1, 0x1);
        gbc.writeMem(0xafac, { 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9a11, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xafac));
        // 8F 00EE
        gbc.setState(0x7723, 0x389, 0x77c0, 0x700b, 0x569b, 0xe3f, 0x1, 0x1);
        gbc.writeMem(0x7723, { 0x8f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x389, gbc.sp());
        EXPECT(0x7724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00EF
        gbc.setState(0x3883, 0x14ca, 0x4fc0, 0x685f, 0x211d, 0x9ee4, 0x0, 0x0);
        gbc.writeMem(0x3883, { 0x8f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x14ca, gbc.sp());
        EXPECT(0x3884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00F0
        gbc.setState(0xa635, 0xdc09, 0xb40, 0x3974, 0x9d8f, 0x162b, 0x0, 0x0);
        gbc.writeMem(0xa635, { 0x8f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xdc09, gbc.sp());
        EXPECT(0xa636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa635));
        // 8F 00F1
        gbc.setState(0x7a1c, 0x927, 0x1b60, 0x7ce1, 0xfad3, 0xf70c, 0x1, 0x1);
        gbc.writeMem(0x7a1c, { 0x8f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x927, gbc.sp());
        EXPECT(0x7a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00F3
        gbc.setState(0xe947, 0x6c5e, 0x160, 0x7af8, 0x91bd, 0xdc3a, 0x1, 0x1);
        gbc.writeMem(0xe947, { 0x8f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6c5e, gbc.sp());
        EXPECT(0xe948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe947));
        // 8F 00F4
        gbc.setState(0xc564, 0xdf8c, 0xdde0, 0xebb, 0xa32a, 0x7a34, 0x0, 0x0);
        gbc.writeMem(0xc564, { 0x8f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0xc565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc564));
        // 8F 00F5
        gbc.setState(0x3abe, 0x1a19, 0xc600, 0xab5c, 0x628b, 0x6b18, 0x1, 0x1);
        gbc.writeMem(0x3abe, { 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1a19, gbc.sp());
        EXPECT(0x3abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00F6
        gbc.setState(0xb602, 0xc28d, 0xf70, 0xaf02, 0x2662, 0x8a76, 0x1, 0x0);
        gbc.writeMem(0xb602, { 0x8f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc28d, gbc.sp());
        EXPECT(0xb603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb602));
        // 8F 00F7
        gbc.setState(0x133f, 0x5e4a, 0xfa50, 0x36e9, 0x4b66, 0x88ea, 0x1, 0x0);
        gbc.writeMem(0x133f, { 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5e4a, gbc.sp());
        EXPECT(0x1340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00F8
        gbc.setState(0x164b, 0x6d9, 0xfb60, 0xba58, 0x7f3, 0x2ac3, 0x0, 0x1);
        gbc.writeMem(0x164b, { 0x8f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6d9, gbc.sp());
        EXPECT(0x164c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 00F9
        gbc.setState(0x594b, 0xd4b2, 0x6ca0, 0xc8e5, 0x4fb4, 0xab04, 0x0, 0x1);
        gbc.writeMem(0x594b, { 0x8f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd4b2, gbc.sp());
        EXPECT(0x594c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00FA
        gbc.setState(0xc19a, 0xcaea, 0x6ec0, 0xe4a5, 0x8614, 0x3f75, 0x1, 0x0);
        gbc.writeMem(0xc19a, { 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcaea, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc19a));
        // 8F 00FB
        gbc.setState(0xaede, 0x99d, 0xd8e0, 0xda4, 0x3f56, 0x8127, 0x0, 0x0);
        gbc.writeMem(0xaede, { 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x99d, gbc.sp());
        EXPECT(0xaedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaede));
        // 8F 00FC
        gbc.setState(0xb04f, 0xd2b8, 0x24f0, 0x1411, 0xec93, 0x5039, 0x1, 0x1);
        gbc.writeMem(0xb04f, { 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd2b8, gbc.sp());
        EXPECT(0xb050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb04f));
        // 8F 00FD
        gbc.setState(0x210, 0x1b8f, 0x1660, 0x2edb, 0xff7, 0x7098, 0x0, 0x0);
        gbc.writeMem(0x210, { 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1b8f, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 00FE
        gbc.setState(0xea5b, 0xb3e5, 0x47c0, 0xb158, 0x17f4, 0xcb7c, 0x0, 0x0);
        gbc.writeMem(0xea5b, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0xea5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xea5b));
        // 8F 00FF
        gbc.setState(0x8f78, 0x4305, 0x4450, 0xec0, 0x3b4b, 0xffc6, 0x1, 0x0);
        gbc.writeMem(0x8f78, { 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4305, gbc.sp());
        EXPECT(0x8f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f78));
        // 8F 0100
        gbc.setState(0xebbc, 0xc7ad, 0xe670, 0x61ca, 0xdb49, 0x2477, 0x1, 0x1);
        gbc.writeMem(0xebbc, { 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc7ad, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xebbc));
        // 8F 0101
        gbc.setState(0x6d30, 0x671, 0xa6b0, 0x3273, 0xf376, 0x7a62, 0x1, 0x0);
        gbc.writeMem(0x6d30, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0x6d31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0102
        gbc.setState(0xb311, 0xf8d, 0x4270, 0xe8b8, 0xea2d, 0x4c29, 0x1, 0x0);
        gbc.writeMem(0xb311, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf8d, gbc.sp());
        EXPECT(0xb312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb311));
        // 8F 0103
        gbc.setState(0x11ca, 0xbfdb, 0x460, 0xd03, 0x59a1, 0x9db4, 0x0, 0x0);
        gbc.writeMem(0x11ca, { 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbfdb, gbc.sp());
        EXPECT(0x11cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0104
        gbc.setState(0x7908, 0x4043, 0xe5d0, 0x2bf8, 0xf427, 0x291e, 0x0, 0x1);
        gbc.writeMem(0x7908, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4043, gbc.sp());
        EXPECT(0x7909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0105
        gbc.setState(0xd2da, 0x4f7a, 0x9d90, 0xf60, 0x910e, 0x787a, 0x0, 0x0);
        gbc.writeMem(0xd2da, { 0x8f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4f7a, gbc.sp());
        EXPECT(0xd2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd2da));
        // 8F 0106
        gbc.setState(0xa879, 0x6cb6, 0x2930, 0x395d, 0xa7e8, 0xd518, 0x0, 0x1);
        gbc.writeMem(0xa879, { 0x8f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6cb6, gbc.sp());
        EXPECT(0xa87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa879));
        // 8F 0107
        gbc.setState(0xd569, 0xb6c8, 0x62e0, 0xbd6a, 0x8609, 0x3fbd, 0x0, 0x0);
        gbc.writeMem(0xd569, { 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0xd56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd569));
        // 8F 0108
        gbc.setState(0x9473, 0x4c40, 0x1860, 0x24e0, 0x278b, 0x9a91, 0x1, 0x1);
        gbc.writeMem(0x9473, { 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4c40, gbc.sp());
        EXPECT(0x9474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9473));
        // 8F 0109
        gbc.setState(0xcb7d, 0xb2bf, 0x7440, 0x586c, 0x4ce4, 0xcc21, 0x1, 0x1);
        gbc.writeMem(0xcb7d, { 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb2bf, gbc.sp());
        EXPECT(0xcb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb7d));
        // 8F 010A
        gbc.setState(0x48f6, 0x2cfa, 0xcbc0, 0x9281, 0x3509, 0xa8e3, 0x1, 0x0);
        gbc.writeMem(0x48f6, { 0x8f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2cfa, gbc.sp());
        EXPECT(0x48f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 010B
        gbc.setState(0x95cf, 0xecf6, 0xbc20, 0xb79b, 0x7f9a, 0xe647, 0x0, 0x1);
        gbc.writeMem(0x95cf, { 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xecf6, gbc.sp());
        EXPECT(0x95d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x95cf));
        // 8F 010C
        gbc.setState(0x172, 0x6bc2, 0x3000, 0x1650, 0xdd0a, 0x395b, 0x0, 0x1);
        gbc.writeMem(0x172, { 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6bc2, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 010D
        gbc.setState(0x6975, 0xa443, 0x5a50, 0xbac4, 0xf75, 0x91de, 0x0, 0x1);
        gbc.writeMem(0x6975, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa443, gbc.sp());
        EXPECT(0x6976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 010E
        gbc.setState(0x8026, 0xa559, 0x2ce0, 0xd05a, 0x69ce, 0xd18a, 0x1, 0x0);
        gbc.writeMem(0x8026, { 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa559, gbc.sp());
        EXPECT(0x8027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8026));
        // 8F 010F
        gbc.setState(0xe39c, 0xa1d6, 0xee20, 0x9660, 0x96b7, 0x2bc7, 0x1, 0x0);
        gbc.writeMem(0xe39c, { 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa1d6, gbc.sp());
        EXPECT(0xe39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe39c));
        // 8F 0110
        gbc.setState(0xb011, 0xcef7, 0x8db0, 0x5c51, 0xd2d5, 0x6b35, 0x0, 0x1);
        gbc.writeMem(0xb011, { 0x8f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0xb012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb011));
        // 8F 0111
        gbc.setState(0x92d5, 0x9aa2, 0xa9c0, 0x987, 0xe4b6, 0x6a2b, 0x1, 0x0);
        gbc.writeMem(0x92d5, { 0x8f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9aa2, gbc.sp());
        EXPECT(0x92d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x92d5));
        // 8F 0112
        gbc.setState(0x53d1, 0x6068, 0x3a50, 0xbb6c, 0x8dfd, 0x2ca9, 0x0, 0x1);
        gbc.writeMem(0x53d1, { 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6068, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0113
        gbc.setState(0x1a4d, 0xe703, 0xe540, 0xe670, 0x4543, 0x7289, 0x1, 0x1);
        gbc.writeMem(0x1a4d, { 0x8f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe703, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0114
        gbc.setState(0x6a00, 0xe5cf, 0xf300, 0xa915, 0x96f6, 0xabb8, 0x1, 0x0);
        gbc.writeMem(0x6a00, { 0x8f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe5cf, gbc.sp());
        EXPECT(0x6a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0115
        gbc.setState(0xd9e4, 0x6115, 0x260, 0xf620, 0x4c8c, 0xd79b, 0x0, 0x0);
        gbc.writeMem(0xd9e4, { 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0xd9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd9e4));
        // 8F 0116
        gbc.setState(0xd501, 0x4162, 0x5d70, 0x6d9c, 0x8639, 0xce7a, 0x0, 0x0);
        gbc.writeMem(0xd501, { 0x8f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4162, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd501));
        // 8F 0117
        gbc.setState(0xdc0d, 0xf4fb, 0x3410, 0xc71e, 0x694e, 0x460, 0x1, 0x1);
        gbc.writeMem(0xdc0d, { 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf4fb, gbc.sp());
        EXPECT(0xdc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdc0d));
        // 8F 0118
        gbc.setState(0x1676, 0x8336, 0x9eb0, 0xe913, 0x7b0d, 0x8bf6, 0x1, 0x1);
        gbc.writeMem(0x1676, { 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0x1677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0119
        gbc.setState(0x9362, 0x6424, 0x6f10, 0x8b83, 0x7198, 0x1b72, 0x1, 0x1);
        gbc.writeMem(0x9362, { 0x8f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9362));
        // 8F 011A
        gbc.setState(0x47f0, 0xc5a9, 0x63d0, 0xd1b4, 0xc01c, 0xf203, 0x1, 0x1);
        gbc.writeMem(0x47f0, { 0x8f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc5a9, gbc.sp());
        EXPECT(0x47f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 011C
        gbc.setState(0xca19, 0x5ef9, 0x7ad0, 0x1407, 0x9fd1, 0xf0f6, 0x1, 0x1);
        gbc.writeMem(0xca19, { 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0xca1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xca19));
        // 8F 011D
        gbc.setState(0x943b, 0x152c, 0xb6d0, 0x4130, 0x6ada, 0x5e2c, 0x1, 0x0);
        gbc.writeMem(0x943b, { 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0x943c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x943b));
        // 8F 011E
        gbc.setState(0x94ba, 0xafe0, 0x6c0, 0x8cac, 0xa111, 0xb066, 0x1, 0x0);
        gbc.writeMem(0x94ba, { 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xafe0, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x94ba));
        // 8F 011F
        gbc.setState(0x53b8, 0xb950, 0x31e0, 0xde37, 0xe06e, 0xac50, 0x1, 0x0);
        gbc.writeMem(0x53b8, { 0x8f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb950, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0120
        gbc.setState(0x7fbe, 0xe242, 0x3a70, 0x1dfa, 0x93ed, 0x72b7, 0x0, 0x1);
        gbc.writeMem(0x7fbe, { 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe242, gbc.sp());
        EXPECT(0x7fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0121
        gbc.setState(0x47a3, 0x4633, 0xba30, 0xfb2b, 0xf927, 0x9c08, 0x0, 0x0);
        gbc.writeMem(0x47a3, { 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4633, gbc.sp());
        EXPECT(0x47a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0122
        gbc.setState(0x11a8, 0x6714, 0x78f0, 0xc3b0, 0xffaa, 0x1e84, 0x0, 0x1);
        gbc.writeMem(0x11a8, { 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6714, gbc.sp());
        EXPECT(0x11a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0123
        gbc.setState(0x551d, 0xb067, 0x1200, 0x6a03, 0x4ea2, 0xec7c, 0x1, 0x0);
        gbc.writeMem(0x551d, { 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb067, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0124
        gbc.setState(0x9a87, 0x3c9c, 0x60a0, 0x1caa, 0x1d2c, 0xad49, 0x0, 0x1);
        gbc.writeMem(0x9a87, { 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3c9c, gbc.sp());
        EXPECT(0x9a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9a87));
        // 8F 0126
        gbc.setState(0xaa7, 0x23af, 0xe670, 0x8b67, 0xc2b6, 0x19c4, 0x0, 0x0);
        gbc.writeMem(0xaa7, { 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x23af, gbc.sp());
        EXPECT(0xaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0127
        gbc.setState(0x9adc, 0x27fd, 0x2c0, 0xb0e0, 0x66ed, 0xf357, 0x0, 0x0);
        gbc.writeMem(0x9adc, { 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x27fd, gbc.sp());
        EXPECT(0x9add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9adc));
        // 8F 0128
        gbc.setState(0xcdaf, 0x4e63, 0xd190, 0x91d6, 0xf1c8, 0xccd9, 0x0, 0x1);
        gbc.writeMem(0xcdaf, { 0x8f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4e63, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcdaf));
        // 8F 0129
        gbc.setState(0xcce8, 0x8ed4, 0x5c30, 0xc4e3, 0x5d47, 0xdd49, 0x0, 0x0);
        gbc.writeMem(0xcce8, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8ed4, gbc.sp());
        EXPECT(0xcce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcce8));
        // 8F 012A
        gbc.setState(0xe42d, 0xefcf, 0x2c00, 0xb150, 0xa814, 0x7654, 0x0, 0x1);
        gbc.writeMem(0xe42d, { 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0xe42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe42d));
        // 8F 012B
        gbc.setState(0x22d4, 0xb497, 0xdc20, 0x5e75, 0x87e5, 0xb1d5, 0x0, 0x1);
        gbc.writeMem(0x22d4, { 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb497, gbc.sp());
        EXPECT(0x22d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 012C
        gbc.setState(0xb1cb, 0xaea6, 0xf0f0, 0xaa1b, 0xd1b3, 0x8557, 0x0, 0x1);
        gbc.writeMem(0xb1cb, { 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaea6, gbc.sp());
        EXPECT(0xb1cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb1cb));
        // 8F 012D
        gbc.setState(0x23cd, 0x6939, 0xad00, 0x50dc, 0x2eb2, 0xb621, 0x0, 0x1);
        gbc.writeMem(0x23cd, { 0x8f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6939, gbc.sp());
        EXPECT(0x23ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 012E
        gbc.setState(0xb04d, 0x8b87, 0x5b0, 0xc551, 0x1253, 0x18fb, 0x1, 0x0);
        gbc.writeMem(0xb04d, { 0x8f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8b87, gbc.sp());
        EXPECT(0xb04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb04d));
        // 8F 012F
        gbc.setState(0x2b83, 0x4110, 0x8a30, 0xff3c, 0x5fe8, 0xe2fc, 0x0, 0x1);
        gbc.writeMem(0x2b83, { 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4110, gbc.sp());
        EXPECT(0x2b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0131
        gbc.setState(0x49d5, 0x9d48, 0x70, 0xdea6, 0x3c7, 0xf22e, 0x1, 0x0);
        gbc.writeMem(0x49d5, { 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9d48, gbc.sp());
        EXPECT(0x49d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0132
        gbc.setState(0x979a, 0x8c3e, 0x5630, 0x807c, 0x881d, 0xbc3b, 0x1, 0x0);
        gbc.writeMem(0x979a, { 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8c3e, gbc.sp());
        EXPECT(0x979b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x979a));
        // 8F 0133
        gbc.setState(0x4762, 0xc478, 0x4770, 0x8fee, 0xc56b, 0xd552, 0x0, 0x1);
        gbc.writeMem(0x4762, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc478, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0134
        gbc.setState(0x7731, 0xbb40, 0x7010, 0xf4be, 0x4292, 0x4d41, 0x1, 0x1);
        gbc.writeMem(0x7731, { 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbb40, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0135
        gbc.setState(0x75be, 0x1c5, 0x5730, 0x3932, 0x2a3, 0xa7f3, 0x0, 0x0);
        gbc.writeMem(0x75be, { 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1c5, gbc.sp());
        EXPECT(0x75bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0136
        gbc.setState(0x1770, 0xaa11, 0xc570, 0x98aa, 0xa5ba, 0x4159, 0x1, 0x0);
        gbc.writeMem(0x1770, { 0x8f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa11, gbc.sp());
        EXPECT(0x1771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0137
        gbc.setState(0x40db, 0x9636, 0x4550, 0xc291, 0xfb47, 0x4eb, 0x1, 0x1);
        gbc.writeMem(0x40db, { 0x8f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9636, gbc.sp());
        EXPECT(0x40dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0138
        gbc.setState(0xbbc8, 0xfecd, 0x1140, 0xa734, 0x796, 0x99f2, 0x0, 0x1);
        gbc.writeMem(0xbbc8, { 0x8f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfecd, gbc.sp());
        EXPECT(0xbbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbbc8));
        // 8F 0139
        gbc.setState(0xb7b0, 0x9403, 0x8900, 0x734e, 0x310e, 0xdcf0, 0x0, 0x0);
        gbc.writeMem(0xb7b0, { 0x8f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9403, gbc.sp());
        EXPECT(0xb7b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb7b0));
        // 8F 013A
        gbc.setState(0x1bbf, 0xf406, 0x1020, 0x4092, 0xe5aa, 0xeb52, 0x0, 0x1);
        gbc.writeMem(0x1bbf, { 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf406, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 013B
        gbc.setState(0xd46c, 0xd03, 0xc700, 0x71fe, 0x696d, 0x55bf, 0x1, 0x0);
        gbc.writeMem(0xd46c, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd03, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd46c));
        // 8F 013C
        gbc.setState(0x29a1, 0x10c1, 0xfbd0, 0xfcaf, 0xbf1a, 0x9dd8, 0x0, 0x0);
        gbc.writeMem(0x29a1, { 0x8f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x10c1, gbc.sp());
        EXPECT(0x29a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 013D
        gbc.setState(0x7881, 0xe95a, 0x46f0, 0x1b83, 0x5adc, 0x6583, 0x1, 0x1);
        gbc.writeMem(0x7881, { 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe95a, gbc.sp());
        EXPECT(0x7882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 013E
        gbc.setState(0x6c6a, 0x92f4, 0xbd30, 0xc245, 0x5bae, 0x4c8f, 0x1, 0x0);
        gbc.writeMem(0x6c6a, { 0x8f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0x6c6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 013F
        gbc.setState(0xd0da, 0x9aff, 0x64e0, 0xca51, 0xe978, 0xf880, 0x0, 0x1);
        gbc.writeMem(0xd0da, { 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9aff, gbc.sp());
        EXPECT(0xd0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd0da));
        // 8F 0140
        gbc.setState(0x2aa3, 0x35d6, 0xfc10, 0x4c83, 0xe5db, 0xec79, 0x0, 0x0);
        gbc.writeMem(0x2aa3, { 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x35d6, gbc.sp());
        EXPECT(0x2aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0141
        gbc.setState(0x8a31, 0x8e7b, 0xdd0, 0x2, 0x6f02, 0x8e23, 0x1, 0x1);
        gbc.writeMem(0x8a31, { 0x8f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8e7b, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a31));
        // 8F 0142
        gbc.setState(0xc8b9, 0x8dfc, 0xed90, 0x5f0e, 0x3a46, 0xfb73, 0x1, 0x0);
        gbc.writeMem(0xc8b9, { 0x8f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8dfc, gbc.sp());
        EXPECT(0xc8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc8b9));
        // 8F 0143
        gbc.setState(0x38c6, 0x6fa7, 0xae00, 0x56e7, 0xfdae, 0x7d16, 0x1, 0x0);
        gbc.writeMem(0x38c6, { 0x8f });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6fa7, gbc.sp());
        EXPECT(0x38c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0144
        gbc.setState(0x1512, 0x777c, 0xfd00, 0x3fe7, 0xb47d, 0x6ad4, 0x1, 0x1);
        gbc.writeMem(0x1512, { 0x8f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x777c, gbc.sp());
        EXPECT(0x1513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0145
        gbc.setState(0x86b3, 0x1980, 0xb1d0, 0x4c5e, 0x4a85, 0x4690, 0x0, 0x0);
        gbc.writeMem(0x86b3, { 0x8f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1980, gbc.sp());
        EXPECT(0x86b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x86b3));
        // 8F 0147
        gbc.setState(0x1034, 0x26cf, 0xef0, 0x8ea5, 0x83d0, 0x774b, 0x0, 0x1);
        gbc.writeMem(0x1034, { 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x26cf, gbc.sp());
        EXPECT(0x1035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0148
        gbc.setState(0x2fef, 0x4f08, 0x6c00, 0x18ed, 0x502e, 0x1b9f, 0x1, 0x1);
        gbc.writeMem(0x2fef, { 0x8f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4f08, gbc.sp());
        EXPECT(0x2ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0149
        gbc.setState(0xad2f, 0xb7aa, 0x4f0, 0x7747, 0xbfd2, 0xbe9a, 0x0, 0x1);
        gbc.writeMem(0xad2f, { 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb7aa, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xad2f));
        // 8F 014A
        gbc.setState(0xa58a, 0xa2e4, 0x64d0, 0x4a57, 0xe451, 0x2a54, 0x1, 0x0);
        gbc.writeMem(0xa58a, { 0x8f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa2e4, gbc.sp());
        EXPECT(0xa58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa58a));
        // 8F 014B
        gbc.setState(0xe677, 0x72ae, 0x31b0, 0x5627, 0x5bb3, 0x5d42, 0x1, 0x0);
        gbc.writeMem(0xe677, { 0x8f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x72ae, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe677));
        // 8F 014C
        gbc.setState(0xd02, 0xb027, 0x5f90, 0xd72d, 0xec67, 0x212f, 0x0, 0x1);
        gbc.writeMem(0xd02, { 0x8f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb027, gbc.sp());
        EXPECT(0xd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 014D
        gbc.setState(0x1dfc, 0xb05f, 0x5a30, 0x453a, 0x698a, 0x42bb, 0x1, 0x1);
        gbc.writeMem(0x1dfc, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb05f, gbc.sp());
        EXPECT(0x1dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 014E
        gbc.setState(0xbee7, 0xa080, 0xb4b0, 0x694, 0xafe0, 0xfba6, 0x0, 0x0);
        gbc.writeMem(0xbee7, { 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa080, gbc.sp());
        EXPECT(0xbee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbee7));
        // 8F 014F
        gbc.setState(0x2bdc, 0x7e8a, 0x7f30, 0x4a2c, 0xc5de, 0xcabb, 0x0, 0x1);
        gbc.writeMem(0x2bdc, { 0x8f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7e8a, gbc.sp());
        EXPECT(0x2bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0150
        gbc.setState(0x1c65, 0x9dfd, 0x3570, 0x5a24, 0x4cfd, 0xb0df, 0x0, 0x0);
        gbc.writeMem(0x1c65, { 0x8f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9dfd, gbc.sp());
        EXPECT(0x1c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0151
        gbc.setState(0x7cc, 0x5c54, 0x5a80, 0xc331, 0x8b4, 0xaa2d, 0x0, 0x0);
        gbc.writeMem(0x7cc, { 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5c54, gbc.sp());
        EXPECT(0x7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0152
        gbc.setState(0x3d4e, 0xeb45, 0x4c20, 0x4814, 0x3503, 0xb8e8, 0x0, 0x1);
        gbc.writeMem(0x3d4e, { 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xeb45, gbc.sp());
        EXPECT(0x3d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0154
        gbc.setState(0x743b, 0x715e, 0x9620, 0xa03f, 0xac1a, 0x25f3, 0x0, 0x1);
        gbc.writeMem(0x743b, { 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x715e, gbc.sp());
        EXPECT(0x743c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0155
        gbc.setState(0xe5f5, 0x6a16, 0x89c0, 0x50a, 0xfb95, 0x9a38, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0x8f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0xe5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe5f5));
        // 8F 0156
        gbc.setState(0x1891, 0xbc4a, 0x9d80, 0xd377, 0x150c, 0x496f, 0x0, 0x0);
        gbc.writeMem(0x1891, { 0x8f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbc4a, gbc.sp());
        EXPECT(0x1892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0157
        gbc.setState(0x10dd, 0xda88, 0x4e40, 0x56cd, 0x1485, 0x6593, 0x1, 0x1);
        gbc.writeMem(0x10dd, { 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xda88, gbc.sp());
        EXPECT(0x10de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0158
        gbc.setState(0xd6a4, 0xd951, 0x3280, 0x40e6, 0x2d31, 0xe3ba, 0x0, 0x0);
        gbc.writeMem(0xd6a4, { 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd951, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd6a4));
        // 8F 0159
        gbc.setState(0x918e, 0x3645, 0x3db0, 0xf32b, 0x2ca1, 0x81ed, 0x0, 0x0);
        gbc.writeMem(0x918e, { 0x8f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3645, gbc.sp());
        EXPECT(0x918f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x918e));
        // 8F 015A
        gbc.setState(0xdc53, 0xfcf6, 0x2a30, 0x69f1, 0xd253, 0x9445, 0x0, 0x0);
        gbc.writeMem(0xdc53, { 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xfcf6, gbc.sp());
        EXPECT(0xdc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdc53));
        // 8F 015B
        gbc.setState(0x5d4b, 0x26a4, 0x71b0, 0x8c55, 0xba24, 0x1189, 0x0, 0x1);
        gbc.writeMem(0x5d4b, { 0x8f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x26a4, gbc.sp());
        EXPECT(0x5d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 015C
        gbc.setState(0xd365, 0xeaa, 0xe890, 0xca01, 0xd507, 0x2448, 0x0, 0x0);
        gbc.writeMem(0xd365, { 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0xd366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd365));
        // 8F 015D
        gbc.setState(0x9dc5, 0xfbdb, 0xe900, 0xf0b8, 0xf41c, 0xd879, 0x1, 0x1);
        gbc.writeMem(0x9dc5, { 0x8f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfbdb, gbc.sp());
        EXPECT(0x9dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9dc5));
        // 8F 015E
        gbc.setState(0x219f, 0xf347, 0xef70, 0xe391, 0xb997, 0xcb96, 0x1, 0x1);
        gbc.writeMem(0x219f, { 0x8f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf347, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 015F
        gbc.setState(0xbc6d, 0x62ca, 0xdd80, 0xbd46, 0x5d7a, 0xd3ea, 0x0, 0x0);
        gbc.writeMem(0xbc6d, { 0x8f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x62ca, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbc6d));
        // 8F 0160
        gbc.setState(0xa6b3, 0x6ccc, 0x9ff0, 0x99ab, 0x6f3, 0x58f0, 0x1, 0x0);
        gbc.writeMem(0xa6b3, { 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6ccc, gbc.sp());
        EXPECT(0xa6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa6b3));
        // 8F 0161
        gbc.setState(0x8802, 0x82bc, 0x3c60, 0x16e8, 0x94d3, 0xbd6f, 0x0, 0x0);
        gbc.writeMem(0x8802, { 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x82bc, gbc.sp());
        EXPECT(0x8803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8802));
        // 8F 0162
        gbc.setState(0xbc99, 0x76ae, 0xee20, 0xde8e, 0x64a, 0x99db, 0x1, 0x1);
        gbc.writeMem(0xbc99, { 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x76ae, gbc.sp());
        EXPECT(0xbc9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbc99));
        // 8F 0163
        gbc.setState(0x8971, 0xf568, 0x3c30, 0xf369, 0x5a39, 0x3b3c, 0x0, 0x0);
        gbc.writeMem(0x8971, { 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf568, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8971));
        // 8F 0165
        gbc.setState(0xc54a, 0x91c8, 0xf360, 0xb09d, 0x9e0b, 0x8071, 0x1, 0x1);
        gbc.writeMem(0xc54a, { 0x8f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x91c8, gbc.sp());
        EXPECT(0xc54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc54a));
        // 8F 0166
        gbc.setState(0x860c, 0xfac8, 0xaed0, 0xf8b3, 0xe0e4, 0x2ed7, 0x0, 0x0);
        gbc.writeMem(0x860c, { 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfac8, gbc.sp());
        EXPECT(0x860d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x860c));
        // 8F 0167
        gbc.setState(0x57ff, 0x1c21, 0x17e0, 0xd2fc, 0xa5f, 0x2ea7, 0x1, 0x1);
        gbc.writeMem(0x57ff, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1c21, gbc.sp());
        EXPECT(0x5800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0168
        gbc.setState(0x58ce, 0xd63d, 0xdc0, 0xff18, 0x148e, 0x6bee, 0x1, 0x0);
        gbc.writeMem(0x58ce, { 0x8f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd63d, gbc.sp());
        EXPECT(0x58cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0169
        gbc.setState(0xa2a7, 0xee3b, 0x6e0, 0xb034, 0x5e2e, 0x2873, 0x0, 0x1);
        gbc.writeMem(0xa2a7, { 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xee3b, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa2a7));
        // 8F 016A
        gbc.setState(0x98b0, 0xbcc5, 0x1e20, 0x6576, 0x5132, 0x1d64, 0x1, 0x1);
        gbc.writeMem(0x98b0, { 0x8f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x98b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x98b0));
        // 8F 016B
        gbc.setState(0x73de, 0x87d3, 0x5ef0, 0x8084, 0x727b, 0x2b6c, 0x0, 0x1);
        gbc.writeMem(0x73de, { 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x87d3, gbc.sp());
        EXPECT(0x73df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 016C
        gbc.setState(0xe145, 0xf3ac, 0x93d0, 0x9783, 0xbfc6, 0xa74e, 0x0, 0x1);
        gbc.writeMem(0xe145, { 0x8f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0xe146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe145));
        // 8F 016D
        gbc.setState(0x17a2, 0xc96a, 0xfe10, 0x10d5, 0x86eb, 0xe535, 0x0, 0x0);
        gbc.writeMem(0x17a2, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc96a, gbc.sp());
        EXPECT(0x17a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 016E
        gbc.setState(0x7ba6, 0xdbf1, 0x86a0, 0xf7, 0x5de4, 0x6cf8, 0x1, 0x0);
        gbc.writeMem(0x7ba6, { 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0x7ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 016F
        gbc.setState(0x8864, 0x8c49, 0x5990, 0xfd3f, 0xe0c3, 0xc91d, 0x1, 0x0);
        gbc.writeMem(0x8864, { 0x8f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8c49, gbc.sp());
        EXPECT(0x8865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8864));
        // 8F 0170
        gbc.setState(0x66e1, 0x1987, 0x5820, 0xb3cb, 0xe32, 0x581a, 0x1, 0x1);
        gbc.writeMem(0x66e1, { 0x8f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0171
        gbc.setState(0x5400, 0xaf14, 0xcc70, 0x57cb, 0x7e53, 0xa4f4, 0x1, 0x0);
        gbc.writeMem(0x5400, { 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaf14, gbc.sp());
        EXPECT(0x5401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0172
        gbc.setState(0xc024, 0x194d, 0x6530, 0xcc26, 0xaa13, 0xdb09, 0x1, 0x0);
        gbc.writeMem(0xc024, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x194d, gbc.sp());
        EXPECT(0xc025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc024));
        // 8F 0173
        gbc.setState(0xd275, 0xb53a, 0x81d0, 0x27ac, 0xa8ff, 0x1336, 0x0, 0x0);
        gbc.writeMem(0xd275, { 0x8f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb53a, gbc.sp());
        EXPECT(0xd276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd275));
        // 8F 0174
        gbc.setState(0x3616, 0x953c, 0x1030, 0x4106, 0x6ad9, 0x6d41, 0x0, 0x1);
        gbc.writeMem(0x3616, { 0x8f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0x3617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0175
        gbc.setState(0x8be3, 0x2586, 0x1ca0, 0x2497, 0x327e, 0x9fe8, 0x0, 0x0);
        gbc.writeMem(0x8be3, { 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2586, gbc.sp());
        EXPECT(0x8be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8be3));
        // 8F 0176
        gbc.setState(0xecd9, 0x9ccb, 0xc900, 0x726c, 0xb250, 0x2f37, 0x1, 0x1);
        gbc.writeMem(0xecd9, { 0x8f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0xecda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xecd9));
        // 8F 0177
        gbc.setState(0x2574, 0xff4b, 0xea10, 0x9e01, 0x2653, 0x19ca, 0x1, 0x1);
        gbc.writeMem(0x2574, { 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xff4b, gbc.sp());
        EXPECT(0x2575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0178
        gbc.setState(0x9745, 0x529d, 0x990, 0x43dd, 0x6ab1, 0x34a0, 0x1, 0x0);
        gbc.writeMem(0x9745, { 0x8f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x529d, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9745));
        // 8F 0179
        gbc.setState(0x74e5, 0x816e, 0xc7e0, 0x3e14, 0xfb1, 0x1cbb, 0x0, 0x1);
        gbc.writeMem(0x74e5, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x816e, gbc.sp());
        EXPECT(0x74e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 017A
        gbc.setState(0x8973, 0xd893, 0x1f70, 0xd74d, 0x20ca, 0x7f7c, 0x1, 0x1);
        gbc.writeMem(0x8973, { 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd893, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8973));
        // 8F 017B
        gbc.setState(0x8a69, 0x724a, 0x9480, 0x9ac3, 0x96ea, 0x38cb, 0x0, 0x0);
        gbc.writeMem(0x8a69, { 0x8f });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x724a, gbc.sp());
        EXPECT(0x8a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a69));
        // 8F 017C
        gbc.setState(0x26c7, 0xbc2b, 0xbce0, 0xffc1, 0x90f6, 0x6d71, 0x1, 0x1);
        gbc.writeMem(0x26c7, { 0x8f });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0x26c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 017D
        gbc.setState(0x5093, 0xb790, 0x660, 0x1660, 0xe9ec, 0x24d, 0x1, 0x1);
        gbc.writeMem(0x5093, { 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb790, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 017E
        gbc.setState(0x77bf, 0x16b6, 0x5520, 0x480e, 0xed6a, 0xceb4, 0x1, 0x1);
        gbc.writeMem(0x77bf, { 0x8f });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 017F
        gbc.setState(0x7bb3, 0x4c84, 0xcea0, 0x4536, 0xc66f, 0x926d, 0x1, 0x0);
        gbc.writeMem(0x7bb3, { 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4c84, gbc.sp());
        EXPECT(0x7bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0180
        gbc.setState(0x3b81, 0x3589, 0x2680, 0xedad, 0xcc94, 0xeb08, 0x0, 0x1);
        gbc.writeMem(0x3b81, { 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3589, gbc.sp());
        EXPECT(0x3b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0181
        gbc.setState(0xe6f6, 0x7e21, 0x40c0, 0x98df, 0xde0d, 0x93e3, 0x1, 0x1);
        gbc.writeMem(0xe6f6, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7e21, gbc.sp());
        EXPECT(0xe6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe6f6));
        // 8F 0182
        gbc.setState(0x6da3, 0x5598, 0x56f0, 0x3d5, 0xacb3, 0xb71d, 0x1, 0x0);
        gbc.writeMem(0x6da3, { 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5598, gbc.sp());
        EXPECT(0x6da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0183
        gbc.setState(0xe09d, 0xa426, 0xc1f0, 0xf070, 0xf61f, 0x570d, 0x1, 0x0);
        gbc.writeMem(0xe09d, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa426, gbc.sp());
        EXPECT(0xe09e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe09d));
        // 8F 0184
        gbc.setState(0x8469, 0x88d, 0x2b30, 0xb508, 0x98bd, 0x639e, 0x0, 0x1);
        gbc.writeMem(0x8469, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x88d, gbc.sp());
        EXPECT(0x846a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8469));
        // 8F 0185
        gbc.setState(0x5714, 0x60fb, 0xcad0, 0xa950, 0x6d30, 0x8dc5, 0x0, 0x0);
        gbc.writeMem(0x5714, { 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x60fb, gbc.sp());
        EXPECT(0x5715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0186
        gbc.setState(0xc0a7, 0x11b2, 0x48e0, 0xf92f, 0x9914, 0x27a3, 0x0, 0x1);
        gbc.writeMem(0xc0a7, { 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0xc0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc0a7));
        // 8F 0187
        gbc.setState(0x3dfb, 0x704f, 0x18d0, 0xef61, 0x3882, 0x55e, 0x1, 0x0);
        gbc.writeMem(0x3dfb, { 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x704f, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0188
        gbc.setState(0xbf33, 0x8619, 0x5390, 0x3d33, 0xe980, 0x224b, 0x1, 0x1);
        gbc.writeMem(0xbf33, { 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8619, gbc.sp());
        EXPECT(0xbf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbf33));
        // 8F 0189
        gbc.setState(0x921, 0xfab2, 0x3210, 0x7e18, 0x6e90, 0xea8f, 0x0, 0x0);
        gbc.writeMem(0x921, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfab2, gbc.sp());
        EXPECT(0x922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 018A
        gbc.setState(0xa7da, 0x4b3e, 0xf220, 0xec64, 0xeeef, 0xa695, 0x1, 0x1);
        gbc.writeMem(0xa7da, { 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4b3e, gbc.sp());
        EXPECT(0xa7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa7da));
        // 8F 018B
        gbc.setState(0xe638, 0x7c01, 0x6bb0, 0x4fbd, 0x23e, 0x553b, 0x0, 0x1);
        gbc.writeMem(0xe638, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7c01, gbc.sp());
        EXPECT(0xe639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe638));
        // 8F 018C
        gbc.setState(0xc8dc, 0xdb88, 0xb5f0, 0x285b, 0x83db, 0x3277, 0x1, 0x0);
        gbc.writeMem(0xc8dc, { 0x8f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdb88, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc8dc));
        // 8F 018D
        gbc.setState(0xd9bf, 0x9fe3, 0x2210, 0xb37a, 0xfa0f, 0xa2de, 0x1, 0x0);
        gbc.writeMem(0xd9bf, { 0x8f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9fe3, gbc.sp());
        EXPECT(0xd9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd9bf));
        // 8F 018E
        gbc.setState(0x2480, 0xd79d, 0x3500, 0xea04, 0x921, 0xe972, 0x1, 0x0);
        gbc.writeMem(0x2480, { 0x8f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd79d, gbc.sp());
        EXPECT(0x2481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 018F
        gbc.setState(0x9383, 0x6138, 0xcef0, 0x146, 0x73fb, 0x7d5, 0x1, 0x0);
        gbc.writeMem(0x9383, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0x9384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9383));
        // 8F 0190
        gbc.setState(0x8a30, 0x2724, 0x7920, 0xc26a, 0x8119, 0x8042, 0x0, 0x1);
        gbc.writeMem(0x8a30, { 0x8f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2724, gbc.sp());
        EXPECT(0x8a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a30));
        // 8F 0192
        gbc.setState(0x37cc, 0x1b1b, 0x9f50, 0xa20c, 0x1acd, 0xf58c, 0x1, 0x1);
        gbc.writeMem(0x37cc, { 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1b1b, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0193
        gbc.setState(0x8928, 0xdae, 0xeb0, 0x1c53, 0xb4ce, 0x491c, 0x1, 0x1);
        gbc.writeMem(0x8928, { 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdae, gbc.sp());
        EXPECT(0x8929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8928));
        // 8F 0194
        gbc.setState(0x41ad, 0x24d3, 0xb1a0, 0xcb1d, 0x8449, 0x82f7, 0x0, 0x1);
        gbc.writeMem(0x41ad, { 0x8f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x24d3, gbc.sp());
        EXPECT(0x41ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0195
        gbc.setState(0x1ab3, 0x72d8, 0x4320, 0x8690, 0x7c55, 0xcc85, 0x1, 0x1);
        gbc.writeMem(0x1ab3, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0196
        gbc.setState(0x9191, 0xc1ca, 0xdf80, 0x3e1d, 0xa1f5, 0x672a, 0x0, 0x0);
        gbc.writeMem(0x9191, { 0x8f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc1ca, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9191));
        // 8F 0197
        gbc.setState(0xc7e3, 0xacf3, 0x4c40, 0xbe1c, 0x720, 0x5aa2, 0x1, 0x0);
        gbc.writeMem(0xc7e3, { 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xacf3, gbc.sp());
        EXPECT(0xc7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc7e3));
        // 8F 0198
        gbc.setState(0x5e7b, 0x6382, 0x86f0, 0xccaa, 0x1f14, 0x796e, 0x0, 0x0);
        gbc.writeMem(0x5e7b, { 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6382, gbc.sp());
        EXPECT(0x5e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0199
        gbc.setState(0x1d97, 0xf20d, 0x67f0, 0xf4a5, 0x863d, 0x10bc, 0x0, 0x1);
        gbc.writeMem(0x1d97, { 0x8f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf20d, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 019A
        gbc.setState(0x9243, 0xd5f1, 0xe720, 0xe7de, 0xb5d5, 0x1372, 0x1, 0x0);
        gbc.writeMem(0x9243, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd5f1, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9243));
        // 8F 019B
        gbc.setState(0x8631, 0x5422, 0x5b80, 0xd495, 0xe737, 0xe40a, 0x0, 0x0);
        gbc.writeMem(0x8631, { 0x8f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5422, gbc.sp());
        EXPECT(0x8632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8631));
        // 8F 019C
        gbc.setState(0x73ca, 0x2453, 0xda10, 0x9e55, 0x280e, 0xc4f0, 0x0, 0x0);
        gbc.writeMem(0x73ca, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x73cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 019D
        gbc.setState(0x8885, 0x78a0, 0x99b0, 0x37a, 0xf6a0, 0x2634, 0x0, 0x1);
        gbc.writeMem(0x8885, { 0x8f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x78a0, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8885));
        // 8F 019E
        gbc.setState(0x6503, 0x7a85, 0x40a0, 0x65a5, 0x40dc, 0x493d, 0x0, 0x1);
        gbc.writeMem(0x6503, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7a85, gbc.sp());
        EXPECT(0x6504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 019F
        gbc.setState(0x4c79, 0xe5c1, 0x9980, 0xb878, 0xdfc3, 0x8108, 0x0, 0x0);
        gbc.writeMem(0x4c79, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe5c1, gbc.sp());
        EXPECT(0x4c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01A0
        gbc.setState(0x2a40, 0x846c, 0x8a60, 0xd604, 0x4b2, 0x7035, 0x1, 0x1);
        gbc.writeMem(0x2a40, { 0x8f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x846c, gbc.sp());
        EXPECT(0x2a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01A1
        gbc.setState(0x9616, 0x33ea, 0x5b90, 0x6bf0, 0x966c, 0xf165, 0x0, 0x0);
        gbc.writeMem(0x9616, { 0x8f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x33ea, gbc.sp());
        EXPECT(0x9617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9616));
        // 8F 01A3
        gbc.setState(0x9291, 0x892a, 0xf780, 0x1704, 0x7ae4, 0x2143, 0x0, 0x0);
        gbc.writeMem(0x9291, { 0x8f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x892a, gbc.sp());
        EXPECT(0x9292, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9291));
        // 8F 01A4
        gbc.setState(0x5d29, 0xee76, 0x4e80, 0x9aec, 0x66bc, 0x517a, 0x1, 0x0);
        gbc.writeMem(0x5d29, { 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xee76, gbc.sp());
        EXPECT(0x5d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01A5
        gbc.setState(0xb27b, 0x311f, 0x1520, 0xce7, 0x15a8, 0xf24a, 0x1, 0x0);
        gbc.writeMem(0xb27b, { 0x8f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x311f, gbc.sp());
        EXPECT(0xb27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb27b));
        // 8F 01A6
        gbc.setState(0x7e51, 0x2dfe, 0x7210, 0x33bc, 0x6fc9, 0xe597, 0x1, 0x1);
        gbc.writeMem(0x7e51, { 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2dfe, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01A7
        gbc.setState(0x43ce, 0xb6c3, 0x5c50, 0x7a5b, 0xf76a, 0xb5a7, 0x0, 0x1);
        gbc.writeMem(0x43ce, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0x43cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01A8
        gbc.setState(0x56a1, 0xd4c, 0xf0b0, 0xc543, 0xe3cf, 0x6eb9, 0x1, 0x1);
        gbc.writeMem(0x56a1, { 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd4c, gbc.sp());
        EXPECT(0x56a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01A9
        gbc.setState(0xe7c3, 0xd3e4, 0x62c0, 0xbffa, 0x9621, 0x6ff, 0x1, 0x1);
        gbc.writeMem(0xe7c3, { 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd3e4, gbc.sp());
        EXPECT(0xe7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe7c3));
        // 8F 01AA
        gbc.setState(0x423d, 0x3ca4, 0x5600, 0x51ae, 0x3e63, 0x2473, 0x0, 0x1);
        gbc.writeMem(0x423d, { 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3ca4, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01AB
        gbc.setState(0x8de5, 0xbf65, 0x1910, 0x7c44, 0xde2c, 0x5f5f, 0x0, 0x1);
        gbc.writeMem(0x8de5, { 0x8f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0x8de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8de5));
        // 8F 01AC
        gbc.setState(0x5072, 0x9fd8, 0xb6d0, 0x3e31, 0xb0db, 0x4702, 0x1, 0x1);
        gbc.writeMem(0x5072, { 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9fd8, gbc.sp());
        EXPECT(0x5073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01AD
        gbc.setState(0x411d, 0x38d5, 0x8130, 0x238a, 0x4ed0, 0x8d28, 0x1, 0x1);
        gbc.writeMem(0x411d, { 0x8f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x38d5, gbc.sp());
        EXPECT(0x411e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01AE
        gbc.setState(0x7a72, 0x609f, 0x6580, 0x953, 0xded4, 0x6287, 0x0, 0x0);
        gbc.writeMem(0x7a72, { 0x8f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x609f, gbc.sp());
        EXPECT(0x7a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01AF
        gbc.setState(0x97d8, 0x1608, 0xca00, 0x2b4f, 0x5b4e, 0xae85, 0x1, 0x0);
        gbc.writeMem(0x97d8, { 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1608, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x97d8));
        // 8F 01B0
        gbc.setState(0xc606, 0x8309, 0xcdc0, 0x39b3, 0x813f, 0x7171, 0x0, 0x1);
        gbc.writeMem(0xc606, { 0x8f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0xc607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc606));
        // 8F 01B1
        gbc.setState(0x4f61, 0x3dec, 0x7e70, 0x65c8, 0xdead, 0x2432, 0x0, 0x0);
        gbc.writeMem(0x4f61, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01B2
        gbc.setState(0xec09, 0x3abc, 0xfe10, 0xbd5f, 0x266, 0xd0ed, 0x0, 0x1);
        gbc.writeMem(0xec09, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3abc, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xec09));
        // 8F 01B3
        gbc.setState(0x9c79, 0xe264, 0x5010, 0x3983, 0xb2e4, 0xe05c, 0x1, 0x0);
        gbc.writeMem(0x9c79, { 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe264, gbc.sp());
        EXPECT(0x9c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9c79));
        // 8F 01B4
        gbc.setState(0xd85e, 0xe31a, 0xa670, 0x61aa, 0x8279, 0x60b8, 0x0, 0x0);
        gbc.writeMem(0xd85e, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe31a, gbc.sp());
        EXPECT(0xd85f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd85e));
        // 8F 01B5
        gbc.setState(0x6ca0, 0xe89, 0x2d60, 0x31c6, 0x47c8, 0x7923, 0x0, 0x1);
        gbc.writeMem(0x6ca0, { 0x8f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01B6
        gbc.setState(0x3438, 0xa00b, 0x7260, 0x95c2, 0xe2d4, 0xec03, 0x0, 0x1);
        gbc.writeMem(0x3438, { 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa00b, gbc.sp());
        EXPECT(0x3439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01B7
        gbc.setState(0x6b67, 0x54e, 0xf490, 0x6818, 0x39be, 0xd4ee, 0x0, 0x0);
        gbc.writeMem(0x6b67, { 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x54e, gbc.sp());
        EXPECT(0x6b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01B8
        gbc.setState(0xaeda, 0xeada, 0xfdb0, 0x41b6, 0x80ee, 0x971f, 0x0, 0x0);
        gbc.writeMem(0xaeda, { 0x8f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xeada, gbc.sp());
        EXPECT(0xaedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaeda));
        // 8F 01B9
        gbc.setState(0xdec6, 0xd974, 0x3680, 0x8793, 0x782f, 0x1dc2, 0x0, 0x0);
        gbc.writeMem(0xdec6, { 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd974, gbc.sp());
        EXPECT(0xdec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdec6));
        // 8F 01BA
        gbc.setState(0xc2dd, 0x48f9, 0x1f30, 0x516e, 0x9544, 0xb5d5, 0x0, 0x1);
        gbc.writeMem(0xc2dd, { 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x48f9, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc2dd));
        // 8F 01BB
        gbc.setState(0xed2c, 0x2aeb, 0xc000, 0xad20, 0xcdeb, 0x31eb, 0x1, 0x0);
        gbc.writeMem(0xed2c, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2aeb, gbc.sp());
        EXPECT(0xed2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xed2c));
        // 8F 01BC
        gbc.setState(0xe5d7, 0x2247, 0x1310, 0x832b, 0x6d37, 0x2aff, 0x1, 0x1);
        gbc.writeMem(0xe5d7, { 0x8f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2247, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe5d7));
        // 8F 01BD
        gbc.setState(0x5b60, 0xd080, 0x3220, 0xd861, 0x176e, 0xe49c, 0x1, 0x0);
        gbc.writeMem(0x5b60, { 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd080, gbc.sp());
        EXPECT(0x5b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01BE
        gbc.setState(0x730e, 0x50d4, 0x1980, 0x93c2, 0xeab, 0xe0c1, 0x1, 0x1);
        gbc.writeMem(0x730e, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x50d4, gbc.sp());
        EXPECT(0x730f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01BF
        gbc.setState(0x5e55, 0xd605, 0x3e30, 0xc5f3, 0xc14d, 0xdc51, 0x0, 0x1);
        gbc.writeMem(0x5e55, { 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd605, gbc.sp());
        EXPECT(0x5e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01C0
        gbc.setState(0x3f81, 0xfacb, 0x12c0, 0x1f34, 0x3984, 0x1fb8, 0x0, 0x1);
        gbc.writeMem(0x3f81, { 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x3f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01C1
        gbc.setState(0x3403, 0xe6e8, 0xe1a0, 0x1d8c, 0xc0d4, 0x7dfa, 0x1, 0x0);
        gbc.writeMem(0x3403, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe6e8, gbc.sp());
        EXPECT(0x3404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01C2
        gbc.setState(0x7bb1, 0x27e7, 0x6ad0, 0xad16, 0x885d, 0xa7b4, 0x0, 0x1);
        gbc.writeMem(0x7bb1, { 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x27e7, gbc.sp());
        EXPECT(0x7bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01C3
        gbc.setState(0x1555, 0x741f, 0x40, 0x417e, 0xb9af, 0x493e, 0x0, 0x0);
        gbc.writeMem(0x1555, { 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x741f, gbc.sp());
        EXPECT(0x1556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01C4
        gbc.setState(0x5d39, 0x12ef, 0xc340, 0x6813, 0x6279, 0x4704, 0x0, 0x1);
        gbc.writeMem(0x5d39, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x12ef, gbc.sp());
        EXPECT(0x5d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01C5
        gbc.setState(0x4f0b, 0xccb8, 0x11c0, 0x7389, 0x6b0c, 0xba08, 0x1, 0x1);
        gbc.writeMem(0x4f0b, { 0x8f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xccb8, gbc.sp());
        EXPECT(0x4f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01C6
        gbc.setState(0xc48b, 0xbcdd, 0x9ca0, 0xafc0, 0xc159, 0xdadf, 0x0, 0x1);
        gbc.writeMem(0xc48b, { 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xbcdd, gbc.sp());
        EXPECT(0xc48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc48b));
        // 8F 01C7
        gbc.setState(0x190e, 0x8af1, 0x3e70, 0xdc28, 0x298e, 0xbd06, 0x0, 0x0);
        gbc.writeMem(0x190e, { 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8af1, gbc.sp());
        EXPECT(0x190f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01C8
        gbc.setState(0x29b1, 0x3ff8, 0x9c90, 0x86d9, 0xfd92, 0xc6a5, 0x0, 0x0);
        gbc.writeMem(0x29b1, { 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3ff8, gbc.sp());
        EXPECT(0x29b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01C9
        gbc.setState(0x36e3, 0xe465, 0x7170, 0x25b, 0xcf74, 0x133c, 0x0, 0x1);
        gbc.writeMem(0x36e3, { 0x8f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0x36e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01CA
        gbc.setState(0x9372, 0x9864, 0xfec0, 0x20a4, 0x4697, 0x990d, 0x1, 0x0);
        gbc.writeMem(0x9372, { 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9864, gbc.sp());
        EXPECT(0x9373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9372));
        // 8F 01CB
        gbc.setState(0x47bc, 0x8751, 0xa710, 0xe377, 0xf417, 0xf123, 0x0, 0x0);
        gbc.writeMem(0x47bc, { 0x8f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8751, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01CC
        gbc.setState(0x4b18, 0xc37f, 0xe460, 0xa1fd, 0xb424, 0x8972, 0x0, 0x1);
        gbc.writeMem(0x4b18, { 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc37f, gbc.sp());
        EXPECT(0x4b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01CD
        gbc.setState(0x3d9d, 0xb941, 0xa650, 0x773a, 0x7754, 0x4b6d, 0x1, 0x0);
        gbc.writeMem(0x3d9d, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0x3d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01CE
        gbc.setState(0x3fc4, 0x238c, 0xd170, 0x3bb, 0xbecd, 0xf9eb, 0x1, 0x1);
        gbc.writeMem(0x3fc4, { 0x8f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x238c, gbc.sp());
        EXPECT(0x3fc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01CF
        gbc.setState(0xdbee, 0x8003, 0xaff0, 0x1237, 0x8dbe, 0x38da, 0x1, 0x1);
        gbc.writeMem(0xdbee, { 0x8f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8003, gbc.sp());
        EXPECT(0xdbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdbee));
        // 8F 01D0
        gbc.setState(0x8a32, 0x739b, 0xd140, 0x1125, 0x4389, 0x2eae, 0x1, 0x1);
        gbc.writeMem(0x8a32, { 0x8f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0x8a33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a32));
        // 8F 01D1
        gbc.setState(0xd204, 0x769, 0x9760, 0xa272, 0xa755, 0xef2b, 0x1, 0x0);
        gbc.writeMem(0xd204, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x769, gbc.sp());
        EXPECT(0xd205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd204));
        // 8F 01D2
        gbc.setState(0x584d, 0x95b3, 0x8a30, 0xddeb, 0x6c38, 0x203a, 0x1, 0x0);
        gbc.writeMem(0x584d, { 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0x584e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01D3
        gbc.setState(0x46ec, 0xc05d, 0x1620, 0x6400, 0xaf31, 0x243a, 0x0, 0x1);
        gbc.writeMem(0x46ec, { 0x8f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc05d, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01D4
        gbc.setState(0xe749, 0xf4de, 0x7040, 0xc134, 0x144, 0x677e, 0x0, 0x1);
        gbc.writeMem(0xe749, { 0x8f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf4de, gbc.sp());
        EXPECT(0xe74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe749));
        // 8F 01D5
        gbc.setState(0x269e, 0x7620, 0xd610, 0xb4f0, 0xedff, 0x11b2, 0x0, 0x1);
        gbc.writeMem(0x269e, { 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x7620, gbc.sp());
        EXPECT(0x269f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01D6
        gbc.setState(0x695c, 0x4348, 0xb740, 0x2407, 0x2864, 0xdd3f, 0x0, 0x0);
        gbc.writeMem(0x695c, { 0x8f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4348, gbc.sp());
        EXPECT(0x695d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01D7
        gbc.setState(0x25ac, 0x45a2, 0x67e0, 0x57da, 0xf825, 0x3d0f, 0x0, 0x0);
        gbc.writeMem(0x25ac, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01D8
        gbc.setState(0x33d, 0x1250, 0xeab0, 0xe7a9, 0xf8cf, 0x5ef6, 0x0, 0x0);
        gbc.writeMem(0x33d, { 0x8f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1250, gbc.sp());
        EXPECT(0x33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01DA
        gbc.setState(0xa6c4, 0x8ca1, 0x1d30, 0xecba, 0x9540, 0xc740, 0x1, 0x0);
        gbc.writeMem(0xa6c4, { 0x8f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8ca1, gbc.sp());
        EXPECT(0xa6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa6c4));
        // 8F 01DB
        gbc.setState(0x2cab, 0x7677, 0xe0d0, 0x1e51, 0x9619, 0x200, 0x0, 0x1);
        gbc.writeMem(0x2cab, { 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7677, gbc.sp());
        EXPECT(0x2cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01DC
        gbc.setState(0x2ee4, 0x370a, 0x2630, 0x9b4a, 0x8b1b, 0x789, 0x1, 0x1);
        gbc.writeMem(0x2ee4, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x370a, gbc.sp());
        EXPECT(0x2ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01DD
        gbc.setState(0xd4d3, 0xe465, 0xe030, 0x7921, 0xbc92, 0x1fab, 0x0, 0x0);
        gbc.writeMem(0xd4d3, { 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe465, gbc.sp());
        EXPECT(0xd4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd4d3));
        // 8F 01DE
        gbc.setState(0x2e78, 0x8a33, 0xcff0, 0x31d, 0xd53d, 0xfff7, 0x0, 0x0);
        gbc.writeMem(0x2e78, { 0x8f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8a33, gbc.sp());
        EXPECT(0x2e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01DF
        gbc.setState(0xb1c6, 0x2507, 0x9ab0, 0x8f3f, 0x4bfa, 0x6568, 0x1, 0x0);
        gbc.writeMem(0xb1c6, { 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2507, gbc.sp());
        EXPECT(0xb1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb1c6));
        // 8F 01E0
        gbc.setState(0x4111, 0x3b0, 0xc840, 0xc27e, 0x5c0, 0x407d, 0x1, 0x0);
        gbc.writeMem(0x4111, { 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01E1
        gbc.setState(0xcad8, 0x720e, 0xdc70, 0x9afc, 0xfcf5, 0x8712, 0x0, 0x1);
        gbc.writeMem(0xcad8, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0xcad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcad8));
        // 8F 01E2
        gbc.setState(0xcb14, 0x4c79, 0x40c0, 0x5e35, 0xe76d, 0xaf03, 0x0, 0x1);
        gbc.writeMem(0xcb14, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4c79, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb14));
        // 8F 01E3
        gbc.setState(0x8df, 0x37ca, 0xf490, 0x7cdc, 0x877e, 0xce2, 0x1, 0x1);
        gbc.writeMem(0x8df, { 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x37ca, gbc.sp());
        EXPECT(0x8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01E4
        gbc.setState(0x875f, 0x4ce3, 0xf310, 0xa61d, 0x82bc, 0xb304, 0x0, 0x0);
        gbc.writeMem(0x875f, { 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x875f));
        // 8F 01E6
        gbc.setState(0x28fc, 0xbe92, 0xc450, 0x2316, 0x4da7, 0x5e13, 0x1, 0x1);
        gbc.writeMem(0x28fc, { 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbe92, gbc.sp());
        EXPECT(0x28fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01E7
        gbc.setState(0xa5fc, 0x6293, 0xbd60, 0x94c5, 0x43c0, 0x669, 0x0, 0x0);
        gbc.writeMem(0xa5fc, { 0x8f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0xa5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa5fc));
        // 8F 01E8
        gbc.setState(0x4c81, 0x966c, 0x32c0, 0x7bf8, 0x41f7, 0x8753, 0x1, 0x1);
        gbc.writeMem(0x4c81, { 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x966c, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01E9
        gbc.setState(0xe010, 0x6331, 0x2660, 0xa1b9, 0xb529, 0xdcf9, 0x0, 0x1);
        gbc.writeMem(0xe010, { 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6331, gbc.sp());
        EXPECT(0xe011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe010));
        // 8F 01EA
        gbc.setState(0xdb37, 0x229f, 0xcf00, 0x1d70, 0x7e36, 0xbea5, 0x0, 0x1);
        gbc.writeMem(0xdb37, { 0x8f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x229f, gbc.sp());
        EXPECT(0xdb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdb37));
        // 8F 01EB
        gbc.setState(0x743e, 0xa97b, 0x9ba0, 0xc93e, 0x47c0, 0xb693, 0x0, 0x1);
        gbc.writeMem(0x743e, { 0x8f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa97b, gbc.sp());
        EXPECT(0x743f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01ED
        gbc.setState(0x26a8, 0x57e1, 0x8500, 0xc94d, 0xf48, 0xe3c0, 0x0, 0x0);
        gbc.writeMem(0x26a8, { 0x8f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0x26a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01EE
        gbc.setState(0xb21e, 0x31d, 0xbc0, 0xff7c, 0x83d, 0x28c6, 0x1, 0x1);
        gbc.writeMem(0xb21e, { 0x8f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x31d, gbc.sp());
        EXPECT(0xb21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb21e));
        // 8F 01EF
        gbc.setState(0xd923, 0xa469, 0x93b0, 0x958a, 0xae63, 0x7ef0, 0x0, 0x0);
        gbc.writeMem(0xd923, { 0x8f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa469, gbc.sp());
        EXPECT(0xd924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd923));
        // 8F 01F0
        gbc.setState(0xd666, 0xaab2, 0x2bb0, 0x61ac, 0x3c92, 0x40f5, 0x0, 0x1);
        gbc.writeMem(0xd666, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xaab2, gbc.sp());
        EXPECT(0xd667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd666));
        // 8F 01F1
        gbc.setState(0x97d8, 0x24b6, 0x9ce0, 0xab9e, 0xb5d4, 0xa5db, 0x0, 0x1);
        gbc.writeMem(0x97d8, { 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x24b6, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x97d8));
        // 8F 01F2
        gbc.setState(0xe618, 0x87b4, 0x5030, 0x9da4, 0x95e3, 0x3b6e, 0x1, 0x0);
        gbc.writeMem(0xe618, { 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x87b4, gbc.sp());
        EXPECT(0xe619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe618));
        // 8F 01F3
        gbc.setState(0x22b2, 0xc181, 0xd3a0, 0x9ef2, 0xd9bb, 0x545b, 0x1, 0x1);
        gbc.writeMem(0x22b2, { 0x8f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc181, gbc.sp());
        EXPECT(0x22b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01F4
        gbc.setState(0xd80, 0x6925, 0x4380, 0xb299, 0xa51c, 0xc0dd, 0x0, 0x0);
        gbc.writeMem(0xd80, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6925, gbc.sp());
        EXPECT(0xd81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01F5
        gbc.setState(0xb483, 0x5c0f, 0x4590, 0xf2bb, 0x7786, 0xd6e1, 0x0, 0x1);
        gbc.writeMem(0xb483, { 0x8f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5c0f, gbc.sp());
        EXPECT(0xb484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb483));
        // 8F 01F7
        gbc.setState(0x74d6, 0x6349, 0x7b50, 0x119a, 0x76dc, 0x360a, 0x1, 0x0);
        gbc.writeMem(0x74d6, { 0x8f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x74d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01F8
        gbc.setState(0x9483, 0x5911, 0x1910, 0xcd8, 0x174e, 0x78d8, 0x1, 0x1);
        gbc.writeMem(0x9483, { 0x8f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5911, gbc.sp());
        EXPECT(0x9484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9483));
        // 8F 01F9
        gbc.setState(0x8055, 0x2f2b, 0x9830, 0x9f82, 0x7858, 0x6104, 0x1, 0x0);
        gbc.writeMem(0x8055, { 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2f2b, gbc.sp());
        EXPECT(0x8056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8055));
        // 8F 01FA
        gbc.setState(0xa2bd, 0x5df, 0x18c0, 0x50d3, 0x15ff, 0xa078, 0x1, 0x1);
        gbc.writeMem(0xa2bd, { 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5df, gbc.sp());
        EXPECT(0xa2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa2bd));
        // 8F 01FB
        gbc.setState(0x3b6, 0x1205, 0x8710, 0xf9db, 0x5884, 0xdd55, 0x0, 0x0);
        gbc.writeMem(0x3b6, { 0x8f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1205, gbc.sp());
        EXPECT(0x3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01FC
        gbc.setState(0x6a94, 0x56f5, 0xfcb0, 0x5ce6, 0xd4a7, 0x6dc9, 0x0, 0x0);
        gbc.writeMem(0x6a94, { 0x8f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x56f5, gbc.sp());
        EXPECT(0x6a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01FD
        gbc.setState(0x1d62, 0xb104, 0xaa80, 0x3930, 0xea5d, 0xbb53, 0x0, 0x0);
        gbc.writeMem(0x1d62, { 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb104, gbc.sp());
        EXPECT(0x1d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 01FE
        gbc.setState(0x17fe, 0x75a5, 0x7ad0, 0xf0eb, 0xb579, 0xa3e5, 0x0, 0x1);
        gbc.writeMem(0x17fe, { 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x75a5, gbc.sp());
        EXPECT(0x17ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 01FF
        gbc.setState(0xc0a6, 0x4a9c, 0xff70, 0x5892, 0xe555, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0xc0a6, { 0x8f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4a9c, gbc.sp());
        EXPECT(0xc0a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc0a6));
        // 8F 0200
        gbc.setState(0x6c1f, 0xc0e7, 0xd980, 0x3a5d, 0xaa08, 0x1dfc, 0x0, 0x0);
        gbc.writeMem(0x6c1f, { 0x8f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc0e7, gbc.sp());
        EXPECT(0x6c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0201
        gbc.setState(0x7613, 0xfa31, 0x19c0, 0xab7a, 0x7472, 0x25d8, 0x1, 0x1);
        gbc.writeMem(0x7613, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfa31, gbc.sp());
        EXPECT(0x7614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0202
        gbc.setState(0xcb8, 0x88a6, 0x2b10, 0x6310, 0xa018, 0x6bdc, 0x1, 0x0);
        gbc.writeMem(0xcb8, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x88a6, gbc.sp());
        EXPECT(0xcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0203
        gbc.setState(0x2aef, 0x31c, 0x70d0, 0x9b70, 0x3968, 0xe17f, 0x0, 0x1);
        gbc.writeMem(0x2aef, { 0x8f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x31c, gbc.sp());
        EXPECT(0x2af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0204
        gbc.setState(0xb4d8, 0x1230, 0xb040, 0x25b3, 0xc137, 0x381d, 0x1, 0x0);
        gbc.writeMem(0xb4d8, { 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1230, gbc.sp());
        EXPECT(0xb4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb4d8));
        // 8F 0205
        gbc.setState(0xdbb7, 0x6039, 0x1f60, 0x7b08, 0x776c, 0x4db0, 0x0, 0x0);
        gbc.writeMem(0xdbb7, { 0x8f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6039, gbc.sp());
        EXPECT(0xdbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdbb7));
        // 8F 0206
        gbc.setState(0x65fc, 0xbb2, 0x42a0, 0x3d3d, 0x88c0, 0x40d, 0x1, 0x0);
        gbc.writeMem(0x65fc, { 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbb2, gbc.sp());
        EXPECT(0x65fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0207
        gbc.setState(0xe5a1, 0x70a7, 0x4fb0, 0xbf93, 0xf3c9, 0x3956, 0x0, 0x0);
        gbc.writeMem(0xe5a1, { 0x8f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x70a7, gbc.sp());
        EXPECT(0xe5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe5a1));
        // 8F 0208
        gbc.setState(0x60b4, 0xc7ac, 0x99c0, 0x8ac0, 0xa4ca, 0x59b7, 0x1, 0x1);
        gbc.writeMem(0x60b4, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc7ac, gbc.sp());
        EXPECT(0x60b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0209
        gbc.setState(0xe681, 0x938, 0x7e30, 0x2f2d, 0xe974, 0xa376, 0x0, 0x1);
        gbc.writeMem(0xe681, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x938, gbc.sp());
        EXPECT(0xe682, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe681));
        // 8F 020A
        gbc.setState(0x7d7f, 0xc571, 0x4860, 0x297b, 0x4e13, 0x8737, 0x0, 0x1);
        gbc.writeMem(0x7d7f, { 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc571, gbc.sp());
        EXPECT(0x7d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 020B
        gbc.setState(0x55b5, 0x233f, 0xb8f0, 0x41b3, 0x9632, 0x5ace, 0x1, 0x0);
        gbc.writeMem(0x55b5, { 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x233f, gbc.sp());
        EXPECT(0x55b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 020C
        gbc.setState(0x71b9, 0xc5d6, 0xf3d0, 0x6f3d, 0x65e7, 0x480c, 0x0, 0x1);
        gbc.writeMem(0x71b9, { 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc5d6, gbc.sp());
        EXPECT(0x71ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 020D
        gbc.setState(0x57a6, 0x254e, 0xc2b0, 0xaa6c, 0xee02, 0x71ea, 0x0, 0x1);
        gbc.writeMem(0x57a6, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x254e, gbc.sp());
        EXPECT(0x57a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 020E
        gbc.setState(0x53f7, 0xf18c, 0xe9f0, 0xdaac, 0x1df1, 0x82a0, 0x1, 0x1);
        gbc.writeMem(0x53f7, { 0x8f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf18c, gbc.sp());
        EXPECT(0x53f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 020F
        gbc.setState(0x875f, 0x8425, 0xb000, 0x8f40, 0x70c4, 0x9024, 0x0, 0x0);
        gbc.writeMem(0x875f, { 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8425, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x875f));
        // 8F 0210
        gbc.setState(0x9f2a, 0xfcc7, 0x4250, 0x5751, 0x9de, 0xf18f, 0x1, 0x1);
        gbc.writeMem(0x9f2a, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0x9f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9f2a));
        // 8F 0211
        gbc.setState(0xe95c, 0xe069, 0xd6d0, 0xa7bb, 0xa793, 0xb67d, 0x0, 0x1);
        gbc.writeMem(0xe95c, { 0x8f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe069, gbc.sp());
        EXPECT(0xe95d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe95c));
        // 8F 0212
        gbc.setState(0xeb14, 0x60e3, 0x3500, 0xa05c, 0x4e1f, 0x2988, 0x0, 0x0);
        gbc.writeMem(0xeb14, { 0x8f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x60e3, gbc.sp());
        EXPECT(0xeb15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeb14));
        // 8F 0213
        gbc.setState(0x88ab, 0x961c, 0xf3f0, 0xa7a5, 0xd35, 0x9903, 0x0, 0x0);
        gbc.writeMem(0x88ab, { 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x961c, gbc.sp());
        EXPECT(0x88ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x88ab));
        // 8F 0214
        gbc.setState(0x9896, 0x57ca, 0xc080, 0xe24c, 0x53f, 0x1b3c, 0x0, 0x0);
        gbc.writeMem(0x9896, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x57ca, gbc.sp());
        EXPECT(0x9897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9896));
        // 8F 0215
        gbc.setState(0x9eff, 0xf68c, 0xc130, 0xe262, 0xbd89, 0xbf8b, 0x0, 0x0);
        gbc.writeMem(0x9eff, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf68c, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9eff));
        // 8F 0216
        gbc.setState(0xb8ae, 0x547b, 0xaa80, 0x8c96, 0x2a7, 0x9ef8, 0x0, 0x0);
        gbc.writeMem(0xb8ae, { 0x8f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0xb8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb8ae));
        // 8F 0217
        gbc.setState(0x2b6b, 0x4c71, 0x4d00, 0xbb00, 0xac3f, 0xc9c9, 0x1, 0x1);
        gbc.writeMem(0x2b6b, { 0x8f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4c71, gbc.sp());
        EXPECT(0x2b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0218
        gbc.setState(0x24f5, 0xf47d, 0xcc20, 0x4a35, 0xe4a3, 0x4b29, 0x1, 0x0);
        gbc.writeMem(0x24f5, { 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf47d, gbc.sp());
        EXPECT(0x24f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0219
        gbc.setState(0xb6e7, 0xcdcd, 0x9ab0, 0xe613, 0xc06f, 0x2dd, 0x1, 0x0);
        gbc.writeMem(0xb6e7, { 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcdcd, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb6e7));
        // 8F 021A
        gbc.setState(0xc1a1, 0x735b, 0xa070, 0x5d28, 0x167e, 0xaa47, 0x0, 0x1);
        gbc.writeMem(0xc1a1, { 0x8f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x735b, gbc.sp());
        EXPECT(0xc1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc1a1));
        // 8F 021B
        gbc.setState(0xed4, 0xc0b3, 0x4090, 0xd40a, 0x61fa, 0x7927, 0x1, 0x1);
        gbc.writeMem(0xed4, { 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc0b3, gbc.sp());
        EXPECT(0xed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 021C
        gbc.setState(0x9814, 0x6888, 0x8290, 0x9705, 0x6d30, 0xf206, 0x0, 0x0);
        gbc.writeMem(0x9814, { 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6888, gbc.sp());
        EXPECT(0x9815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9814));
        // 8F 021D
        gbc.setState(0x2222, 0x179f, 0xa110, 0x593e, 0x9d80, 0x2cd3, 0x1, 0x0);
        gbc.writeMem(0x2222, { 0x8f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 021E
        gbc.setState(0x4ebe, 0xbbac, 0xb3f0, 0xf4d, 0x577b, 0x945d, 0x0, 0x0);
        gbc.writeMem(0x4ebe, { 0x8f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0x4ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 021F
        gbc.setState(0x9e43, 0x49d3, 0x4030, 0x4cfb, 0x9da6, 0x3b6a, 0x1, 0x1);
        gbc.writeMem(0x9e43, { 0x8f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x49d3, gbc.sp());
        EXPECT(0x9e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9e43));
        // 8F 0220
        gbc.setState(0x8efb, 0xafb3, 0xf50, 0xf129, 0xdc91, 0x9c92, 0x0, 0x1);
        gbc.writeMem(0x8efb, { 0x8f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xafb3, gbc.sp());
        EXPECT(0x8efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8efb));
        // 8F 0221
        gbc.setState(0xc652, 0x28f3, 0x54c0, 0x3e9f, 0x6277, 0x1704, 0x1, 0x1);
        gbc.writeMem(0xc652, { 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x28f3, gbc.sp());
        EXPECT(0xc653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc652));
        // 8F 0222
        gbc.setState(0xe972, 0x2c59, 0x5f80, 0x9ba2, 0xe110, 0xcda5, 0x1, 0x0);
        gbc.writeMem(0xe972, { 0x8f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2c59, gbc.sp());
        EXPECT(0xe973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe972));
        // 8F 0223
        gbc.setState(0x6558, 0x6a21, 0x61e0, 0x7b08, 0xaddf, 0xed72, 0x0, 0x0);
        gbc.writeMem(0x6558, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6a21, gbc.sp());
        EXPECT(0x6559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0224
        gbc.setState(0x244f, 0x1e75, 0xf480, 0xa6b1, 0x805d, 0xe0d5, 0x1, 0x1);
        gbc.writeMem(0x244f, { 0x8f });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1e75, gbc.sp());
        EXPECT(0x2450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0225
        gbc.setState(0x81f8, 0xefd1, 0xaf60, 0x337e, 0x2f3a, 0x4a8, 0x1, 0x1);
        gbc.writeMem(0x81f8, { 0x8f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xefd1, gbc.sp());
        EXPECT(0x81f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x81f8));
        // 8F 0226
        gbc.setState(0xac2a, 0x63a4, 0x29d0, 0x563b, 0x7ba2, 0xb4ee, 0x1, 0x0);
        gbc.writeMem(0xac2a, { 0x8f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x63a4, gbc.sp());
        EXPECT(0xac2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xac2a));
        // 8F 0227
        gbc.setState(0x9a01, 0xa0d, 0x9920, 0x4324, 0xe07c, 0x29ac, 0x1, 0x0);
        gbc.writeMem(0x9a01, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0x9a02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9a01));
        // 8F 0228
        gbc.setState(0xb4a7, 0x7e1e, 0x42b0, 0xc52c, 0xdfc8, 0x421f, 0x0, 0x1);
        gbc.writeMem(0xb4a7, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7e1e, gbc.sp());
        EXPECT(0xb4a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb4a7));
        // 8F 0229
        gbc.setState(0xe592, 0xc083, 0x6080, 0x9f3f, 0xbdb5, 0x2cb3, 0x1, 0x0);
        gbc.writeMem(0xe592, { 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc083, gbc.sp());
        EXPECT(0xe593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe592));
        // 8F 022A
        gbc.setState(0x3586, 0xe843, 0x75f0, 0x5372, 0x77c7, 0xbea8, 0x0, 0x0);
        gbc.writeMem(0x3586, { 0x8f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe843, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 022B
        gbc.setState(0xbacc, 0x6355, 0x8bd0, 0xd0b, 0x658d, 0x92f1, 0x1, 0x0);
        gbc.writeMem(0xbacc, { 0x8f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6355, gbc.sp());
        EXPECT(0xbacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbacc));
        // 8F 022C
        gbc.setState(0x6960, 0x47bf, 0x41b0, 0xc413, 0xf79b, 0xacc9, 0x1, 0x1);
        gbc.writeMem(0x6960, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x47bf, gbc.sp());
        EXPECT(0x6961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 022D
        gbc.setState(0xe935, 0xc9c7, 0xcf0, 0xdbdc, 0x523b, 0x435a, 0x0, 0x1);
        gbc.writeMem(0xe935, { 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc9c7, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe935));
        // 8F 022E
        gbc.setState(0xbd4, 0xbb04, 0xd770, 0x2779, 0xda86, 0x4380, 0x1, 0x0);
        gbc.writeMem(0xbd4, { 0x8f });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbb04, gbc.sp());
        EXPECT(0xbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 022F
        gbc.setState(0x317b, 0x7d14, 0xd330, 0x4b9, 0x72c1, 0x9070, 0x0, 0x0);
        gbc.writeMem(0x317b, { 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7d14, gbc.sp());
        EXPECT(0x317c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0230
        gbc.setState(0xaf44, 0xce0f, 0x2400, 0x7a35, 0xd897, 0xff80, 0x1, 0x1);
        gbc.writeMem(0xaf44, { 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0xaf45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaf44));
        // 8F 0231
        gbc.setState(0x3dae, 0x9650, 0xb290, 0xb6a4, 0x5ff4, 0x9d98, 0x0, 0x1);
        gbc.writeMem(0x3dae, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0x3daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0232
        gbc.setState(0xc65d, 0xac83, 0xeb60, 0x2b8, 0x3c8b, 0x4281, 0x0, 0x1);
        gbc.writeMem(0xc65d, { 0x8f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xac83, gbc.sp());
        EXPECT(0xc65e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc65d));
        // 8F 0233
        gbc.setState(0x6c69, 0x2ea1, 0xcfe0, 0xbdb0, 0xbeff, 0x8df3, 0x1, 0x0);
        gbc.writeMem(0x6c69, { 0x8f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0x6c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0234
        gbc.setState(0x70db, 0x8b2, 0x80e0, 0x4bc3, 0xb7f2, 0xe26b, 0x0, 0x0);
        gbc.writeMem(0x70db, { 0x8f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8b2, gbc.sp());
        EXPECT(0x70dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0235
        gbc.setState(0x5e27, 0x69ec, 0xd440, 0xd55a, 0x3c1a, 0xe822, 0x1, 0x0);
        gbc.writeMem(0x5e27, { 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x69ec, gbc.sp());
        EXPECT(0x5e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0236
        gbc.setState(0x6b2c, 0x893c, 0xb070, 0xcd0e, 0x92a0, 0xbc7e, 0x0, 0x1);
        gbc.writeMem(0x6b2c, { 0x8f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x893c, gbc.sp());
        EXPECT(0x6b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0237
        gbc.setState(0xc07d, 0xd04, 0xbf30, 0x1463, 0xa4b7, 0x3434, 0x1, 0x1);
        gbc.writeMem(0xc07d, { 0x8f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd04, gbc.sp());
        EXPECT(0xc07e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc07d));
        // 8F 0239
        gbc.setState(0x8596, 0x9d98, 0x4130, 0x54c7, 0x7075, 0x2af6, 0x0, 0x1);
        gbc.writeMem(0x8596, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9d98, gbc.sp());
        EXPECT(0x8597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8596));
        // 8F 023A
        gbc.setState(0x264c, 0xa643, 0x2be0, 0x1da, 0x1dd2, 0x22b3, 0x0, 0x1);
        gbc.writeMem(0x264c, { 0x8f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa643, gbc.sp());
        EXPECT(0x264d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 023B
        gbc.setState(0x7049, 0xdc1d, 0x69c0, 0x80a4, 0xb874, 0x586f, 0x0, 0x1);
        gbc.writeMem(0x7049, { 0x8f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdc1d, gbc.sp());
        EXPECT(0x704a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 023D
        gbc.setState(0x3679, 0x48da, 0xdd90, 0xa61d, 0xa82, 0x4e67, 0x1, 0x1);
        gbc.writeMem(0x3679, { 0x8f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x48da, gbc.sp());
        EXPECT(0x367a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 023E
        gbc.setState(0xc5f2, 0xad15, 0xced0, 0xfd, 0xf9de, 0xaedf, 0x1, 0x0);
        gbc.writeMem(0xc5f2, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xad15, gbc.sp());
        EXPECT(0xc5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc5f2));
        // 8F 023F
        gbc.setState(0xd9f0, 0x4e0a, 0xe570, 0x1304, 0x9a5a, 0xae8b, 0x0, 0x1);
        gbc.writeMem(0xd9f0, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0xd9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd9f0));
        // 8F 0240
        gbc.setState(0x4ab2, 0x2e6c, 0x940, 0x901b, 0x450e, 0x5971, 0x0, 0x1);
        gbc.writeMem(0x4ab2, { 0x8f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2e6c, gbc.sp());
        EXPECT(0x4ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0241
        gbc.setState(0x959f, 0x8f22, 0x9040, 0x25f8, 0x1521, 0xcce6, 0x1, 0x0);
        gbc.writeMem(0x959f, { 0x8f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8f22, gbc.sp());
        EXPECT(0x95a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x959f));
        // 8F 0242
        gbc.setState(0x18d6, 0xa07b, 0xaf0, 0x3378, 0xd1b5, 0xaf61, 0x0, 0x1);
        gbc.writeMem(0x18d6, { 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0x18d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0243
        gbc.setState(0xe167, 0xec01, 0x3c0, 0xa0b8, 0xf016, 0x582, 0x0, 0x1);
        gbc.writeMem(0xe167, { 0x8f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xec01, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe167));
        // 8F 0244
        gbc.setState(0x45b8, 0xe939, 0x6d70, 0x2025, 0x22ca, 0xe50f, 0x0, 0x1);
        gbc.writeMem(0x45b8, { 0x8f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0x45b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0245
        gbc.setState(0x1a20, 0xd434, 0xfb80, 0xc37a, 0x21fc, 0xd55, 0x0, 0x1);
        gbc.writeMem(0x1a20, { 0x8f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x1a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0246
        gbc.setState(0xaca4, 0x55ea, 0xa490, 0xfbb3, 0x6e7, 0x1d5a, 0x1, 0x1);
        gbc.writeMem(0xaca4, { 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xaca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaca4));
        // 8F 0247
        gbc.setState(0x7ec3, 0xe4e0, 0x2150, 0x1e35, 0xe17e, 0x81f7, 0x1, 0x1);
        gbc.writeMem(0x7ec3, { 0x8f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe4e0, gbc.sp());
        EXPECT(0x7ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0248
        gbc.setState(0xcb18, 0x703e, 0x42b0, 0xf9d5, 0xd5ae, 0xd467, 0x0, 0x0);
        gbc.writeMem(0xcb18, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x703e, gbc.sp());
        EXPECT(0xcb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb18));
        // 8F 0249
        gbc.setState(0x40a7, 0xa48f, 0xb240, 0xf69a, 0xb26a, 0xa076, 0x1, 0x1);
        gbc.writeMem(0x40a7, { 0x8f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa48f, gbc.sp());
        EXPECT(0x40a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 024A
        gbc.setState(0x6464, 0x965c, 0xd1b0, 0xa57f, 0xb6d6, 0x5c88, 0x0, 0x0);
        gbc.writeMem(0x6464, { 0x8f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x965c, gbc.sp());
        EXPECT(0x6465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 024B
        gbc.setState(0x11ea, 0xd51, 0xbe20, 0x8c67, 0x6ba9, 0xd8f3, 0x1, 0x1);
        gbc.writeMem(0x11ea, { 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd51, gbc.sp());
        EXPECT(0x11eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 024C
        gbc.setState(0x4be7, 0x7154, 0x6e10, 0x2c30, 0xb1f, 0xde1c, 0x1, 0x1);
        gbc.writeMem(0x4be7, { 0x8f });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7154, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 024D
        gbc.setState(0xe8b0, 0xd401, 0x6660, 0x67fb, 0x3b4, 0x4917, 0x0, 0x0);
        gbc.writeMem(0xe8b0, { 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd401, gbc.sp());
        EXPECT(0xe8b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe8b0));
        // 8F 024E
        gbc.setState(0x4c18, 0x5926, 0xbba0, 0x27d6, 0xf70d, 0x2b0, 0x1, 0x0);
        gbc.writeMem(0x4c18, { 0x8f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5926, gbc.sp());
        EXPECT(0x4c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 024F
        gbc.setState(0xaa0d, 0xe197, 0xe3b0, 0x1f60, 0x1af3, 0x83c5, 0x0, 0x1);
        gbc.writeMem(0xaa0d, { 0x8f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe197, gbc.sp());
        EXPECT(0xaa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaa0d));
        // 8F 0251
        gbc.setState(0xb827, 0x9f02, 0x2bb0, 0x564d, 0x78a, 0x65b3, 0x0, 0x1);
        gbc.writeMem(0xb827, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0xb828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb827));
        // 8F 0252
        gbc.setState(0x6790, 0xf7d1, 0x3c70, 0xa586, 0xf70f, 0x6502, 0x0, 0x0);
        gbc.writeMem(0x6790, { 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf7d1, gbc.sp());
        EXPECT(0x6791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0253
        gbc.setState(0xe203, 0x4977, 0xa580, 0x3705, 0xddd6, 0x19d6, 0x0, 0x0);
        gbc.writeMem(0xe203, { 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4977, gbc.sp());
        EXPECT(0xe204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe203));
        // 8F 0254
        gbc.setState(0x2ad2, 0x1793, 0x3520, 0xc0e1, 0x5c37, 0x2eba, 0x0, 0x1);
        gbc.writeMem(0x2ad2, { 0x8f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1793, gbc.sp());
        EXPECT(0x2ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0255
        gbc.setState(0x3e89, 0x1f9f, 0x5780, 0x1f2a, 0xcff8, 0x4852, 0x1, 0x1);
        gbc.writeMem(0x3e89, { 0x8f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0x3e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0256
        gbc.setState(0x7a91, 0x4178, 0xf90, 0x11b1, 0x51ba, 0x4da0, 0x1, 0x0);
        gbc.writeMem(0x7a91, { 0x8f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4178, gbc.sp());
        EXPECT(0x7a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0258
        gbc.setState(0xcb7b, 0xfba1, 0x4e0, 0x5a76, 0xfb76, 0x7d14, 0x0, 0x1);
        gbc.writeMem(0xcb7b, { 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfba1, gbc.sp());
        EXPECT(0xcb7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb7b));
        // 8F 0259
        gbc.setState(0x512d, 0x62ef, 0x2fd0, 0x8eb5, 0xa72e, 0xfedd, 0x1, 0x1);
        gbc.writeMem(0x512d, { 0x8f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x62ef, gbc.sp());
        EXPECT(0x512e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 025A
        gbc.setState(0xae95, 0x7936, 0x3b90, 0x60d9, 0x2b3d, 0x25a0, 0x0, 0x0);
        gbc.writeMem(0xae95, { 0x8f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7936, gbc.sp());
        EXPECT(0xae96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xae95));
        // 8F 025B
        gbc.setState(0x2628, 0x5ddd, 0xd90, 0x6ec2, 0xe197, 0xf15e, 0x1, 0x1);
        gbc.writeMem(0x2628, { 0x8f });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0x2629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 025C
        gbc.setState(0x38cd, 0x843c, 0x3680, 0x4d89, 0xcf05, 0xd31a, 0x1, 0x1);
        gbc.writeMem(0x38cd, { 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x843c, gbc.sp());
        EXPECT(0x38ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 025D
        gbc.setState(0xaaa4, 0xbf30, 0xf660, 0xb882, 0xf2f9, 0x81a4, 0x1, 0x1);
        gbc.writeMem(0xaaa4, { 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbf30, gbc.sp());
        EXPECT(0xaaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaaa4));
        // 8F 025E
        gbc.setState(0x2136, 0x4c9a, 0xde30, 0xa9c0, 0x34e6, 0xc7b8, 0x1, 0x0);
        gbc.writeMem(0x2136, { 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4c9a, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 025F
        gbc.setState(0xc8f5, 0x9a4a, 0xb740, 0x4c71, 0x63d4, 0x2e77, 0x0, 0x0);
        gbc.writeMem(0xc8f5, { 0x8f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9a4a, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc8f5));
        // 8F 0260
        gbc.setState(0x91af, 0x17ec, 0x4430, 0xa0c6, 0x7151, 0x59a2, 0x1, 0x1);
        gbc.writeMem(0x91af, { 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x17ec, gbc.sp());
        EXPECT(0x91b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x91af));
        // 8F 0261
        gbc.setState(0x1d0b, 0x34d5, 0x93e0, 0x7003, 0x6aca, 0xa424, 0x1, 0x0);
        gbc.writeMem(0x1d0b, { 0x8f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x34d5, gbc.sp());
        EXPECT(0x1d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0262
        gbc.setState(0xa8cf, 0x90de, 0xfdc0, 0x45f9, 0x42fe, 0xe677, 0x1, 0x1);
        gbc.writeMem(0xa8cf, { 0x8f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x90de, gbc.sp());
        EXPECT(0xa8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa8cf));
        // 8F 0263
        gbc.setState(0xc583, 0x2f44, 0x1ac0, 0xd6c5, 0x7151, 0x9381, 0x0, 0x0);
        gbc.writeMem(0xc583, { 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2f44, gbc.sp());
        EXPECT(0xc584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc583));
        // 8F 0264
        gbc.setState(0x3e67, 0xfabb, 0x64d0, 0x9585, 0x3750, 0xa17b, 0x0, 0x0);
        gbc.writeMem(0x3e67, { 0x8f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfabb, gbc.sp());
        EXPECT(0x3e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0265
        gbc.setState(0xd275, 0x8ecf, 0x4e30, 0x9348, 0x7a12, 0xbdf0, 0x1, 0x1);
        gbc.writeMem(0xd275, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8ecf, gbc.sp());
        EXPECT(0xd276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd275));
        // 8F 0266
        gbc.setState(0x38c6, 0xecd2, 0x43b0, 0xb0df, 0x16e2, 0xfd89, 0x1, 0x0);
        gbc.writeMem(0x38c6, { 0x8f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xecd2, gbc.sp());
        EXPECT(0x38c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0267
        gbc.setState(0xd7c8, 0x7746, 0xff30, 0xca7d, 0x5bb7, 0x41a6, 0x0, 0x0);
        gbc.writeMem(0xd7c8, { 0x8f });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7746, gbc.sp());
        EXPECT(0xd7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd7c8));
        // 8F 0268
        gbc.setState(0xdec8, 0x558, 0xcaa0, 0x3ba5, 0x9680, 0xd55a, 0x0, 0x1);
        gbc.writeMem(0xdec8, { 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x558, gbc.sp());
        EXPECT(0xdec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdec8));
        // 8F 0269
        gbc.setState(0x73ef, 0x150b, 0xd4b0, 0x2e87, 0x548c, 0xbd7c, 0x0, 0x1);
        gbc.writeMem(0x73ef, { 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x150b, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 026A
        gbc.setState(0xd01, 0x97a8, 0x9ed0, 0x8c5e, 0x1403, 0xa6ab, 0x1, 0x1);
        gbc.writeMem(0xd01, { 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x97a8, gbc.sp());
        EXPECT(0xd02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 026B
        gbc.setState(0xecff, 0xecef, 0x3d30, 0xaf91, 0xed7, 0xee26, 0x1, 0x1);
        gbc.writeMem(0xecff, { 0x8f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0xed00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xecff));
        // 8F 026C
        gbc.setState(0xd118, 0xa716, 0x9670, 0xef95, 0xfd69, 0x4df9, 0x1, 0x1);
        gbc.writeMem(0xd118, { 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa716, gbc.sp());
        EXPECT(0xd119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd118));
        // 8F 026D
        gbc.setState(0x9a9b, 0x7e03, 0xc60, 0xabc0, 0xd0cb, 0x3738, 0x1, 0x1);
        gbc.writeMem(0x9a9b, { 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7e03, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9a9b));
        // 8F 026E
        gbc.setState(0x4ac4, 0xa7bd, 0xc780, 0x78e8, 0x421b, 0xf0c4, 0x0, 0x0);
        gbc.writeMem(0x4ac4, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa7bd, gbc.sp());
        EXPECT(0x4ac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 026F
        gbc.setState(0x7241, 0xe56c, 0x6bb0, 0xd766, 0x2971, 0x87b, 0x0, 0x0);
        gbc.writeMem(0x7241, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe56c, gbc.sp());
        EXPECT(0x7242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0270
        gbc.setState(0x17cc, 0x2b5a, 0x18c0, 0xc3c7, 0x3f0f, 0x726a, 0x1, 0x0);
        gbc.writeMem(0x17cc, { 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2b5a, gbc.sp());
        EXPECT(0x17cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0271
        gbc.setState(0x1ca2, 0xf6cd, 0x9980, 0x48af, 0x345e, 0xf98d, 0x0, 0x0);
        gbc.writeMem(0x1ca2, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0x1ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0272
        gbc.setState(0xede7, 0x2bad, 0xc7a0, 0xefff, 0xb507, 0xee9f, 0x1, 0x1);
        gbc.writeMem(0xede7, { 0x8f });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0xede8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xede7));
        // 8F 0273
        gbc.setState(0xb62, 0xe80, 0x4bb0, 0x5a0e, 0x7894, 0x5ba1, 0x0, 0x1);
        gbc.writeMem(0xb62, { 0x8f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe80, gbc.sp());
        EXPECT(0xb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0275
        gbc.setState(0x8999, 0x1fb1, 0xb800, 0x339f, 0xb10b, 0xf62d, 0x0, 0x1);
        gbc.writeMem(0x8999, { 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1fb1, gbc.sp());
        EXPECT(0x899a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8999));
        // 8F 0276
        gbc.setState(0x96ef, 0xed8, 0x93a0, 0x4d52, 0x6366, 0xbc17, 0x0, 0x0);
        gbc.writeMem(0x96ef, { 0x8f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xed8, gbc.sp());
        EXPECT(0x96f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x96ef));
        // 8F 0277
        gbc.setState(0x73e2, 0x2afc, 0xe510, 0x21e4, 0xce8a, 0x912, 0x0, 0x1);
        gbc.writeMem(0x73e2, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2afc, gbc.sp());
        EXPECT(0x73e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0278
        gbc.setState(0x44b1, 0xe2f8, 0x2ab0, 0x80fa, 0x2930, 0x22c1, 0x1, 0x1);
        gbc.writeMem(0x44b1, { 0x8f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe2f8, gbc.sp());
        EXPECT(0x44b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 027A
        gbc.setState(0x3fc8, 0x966d, 0xb50, 0x8a77, 0x1227, 0x627b, 0x1, 0x1);
        gbc.writeMem(0x3fc8, { 0x8f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x966d, gbc.sp());
        EXPECT(0x3fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 027B
        gbc.setState(0xd730, 0x3e1, 0xd380, 0x2a8e, 0x4850, 0x608b, 0x1, 0x1);
        gbc.writeMem(0xd730, { 0x8f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3e1, gbc.sp());
        EXPECT(0xd731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd730));
        // 8F 027C
        gbc.setState(0x985, 0x3b1b, 0x3e80, 0x29a8, 0x16fd, 0xeeea, 0x0, 0x1);
        gbc.writeMem(0x985, { 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 027D
        gbc.setState(0xbbdb, 0xfbb, 0x9f50, 0xa271, 0x83f7, 0x4d92, 0x1, 0x1);
        gbc.writeMem(0xbbdb, { 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfbb, gbc.sp());
        EXPECT(0xbbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbbdb));
        // 8F 027E
        gbc.setState(0x1f3e, 0x749, 0x5d60, 0x9f13, 0xf241, 0x9e7e, 0x0, 0x1);
        gbc.writeMem(0x1f3e, { 0x8f });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0x1f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 027F
        gbc.setState(0xbb78, 0x6eb6, 0xdaf0, 0x5c61, 0x93d6, 0x4c73, 0x1, 0x1);
        gbc.writeMem(0xbb78, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6eb6, gbc.sp());
        EXPECT(0xbb79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbb78));
        // 8F 0280
        gbc.setState(0xa235, 0xe30a, 0xdcb0, 0x44d8, 0xfdf3, 0xeb87, 0x1, 0x1);
        gbc.writeMem(0xa235, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe30a, gbc.sp());
        EXPECT(0xa236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa235));
        // 8F 0281
        gbc.setState(0x5417, 0xf495, 0x86f0, 0xee54, 0x766a, 0x5fa4, 0x1, 0x0);
        gbc.writeMem(0x5417, { 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf495, gbc.sp());
        EXPECT(0x5418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0282
        gbc.setState(0xe2bd, 0x435c, 0xab90, 0xd814, 0xfa7c, 0x69d0, 0x0, 0x0);
        gbc.writeMem(0xe2bd, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0xe2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe2bd));
        // 8F 0283
        gbc.setState(0x8e83, 0x4ed4, 0x9a90, 0x73f9, 0xf8ec, 0x60f6, 0x0, 0x0);
        gbc.writeMem(0x8e83, { 0x8f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4ed4, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8e83));
        // 8F 0284
        gbc.setState(0xd050, 0xea73, 0xfa80, 0x9e97, 0x45e0, 0x9cf9, 0x1, 0x0);
        gbc.writeMem(0xd050, { 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xea73, gbc.sp());
        EXPECT(0xd051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd050));
        // 8F 0285
        gbc.setState(0x189b, 0x370f, 0xd20, 0xdb69, 0xa5ca, 0x59aa, 0x1, 0x1);
        gbc.writeMem(0x189b, { 0x8f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0x189c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0286
        gbc.setState(0x7d5f, 0x9d46, 0x4e20, 0xe05, 0x53f5, 0x5064, 0x0, 0x0);
        gbc.writeMem(0x7d5f, { 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9d46, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0287
        gbc.setState(0xb7a1, 0x3b63, 0x99c0, 0x4e27, 0xa759, 0x6f17, 0x1, 0x0);
        gbc.writeMem(0xb7a1, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3b63, gbc.sp());
        EXPECT(0xb7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb7a1));
        // 8F 0288
        gbc.setState(0x5a43, 0x23ac, 0xe650, 0x520, 0x24d9, 0x680, 0x0, 0x1);
        gbc.writeMem(0x5a43, { 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x5a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0289
        gbc.setState(0xaad0, 0x6a35, 0xbfa0, 0x72aa, 0xcefa, 0x8bae, 0x1, 0x0);
        gbc.writeMem(0xaad0, { 0x8f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6a35, gbc.sp());
        EXPECT(0xaad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaad0));
        // 8F 028A
        gbc.setState(0xb30c, 0x12a6, 0x1eb0, 0x470e, 0x12a3, 0x8dd6, 0x0, 0x1);
        gbc.writeMem(0xb30c, { 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x12a6, gbc.sp());
        EXPECT(0xb30d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb30c));
        // 8F 028C
        gbc.setState(0xbeeb, 0x367e, 0xba10, 0x30f9, 0xa379, 0x61cc, 0x1, 0x0);
        gbc.writeMem(0xbeeb, { 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x367e, gbc.sp());
        EXPECT(0xbeec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbeeb));
        // 8F 028D
        gbc.setState(0x142c, 0x9eea, 0xcba0, 0x30e8, 0x5773, 0x42cb, 0x1, 0x0);
        gbc.writeMem(0x142c, { 0x8f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9eea, gbc.sp());
        EXPECT(0x142d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 028E
        gbc.setState(0x9c17, 0xef0e, 0x1fa0, 0xd524, 0xc1e3, 0xfa8e, 0x0, 0x0);
        gbc.writeMem(0x9c17, { 0x8f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xef0e, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9c17));
        // 8F 028F
        gbc.setState(0xefee, 0x9661, 0xa70, 0x992, 0x750b, 0xae9c, 0x1, 0x1);
        gbc.writeMem(0xefee, { 0x8f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0xefef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xefee));
        // 8F 0290
        gbc.setState(0x5b1, 0xec25, 0xec60, 0x967f, 0x99aa, 0xc7d4, 0x1, 0x1);
        gbc.writeMem(0x5b1, { 0x8f });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xec25, gbc.sp());
        EXPECT(0x5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0291
        gbc.setState(0xce9b, 0xca48, 0x640, 0xb394, 0x5e14, 0xcb65, 0x0, 0x0);
        gbc.writeMem(0xce9b, { 0x8f });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xca48, gbc.sp());
        EXPECT(0xce9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xce9b));
        // 8F 0292
        gbc.setState(0x1af3, 0x226a, 0xf500, 0xb8ad, 0xf57b, 0xf7f7, 0x0, 0x1);
        gbc.writeMem(0x1af3, { 0x8f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x226a, gbc.sp());
        EXPECT(0x1af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0293
        gbc.setState(0x6b56, 0xc0d8, 0x7450, 0xcfa1, 0xad9d, 0x8d77, 0x1, 0x0);
        gbc.writeMem(0x6b56, { 0x8f });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc0d8, gbc.sp());
        EXPECT(0x6b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0294
        gbc.setState(0xe7bd, 0xd3b2, 0x3ea0, 0x2bac, 0xa6b, 0x4ee6, 0x1, 0x1);
        gbc.writeMem(0xe7bd, { 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe7bd));
        // 8F 0295
        gbc.setState(0x8ca7, 0xe42, 0x6b10, 0x506c, 0x45ee, 0x17a6, 0x0, 0x0);
        gbc.writeMem(0x8ca7, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe42, gbc.sp());
        EXPECT(0x8ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8ca7));
        // 8F 0297
        gbc.setState(0xdee3, 0xf4f, 0x1e10, 0xbbc4, 0x518a, 0x69d2, 0x0, 0x1);
        gbc.writeMem(0xdee3, { 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf4f, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdee3));
        // 8F 0298
        gbc.setState(0x84c2, 0x701, 0x34a0, 0xc733, 0x5e5c, 0xddab, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x84c2));
        // 8F 0299
        gbc.setState(0x96c7, 0x1e66, 0x3eb0, 0x78ed, 0xc605, 0xfe9c, 0x1, 0x1);
        gbc.writeMem(0x96c7, { 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1e66, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x96c7));
        // 8F 029A
        gbc.setState(0x9637, 0x4dc1, 0x85c0, 0xcfd6, 0x4966, 0x8d94, 0x0, 0x1);
        gbc.writeMem(0x9637, { 0x8f });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4dc1, gbc.sp());
        EXPECT(0x9638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9637));
        // 8F 029B
        gbc.setState(0x371a, 0xf5b3, 0x5a10, 0x118d, 0x5bf8, 0xf45d, 0x1, 0x1);
        gbc.writeMem(0x371a, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0x371b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 029C
        gbc.setState(0x9ff9, 0x1015, 0xb30, 0x1eec, 0xd1d5, 0x6f30, 0x0, 0x1);
        gbc.writeMem(0x9ff9, { 0x8f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1015, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9ff9));
        // 8F 029D
        gbc.setState(0xdb5f, 0x2fb2, 0x1cb0, 0xf948, 0x164c, 0xa711, 0x0, 0x0);
        gbc.writeMem(0xdb5f, { 0x8f });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0xdb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdb5f));
        // 8F 029F
        gbc.setState(0x5226, 0xb663, 0xe020, 0x8fa7, 0xc9a3, 0x5768, 0x0, 0x0);
        gbc.writeMem(0x5226, { 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb663, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02A0
        gbc.setState(0x5153, 0xdc45, 0xeae0, 0x1655, 0x82f7, 0xd42c, 0x1, 0x0);
        gbc.writeMem(0x5153, { 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdc45, gbc.sp());
        EXPECT(0x5154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02A1
        gbc.setState(0xe16a, 0xe1e, 0xfda0, 0x2040, 0xd15a, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0xe16a, { 0x8f });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe1e, gbc.sp());
        EXPECT(0xe16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe16a));
        // 8F 02A2
        gbc.setState(0xb9d5, 0x3e38, 0x2bf0, 0xdd7c, 0x3e27, 0xd10a, 0x1, 0x1);
        gbc.writeMem(0xb9d5, { 0x8f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3e38, gbc.sp());
        EXPECT(0xb9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb9d5));
        // 8F 02A3
        gbc.setState(0xeecf, 0x2534, 0x5410, 0xdb1f, 0xa87a, 0x1575, 0x1, 0x1);
        gbc.writeMem(0xeecf, { 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2534, gbc.sp());
        EXPECT(0xeed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeecf));
        // 8F 02A4
        gbc.setState(0x8df, 0x8360, 0x1ae0, 0xde3f, 0x7e77, 0xe69b, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02A5
        gbc.setState(0xec7e, 0xa3cf, 0x7850, 0x6e03, 0x6bea, 0x792e, 0x0, 0x0);
        gbc.writeMem(0xec7e, { 0x8f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa3cf, gbc.sp());
        EXPECT(0xec7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xec7e));
        // 8F 02A6
        gbc.setState(0x7a98, 0x3543, 0xbac0, 0x44d3, 0x4263, 0xd2aa, 0x0, 0x1);
        gbc.writeMem(0x7a98, { 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3543, gbc.sp());
        EXPECT(0x7a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02A7
        gbc.setState(0x8e9a, 0x3db9, 0x5c50, 0x5923, 0x2e3c, 0x4831, 0x1, 0x0);
        gbc.writeMem(0x8e9a, { 0x8f });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3db9, gbc.sp());
        EXPECT(0x8e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8e9a));
        // 8F 02A8
        gbc.setState(0x63e2, 0x21f8, 0xaf00, 0x5f87, 0x9316, 0x7ae8, 0x1, 0x0);
        gbc.writeMem(0x63e2, { 0x8f });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x21f8, gbc.sp());
        EXPECT(0x63e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02A9
        gbc.setState(0x8a7d, 0x2913, 0x6270, 0x53f3, 0xd927, 0x8dda, 0x1, 0x0);
        gbc.writeMem(0x8a7d, { 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2913, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a7d));
        // 8F 02AA
        gbc.setState(0xde66, 0x9d87, 0xbea0, 0x7d95, 0x6cc3, 0x70a5, 0x0, 0x0);
        gbc.writeMem(0xde66, { 0x8f });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9d87, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xde66));
        // 8F 02AB
        gbc.setState(0x55fe, 0x4f90, 0x50, 0xc63e, 0xbf0c, 0x1a29, 0x0, 0x1);
        gbc.writeMem(0x55fe, { 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4f90, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02AC
        gbc.setState(0x9e77, 0x1595, 0x9560, 0xd8f2, 0x3fb0, 0x66df, 0x0, 0x1);
        gbc.writeMem(0x9e77, { 0x8f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1595, gbc.sp());
        EXPECT(0x9e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9e77));
        // 8F 02AD
        gbc.setState(0x2059, 0x2088, 0x3d60, 0xc5e6, 0x1562, 0x282, 0x0, 0x0);
        gbc.writeMem(0x2059, { 0x8f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0x205a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02AE
        gbc.setState(0xb4ea, 0x6a6b, 0x1e90, 0x6abe, 0x4f11, 0x52c1, 0x1, 0x1);
        gbc.writeMem(0xb4ea, { 0x8f });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a6b, gbc.sp());
        EXPECT(0xb4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb4ea));
        // 8F 02AF
        gbc.setState(0x4986, 0x4371, 0x38d0, 0xd7d2, 0x3f0a, 0xdcf2, 0x1, 0x0);
        gbc.writeMem(0x4986, { 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4371, gbc.sp());
        EXPECT(0x4987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02B0
        gbc.setState(0x55a8, 0x31bb, 0xf50, 0xc7f7, 0x792, 0xb6c6, 0x1, 0x1);
        gbc.writeMem(0x55a8, { 0x8f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x31bb, gbc.sp());
        EXPECT(0x55a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02B1
        gbc.setState(0x2332, 0xac9d, 0x17f0, 0xcc66, 0x2319, 0xf7c8, 0x1, 0x1);
        gbc.writeMem(0x2332, { 0x8f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xac9d, gbc.sp());
        EXPECT(0x2333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02B2
        gbc.setState(0x952f, 0x3624, 0x160, 0x3ad, 0x66b0, 0x493f, 0x0, 0x0);
        gbc.writeMem(0x952f, { 0x8f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3624, gbc.sp());
        EXPECT(0x9530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x952f));
        // 8F 02B3
        gbc.setState(0xbdb3, 0xda7a, 0x9d80, 0xdb2c, 0x8b96, 0x22f9, 0x0, 0x1);
        gbc.writeMem(0xbdb3, { 0x8f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xda7a, gbc.sp());
        EXPECT(0xbdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbdb3));
        // 8F 02B4
        gbc.setState(0x58a9, 0x4c51, 0x6950, 0xe24c, 0x703, 0x68ea, 0x1, 0x0);
        gbc.writeMem(0x58a9, { 0x8f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0x58aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02B5
        gbc.setState(0xbda3, 0x8221, 0x53f0, 0x22c0, 0x11dc, 0x2c22, 0x0, 0x1);
        gbc.writeMem(0xbda3, { 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8221, gbc.sp());
        EXPECT(0xbda4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbda3));
        // 8F 02B6
        gbc.setState(0xd8d5, 0x94b3, 0xddb0, 0xa8b7, 0x496e, 0x7246, 0x0, 0x0);
        gbc.writeMem(0xd8d5, { 0x8f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x94b3, gbc.sp());
        EXPECT(0xd8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd8d5));
        // 8F 02B8
        gbc.setState(0x784e, 0xade4, 0xe180, 0xb8a1, 0xe18f, 0x2505, 0x0, 0x1);
        gbc.writeMem(0x784e, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xade4, gbc.sp());
        EXPECT(0x784f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02B9
        gbc.setState(0x9c38, 0xc647, 0xf1a0, 0x58c1, 0x2a85, 0x813c, 0x1, 0x0);
        gbc.writeMem(0x9c38, { 0x8f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc647, gbc.sp());
        EXPECT(0x9c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9c38));
        // 8F 02BA
        gbc.setState(0x636, 0xbdcc, 0xda90, 0x3cf5, 0x7058, 0xdfd5, 0x1, 0x1);
        gbc.writeMem(0x636, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbdcc, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02BB
        gbc.setState(0x5e77, 0xd201, 0x3270, 0x3ad7, 0x3b76, 0x6655, 0x0, 0x1);
        gbc.writeMem(0x5e77, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x5e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02BC
        gbc.setState(0xc829, 0x462e, 0x9200, 0x2dcf, 0x709a, 0xa95e, 0x0, 0x1);
        gbc.writeMem(0xc829, { 0x8f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0xc82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc829));
        // 8F 02BD
        gbc.setState(0x39f3, 0xe303, 0x2680, 0x22da, 0x38df, 0xcefc, 0x0, 0x1);
        gbc.writeMem(0x39f3, { 0x8f });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0x39f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02BE
        gbc.setState(0xaa33, 0xbbd5, 0xe870, 0x8208, 0x4260, 0x40d6, 0x1, 0x0);
        gbc.writeMem(0xaa33, { 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbbd5, gbc.sp());
        EXPECT(0xaa34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaa33));
        // 8F 02BF
        gbc.setState(0xba4f, 0xf7a7, 0xdf70, 0x8602, 0x6afe, 0x90cd, 0x1, 0x0);
        gbc.writeMem(0xba4f, { 0x8f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf7a7, gbc.sp());
        EXPECT(0xba50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xba4f));
        // 8F 02C0
        gbc.setState(0xc84d, 0x9be3, 0x3a50, 0xb71d, 0xd1fb, 0xa63, 0x1, 0x0);
        gbc.writeMem(0xc84d, { 0x8f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9be3, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc84d));
        // 8F 02C1
        gbc.setState(0x8608, 0x1d21, 0x72c0, 0xb7c2, 0x5f8d, 0x8669, 0x0, 0x0);
        gbc.writeMem(0x8608, { 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1d21, gbc.sp());
        EXPECT(0x8609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8608));
        // 8F 02C2
        gbc.setState(0x765e, 0x3a8b, 0xc490, 0xa4e4, 0xe512, 0xab88, 0x1, 0x0);
        gbc.writeMem(0x765e, { 0x8f });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x3a8b, gbc.sp());
        EXPECT(0x765f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02C3
        gbc.setState(0xae01, 0x4dfc, 0xb8b0, 0xf6e, 0x1f6, 0xe81c, 0x0, 0x1);
        gbc.writeMem(0xae01, { 0x8f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4dfc, gbc.sp());
        EXPECT(0xae02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xae01));
        // 8F 02C4
        gbc.setState(0x7ce, 0x82f8, 0x3880, 0x6ee3, 0xf057, 0x8172, 0x0, 0x0);
        gbc.writeMem(0x7ce, { 0x8f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x82f8, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02C5
        gbc.setState(0x97c8, 0xe0fa, 0xaf10, 0xf57b, 0xed60, 0x4411, 0x0, 0x0);
        gbc.writeMem(0x97c8, { 0x8f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0x97c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x97c8));
        // 8F 02C6
        gbc.setState(0xfbf, 0x6335, 0x7cc0, 0xd79c, 0xb93a, 0xbb9e, 0x0, 0x0);
        gbc.writeMem(0xfbf, { 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6335, gbc.sp());
        EXPECT(0xfc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02C7
        gbc.setState(0x5d45, 0xa767, 0x6d60, 0xec95, 0x4d29, 0x32ec, 0x1, 0x1);
        gbc.writeMem(0x5d45, { 0x8f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa767, gbc.sp());
        EXPECT(0x5d46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02C8
        gbc.setState(0xeaab, 0x42c4, 0x86f0, 0xa8b0, 0xfd77, 0xe968, 0x0, 0x1);
        gbc.writeMem(0xeaab, { 0x8f });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x42c4, gbc.sp());
        EXPECT(0xeaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeaab));
        // 8F 02C9
        gbc.setState(0x2d74, 0x136, 0x84a0, 0xd46f, 0x521a, 0xdab9, 0x0, 0x1);
        gbc.writeMem(0x2d74, { 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x136, gbc.sp());
        EXPECT(0x2d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02CA
        gbc.setState(0x3479, 0x5efd, 0x52e0, 0xa813, 0x4bc5, 0xd564, 0x1, 0x1);
        gbc.writeMem(0x3479, { 0x8f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5efd, gbc.sp());
        EXPECT(0x347a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02CB
        gbc.setState(0xda39, 0x795, 0x69d0, 0x790d, 0x4245, 0x6505, 0x0, 0x0);
        gbc.writeMem(0xda39, { 0x8f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x795, gbc.sp());
        EXPECT(0xda3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xda39));
        // 8F 02CC
        gbc.setState(0xddcb, 0x32d3, 0x60f0, 0x66a, 0xc64b, 0x28ba, 0x1, 0x1);
        gbc.writeMem(0xddcb, { 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x32d3, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xddcb));
        // 8F 02CD
        gbc.setState(0x9f02, 0xa7c8, 0xf660, 0xeaa0, 0xef19, 0x46de, 0x0, 0x0);
        gbc.writeMem(0x9f02, { 0x8f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa7c8, gbc.sp());
        EXPECT(0x9f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9f02));
        // 8F 02CE
        gbc.setState(0xb4f, 0xda90, 0x6120, 0x4751, 0x5e42, 0x1290, 0x0, 0x0);
        gbc.writeMem(0xb4f, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xda90, gbc.sp());
        EXPECT(0xb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02CF
        gbc.setState(0x2d72, 0xc54e, 0x96b0, 0x7372, 0x2372, 0x6f90, 0x1, 0x0);
        gbc.writeMem(0x2d72, { 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc54e, gbc.sp());
        EXPECT(0x2d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02D0
        gbc.setState(0xaf0e, 0x8b, 0x4220, 0xcd24, 0xac7d, 0x6824, 0x1, 0x1);
        gbc.writeMem(0xaf0e, { 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8b, gbc.sp());
        EXPECT(0xaf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaf0e));
        // 8F 02D1
        gbc.setState(0x6a33, 0xfc0a, 0xe5e0, 0xa4b9, 0xebef, 0x7136, 0x1, 0x1);
        gbc.writeMem(0x6a33, { 0x8f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0x6a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02D3
        gbc.setState(0xd958, 0xf68, 0x1760, 0x8e6e, 0x8d9e, 0x4b4a, 0x1, 0x0);
        gbc.writeMem(0xd958, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf68, gbc.sp());
        EXPECT(0xd959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd958));
        // 8F 02D4
        gbc.setState(0x22e5, 0xe8ea, 0x4c50, 0x6306, 0xc0b5, 0xfb26, 0x1, 0x0);
        gbc.writeMem(0x22e5, { 0x8f });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe8ea, gbc.sp());
        EXPECT(0x22e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02D5
        gbc.setState(0x5f5e, 0xd71a, 0xc420, 0x182b, 0xac1d, 0xddf8, 0x0, 0x1);
        gbc.writeMem(0x5f5e, { 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd71a, gbc.sp());
        EXPECT(0x5f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02D6
        gbc.setState(0x4a98, 0x2fa7, 0x7c80, 0x7234, 0x3acf, 0x6ed3, 0x1, 0x1);
        gbc.writeMem(0x4a98, { 0x8f });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2fa7, gbc.sp());
        EXPECT(0x4a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02D7
        gbc.setState(0x3942, 0xa174, 0x3140, 0xf596, 0x21fc, 0xa51, 0x1, 0x1);
        gbc.writeMem(0x3942, { 0x8f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa174, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02D8
        gbc.setState(0x676, 0x22c5, 0xad90, 0xbc55, 0xa2c7, 0x6c18, 0x1, 0x0);
        gbc.writeMem(0x676, { 0x8f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02D9
        gbc.setState(0xeb69, 0x3d1, 0xcee0, 0x97a, 0x14a2, 0xe0da, 0x1, 0x1);
        gbc.writeMem(0xeb69, { 0x8f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3d1, gbc.sp());
        EXPECT(0xeb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeb69));
        // 8F 02DA
        gbc.setState(0x6089, 0xf94, 0xa310, 0xbb9a, 0x96ed, 0x37c2, 0x1, 0x0);
        gbc.writeMem(0x6089, { 0x8f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf94, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02DB
        gbc.setState(0x2697, 0x84cd, 0xeb10, 0xb85e, 0x4171, 0x544b, 0x0, 0x0);
        gbc.writeMem(0x2697, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x84cd, gbc.sp());
        EXPECT(0x2698, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02DC
        gbc.setState(0xc6de, 0x4675, 0x5c20, 0x415, 0xcf03, 0x1518, 0x1, 0x1);
        gbc.writeMem(0xc6de, { 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4675, gbc.sp());
        EXPECT(0xc6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc6de));
        // 8F 02DD
        gbc.setState(0x658c, 0xc7d4, 0x2e30, 0x3b7a, 0x2416, 0x26b2, 0x1, 0x0);
        gbc.writeMem(0x658c, { 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc7d4, gbc.sp());
        EXPECT(0x658d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02DE
        gbc.setState(0xab20, 0xc632, 0xda20, 0xdd30, 0x525e, 0x107e, 0x0, 0x1);
        gbc.writeMem(0xab20, { 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc632, gbc.sp());
        EXPECT(0xab21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xab20));
        // 8F 02DF
        gbc.setState(0x7e3a, 0xe0df, 0x8d80, 0xd530, 0x16d4, 0xd4a1, 0x1, 0x1);
        gbc.writeMem(0x7e3a, { 0x8f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe0df, gbc.sp());
        EXPECT(0x7e3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02E0
        gbc.setState(0x8f4b, 0xfd73, 0x4360, 0x326d, 0xd9a2, 0x79b, 0x0, 0x1);
        gbc.writeMem(0x8f4b, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfd73, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f4b));
        // 8F 02E1
        gbc.setState(0xd406, 0xd29e, 0x2570, 0x2280, 0x57a0, 0xc437, 0x0, 0x0);
        gbc.writeMem(0xd406, { 0x8f });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd29e, gbc.sp());
        EXPECT(0xd407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd406));
        // 8F 02E2
        gbc.setState(0xa110, 0xf73b, 0x85b0, 0x96da, 0x7a82, 0x9b0d, 0x0, 0x0);
        gbc.writeMem(0xa110, { 0x8f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf73b, gbc.sp());
        EXPECT(0xa111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa110));
        // 8F 02E3
        gbc.setState(0x91e3, 0xfdf0, 0x6160, 0xb4be, 0x7dca, 0x7ada, 0x0, 0x1);
        gbc.writeMem(0x91e3, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfdf0, gbc.sp());
        EXPECT(0x91e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x91e3));
        // 8F 02E4
        gbc.setState(0xc956, 0xb924, 0x8c30, 0xdb84, 0x8b3c, 0xde9a, 0x0, 0x1);
        gbc.writeMem(0xc956, { 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb924, gbc.sp());
        EXPECT(0xc957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc956));
        // 8F 02E5
        gbc.setState(0x648, 0xd704, 0x9f60, 0x7e6, 0xb2a9, 0xe4a9, 0x1, 0x1);
        gbc.writeMem(0x648, { 0x8f });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd704, gbc.sp());
        EXPECT(0x649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02E6
        gbc.setState(0x4b07, 0x999d, 0xbf60, 0xd02e, 0x226b, 0xa2cc, 0x1, 0x0);
        gbc.writeMem(0x4b07, { 0x8f });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x999d, gbc.sp());
        EXPECT(0x4b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02E7
        gbc.setState(0x706d, 0x5387, 0x6370, 0xa959, 0x7afe, 0x1bfe, 0x1, 0x1);
        gbc.writeMem(0x706d, { 0x8f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5387, gbc.sp());
        EXPECT(0x706e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02E8
        gbc.setState(0xe39a, 0x568b, 0xdc20, 0x64df, 0x8808, 0x5b8d, 0x0, 0x0);
        gbc.writeMem(0xe39a, { 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x568b, gbc.sp());
        EXPECT(0xe39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe39a));
        // 8F 02E9
        gbc.setState(0x9b22, 0xe71, 0x6e00, 0x431c, 0xd071, 0xa8c5, 0x0, 0x1);
        gbc.writeMem(0x9b22, { 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe71, gbc.sp());
        EXPECT(0x9b23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9b22));
        // 8F 02EA
        gbc.setState(0xd3aa, 0xcba4, 0x6b70, 0x43f7, 0xc7e9, 0x6be0, 0x0, 0x1);
        gbc.writeMem(0xd3aa, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcba4, gbc.sp());
        EXPECT(0xd3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd3aa));
        // 8F 02EB
        gbc.setState(0x13e8, 0xda54, 0xf270, 0xafb7, 0x1332, 0x51d3, 0x0, 0x1);
        gbc.writeMem(0x13e8, { 0x8f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xda54, gbc.sp());
        EXPECT(0x13e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02EC
        gbc.setState(0xb67e, 0xf4cd, 0x2990, 0xbbc0, 0xaf64, 0x63c1, 0x1, 0x0);
        gbc.writeMem(0xb67e, { 0x8f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf4cd, gbc.sp());
        EXPECT(0xb67f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb67e));
        // 8F 02ED
        gbc.setState(0x2f28, 0xb6e0, 0x9840, 0x2d82, 0x46c2, 0x37d6, 0x1, 0x0);
        gbc.writeMem(0x2f28, { 0x8f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb6e0, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02EE
        gbc.setState(0xc0d7, 0xff2f, 0xd9b0, 0x5ed2, 0xf669, 0x2dba, 0x0, 0x0);
        gbc.writeMem(0xc0d7, { 0x8f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xff2f, gbc.sp());
        EXPECT(0xc0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc0d7));
        // 8F 02EF
        gbc.setState(0x2249, 0x1e0c, 0x8fb0, 0x485c, 0xc78a, 0x8729, 0x1, 0x0);
        gbc.writeMem(0x2249, { 0x8f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1e0c, gbc.sp());
        EXPECT(0x224a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02F0
        gbc.setState(0x9069, 0x6d39, 0x44a0, 0xbefe, 0xb42, 0x8f2c, 0x0, 0x1);
        gbc.writeMem(0x9069, { 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6d39, gbc.sp());
        EXPECT(0x906a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9069));
        // 8F 02F1
        gbc.setState(0x2cc6, 0x7303, 0xe780, 0xd213, 0x2633, 0xb676, 0x0, 0x1);
        gbc.writeMem(0x2cc6, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7303, gbc.sp());
        EXPECT(0x2cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02F2
        gbc.setState(0x7906, 0x91ec, 0xc2e0, 0xef33, 0x10e4, 0x3811, 0x0, 0x0);
        gbc.writeMem(0x7906, { 0x8f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x91ec, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02F3
        gbc.setState(0x1e8e, 0xbfbd, 0xa5e0, 0xadf4, 0xa5c, 0xd749, 0x1, 0x1);
        gbc.writeMem(0x1e8e, { 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbfbd, gbc.sp());
        EXPECT(0x1e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02F4
        gbc.setState(0xb898, 0x4539, 0x2de0, 0x372, 0xbb6d, 0x3526, 0x0, 0x0);
        gbc.writeMem(0xb898, { 0x8f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4539, gbc.sp());
        EXPECT(0xb899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb898));
        // 8F 02F5
        gbc.setState(0x78a5, 0xc6ec, 0x39f0, 0xadcf, 0xf2ac, 0xb85b, 0x1, 0x1);
        gbc.writeMem(0x78a5, { 0x8f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0x78a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 02F6
        gbc.setState(0x8d3d, 0x45b3, 0x1700, 0x361d, 0x2e52, 0x8798, 0x0, 0x0);
        gbc.writeMem(0x8d3d, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x45b3, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8d3d));
        // 8F 02F7
        gbc.setState(0xb64c, 0x9342, 0xa740, 0xe378, 0x4015, 0xfca1, 0x0, 0x1);
        gbc.writeMem(0xb64c, { 0x8f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9342, gbc.sp());
        EXPECT(0xb64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb64c));
        // 8F 02F8
        gbc.setState(0x541e, 0xb346, 0xc520, 0xe4b7, 0x2984, 0xf44b, 0x0, 0x0);
        gbc.writeMem(0x541e, { 0x8f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb346, gbc.sp());
        EXPECT(0x541f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02F9
        gbc.setState(0xae60, 0x38e8, 0x6a00, 0xd152, 0xd6bf, 0xcd2f, 0x1, 0x0);
        gbc.writeMem(0xae60, { 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0xae61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xae60));
        // 8F 02FA
        gbc.setState(0xba6f, 0x491d, 0xbc10, 0x22a4, 0xad1b, 0xe9b4, 0x0, 0x1);
        gbc.writeMem(0xba6f, { 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x491d, gbc.sp());
        EXPECT(0xba70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xba6f));
        // 8F 02FB
        gbc.setState(0x4ac3, 0x1226, 0xfee0, 0x2124, 0xbd3f, 0x69e3, 0x0, 0x0);
        gbc.writeMem(0x4ac3, { 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1226, gbc.sp());
        EXPECT(0x4ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02FC
        gbc.setState(0x29d, 0xc585, 0xbdd0, 0xf1c6, 0xc3be, 0xdf14, 0x1, 0x1);
        gbc.writeMem(0x29d, { 0x8f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc585, gbc.sp());
        EXPECT(0x29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 02FE
        gbc.setState(0x97a3, 0xa869, 0x22a0, 0x4a00, 0xc76c, 0x7ce9, 0x1, 0x0);
        gbc.writeMem(0x97a3, { 0x8f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa869, gbc.sp());
        EXPECT(0x97a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x97a3));
        // 8F 02FF
        gbc.setState(0x478b, 0xa680, 0x1a0, 0x6329, 0x8df7, 0x2270, 0x0, 0x1);
        gbc.writeMem(0x478b, { 0x8f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa680, gbc.sp());
        EXPECT(0x478c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0300
        gbc.setState(0xbd2e, 0xc496, 0x2ca0, 0x8431, 0xcaf6, 0xe8aa, 0x1, 0x1);
        gbc.writeMem(0xbd2e, { 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0xbd2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbd2e));
        // 8F 0301
        gbc.setState(0xc2bd, 0xca7a, 0xf390, 0x2770, 0xd05c, 0x3de7, 0x1, 0x0);
        gbc.writeMem(0xc2bd, { 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca7a, gbc.sp());
        EXPECT(0xc2be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc2bd));
        // 8F 0302
        gbc.setState(0x222f, 0xbb70, 0x460, 0x1c81, 0xaa4e, 0xc1d6, 0x0, 0x1);
        gbc.writeMem(0x222f, { 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0303
        gbc.setState(0x107d, 0xf767, 0x8ea0, 0xfd65, 0xb205, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0x107d, { 0x8f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf767, gbc.sp());
        EXPECT(0x107e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0304
        gbc.setState(0xad7a, 0xcaee, 0x1f90, 0xea8e, 0x1222, 0xdb93, 0x1, 0x1);
        gbc.writeMem(0xad7a, { 0x8f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcaee, gbc.sp());
        EXPECT(0xad7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xad7a));
        // 8F 0305
        gbc.setState(0x6ef2, 0x8cdf, 0x5e90, 0x1375, 0x959c, 0x3e19, 0x0, 0x1);
        gbc.writeMem(0x6ef2, { 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8cdf, gbc.sp());
        EXPECT(0x6ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0306
        gbc.setState(0x3d28, 0xd7bc, 0x7880, 0x91fb, 0xa13c, 0x538a, 0x0, 0x0);
        gbc.writeMem(0x3d28, { 0x8f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x3d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0307
        gbc.setState(0x4a71, 0x2e6f, 0x5150, 0x82a1, 0xce73, 0xd183, 0x0, 0x0);
        gbc.writeMem(0x4a71, { 0x8f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2e6f, gbc.sp());
        EXPECT(0x4a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0308
        gbc.setState(0xe099, 0xaa1a, 0xd370, 0x6809, 0xbba1, 0x4d66, 0x1, 0x1);
        gbc.writeMem(0xe099, { 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaa1a, gbc.sp());
        EXPECT(0xe09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe099));
        // 8F 0309
        gbc.setState(0xc0d6, 0x96fb, 0x8980, 0xce2b, 0xb1bd, 0x7faa, 0x0, 0x1);
        gbc.writeMem(0xc0d6, { 0x8f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x96fb, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc0d6));
        // 8F 030A
        gbc.setState(0xba2a, 0x454, 0x9900, 0x46ce, 0x6e97, 0xe6eb, 0x0, 0x0);
        gbc.writeMem(0xba2a, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x454, gbc.sp());
        EXPECT(0xba2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xba2a));
        // 8F 030B
        gbc.setState(0x77d6, 0x3915, 0x82c0, 0xca7a, 0xfaea, 0x8404, 0x0, 0x0);
        gbc.writeMem(0x77d6, { 0x8f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3915, gbc.sp());
        EXPECT(0x77d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 030C
        gbc.setState(0x1a19, 0x91dd, 0x6850, 0x9165, 0x6477, 0x5909, 0x1, 0x0);
        gbc.writeMem(0x1a19, { 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x91dd, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 030D
        gbc.setState(0x16e, 0x5244, 0xb980, 0xd2, 0x5a56, 0x691, 0x1, 0x0);
        gbc.writeMem(0x16e, { 0x8f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x5244, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 030E
        gbc.setState(0xeacd, 0x65b0, 0xc5a0, 0xf3a3, 0x70e0, 0x8dc1, 0x1, 0x0);
        gbc.writeMem(0xeacd, { 0x8f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x65b0, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeacd));
        // 8F 030F
        gbc.setState(0xd2f2, 0xb041, 0x7940, 0x1c4c, 0xd80, 0xbe86, 0x0, 0x0);
        gbc.writeMem(0xd2f2, { 0x8f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0xd2f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd2f2));
        // 8F 0310
        gbc.setState(0x8538, 0x2fda, 0x4850, 0xb209, 0x282b, 0xe45e, 0x1, 0x1);
        gbc.writeMem(0x8538, { 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8538));
        // 8F 0311
        gbc.setState(0x45be, 0x6c16, 0xba80, 0xfe87, 0x1cb5, 0xdb05, 0x0, 0x1);
        gbc.writeMem(0x45be, { 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6c16, gbc.sp());
        EXPECT(0x45bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0312
        gbc.setState(0x3912, 0xb082, 0x7650, 0xfbc4, 0xc216, 0x3629, 0x0, 0x0);
        gbc.writeMem(0x3912, { 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb082, gbc.sp());
        EXPECT(0x3913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0313
        gbc.setState(0x9958, 0xf995, 0x48c0, 0x6901, 0xb844, 0x5663, 0x0, 0x0);
        gbc.writeMem(0x9958, { 0x8f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf995, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9958));
        // 8F 0314
        gbc.setState(0x7d4e, 0x1229, 0xb410, 0x1d4a, 0x8da7, 0x32b5, 0x0, 0x1);
        gbc.writeMem(0x7d4e, { 0x8f });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1229, gbc.sp());
        EXPECT(0x7d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0315
        gbc.setState(0x7adc, 0x541a, 0x8300, 0x67a9, 0x1342, 0xa5b2, 0x1, 0x1);
        gbc.writeMem(0x7adc, { 0x8f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x541a, gbc.sp());
        EXPECT(0x7add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0316
        gbc.setState(0x822d, 0x3d1a, 0x2f0, 0x334e, 0xd661, 0x3930, 0x0, 0x0);
        gbc.writeMem(0x822d, { 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3d1a, gbc.sp());
        EXPECT(0x822e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x822d));
        // 8F 0317
        gbc.setState(0x642c, 0x4105, 0x9550, 0xade4, 0xce29, 0xcfa2, 0x0, 0x1);
        gbc.writeMem(0x642c, { 0x8f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4105, gbc.sp());
        EXPECT(0x642d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0319
        gbc.setState(0xbd3d, 0x94ce, 0x3440, 0xc41c, 0x9b30, 0xf2dd, 0x0, 0x1);
        gbc.writeMem(0xbd3d, { 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x94ce, gbc.sp());
        EXPECT(0xbd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbd3d));
        // 8F 031A
        gbc.setState(0x797, 0xf216, 0x6a00, 0x7880, 0x31f5, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0x797, { 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf216, gbc.sp());
        EXPECT(0x798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 031B
        gbc.setState(0x6069, 0xe060, 0x8360, 0x5ddb, 0x283a, 0x5c45, 0x0, 0x1);
        gbc.writeMem(0x6069, { 0x8f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe060, gbc.sp());
        EXPECT(0x606a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 031C
        gbc.setState(0xab4d, 0xab86, 0xd600, 0x2be3, 0xbc4d, 0xc5a0, 0x1, 0x0);
        gbc.writeMem(0xab4d, { 0x8f });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0xab4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xab4d));
        // 8F 031D
        gbc.setState(0x208c, 0x7d36, 0x5a60, 0xdf6a, 0xa997, 0x3108, 0x0, 0x1);
        gbc.writeMem(0x208c, { 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7d36, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 031E
        gbc.setState(0x96d5, 0x99e7, 0x11e0, 0xf234, 0x3a9a, 0xbdca, 0x0, 0x1);
        gbc.writeMem(0x96d5, { 0x8f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x99e7, gbc.sp());
        EXPECT(0x96d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x96d5));
        // 8F 031F
        gbc.setState(0x725b, 0x3965, 0x2d60, 0xbf03, 0xee88, 0x2f1f, 0x1, 0x1);
        gbc.writeMem(0x725b, { 0x8f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3965, gbc.sp());
        EXPECT(0x725c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0320
        gbc.setState(0xd8f5, 0x8eff, 0x76b0, 0xcc0b, 0xbbd2, 0xc88e, 0x1, 0x1);
        gbc.writeMem(0xd8f5, { 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8eff, gbc.sp());
        EXPECT(0xd8f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd8f5));
        // 8F 0321
        gbc.setState(0xab6b, 0xaf13, 0x8b00, 0xb001, 0xd883, 0x1ffb, 0x0, 0x1);
        gbc.writeMem(0xab6b, { 0x8f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaf13, gbc.sp());
        EXPECT(0xab6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xab6b));
        // 8F 0322
        gbc.setState(0x3deb, 0x8fc9, 0x6920, 0x1871, 0x15fb, 0x3550, 0x1, 0x1);
        gbc.writeMem(0x3deb, { 0x8f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8fc9, gbc.sp());
        EXPECT(0x3dec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0323
        gbc.setState(0x5571, 0x9a58, 0x8e30, 0x254b, 0x9220, 0x9766, 0x1, 0x0);
        gbc.writeMem(0x5571, { 0x8f });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9a58, gbc.sp());
        EXPECT(0x5572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0324
        gbc.setState(0x49c0, 0x3b7b, 0x5980, 0x3acb, 0x5005, 0x1d2c, 0x1, 0x1);
        gbc.writeMem(0x49c0, { 0x8f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3b7b, gbc.sp());
        EXPECT(0x49c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0325
        gbc.setState(0x6856, 0x5d2b, 0xb610, 0x22f5, 0xccf5, 0xb185, 0x0, 0x1);
        gbc.writeMem(0x6856, { 0x8f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5d2b, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0326
        gbc.setState(0x2de9, 0x5efb, 0xd0, 0x3382, 0xfa4, 0xea0e, 0x0, 0x1);
        gbc.writeMem(0x2de9, { 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5efb, gbc.sp());
        EXPECT(0x2dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0327
        gbc.setState(0x9d6, 0xd0f3, 0x70, 0x8fe, 0x651a, 0xa90f, 0x0, 0x0);
        gbc.writeMem(0x9d6, { 0x8f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd0f3, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0328
        gbc.setState(0x4740, 0xf181, 0x3f0, 0x3d46, 0xd815, 0x43eb, 0x1, 0x1);
        gbc.writeMem(0x4740, { 0x8f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x4741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0329
        gbc.setState(0x7cda, 0xc0f8, 0xdff0, 0xea33, 0x9a34, 0x8e06, 0x1, 0x1);
        gbc.writeMem(0x7cda, { 0x8f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc0f8, gbc.sp());
        EXPECT(0x7cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 032A
        gbc.setState(0x2856, 0xe2bb, 0x7ef0, 0x719, 0xf6, 0xb915, 0x0, 0x1);
        gbc.writeMem(0x2856, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe2bb, gbc.sp());
        EXPECT(0x2857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 032B
        gbc.setState(0x9b23, 0xac48, 0x7aa0, 0x8619, 0x4fcb, 0xd50d, 0x1, 0x0);
        gbc.writeMem(0x9b23, { 0x8f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xac48, gbc.sp());
        EXPECT(0x9b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9b23));
        // 8F 032C
        gbc.setState(0x372b, 0x5839, 0xb3f0, 0xca85, 0xe6aa, 0xa978, 0x1, 0x1);
        gbc.writeMem(0x372b, { 0x8f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5839, gbc.sp());
        EXPECT(0x372c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 032D
        gbc.setState(0x8d7b, 0x3f47, 0x3d10, 0x1504, 0x1a3e, 0x9daf, 0x0, 0x0);
        gbc.writeMem(0x8d7b, { 0x8f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3f47, gbc.sp());
        EXPECT(0x8d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8d7b));
        // 8F 032E
        gbc.setState(0xa588, 0x3227, 0x530, 0x4441, 0x1a41, 0x7343, 0x0, 0x0);
        gbc.writeMem(0xa588, { 0x8f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0xa589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa588));
        // 8F 032F
        gbc.setState(0x6222, 0xcafa, 0x7700, 0xa309, 0xb2dc, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0x6222, { 0x8f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcafa, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0331
        gbc.setState(0x4846, 0xd640, 0xcae0, 0xec08, 0x88ab, 0x8e3b, 0x0, 0x0);
        gbc.writeMem(0x4846, { 0x8f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x4847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0332
        gbc.setState(0x5150, 0x2cf, 0x53f0, 0x6d4a, 0xa057, 0x8186, 0x0, 0x0);
        gbc.writeMem(0x5150, { 0x8f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2cf, gbc.sp());
        EXPECT(0x5151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0333
        gbc.setState(0xd1a7, 0x7ab, 0x85b0, 0x8ecb, 0x9ae0, 0x5cd3, 0x1, 0x1);
        gbc.writeMem(0xd1a7, { 0x8f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7ab, gbc.sp());
        EXPECT(0xd1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd1a7));
        // 8F 0334
        gbc.setState(0xdab0, 0xb1e6, 0xc6d0, 0x5697, 0xff7f, 0xe33b, 0x1, 0x1);
        gbc.writeMem(0xdab0, { 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb1e6, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdab0));
        // 8F 0335
        gbc.setState(0x2bed, 0x3266, 0x6460, 0x4741, 0x48f6, 0x51d4, 0x1, 0x0);
        gbc.writeMem(0x2bed, { 0x8f });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3266, gbc.sp());
        EXPECT(0x2bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0336
        gbc.setState(0x3924, 0xe20f, 0x9b60, 0x7766, 0x878a, 0x1ad7, 0x1, 0x1);
        gbc.writeMem(0x3924, { 0x8f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe20f, gbc.sp());
        EXPECT(0x3925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0337
        gbc.setState(0x8a04, 0x900f, 0x9810, 0x842f, 0x316, 0x96c3, 0x0, 0x1);
        gbc.writeMem(0x8a04, { 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x900f, gbc.sp());
        EXPECT(0x8a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a04));
        // 8F 0338
        gbc.setState(0x1c75, 0xf3a6, 0x7b40, 0x842b, 0xb298, 0x4ba5, 0x1, 0x1);
        gbc.writeMem(0x1c75, { 0x8f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf3a6, gbc.sp());
        EXPECT(0x1c76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0339
        gbc.setState(0xa5e2, 0xb8b0, 0xcdf0, 0xf19d, 0x13ec, 0x9d30, 0x0, 0x0);
        gbc.writeMem(0xa5e2, { 0x8f });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb8b0, gbc.sp());
        EXPECT(0xa5e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa5e2));
        // 8F 033A
        gbc.setState(0x528f, 0xa484, 0x1d80, 0xc87f, 0x48ee, 0xda60, 0x1, 0x1);
        gbc.writeMem(0x528f, { 0x8f });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa484, gbc.sp());
        EXPECT(0x5290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 033B
        gbc.setState(0x6154, 0x9f3c, 0x6060, 0xa512, 0xbe73, 0x236e, 0x0, 0x0);
        gbc.writeMem(0x6154, { 0x8f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9f3c, gbc.sp());
        EXPECT(0x6155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 033C
        gbc.setState(0x105c, 0x980b, 0x2750, 0xfd42, 0x6248, 0xbe88, 0x1, 0x0);
        gbc.writeMem(0x105c, { 0x8f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x980b, gbc.sp());
        EXPECT(0x105d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 033D
        gbc.setState(0x2730, 0xb2c1, 0x13c0, 0x5d35, 0x96fd, 0x12b6, 0x0, 0x0);
        gbc.writeMem(0x2730, { 0x8f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb2c1, gbc.sp());
        EXPECT(0x2731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 033E
        gbc.setState(0xaa9e, 0xef76, 0x91a0, 0x25f8, 0x742a, 0xfbb9, 0x0, 0x0);
        gbc.writeMem(0xaa9e, { 0x8f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xef76, gbc.sp());
        EXPECT(0xaa9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xaa9e));
        // 8F 0340
        gbc.setState(0xeda0, 0xe649, 0xa720, 0x128f, 0x15f3, 0x3d9b, 0x0, 0x0);
        gbc.writeMem(0xeda0, { 0x8f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe649, gbc.sp());
        EXPECT(0xeda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeda0));
        // 8F 0341
        gbc.setState(0xc1a9, 0xe9f4, 0x3770, 0xc964, 0xe596, 0x74b6, 0x1, 0x1);
        gbc.writeMem(0xc1a9, { 0x8f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe9f4, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc1a9));
        // 8F 0342
        gbc.setState(0x5002, 0x6c7a, 0x9a60, 0x497c, 0x832, 0x7a1b, 0x1, 0x1);
        gbc.writeMem(0x5002, { 0x8f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6c7a, gbc.sp());
        EXPECT(0x5003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0343
        gbc.setState(0x9ec0, 0x3ce7, 0x8c80, 0xb575, 0xb029, 0x81a3, 0x0, 0x0);
        gbc.writeMem(0x9ec0, { 0x8f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3ce7, gbc.sp());
        EXPECT(0x9ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9ec0));
        // 8F 0345
        gbc.setState(0x1a9a, 0xa416, 0x8b0, 0x9911, 0x24c1, 0x199e, 0x1, 0x0);
        gbc.writeMem(0x1a9a, { 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa416, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0346
        gbc.setState(0x3a94, 0xd9ea, 0x88b0, 0x315f, 0xb66, 0xeb82, 0x1, 0x1);
        gbc.writeMem(0x3a94, { 0x8f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd9ea, gbc.sp());
        EXPECT(0x3a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0347
        gbc.setState(0xcfb1, 0x8130, 0x40a0, 0x5834, 0xabb5, 0x5cbc, 0x0, 0x0);
        gbc.writeMem(0xcfb1, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8130, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcfb1));
        // 8F 0348
        gbc.setState(0x1939, 0xfcb3, 0xadd0, 0x1d8a, 0xf647, 0xaaa6, 0x1, 0x1);
        gbc.writeMem(0x1939, { 0x8f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0x193a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 034A
        gbc.setState(0x8e57, 0x4e6f, 0xa7e0, 0x1147, 0x8b94, 0x7ac8, 0x0, 0x1);
        gbc.writeMem(0x8e57, { 0x8f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0x8e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8e57));
        // 8F 034B
        gbc.setState(0x6728, 0x20d5, 0x3dc0, 0x1fbb, 0xbb99, 0x5aa, 0x1, 0x0);
        gbc.writeMem(0x6728, { 0x8f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x20d5, gbc.sp());
        EXPECT(0x6729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 034C
        gbc.setState(0x659d, 0xe940, 0xb680, 0xb1cb, 0x1dab, 0x5102, 0x0, 0x0);
        gbc.writeMem(0x659d, { 0x8f });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe940, gbc.sp());
        EXPECT(0x659e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 034D
        gbc.setState(0x8707, 0x43ab, 0xc660, 0xe4b0, 0x249f, 0x56e4, 0x1, 0x0);
        gbc.writeMem(0x8707, { 0x8f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x43ab, gbc.sp());
        EXPECT(0x8708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8707));
        // 8F 034E
        gbc.setState(0x51cb, 0x94b8, 0x1650, 0x5586, 0xe7c4, 0x2b59, 0x0, 0x1);
        gbc.writeMem(0x51cb, { 0x8f });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x94b8, gbc.sp());
        EXPECT(0x51cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 034F
        gbc.setState(0x536d, 0x18dd, 0x2670, 0x846d, 0x664a, 0x4092, 0x0, 0x0);
        gbc.writeMem(0x536d, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x18dd, gbc.sp());
        EXPECT(0x536e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0350
        gbc.setState(0xac10, 0x6f93, 0xf80, 0xbfb5, 0x6f96, 0x45c2, 0x0, 0x1);
        gbc.writeMem(0xac10, { 0x8f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6f93, gbc.sp());
        EXPECT(0xac11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xac10));
        // 8F 0351
        gbc.setState(0x1d66, 0xb71f, 0xb5b0, 0x9ca8, 0x9767, 0xab2c, 0x0, 0x1);
        gbc.writeMem(0x1d66, { 0x8f });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0x1d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0352
        gbc.setState(0x6fdc, 0x621, 0xc830, 0xc26e, 0xd68c, 0xde9f, 0x0, 0x0);
        gbc.writeMem(0x6fdc, { 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x621, gbc.sp());
        EXPECT(0x6fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0353
        gbc.setState(0xe8c8, 0x1738, 0x6810, 0xfd1d, 0x83f7, 0xc0c4, 0x0, 0x0);
        gbc.writeMem(0xe8c8, { 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1738, gbc.sp());
        EXPECT(0xe8c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe8c8));
        // 8F 0354
        gbc.setState(0x3506, 0x91f, 0xd1f0, 0x98d, 0x2894, 0x7793, 0x1, 0x0);
        gbc.writeMem(0x3506, { 0x8f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x91f, gbc.sp());
        EXPECT(0x3507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0355
        gbc.setState(0x30ae, 0x5c76, 0x3460, 0x5588, 0x3cff, 0x5e3, 0x0, 0x0);
        gbc.writeMem(0x30ae, { 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5c76, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0356
        gbc.setState(0x785c, 0xd413, 0x9bd0, 0x3c8c, 0x8ebe, 0x323, 0x1, 0x1);
        gbc.writeMem(0x785c, { 0x8f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0x785d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0357
        gbc.setState(0xad56, 0x4a39, 0x2ce0, 0x714d, 0x5ddf, 0x40f3, 0x0, 0x1);
        gbc.writeMem(0xad56, { 0x8f });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4a39, gbc.sp());
        EXPECT(0xad57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xad56));
        // 8F 0358
        gbc.setState(0x94f4, 0xa57f, 0x4320, 0x8d3e, 0x4f72, 0xf415, 0x1, 0x1);
        gbc.writeMem(0x94f4, { 0x8f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa57f, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x94f4));
        // 8F 0359
        gbc.setState(0xa27, 0x756c, 0x6d70, 0xea39, 0x297c, 0x51d0, 0x0, 0x0);
        gbc.writeMem(0xa27, { 0x8f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x756c, gbc.sp());
        EXPECT(0xa28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 035A
        gbc.setState(0xc635, 0x8710, 0xcb20, 0x9709, 0x7493, 0x47d2, 0x0, 0x0);
        gbc.writeMem(0xc635, { 0x8f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8710, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc635));
        // 8F 035B
        gbc.setState(0xd421, 0x8207, 0xca30, 0x331a, 0x9173, 0x4a3f, 0x1, 0x0);
        gbc.writeMem(0xd421, { 0x8f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8207, gbc.sp());
        EXPECT(0xd422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd421));
        // 8F 035C
        gbc.setState(0xdeca, 0x5252, 0x6150, 0x5cd0, 0x9759, 0xc875, 0x0, 0x1);
        gbc.writeMem(0xdeca, { 0x8f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5252, gbc.sp());
        EXPECT(0xdecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdeca));
        // 8F 035D
        gbc.setState(0x7fd8, 0xf4db, 0x330, 0xca9a, 0x2e1f, 0x2ba8, 0x1, 0x0);
        gbc.writeMem(0x7fd8, { 0x8f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf4db, gbc.sp());
        EXPECT(0x7fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 035E
        gbc.setState(0x78e3, 0x462a, 0x5970, 0xad8b, 0x37d8, 0x7d77, 0x1, 0x0);
        gbc.writeMem(0x78e3, { 0x8f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x462a, gbc.sp());
        EXPECT(0x78e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 035F
        gbc.setState(0x4e11, 0xe2a3, 0x4c0, 0x9479, 0x4ad4, 0x7615, 0x0, 0x1);
        gbc.writeMem(0x4e11, { 0x8f });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe2a3, gbc.sp());
        EXPECT(0x4e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0360
        gbc.setState(0x7e1b, 0xed02, 0xdfa0, 0x5e39, 0xc0b4, 0x2d6d, 0x0, 0x0);
        gbc.writeMem(0x7e1b, { 0x8f });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xed02, gbc.sp());
        EXPECT(0x7e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0361
        gbc.setState(0x45e5, 0xcfef, 0x1c20, 0xae11, 0xe17e, 0x5149, 0x1, 0x0);
        gbc.writeMem(0x45e5, { 0x8f });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xcfef, gbc.sp());
        EXPECT(0x45e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0362
        gbc.setState(0x98a4, 0x53c5, 0x7e0, 0xa76a, 0xa1d6, 0xc77a, 0x0, 0x0);
        gbc.writeMem(0x98a4, { 0x8f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x53c5, gbc.sp());
        EXPECT(0x98a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x98a4));
        // 8F 0363
        gbc.setState(0xbbeb, 0x3f5, 0xe370, 0xf5bf, 0xf36c, 0x96ef, 0x0, 0x1);
        gbc.writeMem(0xbbeb, { 0x8f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3f5, gbc.sp());
        EXPECT(0xbbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbbeb));
        // 8F 0364
        gbc.setState(0xded3, 0x76e3, 0x6ea0, 0xc3de, 0xc73a, 0x1219, 0x0, 0x1);
        gbc.writeMem(0xded3, { 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x76e3, gbc.sp());
        EXPECT(0xded4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xded3));
        // 8F 0365
        gbc.setState(0x3ed8, 0x943d, 0x9360, 0x3608, 0x2424, 0x3779, 0x1, 0x1);
        gbc.writeMem(0x3ed8, { 0x8f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x943d, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0366
        gbc.setState(0xb0e6, 0xdeb7, 0x61e0, 0xf211, 0x514d, 0x441a, 0x1, 0x0);
        gbc.writeMem(0xb0e6, { 0x8f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0xb0e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb0e6));
        // 8F 0367
        gbc.setState(0xf7a, 0xc2c, 0xb2b0, 0x7d3b, 0xd1c2, 0xe739, 0x0, 0x0);
        gbc.writeMem(0xf7a, { 0x8f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc2c, gbc.sp());
        EXPECT(0xf7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0368
        gbc.setState(0x3e9b, 0xf61b, 0xb0e0, 0xd8c3, 0x313b, 0x37df, 0x1, 0x1);
        gbc.writeMem(0x3e9b, { 0x8f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf61b, gbc.sp());
        EXPECT(0x3e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0369
        gbc.setState(0x463, 0xa2f5, 0x3b50, 0xbad, 0x65a3, 0x6215, 0x1, 0x0);
        gbc.writeMem(0x463, { 0x8f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa2f5, gbc.sp());
        EXPECT(0x464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 036A
        gbc.setState(0xe867, 0x2253, 0x5a10, 0xea6f, 0x6960, 0x9f65, 0x0, 0x1);
        gbc.writeMem(0xe867, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0xe868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe867));
        // 8F 036B
        gbc.setState(0x4854, 0xe3de, 0xc190, 0x4932, 0x5a2f, 0x4a37, 0x1, 0x1);
        gbc.writeMem(0x4854, { 0x8f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe3de, gbc.sp());
        EXPECT(0x4855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 036C
        gbc.setState(0x7ce6, 0x5e2b, 0x5dd0, 0xb48d, 0x4ba9, 0xd89e, 0x1, 0x0);
        gbc.writeMem(0x7ce6, { 0x8f });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5e2b, gbc.sp());
        EXPECT(0x7ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 036D
        gbc.setState(0x3dba, 0xf947, 0x6230, 0xc46e, 0xdf7d, 0x5e1e, 0x0, 0x0);
        gbc.writeMem(0x3dba, { 0x8f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf947, gbc.sp());
        EXPECT(0x3dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 036E
        gbc.setState(0x3170, 0x3d27, 0x4630, 0xeb08, 0xe58a, 0x64a4, 0x1, 0x1);
        gbc.writeMem(0x3170, { 0x8f });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3d27, gbc.sp());
        EXPECT(0x3171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 036F
        gbc.setState(0x8f0a, 0x790e, 0xebb0, 0xc143, 0x6e7b, 0x22e2, 0x1, 0x1);
        gbc.writeMem(0x8f0a, { 0x8f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x790e, gbc.sp());
        EXPECT(0x8f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8f0a));
        // 8F 0370
        gbc.setState(0xe77, 0xd8a4, 0xe4b0, 0x54c7, 0x9b0, 0xa3c8, 0x0, 0x1);
        gbc.writeMem(0xe77, { 0x8f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd8a4, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0371
        gbc.setState(0x6f20, 0xbed8, 0xac70, 0x6a73, 0x2d09, 0x464d, 0x1, 0x0);
        gbc.writeMem(0x6f20, { 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbed8, gbc.sp());
        EXPECT(0x6f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0372
        gbc.setState(0x7232, 0x2bc, 0x3c30, 0x72f6, 0x64c, 0x5c4f, 0x1, 0x0);
        gbc.writeMem(0x7232, { 0x8f });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2bc, gbc.sp());
        EXPECT(0x7233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0373
        gbc.setState(0xd77c, 0x67ba, 0xfad0, 0xe034, 0x44b7, 0xe3f2, 0x1, 0x1);
        gbc.writeMem(0xd77c, { 0x8f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x67ba, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd77c));
        // 8F 0375
        gbc.setState(0xd917, 0x6102, 0x7380, 0x8a77, 0xcca2, 0x84d5, 0x1, 0x1);
        gbc.writeMem(0xd917, { 0x8f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6102, gbc.sp());
        EXPECT(0xd918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd917));
        // 8F 0376
        gbc.setState(0x588f, 0x6884, 0xc020, 0x92e9, 0x8702, 0x57b9, 0x1, 0x1);
        gbc.writeMem(0x588f, { 0x8f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6884, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0377
        gbc.setState(0xbe65, 0xc42a, 0x54b0, 0xb46c, 0xa041, 0x14cc, 0x0, 0x1);
        gbc.writeMem(0xbe65, { 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xc42a, gbc.sp());
        EXPECT(0xbe66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbe65));
        // 8F 0378
        gbc.setState(0x1733, 0xb0be, 0x5160, 0x5493, 0x3a8, 0x6f04, 0x1, 0x0);
        gbc.writeMem(0x1733, { 0x8f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb0be, gbc.sp());
        EXPECT(0x1734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0379
        gbc.setState(0x28f1, 0x2ded, 0xe090, 0x3a14, 0xdd0c, 0x360c, 0x1, 0x1);
        gbc.writeMem(0x28f1, { 0x8f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0x28f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 037A
        gbc.setState(0x8e2f, 0x2ed1, 0x17a0, 0xe4a9, 0x279a, 0x5111, 0x1, 0x0);
        gbc.writeMem(0x8e2f, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2ed1, gbc.sp());
        EXPECT(0x8e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8e2f));
        // 8F 037B
        gbc.setState(0x7311, 0xa362, 0x2d00, 0x844c, 0x53eb, 0x2630, 0x1, 0x0);
        gbc.writeMem(0x7311, { 0x8f });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa362, gbc.sp());
        EXPECT(0x7312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 037C
        gbc.setState(0x320c, 0x4c42, 0xba40, 0x9b7c, 0xa318, 0xf22e, 0x1, 0x1);
        gbc.writeMem(0x320c, { 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0x320d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 037D
        gbc.setState(0x756e, 0x5847, 0x71a0, 0xee12, 0x2521, 0x1fc3, 0x1, 0x0);
        gbc.writeMem(0x756e, { 0x8f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5847, gbc.sp());
        EXPECT(0x756f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 037E
        gbc.setState(0x7e2f, 0x48d7, 0xa650, 0x5b28, 0x1819, 0x53bd, 0x1, 0x1);
        gbc.writeMem(0x7e2f, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x48d7, gbc.sp());
        EXPECT(0x7e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 037F
        gbc.setState(0x4672, 0xd7c3, 0xf340, 0x6d68, 0x8823, 0xce2c, 0x1, 0x1);
        gbc.writeMem(0x4672, { 0x8f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd7c3, gbc.sp());
        EXPECT(0x4673, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0380
        gbc.setState(0x9e8e, 0x311c, 0x3b50, 0x26e, 0x4fc4, 0x5f84, 0x0, 0x1);
        gbc.writeMem(0x9e8e, { 0x8f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0x9e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9e8e));
        // 8F 0381
        gbc.setState(0x1919, 0xc89e, 0xcef0, 0x28b7, 0xb2b4, 0xaab6, 0x1, 0x0);
        gbc.writeMem(0x1919, { 0x8f });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc89e, gbc.sp());
        EXPECT(0x191a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0382
        gbc.setState(0x685d, 0xd495, 0x3f70, 0xb392, 0xb23e, 0xed44, 0x0, 0x1);
        gbc.writeMem(0x685d, { 0x8f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd495, gbc.sp());
        EXPECT(0x685e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0383
        gbc.setState(0x6d29, 0xa068, 0xc5d0, 0xb671, 0x4ef1, 0x7f57, 0x1, 0x1);
        gbc.writeMem(0x6d29, { 0x8f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa068, gbc.sp());
        EXPECT(0x6d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0385
        gbc.setState(0x2545, 0xb4fc, 0xa520, 0x9f5a, 0x42f7, 0x5d44, 0x1, 0x1);
        gbc.writeMem(0x2545, { 0x8f });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb4fc, gbc.sp());
        EXPECT(0x2546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0386
        gbc.setState(0x849c, 0x77f8, 0xef10, 0xf99, 0x8ed6, 0xc7f0, 0x1, 0x0);
        gbc.writeMem(0x849c, { 0x8f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x77f8, gbc.sp());
        EXPECT(0x849d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x849c));
        // 8F 0387
        gbc.setState(0x8b1, 0xe7bf, 0x3d20, 0x7205, 0xee19, 0x806a, 0x0, 0x1);
        gbc.writeMem(0x8b1, { 0x8f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0388
        gbc.setState(0xc107, 0x86b1, 0x6520, 0xc0be, 0x18a0, 0x3d95, 0x0, 0x1);
        gbc.writeMem(0xc107, { 0x8f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0xc108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc107));
        // 8F 0389
        gbc.setState(0xbde6, 0xaf72, 0xb3e0, 0x4a24, 0x8496, 0x99a3, 0x0, 0x0);
        gbc.writeMem(0xbde6, { 0x8f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaf72, gbc.sp());
        EXPECT(0xbde7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbde6));
        // 8F 038A
        gbc.setState(0x8d02, 0x9724, 0x6660, 0x626f, 0x1b9a, 0x18f, 0x0, 0x0);
        gbc.writeMem(0x8d02, { 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9724, gbc.sp());
        EXPECT(0x8d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8d02));
        // 8F 038B
        gbc.setState(0x9e7, 0xc9e0, 0x89b0, 0xa03b, 0xe1aa, 0x359b, 0x1, 0x1);
        gbc.writeMem(0x9e7, { 0x8f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc9e0, gbc.sp());
        EXPECT(0x9e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 038C
        gbc.setState(0x902c, 0x6587, 0x2c30, 0xb74a, 0xfc3d, 0x63be, 0x0, 0x1);
        gbc.writeMem(0x902c, { 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6587, gbc.sp());
        EXPECT(0x902d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x902c));
        // 8F 038D
        gbc.setState(0x6f6c, 0xfb2c, 0x6a80, 0xc83d, 0xc53b, 0x5a38, 0x1, 0x0);
        gbc.writeMem(0x6f6c, { 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0x6f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 038E
        gbc.setState(0x3815, 0x1123, 0xf5b0, 0x18be, 0x266b, 0x4dde, 0x1, 0x1);
        gbc.writeMem(0x3815, { 0x8f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1123, gbc.sp());
        EXPECT(0x3816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 038F
        gbc.setState(0x2c2d, 0xde8b, 0x8c10, 0x81ca, 0x8d50, 0xf525, 0x0, 0x1);
        gbc.writeMem(0x2c2d, { 0x8f });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xde8b, gbc.sp());
        EXPECT(0x2c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0390
        gbc.setState(0xcc5d, 0x2410, 0x84d0, 0x247a, 0x7981, 0x873f, 0x0, 0x0);
        gbc.writeMem(0xcc5d, { 0x8f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2410, gbc.sp());
        EXPECT(0xcc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcc5d));
        // 8F 0391
        gbc.setState(0x84ed, 0x963e, 0xcfa0, 0x4af1, 0x8eb3, 0x74c1, 0x0, 0x1);
        gbc.writeMem(0x84ed, { 0x8f });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x963e, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x84ed));
        // 8F 0392
        gbc.setState(0xd27, 0x54b8, 0x7790, 0xbdd7, 0x10df, 0x220f, 0x1, 0x0);
        gbc.writeMem(0xd27, { 0x8f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0xd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0393
        gbc.setState(0x2d69, 0x53b0, 0x6170, 0x56f9, 0xf9e7, 0x4dfe, 0x0, 0x0);
        gbc.writeMem(0x2d69, { 0x8f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x53b0, gbc.sp());
        EXPECT(0x2d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0394
        gbc.setState(0x747e, 0x94e7, 0xd4c0, 0x7be9, 0xd8c9, 0xf5c3, 0x0, 0x1);
        gbc.writeMem(0x747e, { 0x8f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x94e7, gbc.sp());
        EXPECT(0x747f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 0395
        gbc.setState(0xe7f9, 0xc411, 0xc420, 0x8095, 0xbc64, 0xb9c8, 0x1, 0x0);
        gbc.writeMem(0xe7f9, { 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc411, gbc.sp());
        EXPECT(0xe7fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe7f9));
        // 8F 0396
        gbc.setState(0x1b40, 0xea16, 0x6b60, 0xe5d, 0x6d17, 0xd15f, 0x0, 0x1);
        gbc.writeMem(0x1b40, { 0x8f });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xea16, gbc.sp());
        EXPECT(0x1b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0397
        gbc.setState(0x8e3f, 0xcb48, 0x3340, 0xa3a5, 0x4e75, 0xb8d, 0x1, 0x1);
        gbc.writeMem(0x8e3f, { 0x8f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcb48, gbc.sp());
        EXPECT(0x8e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8e3f));
        // 8F 0398
        gbc.setState(0x216e, 0x905c, 0x73b0, 0xdd7f, 0xbae7, 0x81df, 0x0, 0x1);
        gbc.writeMem(0x216e, { 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x905c, gbc.sp());
        EXPECT(0x216f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 0399
        gbc.setState(0x4d88, 0x2c5f, 0xe5b0, 0x4f82, 0x2154, 0x2029, 0x1, 0x0);
        gbc.writeMem(0x4d88, { 0x8f });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2c5f, gbc.sp());
        EXPECT(0x4d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 039A
        gbc.setState(0x8b2f, 0xbcfc, 0x8b50, 0x5732, 0x3d9b, 0x26a2, 0x1, 0x1);
        gbc.writeMem(0x8b2f, { 0x8f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbcfc, gbc.sp());
        EXPECT(0x8b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8b2f));
        // 8F 039B
        gbc.setState(0x2a58, 0xd302, 0x9500, 0x581b, 0xa9f6, 0xeb83, 0x0, 0x0);
        gbc.writeMem(0x2a58, { 0x8f });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd302, gbc.sp());
        EXPECT(0x2a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 039C
        gbc.setState(0x47f3, 0x42b7, 0x42b0, 0x805d, 0xb0f7, 0x425, 0x1, 0x1);
        gbc.writeMem(0x47f3, { 0x8f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0x47f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 039D
        gbc.setState(0xd32d, 0xdddf, 0x9760, 0x18b, 0xe715, 0x949b, 0x0, 0x1);
        gbc.writeMem(0xd32d, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdddf, gbc.sp());
        EXPECT(0xd32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd32d));
        // 8F 039E
        gbc.setState(0x1074, 0xe10b, 0x67b0, 0x1ec3, 0xd1ac, 0x1932, 0x1, 0x1);
        gbc.writeMem(0x1074, { 0x8f });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe10b, gbc.sp());
        EXPECT(0x1075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 039F
        gbc.setState(0x5741, 0x638e, 0x82d0, 0x3d20, 0xa484, 0x1bc1, 0x1, 0x1);
        gbc.writeMem(0x5741, { 0x8f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0x5742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03A0
        gbc.setState(0xcb78, 0xb43d, 0xc790, 0x5757, 0xcaa, 0xb7ae, 0x0, 0x1);
        gbc.writeMem(0xcb78, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb43d, gbc.sp());
        EXPECT(0xcb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcb78));
        // 8F 03A1
        gbc.setState(0xc0e9, 0xff65, 0x5470, 0xa914, 0xe190, 0x8634, 0x0, 0x0);
        gbc.writeMem(0xc0e9, { 0x8f });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xff65, gbc.sp());
        EXPECT(0xc0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc0e9));
        // 8F 03A2
        gbc.setState(0x712f, 0xeca9, 0x7610, 0xdbb6, 0xcf4c, 0xa782, 0x0, 0x1);
        gbc.writeMem(0x712f, { 0x8f });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0x7130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03A3
        gbc.setState(0x1b9b, 0x60f7, 0xe6a0, 0x449d, 0xa29, 0x5a44, 0x1, 0x0);
        gbc.writeMem(0x1b9b, { 0x8f });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x60f7, gbc.sp());
        EXPECT(0x1b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03A4
        gbc.setState(0xdc30, 0x240d, 0x5e70, 0x5e3b, 0xd9e, 0x4321, 0x0, 0x1);
        gbc.writeMem(0xdc30, { 0x8f });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x240d, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdc30));
        // 8F 03A5
        gbc.setState(0x556, 0x5897, 0x5e60, 0x3e5b, 0xd4f1, 0x38, 0x0, 0x0);
        gbc.writeMem(0x556, { 0x8f });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5897, gbc.sp());
        EXPECT(0x557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03A6
        gbc.setState(0xc056, 0x2659, 0x23e0, 0xb85, 0xc754, 0xa3a5, 0x0, 0x1);
        gbc.writeMem(0xc056, { 0x8f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xc057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xc056));
        // 8F 03A7
        gbc.setState(0x9945, 0xec5e, 0x2160, 0xa80f, 0x29ea, 0x7ae1, 0x0, 0x0);
        gbc.writeMem(0x9945, { 0x8f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0x9946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9945));
        // 8F 03A9
        gbc.setState(0x3bfb, 0x4cae, 0x2480, 0x4660, 0x8017, 0xeda1, 0x0, 0x1);
        gbc.writeMem(0x3bfb, { 0x8f });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x3bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03AA
        gbc.setState(0xa69, 0xcf80, 0xeee0, 0x6fb5, 0x9c2b, 0x2348, 0x0, 0x0);
        gbc.writeMem(0xa69, { 0x8f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xcf80, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03AB
        gbc.setState(0xfdd, 0xb56c, 0xa310, 0x7900, 0x379e, 0x53c3, 0x1, 0x1);
        gbc.writeMem(0xfdd, { 0x8f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb56c, gbc.sp());
        EXPECT(0xfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03AC
        gbc.setState(0xd5b4, 0x6e0e, 0x1720, 0xf333, 0x3431, 0x3295, 0x0, 0x1);
        gbc.writeMem(0xd5b4, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0xd5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd5b4));
        // 8F 03AD
        gbc.setState(0xbac8, 0xf28a, 0xa880, 0xf956, 0x7421, 0x295, 0x1, 0x1);
        gbc.writeMem(0xbac8, { 0x8f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf28a, gbc.sp());
        EXPECT(0xbac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbac8));
        // 8F 03AE
        gbc.setState(0x2b52, 0xbbb7, 0xcce0, 0x767a, 0x6d1d, 0x43f6, 0x0, 0x1);
        gbc.writeMem(0x2b52, { 0x8f });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0x2b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03AF
        gbc.setState(0x42a9, 0x8647, 0x5cc0, 0x8b5b, 0x1fd9, 0x398, 0x0, 0x1);
        gbc.writeMem(0x42a9, { 0x8f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0x42aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03B0
        gbc.setState(0xbfdc, 0x4d77, 0x2490, 0xeb72, 0x207a, 0xef2, 0x0, 0x1);
        gbc.writeMem(0xbfdc, { 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4d77, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xbfdc));
        // 8F 03B1
        gbc.setState(0x2206, 0x8c71, 0x8d00, 0x9c, 0xb269, 0x7aff, 0x1, 0x1);
        gbc.writeMem(0x2206, { 0x8f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8c71, gbc.sp());
        EXPECT(0x2207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03B2
        gbc.setState(0x17ac, 0xe9ec, 0x21a0, 0x70d7, 0x320e, 0xeac5, 0x1, 0x0);
        gbc.writeMem(0x17ac, { 0x8f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe9ec, gbc.sp());
        EXPECT(0x17ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03B3
        gbc.setState(0x806d, 0xb576, 0xc3b0, 0xb9e9, 0x1aea, 0x8398, 0x1, 0x1);
        gbc.writeMem(0x806d, { 0x8f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb576, gbc.sp());
        EXPECT(0x806e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x806d));
        // 8F 03B4
        gbc.setState(0xa14f, 0x83de, 0xb480, 0x245f, 0x7e40, 0x761b, 0x0, 0x1);
        gbc.writeMem(0xa14f, { 0x8f });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x83de, gbc.sp());
        EXPECT(0xa150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa14f));
        // 8F 03B5
        gbc.setState(0x51f1, 0x2cf6, 0x8350, 0xde15, 0xd311, 0x6bc, 0x1, 0x1);
        gbc.writeMem(0x51f1, { 0x8f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0x51f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03B6
        gbc.setState(0x48cc, 0xfc4b, 0x2190, 0x7c4b, 0x9cfe, 0x7b23, 0x0, 0x1);
        gbc.writeMem(0x48cc, { 0x8f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfc4b, gbc.sp());
        EXPECT(0x48cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03B7
        gbc.setState(0xab7c, 0xbc2, 0x6d50, 0xb2ee, 0xae9c, 0x6620, 0x0, 0x1);
        gbc.writeMem(0xab7c, { 0x8f });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbc2, gbc.sp());
        EXPECT(0xab7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xab7c));
        // 8F 03B8
        gbc.setState(0x7cb2, 0x9c6c, 0xd180, 0x21ec, 0xa3ea, 0xc31c, 0x0, 0x0);
        gbc.writeMem(0x7cb2, { 0x8f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9c6c, gbc.sp());
        EXPECT(0x7cb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03B9
        gbc.setState(0xd321, 0x4b2b, 0x28f0, 0xb59f, 0x9540, 0x287a, 0x1, 0x1);
        gbc.writeMem(0xd321, { 0x8f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4b2b, gbc.sp());
        EXPECT(0xd322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd321));
        // 8F 03BA
        gbc.setState(0xb396, 0xfaf7, 0x9a0, 0x59ad, 0x74e9, 0x3bed, 0x1, 0x0);
        gbc.writeMem(0xb396, { 0x8f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb396));
        // 8F 03BB
        gbc.setState(0xb11e, 0x88ab, 0x19c0, 0xf1a1, 0x36eb, 0xe9c, 0x1, 0x0);
        gbc.writeMem(0xb11e, { 0x8f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x88ab, gbc.sp());
        EXPECT(0xb11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb11e));
        // 8F 03BC
        gbc.setState(0x8c91, 0x5247, 0xb9e0, 0x7100, 0xc28a, 0x75b1, 0x1, 0x0);
        gbc.writeMem(0x8c91, { 0x8f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5247, gbc.sp());
        EXPECT(0x8c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8c91));
        // 8F 03BD
        gbc.setState(0x3167, 0x3a67, 0x9490, 0xc924, 0xb127, 0xb742, 0x1, 0x1);
        gbc.writeMem(0x3167, { 0x8f });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3a67, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03BE
        gbc.setState(0x41d, 0xe506, 0x1720, 0x6460, 0x558d, 0x3ec2, 0x1, 0x0);
        gbc.writeMem(0x41d, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0x41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03BF
        gbc.setState(0x9fd7, 0xb1f1, 0xb180, 0xd3d7, 0xdd48, 0x7a1d, 0x0, 0x1);
        gbc.writeMem(0x9fd7, { 0x8f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb1f1, gbc.sp());
        EXPECT(0x9fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9fd7));
        // 8F 03C0
        gbc.setState(0x19d9, 0xebf6, 0xfb50, 0x2eb7, 0xccf2, 0x510a, 0x1, 0x0);
        gbc.writeMem(0x19d9, { 0x8f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03C1
        gbc.setState(0xa0d, 0xd31c, 0x6610, 0x8944, 0x9cea, 0xb5f7, 0x0, 0x0);
        gbc.writeMem(0xa0d, { 0x8f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd31c, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03C2
        gbc.setState(0x20c4, 0xb07f, 0x1d70, 0xd234, 0xdfff, 0xafb2, 0x1, 0x0);
        gbc.writeMem(0x20c4, { 0x8f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb07f, gbc.sp());
        EXPECT(0x20c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03C3
        gbc.setState(0x1db4, 0x72b0, 0x6f50, 0x5fc6, 0xa4e4, 0x60ce, 0x0, 0x0);
        gbc.writeMem(0x1db4, { 0x8f });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x72b0, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03C4
        gbc.setState(0x9aa4, 0xb2a8, 0xaef0, 0x9c4e, 0x3478, 0x4f6c, 0x0, 0x1);
        gbc.writeMem(0x9aa4, { 0x8f });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb2a8, gbc.sp());
        EXPECT(0x9aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9aa4));
        // 8F 03C5
        gbc.setState(0x4365, 0xbc9a, 0xe700, 0x8bc, 0xe8ef, 0xd2f0, 0x0, 0x1);
        gbc.writeMem(0x4365, { 0x8f });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0x4366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03C6
        gbc.setState(0xa794, 0x9bba, 0x8f40, 0x7275, 0xb5ab, 0x5f6f, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0x8f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9bba, gbc.sp());
        EXPECT(0xa795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa794));
        // 8F 03C7
        gbc.setState(0x2f7d, 0xb9fc, 0xfb10, 0x6647, 0x8cee, 0x99b4, 0x1, 0x1);
        gbc.writeMem(0x2f7d, { 0x8f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb9fc, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03C8
        gbc.setState(0x1d0c, 0xef6e, 0xfd70, 0x26c3, 0xe0ea, 0x8611, 0x0, 0x0);
        gbc.writeMem(0x1d0c, { 0x8f });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xef6e, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03C9
        gbc.setState(0xd90f, 0xb9c0, 0x4f30, 0x806e, 0xf03c, 0x3b2, 0x1, 0x1);
        gbc.writeMem(0xd90f, { 0x8f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb9c0, gbc.sp());
        EXPECT(0xd910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd90f));
        // 8F 03CA
        gbc.setState(0x1e3e, 0x47ea, 0x3d60, 0xe412, 0xa2eb, 0xb103, 0x1, 0x1);
        gbc.writeMem(0x1e3e, { 0x8f });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x47ea, gbc.sp());
        EXPECT(0x1e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03CB
        gbc.setState(0x20ae, 0x9005, 0xfe90, 0xdb17, 0xf130, 0xd335, 0x1, 0x1);
        gbc.writeMem(0x20ae, { 0x8f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9005, gbc.sp());
        EXPECT(0x20af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03CC
        gbc.setState(0xb8a6, 0x8eb6, 0xacf0, 0xa24c, 0x858a, 0x16c3, 0x0, 0x1);
        gbc.writeMem(0xb8a6, { 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8eb6, gbc.sp());
        EXPECT(0xb8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb8a6));
        // 8F 03CD
        gbc.setState(0x15a9, 0xe5ce, 0x9810, 0x927a, 0x316c, 0x92fb, 0x0, 0x1);
        gbc.writeMem(0x15a9, { 0x8f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe5ce, gbc.sp());
        EXPECT(0x15aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03CE
        gbc.setState(0x79ca, 0x45bc, 0x7710, 0x7836, 0xc7e5, 0xe0c2, 0x1, 0x1);
        gbc.writeMem(0x79ca, { 0x8f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x45bc, gbc.sp());
        EXPECT(0x79cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03CF
        gbc.setState(0x9bcd, 0xd947, 0x2470, 0x5ff3, 0x598a, 0x16fc, 0x1, 0x1);
        gbc.writeMem(0x9bcd, { 0x8f });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0x9bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bcd));
        // 8F 03D0
        gbc.setState(0xe44d, 0x98da, 0x6fc0, 0x94e8, 0xfd28, 0x5162, 0x1, 0x1);
        gbc.writeMem(0xe44d, { 0x8f });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0xe44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe44d));
        // 8F 03D1
        gbc.setState(0xd2f0, 0x855c, 0x5ad0, 0x4bee, 0xc89d, 0xf1f2, 0x0, 0x0);
        gbc.writeMem(0xd2f0, { 0x8f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd2f0));
        // 8F 03D2
        gbc.setState(0xa7c6, 0x2fba, 0x5010, 0x6eb0, 0xc4eb, 0x88dd, 0x1, 0x1);
        gbc.writeMem(0xa7c6, { 0x8f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2fba, gbc.sp());
        EXPECT(0xa7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa7c6));
        // 8F 03D3
        gbc.setState(0x9d79, 0x606a, 0x44a0, 0x4fcf, 0xe95a, 0x8105, 0x0, 0x1);
        gbc.writeMem(0x9d79, { 0x8f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x606a, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9d79));
        // 8F 03D5
        gbc.setState(0x7753, 0xce6f, 0xea40, 0x390f, 0xd66a, 0x7101, 0x0, 0x1);
        gbc.writeMem(0x7753, { 0x8f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xce6f, gbc.sp());
        EXPECT(0x7754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03D6
        gbc.setState(0xb8a8, 0x598d, 0xe810, 0x408c, 0x745d, 0xd4d, 0x1, 0x1);
        gbc.writeMem(0xb8a8, { 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x598d, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb8a8));
        // 8F 03D7
        gbc.setState(0x3564, 0x485d, 0xdaa0, 0xbfbb, 0x3ad7, 0x8891, 0x0, 0x0);
        gbc.writeMem(0x3564, { 0x8f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x485d, gbc.sp());
        EXPECT(0x3565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03D9
        gbc.setState(0x6213, 0xce2b, 0xfe40, 0x9721, 0x42c7, 0x6d35, 0x0, 0x1);
        gbc.writeMem(0x6213, { 0x8f });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x6214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03DA
        gbc.setState(0x646, 0x3cfd, 0x2fb0, 0x8412, 0x53ec, 0xb91d, 0x1, 0x1);
        gbc.writeMem(0x646, { 0x8f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03DB
        gbc.setState(0xe3ab, 0x1ef6, 0x3a40, 0xc18, 0x1983, 0xe313, 0x1, 0x0);
        gbc.writeMem(0xe3ab, { 0x8f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1ef6, gbc.sp());
        EXPECT(0xe3ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xe3ab));
        // 8F 03DC
        gbc.setState(0x128a, 0x2517, 0xb1d0, 0x96b, 0xac2a, 0x4209, 0x0, 0x1);
        gbc.writeMem(0x128a, { 0x8f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2517, gbc.sp());
        EXPECT(0x128b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03DD
        gbc.setState(0x59c7, 0x88a, 0x1d90, 0xa567, 0x3085, 0xc82b, 0x1, 0x1);
        gbc.writeMem(0x59c7, { 0x8f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x88a, gbc.sp());
        EXPECT(0x59c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03DE
        gbc.setState(0x10c0, 0xfdae, 0x3eb0, 0xe9f0, 0x5ac3, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x10c0, { 0x8f });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfdae, gbc.sp());
        EXPECT(0x10c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03DF
        gbc.setState(0x4fc8, 0x7135, 0x2740, 0xaca5, 0xfa4a, 0x6450, 0x1, 0x1);
        gbc.writeMem(0x4fc8, { 0x8f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7135, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03E0
        gbc.setState(0xace7, 0x15c8, 0x9d10, 0x8b7c, 0x67b, 0x83ac, 0x0, 0x1);
        gbc.writeMem(0xace7, { 0x8f });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0xace8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xace7));
        // 8F 03E1
        gbc.setState(0xa5c1, 0x9b79, 0x47f0, 0x2379, 0x6a08, 0xf3bc, 0x0, 0x0);
        gbc.writeMem(0xa5c1, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9b79, gbc.sp());
        EXPECT(0xa5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xa5c1));
        // 8F 03E2
        gbc.setState(0xed10, 0xa989, 0x7310, 0x1201, 0xd699, 0xa6b, 0x1, 0x0);
        gbc.writeMem(0xed10, { 0x8f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa989, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xed10));
        // 8F 03E3
        gbc.setState(0xcfed, 0x2a08, 0xe8b0, 0x2e28, 0xfde2, 0x6555, 0x1, 0x0);
        gbc.writeMem(0xcfed, { 0x8f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0xcfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xcfed));
        // 8F 03E4
        gbc.setState(0x7fbb, 0x958, 0xc810, 0x3012, 0x5bc4, 0xfd02, 0x0, 0x0);
        gbc.writeMem(0x7fbb, { 0x8f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0x7fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8F 03E5
        gbc.setState(0x290f, 0x406b, 0x6220, 0xc07d, 0x459d, 0x3164, 0x1, 0x0);
        gbc.writeMem(0x290f, { 0x8f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x406b, gbc.sp());
        EXPECT(0x2910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8F 03E6
        gbc.setState(0xd60e, 0xf99a, 0x9720, 0xe4d5, 0xa3d2, 0x2a9f, 0x0, 0x0);
        gbc.writeMem(0xd60e, { 0x8f });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd60e));
        // 8F 03E7
        gbc.setState(0x67d8, 0xc5be, 0xf40, 0x99e5, 0xfb2f, 0x94e0, 0x0, 0x0);
        gbc.writeMem(0x67d8, { 0x8f });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc5be, gbc.sp());
        EXPECT(0x67d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
