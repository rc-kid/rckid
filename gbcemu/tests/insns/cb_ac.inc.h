    TEST(gbcemu, opcode_cb_ac) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB AC 0000
        gbc.setState(0xb82f, 0xc10f, 0x9c50, 0x3a70, 0x4553, 0x5bf, 0x1, 0x1);
        gbc.writeMem(0xb82f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc10f, gbc.sp());
        EXPECT(0xb831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82f));
        EXPECT(0xac, gbc.readMem(0xb830));
        // CB AC 0001
        gbc.setState(0x3237, 0x5a65, 0x5d40, 0xd11, 0x84a3, 0x5540, 0x0, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x3239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0003
        gbc.setState(0x2d52, 0x40a, 0x7990, 0x53f7, 0x9cac, 0xa126, 0x0, 0x0);
        gbc.writeMem(0x2d52, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x40a, gbc.sp());
        EXPECT(0x2d54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0004
        gbc.setState(0x2e42, 0x8ad3, 0x6230, 0x8896, 0x9970, 0x59ff, 0x1, 0x1);
        gbc.writeMem(0x2e42, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8ad3, gbc.sp());
        EXPECT(0x2e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0005
        gbc.setState(0x49bf, 0xd12f, 0xb2e0, 0xd2a4, 0x8c, 0xdf7f, 0x1, 0x1);
        gbc.writeMem(0x49bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd12f, gbc.sp());
        EXPECT(0x49c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0006
        gbc.setState(0x4457, 0x7f07, 0x2960, 0x153b, 0xb5ec, 0xa144, 0x0, 0x0);
        gbc.writeMem(0x4457, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7f07, gbc.sp());
        EXPECT(0x4459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0007
        gbc.setState(0x3ca5, 0x2e9d, 0xe140, 0x339c, 0x60ab, 0xa037, 0x1, 0x0);
        gbc.writeMem(0x3ca5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0x3ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0008
        gbc.setState(0x8f2, 0x1610, 0x61e0, 0xd799, 0x6e8f, 0x13b3, 0x0, 0x1);
        gbc.writeMem(0x8f2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1610, gbc.sp());
        EXPECT(0x8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0009
        gbc.setState(0x5939, 0x3568, 0xd8a0, 0x4ab5, 0xc87a, 0xdb18, 0x0, 0x1);
        gbc.writeMem(0x5939, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3568, gbc.sp());
        EXPECT(0x593b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 000A
        gbc.setState(0x2b89, 0xd3c3, 0x5f70, 0x443f, 0x798d, 0xdd94, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 000B
        gbc.setState(0x7511, 0x48e9, 0xc600, 0x8337, 0x92e2, 0x6d63, 0x0, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x48e9, gbc.sp());
        EXPECT(0x7513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 000C
        gbc.setState(0x73e8, 0x7f58, 0xb090, 0x9ecd, 0x2c99, 0x199c, 0x1, 0x0);
        gbc.writeMem(0x73e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7f58, gbc.sp());
        EXPECT(0x73ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 000D
        gbc.setState(0x5fa2, 0x189d, 0x3fd0, 0xbcff, 0x93eb, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x189d, gbc.sp());
        EXPECT(0x5fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 000E
        gbc.setState(0xc4c8, 0x4f6d, 0x6ed0, 0x68f1, 0x514b, 0xa4aa, 0x1, 0x0);
        gbc.writeMem(0xc4c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4f6d, gbc.sp());
        EXPECT(0xc4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c8));
        EXPECT(0xac, gbc.readMem(0xc4c9));
        // CB AC 000F
        gbc.setState(0x25f1, 0x6058, 0x9bc0, 0xaee0, 0x6009, 0x1609, 0x1, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x25f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0010
        gbc.setState(0x9ad3, 0xc039, 0x8e00, 0x21b9, 0x476d, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0x9ad3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0x9ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad3));
        EXPECT(0xac, gbc.readMem(0x9ad4));
        // CB AC 0011
        gbc.setState(0x3483, 0xe18c, 0x2190, 0xb168, 0x64cb, 0x2a3e, 0x0, 0x0);
        gbc.writeMem(0x3483, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe18c, gbc.sp());
        EXPECT(0x3485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0012
        gbc.setState(0xadc1, 0x8528, 0x5700, 0x8ef9, 0xed1c, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8528, gbc.sp());
        EXPECT(0xadc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc1));
        EXPECT(0xac, gbc.readMem(0xadc2));
        // CB AC 0013
        gbc.setState(0x14bf, 0xa40d, 0x5b80, 0xaa04, 0xe43, 0x8de0, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa40d, gbc.sp());
        EXPECT(0x14c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0014
        gbc.setState(0xc8c0, 0xc00a, 0x5b0, 0xb62b, 0x7bdc, 0x6a35, 0x0, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc00a, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0xac, gbc.readMem(0xc8c1));
        // CB AC 0015
        gbc.setState(0x2bca, 0x79de, 0x7c50, 0x665b, 0xb239, 0x6981, 0x0, 0x0);
        gbc.writeMem(0x2bca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x79de, gbc.sp());
        EXPECT(0x2bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0016
        gbc.setState(0x8e41, 0x242c, 0x9da0, 0xb2ec, 0x9346, 0xa42, 0x1, 0x0);
        gbc.writeMem(0x8e41, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x242c, gbc.sp());
        EXPECT(0x8e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e41));
        EXPECT(0xac, gbc.readMem(0x8e42));
        // CB AC 0017
        gbc.setState(0x64f2, 0x417f, 0x3550, 0x9e4a, 0x487b, 0x77ff, 0x0, 0x0);
        gbc.writeMem(0x64f2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x64f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0018
        gbc.setState(0x6192, 0xcc03, 0x5b70, 0x7bce, 0x575a, 0x3644, 0x1, 0x1);
        gbc.writeMem(0x6192, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcc03, gbc.sp());
        EXPECT(0x6194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0019
        gbc.setState(0xb98b, 0xabdd, 0xbf20, 0x72fd, 0x101f, 0xe622, 0x0, 0x1);
        gbc.writeMem(0xb98b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xabdd, gbc.sp());
        EXPECT(0xb98d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98b));
        EXPECT(0xac, gbc.readMem(0xb98c));
        // CB AC 001A
        gbc.setState(0x9762, 0x762b, 0xcdd0, 0xb63f, 0x50e9, 0x86ea, 0x0, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x762b, gbc.sp());
        EXPECT(0x9764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9762));
        EXPECT(0xac, gbc.readMem(0x9763));
        // CB AC 001B
        gbc.setState(0xe08, 0x8f33, 0x740, 0x3aa4, 0xc848, 0x8297, 0x1, 0x0);
        gbc.writeMem(0xe08, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 001C
        gbc.setState(0x102d, 0xf0bc, 0xa920, 0x791b, 0x89e8, 0x147a, 0x0, 0x1);
        gbc.writeMem(0x102d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf0bc, gbc.sp());
        EXPECT(0x102f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 001D
        gbc.setState(0x8a41, 0x78a7, 0xc1b0, 0x9147, 0x18a3, 0xf6e, 0x0, 0x1);
        gbc.writeMem(0x8a41, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x78a7, gbc.sp());
        EXPECT(0x8a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a41));
        EXPECT(0xac, gbc.readMem(0x8a42));
        // CB AC 001E
        gbc.setState(0x7ec0, 0x3065, 0x5320, 0xa41, 0xb0c8, 0x2f10, 0x1, 0x0);
        gbc.writeMem(0x7ec0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3065, gbc.sp());
        EXPECT(0x7ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 001F
        gbc.setState(0x78c0, 0x21bb, 0xdd00, 0xff12, 0xa918, 0x5324, 0x1, 0x0);
        gbc.writeMem(0x78c0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x21bb, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0020
        gbc.setState(0xe8c8, 0x615c, 0x2460, 0x316e, 0x3cbe, 0xab19, 0x0, 0x0);
        gbc.writeMem(0xe8c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x615c, gbc.sp());
        EXPECT(0xe8ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c8));
        EXPECT(0xac, gbc.readMem(0xe8c9));
        // CB AC 0021
        gbc.setState(0x6e8c, 0x111d, 0x6850, 0xf827, 0xdff1, 0x3c87, 0x1, 0x0);
        gbc.writeMem(0x6e8c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x111d, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0022
        gbc.setState(0xd1b7, 0x5524, 0x9480, 0xce04, 0xf5c4, 0x4321, 0x0, 0x1);
        gbc.writeMem(0xd1b7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5524, gbc.sp());
        EXPECT(0xd1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b7));
        EXPECT(0xac, gbc.readMem(0xd1b8));
        // CB AC 0023
        gbc.setState(0x7c22, 0xe8df, 0x3060, 0x9345, 0x2d14, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe8df, gbc.sp());
        EXPECT(0x7c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0024
        gbc.setState(0x524d, 0x91a7, 0xa090, 0x5021, 0xe10e, 0xe081, 0x0, 0x1);
        gbc.writeMem(0x524d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x91a7, gbc.sp());
        EXPECT(0x524f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0025
        gbc.setState(0x64e9, 0xf5ac, 0x61d0, 0xe215, 0x3735, 0x2530, 0x1, 0x0);
        gbc.writeMem(0x64e9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf5ac, gbc.sp());
        EXPECT(0x64eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0026
        gbc.setState(0x7a97, 0xdfcf, 0x47c0, 0x8fac, 0x8c85, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x7a97, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0x7a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0027
        gbc.setState(0x3e65, 0x7007, 0xd5d0, 0x120c, 0x48c7, 0x5812, 0x1, 0x0);
        gbc.writeMem(0x3e65, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7007, gbc.sp());
        EXPECT(0x3e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0028
        gbc.setState(0x4026, 0xb336, 0x7fe0, 0x9d77, 0x3173, 0x426c, 0x1, 0x1);
        gbc.writeMem(0x4026, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb336, gbc.sp());
        EXPECT(0x4028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0029
        gbc.setState(0x10d7, 0x5d09, 0xcae0, 0xd750, 0x610d, 0x8956, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5d09, gbc.sp());
        EXPECT(0x10d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 002A
        gbc.setState(0x2fc8, 0x9b15, 0xe5a0, 0xc45a, 0xe820, 0x1a0e, 0x0, 0x0);
        gbc.writeMem(0x2fc8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 002B
        gbc.setState(0x9c46, 0x858f, 0xaaa0, 0xdda1, 0x2895, 0x73a4, 0x1, 0x0);
        gbc.writeMem(0x9c46, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x858f, gbc.sp());
        EXPECT(0x9c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c46));
        EXPECT(0xac, gbc.readMem(0x9c47));
        // CB AC 002C
        gbc.setState(0x47c5, 0x8c99, 0x9370, 0xeeee, 0x8011, 0xb8c2, 0x1, 0x1);
        gbc.writeMem(0x47c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c99, gbc.sp());
        EXPECT(0x47c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 002E
        gbc.setState(0x3e75, 0x41b1, 0x8fd0, 0xc0ee, 0xa4f, 0x41d3, 0x0, 0x1);
        gbc.writeMem(0x3e75, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x41b1, gbc.sp());
        EXPECT(0x3e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 002F
        gbc.setState(0xe8e, 0xb022, 0xf5c0, 0xa585, 0x7f60, 0x2e5d, 0x0, 0x0);
        gbc.writeMem(0xe8e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb022, gbc.sp());
        EXPECT(0xe90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0030
        gbc.setState(0x11a6, 0x70bb, 0xcd50, 0xec12, 0x65ef, 0x4515, 0x1, 0x0);
        gbc.writeMem(0x11a6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x70bb, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0031
        gbc.setState(0x818, 0x1c13, 0x6aa0, 0x2d1e, 0x9ea7, 0xe896, 0x0, 0x1);
        gbc.writeMem(0x818, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0x81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0032
        gbc.setState(0x878d, 0xa7a7, 0x71e0, 0x80dd, 0xecd6, 0x7c44, 0x0, 0x0);
        gbc.writeMem(0x878d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa7a7, gbc.sp());
        EXPECT(0x878f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x878d));
        EXPECT(0xac, gbc.readMem(0x878e));
        // CB AC 0033
        gbc.setState(0x4715, 0x586, 0x7720, 0x7574, 0x6966, 0x7e3c, 0x0, 0x1);
        gbc.writeMem(0x4715, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x586, gbc.sp());
        EXPECT(0x4717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0034
        gbc.setState(0x36e, 0x73ac, 0x7d20, 0xbee5, 0x463c, 0x1ba0, 0x0, 0x0);
        gbc.writeMem(0x36e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x73ac, gbc.sp());
        EXPECT(0x370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0036
        gbc.setState(0x69c7, 0x5df9, 0xa900, 0x2f2c, 0xe5cf, 0xcc8c, 0x0, 0x0);
        gbc.writeMem(0x69c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5df9, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0038
        gbc.setState(0x13bc, 0x5e9e, 0x49a0, 0x1013, 0x8b10, 0x8c4d, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5e9e, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0039
        gbc.setState(0xe4c5, 0x283a, 0x8360, 0x3789, 0x1e7d, 0xd5b1, 0x1, 0x0);
        gbc.writeMem(0xe4c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x283a, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c5));
        EXPECT(0xac, gbc.readMem(0xe4c6));
        // CB AC 003A
        gbc.setState(0xcba3, 0xe85b, 0xac10, 0x41d7, 0xa993, 0xcd86, 0x1, 0x0);
        gbc.writeMem(0xcba3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe85b, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0xac, gbc.readMem(0xcba4));
        // CB AC 003B
        gbc.setState(0x48dd, 0xdbb4, 0xf370, 0xce35, 0xee71, 0xa37, 0x1, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0x48df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 003C
        gbc.setState(0x3dca, 0x73c1, 0xed50, 0xa7c3, 0x39c, 0x7bcb, 0x0, 0x0);
        gbc.writeMem(0x3dca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x73c1, gbc.sp());
        EXPECT(0x3dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 003D
        gbc.setState(0xb514, 0x1ee4, 0xc240, 0x53dc, 0xf8e8, 0x5d62, 0x0, 0x0);
        gbc.writeMem(0xb514, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1ee4, gbc.sp());
        EXPECT(0xb516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb514));
        EXPECT(0xac, gbc.readMem(0xb515));
        // CB AC 003E
        gbc.setState(0xd08b, 0xcadf, 0x21c0, 0x7cf1, 0x3353, 0x2f51, 0x1, 0x0);
        gbc.writeMem(0xd08b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcadf, gbc.sp());
        EXPECT(0xd08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd08b));
        EXPECT(0xac, gbc.readMem(0xd08c));
        // CB AC 003F
        gbc.setState(0x5876, 0xbaf2, 0x2440, 0xe9a0, 0x7549, 0x9f2, 0x0, 0x1);
        gbc.writeMem(0x5876, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbaf2, gbc.sp());
        EXPECT(0x5878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0040
        gbc.setState(0xee2e, 0x40ae, 0xbfb0, 0x3678, 0xcd2c, 0xe7f5, 0x0, 0x0);
        gbc.writeMem(0xee2e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0xee30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee2e));
        EXPECT(0xac, gbc.readMem(0xee2f));
        // CB AC 0041
        gbc.setState(0xeb50, 0xac99, 0x14d0, 0xd60e, 0xb7ba, 0xd2d3, 0x1, 0x0);
        gbc.writeMem(0xeb50, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xac99, gbc.sp());
        EXPECT(0xeb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb50));
        EXPECT(0xac, gbc.readMem(0xeb51));
        // CB AC 0042
        gbc.setState(0xc18a, 0x620b, 0xc210, 0x76b2, 0x47cd, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0xc18a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x620b, gbc.sp());
        EXPECT(0xc18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc18a));
        EXPECT(0xac, gbc.readMem(0xc18b));
        // CB AC 0043
        gbc.setState(0xa983, 0xd359, 0xfba0, 0xbb7, 0xe2c4, 0x7389, 0x1, 0x1);
        gbc.writeMem(0xa983, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd359, gbc.sp());
        EXPECT(0xa985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa983));
        EXPECT(0xac, gbc.readMem(0xa984));
        // CB AC 0044
        gbc.setState(0x6b7e, 0xcc6f, 0x6680, 0x879, 0xaff3, 0x3d24, 0x1, 0x0);
        gbc.writeMem(0x6b7e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xcc6f, gbc.sp());
        EXPECT(0x6b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0045
        gbc.setState(0xa586, 0x62ec, 0x5560, 0x9ae0, 0x42f7, 0x3b46, 0x0, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x62ec, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa586));
        EXPECT(0xac, gbc.readMem(0xa587));
        // CB AC 0048
        gbc.setState(0x83e9, 0x71f7, 0x2a50, 0x7912, 0xfcea, 0xa83b, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x71f7, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e9));
        EXPECT(0xac, gbc.readMem(0x83ea));
        // CB AC 0049
        gbc.setState(0x207a, 0x43d9, 0x2910, 0x50d7, 0x9215, 0xc9a4, 0x1, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x43d9, gbc.sp());
        EXPECT(0x207c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 004A
        gbc.setState(0x7355, 0xc25f, 0x5480, 0xd547, 0x551, 0x734e, 0x1, 0x0);
        gbc.writeMem(0x7355, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc25f, gbc.sp());
        EXPECT(0x7357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 004B
        gbc.setState(0x1bcb, 0xee5a, 0xbbc0, 0x173a, 0x890d, 0xdcb0, 0x1, 0x1);
        gbc.writeMem(0x1bcb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xee5a, gbc.sp());
        EXPECT(0x1bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 004C
        gbc.setState(0xd455, 0x4d6d, 0x1ea0, 0x67b1, 0xceec, 0x23d9, 0x0, 0x0);
        gbc.writeMem(0xd455, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4d6d, gbc.sp());
        EXPECT(0xd457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd455));
        EXPECT(0xac, gbc.readMem(0xd456));
        // CB AC 004D
        gbc.setState(0x502c, 0x5b80, 0xe720, 0xbcde, 0x7c26, 0xed2d, 0x0, 0x1);
        gbc.writeMem(0x502c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5b80, gbc.sp());
        EXPECT(0x502e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 004E
        gbc.setState(0xe9e4, 0xbd87, 0x9270, 0x4a16, 0xf4e7, 0x38d7, 0x0, 0x1);
        gbc.writeMem(0xe9e4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbd87, gbc.sp());
        EXPECT(0xe9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e4));
        EXPECT(0xac, gbc.readMem(0xe9e5));
        // CB AC 004F
        gbc.setState(0x8d28, 0xc0ac, 0x9410, 0x351f, 0x80e7, 0x4afd, 0x1, 0x0);
        gbc.writeMem(0x8d28, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc0ac, gbc.sp());
        EXPECT(0x8d2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d28));
        EXPECT(0xac, gbc.readMem(0x8d29));
        // CB AC 0050
        gbc.setState(0x34b4, 0x37e6, 0x6130, 0x25ad, 0x5e27, 0x875e, 0x1, 0x0);
        gbc.writeMem(0x34b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x37e6, gbc.sp());
        EXPECT(0x34b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0051
        gbc.setState(0xc628, 0x416a, 0x7730, 0xa2d0, 0x4706, 0x6344, 0x0, 0x0);
        gbc.writeMem(0xc628, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x416a, gbc.sp());
        EXPECT(0xc62a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc628));
        EXPECT(0xac, gbc.readMem(0xc629));
        // CB AC 0053
        gbc.setState(0x3d38, 0x4cc7, 0x7e60, 0xfcab, 0xe068, 0xc613, 0x1, 0x1);
        gbc.writeMem(0x3d38, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4cc7, gbc.sp());
        EXPECT(0x3d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0054
        gbc.setState(0x423a, 0xbca3, 0xec80, 0x3afa, 0x968, 0x810f, 0x0, 0x0);
        gbc.writeMem(0x423a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbca3, gbc.sp());
        EXPECT(0x423c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0056
        gbc.setState(0xcf72, 0x46c5, 0x6a50, 0xe058, 0xbf2c, 0x23a, 0x1, 0x1);
        gbc.writeMem(0xcf72, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x46c5, gbc.sp());
        EXPECT(0xcf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf72));
        EXPECT(0xac, gbc.readMem(0xcf73));
        // CB AC 0057
        gbc.setState(0xb97c, 0x8f8e, 0x4f50, 0xddd7, 0x246a, 0xab0c, 0x1, 0x0);
        gbc.writeMem(0xb97c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8f8e, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb97c));
        EXPECT(0xac, gbc.readMem(0xb97d));
        // CB AC 0058
        gbc.setState(0x3808, 0xf7a1, 0xf020, 0x7943, 0x1199, 0x37b, 0x1, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf7a1, gbc.sp());
        EXPECT(0x380a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0059
        gbc.setState(0xe2c1, 0xef6c, 0x5140, 0xb086, 0xa681, 0x2ae9, 0x0, 0x0);
        gbc.writeMem(0xe2c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef6c, gbc.sp());
        EXPECT(0xe2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c1));
        EXPECT(0xac, gbc.readMem(0xe2c2));
        // CB AC 005A
        gbc.setState(0x5f95, 0x4d68, 0xdd40, 0x697e, 0x47ec, 0x6d9c, 0x0, 0x0);
        gbc.writeMem(0x5f95, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 005B
        gbc.setState(0xaa1d, 0xab28, 0xc690, 0xb7c6, 0xf937, 0xca44, 0x1, 0x1);
        gbc.writeMem(0xaa1d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xab28, gbc.sp());
        EXPECT(0xaa1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1d));
        EXPECT(0xac, gbc.readMem(0xaa1e));
        // CB AC 005C
        gbc.setState(0x7ccd, 0x3985, 0xdf60, 0xd6ff, 0x5bb7, 0x6107, 0x0, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3985, gbc.sp());
        EXPECT(0x7ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 005D
        gbc.setState(0x658e, 0xdd18, 0xc7a0, 0xa569, 0x3a31, 0xc01e, 0x0, 0x0);
        gbc.writeMem(0x658e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdd18, gbc.sp());
        EXPECT(0x6590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 005E
        gbc.setState(0xe5f1, 0xe244, 0xd1a0, 0xaba1, 0x6572, 0x400d, 0x1, 0x0);
        gbc.writeMem(0xe5f1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe244, gbc.sp());
        EXPECT(0xe5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f1));
        EXPECT(0xac, gbc.readMem(0xe5f2));
        // CB AC 005F
        gbc.setState(0xc313, 0xdd94, 0x76b0, 0x5f0a, 0xae7e, 0x2bd3, 0x1, 0x1);
        gbc.writeMem(0xc313, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdd94, gbc.sp());
        EXPECT(0xc315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc313));
        EXPECT(0xac, gbc.readMem(0xc314));
        // CB AC 0060
        gbc.setState(0x3d2f, 0x51fe, 0x3970, 0xcd3c, 0x8948, 0xee10, 0x0, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0061
        gbc.setState(0xa52a, 0x8398, 0xeb40, 0x1b4e, 0xa03, 0x20ae, 0x1, 0x1);
        gbc.writeMem(0xa52a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8398, gbc.sp());
        EXPECT(0xa52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52a));
        EXPECT(0xac, gbc.readMem(0xa52b));
        // CB AC 0062
        gbc.setState(0xa632, 0x8d54, 0xf9b0, 0xabb5, 0x167c, 0xc84, 0x0, 0x1);
        gbc.writeMem(0xa632, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8d54, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa632));
        EXPECT(0xac, gbc.readMem(0xa633));
        // CB AC 0063
        gbc.setState(0x769f, 0x1b61, 0x29e0, 0x5e1f, 0x8684, 0x4443, 0x1, 0x0);
        gbc.writeMem(0x769f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0x76a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0064
        gbc.setState(0x6714, 0xc22b, 0x3fe0, 0x3046, 0xfeea, 0x5900, 0x0, 0x1);
        gbc.writeMem(0x6714, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc22b, gbc.sp());
        EXPECT(0x6716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0065
        gbc.setState(0x768, 0x4946, 0x3870, 0x4353, 0x9b67, 0x8fc2, 0x1, 0x0);
        gbc.writeMem(0x768, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4946, gbc.sp());
        EXPECT(0x76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0066
        gbc.setState(0xa4fe, 0xc0b8, 0xb290, 0x3159, 0x109e, 0x3c77, 0x0, 0x0);
        gbc.writeMem(0xa4fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc0b8, gbc.sp());
        EXPECT(0xa500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fe));
        EXPECT(0xac, gbc.readMem(0xa4ff));
        // CB AC 0068
        gbc.setState(0x761, 0xc108, 0xe290, 0x1aac, 0x6c85, 0x723a, 0x0, 0x0);
        gbc.writeMem(0x761, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0x763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0069
        gbc.setState(0x6e89, 0x6273, 0x3dd0, 0x2d36, 0x1ce3, 0x30c0, 0x1, 0x0);
        gbc.writeMem(0x6e89, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6273, gbc.sp());
        EXPECT(0x6e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 006A
        gbc.setState(0xcfc5, 0xdfd0, 0x4dc0, 0x8a1b, 0xb73a, 0x4466, 0x0, 0x1);
        gbc.writeMem(0xcfc5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdfd0, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc5));
        EXPECT(0xac, gbc.readMem(0xcfc6));
        // CB AC 006B
        gbc.setState(0xedfe, 0xf491, 0x4f20, 0xb447, 0x82cd, 0xeb88, 0x1, 0x0);
        gbc.writeMem(0xedfe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0xac, gbc.readMem(0xedff));
        // CB AC 006C
        gbc.setState(0xb13, 0xf37, 0xe970, 0x6be6, 0xc7d9, 0x207c, 0x1, 0x0);
        gbc.writeMem(0xb13, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0xb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 006D
        gbc.setState(0x1e94, 0xb1f8, 0x4440, 0x99b2, 0xb172, 0xe5b0, 0x1, 0x1);
        gbc.writeMem(0x1e94, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb1f8, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 006E
        gbc.setState(0xad4b, 0xc870, 0x630, 0x461c, 0xd2f1, 0xae53, 0x0, 0x1);
        gbc.writeMem(0xad4b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc870, gbc.sp());
        EXPECT(0xad4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4b));
        EXPECT(0xac, gbc.readMem(0xad4c));
        // CB AC 006F
        gbc.setState(0x6821, 0x61dd, 0x95f0, 0xd97f, 0x24dd, 0x2941, 0x1, 0x0);
        gbc.writeMem(0x6821, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x61dd, gbc.sp());
        EXPECT(0x6823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0070
        gbc.setState(0x9dc2, 0x4c38, 0xa980, 0x39bb, 0x3afe, 0x79ab, 0x0, 0x0);
        gbc.writeMem(0x9dc2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4c38, gbc.sp());
        EXPECT(0x9dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc2));
        EXPECT(0xac, gbc.readMem(0x9dc3));
        // CB AC 0071
        gbc.setState(0x3899, 0xe7a3, 0xc7e0, 0x9a58, 0x6851, 0x752a, 0x1, 0x1);
        gbc.writeMem(0x3899, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0072
        gbc.setState(0x4527, 0x2981, 0x6da0, 0xa17c, 0xbfaf, 0x48a, 0x0, 0x1);
        gbc.writeMem(0x4527, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0073
        gbc.setState(0xe2d3, 0xab42, 0x61d0, 0x6ae2, 0x63f5, 0xd160, 0x0, 0x0);
        gbc.writeMem(0xe2d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xab42, gbc.sp());
        EXPECT(0xe2d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d3));
        EXPECT(0xac, gbc.readMem(0xe2d4));
        // CB AC 0074
        gbc.setState(0xb49c, 0xa786, 0xea20, 0x71c2, 0xdcee, 0xb4ae, 0x1, 0x1);
        gbc.writeMem(0xb49c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa786, gbc.sp());
        EXPECT(0xb49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49c));
        EXPECT(0xac, gbc.readMem(0xb49d));
        // CB AC 0075
        gbc.setState(0x5502, 0x2ec0, 0xc420, 0x37d1, 0xd5aa, 0xdeb0, 0x1, 0x1);
        gbc.writeMem(0x5502, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2ec0, gbc.sp());
        EXPECT(0x5504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0076
        gbc.setState(0x3b5d, 0x174a, 0x2970, 0x74a0, 0x8b95, 0xabc5, 0x0, 0x1);
        gbc.writeMem(0x3b5d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x174a, gbc.sp());
        EXPECT(0x3b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0077
        gbc.setState(0xccd1, 0x7d22, 0x960, 0x3700, 0xeea3, 0xbf3, 0x0, 0x0);
        gbc.writeMem(0xccd1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7d22, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd1));
        EXPECT(0xac, gbc.readMem(0xccd2));
        // CB AC 007A
        gbc.setState(0x5549, 0x95f3, 0xfbe0, 0x97fb, 0x9d92, 0xcc31, 0x1, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x95f3, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 007B
        gbc.setState(0x2582, 0x7ef6, 0x8d20, 0xb113, 0x6f1e, 0x5dc, 0x1, 0x0);
        gbc.writeMem(0x2582, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0x2584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 007C
        gbc.setState(0x812e, 0xe8fa, 0x6c60, 0xb6, 0x7a85, 0x76aa, 0x0, 0x0);
        gbc.writeMem(0x812e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe8fa, gbc.sp());
        EXPECT(0x8130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812e));
        EXPECT(0xac, gbc.readMem(0x812f));
        // CB AC 007D
        gbc.setState(0x1280, 0xf54c, 0xb200, 0x825e, 0x693f, 0x3597, 0x1, 0x0);
        gbc.writeMem(0x1280, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf54c, gbc.sp());
        EXPECT(0x1282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 007E
        gbc.setState(0x5c48, 0xd632, 0x36b0, 0x5bc3, 0xfd79, 0xd8f8, 0x1, 0x1);
        gbc.writeMem(0x5c48, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd632, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 007F
        gbc.setState(0xc5b8, 0xcb1d, 0x6770, 0x4d83, 0x614b, 0xe2b7, 0x1, 0x0);
        gbc.writeMem(0xc5b8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xcb1d, gbc.sp());
        EXPECT(0xc5ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b8));
        EXPECT(0xac, gbc.readMem(0xc5b9));
        // CB AC 0080
        gbc.setState(0xbd9f, 0x5744, 0x4b0, 0xb049, 0xe962, 0xae4b, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5744, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9f));
        EXPECT(0xac, gbc.readMem(0xbda0));
        // CB AC 0081
        gbc.setState(0x10fa, 0xbb34, 0xd600, 0xe5f3, 0xfbd3, 0xde09, 0x0, 0x0);
        gbc.writeMem(0x10fa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0x10fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0082
        gbc.setState(0x7ee4, 0x7d1, 0x6a30, 0x4b25, 0xdc3, 0x226a, 0x0, 0x1);
        gbc.writeMem(0x7ee4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7d1, gbc.sp());
        EXPECT(0x7ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0083
        gbc.setState(0x6e16, 0xa977, 0x8d60, 0xa7c2, 0xe40e, 0xf222, 0x1, 0x1);
        gbc.writeMem(0x6e16, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0x6e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0084
        gbc.setState(0x6074, 0x3b01, 0xdda0, 0xd464, 0x6dbb, 0xf0db, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3b01, gbc.sp());
        EXPECT(0x6076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0085
        gbc.setState(0xd346, 0xc554, 0x7640, 0x1290, 0xa28c, 0x9ad4, 0x0, 0x1);
        gbc.writeMem(0xd346, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc554, gbc.sp());
        EXPECT(0xd348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd346));
        EXPECT(0xac, gbc.readMem(0xd347));
        // CB AC 0086
        gbc.setState(0x528f, 0x2b86, 0xe880, 0x1951, 0x9a16, 0xb1e2, 0x1, 0x0);
        gbc.writeMem(0x528f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0x5291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0087
        gbc.setState(0xc402, 0xc4bb, 0xd300, 0x39c2, 0x3a4c, 0xc38d, 0x1, 0x1);
        gbc.writeMem(0xc402, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc4bb, gbc.sp());
        EXPECT(0xc404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc402));
        EXPECT(0xac, gbc.readMem(0xc403));
        // CB AC 0088
        gbc.setState(0x5ecf, 0x7721, 0x2040, 0xafd2, 0x379c, 0xde91, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7721, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0089
        gbc.setState(0x4896, 0x23a0, 0xea60, 0x68de, 0xc435, 0x9817, 0x0, 0x0);
        gbc.writeMem(0x4896, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x23a0, gbc.sp());
        EXPECT(0x4898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 008A
        gbc.setState(0x9ae5, 0x5d0f, 0xcfd0, 0xa637, 0x58ec, 0x8771, 0x0, 0x0);
        gbc.writeMem(0x9ae5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5d0f, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae5));
        EXPECT(0xac, gbc.readMem(0x9ae6));
        // CB AC 008B
        gbc.setState(0xe38f, 0x4aaa, 0xd20, 0xc6d5, 0x3395, 0xec86, 0x0, 0x1);
        gbc.writeMem(0xe38f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0xe391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38f));
        EXPECT(0xac, gbc.readMem(0xe390));
        // CB AC 008C
        gbc.setState(0x7430, 0x6e25, 0xd450, 0xe2b8, 0xd4d7, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0x7430, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0x7432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 008E
        gbc.setState(0xe8b0, 0x9f1c, 0xbd70, 0xf2ea, 0x5978, 0x8f24, 0x0, 0x0);
        gbc.writeMem(0xe8b0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9f1c, gbc.sp());
        EXPECT(0xe8b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b0));
        EXPECT(0xac, gbc.readMem(0xe8b1));
        // CB AC 008F
        gbc.setState(0x5620, 0x4769, 0x3880, 0x3369, 0xf840, 0x71db, 0x1, 0x0);
        gbc.writeMem(0x5620, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4769, gbc.sp());
        EXPECT(0x5622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0090
        gbc.setState(0xa00b, 0x5123, 0xe680, 0xab9e, 0x6575, 0xfad6, 0x0, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5123, gbc.sp());
        EXPECT(0xa00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00b));
        EXPECT(0xac, gbc.readMem(0xa00c));
        // CB AC 0091
        gbc.setState(0xdf1c, 0x3492, 0x7610, 0xfc06, 0xff68, 0xb636, 0x0, 0x1);
        gbc.writeMem(0xdf1c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0xdf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1c));
        EXPECT(0xac, gbc.readMem(0xdf1d));
        // CB AC 0092
        gbc.setState(0xa801, 0xfcb3, 0x2ee0, 0x439d, 0x74bd, 0x72e2, 0x0, 0x0);
        gbc.writeMem(0xa801, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfcb3, gbc.sp());
        EXPECT(0xa803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa801));
        EXPECT(0xac, gbc.readMem(0xa802));
        // CB AC 0093
        gbc.setState(0x3e15, 0x467d, 0xb1a0, 0xca29, 0x5b24, 0xceb4, 0x1, 0x1);
        gbc.writeMem(0x3e15, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x467d, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0094
        gbc.setState(0x18ef, 0xb5b9, 0x66e0, 0x12a2, 0x836f, 0x91fd, 0x1, 0x0);
        gbc.writeMem(0x18ef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb5b9, gbc.sp());
        EXPECT(0x18f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0095
        gbc.setState(0x6f9b, 0x41fd, 0xaa00, 0x1fc1, 0x3aa3, 0xc697, 0x0, 0x1);
        gbc.writeMem(0x6f9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x41fd, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0096
        gbc.setState(0xcc6e, 0xde1, 0xf8f0, 0x1a55, 0xa190, 0xfb61, 0x0, 0x0);
        gbc.writeMem(0xcc6e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xde1, gbc.sp());
        EXPECT(0xcc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6e));
        EXPECT(0xac, gbc.readMem(0xcc6f));
        // CB AC 0097
        gbc.setState(0x8507, 0x8f85, 0xca80, 0xd816, 0xdbcf, 0xbe0d, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8f85, gbc.sp());
        EXPECT(0x8509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8507));
        EXPECT(0xac, gbc.readMem(0x8508));
        // CB AC 0098
        gbc.setState(0x9ec5, 0x7860, 0x6b30, 0x5a8f, 0xc075, 0x96cf, 0x1, 0x1);
        gbc.writeMem(0x9ec5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7860, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec5));
        EXPECT(0xac, gbc.readMem(0x9ec6));
        // CB AC 0099
        gbc.setState(0x4ff3, 0xdf7f, 0xee50, 0x7cb3, 0x3afb, 0x407, 0x1, 0x1);
        gbc.writeMem(0x4ff3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf7f, gbc.sp());
        EXPECT(0x4ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 009A
        gbc.setState(0xe739, 0x67c, 0x7810, 0xf460, 0x60d0, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x67c, gbc.sp());
        EXPECT(0xe73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe739));
        EXPECT(0xac, gbc.readMem(0xe73a));
        // CB AC 009B
        gbc.setState(0x7181, 0x74be, 0x7590, 0x8a5e, 0x9e34, 0xe5ca, 0x0, 0x1);
        gbc.writeMem(0x7181, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x74be, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 009C
        gbc.setState(0x8fb8, 0xaad7, 0x1a50, 0xd53a, 0x2391, 0x6d7f, 0x1, 0x1);
        gbc.writeMem(0x8fb8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaad7, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb8));
        EXPECT(0xac, gbc.readMem(0x8fb9));
        // CB AC 009D
        gbc.setState(0xa382, 0xa1dc, 0x9440, 0xd8e9, 0xcb10, 0x27bd, 0x1, 0x1);
        gbc.writeMem(0xa382, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa1dc, gbc.sp());
        EXPECT(0xa384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa382));
        EXPECT(0xac, gbc.readMem(0xa383));
        // CB AC 009E
        gbc.setState(0xc8f, 0xae21, 0x13d0, 0x5186, 0x95b4, 0x89ed, 0x1, 0x0);
        gbc.writeMem(0xc8f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xae21, gbc.sp());
        EXPECT(0xc91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 009F
        gbc.setState(0xb658, 0x21ee, 0xb6e0, 0x94fd, 0x533f, 0x2be9, 0x0, 0x0);
        gbc.writeMem(0xb658, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x21ee, gbc.sp());
        EXPECT(0xb65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb658));
        EXPECT(0xac, gbc.readMem(0xb659));
        // CB AC 00A0
        gbc.setState(0x6d9d, 0xdcf, 0xf440, 0xc0fc, 0xde1f, 0xc416, 0x0, 0x1);
        gbc.writeMem(0x6d9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdcf, gbc.sp());
        EXPECT(0x6d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00A1
        gbc.setState(0x4750, 0x2e5f, 0xfdb0, 0xb106, 0x516a, 0xec17, 0x1, 0x1);
        gbc.writeMem(0x4750, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2e5f, gbc.sp());
        EXPECT(0x4752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00A2
        gbc.setState(0xbd16, 0xc359, 0x8590, 0x9b4, 0x2c11, 0xd398, 0x1, 0x0);
        gbc.writeMem(0xbd16, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc359, gbc.sp());
        EXPECT(0xbd18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd16));
        EXPECT(0xac, gbc.readMem(0xbd17));
        // CB AC 00A3
        gbc.setState(0x1d45, 0x3168, 0x94a0, 0xbc2b, 0x9b47, 0x4dc6, 0x0, 0x0);
        gbc.writeMem(0x1d45, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3168, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00A4
        gbc.setState(0xc11c, 0xd524, 0xcd40, 0xd955, 0x76f, 0x344c, 0x1, 0x1);
        gbc.writeMem(0xc11c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd524, gbc.sp());
        EXPECT(0xc11e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11c));
        EXPECT(0xac, gbc.readMem(0xc11d));
        // CB AC 00A5
        gbc.setState(0x7e9a, 0xa51a, 0xf540, 0x5108, 0xda1d, 0xf250, 0x1, 0x1);
        gbc.writeMem(0x7e9a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa51a, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00A6
        gbc.setState(0xd91f, 0xe8f7, 0x4910, 0x583a, 0x485c, 0x4a27, 0x0, 0x1);
        gbc.writeMem(0xd91f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe8f7, gbc.sp());
        EXPECT(0xd921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91f));
        EXPECT(0xac, gbc.readMem(0xd920));
        // CB AC 00A8
        gbc.setState(0x8777, 0x4772, 0xe270, 0xeb28, 0x86d4, 0x1262, 0x1, 0x0);
        gbc.writeMem(0x8777, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4772, gbc.sp());
        EXPECT(0x8779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8777));
        EXPECT(0xac, gbc.readMem(0x8778));
        // CB AC 00A9
        gbc.setState(0x31bc, 0x33a9, 0x2790, 0x2434, 0xaf99, 0xce86, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0x31be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00AA
        gbc.setState(0x2c37, 0x3c89, 0x4870, 0x1dd5, 0xaf3d, 0xa3b9, 0x1, 0x1);
        gbc.writeMem(0x2c37, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3c89, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00AB
        gbc.setState(0x3886, 0x6cf7, 0x9930, 0xd539, 0xaab9, 0x2c11, 0x0, 0x0);
        gbc.writeMem(0x3886, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6cf7, gbc.sp());
        EXPECT(0x3888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00AC
        gbc.setState(0x9b1e, 0xe08, 0x1fe0, 0xe3e9, 0x43ff, 0x6b0f, 0x1, 0x0);
        gbc.writeMem(0x9b1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe08, gbc.sp());
        EXPECT(0x9b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1e));
        EXPECT(0xac, gbc.readMem(0x9b1f));
        // CB AC 00AD
        gbc.setState(0xc729, 0xd22b, 0xd60, 0xa7a0, 0x644, 0xbf40, 0x0, 0x1);
        gbc.writeMem(0xc729, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd22b, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc729));
        EXPECT(0xac, gbc.readMem(0xc72a));
        // CB AC 00AE
        gbc.setState(0x1415, 0x8302, 0xa520, 0x9dc9, 0x7d2d, 0xb367, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8302, gbc.sp());
        EXPECT(0x1417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00B0
        gbc.setState(0x46fb, 0x1d2e, 0x7af0, 0x8b04, 0xcdfd, 0xb518, 0x0, 0x1);
        gbc.writeMem(0x46fb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1d2e, gbc.sp());
        EXPECT(0x46fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00B1
        gbc.setState(0x9558, 0x6bd4, 0xbc00, 0x7b7e, 0x25dc, 0x6155, 0x0, 0x1);
        gbc.writeMem(0x9558, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6bd4, gbc.sp());
        EXPECT(0x955a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9558));
        EXPECT(0xac, gbc.readMem(0x9559));
        // CB AC 00B2
        gbc.setState(0xa3b3, 0x1f27, 0x9710, 0x4935, 0xb346, 0x32a5, 0x0, 0x1);
        gbc.writeMem(0xa3b3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1f27, gbc.sp());
        EXPECT(0xa3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b3));
        EXPECT(0xac, gbc.readMem(0xa3b4));
        // CB AC 00B3
        gbc.setState(0x8a5f, 0x7fe1, 0x420, 0x6188, 0xe28c, 0x137b, 0x1, 0x0);
        gbc.writeMem(0x8a5f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7fe1, gbc.sp());
        EXPECT(0x8a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a5f));
        EXPECT(0xac, gbc.readMem(0x8a60));
        // CB AC 00B4
        gbc.setState(0x6f07, 0xc14d, 0x2610, 0x7c12, 0xfc8d, 0x31bd, 0x1, 0x1);
        gbc.writeMem(0x6f07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc14d, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00B5
        gbc.setState(0xabec, 0xb3da, 0xa8c0, 0xe2de, 0xdbbd, 0xffe7, 0x1, 0x1);
        gbc.writeMem(0xabec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb3da, gbc.sp());
        EXPECT(0xabee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabec));
        EXPECT(0xac, gbc.readMem(0xabed));
        // CB AC 00B6
        gbc.setState(0x1296, 0xafd8, 0x98e0, 0x1514, 0x6bde, 0xda67, 0x1, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x1298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00B7
        gbc.setState(0x6ca7, 0x68c, 0xbb30, 0x8db1, 0x5ff3, 0xc734, 0x0, 0x1);
        gbc.writeMem(0x6ca7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x68c, gbc.sp());
        EXPECT(0x6ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00B8
        gbc.setState(0x7542, 0x3b36, 0x5900, 0x83c2, 0xfdf3, 0xc77d, 0x1, 0x1);
        gbc.writeMem(0x7542, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3b36, gbc.sp());
        EXPECT(0x7544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00B9
        gbc.setState(0x9659, 0x29af, 0x5a10, 0x5869, 0xdc8c, 0x5c0e, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x29af, gbc.sp());
        EXPECT(0x965b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9659));
        EXPECT(0xac, gbc.readMem(0x965a));
        // CB AC 00BA
        gbc.setState(0xd054, 0x1845, 0x66f0, 0xeab2, 0x5bab, 0x94ca, 0x1, 0x1);
        gbc.writeMem(0xd054, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1845, gbc.sp());
        EXPECT(0xd056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd054));
        EXPECT(0xac, gbc.readMem(0xd055));
        // CB AC 00BB
        gbc.setState(0x80b9, 0x62d8, 0x98d0, 0x10ab, 0xef4, 0xc07a, 0x1, 0x0);
        gbc.writeMem(0x80b9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x62d8, gbc.sp());
        EXPECT(0x80bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b9));
        EXPECT(0xac, gbc.readMem(0x80ba));
        // CB AC 00BC
        gbc.setState(0x5337, 0x8307, 0x9e10, 0x7381, 0x13e5, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0x5337, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8307, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00BD
        gbc.setState(0x5898, 0x4a1f, 0xe990, 0x6171, 0xf8b1, 0x9aee, 0x0, 0x0);
        gbc.writeMem(0x5898, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0x589a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00BE
        gbc.setState(0x9883, 0x12d, 0xf270, 0x5ed7, 0x8848, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0x9883, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x12d, gbc.sp());
        EXPECT(0x9885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9883));
        EXPECT(0xac, gbc.readMem(0x9884));
        // CB AC 00BF
        gbc.setState(0xa259, 0xf8ae, 0xbe40, 0x889c, 0xb633, 0xd3fd, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf8ae, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa259));
        EXPECT(0xac, gbc.readMem(0xa25a));
        // CB AC 00C0
        gbc.setState(0x9aaf, 0x75ba, 0xed40, 0x2170, 0xf09f, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0x9aaf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x75ba, gbc.sp());
        EXPECT(0x9ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aaf));
        EXPECT(0xac, gbc.readMem(0x9ab0));
        // CB AC 00C1
        gbc.setState(0x639b, 0x29b2, 0xb130, 0x7ac8, 0x7f0f, 0x24c9, 0x1, 0x1);
        gbc.writeMem(0x639b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x29b2, gbc.sp());
        EXPECT(0x639d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00C2
        gbc.setState(0xe3e1, 0x919c, 0xba00, 0x3e53, 0xfb7f, 0xe983, 0x0, 0x1);
        gbc.writeMem(0xe3e1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x919c, gbc.sp());
        EXPECT(0xe3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e1));
        EXPECT(0xac, gbc.readMem(0xe3e2));
        // CB AC 00C3
        gbc.setState(0x3ff1, 0xfcd7, 0x9db0, 0x9a93, 0xe7e, 0xb92, 0x0, 0x0);
        gbc.writeMem(0x3ff1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfcd7, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00C4
        gbc.setState(0x670, 0x9ddf, 0xfcd0, 0x81cc, 0x74e3, 0x9d1e, 0x1, 0x1);
        gbc.writeMem(0x670, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0x672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00C5
        gbc.setState(0x568b, 0x944b, 0x750, 0x25b7, 0x6a4, 0xbb75, 0x1, 0x0);
        gbc.writeMem(0x568b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0x568d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00C6
        gbc.setState(0xc4ec, 0x4025, 0x6e30, 0x1654, 0x5fba, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0xc4ec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4025, gbc.sp());
        EXPECT(0xc4ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ec));
        EXPECT(0xac, gbc.readMem(0xc4ed));
        // CB AC 00C7
        gbc.setState(0xfc9, 0xb9fc, 0xc200, 0x6d0e, 0x740d, 0xb859, 0x0, 0x1);
        gbc.writeMem(0xfc9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb9fc, gbc.sp());
        EXPECT(0xfcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00C8
        gbc.setState(0xbe3d, 0xf165, 0x2110, 0xaf0a, 0xdbd3, 0x2344, 0x0, 0x1);
        gbc.writeMem(0xbe3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf165, gbc.sp());
        EXPECT(0xbe3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3d));
        EXPECT(0xac, gbc.readMem(0xbe3e));
        // CB AC 00C9
        gbc.setState(0xb01c, 0x5312, 0xb180, 0x856c, 0xc24b, 0x2db4, 0x1, 0x1);
        gbc.writeMem(0xb01c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5312, gbc.sp());
        EXPECT(0xb01e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb01c));
        EXPECT(0xac, gbc.readMem(0xb01d));
        // CB AC 00CA
        gbc.setState(0x615c, 0x33d8, 0xe5e0, 0xc974, 0x6331, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0x615c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x33d8, gbc.sp());
        EXPECT(0x615e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00CB
        gbc.setState(0x1701, 0xfe5f, 0x3860, 0x3503, 0x20cf, 0x20e1, 0x1, 0x1);
        gbc.writeMem(0x1701, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0x1703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00CC
        gbc.setState(0x74d3, 0x25c3, 0xc140, 0xa585, 0x1dc8, 0x4058, 0x0, 0x0);
        gbc.writeMem(0x74d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x25c3, gbc.sp());
        EXPECT(0x74d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00CD
        gbc.setState(0x76e4, 0xe1dc, 0x4b30, 0xe0a8, 0x240a, 0x44a4, 0x0, 0x1);
        gbc.writeMem(0x76e4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe1dc, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00CE
        gbc.setState(0xaa3c, 0x490a, 0x2df0, 0xb28c, 0xa500, 0x7cbe, 0x1, 0x1);
        gbc.writeMem(0xaa3c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x490a, gbc.sp());
        EXPECT(0xaa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa3c));
        EXPECT(0xac, gbc.readMem(0xaa3d));
        // CB AC 00CF
        gbc.setState(0x45a3, 0xd4ec, 0xd170, 0xf98, 0x210, 0x519b, 0x1, 0x0);
        gbc.writeMem(0x45a3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd4ec, gbc.sp());
        EXPECT(0x45a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00D0
        gbc.setState(0xdcef, 0xaca6, 0xdc70, 0xf8ac, 0x1457, 0x4213, 0x0, 0x0);
        gbc.writeMem(0xdcef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaca6, gbc.sp());
        EXPECT(0xdcf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcef));
        EXPECT(0xac, gbc.readMem(0xdcf0));
        // CB AC 00D1
        gbc.setState(0xeae2, 0xdbac, 0x5410, 0xb196, 0x1198, 0xd76e, 0x1, 0x1);
        gbc.writeMem(0xeae2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdbac, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae2));
        EXPECT(0xac, gbc.readMem(0xeae3));
        // CB AC 00D2
        gbc.setState(0xb412, 0x59, 0xdb20, 0x4aee, 0xb4eb, 0xb991, 0x1, 0x0);
        gbc.writeMem(0xb412, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x59, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb412));
        EXPECT(0xac, gbc.readMem(0xb413));
        // CB AC 00D3
        gbc.setState(0xfd3, 0xd463, 0x9740, 0x6cf4, 0x1b5, 0x9127, 0x0, 0x0);
        gbc.writeMem(0xfd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd463, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00D4
        gbc.setState(0x9dc4, 0xfea8, 0xac50, 0x33d9, 0x86fa, 0x95a9, 0x1, 0x0);
        gbc.writeMem(0x9dc4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0x9dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc4));
        EXPECT(0xac, gbc.readMem(0x9dc5));
        // CB AC 00D5
        gbc.setState(0x571b, 0xadce, 0x6af0, 0x798b, 0xe8a1, 0x7041, 0x1, 0x1);
        gbc.writeMem(0x571b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xadce, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00D6
        gbc.setState(0xa430, 0x32c6, 0x270, 0x4b17, 0xb334, 0xffee, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x32c6, gbc.sp());
        EXPECT(0xa432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa430));
        EXPECT(0xac, gbc.readMem(0xa431));
        // CB AC 00D7
        gbc.setState(0x3160, 0xf78, 0xe880, 0x9147, 0x4a6f, 0x3f2a, 0x1, 0x1);
        gbc.writeMem(0x3160, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf78, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00D8
        gbc.setState(0x258d, 0xda29, 0xa510, 0xdde3, 0xc656, 0xb43f, 0x1, 0x0);
        gbc.writeMem(0x258d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xda29, gbc.sp());
        EXPECT(0x258f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00D9
        gbc.setState(0xa714, 0xc380, 0x9170, 0x3c27, 0xb7a0, 0x5615, 0x0, 0x0);
        gbc.writeMem(0xa714, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc380, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa714));
        EXPECT(0xac, gbc.readMem(0xa715));
        // CB AC 00DA
        gbc.setState(0xcae5, 0xb823, 0x8c80, 0x3fc, 0xd2ff, 0xca7, 0x0, 0x0);
        gbc.writeMem(0xcae5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb823, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae5));
        EXPECT(0xac, gbc.readMem(0xcae6));
        // CB AC 00DB
        gbc.setState(0x6ec8, 0x6115, 0x37f0, 0xea81, 0x883c, 0x66a9, 0x0, 0x1);
        gbc.writeMem(0x6ec8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6115, gbc.sp());
        EXPECT(0x6eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00DC
        gbc.setState(0xcec, 0xf5ab, 0x2a70, 0xc6c2, 0x83e8, 0xfcb9, 0x0, 0x0);
        gbc.writeMem(0xcec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0xcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00DD
        gbc.setState(0xb31f, 0x5a0f, 0x3460, 0x6d33, 0xc364, 0xaf83, 0x0, 0x0);
        gbc.writeMem(0xb31f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5a0f, gbc.sp());
        EXPECT(0xb321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31f));
        EXPECT(0xac, gbc.readMem(0xb320));
        // CB AC 00DE
        gbc.setState(0x65f9, 0xbdb1, 0xf0a0, 0x3bb9, 0xf67a, 0xd555, 0x1, 0x0);
        gbc.writeMem(0x65f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbdb1, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00DF
        gbc.setState(0xed43, 0xb7da, 0x73a0, 0x752d, 0xfdd2, 0xc3e2, 0x1, 0x0);
        gbc.writeMem(0xed43, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed43));
        EXPECT(0xac, gbc.readMem(0xed44));
        // CB AC 00E1
        gbc.setState(0x733f, 0xb62d, 0x1070, 0xd17b, 0xfe2b, 0x85f9, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0x7341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00E2
        gbc.setState(0x1166, 0x5d34, 0x4440, 0x16e2, 0x2c51, 0x4216, 0x1, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5d34, gbc.sp());
        EXPECT(0x1168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00E3
        gbc.setState(0xb640, 0xcabd, 0xd610, 0x8a54, 0x4e9d, 0x1bb2, 0x1, 0x1);
        gbc.writeMem(0xb640, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0xb642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb640));
        EXPECT(0xac, gbc.readMem(0xb641));
        // CB AC 00E4
        gbc.setState(0xdf01, 0xf44, 0x9380, 0x67c6, 0xd3d6, 0x487e, 0x1, 0x0);
        gbc.writeMem(0xdf01, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf44, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf01));
        EXPECT(0xac, gbc.readMem(0xdf02));
        // CB AC 00E5
        gbc.setState(0xdd78, 0xda1d, 0xe460, 0xe7c8, 0x95fb, 0x3add, 0x1, 0x1);
        gbc.writeMem(0xdd78, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xda1d, gbc.sp());
        EXPECT(0xdd7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd78));
        EXPECT(0xac, gbc.readMem(0xdd79));
        // CB AC 00E6
        gbc.setState(0x60c1, 0x807d, 0x8780, 0x882f, 0x4e32, 0xc51d, 0x1, 0x1);
        gbc.writeMem(0x60c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x807d, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00E7
        gbc.setState(0x2444, 0x6634, 0xef0, 0xee55, 0x171b, 0x2499, 0x0, 0x1);
        gbc.writeMem(0x2444, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6634, gbc.sp());
        EXPECT(0x2446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00E8
        gbc.setState(0x9dc1, 0x3fac, 0x6780, 0xf3f4, 0xcc47, 0xf8c1, 0x1, 0x1);
        gbc.writeMem(0x9dc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3fac, gbc.sp());
        EXPECT(0x9dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc1));
        EXPECT(0xac, gbc.readMem(0x9dc2));
        // CB AC 00E9
        gbc.setState(0xaf90, 0x3dc6, 0xc9e0, 0xfd03, 0xc5e8, 0x2efc, 0x0, 0x1);
        gbc.writeMem(0xaf90, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0xaf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf90));
        EXPECT(0xac, gbc.readMem(0xaf91));
        // CB AC 00EB
        gbc.setState(0x18d, 0x229e, 0x6450, 0xf372, 0xc6b1, 0xb890, 0x1, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x229e, gbc.sp());
        EXPECT(0x18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00EC
        gbc.setState(0x54ee, 0xbb8, 0x6070, 0xab07, 0x9b12, 0x436c, 0x1, 0x0);
        gbc.writeMem(0x54ee, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbb8, gbc.sp());
        EXPECT(0x54f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00ED
        gbc.setState(0xd635, 0x34da, 0xc0e0, 0x2267, 0x96ec, 0x7999, 0x1, 0x0);
        gbc.writeMem(0xd635, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x34da, gbc.sp());
        EXPECT(0xd637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd635));
        EXPECT(0xac, gbc.readMem(0xd636));
        // CB AC 00EE
        gbc.setState(0x3943, 0x322f, 0xeb90, 0x8db9, 0xeb48, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0x3943, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x322f, gbc.sp());
        EXPECT(0x3945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00EF
        gbc.setState(0xe31b, 0xd8aa, 0x4590, 0x339f, 0xf52, 0xfe2d, 0x1, 0x0);
        gbc.writeMem(0xe31b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd8aa, gbc.sp());
        EXPECT(0xe31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31b));
        EXPECT(0xac, gbc.readMem(0xe31c));
        // CB AC 00F1
        gbc.setState(0x47c6, 0xf9af, 0x7f0, 0x2109, 0x4da8, 0xc20, 0x1, 0x1);
        gbc.writeMem(0x47c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf9af, gbc.sp());
        EXPECT(0x47c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00F3
        gbc.setState(0xa3fc, 0x6453, 0xa670, 0x2b10, 0xe6b9, 0x5b20, 0x0, 0x1);
        gbc.writeMem(0xa3fc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0xa3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3fc));
        EXPECT(0xac, gbc.readMem(0xa3fd));
        // CB AC 00F4
        gbc.setState(0x43e5, 0x702, 0x3c60, 0xba7, 0x6823, 0xd044, 0x1, 0x1);
        gbc.writeMem(0x43e5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x702, gbc.sp());
        EXPECT(0x43e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00F5
        gbc.setState(0x926c, 0xc449, 0x6700, 0x968, 0x943b, 0x2573, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc449, gbc.sp());
        EXPECT(0x926e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x926c));
        EXPECT(0xac, gbc.readMem(0x926d));
        // CB AC 00F6
        gbc.setState(0x768f, 0x3a72, 0xc6b0, 0xd54, 0xa231, 0x7921, 0x1, 0x1);
        gbc.writeMem(0x768f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3a72, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00F7
        gbc.setState(0x8465, 0xfd68, 0xd180, 0x9bc5, 0xcd09, 0x716f, 0x1, 0x1);
        gbc.writeMem(0x8465, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfd68, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8465));
        EXPECT(0xac, gbc.readMem(0x8466));
        // CB AC 00F8
        gbc.setState(0xa899, 0x1f8d, 0x4360, 0x7c69, 0x69d3, 0xbeef, 0x0, 0x1);
        gbc.writeMem(0xa899, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1f8d, gbc.sp());
        EXPECT(0xa89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa899));
        EXPECT(0xac, gbc.readMem(0xa89a));
        // CB AC 00F9
        gbc.setState(0x4507, 0x150e, 0xe300, 0x13eb, 0xd4a, 0x497d, 0x0, 0x1);
        gbc.writeMem(0x4507, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x150e, gbc.sp());
        EXPECT(0x4509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00FA
        gbc.setState(0x3ae1, 0xf883, 0xcc0, 0xe3e5, 0x186f, 0x76c2, 0x1, 0x1);
        gbc.writeMem(0x3ae1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf883, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00FB
        gbc.setState(0x7889, 0x53d4, 0x7ec0, 0x5129, 0x7fa2, 0x14c4, 0x1, 0x0);
        gbc.writeMem(0x7889, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0x788b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 00FC
        gbc.setState(0x1e7f, 0xe89a, 0x9fd0, 0xfc64, 0x18d5, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x1e7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe89a, gbc.sp());
        EXPECT(0x1e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 00FD
        gbc.setState(0xc31e, 0x7a31, 0xcfb0, 0x8138, 0xff91, 0x9f83, 0x1, 0x0);
        gbc.writeMem(0xc31e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7a31, gbc.sp());
        EXPECT(0xc320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31e));
        EXPECT(0xac, gbc.readMem(0xc31f));
        // CB AC 00FE
        gbc.setState(0xd9bf, 0x5284, 0x6bc0, 0x3771, 0x1caf, 0x7e3b, 0x0, 0x0);
        gbc.writeMem(0xd9bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5284, gbc.sp());
        EXPECT(0xd9c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9bf));
        EXPECT(0xac, gbc.readMem(0xd9c0));
        // CB AC 00FF
        gbc.setState(0xc5cd, 0x5223, 0x2700, 0x5abf, 0x5525, 0x3da2, 0x0, 0x0);
        gbc.writeMem(0xc5cd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5223, gbc.sp());
        EXPECT(0xc5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cd));
        EXPECT(0xac, gbc.readMem(0xc5ce));
        // CB AC 0100
        gbc.setState(0xfd1, 0x7ef6, 0xa600, 0xdca0, 0x5c29, 0x5c10, 0x1, 0x1);
        gbc.writeMem(0xfd1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0xfd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0101
        gbc.setState(0x8fe6, 0xbfc8, 0xcf00, 0x5277, 0x7b73, 0x3343, 0x0, 0x0);
        gbc.writeMem(0x8fe6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbfc8, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe6));
        EXPECT(0xac, gbc.readMem(0x8fe7));
        // CB AC 0102
        gbc.setState(0xd9ca, 0x847d, 0x3c80, 0xace3, 0x440c, 0xb3e8, 0x1, 0x1);
        gbc.writeMem(0xd9ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x847d, gbc.sp());
        EXPECT(0xd9cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ca));
        EXPECT(0xac, gbc.readMem(0xd9cb));
        // CB AC 0103
        gbc.setState(0x3c35, 0x6a06, 0xbf40, 0xd303, 0x5979, 0xec12, 0x1, 0x1);
        gbc.writeMem(0x3c35, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0x3c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0104
        gbc.setState(0x25bf, 0x807e, 0xc5b0, 0x52a4, 0x68e6, 0x7911, 0x0, 0x0);
        gbc.writeMem(0x25bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x807e, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0105
        gbc.setState(0xd4b1, 0x93db, 0xc0, 0xb1cd, 0x135f, 0x25d0, 0x0, 0x0);
        gbc.writeMem(0xd4b1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x93db, gbc.sp());
        EXPECT(0xd4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b1));
        EXPECT(0xac, gbc.readMem(0xd4b2));
        // CB AC 0106
        gbc.setState(0xc6c8, 0x9c48, 0x5220, 0xb562, 0x2c81, 0xd779, 0x0, 0x1);
        gbc.writeMem(0xc6c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9c48, gbc.sp());
        EXPECT(0xc6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c8));
        EXPECT(0xac, gbc.readMem(0xc6c9));
        // CB AC 0107
        gbc.setState(0xaa28, 0x8bef, 0xc970, 0xce0f, 0xca38, 0x5331, 0x1, 0x1);
        gbc.writeMem(0xaa28, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8bef, gbc.sp());
        EXPECT(0xaa2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa28));
        EXPECT(0xac, gbc.readMem(0xaa29));
        // CB AC 0108
        gbc.setState(0x99d5, 0x5a88, 0x29b0, 0x42b3, 0xa14d, 0x3b80, 0x1, 0x1);
        gbc.writeMem(0x99d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5a88, gbc.sp());
        EXPECT(0x99d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d5));
        EXPECT(0xac, gbc.readMem(0x99d6));
        // CB AC 0109
        gbc.setState(0x163c, 0x38a3, 0x2300, 0xda45, 0x348a, 0x4ff7, 0x0, 0x1);
        gbc.writeMem(0x163c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x38a3, gbc.sp());
        EXPECT(0x163e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 010A
        gbc.setState(0x81c5, 0xf835, 0x2860, 0xfed5, 0xbbe5, 0xf66d, 0x0, 0x1);
        gbc.writeMem(0x81c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf835, gbc.sp());
        EXPECT(0x81c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c5));
        EXPECT(0xac, gbc.readMem(0x81c6));
        // CB AC 010B
        gbc.setState(0x4ea0, 0x8ec5, 0x6220, 0x8686, 0xb5e3, 0x4615, 0x1, 0x0);
        gbc.writeMem(0x4ea0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8ec5, gbc.sp());
        EXPECT(0x4ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 010C
        gbc.setState(0x24e5, 0x8215, 0xc230, 0x6416, 0xbef0, 0x8b39, 0x1, 0x0);
        gbc.writeMem(0x24e5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8215, gbc.sp());
        EXPECT(0x24e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 010D
        gbc.setState(0x971f, 0x7c7c, 0x1100, 0xc1a1, 0xade6, 0x49aa, 0x1, 0x1);
        gbc.writeMem(0x971f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971f));
        EXPECT(0xac, gbc.readMem(0x9720));
        // CB AC 010E
        gbc.setState(0xed7, 0x117f, 0x59a0, 0x986e, 0x5eee, 0x2a3a, 0x0, 0x1);
        gbc.writeMem(0xed7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x117f, gbc.sp());
        EXPECT(0xed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 010F
        gbc.setState(0x531c, 0xf912, 0x2bc0, 0x62d3, 0x9593, 0xb9e, 0x1, 0x0);
        gbc.writeMem(0x531c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0x531e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0110
        gbc.setState(0x6424, 0x6502, 0x180, 0xb274, 0xd576, 0x45a2, 0x0, 0x1);
        gbc.writeMem(0x6424, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6502, gbc.sp());
        EXPECT(0x6426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0111
        gbc.setState(0xebf0, 0x4fc0, 0xed20, 0xe81f, 0xe3f1, 0x630f, 0x0, 0x1);
        gbc.writeMem(0xebf0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4fc0, gbc.sp());
        EXPECT(0xebf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf0));
        EXPECT(0xac, gbc.readMem(0xebf1));
        // CB AC 0112
        gbc.setState(0x98ec, 0x19b3, 0x5a10, 0xffb4, 0x9d15, 0x5d5e, 0x0, 0x1);
        gbc.writeMem(0x98ec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x19b3, gbc.sp());
        EXPECT(0x98ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ec));
        EXPECT(0xac, gbc.readMem(0x98ed));
        // CB AC 0113
        gbc.setState(0x8f7, 0x544d, 0xf280, 0x76de, 0xef42, 0xbb4, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x544d, gbc.sp());
        EXPECT(0x8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0114
        gbc.setState(0xb52, 0x3056, 0x9da0, 0xed8f, 0xd2b, 0x93cf, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0xb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0115
        gbc.setState(0x6fc8, 0x392f, 0x93c0, 0xe867, 0xbbf5, 0xe5ae, 0x0, 0x1);
        gbc.writeMem(0x6fc8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x392f, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0116
        gbc.setState(0x48a2, 0x9fb5, 0xb3a0, 0x65af, 0xf3ef, 0xdc38, 0x0, 0x0);
        gbc.writeMem(0x48a2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0x48a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0117
        gbc.setState(0x58e7, 0x1a4d, 0x5230, 0x8427, 0x7c10, 0xaaf1, 0x0, 0x0);
        gbc.writeMem(0x58e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a4d, gbc.sp());
        EXPECT(0x58e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0118
        gbc.setState(0x3db6, 0xaaa5, 0xc320, 0xfc05, 0x4391, 0xfe43, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaaa5, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0119
        gbc.setState(0x515e, 0x1078, 0xe280, 0x3da4, 0x58c6, 0x34b, 0x1, 0x1);
        gbc.writeMem(0x515e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1078, gbc.sp());
        EXPECT(0x5160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 011A
        gbc.setState(0x2db, 0x3b07, 0x92b0, 0x785d, 0x37ea, 0xa7e5, 0x0, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3b07, gbc.sp());
        EXPECT(0x2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 011B
        gbc.setState(0x43a8, 0x63f2, 0x6f50, 0xe1f6, 0x94e0, 0x8600, 0x0, 0x0);
        gbc.writeMem(0x43a8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x63f2, gbc.sp());
        EXPECT(0x43aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 011C
        gbc.setState(0xe70b, 0x4c34, 0x6b90, 0x5004, 0x7470, 0xb548, 0x0, 0x1);
        gbc.writeMem(0xe70b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4c34, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70b));
        EXPECT(0xac, gbc.readMem(0xe70c));
        // CB AC 011D
        gbc.setState(0x7c66, 0x15d4, 0x4690, 0xfae6, 0x5713, 0x7944, 0x0, 0x1);
        gbc.writeMem(0x7c66, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0x7c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 011E
        gbc.setState(0x8e3b, 0xd16e, 0xdbd0, 0x8a11, 0xf091, 0x585c, 0x1, 0x0);
        gbc.writeMem(0x8e3b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd16e, gbc.sp());
        EXPECT(0x8e3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3b));
        EXPECT(0xac, gbc.readMem(0x8e3c));
        // CB AC 011F
        gbc.setState(0x6ef4, 0xa69d, 0x2fa0, 0x4105, 0xe51d, 0xf8a5, 0x1, 0x0);
        gbc.writeMem(0x6ef4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa69d, gbc.sp());
        EXPECT(0x6ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0120
        gbc.setState(0xe60f, 0xc962, 0x8510, 0x67da, 0xdd57, 0xe72f, 0x1, 0x0);
        gbc.writeMem(0xe60f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc962, gbc.sp());
        EXPECT(0xe611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60f));
        EXPECT(0xac, gbc.readMem(0xe610));
        // CB AC 0122
        gbc.setState(0x79d6, 0x84ba, 0xae0, 0xee29, 0x58dc, 0xb962, 0x1, 0x1);
        gbc.writeMem(0x79d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0x79d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0123
        gbc.setState(0x2abb, 0x4f23, 0xf070, 0x32ec, 0xe273, 0x8a55, 0x0, 0x1);
        gbc.writeMem(0x2abb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4f23, gbc.sp());
        EXPECT(0x2abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0124
        gbc.setState(0xb076, 0xaed6, 0x9ad0, 0xcbfc, 0x1f6b, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0xb076, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaed6, gbc.sp());
        EXPECT(0xb078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb076));
        EXPECT(0xac, gbc.readMem(0xb077));
        // CB AC 0125
        gbc.setState(0x1e05, 0x9416, 0x4430, 0x321a, 0x8be1, 0x410b, 0x1, 0x0);
        gbc.writeMem(0x1e05, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x1e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0126
        gbc.setState(0xd60, 0xfc89, 0x9980, 0xcaf2, 0x8810, 0x819, 0x0, 0x0);
        gbc.writeMem(0xd60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfc89, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0127
        gbc.setState(0x25b9, 0xdcdd, 0xb70, 0x6dbe, 0xda65, 0x977e, 0x1, 0x0);
        gbc.writeMem(0x25b9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdcdd, gbc.sp());
        EXPECT(0x25bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0128
        gbc.setState(0xaa90, 0x37c9, 0xe440, 0xf91f, 0x817f, 0xbea8, 0x0, 0x1);
        gbc.writeMem(0xaa90, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x37c9, gbc.sp());
        EXPECT(0xaa92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa90));
        EXPECT(0xac, gbc.readMem(0xaa91));
        // CB AC 0129
        gbc.setState(0x36d2, 0xe8d7, 0x3e10, 0xbef7, 0x6436, 0x4be2, 0x1, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe8d7, gbc.sp());
        EXPECT(0x36d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 012A
        gbc.setState(0x9692, 0xadf7, 0x980, 0x7f5, 0xba0a, 0x6243, 0x0, 0x0);
        gbc.writeMem(0x9692, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xadf7, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9692));
        EXPECT(0xac, gbc.readMem(0x9693));
        // CB AC 012B
        gbc.setState(0xea51, 0x26f4, 0x8770, 0x1e84, 0xe404, 0x7968, 0x0, 0x1);
        gbc.writeMem(0xea51, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x26f4, gbc.sp());
        EXPECT(0xea53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea51));
        EXPECT(0xac, gbc.readMem(0xea52));
        // CB AC 012C
        gbc.setState(0xae15, 0x1c5e, 0x3160, 0xb6ae, 0x5843, 0x65db, 0x1, 0x1);
        gbc.writeMem(0xae15, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1c5e, gbc.sp());
        EXPECT(0xae17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae15));
        EXPECT(0xac, gbc.readMem(0xae16));
        // CB AC 012D
        gbc.setState(0x5ba4, 0x5510, 0xdad0, 0xeb8f, 0xe18e, 0x1979, 0x0, 0x0);
        gbc.writeMem(0x5ba4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5510, gbc.sp());
        EXPECT(0x5ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 012E
        gbc.setState(0x43e7, 0xadda, 0x3810, 0x914a, 0xbc83, 0x805a, 0x1, 0x1);
        gbc.writeMem(0x43e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xadda, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 012F
        gbc.setState(0x1dd4, 0xf805, 0xc1b0, 0x6ba2, 0x859a, 0xd37d, 0x1, 0x1);
        gbc.writeMem(0x1dd4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf805, gbc.sp());
        EXPECT(0x1dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0130
        gbc.setState(0x5c60, 0x807e, 0xb7b0, 0xe7b, 0x1f33, 0x9aa5, 0x0, 0x0);
        gbc.writeMem(0x5c60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x807e, gbc.sp());
        EXPECT(0x5c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0131
        gbc.setState(0x2bb2, 0xc1c1, 0x2380, 0xebae, 0x9c8f, 0xe8a5, 0x0, 0x1);
        gbc.writeMem(0x2bb2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0x2bb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0132
        gbc.setState(0x69fa, 0xd3dc, 0xd230, 0x4143, 0x8ca1, 0x6a0c, 0x0, 0x1);
        gbc.writeMem(0x69fa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd3dc, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0133
        gbc.setState(0x52e7, 0x4647, 0x4f00, 0x7bb2, 0xe4ba, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x52e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4647, gbc.sp());
        EXPECT(0x52e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0135
        gbc.setState(0x1646, 0xc8cc, 0xa190, 0x35b1, 0x3dbb, 0x1565, 0x1, 0x0);
        gbc.writeMem(0x1646, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0x1648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0136
        gbc.setState(0x8817, 0x4a4b, 0xa280, 0x4403, 0x35e8, 0x5849, 0x0, 0x1);
        gbc.writeMem(0x8817, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a4b, gbc.sp());
        EXPECT(0x8819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8817));
        EXPECT(0xac, gbc.readMem(0x8818));
        // CB AC 0137
        gbc.setState(0xb7ce, 0x6c13, 0x56e0, 0x5e2c, 0xf277, 0xaa81, 0x0, 0x1);
        gbc.writeMem(0xb7ce, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6c13, gbc.sp());
        EXPECT(0xb7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ce));
        EXPECT(0xac, gbc.readMem(0xb7cf));
        // CB AC 0138
        gbc.setState(0x252b, 0x484f, 0x6f10, 0x7380, 0x99db, 0xa2d9, 0x0, 0x1);
        gbc.writeMem(0x252b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x484f, gbc.sp());
        EXPECT(0x252d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0139
        gbc.setState(0x60e9, 0x304d, 0x9aa0, 0x9efb, 0x89cc, 0x3bf7, 0x1, 0x1);
        gbc.writeMem(0x60e9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x60eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 013A
        gbc.setState(0x3a62, 0xfd8e, 0x1eb0, 0x2cdd, 0xdd2d, 0xeefb, 0x1, 0x0);
        gbc.writeMem(0x3a62, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfd8e, gbc.sp());
        EXPECT(0x3a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 013B
        gbc.setState(0x17a2, 0x8228, 0xf3a0, 0xb055, 0x6c3d, 0x9095, 0x0, 0x1);
        gbc.writeMem(0x17a2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8228, gbc.sp());
        EXPECT(0x17a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 013C
        gbc.setState(0x5ed1, 0xb8f9, 0x73c0, 0xb8b3, 0xa4e2, 0x8a5e, 0x1, 0x1);
        gbc.writeMem(0x5ed1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0x5ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 013D
        gbc.setState(0xca4e, 0x5a0, 0x790, 0xe5a7, 0x5f20, 0x21ce, 0x0, 0x0);
        gbc.writeMem(0xca4e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5a0, gbc.sp());
        EXPECT(0xca50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4e));
        EXPECT(0xac, gbc.readMem(0xca4f));
        // CB AC 013E
        gbc.setState(0x5190, 0x4828, 0x13c0, 0xc7c4, 0x551e, 0x3019, 0x0, 0x1);
        gbc.writeMem(0x5190, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 013F
        gbc.setState(0xb0fe, 0x7b65, 0x3190, 0x134e, 0xf013, 0x20dc, 0x0, 0x0);
        gbc.writeMem(0xb0fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7b65, gbc.sp());
        EXPECT(0xb100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fe));
        EXPECT(0xac, gbc.readMem(0xb0ff));
        // CB AC 0140
        gbc.setState(0x76b0, 0x5ad9, 0x17b0, 0xf965, 0x416d, 0x2f17, 0x0, 0x0);
        gbc.writeMem(0x76b0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5ad9, gbc.sp());
        EXPECT(0x76b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0141
        gbc.setState(0x4d6c, 0x8b62, 0x3960, 0xc1a9, 0xe97b, 0xfbf0, 0x0, 0x0);
        gbc.writeMem(0x4d6c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8b62, gbc.sp());
        EXPECT(0x4d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0142
        gbc.setState(0x3d7b, 0xd439, 0xfb30, 0x6977, 0x5243, 0xe6a9, 0x0, 0x0);
        gbc.writeMem(0x3d7b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd439, gbc.sp());
        EXPECT(0x3d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0143
        gbc.setState(0x7171, 0x93c6, 0x2290, 0x7efb, 0x49cd, 0xacdb, 0x0, 0x0);
        gbc.writeMem(0x7171, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x93c6, gbc.sp());
        EXPECT(0x7173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0144
        gbc.setState(0x98da, 0xe2a0, 0x30c0, 0xec96, 0xb8c, 0xbbe, 0x0, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe2a0, gbc.sp());
        EXPECT(0x98dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98da));
        EXPECT(0xac, gbc.readMem(0x98db));
        // CB AC 0145
        gbc.setState(0x35ff, 0x2ec8, 0xe040, 0x9c20, 0x15d8, 0xcfa8, 0x1, 0x0);
        gbc.writeMem(0x35ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2ec8, gbc.sp());
        EXPECT(0x3601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0146
        gbc.setState(0x2fc8, 0x7ee7, 0x2190, 0x2d7b, 0x74bf, 0xa9f5, 0x1, 0x1);
        gbc.writeMem(0x2fc8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7ee7, gbc.sp());
        EXPECT(0x2fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0148
        gbc.setState(0x4350, 0xafc2, 0x6d00, 0x6375, 0xc658, 0x9477, 0x0, 0x0);
        gbc.writeMem(0x4350, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xafc2, gbc.sp());
        EXPECT(0x4352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0149
        gbc.setState(0x1e2f, 0x8baa, 0xbb60, 0x477a, 0x5592, 0x28b5, 0x0, 0x1);
        gbc.writeMem(0x1e2f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8baa, gbc.sp());
        EXPECT(0x1e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 014A
        gbc.setState(0x2edd, 0x45f2, 0xf680, 0xb91d, 0x1138, 0x1b9f, 0x0, 0x0);
        gbc.writeMem(0x2edd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x2edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 014B
        gbc.setState(0x9f76, 0xa83b, 0x14c0, 0x4f90, 0x9e9b, 0xd155, 0x1, 0x0);
        gbc.writeMem(0x9f76, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa83b, gbc.sp());
        EXPECT(0x9f78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f76));
        EXPECT(0xac, gbc.readMem(0x9f77));
        // CB AC 014C
        gbc.setState(0xaab6, 0x6339, 0x24b0, 0xbbfc, 0x587b, 0x5164, 0x1, 0x0);
        gbc.writeMem(0xaab6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6339, gbc.sp());
        EXPECT(0xaab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab6));
        EXPECT(0xac, gbc.readMem(0xaab7));
        // CB AC 014D
        gbc.setState(0x3cf7, 0xdc99, 0xb10, 0x18e7, 0x12b, 0x4b0e, 0x1, 0x0);
        gbc.writeMem(0x3cf7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdc99, gbc.sp());
        EXPECT(0x3cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 014E
        gbc.setState(0x98f4, 0x9a3b, 0x3730, 0x3134, 0xb21b, 0x6094, 0x0, 0x0);
        gbc.writeMem(0x98f4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9a3b, gbc.sp());
        EXPECT(0x98f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f4));
        EXPECT(0xac, gbc.readMem(0x98f5));
        // CB AC 014F
        gbc.setState(0x3055, 0x9386, 0xad40, 0x12c3, 0xd6c3, 0x98d5, 0x0, 0x0);
        gbc.writeMem(0x3055, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9386, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0150
        gbc.setState(0x34a, 0x3d4c, 0x3200, 0x8754, 0xdd10, 0xd2a7, 0x0, 0x1);
        gbc.writeMem(0x34a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3d4c, gbc.sp());
        EXPECT(0x34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0152
        gbc.setState(0x569e, 0x2d97, 0x6380, 0xb339, 0x660f, 0x948e, 0x1, 0x0);
        gbc.writeMem(0x569e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d97, gbc.sp());
        EXPECT(0x56a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0153
        gbc.setState(0x8542, 0x7d7f, 0xbcf0, 0xc5f7, 0xb1c5, 0xde20, 0x1, 0x0);
        gbc.writeMem(0x8542, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0x8544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8542));
        EXPECT(0xac, gbc.readMem(0x8543));
        // CB AC 0154
        gbc.setState(0xadf7, 0x58c3, 0xe400, 0x9e8b, 0xf6eb, 0x58eb, 0x0, 0x1);
        gbc.writeMem(0xadf7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x58c3, gbc.sp());
        EXPECT(0xadf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf7));
        EXPECT(0xac, gbc.readMem(0xadf8));
        // CB AC 0156
        gbc.setState(0xc9e, 0xc199, 0x4700, 0xd99e, 0xf82e, 0xb2b5, 0x0, 0x1);
        gbc.writeMem(0xc9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc199, gbc.sp());
        EXPECT(0xca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0157
        gbc.setState(0xee31, 0x2ed0, 0x2750, 0x1c61, 0x49c8, 0xe208, 0x1, 0x0);
        gbc.writeMem(0xee31, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2ed0, gbc.sp());
        EXPECT(0xee33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee31));
        EXPECT(0xac, gbc.readMem(0xee32));
        // CB AC 0158
        gbc.setState(0x6c25, 0x56e0, 0x91d0, 0x25e3, 0xcc23, 0xb970, 0x0, 0x1);
        gbc.writeMem(0x6c25, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x56e0, gbc.sp());
        EXPECT(0x6c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0159
        gbc.setState(0xa853, 0x55b3, 0xef00, 0x44c9, 0xd86f, 0x3942, 0x1, 0x0);
        gbc.writeMem(0xa853, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x55b3, gbc.sp());
        EXPECT(0xa855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa853));
        EXPECT(0xac, gbc.readMem(0xa854));
        // CB AC 015A
        gbc.setState(0x980a, 0x5052, 0x7df0, 0x392d, 0x1eae, 0xb718, 0x0, 0x1);
        gbc.writeMem(0x980a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5052, gbc.sp());
        EXPECT(0x980c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x980a));
        EXPECT(0xac, gbc.readMem(0x980b));
        // CB AC 015B
        gbc.setState(0x5dee, 0xbe60, 0xd880, 0x900, 0x2bb7, 0xd44b, 0x1, 0x1);
        gbc.writeMem(0x5dee, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbe60, gbc.sp());
        EXPECT(0x5df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 015C
        gbc.setState(0x6f52, 0x44bb, 0xb560, 0x2df2, 0x9e20, 0x3a53, 0x0, 0x1);
        gbc.writeMem(0x6f52, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 015D
        gbc.setState(0x78ff, 0xddd5, 0x5f70, 0x2895, 0xd517, 0x33a, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xddd5, gbc.sp());
        EXPECT(0x7901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 015E
        gbc.setState(0x4831, 0x77fa, 0x5f70, 0x7bfb, 0x8660, 0x7394, 0x1, 0x0);
        gbc.writeMem(0x4831, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x77fa, gbc.sp());
        EXPECT(0x4833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 015F
        gbc.setState(0x1659, 0x5589, 0x5f50, 0x13ed, 0xde85, 0xfcd6, 0x1, 0x1);
        gbc.writeMem(0x1659, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5589, gbc.sp());
        EXPECT(0x165b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0160
        gbc.setState(0xe3d, 0xd94c, 0x8eb0, 0x6b91, 0xe48b, 0xbc56, 0x1, 0x1);
        gbc.writeMem(0xe3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd94c, gbc.sp());
        EXPECT(0xe3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0161
        gbc.setState(0x4208, 0x7651, 0xcd20, 0x54ee, 0xd85, 0x74ea, 0x0, 0x0);
        gbc.writeMem(0x4208, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7651, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0163
        gbc.setState(0x2ab8, 0x8327, 0xc170, 0x828d, 0xcee3, 0xaacf, 0x0, 0x0);
        gbc.writeMem(0x2ab8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8327, gbc.sp());
        EXPECT(0x2aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0164
        gbc.setState(0x2503, 0x165, 0xac60, 0x5456, 0xb35b, 0x885c, 0x1, 0x0);
        gbc.writeMem(0x2503, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x165, gbc.sp());
        EXPECT(0x2505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0165
        gbc.setState(0xa6ac, 0xdd8, 0x5280, 0x7cb2, 0xf20, 0xee35, 0x0, 0x1);
        gbc.writeMem(0xa6ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0xa6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ac));
        EXPECT(0xac, gbc.readMem(0xa6ad));
        // CB AC 0166
        gbc.setState(0x6ca6, 0xd6a8, 0xe210, 0x8ac9, 0x8244, 0x966b, 0x0, 0x1);
        gbc.writeMem(0x6ca6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd6a8, gbc.sp());
        EXPECT(0x6ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0167
        gbc.setState(0x90f4, 0x8131, 0xc1e0, 0x10c9, 0x30, 0x9001, 0x0, 0x0);
        gbc.writeMem(0x90f4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8131, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0xac, gbc.readMem(0x90f5));
        // CB AC 0168
        gbc.setState(0x697f, 0x6781, 0xe110, 0x446, 0x8550, 0x2ffa, 0x0, 0x1);
        gbc.writeMem(0x697f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6781, gbc.sp());
        EXPECT(0x6981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0169
        gbc.setState(0xec18, 0xdf21, 0xd530, 0xc5f2, 0x2a7f, 0x9236, 0x0, 0x1);
        gbc.writeMem(0xec18, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdf21, gbc.sp());
        EXPECT(0xec1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec18));
        EXPECT(0xac, gbc.readMem(0xec19));
        // CB AC 016A
        gbc.setState(0xcee4, 0x1bd6, 0x6750, 0xe4b, 0xc50b, 0xe599, 0x1, 0x1);
        gbc.writeMem(0xcee4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1bd6, gbc.sp());
        EXPECT(0xcee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee4));
        EXPECT(0xac, gbc.readMem(0xcee5));
        // CB AC 016B
        gbc.setState(0x215e, 0x39fb, 0xc8a0, 0x2318, 0xaeca, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x39fb, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 016C
        gbc.setState(0xd22b, 0x5f8b, 0xeb60, 0x1863, 0x87e3, 0xb8f4, 0x1, 0x1);
        gbc.writeMem(0xd22b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5f8b, gbc.sp());
        EXPECT(0xd22d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22b));
        EXPECT(0xac, gbc.readMem(0xd22c));
        // CB AC 016D
        gbc.setState(0x8ce0, 0xe939, 0x7b80, 0x93a7, 0x9cd2, 0x5c6a, 0x0, 0x1);
        gbc.writeMem(0x8ce0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe939, gbc.sp());
        EXPECT(0x8ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce0));
        EXPECT(0xac, gbc.readMem(0x8ce1));
        // CB AC 016E
        gbc.setState(0xd3df, 0xdd59, 0x8580, 0xaee0, 0xee0a, 0xd538, 0x0, 0x0);
        gbc.writeMem(0xd3df, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdd59, gbc.sp());
        EXPECT(0xd3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3df));
        EXPECT(0xac, gbc.readMem(0xd3e0));
        // CB AC 0170
        gbc.setState(0x81ea, 0x7c12, 0xe1f0, 0x6894, 0x9abe, 0x2a70, 0x0, 0x0);
        gbc.writeMem(0x81ea, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7c12, gbc.sp());
        EXPECT(0x81ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ea));
        EXPECT(0xac, gbc.readMem(0x81eb));
        // CB AC 0171
        gbc.setState(0xd7de, 0x18a3, 0x77a0, 0x93f0, 0x4df6, 0xb14b, 0x1, 0x1);
        gbc.writeMem(0xd7de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x18a3, gbc.sp());
        EXPECT(0xd7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7de));
        EXPECT(0xac, gbc.readMem(0xd7df));
        // CB AC 0172
        gbc.setState(0x4f98, 0x4ba3, 0x6710, 0x98cf, 0xd54, 0x8174, 0x1, 0x1);
        gbc.writeMem(0x4f98, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4ba3, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0173
        gbc.setState(0xe299, 0x194b, 0x9b50, 0x50af, 0x2451, 0xf99, 0x1, 0x1);
        gbc.writeMem(0xe299, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x194b, gbc.sp());
        EXPECT(0xe29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe299));
        EXPECT(0xac, gbc.readMem(0xe29a));
        // CB AC 0174
        gbc.setState(0x5a69, 0x67bb, 0xef00, 0xf650, 0x15e4, 0x5f30, 0x0, 0x0);
        gbc.writeMem(0x5a69, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0x5a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0175
        gbc.setState(0xbf51, 0x5dbb, 0x1700, 0x1d60, 0x4ac3, 0x4dac, 0x1, 0x0);
        gbc.writeMem(0xbf51, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5dbb, gbc.sp());
        EXPECT(0xbf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf51));
        EXPECT(0xac, gbc.readMem(0xbf52));
        // CB AC 0176
        gbc.setState(0xc6de, 0x1529, 0x9c10, 0x57a6, 0xf90b, 0x80af, 0x0, 0x1);
        gbc.writeMem(0xc6de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1529, gbc.sp());
        EXPECT(0xc6e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6de));
        EXPECT(0xac, gbc.readMem(0xc6df));
        // CB AC 0178
        gbc.setState(0xc7b9, 0xac06, 0x9b30, 0xdbf2, 0x8f46, 0x4ba8, 0x1, 0x0);
        gbc.writeMem(0xc7b9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xac06, gbc.sp());
        EXPECT(0xc7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b9));
        EXPECT(0xac, gbc.readMem(0xc7ba));
        // CB AC 0179
        gbc.setState(0x5929, 0x55a8, 0x2e50, 0xbe56, 0xc617, 0x210, 0x0, 0x0);
        gbc.writeMem(0x5929, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x55a8, gbc.sp());
        EXPECT(0x592b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 017A
        gbc.setState(0x68b5, 0x7cd1, 0xed50, 0x5259, 0x291e, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x68b5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0x68b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 017B
        gbc.setState(0x1c73, 0xf076, 0x6c70, 0xc346, 0xad8c, 0x8319, 0x1, 0x1);
        gbc.writeMem(0x1c73, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf076, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 017C
        gbc.setState(0x4dba, 0x9601, 0xa210, 0x303, 0x5484, 0xe463, 0x0, 0x1);
        gbc.writeMem(0x4dba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9601, gbc.sp());
        EXPECT(0x4dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 017D
        gbc.setState(0x4aab, 0xf423, 0x7d30, 0xf12b, 0xf607, 0xdca9, 0x0, 0x1);
        gbc.writeMem(0x4aab, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf423, gbc.sp());
        EXPECT(0x4aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 017E
        gbc.setState(0xde75, 0x1779, 0xc1f0, 0xf2da, 0x1a5f, 0x3e69, 0x1, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1779, gbc.sp());
        EXPECT(0xde77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde75));
        EXPECT(0xac, gbc.readMem(0xde76));
        // CB AC 017F
        gbc.setState(0x4560, 0x7fe9, 0x3d0, 0x3e49, 0xa66, 0x16a8, 0x1, 0x0);
        gbc.writeMem(0x4560, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0x4562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0180
        gbc.setState(0xaae9, 0xc3f, 0x44c0, 0x8ca7, 0xa2e4, 0xe008, 0x1, 0x0);
        gbc.writeMem(0xaae9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc3f, gbc.sp());
        EXPECT(0xaaeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae9));
        EXPECT(0xac, gbc.readMem(0xaaea));
        // CB AC 0181
        gbc.setState(0x800b, 0x3b0d, 0x2750, 0xcfeb, 0xc4c1, 0x4bd8, 0x0, 0x1);
        gbc.writeMem(0x800b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3b0d, gbc.sp());
        EXPECT(0x800d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800b));
        EXPECT(0xac, gbc.readMem(0x800c));
        // CB AC 0182
        gbc.setState(0xac07, 0x6dbd, 0x12b0, 0xbd24, 0x2839, 0x9763, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6dbd, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac07));
        EXPECT(0xac, gbc.readMem(0xac08));
        // CB AC 0184
        gbc.setState(0x269d, 0xe79e, 0x76e0, 0xad87, 0x6183, 0x7644, 0x1, 0x0);
        gbc.writeMem(0x269d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x269f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0185
        gbc.setState(0x8c8c, 0x2022, 0x8020, 0x3def, 0xa42f, 0x2ed2, 0x1, 0x0);
        gbc.writeMem(0x8c8c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2022, gbc.sp());
        EXPECT(0x8c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8c));
        EXPECT(0xac, gbc.readMem(0x8c8d));
        // CB AC 0186
        gbc.setState(0x89df, 0x1bcd, 0x22c0, 0xd4d, 0x6f41, 0x4563, 0x1, 0x1);
        gbc.writeMem(0x89df, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1bcd, gbc.sp());
        EXPECT(0x89e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89df));
        EXPECT(0xac, gbc.readMem(0x89e0));
        // CB AC 0187
        gbc.setState(0x52ea, 0x9212, 0x2710, 0xba23, 0x3ddc, 0x946e, 0x1, 0x1);
        gbc.writeMem(0x52ea, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9212, gbc.sp());
        EXPECT(0x52ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0188
        gbc.setState(0x1d56, 0x3310, 0xaff0, 0xd61a, 0x3c8a, 0x26aa, 0x0, 0x1);
        gbc.writeMem(0x1d56, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3310, gbc.sp());
        EXPECT(0x1d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0189
        gbc.setState(0x37c, 0xf288, 0x8990, 0xb52b, 0x8ae2, 0x36c5, 0x0, 0x0);
        gbc.writeMem(0x37c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf288, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 018A
        gbc.setState(0xb6a1, 0x97ff, 0x8a90, 0x64ed, 0x3d49, 0x5342, 0x0, 0x1);
        gbc.writeMem(0xb6a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x97ff, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a1));
        EXPECT(0xac, gbc.readMem(0xb6a2));
        // CB AC 018B
        gbc.setState(0x8914, 0x3aca, 0x1a80, 0xc260, 0x4614, 0x9bf9, 0x1, 0x0);
        gbc.writeMem(0x8914, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3aca, gbc.sp());
        EXPECT(0x8916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8914));
        EXPECT(0xac, gbc.readMem(0x8915));
        // CB AC 018C
        gbc.setState(0xc709, 0x6a98, 0x92d0, 0xac17, 0x1a5c, 0x7fed, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6a98, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc709));
        EXPECT(0xac, gbc.readMem(0xc70a));
        // CB AC 018E
        gbc.setState(0xc428, 0x525e, 0x2730, 0x3ffc, 0x3bf2, 0xb53d, 0x0, 0x1);
        gbc.writeMem(0xc428, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x525e, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc428));
        EXPECT(0xac, gbc.readMem(0xc429));
        // CB AC 018F
        gbc.setState(0x6744, 0xe1b2, 0xc530, 0x5a8a, 0x94dd, 0x1fc8, 0x0, 0x0);
        gbc.writeMem(0x6744, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe1b2, gbc.sp());
        EXPECT(0x6746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0190
        gbc.setState(0xe343, 0xc721, 0x5640, 0x61f7, 0x5c14, 0xe95a, 0x0, 0x1);
        gbc.writeMem(0xe343, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc721, gbc.sp());
        EXPECT(0xe345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe343));
        EXPECT(0xac, gbc.readMem(0xe344));
        // CB AC 0191
        gbc.setState(0x27b2, 0x693c, 0xd0a0, 0x1db7, 0xcdea, 0xa1ef, 0x0, 0x0);
        gbc.writeMem(0x27b2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x693c, gbc.sp());
        EXPECT(0x27b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0192
        gbc.setState(0x88cd, 0xdb9a, 0xa9b0, 0x7f0f, 0x1e43, 0x3b56, 0x0, 0x0);
        gbc.writeMem(0x88cd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0x88cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cd));
        EXPECT(0xac, gbc.readMem(0x88ce));
        // CB AC 0193
        gbc.setState(0x7adb, 0x1702, 0x88a0, 0x9424, 0xf5fc, 0xbf3, 0x1, 0x1);
        gbc.writeMem(0x7adb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1702, gbc.sp());
        EXPECT(0x7add, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0195
        gbc.setState(0x59ac, 0x3c5e, 0x5b20, 0x90f1, 0xbd09, 0xb134, 0x0, 0x0);
        gbc.writeMem(0x59ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0x59ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0196
        gbc.setState(0x5e19, 0xcf30, 0x4640, 0x6ce5, 0x8e63, 0x32c5, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcf30, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0197
        gbc.setState(0xcc3c, 0x56b4, 0xd200, 0x3835, 0xdc54, 0x2d19, 0x0, 0x1);
        gbc.writeMem(0xcc3c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x56b4, gbc.sp());
        EXPECT(0xcc3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3c));
        EXPECT(0xac, gbc.readMem(0xcc3d));
        // CB AC 0198
        gbc.setState(0x83fe, 0xf605, 0x48f0, 0x173a, 0xe898, 0xae06, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x8400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83fe));
        EXPECT(0xac, gbc.readMem(0x83ff));
        // CB AC 019A
        gbc.setState(0x738, 0xe7dc, 0xcf80, 0x8714, 0xd9ba, 0x5708, 0x0, 0x1);
        gbc.writeMem(0x738, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe7dc, gbc.sp());
        EXPECT(0x73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 019B
        gbc.setState(0x37ac, 0x345d, 0x17d0, 0xcd17, 0x668b, 0xa354, 0x0, 0x1);
        gbc.writeMem(0x37ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x345d, gbc.sp());
        EXPECT(0x37ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 019C
        gbc.setState(0x27d6, 0xeff7, 0x34e0, 0xb5f6, 0xd958, 0x6ca1, 0x0, 0x0);
        gbc.writeMem(0x27d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeff7, gbc.sp());
        EXPECT(0x27d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 019D
        gbc.setState(0x3f6b, 0xa71, 0x7f60, 0x1f2e, 0xa25a, 0x6b48, 0x1, 0x1);
        gbc.writeMem(0x3f6b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa71, gbc.sp());
        EXPECT(0x3f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 019E
        gbc.setState(0x219e, 0xb0be, 0x5110, 0x4164, 0x196f, 0x3598, 0x1, 0x0);
        gbc.writeMem(0x219e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb0be, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 019F
        gbc.setState(0x82d6, 0xa019, 0x9d30, 0x851d, 0xfc72, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0x82d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa019, gbc.sp());
        EXPECT(0x82d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d6));
        EXPECT(0xac, gbc.readMem(0x82d7));
        // CB AC 01A0
        gbc.setState(0xb736, 0x9ab5, 0x2380, 0x4c78, 0x9a7c, 0x8992, 0x1, 0x0);
        gbc.writeMem(0xb736, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9ab5, gbc.sp());
        EXPECT(0xb738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb736));
        EXPECT(0xac, gbc.readMem(0xb737));
        // CB AC 01A1
        gbc.setState(0x80fe, 0xda02, 0xf2b0, 0x2153, 0x48a0, 0x2af2, 0x0, 0x1);
        gbc.writeMem(0x80fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xda02, gbc.sp());
        EXPECT(0x8100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fe));
        EXPECT(0xac, gbc.readMem(0x80ff));
        // CB AC 01A2
        gbc.setState(0xe0ce, 0x7c5b, 0x83c0, 0xc74b, 0xf58d, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0xe0ce, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7c5b, gbc.sp());
        EXPECT(0xe0d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ce));
        EXPECT(0xac, gbc.readMem(0xe0cf));
        // CB AC 01A3
        gbc.setState(0x8ba, 0x8c72, 0x56d0, 0xfd4f, 0x57e4, 0x889, 0x1, 0x0);
        gbc.writeMem(0x8ba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8c72, gbc.sp());
        EXPECT(0x8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01A4
        gbc.setState(0xa0c4, 0xdf5e, 0xe7c0, 0x9c26, 0x8c8d, 0x6ef6, 0x1, 0x0);
        gbc.writeMem(0xa0c4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdf5e, gbc.sp());
        EXPECT(0xa0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0c4));
        EXPECT(0xac, gbc.readMem(0xa0c5));
        // CB AC 01A5
        gbc.setState(0xd180, 0xee31, 0xcdb0, 0xb1ed, 0x9069, 0xc25e, 0x1, 0x0);
        gbc.writeMem(0xd180, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xee31, gbc.sp());
        EXPECT(0xd182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd180));
        EXPECT(0xac, gbc.readMem(0xd181));
        // CB AC 01A6
        gbc.setState(0xa137, 0x4a2b, 0xe3f0, 0x20aa, 0x731f, 0x420e, 0x0, 0x0);
        gbc.writeMem(0xa137, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0xa139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa137));
        EXPECT(0xac, gbc.readMem(0xa138));
        // CB AC 01A7
        gbc.setState(0x1a87, 0x74c0, 0xe2a0, 0xb07f, 0x8dc4, 0xa842, 0x0, 0x0);
        gbc.writeMem(0x1a87, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x74c0, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01A8
        gbc.setState(0xeb9b, 0x3d9b, 0x3410, 0xfcc5, 0x6afb, 0x8afe, 0x1, 0x1);
        gbc.writeMem(0xeb9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3d9b, gbc.sp());
        EXPECT(0xeb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb9b));
        EXPECT(0xac, gbc.readMem(0xeb9c));
        // CB AC 01A9
        gbc.setState(0x3baa, 0x5bee, 0xfa20, 0x81e2, 0xa066, 0x4b9f, 0x1, 0x0);
        gbc.writeMem(0x3baa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5bee, gbc.sp());
        EXPECT(0x3bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01AA
        gbc.setState(0x2e99, 0x9417, 0xe040, 0x1bc3, 0x6fb7, 0x35a6, 0x1, 0x1);
        gbc.writeMem(0x2e99, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9417, gbc.sp());
        EXPECT(0x2e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01AB
        gbc.setState(0x8236, 0xb62d, 0xf350, 0xbd02, 0xad, 0xde, 0x1, 0x1);
        gbc.writeMem(0x8236, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb62d, gbc.sp());
        EXPECT(0x8238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8236));
        EXPECT(0xac, gbc.readMem(0x8237));
        // CB AC 01AC
        gbc.setState(0x1eef, 0x9eb2, 0xa70, 0xe99e, 0x56e3, 0x4bd3, 0x0, 0x1);
        gbc.writeMem(0x1eef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9eb2, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01AD
        gbc.setState(0x8d78, 0x3a9, 0x40e0, 0xb663, 0x72d0, 0x98e1, 0x1, 0x0);
        gbc.writeMem(0x8d78, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3a9, gbc.sp());
        EXPECT(0x8d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d78));
        EXPECT(0xac, gbc.readMem(0x8d79));
        // CB AC 01AE
        gbc.setState(0xbdb4, 0xbb6e, 0xce70, 0x3d65, 0xcfba, 0x5bd4, 0x1, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0xac, gbc.readMem(0xbdb5));
        // CB AC 01AF
        gbc.setState(0xc60a, 0x863c, 0x7db0, 0xf03c, 0x3049, 0x6ef1, 0x0, 0x0);
        gbc.writeMem(0xc60a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x863c, gbc.sp());
        EXPECT(0xc60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60a));
        EXPECT(0xac, gbc.readMem(0xc60b));
        // CB AC 01B0
        gbc.setState(0x12c8, 0x588, 0xf4c0, 0xf4d6, 0xe06a, 0x16d5, 0x1, 0x1);
        gbc.writeMem(0x12c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x588, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01B1
        gbc.setState(0x37e5, 0x27dd, 0x3fe0, 0x27c7, 0xd719, 0xf928, 0x0, 0x0);
        gbc.writeMem(0x37e5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x27dd, gbc.sp());
        EXPECT(0x37e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01B2
        gbc.setState(0x1fd3, 0xfb4c, 0x7d60, 0x1a54, 0xf534, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0x1fd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfb4c, gbc.sp());
        EXPECT(0x1fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01B3
        gbc.setState(0x7312, 0xa646, 0x84e0, 0x1bb2, 0x441a, 0xc8f3, 0x1, 0x1);
        gbc.writeMem(0x7312, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa646, gbc.sp());
        EXPECT(0x7314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01B5
        gbc.setState(0x3a87, 0xe497, 0xcea0, 0x167c, 0x9056, 0xe959, 0x0, 0x0);
        gbc.writeMem(0x3a87, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe497, gbc.sp());
        EXPECT(0x3a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01B6
        gbc.setState(0xcc51, 0x4ad8, 0x6450, 0xd8d8, 0x714b, 0xc677, 0x0, 0x0);
        gbc.writeMem(0xcc51, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4ad8, gbc.sp());
        EXPECT(0xcc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc51));
        EXPECT(0xac, gbc.readMem(0xcc52));
        // CB AC 01B7
        gbc.setState(0x364b, 0x9511, 0xe460, 0x3fa5, 0x8a4a, 0x3e0b, 0x1, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9511, gbc.sp());
        EXPECT(0x364d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01BA
        gbc.setState(0x35a1, 0xf263, 0xca80, 0x19f7, 0x5a6d, 0x1c2f, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf263, gbc.sp());
        EXPECT(0x35a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01BB
        gbc.setState(0x2773, 0x2479, 0x970, 0x8e08, 0x1569, 0x5773, 0x1, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2479, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01BC
        gbc.setState(0x80ae, 0x9a5f, 0x2660, 0x6318, 0xb63c, 0x1950, 0x1, 0x0);
        gbc.writeMem(0x80ae, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0x80b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ae));
        EXPECT(0xac, gbc.readMem(0x80af));
        // CB AC 01BD
        gbc.setState(0x35cf, 0xdbc8, 0xe3c0, 0x1c5c, 0x2e51, 0xc3, 0x0, 0x0);
        gbc.writeMem(0x35cf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdbc8, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01BE
        gbc.setState(0x2443, 0xdf7, 0xab10, 0x6b14, 0x2980, 0xa7ce, 0x1, 0x1);
        gbc.writeMem(0x2443, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdf7, gbc.sp());
        EXPECT(0x2445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01BF
        gbc.setState(0xb32a, 0xc6b2, 0x2c90, 0xe4bf, 0x36f3, 0x6140, 0x0, 0x0);
        gbc.writeMem(0xb32a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc6b2, gbc.sp());
        EXPECT(0xb32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32a));
        EXPECT(0xac, gbc.readMem(0xb32b));
        // CB AC 01C0
        gbc.setState(0xb9d5, 0xc421, 0x310, 0xfe0f, 0x8607, 0x7c79, 0x1, 0x0);
        gbc.writeMem(0xb9d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc421, gbc.sp());
        EXPECT(0xb9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d5));
        EXPECT(0xac, gbc.readMem(0xb9d6));
        // CB AC 01C1
        gbc.setState(0x9192, 0x4579, 0xd480, 0x49df, 0x9e59, 0xe966, 0x0, 0x0);
        gbc.writeMem(0x9192, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4579, gbc.sp());
        EXPECT(0x9194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9192));
        EXPECT(0xac, gbc.readMem(0x9193));
        // CB AC 01C2
        gbc.setState(0x3597, 0x391, 0xf560, 0xb57a, 0x4f4c, 0x52ee, 0x0, 0x0);
        gbc.writeMem(0x3597, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x391, gbc.sp());
        EXPECT(0x3599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01C3
        gbc.setState(0xb590, 0x4b0, 0xc5f0, 0xebc1, 0x853e, 0x2eae, 0x1, 0x1);
        gbc.writeMem(0xb590, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4b0, gbc.sp());
        EXPECT(0xb592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb590));
        EXPECT(0xac, gbc.readMem(0xb591));
        // CB AC 01C4
        gbc.setState(0x9fa2, 0x8ad5, 0x6e70, 0xd9cc, 0x4ebf, 0x6020, 0x0, 0x0);
        gbc.writeMem(0x9fa2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ad5, gbc.sp());
        EXPECT(0x9fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa2));
        EXPECT(0xac, gbc.readMem(0x9fa3));
        // CB AC 01C5
        gbc.setState(0x5222, 0x2333, 0x9ae0, 0xed41, 0xc610, 0x1694, 0x1, 0x1);
        gbc.writeMem(0x5222, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2333, gbc.sp());
        EXPECT(0x5224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01C6
        gbc.setState(0x2469, 0x5658, 0x42d0, 0x3dca, 0x9776, 0xecc7, 0x0, 0x1);
        gbc.writeMem(0x2469, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01C7
        gbc.setState(0x5684, 0xb9f7, 0x1520, 0xf17c, 0xf0de, 0x7c15, 0x0, 0x1);
        gbc.writeMem(0x5684, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb9f7, gbc.sp());
        EXPECT(0x5686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01C8
        gbc.setState(0xddd3, 0x4618, 0x7b0, 0x4d13, 0xdcd6, 0xbb08, 0x0, 0x1);
        gbc.writeMem(0xddd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4618, gbc.sp());
        EXPECT(0xddd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddd3));
        EXPECT(0xac, gbc.readMem(0xddd4));
        // CB AC 01C9
        gbc.setState(0xa72a, 0x249f, 0x5ed0, 0x3ff2, 0xefe4, 0x96c5, 0x1, 0x1);
        gbc.writeMem(0xa72a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x249f, gbc.sp());
        EXPECT(0xa72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72a));
        EXPECT(0xac, gbc.readMem(0xa72b));
        // CB AC 01CA
        gbc.setState(0xa046, 0x78bb, 0x4ad0, 0x36dd, 0x60c5, 0xf3df, 0x0, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x78bb, gbc.sp());
        EXPECT(0xa048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa046));
        EXPECT(0xac, gbc.readMem(0xa047));
        // CB AC 01CB
        gbc.setState(0xa5d1, 0xb98b, 0xec70, 0x9ec9, 0x13aa, 0x4d43, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb98b, gbc.sp());
        EXPECT(0xa5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d1));
        EXPECT(0xac, gbc.readMem(0xa5d2));
        // CB AC 01CC
        gbc.setState(0xcf69, 0xdb6c, 0xae50, 0x8eb2, 0x49c1, 0x2d2c, 0x0, 0x0);
        gbc.writeMem(0xcf69, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdb6c, gbc.sp());
        EXPECT(0xcf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf69));
        EXPECT(0xac, gbc.readMem(0xcf6a));
        // CB AC 01CD
        gbc.setState(0x8176, 0xf93, 0xdfd0, 0x4718, 0xa655, 0x74c0, 0x1, 0x1);
        gbc.writeMem(0x8176, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf93, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8176));
        EXPECT(0xac, gbc.readMem(0x8177));
        // CB AC 01CE
        gbc.setState(0xc27a, 0x1c6, 0x2bc0, 0x8526, 0xfc05, 0x3a5, 0x1, 0x0);
        gbc.writeMem(0xc27a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1c6, gbc.sp());
        EXPECT(0xc27c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27a));
        EXPECT(0xac, gbc.readMem(0xc27b));
        // CB AC 01CF
        gbc.setState(0x99b, 0xe2c2, 0x42d0, 0xb4eb, 0x288b, 0x1193, 0x0, 0x0);
        gbc.writeMem(0x99b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0x99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01D0
        gbc.setState(0x66a3, 0x7eee, 0x8cc0, 0x9e, 0x645a, 0xd333, 0x1, 0x0);
        gbc.writeMem(0x66a3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7eee, gbc.sp());
        EXPECT(0x66a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01D1
        gbc.setState(0xd013, 0x66fe, 0xcb70, 0xbd64, 0x332c, 0x65ae, 0x0, 0x1);
        gbc.writeMem(0xd013, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x66fe, gbc.sp());
        EXPECT(0xd015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd013));
        EXPECT(0xac, gbc.readMem(0xd014));
        // CB AC 01D3
        gbc.setState(0x439d, 0xf129, 0x7550, 0xdbf1, 0x1244, 0x698a, 0x1, 0x1);
        gbc.writeMem(0x439d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf129, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01D4
        gbc.setState(0x4744, 0x1b45, 0x3cf0, 0x455, 0xd7f7, 0x5ab6, 0x0, 0x0);
        gbc.writeMem(0x4744, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1b45, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01D6
        gbc.setState(0xee60, 0x3dbf, 0xa4f0, 0x4eba, 0x3848, 0x375b, 0x1, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3dbf, gbc.sp());
        EXPECT(0xee62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee60));
        EXPECT(0xac, gbc.readMem(0xee61));
        // CB AC 01D7
        gbc.setState(0x6f6f, 0x6d40, 0xe960, 0xf979, 0xba62, 0x6385, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6d40, gbc.sp());
        EXPECT(0x6f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01D8
        gbc.setState(0xc15a, 0xb7ad, 0x9070, 0x426f, 0x4405, 0xab1d, 0x0, 0x1);
        gbc.writeMem(0xc15a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb7ad, gbc.sp());
        EXPECT(0xc15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15a));
        EXPECT(0xac, gbc.readMem(0xc15b));
        // CB AC 01D9
        gbc.setState(0x3640, 0xb045, 0x7870, 0x38ff, 0xa814, 0xe63c, 0x0, 0x1);
        gbc.writeMem(0x3640, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb045, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01DA
        gbc.setState(0x6f93, 0x16ee, 0x6220, 0xe79d, 0x3d2e, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0x6f93, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0x6f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01DB
        gbc.setState(0xe282, 0x549e, 0x7cf0, 0xc995, 0x250f, 0x7a7f, 0x0, 0x1);
        gbc.writeMem(0xe282, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x549e, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe282));
        EXPECT(0xac, gbc.readMem(0xe283));
        // CB AC 01DC
        gbc.setState(0x45f6, 0x572c, 0xa000, 0x5df, 0x23cf, 0x8a16, 0x0, 0x0);
        gbc.writeMem(0x45f6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x572c, gbc.sp());
        EXPECT(0x45f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01DD
        gbc.setState(0x2c89, 0xa378, 0x3890, 0x816, 0xc09d, 0xda8c, 0x1, 0x1);
        gbc.writeMem(0x2c89, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xa378, gbc.sp());
        EXPECT(0x2c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01DE
        gbc.setState(0x1ae8, 0x5f5c, 0xfa90, 0x57f1, 0xd8ec, 0x1c3a, 0x0, 0x0);
        gbc.writeMem(0x1ae8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5f5c, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01DF
        gbc.setState(0xcba2, 0x2ff0, 0x9ff0, 0x8c22, 0xb32d, 0xf856, 0x0, 0x1);
        gbc.writeMem(0xcba2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2ff0, gbc.sp());
        EXPECT(0xcba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba2));
        EXPECT(0xac, gbc.readMem(0xcba3));
        // CB AC 01E0
        gbc.setState(0xabed, 0x5471, 0x92b0, 0xf839, 0x32bc, 0x9863, 0x0, 0x1);
        gbc.writeMem(0xabed, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5471, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabed));
        EXPECT(0xac, gbc.readMem(0xabee));
        // CB AC 01E1
        gbc.setState(0x93e7, 0x12ad, 0xbb20, 0xea20, 0x90a4, 0x2044, 0x1, 0x0);
        gbc.writeMem(0x93e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x12ad, gbc.sp());
        EXPECT(0x93e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e7));
        EXPECT(0xac, gbc.readMem(0x93e8));
        // CB AC 01E2
        gbc.setState(0xd3d6, 0x6cf4, 0xc5b0, 0x2e75, 0x933b, 0xcc94, 0x0, 0x0);
        gbc.writeMem(0xd3d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6cf4, gbc.sp());
        EXPECT(0xd3d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d6));
        EXPECT(0xac, gbc.readMem(0xd3d7));
        // CB AC 01E3
        gbc.setState(0x6ee0, 0x3a30, 0xc3a0, 0x3333, 0x6eed, 0x5954, 0x0, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3a30, gbc.sp());
        EXPECT(0x6ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01E4
        gbc.setState(0x3ae1, 0x5c9d, 0x2de0, 0xd9d3, 0x8bef, 0xe06b, 0x1, 0x0);
        gbc.writeMem(0x3ae1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5c9d, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01E5
        gbc.setState(0xcc07, 0xacaf, 0x3f20, 0xa0ad, 0xcbb2, 0xf09f, 0x0, 0x0);
        gbc.writeMem(0xcc07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xacaf, gbc.sp());
        EXPECT(0xcc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc07));
        EXPECT(0xac, gbc.readMem(0xcc08));
        // CB AC 01E6
        gbc.setState(0xe401, 0x5846, 0xc5a0, 0x4b35, 0x4ed7, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0xe401, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5846, gbc.sp());
        EXPECT(0xe403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe401));
        EXPECT(0xac, gbc.readMem(0xe402));
        // CB AC 01E7
        gbc.setState(0xe144, 0xfaf9, 0xbc90, 0xb31a, 0x79b0, 0x5fc3, 0x0, 0x1);
        gbc.writeMem(0xe144, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfaf9, gbc.sp());
        EXPECT(0xe146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe144));
        EXPECT(0xac, gbc.readMem(0xe145));
        // CB AC 01E8
        gbc.setState(0xd831, 0x61f2, 0x16c0, 0xdc75, 0x11bb, 0x110a, 0x0, 0x1);
        gbc.writeMem(0xd831, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd831));
        EXPECT(0xac, gbc.readMem(0xd832));
        // CB AC 01E9
        gbc.setState(0xbfaa, 0x7de, 0xd9c0, 0x3d35, 0xe1fe, 0xfb7f, 0x1, 0x1);
        gbc.writeMem(0xbfaa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7de, gbc.sp());
        EXPECT(0xbfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfaa));
        EXPECT(0xac, gbc.readMem(0xbfab));
        // CB AC 01EA
        gbc.setState(0xcf4b, 0xea7b, 0xa5c0, 0xfc72, 0xf9a3, 0xb209, 0x1, 0x0);
        gbc.writeMem(0xcf4b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0xcf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4b));
        EXPECT(0xac, gbc.readMem(0xcf4c));
        // CB AC 01EB
        gbc.setState(0x6593, 0x527, 0x1a30, 0x3504, 0xd622, 0x663f, 0x1, 0x1);
        gbc.writeMem(0x6593, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x527, gbc.sp());
        EXPECT(0x6595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01EC
        gbc.setState(0x4631, 0x4588, 0x6cd0, 0x3fcd, 0x4900, 0x33ff, 0x0, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4588, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01ED
        gbc.setState(0xe653, 0x2fe6, 0xa3d0, 0x6b5e, 0x710c, 0xdef, 0x0, 0x0);
        gbc.writeMem(0xe653, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2fe6, gbc.sp());
        EXPECT(0xe655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe653));
        EXPECT(0xac, gbc.readMem(0xe654));
        // CB AC 01EE
        gbc.setState(0xcde9, 0x8a21, 0xcbb0, 0xc956, 0xdc66, 0xc03b, 0x0, 0x1);
        gbc.writeMem(0xcde9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8a21, gbc.sp());
        EXPECT(0xcdeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde9));
        EXPECT(0xac, gbc.readMem(0xcdea));
        // CB AC 01EF
        gbc.setState(0xdd17, 0xac34, 0x7ee0, 0x770c, 0x8318, 0x1f17, 0x0, 0x1);
        gbc.writeMem(0xdd17, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0xdd19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd17));
        EXPECT(0xac, gbc.readMem(0xdd18));
        // CB AC 01F1
        gbc.setState(0xee5f, 0x5f2a, 0xc460, 0x6613, 0xd2ca, 0x6bf, 0x1, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0xee61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5f));
        EXPECT(0xac, gbc.readMem(0xee60));
        // CB AC 01F2
        gbc.setState(0x5f90, 0x1173, 0x3c40, 0xc0ac, 0x1d4f, 0x1019, 0x1, 0x0);
        gbc.writeMem(0x5f90, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1173, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01F3
        gbc.setState(0x782b, 0x4f1c, 0x7540, 0x8acb, 0x6642, 0x791b, 0x1, 0x1);
        gbc.writeMem(0x782b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4f1c, gbc.sp());
        EXPECT(0x782d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01F4
        gbc.setState(0x74e0, 0x8ac1, 0x21f0, 0xb6b4, 0x7c5c, 0xcb75, 0x1, 0x0);
        gbc.writeMem(0x74e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8ac1, gbc.sp());
        EXPECT(0x74e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01F5
        gbc.setState(0x47c9, 0xab6c, 0x7260, 0x8331, 0x6839, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0x47c9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xab6c, gbc.sp());
        EXPECT(0x47cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01F6
        gbc.setState(0x57ca, 0x23d8, 0x21b0, 0x3b2, 0x7be4, 0x1cde, 0x0, 0x0);
        gbc.writeMem(0x57ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x23d8, gbc.sp());
        EXPECT(0x57cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01F7
        gbc.setState(0x172c, 0xde74, 0x3180, 0x68e0, 0x17cc, 0x485d, 0x1, 0x0);
        gbc.writeMem(0x172c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0x172e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01F8
        gbc.setState(0x83a1, 0xe5b, 0x8080, 0x51d8, 0xf58c, 0x849f, 0x1, 0x0);
        gbc.writeMem(0x83a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe5b, gbc.sp());
        EXPECT(0x83a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a1));
        EXPECT(0xac, gbc.readMem(0x83a2));
        // CB AC 01F9
        gbc.setState(0xa9b, 0xc6ec, 0x4c60, 0x8434, 0x7a2e, 0x847b, 0x0, 0x1);
        gbc.writeMem(0xa9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc6ec, gbc.sp());
        EXPECT(0xa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01FA
        gbc.setState(0xe070, 0xbb7d, 0x840, 0x8be3, 0x179, 0xe700, 0x0, 0x0);
        gbc.writeMem(0xe070, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbb7d, gbc.sp());
        EXPECT(0xe072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe070));
        EXPECT(0xac, gbc.readMem(0xe071));
        // CB AC 01FB
        gbc.setState(0x8b8a, 0x2bc6, 0xbcc0, 0x4d9f, 0xd4e, 0x5bf2, 0x0, 0x1);
        gbc.writeMem(0x8b8a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2bc6, gbc.sp());
        EXPECT(0x8b8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8a));
        EXPECT(0xac, gbc.readMem(0x8b8b));
        // CB AC 01FC
        gbc.setState(0xc7c1, 0x44e7, 0x4c60, 0x5325, 0x1847, 0x7ed6, 0x0, 0x0);
        gbc.writeMem(0xc7c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x44e7, gbc.sp());
        EXPECT(0xc7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c1));
        EXPECT(0xac, gbc.readMem(0xc7c2));
        // CB AC 01FD
        gbc.setState(0x730a, 0x847c, 0x1870, 0x6811, 0xc14d, 0xed31, 0x0, 0x1);
        gbc.writeMem(0x730a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x847c, gbc.sp());
        EXPECT(0x730c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 01FE
        gbc.setState(0x58e0, 0x73b2, 0x2120, 0x2dab, 0x183d, 0x3907, 0x1, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x73b2, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 01FF
        gbc.setState(0x9b04, 0xb5f9, 0xc9f0, 0x5b75, 0x359b, 0x3f60, 0x0, 0x1);
        gbc.writeMem(0x9b04, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb5f9, gbc.sp());
        EXPECT(0x9b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b04));
        EXPECT(0xac, gbc.readMem(0x9b05));
        // CB AC 0201
        gbc.setState(0xc08a, 0x8a00, 0xfd70, 0xcab1, 0xf428, 0x9fe2, 0x0, 0x0);
        gbc.writeMem(0xc08a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a00, gbc.sp());
        EXPECT(0xc08c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08a));
        EXPECT(0xac, gbc.readMem(0xc08b));
        // CB AC 0202
        gbc.setState(0x3122, 0xfc53, 0xff90, 0x3f6f, 0x54ef, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0x3122, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfc53, gbc.sp());
        EXPECT(0x3124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0203
        gbc.setState(0x8cfa, 0x1313, 0xd190, 0xad8f, 0xf5ea, 0xa39a, 0x0, 0x0);
        gbc.writeMem(0x8cfa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1313, gbc.sp());
        EXPECT(0x8cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfa));
        EXPECT(0xac, gbc.readMem(0x8cfb));
        // CB AC 0204
        gbc.setState(0x2256, 0xf85b, 0x9e40, 0xebf3, 0x4553, 0x263f, 0x1, 0x1);
        gbc.writeMem(0x2256, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf85b, gbc.sp());
        EXPECT(0x2258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0206
        gbc.setState(0x1817, 0x8d34, 0xe590, 0xe975, 0x6b71, 0xc0b2, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8d34, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0207
        gbc.setState(0x7473, 0xf9ed, 0x31e0, 0x63b9, 0x855, 0x58e6, 0x1, 0x0);
        gbc.writeMem(0x7473, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf9ed, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0208
        gbc.setState(0x6dc3, 0x1f2d, 0xee40, 0xd638, 0x7c99, 0xf34e, 0x0, 0x1);
        gbc.writeMem(0x6dc3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0x6dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0209
        gbc.setState(0x5837, 0x716d, 0xe3f0, 0xcf0, 0xb335, 0xfde8, 0x1, 0x0);
        gbc.writeMem(0x5837, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x716d, gbc.sp());
        EXPECT(0x5839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 020A
        gbc.setState(0x5ef7, 0xc71f, 0x8830, 0x9160, 0xd6a9, 0x9608, 0x1, 0x0);
        gbc.writeMem(0x5ef7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc71f, gbc.sp());
        EXPECT(0x5ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 020B
        gbc.setState(0xedf6, 0x1536, 0xa440, 0x5e72, 0xef48, 0x3f43, 0x0, 0x0);
        gbc.writeMem(0xedf6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1536, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf6));
        EXPECT(0xac, gbc.readMem(0xedf7));
        // CB AC 020D
        gbc.setState(0xe0b8, 0x73bb, 0xf3a0, 0xf7d4, 0x4b8, 0xb451, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x73bb, gbc.sp());
        EXPECT(0xe0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b8));
        EXPECT(0xac, gbc.readMem(0xe0b9));
        // CB AC 020E
        gbc.setState(0xe503, 0x46f3, 0xeb20, 0xf62, 0xf1ff, 0x68d2, 0x0, 0x0);
        gbc.writeMem(0xe503, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x46f3, gbc.sp());
        EXPECT(0xe505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe503));
        EXPECT(0xac, gbc.readMem(0xe504));
        // CB AC 020F
        gbc.setState(0x7689, 0x68d7, 0x6220, 0xacf, 0x3af2, 0xe5be, 0x1, 0x1);
        gbc.writeMem(0x7689, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x68d7, gbc.sp());
        EXPECT(0x768b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0210
        gbc.setState(0x9fbc, 0xa54, 0x17d0, 0x10c2, 0x6133, 0xe5dc, 0x0, 0x0);
        gbc.writeMem(0x9fbc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa54, gbc.sp());
        EXPECT(0x9fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fbc));
        EXPECT(0xac, gbc.readMem(0x9fbd));
        // CB AC 0211
        gbc.setState(0x7a43, 0x2250, 0x4400, 0xbd39, 0x197, 0x8425, 0x0, 0x0);
        gbc.writeMem(0x7a43, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x7a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0212
        gbc.setState(0x946a, 0xfe6e, 0xdf10, 0x4e84, 0xa189, 0x1719, 0x1, 0x1);
        gbc.writeMem(0x946a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfe6e, gbc.sp());
        EXPECT(0x946c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946a));
        EXPECT(0xac, gbc.readMem(0x946b));
        // CB AC 0213
        gbc.setState(0xc845, 0x5a68, 0xb050, 0xea94, 0x8889, 0x1341, 0x0, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5a68, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc845));
        EXPECT(0xac, gbc.readMem(0xc846));
        // CB AC 0214
        gbc.setState(0xe6d7, 0x3a36, 0x64e0, 0xee76, 0x921f, 0xe5cb, 0x1, 0x0);
        gbc.writeMem(0xe6d7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3a36, gbc.sp());
        EXPECT(0xe6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d7));
        EXPECT(0xac, gbc.readMem(0xe6d8));
        // CB AC 0215
        gbc.setState(0xe16f, 0xa300, 0x7be0, 0xf1b9, 0x379, 0xf0d0, 0x1, 0x0);
        gbc.writeMem(0xe16f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa300, gbc.sp());
        EXPECT(0xe171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16f));
        EXPECT(0xac, gbc.readMem(0xe170));
        // CB AC 0216
        gbc.setState(0xc7a, 0x670a, 0x5320, 0xc468, 0x48a8, 0xd120, 0x1, 0x0);
        gbc.writeMem(0xc7a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x670a, gbc.sp());
        EXPECT(0xc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0217
        gbc.setState(0xd8e2, 0x8204, 0x3570, 0x9c44, 0xc542, 0xf27e, 0x0, 0x0);
        gbc.writeMem(0xd8e2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8204, gbc.sp());
        EXPECT(0xd8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e2));
        EXPECT(0xac, gbc.readMem(0xd8e3));
        // CB AC 0218
        gbc.setState(0x771d, 0xa038, 0xb4c0, 0xe678, 0xb7a6, 0x58e2, 0x1, 0x0);
        gbc.writeMem(0x771d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa038, gbc.sp());
        EXPECT(0x771f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0219
        gbc.setState(0xaef8, 0x73f7, 0x1f10, 0x8bf3, 0x9547, 0xe03c, 0x1, 0x1);
        gbc.writeMem(0xaef8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x73f7, gbc.sp());
        EXPECT(0xaefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef8));
        EXPECT(0xac, gbc.readMem(0xaef9));
        // CB AC 021A
        gbc.setState(0x6ee3, 0xda9a, 0x4430, 0x998, 0xc378, 0x9d29, 0x1, 0x0);
        gbc.writeMem(0x6ee3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xda9a, gbc.sp());
        EXPECT(0x6ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 021B
        gbc.setState(0x6933, 0x49e, 0xae90, 0x64cf, 0xe7bf, 0xa4b4, 0x0, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0x6935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 021C
        gbc.setState(0x70b, 0x7de0, 0xed90, 0xf791, 0xd9b2, 0x114, 0x1, 0x1);
        gbc.writeMem(0x70b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7de0, gbc.sp());
        EXPECT(0x70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 021D
        gbc.setState(0x24d3, 0xfb4b, 0xd450, 0x3a4d, 0xfa8d, 0x2993, 0x0, 0x0);
        gbc.writeMem(0x24d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xfb4b, gbc.sp());
        EXPECT(0x24d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 021E
        gbc.setState(0x4fa1, 0x97aa, 0x2560, 0x10fb, 0xcad3, 0x3f4c, 0x0, 0x0);
        gbc.writeMem(0x4fa1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x97aa, gbc.sp());
        EXPECT(0x4fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 021F
        gbc.setState(0xe9de, 0x6c6a, 0x8380, 0x246, 0x7337, 0x2d13, 0x1, 0x0);
        gbc.writeMem(0xe9de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6c6a, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9de));
        EXPECT(0xac, gbc.readMem(0xe9df));
        // CB AC 0220
        gbc.setState(0x84e8, 0x9b98, 0xf490, 0x7079, 0x9a62, 0xf215, 0x1, 0x0);
        gbc.writeMem(0x84e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0x84ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e8));
        EXPECT(0xac, gbc.readMem(0x84e9));
        // CB AC 0221
        gbc.setState(0x5796, 0xb4bd, 0x8300, 0xbf15, 0x977d, 0xf1cd, 0x0, 0x0);
        gbc.writeMem(0x5796, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0x5798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0222
        gbc.setState(0x605d, 0x5786, 0x8dc0, 0xbdb5, 0x482a, 0x91ff, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5786, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0223
        gbc.setState(0x99fc, 0x7817, 0x9590, 0x6660, 0x9012, 0xeddc, 0x0, 0x0);
        gbc.writeMem(0x99fc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7817, gbc.sp());
        EXPECT(0x99fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fc));
        EXPECT(0xac, gbc.readMem(0x99fd));
        // CB AC 0224
        gbc.setState(0xb52a, 0x1534, 0x1f10, 0xf371, 0x67bb, 0x8e7d, 0x0, 0x1);
        gbc.writeMem(0xb52a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1534, gbc.sp());
        EXPECT(0xb52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52a));
        EXPECT(0xac, gbc.readMem(0xb52b));
        // CB AC 0225
        gbc.setState(0x3264, 0xf8a2, 0xf850, 0xfd45, 0x2089, 0x671f, 0x0, 0x1);
        gbc.writeMem(0x3264, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf8a2, gbc.sp());
        EXPECT(0x3266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0226
        gbc.setState(0xb506, 0x9acf, 0xa7e0, 0xae1e, 0xdbbd, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9acf, gbc.sp());
        EXPECT(0xb508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb506));
        EXPECT(0xac, gbc.readMem(0xb507));
        // CB AC 0227
        gbc.setState(0x5f53, 0xef50, 0x7c80, 0xa6c7, 0x3009, 0xa904, 0x0, 0x0);
        gbc.writeMem(0x5f53, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xef50, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0228
        gbc.setState(0xcd1d, 0xd617, 0x8410, 0x5063, 0x4bf8, 0x405d, 0x0, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd617, gbc.sp());
        EXPECT(0xcd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd1d));
        EXPECT(0xac, gbc.readMem(0xcd1e));
        // CB AC 0229
        gbc.setState(0xc940, 0x94b0, 0xe460, 0x251, 0xa248, 0x889d, 0x0, 0x0);
        gbc.writeMem(0xc940, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x94b0, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc940));
        EXPECT(0xac, gbc.readMem(0xc941));
        // CB AC 022A
        gbc.setState(0x527e, 0x97ca, 0x92f0, 0xbd1a, 0x1e8f, 0xe04a, 0x0, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 022B
        gbc.setState(0x1e9e, 0x81ba, 0xaf60, 0x223b, 0xcf44, 0xf98c, 0x0, 0x0);
        gbc.writeMem(0x1e9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x81ba, gbc.sp());
        EXPECT(0x1ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 022C
        gbc.setState(0x28db, 0x6c45, 0x1ce0, 0x884, 0x78fc, 0x2c3b, 0x1, 0x0);
        gbc.writeMem(0x28db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6c45, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 022D
        gbc.setState(0xd485, 0x2d39, 0x8d20, 0xc584, 0xdc27, 0x7e87, 0x1, 0x1);
        gbc.writeMem(0xd485, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2d39, gbc.sp());
        EXPECT(0xd487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd485));
        EXPECT(0xac, gbc.readMem(0xd486));
        // CB AC 022E
        gbc.setState(0x6d62, 0x6840, 0x4490, 0xc415, 0xdb52, 0x21bc, 0x1, 0x0);
        gbc.writeMem(0x6d62, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0x6d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 022F
        gbc.setState(0x5d27, 0xb05e, 0x4f90, 0x54d6, 0x6920, 0x2111, 0x0, 0x0);
        gbc.writeMem(0x5d27, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb05e, gbc.sp());
        EXPECT(0x5d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0230
        gbc.setState(0x80a1, 0x83f3, 0x2bb0, 0xd0c8, 0x5356, 0x8105, 0x1, 0x1);
        gbc.writeMem(0x80a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x80a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a1));
        EXPECT(0xac, gbc.readMem(0x80a2));
        // CB AC 0231
        gbc.setState(0xb16b, 0xec9b, 0xdfa0, 0xde62, 0xcbf6, 0xa59f, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xec9b, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16b));
        EXPECT(0xac, gbc.readMem(0xb16c));
        // CB AC 0232
        gbc.setState(0xe6c4, 0x6c6c, 0x7a70, 0x6c02, 0x9c23, 0xe8e4, 0x1, 0x1);
        gbc.writeMem(0xe6c4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6c6c, gbc.sp());
        EXPECT(0xe6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c4));
        EXPECT(0xac, gbc.readMem(0xe6c5));
        // CB AC 0233
        gbc.setState(0x71af, 0x45d4, 0x7e50, 0x7ac8, 0x68af, 0x43d1, 0x0, 0x0);
        gbc.writeMem(0x71af, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x45d4, gbc.sp());
        EXPECT(0x71b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0234
        gbc.setState(0xc88c, 0xd3ab, 0xddf0, 0xeeaa, 0xeb75, 0xb782, 0x1, 0x0);
        gbc.writeMem(0xc88c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd3ab, gbc.sp());
        EXPECT(0xc88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc88c));
        EXPECT(0xac, gbc.readMem(0xc88d));
        // CB AC 0237
        gbc.setState(0x1bad, 0xb2f, 0xe6a0, 0xefbc, 0xa0c9, 0xa8a3, 0x0, 0x0);
        gbc.writeMem(0x1bad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb2f, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0239
        gbc.setState(0xbbb3, 0xad4c, 0x6420, 0x8b4f, 0xcf96, 0x13df, 0x1, 0x0);
        gbc.writeMem(0xbbb3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0xbbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb3));
        EXPECT(0xac, gbc.readMem(0xbbb4));
        // CB AC 023A
        gbc.setState(0xcaf2, 0xd5fc, 0xc3b0, 0xb777, 0xb493, 0x9edf, 0x0, 0x0);
        gbc.writeMem(0xcaf2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd5fc, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf2));
        EXPECT(0xac, gbc.readMem(0xcaf3));
        // CB AC 023B
        gbc.setState(0xb53f, 0x739d, 0x3520, 0x84d9, 0x2d66, 0x541, 0x1, 0x1);
        gbc.writeMem(0xb53f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x739d, gbc.sp());
        EXPECT(0xb541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb53f));
        EXPECT(0xac, gbc.readMem(0xb540));
        // CB AC 023C
        gbc.setState(0xf8, 0xa57e, 0x7a40, 0x726e, 0x4dbe, 0xe39a, 0x0, 0x0);
        gbc.writeMem(0xf8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa57e, gbc.sp());
        EXPECT(0xfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 023D
        gbc.setState(0x1df2, 0xbe9a, 0x2150, 0x2c69, 0x32bb, 0xbcdb, 0x1, 0x1);
        gbc.writeMem(0x1df2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbe9a, gbc.sp());
        EXPECT(0x1df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 023E
        gbc.setState(0x4a7f, 0xb9bf, 0xaaf0, 0xd405, 0x604b, 0x1609, 0x1, 0x1);
        gbc.writeMem(0x4a7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb9bf, gbc.sp());
        EXPECT(0x4a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 023F
        gbc.setState(0xc154, 0x4eed, 0xef10, 0x2a2f, 0x7e34, 0x5083, 0x1, 0x1);
        gbc.writeMem(0xc154, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4eed, gbc.sp());
        EXPECT(0xc156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc154));
        EXPECT(0xac, gbc.readMem(0xc155));
        // CB AC 0240
        gbc.setState(0x5c47, 0xdec8, 0x3e40, 0x79b4, 0xb163, 0x600f, 0x1, 0x1);
        gbc.writeMem(0x5c47, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdec8, gbc.sp());
        EXPECT(0x5c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0241
        gbc.setState(0x61b1, 0x89f7, 0x75f0, 0x374e, 0xdb5b, 0x46a9, 0x1, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0x61b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0242
        gbc.setState(0xca4c, 0x7a98, 0x4ab0, 0x70af, 0x5ae6, 0x2ec4, 0x1, 0x0);
        gbc.writeMem(0xca4c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7a98, gbc.sp());
        EXPECT(0xca4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4c));
        EXPECT(0xac, gbc.readMem(0xca4d));
        // CB AC 0243
        gbc.setState(0x5a0, 0x4a10, 0x1d20, 0x9783, 0x6dc6, 0x19d3, 0x0, 0x1);
        gbc.writeMem(0x5a0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4a10, gbc.sp());
        EXPECT(0x5a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0244
        gbc.setState(0x4331, 0x59bc, 0x2d20, 0x4cfa, 0xb639, 0xe009, 0x1, 0x1);
        gbc.writeMem(0x4331, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x59bc, gbc.sp());
        EXPECT(0x4333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0245
        gbc.setState(0x878, 0xd76d, 0xd1b0, 0x3147, 0x148, 0x7353, 0x0, 0x1);
        gbc.writeMem(0x878, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd76d, gbc.sp());
        EXPECT(0x87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0246
        gbc.setState(0x773e, 0xb656, 0x9130, 0x7737, 0xcf6c, 0xda7, 0x1, 0x0);
        gbc.writeMem(0x773e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb656, gbc.sp());
        EXPECT(0x7740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0247
        gbc.setState(0xaf91, 0x5ddd, 0x9e60, 0x921c, 0x9d53, 0x5066, 0x0, 0x0);
        gbc.writeMem(0xaf91, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0xaf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf91));
        EXPECT(0xac, gbc.readMem(0xaf92));
        // CB AC 0248
        gbc.setState(0x8222, 0x5dbd, 0x2940, 0xa181, 0x44cd, 0x24fb, 0x0, 0x0);
        gbc.writeMem(0x8222, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5dbd, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8222));
        EXPECT(0xac, gbc.readMem(0x8223));
        // CB AC 024A
        gbc.setState(0x5512, 0xe2a1, 0xa0a0, 0xb262, 0x9ada, 0x12ac, 0x1, 0x1);
        gbc.writeMem(0x5512, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0x5514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 024C
        gbc.setState(0x9e6b, 0x2ac8, 0xbcb0, 0xb777, 0xaaad, 0xf1bf, 0x0, 0x1);
        gbc.writeMem(0x9e6b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2ac8, gbc.sp());
        EXPECT(0x9e6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6b));
        EXPECT(0xac, gbc.readMem(0x9e6c));
        // CB AC 024D
        gbc.setState(0x1af5, 0xff4c, 0x6810, 0x19b2, 0xe127, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x1af5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xff4c, gbc.sp());
        EXPECT(0x1af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 024E
        gbc.setState(0x498f, 0xd13, 0x29a0, 0x9ed7, 0xd88d, 0xbd48, 0x0, 0x1);
        gbc.writeMem(0x498f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd13, gbc.sp());
        EXPECT(0x4991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 024F
        gbc.setState(0x6f39, 0xb4ff, 0x1e0, 0xd43f, 0xa489, 0xa432, 0x1, 0x1);
        gbc.writeMem(0x6f39, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb4ff, gbc.sp());
        EXPECT(0x6f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0250
        gbc.setState(0xc385, 0xfc39, 0x36a0, 0x1435, 0x65b7, 0x2fe3, 0x1, 0x0);
        gbc.writeMem(0xc385, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfc39, gbc.sp());
        EXPECT(0xc387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc385));
        EXPECT(0xac, gbc.readMem(0xc386));
        // CB AC 0251
        gbc.setState(0x6896, 0xf391, 0x8b40, 0xb196, 0x7c0f, 0x5f1d, 0x0, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf391, gbc.sp());
        EXPECT(0x6898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0252
        gbc.setState(0x51f8, 0x98a5, 0x9560, 0x4461, 0x2dbe, 0xf91e, 0x1, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x98a5, gbc.sp());
        EXPECT(0x51fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0253
        gbc.setState(0xea2a, 0x7f70, 0x33f0, 0x7657, 0xe029, 0x1385, 0x1, 0x1);
        gbc.writeMem(0xea2a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7f70, gbc.sp());
        EXPECT(0xea2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea2a));
        EXPECT(0xac, gbc.readMem(0xea2b));
        // CB AC 0254
        gbc.setState(0x407d, 0xe489, 0x35b0, 0xff71, 0xd494, 0xe353, 0x1, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe489, gbc.sp());
        EXPECT(0x407f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0255
        gbc.setState(0x3c1e, 0x253e, 0x6f0, 0xbe1e, 0x6fb6, 0xb8a5, 0x0, 0x1);
        gbc.writeMem(0x3c1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0x3c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0256
        gbc.setState(0x8580, 0xb05, 0xb7a0, 0xb70, 0x5032, 0xc7f2, 0x0, 0x1);
        gbc.writeMem(0x8580, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x8582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8580));
        EXPECT(0xac, gbc.readMem(0x8581));
        // CB AC 0257
        gbc.setState(0x566a, 0xe0d9, 0x87f0, 0x4dca, 0xef21, 0xdfae, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe0d9, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0258
        gbc.setState(0xe9e2, 0x55ea, 0x1870, 0xe4a1, 0xdc56, 0x63be, 0x1, 0x0);
        gbc.writeMem(0xe9e2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xe9e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e2));
        EXPECT(0xac, gbc.readMem(0xe9e3));
        // CB AC 0259
        gbc.setState(0x324e, 0x551b, 0x7730, 0xa76a, 0x272c, 0x8ec8, 0x1, 0x0);
        gbc.writeMem(0x324e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0x3250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 025A
        gbc.setState(0x366d, 0xcd11, 0xe140, 0x6c5, 0xd82f, 0xdb7a, 0x0, 0x0);
        gbc.writeMem(0x366d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0x366f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 025C
        gbc.setState(0xb7f, 0x9ff8, 0x4620, 0x95f4, 0xbf9, 0xc549, 0x1, 0x0);
        gbc.writeMem(0xb7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9ff8, gbc.sp());
        EXPECT(0xb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 025D
        gbc.setState(0x32d, 0xf482, 0x5f90, 0xa65f, 0xbf0b, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf482, gbc.sp());
        EXPECT(0x32f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 025E
        gbc.setState(0xdbcb, 0x4a29, 0xa200, 0xa411, 0xd2eb, 0x8733, 0x1, 0x1);
        gbc.writeMem(0xdbcb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4a29, gbc.sp());
        EXPECT(0xdbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbcb));
        EXPECT(0xac, gbc.readMem(0xdbcc));
        // CB AC 025F
        gbc.setState(0x7ba, 0xf70b, 0xe970, 0x5b5f, 0x1b6a, 0x2a45, 0x0, 0x0);
        gbc.writeMem(0x7ba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf70b, gbc.sp());
        EXPECT(0x7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0260
        gbc.setState(0x673f, 0x2175, 0x89c0, 0x107, 0x55ed, 0xc728, 0x1, 0x1);
        gbc.writeMem(0x673f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0x6741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0261
        gbc.setState(0x4f73, 0xe9f6, 0xab60, 0x9448, 0x4d71, 0x7c63, 0x0, 0x0);
        gbc.writeMem(0x4f73, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe9f6, gbc.sp());
        EXPECT(0x4f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0262
        gbc.setState(0x1064, 0xfbf6, 0xf8c0, 0xf4e7, 0x9151, 0x8533, 0x1, 0x1);
        gbc.writeMem(0x1064, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfbf6, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0263
        gbc.setState(0x10a4, 0x4298, 0x51e0, 0xe38d, 0x99b, 0xbdb8, 0x0, 0x0);
        gbc.writeMem(0x10a4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4298, gbc.sp());
        EXPECT(0x10a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0264
        gbc.setState(0x6d45, 0xd9b7, 0xc530, 0x403e, 0x4f78, 0x27b3, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd9b7, gbc.sp());
        EXPECT(0x6d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0265
        gbc.setState(0xb199, 0xbf23, 0xd930, 0x4d5f, 0xc63b, 0x5582, 0x0, 0x0);
        gbc.writeMem(0xb199, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbf23, gbc.sp());
        EXPECT(0xb19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb199));
        EXPECT(0xac, gbc.readMem(0xb19a));
        // CB AC 0266
        gbc.setState(0x8155, 0x7c49, 0xecd0, 0x9fac, 0xaa13, 0xee48, 0x1, 0x1);
        gbc.writeMem(0x8155, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7c49, gbc.sp());
        EXPECT(0x8157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8155));
        EXPECT(0xac, gbc.readMem(0x8156));
        // CB AC 0267
        gbc.setState(0x49cb, 0x83ad, 0x42c0, 0x8861, 0x961c, 0x901e, 0x0, 0x0);
        gbc.writeMem(0x49cb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x83ad, gbc.sp());
        EXPECT(0x49cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0268
        gbc.setState(0xaa14, 0x6d3f, 0x75b0, 0xf931, 0xf542, 0x2c7, 0x1, 0x0);
        gbc.writeMem(0xaa14, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6d3f, gbc.sp());
        EXPECT(0xaa16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa14));
        EXPECT(0xac, gbc.readMem(0xaa15));
        // CB AC 0269
        gbc.setState(0x9ef, 0x7981, 0xd080, 0xc96e, 0x2ae1, 0xab02, 0x1, 0x1);
        gbc.writeMem(0x9ef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7981, gbc.sp());
        EXPECT(0x9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 026A
        gbc.setState(0xeb8b, 0xa65b, 0xd340, 0x1a7e, 0x30da, 0xa49e, 0x1, 0x0);
        gbc.writeMem(0xeb8b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa65b, gbc.sp());
        EXPECT(0xeb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8b));
        EXPECT(0xac, gbc.readMem(0xeb8c));
        // CB AC 026C
        gbc.setState(0x5d56, 0xc796, 0xa840, 0xcca0, 0x82ee, 0x804e, 0x0, 0x0);
        gbc.writeMem(0x5d56, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc796, gbc.sp());
        EXPECT(0x5d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 026D
        gbc.setState(0xc9cc, 0x6f30, 0x9920, 0x54b7, 0x1d28, 0xa6e4, 0x0, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cc));
        EXPECT(0xac, gbc.readMem(0xc9cd));
        // CB AC 026E
        gbc.setState(0xe0b5, 0x205a, 0xfbf0, 0x1007, 0x2f6b, 0x1bfc, 0x1, 0x0);
        gbc.writeMem(0xe0b5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x205a, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b5));
        EXPECT(0xac, gbc.readMem(0xe0b6));
        // CB AC 026F
        gbc.setState(0xbd45, 0x1b40, 0x7e0, 0x1ceb, 0x8480, 0x9868, 0x1, 0x1);
        gbc.writeMem(0xbd45, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1b40, gbc.sp());
        EXPECT(0xbd47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd45));
        EXPECT(0xac, gbc.readMem(0xbd46));
        // CB AC 0271
        gbc.setState(0x13f0, 0x51ac, 0x7f80, 0x846c, 0x893, 0xa86e, 0x0, 0x1);
        gbc.writeMem(0x13f0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x51ac, gbc.sp());
        EXPECT(0x13f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0272
        gbc.setState(0x33da, 0xd8aa, 0x3770, 0xc042, 0xa6a7, 0xba, 0x0, 0x0);
        gbc.writeMem(0x33da, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd8aa, gbc.sp());
        EXPECT(0x33dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0273
        gbc.setState(0xbc1, 0xf591, 0x5190, 0xc5c0, 0x2937, 0xc4ff, 0x1, 0x1);
        gbc.writeMem(0xbc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0274
        gbc.setState(0x3425, 0x5076, 0x3c70, 0xe96f, 0x8149, 0x7abe, 0x0, 0x0);
        gbc.writeMem(0x3425, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5076, gbc.sp());
        EXPECT(0x3427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0275
        gbc.setState(0x234b, 0xd310, 0x460, 0x8001, 0xa549, 0xe35d, 0x1, 0x0);
        gbc.writeMem(0x234b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd310, gbc.sp());
        EXPECT(0x234d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0276
        gbc.setState(0x2f36, 0x56ae, 0x4e0, 0x1e0a, 0x8dd5, 0x26, 0x0, 0x1);
        gbc.writeMem(0x2f36, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0x2f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0277
        gbc.setState(0xe64, 0xba6, 0x7720, 0x7f57, 0x7de, 0x887b, 0x1, 0x0);
        gbc.writeMem(0xe64, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xba6, gbc.sp());
        EXPECT(0xe66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0279
        gbc.setState(0xecf1, 0x5433, 0x77e0, 0x88fd, 0x4f75, 0x4ec2, 0x1, 0x0);
        gbc.writeMem(0xecf1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5433, gbc.sp());
        EXPECT(0xecf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf1));
        EXPECT(0xac, gbc.readMem(0xecf2));
        // CB AC 027A
        gbc.setState(0xbff0, 0xc118, 0xac80, 0xab23, 0x18c7, 0x9b36, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc118, gbc.sp());
        EXPECT(0xbff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff0));
        EXPECT(0xac, gbc.readMem(0xbff1));
        // CB AC 027C
        gbc.setState(0x9979, 0x4013, 0xfd30, 0xf8ca, 0x14e8, 0x9cfc, 0x1, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4013, gbc.sp());
        EXPECT(0x997b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9979));
        EXPECT(0xac, gbc.readMem(0x997a));
        // CB AC 027D
        gbc.setState(0x8f37, 0x7d4a, 0x6df0, 0x849, 0x13f8, 0xb405, 0x1, 0x0);
        gbc.writeMem(0x8f37, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7d4a, gbc.sp());
        EXPECT(0x8f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f37));
        EXPECT(0xac, gbc.readMem(0x8f38));
        // CB AC 027E
        gbc.setState(0x87be, 0x301, 0xf7f0, 0x96f2, 0xa153, 0x4efc, 0x0, 0x0);
        gbc.writeMem(0x87be, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x301, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87be));
        EXPECT(0xac, gbc.readMem(0x87bf));
        // CB AC 027F
        gbc.setState(0xe6ad, 0xadea, 0xebd0, 0x33c5, 0xa447, 0x19d8, 0x1, 0x1);
        gbc.writeMem(0xe6ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xadea, gbc.sp());
        EXPECT(0xe6af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ad));
        EXPECT(0xac, gbc.readMem(0xe6ae));
        // CB AC 0280
        gbc.setState(0xb854, 0x204c, 0x77f0, 0xb6fc, 0x4023, 0x7b1a, 0x1, 0x0);
        gbc.writeMem(0xb854, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0xb856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb854));
        EXPECT(0xac, gbc.readMem(0xb855));
        // CB AC 0281
        gbc.setState(0x68b2, 0x952a, 0x7ea0, 0xa166, 0xc870, 0x204a, 0x0, 0x0);
        gbc.writeMem(0x68b2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0x68b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0282
        gbc.setState(0x5071, 0x6466, 0xf390, 0x8aa7, 0xcbc5, 0xaeca, 0x0, 0x0);
        gbc.writeMem(0x5071, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6466, gbc.sp());
        EXPECT(0x5073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0283
        gbc.setState(0x9f78, 0x8877, 0xd40, 0x1fb8, 0xd9b9, 0x3c13, 0x1, 0x1);
        gbc.writeMem(0x9f78, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x9f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f78));
        EXPECT(0xac, gbc.readMem(0x9f79));
        // CB AC 0284
        gbc.setState(0x3234, 0x3f09, 0x1e40, 0x58d7, 0x5bda, 0x9a9f, 0x0, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0285
        gbc.setState(0x639b, 0xf170, 0x97c0, 0x232, 0xeafe, 0xd4ef, 0x0, 0x0);
        gbc.writeMem(0x639b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf170, gbc.sp());
        EXPECT(0x639d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0286
        gbc.setState(0x26e0, 0xe51f, 0x6530, 0xe24c, 0x5b73, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0x26e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe51f, gbc.sp());
        EXPECT(0x26e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0287
        gbc.setState(0x129d, 0xa9ed, 0xe9f0, 0x8780, 0xd870, 0x9790, 0x0, 0x1);
        gbc.writeMem(0x129d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa9ed, gbc.sp());
        EXPECT(0x129f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0288
        gbc.setState(0x8881, 0x1628, 0xeb30, 0x7d66, 0xffc9, 0x5e6f, 0x0, 0x1);
        gbc.writeMem(0x8881, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1628, gbc.sp());
        EXPECT(0x8883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8881));
        EXPECT(0xac, gbc.readMem(0x8882));
        // CB AC 0289
        gbc.setState(0xe3ff, 0x2503, 0x4110, 0xaaf5, 0xbbb1, 0x6bea, 0x1, 0x0);
        gbc.writeMem(0xe3ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2503, gbc.sp());
        EXPECT(0xe401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ff));
        EXPECT(0xac, gbc.readMem(0xe400));
        // CB AC 028A
        gbc.setState(0xbe9d, 0x403e, 0x9870, 0xdb8d, 0x568f, 0x8cd4, 0x0, 0x1);
        gbc.writeMem(0xbe9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x403e, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9d));
        EXPECT(0xac, gbc.readMem(0xbe9e));
        // CB AC 028B
        gbc.setState(0xc0ca, 0x7e31, 0x7b80, 0x4e76, 0xff37, 0x6078, 0x0, 0x1);
        gbc.writeMem(0xc0ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7e31, gbc.sp());
        EXPECT(0xc0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ca));
        EXPECT(0xac, gbc.readMem(0xc0cb));
        // CB AC 028C
        gbc.setState(0xe70, 0xc3a5, 0x9170, 0x86d4, 0x7b55, 0xa9fc, 0x1, 0x1);
        gbc.writeMem(0xe70, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc3a5, gbc.sp());
        EXPECT(0xe72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 028D
        gbc.setState(0xc7d0, 0xe7f4, 0x3f40, 0x2b4c, 0xdc31, 0xa4c5, 0x0, 0x0);
        gbc.writeMem(0xc7d0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe7f4, gbc.sp());
        EXPECT(0xc7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d0));
        EXPECT(0xac, gbc.readMem(0xc7d1));
        // CB AC 028E
        gbc.setState(0x452e, 0xce51, 0x1b40, 0x44f, 0x650d, 0x9a07, 0x1, 0x0);
        gbc.writeMem(0x452e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xce51, gbc.sp());
        EXPECT(0x4530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 028F
        gbc.setState(0x890f, 0x1d47, 0xb680, 0x9113, 0x2aba, 0xc8b0, 0x1, 0x1);
        gbc.writeMem(0x890f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1d47, gbc.sp());
        EXPECT(0x8911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890f));
        EXPECT(0xac, gbc.readMem(0x8910));
        // CB AC 0290
        gbc.setState(0x8112, 0xb9ce, 0x30, 0x5902, 0xbdba, 0x16d3, 0x1, 0x1);
        gbc.writeMem(0x8112, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb9ce, gbc.sp());
        EXPECT(0x8114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8112));
        EXPECT(0xac, gbc.readMem(0x8113));
        // CB AC 0291
        gbc.setState(0x1a5, 0xe8f0, 0x2f0, 0x68d7, 0xc608, 0x4751, 0x1, 0x0);
        gbc.writeMem(0x1a5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe8f0, gbc.sp());
        EXPECT(0x1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0292
        gbc.setState(0x7117, 0xf9c, 0x6310, 0xd753, 0x817f, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x7117, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf9c, gbc.sp());
        EXPECT(0x7119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0293
        gbc.setState(0x7b33, 0x26da, 0xf5a0, 0x1b77, 0xe78a, 0xf675, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x26da, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0294
        gbc.setState(0x11b4, 0x3c08, 0x5d80, 0x470d, 0xace6, 0x8b6, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3c08, gbc.sp());
        EXPECT(0x11b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0295
        gbc.setState(0xaa0d, 0xacc5, 0x1be0, 0x33ca, 0x8d77, 0x2822, 0x1, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xacc5, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0d));
        EXPECT(0xac, gbc.readMem(0xaa0e));
        // CB AC 0296
        gbc.setState(0xef07, 0xaaaa, 0xefb0, 0x3740, 0xa98f, 0x57f, 0x0, 0x0);
        gbc.writeMem(0xef07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaaaa, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef07));
        EXPECT(0xac, gbc.readMem(0xef08));
        // CB AC 0297
        gbc.setState(0xeb1e, 0xb1e5, 0xec50, 0x9b8a, 0x9fd8, 0x78e, 0x1, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1e));
        EXPECT(0xac, gbc.readMem(0xeb1f));
        // CB AC 0298
        gbc.setState(0x2ab1, 0x4233, 0x9e90, 0x5145, 0x84bc, 0x66f7, 0x0, 0x1);
        gbc.writeMem(0x2ab1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4233, gbc.sp());
        EXPECT(0x2ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0299
        gbc.setState(0x7400, 0xc9d0, 0x7400, 0x8750, 0xb6a3, 0x1408, 0x1, 0x1);
        gbc.writeMem(0x7400, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0x7402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 029A
        gbc.setState(0xe9c5, 0x9fe6, 0x5640, 0x1a65, 0x7e32, 0xe3b, 0x1, 0x0);
        gbc.writeMem(0xe9c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9fe6, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c5));
        EXPECT(0xac, gbc.readMem(0xe9c6));
        // CB AC 029B
        gbc.setState(0x1c7f, 0x7ac0, 0xb740, 0xe38f, 0x69eb, 0x25e5, 0x0, 0x1);
        gbc.writeMem(0x1c7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0x1c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 029C
        gbc.setState(0x63ba, 0x174f, 0xb8a0, 0x14f2, 0xaa98, 0x2664, 0x1, 0x1);
        gbc.writeMem(0x63ba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x174f, gbc.sp());
        EXPECT(0x63bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 029D
        gbc.setState(0x7e97, 0xf38, 0x860, 0x7e65, 0x989e, 0x9b3, 0x1, 0x1);
        gbc.writeMem(0x7e97, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf38, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 029E
        gbc.setState(0xe2c6, 0x9472, 0x3c00, 0x5724, 0x51fe, 0x534b, 0x0, 0x1);
        gbc.writeMem(0xe2c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9472, gbc.sp());
        EXPECT(0xe2c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c6));
        EXPECT(0xac, gbc.readMem(0xe2c7));
        // CB AC 029F
        gbc.setState(0x4815, 0xb4f3, 0xd4a0, 0xec67, 0x8ff4, 0x71b5, 0x0, 0x0);
        gbc.writeMem(0x4815, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb4f3, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02A1
        gbc.setState(0x2245, 0xa978, 0xc180, 0x1f6b, 0x3397, 0xa81, 0x1, 0x0);
        gbc.writeMem(0x2245, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0x2247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02A2
        gbc.setState(0x91ce, 0xd52e, 0x3220, 0xc34, 0xdedd, 0x6b1e, 0x0, 0x1);
        gbc.writeMem(0x91ce, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd52e, gbc.sp());
        EXPECT(0x91d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ce));
        EXPECT(0xac, gbc.readMem(0x91cf));
        // CB AC 02A3
        gbc.setState(0xdf76, 0x10f5, 0x7c70, 0xcc67, 0x1e67, 0xfca6, 0x1, 0x0);
        gbc.writeMem(0xdf76, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x10f5, gbc.sp());
        EXPECT(0xdf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf76));
        EXPECT(0xac, gbc.readMem(0xdf77));
        // CB AC 02A4
        gbc.setState(0x5596, 0x2f19, 0x7a70, 0x5c0c, 0x5220, 0x3ebe, 0x1, 0x0);
        gbc.writeMem(0x5596, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2f19, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02A5
        gbc.setState(0x155c, 0x418, 0xd360, 0x7b7f, 0x77ac, 0x5bc3, 0x0, 0x1);
        gbc.writeMem(0x155c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0x155e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02A6
        gbc.setState(0xd51c, 0xfd36, 0x9b50, 0xd987, 0xa8ea, 0x5019, 0x1, 0x1);
        gbc.writeMem(0xd51c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfd36, gbc.sp());
        EXPECT(0xd51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51c));
        EXPECT(0xac, gbc.readMem(0xd51d));
        // CB AC 02A7
        gbc.setState(0x45c8, 0x2177, 0x2f20, 0xfd5c, 0x4b9f, 0x8558, 0x1, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2177, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02A8
        gbc.setState(0xa96e, 0x1f66, 0x54d0, 0x1d23, 0x805d, 0x35ca, 0x1, 0x0);
        gbc.writeMem(0xa96e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1f66, gbc.sp());
        EXPECT(0xa970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96e));
        EXPECT(0xac, gbc.readMem(0xa96f));
        // CB AC 02A9
        gbc.setState(0x9a0d, 0xbe08, 0xd030, 0x52c7, 0xc17e, 0xd43, 0x0, 0x0);
        gbc.writeMem(0x9a0d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x9a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0d));
        EXPECT(0xac, gbc.readMem(0x9a0e));
        // CB AC 02AA
        gbc.setState(0x37e1, 0xf473, 0xd800, 0x6f98, 0x6eaf, 0xe580, 0x0, 0x0);
        gbc.writeMem(0x37e1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0x37e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02AB
        gbc.setState(0xe529, 0xb918, 0x4710, 0x8e07, 0xc09c, 0x6dcf, 0x1, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb918, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe529));
        EXPECT(0xac, gbc.readMem(0xe52a));
        // CB AC 02AD
        gbc.setState(0x11b7, 0x460f, 0x3130, 0xa2c0, 0x7d8b, 0x482e, 0x1, 0x1);
        gbc.writeMem(0x11b7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x460f, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02AE
        gbc.setState(0xcdc5, 0xf193, 0xa4d0, 0x7282, 0xe1dd, 0x63ed, 0x0, 0x0);
        gbc.writeMem(0xcdc5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf193, gbc.sp());
        EXPECT(0xcdc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc5));
        EXPECT(0xac, gbc.readMem(0xcdc6));
        // CB AC 02AF
        gbc.setState(0x8815, 0x56a8, 0x250, 0x8e24, 0x459f, 0x6dbc, 0x0, 0x1);
        gbc.writeMem(0x8815, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x56a8, gbc.sp());
        EXPECT(0x8817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8815));
        EXPECT(0xac, gbc.readMem(0x8816));
        // CB AC 02B0
        gbc.setState(0x77ad, 0xa8c, 0x22f0, 0xd43c, 0xdf46, 0x9179, 0x0, 0x0);
        gbc.writeMem(0x77ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa8c, gbc.sp());
        EXPECT(0x77af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02B1
        gbc.setState(0xb42d, 0x9639, 0x1360, 0x7d9c, 0x4793, 0xc7b5, 0x1, 0x1);
        gbc.writeMem(0xb42d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9639, gbc.sp());
        EXPECT(0xb42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42d));
        EXPECT(0xac, gbc.readMem(0xb42e));
        // CB AC 02B2
        gbc.setState(0x771, 0x980c, 0xb5b0, 0x3383, 0xdab8, 0x310f, 0x0, 0x0);
        gbc.writeMem(0x771, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x980c, gbc.sp());
        EXPECT(0x773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02B3
        gbc.setState(0x5eec, 0x42fb, 0xc780, 0x531e, 0xc6bf, 0x90d5, 0x0, 0x1);
        gbc.writeMem(0x5eec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x42fb, gbc.sp());
        EXPECT(0x5eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02B4
        gbc.setState(0xc089, 0xff14, 0xc870, 0x78f3, 0x18bc, 0x46d0, 0x0, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0xc08b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc089));
        EXPECT(0xac, gbc.readMem(0xc08a));
        // CB AC 02B5
        gbc.setState(0x7f2d, 0x9434, 0x4610, 0x6b2b, 0xe496, 0x99db, 0x0, 0x1);
        gbc.writeMem(0x7f2d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9434, gbc.sp());
        EXPECT(0x7f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02B6
        gbc.setState(0x76df, 0x9865, 0x9800, 0xdfec, 0xacee, 0x5f6e, 0x0, 0x0);
        gbc.writeMem(0x76df, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9865, gbc.sp());
        EXPECT(0x76e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02B7
        gbc.setState(0x9780, 0xca15, 0xfc60, 0x22f1, 0x9a29, 0x90e5, 0x0, 0x1);
        gbc.writeMem(0x9780, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0x9782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9780));
        EXPECT(0xac, gbc.readMem(0x9781));
        // CB AC 02B8
        gbc.setState(0xa713, 0x34e, 0x6680, 0x9e68, 0xeed, 0x288a, 0x0, 0x0);
        gbc.writeMem(0xa713, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0xa715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa713));
        EXPECT(0xac, gbc.readMem(0xa714));
        // CB AC 02B9
        gbc.setState(0x356c, 0x3d64, 0x1e00, 0x488, 0xdfca, 0x4460, 0x1, 0x1);
        gbc.writeMem(0x356c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3d64, gbc.sp());
        EXPECT(0x356e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02BA
        gbc.setState(0x6263, 0x8300, 0xb9a0, 0x5941, 0xfe1, 0x82dd, 0x0, 0x0);
        gbc.writeMem(0x6263, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8300, gbc.sp());
        EXPECT(0x6265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02BB
        gbc.setState(0xb5c7, 0xf3d8, 0xedb0, 0x7a89, 0xedcc, 0x5c2a, 0x1, 0x1);
        gbc.writeMem(0xb5c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf3d8, gbc.sp());
        EXPECT(0xb5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c7));
        EXPECT(0xac, gbc.readMem(0xb5c8));
        // CB AC 02BC
        gbc.setState(0x1b3d, 0x59f3, 0x7d00, 0x6bb9, 0x904, 0x147c, 0x1, 0x1);
        gbc.writeMem(0x1b3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0x1b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02BD
        gbc.setState(0xaf7d, 0xc740, 0xb1e0, 0x808a, 0xaad9, 0x51f0, 0x1, 0x0);
        gbc.writeMem(0xaf7d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc740, gbc.sp());
        EXPECT(0xaf7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7d));
        EXPECT(0xac, gbc.readMem(0xaf7e));
        // CB AC 02BE
        gbc.setState(0xef47, 0x9577, 0xda70, 0x1c30, 0x957, 0x81, 0x0, 0x0);
        gbc.writeMem(0xef47, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9577, gbc.sp());
        EXPECT(0xef49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef47));
        EXPECT(0xac, gbc.readMem(0xef48));
        // CB AC 02BF
        gbc.setState(0x81db, 0xddd7, 0xa6d0, 0x4295, 0xb07d, 0x27f0, 0x0, 0x1);
        gbc.writeMem(0x81db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xddd7, gbc.sp());
        EXPECT(0x81dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81db));
        EXPECT(0xac, gbc.readMem(0x81dc));
        // CB AC 02C0
        gbc.setState(0xc22a, 0xa8ee, 0x8600, 0x52e5, 0xc044, 0xa96e, 0x0, 0x1);
        gbc.writeMem(0xc22a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa8ee, gbc.sp());
        EXPECT(0xc22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22a));
        EXPECT(0xac, gbc.readMem(0xc22b));
        // CB AC 02C1
        gbc.setState(0xb21d, 0x8973, 0xe920, 0xc5de, 0xfce0, 0xc42b, 0x0, 0x1);
        gbc.writeMem(0xb21d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8973, gbc.sp());
        EXPECT(0xb21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21d));
        EXPECT(0xac, gbc.readMem(0xb21e));
        // CB AC 02C2
        gbc.setState(0x59ae, 0x7b59, 0x9700, 0xeec, 0x21db, 0xca96, 0x0, 0x0);
        gbc.writeMem(0x59ae, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7b59, gbc.sp());
        EXPECT(0x59b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02C3
        gbc.setState(0x87d3, 0x856, 0xb4f0, 0x955d, 0x831b, 0x7909, 0x0, 0x0);
        gbc.writeMem(0x87d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x856, gbc.sp());
        EXPECT(0x87d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d3));
        EXPECT(0xac, gbc.readMem(0x87d4));
        // CB AC 02C4
        gbc.setState(0x217d, 0x86ec, 0x2dc0, 0xd97e, 0x6bb9, 0x73f7, 0x1, 0x1);
        gbc.writeMem(0x217d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x86ec, gbc.sp());
        EXPECT(0x217f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02C5
        gbc.setState(0x986, 0xde49, 0x2fa0, 0xbd31, 0x2294, 0x2fb0, 0x0, 0x0);
        gbc.writeMem(0x986, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xde49, gbc.sp());
        EXPECT(0x988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02C6
        gbc.setState(0xbb0b, 0xbdef, 0x17f0, 0x80eb, 0x222c, 0xe5b2, 0x0, 0x1);
        gbc.writeMem(0xbb0b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbdef, gbc.sp());
        EXPECT(0xbb0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0b));
        EXPECT(0xac, gbc.readMem(0xbb0c));
        // CB AC 02C7
        gbc.setState(0xa2a4, 0x1f32, 0xc210, 0x53ff, 0xe943, 0x148a, 0x1, 0x0);
        gbc.writeMem(0xa2a4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1f32, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a4));
        EXPECT(0xac, gbc.readMem(0xa2a5));
        // CB AC 02C8
        gbc.setState(0xce87, 0xf040, 0x3b60, 0xed55, 0x5991, 0xc012, 0x1, 0x1);
        gbc.writeMem(0xce87, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf040, gbc.sp());
        EXPECT(0xce89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce87));
        EXPECT(0xac, gbc.readMem(0xce88));
        // CB AC 02C9
        gbc.setState(0xba7b, 0xadd7, 0xe360, 0x809, 0x48e9, 0x6ee8, 0x1, 0x1);
        gbc.writeMem(0xba7b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xadd7, gbc.sp());
        EXPECT(0xba7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7b));
        EXPECT(0xac, gbc.readMem(0xba7c));
        // CB AC 02CA
        gbc.setState(0x20c8, 0xf7a6, 0x4140, 0x3be1, 0xac66, 0xf421, 0x0, 0x1);
        gbc.writeMem(0x20c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf7a6, gbc.sp());
        EXPECT(0x20ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02CB
        gbc.setState(0x6b4, 0x24ee, 0x93a0, 0x5073, 0xb151, 0x8f9c, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x24ee, gbc.sp());
        EXPECT(0x6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02CD
        gbc.setState(0x71e2, 0x8816, 0x7300, 0xd006, 0x1562, 0xa209, 0x0, 0x0);
        gbc.writeMem(0x71e2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8816, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02CE
        gbc.setState(0x4bf0, 0x2c2d, 0x8a70, 0x6db9, 0x92ea, 0xdbd2, 0x0, 0x0);
        gbc.writeMem(0x4bf0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0x4bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02CF
        gbc.setState(0x59c2, 0x56d5, 0x3190, 0x40dd, 0x1c63, 0x4f3, 0x0, 0x1);
        gbc.writeMem(0x59c2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x56d5, gbc.sp());
        EXPECT(0x59c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02D1
        gbc.setState(0xe49, 0x40c4, 0x7a30, 0x5f40, 0x85fb, 0x61e, 0x1, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0xe4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02D2
        gbc.setState(0xd4e8, 0x690c, 0xad10, 0x1f35, 0xf047, 0x8ec4, 0x1, 0x1);
        gbc.writeMem(0xd4e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x690c, gbc.sp());
        EXPECT(0xd4ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e8));
        EXPECT(0xac, gbc.readMem(0xd4e9));
        // CB AC 02D3
        gbc.setState(0x9801, 0x446, 0x8080, 0x501e, 0x81d0, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x9801, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x9803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9801));
        EXPECT(0xac, gbc.readMem(0x9802));
        // CB AC 02D4
        gbc.setState(0x1ead, 0xa9e0, 0x40a0, 0x38fa, 0x1818, 0x5c6, 0x0, 0x1);
        gbc.writeMem(0x1ead, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa9e0, gbc.sp());
        EXPECT(0x1eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02D5
        gbc.setState(0xdfc5, 0xbad2, 0xa520, 0xb9d6, 0x5c97, 0x903d, 0x1, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0xac, gbc.readMem(0xdfc6));
        // CB AC 02D6
        gbc.setState(0x640d, 0x45f2, 0x3ac0, 0xe15, 0xd20b, 0xdda4, 0x1, 0x1);
        gbc.writeMem(0x640d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x640f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02D7
        gbc.setState(0x652d, 0xf561, 0x37b0, 0x4dbb, 0x5510, 0x91e7, 0x0, 0x0);
        gbc.writeMem(0x652d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf561, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02D8
        gbc.setState(0xb3f9, 0x54c3, 0x85f0, 0xa64e, 0x668c, 0x7d79, 0x1, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x54c3, gbc.sp());
        EXPECT(0xb3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f9));
        EXPECT(0xac, gbc.readMem(0xb3fa));
        // CB AC 02DA
        gbc.setState(0x742, 0xb5a6, 0x52d0, 0xb319, 0x1534, 0x1ede, 0x1, 0x0);
        gbc.writeMem(0x742, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb5a6, gbc.sp());
        EXPECT(0x744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02DB
        gbc.setState(0x2acf, 0x4eb4, 0x2b00, 0xc226, 0x2c84, 0x3978, 0x0, 0x0);
        gbc.writeMem(0x2acf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0x2ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02DC
        gbc.setState(0xb2b2, 0xfbe0, 0x7000, 0x4f55, 0x8d2f, 0x9e44, 0x1, 0x1);
        gbc.writeMem(0xb2b2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b2));
        EXPECT(0xac, gbc.readMem(0xb2b3));
        // CB AC 02DD
        gbc.setState(0xaf4, 0x6701, 0x5670, 0x619c, 0xc2ab, 0x6cc0, 0x0, 0x0);
        gbc.writeMem(0xaf4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6701, gbc.sp());
        EXPECT(0xaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02DE
        gbc.setState(0xac20, 0xffe4, 0x12e0, 0x55f1, 0x29af, 0xa0e5, 0x1, 0x0);
        gbc.writeMem(0xac20, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xffe4, gbc.sp());
        EXPECT(0xac22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac20));
        EXPECT(0xac, gbc.readMem(0xac21));
        // CB AC 02DF
        gbc.setState(0x2b94, 0xe189, 0xf4d0, 0x7e30, 0xd5dd, 0xf61f, 0x0, 0x0);
        gbc.writeMem(0x2b94, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe189, gbc.sp());
        EXPECT(0x2b96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02E0
        gbc.setState(0x35bb, 0x2768, 0x2000, 0x4e44, 0xf7ec, 0x46ae, 0x1, 0x0);
        gbc.writeMem(0x35bb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2768, gbc.sp());
        EXPECT(0x35bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02E1
        gbc.setState(0x5bd5, 0x6a3c, 0x26f0, 0x6117, 0x424f, 0x4095, 0x1, 0x0);
        gbc.writeMem(0x5bd5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6a3c, gbc.sp());
        EXPECT(0x5bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02E2
        gbc.setState(0xa3ac, 0x9987, 0x76c0, 0x4646, 0x907, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0xa3ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0xa3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ac));
        EXPECT(0xac, gbc.readMem(0xa3ad));
        // CB AC 02E3
        gbc.setState(0xbc60, 0x8997, 0x23d0, 0xc7e7, 0x2509, 0x2ab1, 0x1, 0x1);
        gbc.writeMem(0xbc60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0xbc62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc60));
        EXPECT(0xac, gbc.readMem(0xbc61));
        // CB AC 02E4
        gbc.setState(0xb1c6, 0x8c48, 0xe880, 0x81bb, 0xd39d, 0x44b9, 0x0, 0x0);
        gbc.writeMem(0xb1c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8c48, gbc.sp());
        EXPECT(0xb1c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c6));
        EXPECT(0xac, gbc.readMem(0xb1c7));
        // CB AC 02E5
        gbc.setState(0xcda3, 0x568c, 0xec80, 0x8364, 0x4e3e, 0xfa20, 0x0, 0x1);
        gbc.writeMem(0xcda3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x568c, gbc.sp());
        EXPECT(0xcda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda3));
        EXPECT(0xac, gbc.readMem(0xcda4));
        // CB AC 02E6
        gbc.setState(0xe4e, 0xbd2e, 0xc2d0, 0x6ef6, 0x3dc9, 0x78e5, 0x1, 0x1);
        gbc.writeMem(0xe4e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbd2e, gbc.sp());
        EXPECT(0xe50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02E7
        gbc.setState(0x892, 0x6757, 0x10d0, 0x86e4, 0x6bd1, 0x94e, 0x1, 0x1);
        gbc.writeMem(0x892, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6757, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02E8
        gbc.setState(0x32ef, 0x4a2a, 0x6200, 0x9554, 0xa09e, 0xef48, 0x0, 0x1);
        gbc.writeMem(0x32ef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4a2a, gbc.sp());
        EXPECT(0x32f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02E9
        gbc.setState(0xc931, 0xe548, 0x100, 0xb66e, 0x4207, 0x5ac4, 0x1, 0x1);
        gbc.writeMem(0xc931, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe548, gbc.sp());
        EXPECT(0xc933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc931));
        EXPECT(0xac, gbc.readMem(0xc932));
        // CB AC 02EA
        gbc.setState(0xe219, 0x63d, 0xeae0, 0xa211, 0x3e0, 0xacf8, 0x0, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x63d, gbc.sp());
        EXPECT(0xe21b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe219));
        EXPECT(0xac, gbc.readMem(0xe21a));
        // CB AC 02EB
        gbc.setState(0x5174, 0x142f, 0x2360, 0x7e9a, 0xeac3, 0x544, 0x1, 0x1);
        gbc.writeMem(0x5174, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x142f, gbc.sp());
        EXPECT(0x5176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02EC
        gbc.setState(0x5397, 0xdc30, 0x16a0, 0x848f, 0x86d1, 0x6f51, 0x1, 0x0);
        gbc.writeMem(0x5397, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdc30, gbc.sp());
        EXPECT(0x5399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02EE
        gbc.setState(0x3037, 0x3428, 0x4a80, 0x1987, 0x86ec, 0x8ad9, 0x1, 0x0);
        gbc.writeMem(0x3037, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0x3039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02EF
        gbc.setState(0xef5c, 0xb330, 0x1960, 0xa5cc, 0x1d5b, 0xfe40, 0x0, 0x0);
        gbc.writeMem(0xef5c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb330, gbc.sp());
        EXPECT(0xef5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef5c));
        EXPECT(0xac, gbc.readMem(0xef5d));
        // CB AC 02F0
        gbc.setState(0x69d5, 0x4601, 0x25f0, 0x62ce, 0x35ac, 0xe769, 0x1, 0x1);
        gbc.writeMem(0x69d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4601, gbc.sp());
        EXPECT(0x69d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02F1
        gbc.setState(0x5503, 0x36d9, 0x1b60, 0x79a, 0x5693, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0x5503, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x36d9, gbc.sp());
        EXPECT(0x5505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02F2
        gbc.setState(0x997e, 0xf381, 0x4f80, 0xc28a, 0x8cb, 0x2903, 0x1, 0x1);
        gbc.writeMem(0x997e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf381, gbc.sp());
        EXPECT(0x9980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x997e));
        EXPECT(0xac, gbc.readMem(0x997f));
        // CB AC 02F3
        gbc.setState(0x60f3, 0xc9e6, 0x88d0, 0x873a, 0x84e, 0x488, 0x0, 0x0);
        gbc.writeMem(0x60f3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc9e6, gbc.sp());
        EXPECT(0x60f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02F4
        gbc.setState(0x3409, 0x868a, 0xe4b0, 0xf440, 0x9080, 0x57a, 0x0, 0x0);
        gbc.writeMem(0x3409, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x868a, gbc.sp());
        EXPECT(0x340b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02F5
        gbc.setState(0xef7d, 0x9776, 0x57b0, 0x701b, 0xd4d5, 0x8ead, 0x1, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9776, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7d));
        EXPECT(0xac, gbc.readMem(0xef7e));
        // CB AC 02F6
        gbc.setState(0x3125, 0xda4a, 0xeda0, 0xbafe, 0x3004, 0x5c59, 0x1, 0x0);
        gbc.writeMem(0x3125, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0x3127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02F7
        gbc.setState(0x88ac, 0x4fa0, 0x9c0, 0xd3bb, 0x4c45, 0xde32, 0x1, 0x0);
        gbc.writeMem(0x88ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0x88ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ac));
        EXPECT(0xac, gbc.readMem(0x88ad));
        // CB AC 02F8
        gbc.setState(0xa31, 0xb285, 0x9a40, 0x2ca7, 0x544b, 0xc9c6, 0x1, 0x0);
        gbc.writeMem(0xa31, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb285, gbc.sp());
        EXPECT(0xa33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02F9
        gbc.setState(0x37f9, 0xf161, 0xa100, 0x5740, 0x11fc, 0x2462, 0x0, 0x1);
        gbc.writeMem(0x37f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02FA
        gbc.setState(0x1be8, 0x6c07, 0x1f80, 0x26b0, 0x4cb7, 0xb0a1, 0x0, 0x1);
        gbc.writeMem(0x1be8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6c07, gbc.sp());
        EXPECT(0x1bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 02FB
        gbc.setState(0x1d36, 0x770e, 0xa4d0, 0x2e91, 0x663a, 0xe1e9, 0x0, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x770e, gbc.sp());
        EXPECT(0x1d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02FC
        gbc.setState(0x41d6, 0xdc66, 0x7930, 0xa1b5, 0x6622, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0x41d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xdc66, gbc.sp());
        EXPECT(0x41d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 02FD
        gbc.setState(0x89b4, 0x164f, 0x4fe0, 0x7841, 0x1d42, 0x7479, 0x0, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x164f, gbc.sp());
        EXPECT(0x89b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b4));
        EXPECT(0xac, gbc.readMem(0x89b5));
        // CB AC 02FE
        gbc.setState(0xa752, 0x89a1, 0xb80, 0x81eb, 0x4853, 0x73d4, 0x0, 0x0);
        gbc.writeMem(0xa752, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x89a1, gbc.sp());
        EXPECT(0xa754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa752));
        EXPECT(0xac, gbc.readMem(0xa753));
        // CB AC 02FF
        gbc.setState(0x51d8, 0xb190, 0xfe60, 0xb105, 0x4ee5, 0x6d91, 0x0, 0x0);
        gbc.writeMem(0x51d8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0x51da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0300
        gbc.setState(0x43c5, 0x1c2a, 0x3210, 0x8703, 0xffa7, 0xd3ad, 0x1, 0x1);
        gbc.writeMem(0x43c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0x43c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0302
        gbc.setState(0x7f97, 0xd8bb, 0x9c90, 0xbfee, 0xe74f, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd8bb, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0303
        gbc.setState(0x234e, 0x5be5, 0x7d50, 0xf521, 0x703a, 0xb4dd, 0x0, 0x1);
        gbc.writeMem(0x234e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5be5, gbc.sp());
        EXPECT(0x2350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0304
        gbc.setState(0x513e, 0x7f5f, 0x1070, 0x7024, 0xdfb2, 0xdb9e, 0x0, 0x0);
        gbc.writeMem(0x513e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7f5f, gbc.sp());
        EXPECT(0x5140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0305
        gbc.setState(0xd1e, 0x2bae, 0x7f00, 0xffb0, 0xa4b7, 0xff9e, 0x0, 0x0);
        gbc.writeMem(0xd1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0xd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0307
        gbc.setState(0x490b, 0x4e1c, 0xe840, 0x28e8, 0x16bf, 0xae4e, 0x1, 0x1);
        gbc.writeMem(0x490b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4e1c, gbc.sp());
        EXPECT(0x490d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0308
        gbc.setState(0xcd79, 0xe732, 0x6c40, 0x1cc5, 0x2f55, 0xd316, 0x0, 0x0);
        gbc.writeMem(0xcd79, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe732, gbc.sp());
        EXPECT(0xcd7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd79));
        EXPECT(0xac, gbc.readMem(0xcd7a));
        // CB AC 030A
        gbc.setState(0xc4d6, 0x9ad1, 0x3930, 0xf650, 0xff01, 0x2801, 0x1, 0x1);
        gbc.writeMem(0xc4d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9ad1, gbc.sp());
        EXPECT(0xc4d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d6));
        EXPECT(0xac, gbc.readMem(0xc4d7));
        // CB AC 030B
        gbc.setState(0x6291, 0x64d5, 0xfd30, 0x12f1, 0x67b3, 0xaccd, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x64d5, gbc.sp());
        EXPECT(0x6293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 030C
        gbc.setState(0xcdd3, 0x54f1, 0x9c70, 0xe6f6, 0xccec, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0xcdd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x54f1, gbc.sp());
        EXPECT(0xcdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd3));
        EXPECT(0xac, gbc.readMem(0xcdd4));
        // CB AC 030D
        gbc.setState(0x5f9d, 0x40ed, 0xa80, 0xdf50, 0x18a5, 0x1c9c, 0x1, 0x0);
        gbc.writeMem(0x5f9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x40ed, gbc.sp());
        EXPECT(0x5f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 030E
        gbc.setState(0xe029, 0x2bfc, 0x30c0, 0xdd56, 0xd990, 0x4176, 0x0, 0x1);
        gbc.writeMem(0xe029, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2bfc, gbc.sp());
        EXPECT(0xe02b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe029));
        EXPECT(0xac, gbc.readMem(0xe02a));
        // CB AC 030F
        gbc.setState(0x177f, 0x74cf, 0xce90, 0x7b61, 0x8bca, 0x351a, 0x0, 0x1);
        gbc.writeMem(0x177f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0x1781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0310
        gbc.setState(0xaf29, 0xc48b, 0x1960, 0x92c4, 0x1508, 0x3c73, 0x1, 0x1);
        gbc.writeMem(0xaf29, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc48b, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf29));
        EXPECT(0xac, gbc.readMem(0xaf2a));
        // CB AC 0311
        gbc.setState(0x7181, 0x1907, 0x8430, 0x317d, 0x2d1e, 0x5c7b, 0x1, 0x1);
        gbc.writeMem(0x7181, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1907, gbc.sp());
        EXPECT(0x7183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0312
        gbc.setState(0x2a7d, 0x3e75, 0xfea0, 0x175d, 0xb6a5, 0xb4e4, 0x0, 0x0);
        gbc.writeMem(0x2a7d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0x2a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0313
        gbc.setState(0xd59a, 0xba3b, 0x5e70, 0x5f3a, 0xa36e, 0xf62f, 0x1, 0x1);
        gbc.writeMem(0xd59a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xba3b, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59a));
        EXPECT(0xac, gbc.readMem(0xd59b));
        // CB AC 0314
        gbc.setState(0xba3d, 0x18b6, 0xa3e0, 0x8b48, 0x3f0a, 0x9e12, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0xac, gbc.readMem(0xba3e));
        // CB AC 0316
        gbc.setState(0x82fb, 0x76a3, 0x5f20, 0x5ab9, 0x5487, 0x1a58, 0x1, 0x1);
        gbc.writeMem(0x82fb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x76a3, gbc.sp());
        EXPECT(0x82fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fb));
        EXPECT(0xac, gbc.readMem(0x82fc));
        // CB AC 0317
        gbc.setState(0x7b36, 0x9469, 0xdce0, 0xa5d9, 0xc829, 0x1161, 0x0, 0x1);
        gbc.writeMem(0x7b36, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0x7b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0318
        gbc.setState(0x4f1f, 0x9be6, 0x9e50, 0x404e, 0x2019, 0xe6d7, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 031A
        gbc.setState(0x7629, 0xa823, 0x6c60, 0xa2d6, 0xa69, 0x605e, 0x0, 0x1);
        gbc.writeMem(0x7629, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 031B
        gbc.setState(0xb672, 0x21e8, 0xbaf0, 0xeae1, 0xe4f3, 0x9680, 0x0, 0x0);
        gbc.writeMem(0xb672, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x21e8, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb672));
        EXPECT(0xac, gbc.readMem(0xb673));
        // CB AC 031C
        gbc.setState(0x4945, 0xdbf, 0xcd30, 0x8eba, 0xf19f, 0x6814, 0x1, 0x1);
        gbc.writeMem(0x4945, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdbf, gbc.sp());
        EXPECT(0x4947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 031D
        gbc.setState(0x5c9e, 0xd1a5, 0x76d0, 0x437a, 0x5bea, 0xeaaa, 0x1, 0x1);
        gbc.writeMem(0x5c9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd1a5, gbc.sp());
        EXPECT(0x5ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 031E
        gbc.setState(0x6f7f, 0x9876, 0x61a0, 0x686, 0xcdb3, 0x451e, 0x0, 0x1);
        gbc.writeMem(0x6f7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9876, gbc.sp());
        EXPECT(0x6f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 031F
        gbc.setState(0xcfd7, 0xd4f4, 0x18b0, 0xafeb, 0x789, 0xdded, 0x0, 0x0);
        gbc.writeMem(0xcfd7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd4f4, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd7));
        EXPECT(0xac, gbc.readMem(0xcfd8));
        // CB AC 0320
        gbc.setState(0xef22, 0x593c, 0xfdd0, 0x20b9, 0x5f42, 0xba76, 0x0, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x593c, gbc.sp());
        EXPECT(0xef24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef22));
        EXPECT(0xac, gbc.readMem(0xef23));
        // CB AC 0321
        gbc.setState(0xe386, 0xd52c, 0x1910, 0xafbe, 0x71e0, 0xfcb4, 0x0, 0x1);
        gbc.writeMem(0xe386, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd52c, gbc.sp());
        EXPECT(0xe388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe386));
        EXPECT(0xac, gbc.readMem(0xe387));
        // CB AC 0322
        gbc.setState(0x13b, 0xadbb, 0x3270, 0x512e, 0xa90b, 0x1e28, 0x1, 0x1);
        gbc.writeMem(0x13b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xadbb, gbc.sp());
        EXPECT(0x13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0323
        gbc.setState(0x1d6, 0x4072, 0x7c20, 0x7ca2, 0xd229, 0x9898, 0x0, 0x1);
        gbc.writeMem(0x1d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0x1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0324
        gbc.setState(0x9223, 0xa500, 0xf6a0, 0xc96f, 0xa1ab, 0xb98e, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa500, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9223));
        EXPECT(0xac, gbc.readMem(0x9224));
        // CB AC 0325
        gbc.setState(0xd9f, 0x4a1f, 0xd000, 0xcf14, 0x4da6, 0xa8ec, 0x0, 0x1);
        gbc.writeMem(0xd9f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0xda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0326
        gbc.setState(0xb50f, 0xec93, 0x6a10, 0x35d1, 0x8db, 0x7a11, 0x1, 0x0);
        gbc.writeMem(0xb50f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xec93, gbc.sp());
        EXPECT(0xb511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50f));
        EXPECT(0xac, gbc.readMem(0xb510));
        // CB AC 0327
        gbc.setState(0x56f4, 0x1553, 0x8720, 0x89d8, 0x6ad3, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0x56f4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1553, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0328
        gbc.setState(0x8fb3, 0xa4ca, 0x110, 0x44bb, 0x6e8, 0x4139, 0x0, 0x0);
        gbc.writeMem(0x8fb3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa4ca, gbc.sp());
        EXPECT(0x8fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb3));
        EXPECT(0xac, gbc.readMem(0x8fb4));
        // CB AC 0329
        gbc.setState(0xbb1f, 0x2ea4, 0x5ff0, 0x8a41, 0x69c6, 0xab0c, 0x1, 0x0);
        gbc.writeMem(0xbb1f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2ea4, gbc.sp());
        EXPECT(0xbb21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1f));
        EXPECT(0xac, gbc.readMem(0xbb20));
        // CB AC 032A
        gbc.setState(0x1374, 0xaff2, 0xa2f0, 0x2cf6, 0x51df, 0xcc3, 0x1, 0x1);
        gbc.writeMem(0x1374, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaff2, gbc.sp());
        EXPECT(0x1376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 032B
        gbc.setState(0x164f, 0xdd, 0xf690, 0xbd5e, 0x9db, 0x2905, 0x1, 0x0);
        gbc.writeMem(0x164f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdd, gbc.sp());
        EXPECT(0x1651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 032C
        gbc.setState(0x3050, 0x9c4e, 0xa4d0, 0x147d, 0xeb3b, 0x3907, 0x1, 0x0);
        gbc.writeMem(0x3050, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9c4e, gbc.sp());
        EXPECT(0x3052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 032D
        gbc.setState(0xb8b, 0xf21c, 0x8170, 0x9360, 0x1cd6, 0x605c, 0x1, 0x1);
        gbc.writeMem(0xb8b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf21c, gbc.sp());
        EXPECT(0xb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 032E
        gbc.setState(0x8d6, 0x15d4, 0xe3d0, 0x2e62, 0x2f77, 0x7570, 0x0, 0x0);
        gbc.writeMem(0x8d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0x8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 032F
        gbc.setState(0x17c7, 0xb430, 0xd3a0, 0xc954, 0x5565, 0xf7f6, 0x0, 0x0);
        gbc.writeMem(0x17c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb430, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0330
        gbc.setState(0x10f8, 0x316a, 0xeb40, 0x16cf, 0xe31a, 0x162, 0x1, 0x1);
        gbc.writeMem(0x10f8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x316a, gbc.sp());
        EXPECT(0x10fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0331
        gbc.setState(0xae8b, 0x8f59, 0xc8c0, 0x9ea0, 0xe551, 0x2b65, 0x0, 0x1);
        gbc.writeMem(0xae8b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8f59, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae8b));
        EXPECT(0xac, gbc.readMem(0xae8c));
        // CB AC 0332
        gbc.setState(0xcdec, 0x1eb4, 0x17e0, 0x7332, 0x102c, 0x44e4, 0x0, 0x0);
        gbc.writeMem(0xcdec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0xcdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdec));
        EXPECT(0xac, gbc.readMem(0xcded));
        // CB AC 0333
        gbc.setState(0x6427, 0x82be, 0xaf70, 0x577b, 0x3496, 0x6867, 0x1, 0x0);
        gbc.writeMem(0x6427, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0x6429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0334
        gbc.setState(0x8229, 0x8f10, 0x4300, 0x784a, 0xeded, 0x1d71, 0x1, 0x0);
        gbc.writeMem(0x8229, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8f10, gbc.sp());
        EXPECT(0x822b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8229));
        EXPECT(0xac, gbc.readMem(0x822a));
        // CB AC 0335
        gbc.setState(0xde5c, 0x4af6, 0x3320, 0xc765, 0xcdcb, 0xcd21, 0x0, 0x1);
        gbc.writeMem(0xde5c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4af6, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde5c));
        EXPECT(0xac, gbc.readMem(0xde5d));
        // CB AC 0336
        gbc.setState(0xd462, 0x1586, 0x8e50, 0x10fa, 0xcb2c, 0x5122, 0x1, 0x1);
        gbc.writeMem(0xd462, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1586, gbc.sp());
        EXPECT(0xd464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd462));
        EXPECT(0xac, gbc.readMem(0xd463));
        // CB AC 0337
        gbc.setState(0xa28a, 0xdca5, 0x8340, 0x5eb7, 0x39cc, 0x253c, 0x1, 0x0);
        gbc.writeMem(0xa28a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdca5, gbc.sp());
        EXPECT(0xa28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28a));
        EXPECT(0xac, gbc.readMem(0xa28b));
        // CB AC 0338
        gbc.setState(0x1553, 0xe2e7, 0xdbc0, 0x29ac, 0xc800, 0x625a, 0x0, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe2e7, gbc.sp());
        EXPECT(0x1555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0339
        gbc.setState(0x57be, 0x233c, 0xb120, 0x5ae4, 0x103f, 0x3a9e, 0x1, 0x1);
        gbc.writeMem(0x57be, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x233c, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 033B
        gbc.setState(0xe271, 0x126b, 0x5b90, 0x2ca5, 0x5b35, 0x93fd, 0x1, 0x0);
        gbc.writeMem(0xe271, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x126b, gbc.sp());
        EXPECT(0xe273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe271));
        EXPECT(0xac, gbc.readMem(0xe272));
        // CB AC 033C
        gbc.setState(0x2823, 0xc9f, 0x8350, 0x9aa2, 0x8a34, 0x6a18, 0x1, 0x0);
        gbc.writeMem(0x2823, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc9f, gbc.sp());
        EXPECT(0x2825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 033D
        gbc.setState(0xd4f9, 0x439f, 0x3990, 0xe8fc, 0x3e22, 0xc38, 0x0, 0x0);
        gbc.writeMem(0xd4f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x439f, gbc.sp());
        EXPECT(0xd4fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f9));
        EXPECT(0xac, gbc.readMem(0xd4fa));
        // CB AC 033F
        gbc.setState(0xcc8c, 0xb116, 0x5740, 0xddc, 0xc023, 0x145f, 0x1, 0x0);
        gbc.writeMem(0xcc8c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb116, gbc.sp());
        EXPECT(0xcc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8c));
        EXPECT(0xac, gbc.readMem(0xcc8d));
        // CB AC 0340
        gbc.setState(0xee95, 0xb98e, 0xb5d0, 0xc2b4, 0x2a4c, 0x1f5c, 0x1, 0x1);
        gbc.writeMem(0xee95, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb98e, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee95));
        EXPECT(0xac, gbc.readMem(0xee96));
        // CB AC 0341
        gbc.setState(0x8271, 0x4f61, 0x1db0, 0x3733, 0xf549, 0x7d9a, 0x1, 0x1);
        gbc.writeMem(0x8271, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4f61, gbc.sp());
        EXPECT(0x8273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8271));
        EXPECT(0xac, gbc.readMem(0x8272));
        // CB AC 0342
        gbc.setState(0x66e0, 0xd117, 0xf610, 0x736a, 0x2756, 0xa9e7, 0x0, 0x1);
        gbc.writeMem(0x66e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0x66e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0343
        gbc.setState(0x2471, 0x13c8, 0xf9e0, 0x74da, 0x7ec3, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0x2471, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0x2473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0344
        gbc.setState(0x2ae3, 0xa430, 0x5270, 0xb154, 0xc132, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0x2ae3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa430, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0345
        gbc.setState(0xd37c, 0x252c, 0x1d30, 0x10bc, 0x64d2, 0x2074, 0x1, 0x0);
        gbc.writeMem(0xd37c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x252c, gbc.sp());
        EXPECT(0xd37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37c));
        EXPECT(0xac, gbc.readMem(0xd37d));
        // CB AC 0346
        gbc.setState(0x1bca, 0xf2dc, 0xb2c0, 0xd794, 0x8adb, 0x378d, 0x1, 0x0);
        gbc.writeMem(0x1bca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf2dc, gbc.sp());
        EXPECT(0x1bcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0347
        gbc.setState(0x988, 0x37bc, 0xef90, 0x8374, 0xc2e8, 0x89e7, 0x0, 0x1);
        gbc.writeMem(0x988, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x37bc, gbc.sp());
        EXPECT(0x98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0348
        gbc.setState(0x98a7, 0xc313, 0xbea0, 0x5f22, 0xa743, 0x34c3, 0x0, 0x0);
        gbc.writeMem(0x98a7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc313, gbc.sp());
        EXPECT(0x98a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a7));
        EXPECT(0xac, gbc.readMem(0x98a8));
        // CB AC 0349
        gbc.setState(0xb77f, 0x1e8, 0xd3d0, 0x6883, 0xd14d, 0x6fac, 0x0, 0x1);
        gbc.writeMem(0xb77f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1e8, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77f));
        EXPECT(0xac, gbc.readMem(0xb780));
        // CB AC 034A
        gbc.setState(0x2132, 0x1ea, 0x2ff0, 0xa7a6, 0x8d38, 0x4033, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1ea, gbc.sp());
        EXPECT(0x2134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 034B
        gbc.setState(0x9006, 0x3a4, 0xd2e0, 0x7250, 0x66bb, 0x5a43, 0x0, 0x0);
        gbc.writeMem(0x9006, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a4, gbc.sp());
        EXPECT(0x9008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9006));
        EXPECT(0xac, gbc.readMem(0x9007));
        // CB AC 034C
        gbc.setState(0xd5d2, 0x9fa2, 0x84f0, 0x37a3, 0x6579, 0x8343, 0x0, 0x0);
        gbc.writeMem(0xd5d2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9fa2, gbc.sp());
        EXPECT(0xd5d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d2));
        EXPECT(0xac, gbc.readMem(0xd5d3));
        // CB AC 034D
        gbc.setState(0x2a4c, 0xcf4d, 0x82e0, 0xf8e8, 0x79ab, 0x89de, 0x0, 0x0);
        gbc.writeMem(0x2a4c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcf4d, gbc.sp());
        EXPECT(0x2a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 034E
        gbc.setState(0x3d66, 0xec82, 0x6a70, 0xc766, 0xf295, 0x8dcd, 0x0, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xec82, gbc.sp());
        EXPECT(0x3d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 034F
        gbc.setState(0x356a, 0x4f98, 0x80c0, 0xd83b, 0xce1, 0x66cc, 0x1, 0x0);
        gbc.writeMem(0x356a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4f98, gbc.sp());
        EXPECT(0x356c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0350
        gbc.setState(0x60c9, 0xf1b8, 0x69f0, 0x33e0, 0x40c9, 0x4fa, 0x0, 0x1);
        gbc.writeMem(0x60c9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0351
        gbc.setState(0xb7d4, 0x9845, 0xa4e0, 0xe536, 0xaeec, 0x2abb, 0x0, 0x1);
        gbc.writeMem(0xb7d4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0xb7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d4));
        EXPECT(0xac, gbc.readMem(0xb7d5));
        // CB AC 0352
        gbc.setState(0x81b5, 0x446f, 0x3ce0, 0xcfb3, 0x1b4f, 0xc5a1, 0x0, 0x0);
        gbc.writeMem(0x81b5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x446f, gbc.sp());
        EXPECT(0x81b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b5));
        EXPECT(0xac, gbc.readMem(0x81b6));
        // CB AC 0353
        gbc.setState(0xd756, 0x600b, 0xd080, 0xdf03, 0x7af8, 0xcea3, 0x0, 0x0);
        gbc.writeMem(0xd756, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x600b, gbc.sp());
        EXPECT(0xd758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd756));
        EXPECT(0xac, gbc.readMem(0xd757));
        // CB AC 0354
        gbc.setState(0xe46c, 0x5e3b, 0xa460, 0xbb4e, 0xe76b, 0x15fa, 0x1, 0x0);
        gbc.writeMem(0xe46c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5e3b, gbc.sp());
        EXPECT(0xe46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46c));
        EXPECT(0xac, gbc.readMem(0xe46d));
        // CB AC 0355
        gbc.setState(0xd50b, 0x6000, 0xb030, 0xfd66, 0xf33a, 0x299b, 0x0, 0x0);
        gbc.writeMem(0xd50b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6000, gbc.sp());
        EXPECT(0xd50d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50b));
        EXPECT(0xac, gbc.readMem(0xd50c));
        // CB AC 0356
        gbc.setState(0x5043, 0x7fbb, 0x8fb0, 0x3137, 0xe377, 0xc139, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7fbb, gbc.sp());
        EXPECT(0x5045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0357
        gbc.setState(0x2c66, 0x81b5, 0x8700, 0xd8ba, 0x90b1, 0x8a36, 0x1, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x81b5, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0358
        gbc.setState(0x5c28, 0x7b26, 0x2640, 0x5845, 0x7ec6, 0xcf6b, 0x1, 0x0);
        gbc.writeMem(0x5c28, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7b26, gbc.sp());
        EXPECT(0x5c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0359
        gbc.setState(0xad80, 0xb163, 0x8f00, 0x36b7, 0x3112, 0x63b1, 0x0, 0x0);
        gbc.writeMem(0xad80, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb163, gbc.sp());
        EXPECT(0xad82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad80));
        EXPECT(0xac, gbc.readMem(0xad81));
        // CB AC 035A
        gbc.setState(0xa2c4, 0x6812, 0xf140, 0xa774, 0x52e1, 0x1443, 0x1, 0x1);
        gbc.writeMem(0xa2c4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6812, gbc.sp());
        EXPECT(0xa2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c4));
        EXPECT(0xac, gbc.readMem(0xa2c5));
        // CB AC 035B
        gbc.setState(0x8ee7, 0x489e, 0x3320, 0x362, 0x2555, 0x34f1, 0x1, 0x1);
        gbc.writeMem(0x8ee7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x489e, gbc.sp());
        EXPECT(0x8ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee7));
        EXPECT(0xac, gbc.readMem(0x8ee8));
        // CB AC 035C
        gbc.setState(0x1ec8, 0xda50, 0x7fb0, 0x664a, 0x8ae7, 0xa25c, 0x1, 0x0);
        gbc.writeMem(0x1ec8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xda50, gbc.sp());
        EXPECT(0x1eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 035D
        gbc.setState(0xe904, 0x6181, 0x2870, 0x2a51, 0xb74f, 0x7ecb, 0x0, 0x0);
        gbc.writeMem(0xe904, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6181, gbc.sp());
        EXPECT(0xe906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe904));
        EXPECT(0xac, gbc.readMem(0xe905));
        // CB AC 035E
        gbc.setState(0x1535, 0xfc55, 0xc830, 0xc2bd, 0xa4c1, 0xc26d, 0x1, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfc55, gbc.sp());
        EXPECT(0x1537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 035F
        gbc.setState(0x4f9d, 0x498b, 0xa820, 0xb67f, 0x8961, 0xf5a4, 0x0, 0x1);
        gbc.writeMem(0x4f9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x498b, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0360
        gbc.setState(0x2db3, 0x9caa, 0x8040, 0xd5b1, 0x810f, 0xb849, 0x1, 0x1);
        gbc.writeMem(0x2db3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9caa, gbc.sp());
        EXPECT(0x2db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0361
        gbc.setState(0x8076, 0xa7f8, 0xee20, 0xec9c, 0xbd89, 0x730d, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa7f8, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xac, gbc.readMem(0x8077));
        // CB AC 0362
        gbc.setState(0xd638, 0x1879, 0x1010, 0xbfd8, 0xe272, 0xcbd4, 0x0, 0x0);
        gbc.writeMem(0xd638, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1879, gbc.sp());
        EXPECT(0xd63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd638));
        EXPECT(0xac, gbc.readMem(0xd639));
        // CB AC 0363
        gbc.setState(0x5ead, 0x7cb6, 0xedf0, 0xe940, 0x96f3, 0x9a53, 0x1, 0x1);
        gbc.writeMem(0x5ead, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7cb6, gbc.sp());
        EXPECT(0x5eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0364
        gbc.setState(0x7198, 0x29bb, 0x1920, 0xa8be, 0x231d, 0x3dca, 0x1, 0x1);
        gbc.writeMem(0x7198, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x29bb, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0365
        gbc.setState(0xbd09, 0x1451, 0x8650, 0x67cc, 0x6623, 0x33b6, 0x0, 0x1);
        gbc.writeMem(0xbd09, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1451, gbc.sp());
        EXPECT(0xbd0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd09));
        EXPECT(0xac, gbc.readMem(0xbd0a));
        // CB AC 0366
        gbc.setState(0xc0f2, 0x29ad, 0xbee0, 0xc5fb, 0xaa92, 0x3d5e, 0x1, 0x1);
        gbc.writeMem(0xc0f2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0xc0f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f2));
        EXPECT(0xac, gbc.readMem(0xc0f3));
        // CB AC 0367
        gbc.setState(0x387d, 0xf231, 0x2570, 0x40f1, 0x5ec0, 0x6f61, 0x0, 0x1);
        gbc.writeMem(0x387d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf231, gbc.sp());
        EXPECT(0x387f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0368
        gbc.setState(0x9cc1, 0xb764, 0x4400, 0x384a, 0x7579, 0xa247, 0x0, 0x1);
        gbc.writeMem(0x9cc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb764, gbc.sp());
        EXPECT(0x9cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cc1));
        EXPECT(0xac, gbc.readMem(0x9cc2));
        // CB AC 036A
        gbc.setState(0xa6fa, 0xda78, 0xc80, 0x512c, 0x101b, 0xab20, 0x1, 0x1);
        gbc.writeMem(0xa6fa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xda78, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fa));
        EXPECT(0xac, gbc.readMem(0xa6fb));
        // CB AC 036B
        gbc.setState(0xcb2d, 0xf531, 0x55e0, 0xe0be, 0x3950, 0x3b0c, 0x0, 0x1);
        gbc.writeMem(0xcb2d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf531, gbc.sp());
        EXPECT(0xcb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2d));
        EXPECT(0xac, gbc.readMem(0xcb2e));
        // CB AC 036C
        gbc.setState(0x7285, 0x20fa, 0x2290, 0x35a3, 0xd0e8, 0x9a6, 0x1, 0x0);
        gbc.writeMem(0x7285, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x20fa, gbc.sp());
        EXPECT(0x7287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 036D
        gbc.setState(0x9626, 0x2d38, 0x6410, 0xf4b4, 0xac44, 0xa8ce, 0x0, 0x0);
        gbc.writeMem(0x9626, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0x9628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9626));
        EXPECT(0xac, gbc.readMem(0x9627));
        // CB AC 036E
        gbc.setState(0xdf19, 0x997e, 0x8cf0, 0x87cd, 0xdf34, 0xa52a, 0x0, 0x0);
        gbc.writeMem(0xdf19, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x997e, gbc.sp());
        EXPECT(0xdf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf19));
        EXPECT(0xac, gbc.readMem(0xdf1a));
        // CB AC 036F
        gbc.setState(0xeee2, 0x73f9, 0xc980, 0x86f8, 0xd7b3, 0xe9a8, 0x0, 0x1);
        gbc.writeMem(0xeee2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x73f9, gbc.sp());
        EXPECT(0xeee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee2));
        EXPECT(0xac, gbc.readMem(0xeee3));
        // CB AC 0370
        gbc.setState(0x9c7e, 0xd458, 0xfed0, 0xcc2, 0x8753, 0xbeaf, 0x0, 0x1);
        gbc.writeMem(0x9c7e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd458, gbc.sp());
        EXPECT(0x9c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7e));
        EXPECT(0xac, gbc.readMem(0x9c7f));
        // CB AC 0371
        gbc.setState(0xb644, 0xfb0f, 0x32a0, 0x3e51, 0x4ee3, 0xb97e, 0x1, 0x1);
        gbc.writeMem(0xb644, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfb0f, gbc.sp());
        EXPECT(0xb646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb644));
        EXPECT(0xac, gbc.readMem(0xb645));
        // CB AC 0372
        gbc.setState(0x3ff4, 0xc7bf, 0x5040, 0x9b6c, 0x21d7, 0x10fa, 0x0, 0x0);
        gbc.writeMem(0x3ff4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc7bf, gbc.sp());
        EXPECT(0x3ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0373
        gbc.setState(0x2a47, 0xd7e2, 0xf3c0, 0xf5e5, 0xbfc4, 0x8bec, 0x0, 0x0);
        gbc.writeMem(0x2a47, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0x2a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0374
        gbc.setState(0x312a, 0x4503, 0xe550, 0xcbc9, 0x85e3, 0x4f2d, 0x0, 0x0);
        gbc.writeMem(0x312a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4503, gbc.sp());
        EXPECT(0x312c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0375
        gbc.setState(0xb5ff, 0x2215, 0x9030, 0x1ab, 0x2395, 0xa3e4, 0x1, 0x1);
        gbc.writeMem(0xb5ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2215, gbc.sp());
        EXPECT(0xb601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ff));
        EXPECT(0xac, gbc.readMem(0xb600));
        // CB AC 0376
        gbc.setState(0x281f, 0xc989, 0x31f0, 0x4173, 0x4ffe, 0x30ef, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc989, gbc.sp());
        EXPECT(0x2821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0377
        gbc.setState(0xdce3, 0xa791, 0xe2e0, 0x1609, 0x5dc6, 0x6a18, 0x1, 0x0);
        gbc.writeMem(0xdce3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa791, gbc.sp());
        EXPECT(0xdce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce3));
        EXPECT(0xac, gbc.readMem(0xdce4));
        // CB AC 0378
        gbc.setState(0xd43d, 0x7e73, 0x4bd0, 0x4867, 0x1f1, 0x1f02, 0x1, 0x0);
        gbc.writeMem(0xd43d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7e73, gbc.sp());
        EXPECT(0xd43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43d));
        EXPECT(0xac, gbc.readMem(0xd43e));
        // CB AC 0379
        gbc.setState(0x7832, 0x5d59, 0xa920, 0xdbc3, 0xd117, 0x9a6b, 0x1, 0x0);
        gbc.writeMem(0x7832, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5d59, gbc.sp());
        EXPECT(0x7834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 037A
        gbc.setState(0xda9e, 0xf670, 0x4430, 0xa7c2, 0x7f9c, 0x222e, 0x0, 0x1);
        gbc.writeMem(0xda9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf670, gbc.sp());
        EXPECT(0xdaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9e));
        EXPECT(0xac, gbc.readMem(0xda9f));
        // CB AC 037B
        gbc.setState(0x6bd4, 0x31b4, 0x1e0, 0x9b77, 0xe28a, 0x2453, 0x1, 0x0);
        gbc.writeMem(0x6bd4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x31b4, gbc.sp());
        EXPECT(0x6bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 037C
        gbc.setState(0x23f7, 0xe054, 0xc8c0, 0x3ebe, 0x9832, 0xbda0, 0x0, 0x0);
        gbc.writeMem(0x23f7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe054, gbc.sp());
        EXPECT(0x23f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 037D
        gbc.setState(0x1433, 0x5159, 0x28d0, 0x4e9c, 0xed65, 0xc7be, 0x0, 0x0);
        gbc.writeMem(0x1433, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0x1435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 037E
        gbc.setState(0x106e, 0x679, 0x4140, 0x14b3, 0xe6c, 0xe0cd, 0x1, 0x0);
        gbc.writeMem(0x106e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 037F
        gbc.setState(0x45ad, 0x96bd, 0x8170, 0xd70c, 0xa359, 0xd125, 0x0, 0x0);
        gbc.writeMem(0x45ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0x45af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0380
        gbc.setState(0x6e5c, 0x3c24, 0x7860, 0xc3e6, 0xd0ff, 0x8957, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3c24, gbc.sp());
        EXPECT(0x6e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0382
        gbc.setState(0xc7de, 0xe596, 0xd960, 0xa98b, 0x7f90, 0xb3e5, 0x1, 0x0);
        gbc.writeMem(0xc7de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe596, gbc.sp());
        EXPECT(0xc7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7de));
        EXPECT(0xac, gbc.readMem(0xc7df));
        // CB AC 0383
        gbc.setState(0xc9c, 0x4ee0, 0x6c70, 0xfaa8, 0xc679, 0x2205, 0x0, 0x1);
        gbc.writeMem(0xc9c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4ee0, gbc.sp());
        EXPECT(0xc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0384
        gbc.setState(0xe86d, 0x33e0, 0x6fa0, 0x99c, 0x98bc, 0x7d10, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x33e0, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86d));
        EXPECT(0xac, gbc.readMem(0xe86e));
        // CB AC 0385
        gbc.setState(0xb1a5, 0x4269, 0xbe90, 0xe0b0, 0x7459, 0x90a1, 0x1, 0x1);
        gbc.writeMem(0xb1a5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4269, gbc.sp());
        EXPECT(0xb1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a5));
        EXPECT(0xac, gbc.readMem(0xb1a6));
        // CB AC 0387
        gbc.setState(0x49f9, 0x1362, 0xd5b0, 0x7107, 0x8463, 0xbc94, 0x1, 0x1);
        gbc.writeMem(0x49f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1362, gbc.sp());
        EXPECT(0x49fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0388
        gbc.setState(0x9baa, 0x480f, 0x1980, 0x59b4, 0xbdfd, 0x9029, 0x1, 0x0);
        gbc.writeMem(0x9baa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x480f, gbc.sp());
        EXPECT(0x9bac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9baa));
        EXPECT(0xac, gbc.readMem(0x9bab));
        // CB AC 0389
        gbc.setState(0x939c, 0xf893, 0x98c0, 0xd6a1, 0xfa52, 0x698e, 0x0, 0x0);
        gbc.writeMem(0x939c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x939e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939c));
        EXPECT(0xac, gbc.readMem(0x939d));
        // CB AC 038A
        gbc.setState(0x5164, 0x291b, 0x6ca0, 0xa548, 0x3f31, 0x8454, 0x1, 0x0);
        gbc.writeMem(0x5164, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x291b, gbc.sp());
        EXPECT(0x5166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 038B
        gbc.setState(0x5c94, 0x3eb0, 0x4c20, 0xce84, 0x1430, 0xfe20, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3eb0, gbc.sp());
        EXPECT(0x5c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 038C
        gbc.setState(0xb07a, 0xd071, 0x6730, 0xab2e, 0x3ed7, 0xfa9d, 0x1, 0x1);
        gbc.writeMem(0xb07a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd071, gbc.sp());
        EXPECT(0xb07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07a));
        EXPECT(0xac, gbc.readMem(0xb07b));
        // CB AC 038D
        gbc.setState(0x8243, 0xf28c, 0xc060, 0xa299, 0x8b41, 0xd182, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf28c, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8243));
        EXPECT(0xac, gbc.readMem(0x8244));
        // CB AC 038E
        gbc.setState(0x7775, 0xc9c2, 0xc920, 0xb4e7, 0x5eb5, 0xb9bd, 0x1, 0x1);
        gbc.writeMem(0x7775, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc9c2, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 038F
        gbc.setState(0xbf01, 0xe952, 0x9e60, 0x16b1, 0x52fc, 0x382b, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe952, gbc.sp());
        EXPECT(0xbf03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf01));
        EXPECT(0xac, gbc.readMem(0xbf02));
        // CB AC 0390
        gbc.setState(0x45eb, 0x81b6, 0x2b50, 0xce82, 0x116e, 0xc25c, 0x1, 0x0);
        gbc.writeMem(0x45eb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x81b6, gbc.sp());
        EXPECT(0x45ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0391
        gbc.setState(0x1d5, 0xd8d8, 0x6130, 0x20b0, 0xaf0f, 0x219d, 0x1, 0x1);
        gbc.writeMem(0x1d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd8d8, gbc.sp());
        EXPECT(0x1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 0392
        gbc.setState(0x8e14, 0x613e, 0xe4e0, 0x5a1b, 0x7f3, 0xab19, 0x1, 0x0);
        gbc.writeMem(0x8e14, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x613e, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e14));
        EXPECT(0xac, gbc.readMem(0x8e15));
        // CB AC 0393
        gbc.setState(0xd39c, 0xebe, 0xe430, 0x3ae2, 0x17fa, 0x9a, 0x1, 0x1);
        gbc.writeMem(0xd39c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xebe, gbc.sp());
        EXPECT(0xd39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39c));
        EXPECT(0xac, gbc.readMem(0xd39d));
        // CB AC 0394
        gbc.setState(0x66eb, 0xead9, 0xc120, 0x15c1, 0x20bb, 0xeb80, 0x1, 0x0);
        gbc.writeMem(0x66eb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xead9, gbc.sp());
        EXPECT(0x66ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0395
        gbc.setState(0x3b77, 0xae81, 0xeb40, 0x8aab, 0xb7e4, 0xa51e, 0x1, 0x0);
        gbc.writeMem(0x3b77, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xae81, gbc.sp());
        EXPECT(0x3b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0396
        gbc.setState(0xe541, 0x6452, 0xed70, 0xa7db, 0xa81a, 0x64a6, 0x0, 0x0);
        gbc.writeMem(0xe541, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6452, gbc.sp());
        EXPECT(0xe543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe541));
        EXPECT(0xac, gbc.readMem(0xe542));
        // CB AC 0397
        gbc.setState(0xc341, 0x436b, 0x2a90, 0x7d6, 0x1b9, 0xe628, 0x0, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x436b, gbc.sp());
        EXPECT(0xc343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc341));
        EXPECT(0xac, gbc.readMem(0xc342));
        // CB AC 0398
        gbc.setState(0x4fa7, 0xfe8c, 0x7a20, 0x7211, 0xd8e9, 0xb236, 0x1, 0x1);
        gbc.writeMem(0x4fa7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfe8c, gbc.sp());
        EXPECT(0x4fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 0399
        gbc.setState(0xde79, 0xd924, 0xc9e0, 0xec85, 0xef35, 0x964f, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd924, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde79));
        EXPECT(0xac, gbc.readMem(0xde7a));
        // CB AC 039A
        gbc.setState(0x5b4c, 0xf8f0, 0xfa30, 0xa028, 0x8eb8, 0x2c4d, 0x0, 0x0);
        gbc.writeMem(0x5b4c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf8f0, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 039B
        gbc.setState(0x6c9, 0xf405, 0xf530, 0xe4c8, 0x2d99, 0x520, 0x1, 0x0);
        gbc.writeMem(0x6c9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf405, gbc.sp());
        EXPECT(0x6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 039C
        gbc.setState(0xd849, 0xccd2, 0xba10, 0x8165, 0x76ea, 0x14e3, 0x0, 0x1);
        gbc.writeMem(0xd849, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xccd2, gbc.sp());
        EXPECT(0xd84b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd849));
        EXPECT(0xac, gbc.readMem(0xd84a));
        // CB AC 039D
        gbc.setState(0xda60, 0x9002, 0x5350, 0x313e, 0xea7e, 0x854f, 0x1, 0x0);
        gbc.writeMem(0xda60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9002, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0xac, gbc.readMem(0xda61));
        // CB AC 039E
        gbc.setState(0x7b62, 0xaf35, 0xecc0, 0x9d2e, 0x7db5, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x7b62, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaf35, gbc.sp());
        EXPECT(0x7b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 039F
        gbc.setState(0x86b7, 0x386c, 0xcf60, 0x1c02, 0x9402, 0xbc55, 0x0, 0x0);
        gbc.writeMem(0x86b7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x386c, gbc.sp());
        EXPECT(0x86b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b7));
        EXPECT(0xac, gbc.readMem(0x86b8));
        // CB AC 03A0
        gbc.setState(0x853b, 0x1bef, 0x5220, 0x9992, 0x9078, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x853b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1bef, gbc.sp());
        EXPECT(0x853d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x853b));
        EXPECT(0xac, gbc.readMem(0x853c));
        // CB AC 03A1
        gbc.setState(0x4d08, 0xb05c, 0x55d0, 0xd98d, 0xcb20, 0x79fa, 0x0, 0x0);
        gbc.writeMem(0x4d08, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb05c, gbc.sp());
        EXPECT(0x4d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03A3
        gbc.setState(0x77bf, 0x93c1, 0xa480, 0x8f4c, 0x393c, 0xbac2, 0x1, 0x1);
        gbc.writeMem(0x77bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x93c1, gbc.sp());
        EXPECT(0x77c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03A4
        gbc.setState(0x69e7, 0x913a, 0x2230, 0x2b4d, 0x44f9, 0x4874, 0x1, 0x1);
        gbc.writeMem(0x69e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x913a, gbc.sp());
        EXPECT(0x69e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03A5
        gbc.setState(0xcebb, 0x94d9, 0xa0f0, 0x6067, 0x7739, 0x896f, 0x1, 0x0);
        gbc.writeMem(0xcebb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x94d9, gbc.sp());
        EXPECT(0xcebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcebb));
        EXPECT(0xac, gbc.readMem(0xcebc));
        // CB AC 03A6
        gbc.setState(0xeab3, 0x44f6, 0x2c30, 0xa631, 0xddbd, 0x7a1c, 0x0, 0x0);
        gbc.writeMem(0xeab3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x44f6, gbc.sp());
        EXPECT(0xeab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab3));
        EXPECT(0xac, gbc.readMem(0xeab4));
        // CB AC 03A7
        gbc.setState(0x231f, 0xa5c7, 0x3c10, 0x6d2f, 0xef53, 0xa272, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa5c7, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03A8
        gbc.setState(0x9b79, 0xdd44, 0x1660, 0x9737, 0x8784, 0xb995, 0x0, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdd44, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b79));
        EXPECT(0xac, gbc.readMem(0x9b7a));
        // CB AC 03A9
        gbc.setState(0x92c7, 0x2060, 0x8180, 0x44c2, 0x3279, 0xf48d, 0x0, 0x1);
        gbc.writeMem(0x92c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2060, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c7));
        EXPECT(0xac, gbc.readMem(0x92c8));
        // CB AC 03AA
        gbc.setState(0xb794, 0x80e4, 0x2b0, 0x286a, 0xc0f4, 0x884, 0x0, 0x1);
        gbc.writeMem(0xb794, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x80e4, gbc.sp());
        EXPECT(0xb796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb794));
        EXPECT(0xac, gbc.readMem(0xb795));
        // CB AC 03AC
        gbc.setState(0x7592, 0x4167, 0x78f0, 0xe769, 0xb26d, 0x61d6, 0x1, 0x0);
        gbc.writeMem(0x7592, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4167, gbc.sp());
        EXPECT(0x7594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03AD
        gbc.setState(0x5383, 0x494, 0x7740, 0xeddf, 0x70d, 0x8add, 0x0, 0x1);
        gbc.writeMem(0x5383, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x494, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03AE
        gbc.setState(0x5c7e, 0x22db, 0x7180, 0x55b6, 0x11c2, 0xd8f, 0x0, 0x1);
        gbc.writeMem(0x5c7e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x22db, gbc.sp());
        EXPECT(0x5c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03AF
        gbc.setState(0xd22, 0x131, 0x6b40, 0x975f, 0x2d06, 0xaf89, 0x0, 0x0);
        gbc.writeMem(0xd22, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x131, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03B0
        gbc.setState(0xd27b, 0x36f5, 0x5c0, 0xc5f0, 0xeb48, 0x61e9, 0x0, 0x0);
        gbc.writeMem(0xd27b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x36f5, gbc.sp());
        EXPECT(0xd27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27b));
        EXPECT(0xac, gbc.readMem(0xd27c));
        // CB AC 03B1
        gbc.setState(0xb108, 0x857a, 0x4010, 0xbc7d, 0x3ac8, 0x6c88, 0x1, 0x1);
        gbc.writeMem(0xb108, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x857a, gbc.sp());
        EXPECT(0xb10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb108));
        EXPECT(0xac, gbc.readMem(0xb109));
        // CB AC 03B2
        gbc.setState(0x6821, 0xc12f, 0x3e90, 0x3cf3, 0xc693, 0xc3a4, 0x0, 0x1);
        gbc.writeMem(0x6821, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc12f, gbc.sp());
        EXPECT(0x6823, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03B3
        gbc.setState(0x4b1c, 0x6e54, 0x4b10, 0x2b2c, 0x9bbb, 0x9119, 0x1, 0x1);
        gbc.writeMem(0x4b1c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6e54, gbc.sp());
        EXPECT(0x4b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03B4
        gbc.setState(0xb38e, 0xfa46, 0x6650, 0x1240, 0x2e6d, 0x7344, 0x1, 0x1);
        gbc.writeMem(0xb38e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfa46, gbc.sp());
        EXPECT(0xb390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38e));
        EXPECT(0xac, gbc.readMem(0xb38f));
        // CB AC 03B5
        gbc.setState(0x4864, 0x3784, 0xb370, 0xc3, 0xf711, 0x5fd1, 0x1, 0x1);
        gbc.writeMem(0x4864, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3784, gbc.sp());
        EXPECT(0x4866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03B6
        gbc.setState(0xd8dd, 0x4bd7, 0x9cd0, 0xe2f7, 0x9a84, 0x8e73, 0x1, 0x1);
        gbc.writeMem(0xd8dd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4bd7, gbc.sp());
        EXPECT(0xd8df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8dd));
        EXPECT(0xac, gbc.readMem(0xd8de));
        // CB AC 03B7
        gbc.setState(0x9781, 0x86a5, 0x2550, 0xab5a, 0x651f, 0x81, 0x1, 0x1);
        gbc.writeMem(0x9781, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x86a5, gbc.sp());
        EXPECT(0x9783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9781));
        EXPECT(0xac, gbc.readMem(0x9782));
        // CB AC 03B8
        gbc.setState(0x85d6, 0xe292, 0x69c0, 0x2e5c, 0x7a74, 0x2a14, 0x0, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe292, gbc.sp());
        EXPECT(0x85d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d6));
        EXPECT(0xac, gbc.readMem(0x85d7));
        // CB AC 03B9
        gbc.setState(0x994f, 0xde88, 0xdf30, 0x9b21, 0x1aee, 0x427c, 0x1, 0x0);
        gbc.writeMem(0x994f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xde88, gbc.sp());
        EXPECT(0x9951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994f));
        EXPECT(0xac, gbc.readMem(0x9950));
        // CB AC 03BA
        gbc.setState(0x72bf, 0x4d22, 0xe590, 0xbd92, 0xe4b5, 0x78ff, 0x0, 0x1);
        gbc.writeMem(0x72bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4d22, gbc.sp());
        EXPECT(0x72c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03BB
        gbc.setState(0xc928, 0x9ca3, 0x5260, 0x890, 0xa77d, 0xcfcc, 0x1, 0x1);
        gbc.writeMem(0xc928, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0xc92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc928));
        EXPECT(0xac, gbc.readMem(0xc929));
        // CB AC 03BC
        gbc.setState(0x85ca, 0x241, 0xe730, 0xf567, 0xa936, 0x6d5e, 0x1, 0x1);
        gbc.writeMem(0x85ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x241, gbc.sp());
        EXPECT(0x85cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ca));
        EXPECT(0xac, gbc.readMem(0x85cb));
        // CB AC 03BD
        gbc.setState(0x9669, 0xe7f5, 0xc330, 0x272a, 0xef46, 0x3c55, 0x1, 0x1);
        gbc.writeMem(0x9669, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0x966b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9669));
        EXPECT(0xac, gbc.readMem(0x966a));
        // CB AC 03BE
        gbc.setState(0x210d, 0x3ac0, 0x3960, 0x3f58, 0x11c, 0x479b, 0x1, 0x0);
        gbc.writeMem(0x210d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3ac0, gbc.sp());
        EXPECT(0x210f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03BF
        gbc.setState(0xcc19, 0xf9d5, 0xf290, 0x1625, 0x65e1, 0xb38f, 0x0, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0xcc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc19));
        EXPECT(0xac, gbc.readMem(0xcc1a));
        // CB AC 03C0
        gbc.setState(0x66ff, 0xa373, 0x4aa0, 0xfa01, 0x7db0, 0x4a50, 0x0, 0x1);
        gbc.writeMem(0x66ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa373, gbc.sp());
        EXPECT(0x6701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03C1
        gbc.setState(0xc901, 0xe43e, 0xaf50, 0x7c2c, 0x6747, 0x58c9, 0x1, 0x1);
        gbc.writeMem(0xc901, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe43e, gbc.sp());
        EXPECT(0xc903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc901));
        EXPECT(0xac, gbc.readMem(0xc902));
        // CB AC 03C2
        gbc.setState(0xc493, 0x9182, 0xd400, 0x1265, 0xa46, 0x79ca, 0x0, 0x0);
        gbc.writeMem(0xc493, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9182, gbc.sp());
        EXPECT(0xc495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc493));
        EXPECT(0xac, gbc.readMem(0xc494));
        // CB AC 03C3
        gbc.setState(0x88d9, 0x4919, 0x65d0, 0x5736, 0x9135, 0xa7f2, 0x1, 0x0);
        gbc.writeMem(0x88d9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4919, gbc.sp());
        EXPECT(0x88db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d9));
        EXPECT(0xac, gbc.readMem(0x88da));
        // CB AC 03C4
        gbc.setState(0x63c0, 0x6e31, 0x1770, 0xd421, 0xe100, 0xb447, 0x0, 0x0);
        gbc.writeMem(0x63c0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0x63c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03C5
        gbc.setState(0x796d, 0xd5, 0xd3e0, 0x9485, 0xa8f8, 0x49aa, 0x0, 0x0);
        gbc.writeMem(0x796d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0x796f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03C6
        gbc.setState(0x8642, 0x4aca, 0x5640, 0x18da, 0x94b1, 0xa782, 0x0, 0x1);
        gbc.writeMem(0x8642, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4aca, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8642));
        EXPECT(0xac, gbc.readMem(0x8643));
        // CB AC 03C7
        gbc.setState(0x1c96, 0x84ac, 0xd0b0, 0xf32f, 0x80d5, 0x56b6, 0x0, 0x0);
        gbc.writeMem(0x1c96, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03C8
        gbc.setState(0xeffa, 0xfaa8, 0x5b50, 0x6fb6, 0x5d2d, 0x9db, 0x1, 0x0);
        gbc.writeMem(0xeffa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfaa8, gbc.sp());
        EXPECT(0xeffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffa));
        EXPECT(0xac, gbc.readMem(0xeffb));
        // CB AC 03C9
        gbc.setState(0x4aee, 0x6322, 0x4800, 0x41d5, 0x1d7c, 0x5169, 0x0, 0x0);
        gbc.writeMem(0x4aee, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6322, gbc.sp());
        EXPECT(0x4af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03CA
        gbc.setState(0xb348, 0xdf77, 0x4460, 0xdaf6, 0x9517, 0x8eb5, 0x0, 0x0);
        gbc.writeMem(0xb348, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0xb34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb348));
        EXPECT(0xac, gbc.readMem(0xb349));
        // CB AC 03CB
        gbc.setState(0xa161, 0x3fb2, 0x83c0, 0xc017, 0x1c27, 0xa8dd, 0x1, 0x0);
        gbc.writeMem(0xa161, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3fb2, gbc.sp());
        EXPECT(0xa163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa161));
        EXPECT(0xac, gbc.readMem(0xa162));
        // CB AC 03CC
        gbc.setState(0x81ad, 0x1026, 0x42f0, 0xb6d8, 0xd6f3, 0xaff6, 0x1, 0x1);
        gbc.writeMem(0x81ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0x81af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ad));
        EXPECT(0xac, gbc.readMem(0x81ae));
        // CB AC 03CD
        gbc.setState(0x420, 0x8f, 0x760, 0x7964, 0x151b, 0x62d0, 0x1, 0x0);
        gbc.writeMem(0x420, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8f, gbc.sp());
        EXPECT(0x422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03CE
        gbc.setState(0x83de, 0x4e7b, 0x7b0, 0x95a6, 0x9a55, 0xe51d, 0x0, 0x1);
        gbc.writeMem(0x83de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4e7b, gbc.sp());
        EXPECT(0x83e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83de));
        EXPECT(0xac, gbc.readMem(0x83df));
        // CB AC 03CF
        gbc.setState(0x5a2b, 0xf468, 0x460, 0x69, 0x9228, 0x29a2, 0x0, 0x0);
        gbc.writeMem(0x5a2b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0x5a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03D0
        gbc.setState(0x605c, 0x4c6c, 0x9df0, 0x67e8, 0x2257, 0xcc11, 0x1, 0x1);
        gbc.writeMem(0x605c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4c6c, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03D1
        gbc.setState(0xb7db, 0x9d31, 0x33a0, 0x798c, 0x619d, 0xebf9, 0x1, 0x0);
        gbc.writeMem(0xb7db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9d31, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7db));
        EXPECT(0xac, gbc.readMem(0xb7dc));
        // CB AC 03D2
        gbc.setState(0xc37b, 0x4ef5, 0x3ad0, 0xb5a3, 0x875b, 0x7f84, 0x1, 0x0);
        gbc.writeMem(0xc37b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4ef5, gbc.sp());
        EXPECT(0xc37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37b));
        EXPECT(0xac, gbc.readMem(0xc37c));
        // CB AC 03D3
        gbc.setState(0xa64e, 0xd1d5, 0x1010, 0x676f, 0xb0f3, 0x24a9, 0x1, 0x1);
        gbc.writeMem(0xa64e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd1d5, gbc.sp());
        EXPECT(0xa650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64e));
        EXPECT(0xac, gbc.readMem(0xa64f));
        // CB AC 03D4
        gbc.setState(0xd7e8, 0x875, 0x710, 0x194c, 0xc110, 0xa15c, 0x1, 0x0);
        gbc.writeMem(0xd7e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x875, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e8));
        EXPECT(0xac, gbc.readMem(0xd7e9));
        // CB AC 03D5
        gbc.setState(0xc5b, 0x51f9, 0xfa40, 0x72d9, 0x50c7, 0xfb51, 0x0, 0x0);
        gbc.writeMem(0xc5b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x51f9, gbc.sp());
        EXPECT(0xc5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03D6
        gbc.setState(0x3f1b, 0xffda, 0xdac0, 0xfff0, 0x3b3b, 0x5d96, 0x1, 0x1);
        gbc.writeMem(0x3f1b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xffda, gbc.sp());
        EXPECT(0x3f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB AC 03D7
        gbc.setState(0x8196, 0x5080, 0x2080, 0xc1e8, 0x4ce4, 0xfb15, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5080, gbc.sp());
        EXPECT(0x8198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8196));
        EXPECT(0xac, gbc.readMem(0x8197));
        // CB AC 03D9
        gbc.setState(0xb937, 0x60d9, 0xf270, 0x79ef, 0x72be, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0xb937, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x60d9, gbc.sp());
        EXPECT(0xb939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb937));
        EXPECT(0xac, gbc.readMem(0xb938));
        // CB AC 03DA
        gbc.setState(0xc3ae, 0x963f, 0x5cb0, 0x9ff3, 0xdb8b, 0x5bcd, 0x1, 0x0);
        gbc.writeMem(0xc3ae, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x963f, gbc.sp());
        EXPECT(0xc3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ae));
        EXPECT(0xac, gbc.readMem(0xc3af));
        // CB AC 03DB
        gbc.setState(0x3629, 0xddce, 0xe990, 0x8c64, 0x630, 0xcd14, 0x1, 0x1);
        gbc.writeMem(0x3629, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xddce, gbc.sp());
        EXPECT(0x362b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03DC
        gbc.setState(0x3716, 0xbd16, 0x70d0, 0x1eac, 0xc76, 0x32bb, 0x1, 0x1);
        gbc.writeMem(0x3716, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbd16, gbc.sp());
        EXPECT(0x3718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03DD
        gbc.setState(0xeda8, 0x570f, 0xf4f0, 0x2fad, 0xf36e, 0x8b69, 0x1, 0x0);
        gbc.writeMem(0xeda8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x570f, gbc.sp());
        EXPECT(0xedaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda8));
        EXPECT(0xac, gbc.readMem(0xeda9));
        // CB AC 03DE
        gbc.setState(0x53d4, 0x7dc8, 0xc890, 0xc35, 0x8e9a, 0x976d, 0x1, 0x1);
        gbc.writeMem(0x53d4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7dc8, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03E0
        gbc.setState(0x1a6a, 0x4175, 0x9070, 0x363d, 0x75b, 0x6c61, 0x1, 0x0);
        gbc.writeMem(0x1a6a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4175, gbc.sp());
        EXPECT(0x1a6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03E1
        gbc.setState(0xb450, 0x7158, 0xc100, 0xde47, 0x9958, 0x4911, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7158, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb450));
        EXPECT(0xac, gbc.readMem(0xb451));
        // CB AC 03E2
        gbc.setState(0x56c1, 0xe292, 0x12f0, 0xfac, 0x5f87, 0xf302, 0x0, 0x0);
        gbc.writeMem(0x56c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe292, gbc.sp());
        EXPECT(0x56c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03E3
        gbc.setState(0xd7e1, 0xb2a2, 0x9cb0, 0xa34, 0xc2b8, 0xbd29, 0x0, 0x0);
        gbc.writeMem(0xd7e1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb2a2, gbc.sp());
        EXPECT(0xd7e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e1));
        EXPECT(0xac, gbc.readMem(0xd7e2));
        // CB AC 03E4
        gbc.setState(0x68c6, 0xca7b, 0x8b0, 0xc2c2, 0xe45, 0xdeb0, 0x0, 0x0);
        gbc.writeMem(0x68c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xca7b, gbc.sp());
        EXPECT(0x68c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03E5
        gbc.setState(0x1843, 0x12b0, 0x1930, 0xbbd0, 0xef25, 0x6f7a, 0x0, 0x1);
        gbc.writeMem(0x1843, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x12b0, gbc.sp());
        EXPECT(0x1845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB AC 03E6
        gbc.setState(0xbe29, 0x4f0a, 0xc4e0, 0x4eb3, 0x5076, 0x878a, 0x1, 0x0);
        gbc.writeMem(0xbe29, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4f0a, gbc.sp());
        EXPECT(0xbe2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe29));
        EXPECT(0xac, gbc.readMem(0xbe2a));
        // CB AC 03E7
        gbc.setState(0x6c9b, 0x2fe3, 0x4460, 0xbe3d, 0xbb32, 0x5c98, 0x1, 0x1);
        gbc.writeMem(0x6c9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2fe3, gbc.sp());
        EXPECT(0x6c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
