    TEST(gbcemu, opcode_cb_ac) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB AC 0000
        gbc.setState(0xb82f, 0xc10f, 0x9c50, 0x3a70, 0x4553, 0x5bf, 0x1, 0x1);
        gbc.writeMem(0xb82f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc10f);
        EXPECT(gbc.pc(), 0xb831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82f), 0xcb);
        EXPECT(gbc.readMem(0xb830), 0xac);
        // CB AC 0001
        gbc.setState(0x3237, 0x5a65, 0x5d40, 0xd11, 0x84a3, 0x5540, 0x0, 0x1);
        gbc.writeMem(0x3237, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5a65);
        EXPECT(gbc.pc(), 0x3239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0003
        gbc.setState(0x2d52, 0x40a, 0x7990, 0x53f7, 0x9cac, 0xa126, 0x0, 0x0);
        gbc.writeMem(0x2d52, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x40a);
        EXPECT(gbc.pc(), 0x2d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0004
        gbc.setState(0x2e42, 0x8ad3, 0x6230, 0x8896, 0x9970, 0x59ff, 0x1, 0x1);
        gbc.writeMem(0x2e42, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8ad3);
        EXPECT(gbc.pc(), 0x2e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0005
        gbc.setState(0x49bf, 0xd12f, 0xb2e0, 0xd2a4, 0x8c, 0xdf7f, 0x1, 0x1);
        gbc.writeMem(0x49bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd12f);
        EXPECT(gbc.pc(), 0x49c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0006
        gbc.setState(0x4457, 0x7f07, 0x2960, 0x153b, 0xb5ec, 0xa144, 0x0, 0x0);
        gbc.writeMem(0x4457, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7f07);
        EXPECT(gbc.pc(), 0x4459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0007
        gbc.setState(0x3ca5, 0x2e9d, 0xe140, 0x339c, 0x60ab, 0xa037, 0x1, 0x0);
        gbc.writeMem(0x3ca5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2e9d);
        EXPECT(gbc.pc(), 0x3ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0008
        gbc.setState(0x8f2, 0x1610, 0x61e0, 0xd799, 0x6e8f, 0x13b3, 0x0, 0x1);
        gbc.writeMem(0x8f2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1610);
        EXPECT(gbc.pc(), 0x8f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0009
        gbc.setState(0x5939, 0x3568, 0xd8a0, 0x4ab5, 0xc87a, 0xdb18, 0x0, 0x1);
        gbc.writeMem(0x5939, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3568);
        EXPECT(gbc.pc(), 0x593b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 000A
        gbc.setState(0x2b89, 0xd3c3, 0x5f70, 0x443f, 0x798d, 0xdd94, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd3c3);
        EXPECT(gbc.pc(), 0x2b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 000B
        gbc.setState(0x7511, 0x48e9, 0xc600, 0x8337, 0x92e2, 0x6d63, 0x0, 0x0);
        gbc.writeMem(0x7511, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x48e9);
        EXPECT(gbc.pc(), 0x7513);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 000C
        gbc.setState(0x73e8, 0x7f58, 0xb090, 0x9ecd, 0x2c99, 0x199c, 0x1, 0x0);
        gbc.writeMem(0x73e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7f58);
        EXPECT(gbc.pc(), 0x73ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 000D
        gbc.setState(0x5fa2, 0x189d, 0x3fd0, 0xbcff, 0x93eb, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0x5fa2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x189d);
        EXPECT(gbc.pc(), 0x5fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 000E
        gbc.setState(0xc4c8, 0x4f6d, 0x6ed0, 0x68f1, 0x514b, 0xa4aa, 0x1, 0x0);
        gbc.writeMem(0xc4c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4f6d);
        EXPECT(gbc.pc(), 0xc4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c8), 0xcb);
        EXPECT(gbc.readMem(0xc4c9), 0xac);
        // CB AC 000F
        gbc.setState(0x25f1, 0x6058, 0x9bc0, 0xaee0, 0x6009, 0x1609, 0x1, 0x1);
        gbc.writeMem(0x25f1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6058);
        EXPECT(gbc.pc(), 0x25f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0010
        gbc.setState(0x9ad3, 0xc039, 0x8e00, 0x21b9, 0x476d, 0xa30f, 0x0, 0x1);
        gbc.writeMem(0x9ad3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc039);
        EXPECT(gbc.pc(), 0x9ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad3), 0xcb);
        EXPECT(gbc.readMem(0x9ad4), 0xac);
        // CB AC 0011
        gbc.setState(0x3483, 0xe18c, 0x2190, 0xb168, 0x64cb, 0x2a3e, 0x0, 0x0);
        gbc.writeMem(0x3483, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe18c);
        EXPECT(gbc.pc(), 0x3485);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0012
        gbc.setState(0xadc1, 0x8528, 0x5700, 0x8ef9, 0xed1c, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0xadc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8528);
        EXPECT(gbc.pc(), 0xadc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc1), 0xcb);
        EXPECT(gbc.readMem(0xadc2), 0xac);
        // CB AC 0013
        gbc.setState(0x14bf, 0xa40d, 0x5b80, 0xaa04, 0xe43, 0x8de0, 0x0, 0x0);
        gbc.writeMem(0x14bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa40d);
        EXPECT(gbc.pc(), 0x14c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0014
        gbc.setState(0xc8c0, 0xc00a, 0x5b0, 0xb62b, 0x7bdc, 0x6a35, 0x0, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc00a);
        EXPECT(gbc.pc(), 0xc8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c0), 0xcb);
        EXPECT(gbc.readMem(0xc8c1), 0xac);
        // CB AC 0015
        gbc.setState(0x2bca, 0x79de, 0x7c50, 0x665b, 0xb239, 0x6981, 0x0, 0x0);
        gbc.writeMem(0x2bca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x79de);
        EXPECT(gbc.pc(), 0x2bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0016
        gbc.setState(0x8e41, 0x242c, 0x9da0, 0xb2ec, 0x9346, 0xa42, 0x1, 0x0);
        gbc.writeMem(0x8e41, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x242c);
        EXPECT(gbc.pc(), 0x8e43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e41), 0xcb);
        EXPECT(gbc.readMem(0x8e42), 0xac);
        // CB AC 0017
        gbc.setState(0x64f2, 0x417f, 0x3550, 0x9e4a, 0x487b, 0x77ff, 0x0, 0x0);
        gbc.writeMem(0x64f2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0018
        gbc.setState(0x6192, 0xcc03, 0x5b70, 0x7bce, 0x575a, 0x3644, 0x1, 0x1);
        gbc.writeMem(0x6192, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcc03);
        EXPECT(gbc.pc(), 0x6194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0019
        gbc.setState(0xb98b, 0xabdd, 0xbf20, 0x72fd, 0x101f, 0xe622, 0x0, 0x1);
        gbc.writeMem(0xb98b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xabdd);
        EXPECT(gbc.pc(), 0xb98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98b), 0xcb);
        EXPECT(gbc.readMem(0xb98c), 0xac);
        // CB AC 001A
        gbc.setState(0x9762, 0x762b, 0xcdd0, 0xb63f, 0x50e9, 0x86ea, 0x0, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0x9764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9762), 0xcb);
        EXPECT(gbc.readMem(0x9763), 0xac);
        // CB AC 001B
        gbc.setState(0xe08, 0x8f33, 0x740, 0x3aa4, 0xc848, 0x8297, 0x1, 0x0);
        gbc.writeMem(0xe08, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8f33);
        EXPECT(gbc.pc(), 0xe0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 001C
        gbc.setState(0x102d, 0xf0bc, 0xa920, 0x791b, 0x89e8, 0x147a, 0x0, 0x1);
        gbc.writeMem(0x102d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf0bc);
        EXPECT(gbc.pc(), 0x102f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 001D
        gbc.setState(0x8a41, 0x78a7, 0xc1b0, 0x9147, 0x18a3, 0xf6e, 0x0, 0x1);
        gbc.writeMem(0x8a41, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x78a7);
        EXPECT(gbc.pc(), 0x8a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a41), 0xcb);
        EXPECT(gbc.readMem(0x8a42), 0xac);
        // CB AC 001E
        gbc.setState(0x7ec0, 0x3065, 0x5320, 0xa41, 0xb0c8, 0x2f10, 0x1, 0x0);
        gbc.writeMem(0x7ec0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3065);
        EXPECT(gbc.pc(), 0x7ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 001F
        gbc.setState(0x78c0, 0x21bb, 0xdd00, 0xff12, 0xa918, 0x5324, 0x1, 0x0);
        gbc.writeMem(0x78c0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x21bb);
        EXPECT(gbc.pc(), 0x78c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0020
        gbc.setState(0xe8c8, 0x615c, 0x2460, 0x316e, 0x3cbe, 0xab19, 0x0, 0x0);
        gbc.writeMem(0xe8c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x615c);
        EXPECT(gbc.pc(), 0xe8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c8), 0xcb);
        EXPECT(gbc.readMem(0xe8c9), 0xac);
        // CB AC 0021
        gbc.setState(0x6e8c, 0x111d, 0x6850, 0xf827, 0xdff1, 0x3c87, 0x1, 0x0);
        gbc.writeMem(0x6e8c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x111d);
        EXPECT(gbc.pc(), 0x6e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0022
        gbc.setState(0xd1b7, 0x5524, 0x9480, 0xce04, 0xf5c4, 0x4321, 0x0, 0x1);
        gbc.writeMem(0xd1b7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5524);
        EXPECT(gbc.pc(), 0xd1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b7), 0xcb);
        EXPECT(gbc.readMem(0xd1b8), 0xac);
        // CB AC 0023
        gbc.setState(0x7c22, 0xe8df, 0x3060, 0x9345, 0x2d14, 0x1230, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe8df);
        EXPECT(gbc.pc(), 0x7c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0024
        gbc.setState(0x524d, 0x91a7, 0xa090, 0x5021, 0xe10e, 0xe081, 0x0, 0x1);
        gbc.writeMem(0x524d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x91a7);
        EXPECT(gbc.pc(), 0x524f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0025
        gbc.setState(0x64e9, 0xf5ac, 0x61d0, 0xe215, 0x3735, 0x2530, 0x1, 0x0);
        gbc.writeMem(0x64e9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf5ac);
        EXPECT(gbc.pc(), 0x64eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0026
        gbc.setState(0x7a97, 0xdfcf, 0x47c0, 0x8fac, 0x8c85, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x7a97, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdfcf);
        EXPECT(gbc.pc(), 0x7a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0027
        gbc.setState(0x3e65, 0x7007, 0xd5d0, 0x120c, 0x48c7, 0x5812, 0x1, 0x0);
        gbc.writeMem(0x3e65, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7007);
        EXPECT(gbc.pc(), 0x3e67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0028
        gbc.setState(0x4026, 0xb336, 0x7fe0, 0x9d77, 0x3173, 0x426c, 0x1, 0x1);
        gbc.writeMem(0x4026, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb336);
        EXPECT(gbc.pc(), 0x4028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0029
        gbc.setState(0x10d7, 0x5d09, 0xcae0, 0xd750, 0x610d, 0x8956, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5d09);
        EXPECT(gbc.pc(), 0x10d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 002A
        gbc.setState(0x2fc8, 0x9b15, 0xe5a0, 0xc45a, 0xe820, 0x1a0e, 0x0, 0x0);
        gbc.writeMem(0x2fc8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9b15);
        EXPECT(gbc.pc(), 0x2fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 002B
        gbc.setState(0x9c46, 0x858f, 0xaaa0, 0xdda1, 0x2895, 0x73a4, 0x1, 0x0);
        gbc.writeMem(0x9c46, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x858f);
        EXPECT(gbc.pc(), 0x9c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c46), 0xcb);
        EXPECT(gbc.readMem(0x9c47), 0xac);
        // CB AC 002C
        gbc.setState(0x47c5, 0x8c99, 0x9370, 0xeeee, 0x8011, 0xb8c2, 0x1, 0x1);
        gbc.writeMem(0x47c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8c99);
        EXPECT(gbc.pc(), 0x47c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 002E
        gbc.setState(0x3e75, 0x41b1, 0x8fd0, 0xc0ee, 0xa4f, 0x41d3, 0x0, 0x1);
        gbc.writeMem(0x3e75, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x41b1);
        EXPECT(gbc.pc(), 0x3e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 002F
        gbc.setState(0xe8e, 0xb022, 0xf5c0, 0xa585, 0x7f60, 0x2e5d, 0x0, 0x0);
        gbc.writeMem(0xe8e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb022);
        EXPECT(gbc.pc(), 0xe90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0030
        gbc.setState(0x11a6, 0x70bb, 0xcd50, 0xec12, 0x65ef, 0x4515, 0x1, 0x0);
        gbc.writeMem(0x11a6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x70bb);
        EXPECT(gbc.pc(), 0x11a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0031
        gbc.setState(0x818, 0x1c13, 0x6aa0, 0x2d1e, 0x9ea7, 0xe896, 0x0, 0x1);
        gbc.writeMem(0x818, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1c13);
        EXPECT(gbc.pc(), 0x81a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0032
        gbc.setState(0x878d, 0xa7a7, 0x71e0, 0x80dd, 0xecd6, 0x7c44, 0x0, 0x0);
        gbc.writeMem(0x878d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa7a7);
        EXPECT(gbc.pc(), 0x878f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878d), 0xcb);
        EXPECT(gbc.readMem(0x878e), 0xac);
        // CB AC 0033
        gbc.setState(0x4715, 0x586, 0x7720, 0x7574, 0x6966, 0x7e3c, 0x0, 0x1);
        gbc.writeMem(0x4715, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x586);
        EXPECT(gbc.pc(), 0x4717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0034
        gbc.setState(0x36e, 0x73ac, 0x7d20, 0xbee5, 0x463c, 0x1ba0, 0x0, 0x0);
        gbc.writeMem(0x36e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x73ac);
        EXPECT(gbc.pc(), 0x370);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0036
        gbc.setState(0x69c7, 0x5df9, 0xa900, 0x2f2c, 0xe5cf, 0xcc8c, 0x0, 0x0);
        gbc.writeMem(0x69c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5df9);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0038
        gbc.setState(0x13bc, 0x5e9e, 0x49a0, 0x1013, 0x8b10, 0x8c4d, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5e9e);
        EXPECT(gbc.pc(), 0x13be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0039
        gbc.setState(0xe4c5, 0x283a, 0x8360, 0x3789, 0x1e7d, 0xd5b1, 0x1, 0x0);
        gbc.writeMem(0xe4c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x283a);
        EXPECT(gbc.pc(), 0xe4c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c5), 0xcb);
        EXPECT(gbc.readMem(0xe4c6), 0xac);
        // CB AC 003A
        gbc.setState(0xcba3, 0xe85b, 0xac10, 0x41d7, 0xa993, 0xcd86, 0x1, 0x0);
        gbc.writeMem(0xcba3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe85b);
        EXPECT(gbc.pc(), 0xcba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba3), 0xcb);
        EXPECT(gbc.readMem(0xcba4), 0xac);
        // CB AC 003B
        gbc.setState(0x48dd, 0xdbb4, 0xf370, 0xce35, 0xee71, 0xa37, 0x1, 0x0);
        gbc.writeMem(0x48dd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdbb4);
        EXPECT(gbc.pc(), 0x48df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 003C
        gbc.setState(0x3dca, 0x73c1, 0xed50, 0xa7c3, 0x39c, 0x7bcb, 0x0, 0x0);
        gbc.writeMem(0x3dca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x73c1);
        EXPECT(gbc.pc(), 0x3dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 003D
        gbc.setState(0xb514, 0x1ee4, 0xc240, 0x53dc, 0xf8e8, 0x5d62, 0x0, 0x0);
        gbc.writeMem(0xb514, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1ee4);
        EXPECT(gbc.pc(), 0xb516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb514), 0xcb);
        EXPECT(gbc.readMem(0xb515), 0xac);
        // CB AC 003E
        gbc.setState(0xd08b, 0xcadf, 0x21c0, 0x7cf1, 0x3353, 0x2f51, 0x1, 0x0);
        gbc.writeMem(0xd08b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcadf);
        EXPECT(gbc.pc(), 0xd08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd08b), 0xcb);
        EXPECT(gbc.readMem(0xd08c), 0xac);
        // CB AC 003F
        gbc.setState(0x5876, 0xbaf2, 0x2440, 0xe9a0, 0x7549, 0x9f2, 0x0, 0x1);
        gbc.writeMem(0x5876, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xbaf2);
        EXPECT(gbc.pc(), 0x5878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0040
        gbc.setState(0xee2e, 0x40ae, 0xbfb0, 0x3678, 0xcd2c, 0xe7f5, 0x0, 0x0);
        gbc.writeMem(0xee2e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x40ae);
        EXPECT(gbc.pc(), 0xee30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2e), 0xcb);
        EXPECT(gbc.readMem(0xee2f), 0xac);
        // CB AC 0041
        gbc.setState(0xeb50, 0xac99, 0x14d0, 0xd60e, 0xb7ba, 0xd2d3, 0x1, 0x0);
        gbc.writeMem(0xeb50, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xac99);
        EXPECT(gbc.pc(), 0xeb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb50), 0xcb);
        EXPECT(gbc.readMem(0xeb51), 0xac);
        // CB AC 0042
        gbc.setState(0xc18a, 0x620b, 0xc210, 0x76b2, 0x47cd, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0xc18a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x620b);
        EXPECT(gbc.pc(), 0xc18c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18a), 0xcb);
        EXPECT(gbc.readMem(0xc18b), 0xac);
        // CB AC 0043
        gbc.setState(0xa983, 0xd359, 0xfba0, 0xbb7, 0xe2c4, 0x7389, 0x1, 0x1);
        gbc.writeMem(0xa983, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd359);
        EXPECT(gbc.pc(), 0xa985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa983), 0xcb);
        EXPECT(gbc.readMem(0xa984), 0xac);
        // CB AC 0044
        gbc.setState(0x6b7e, 0xcc6f, 0x6680, 0x879, 0xaff3, 0x3d24, 0x1, 0x0);
        gbc.writeMem(0x6b7e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcc6f);
        EXPECT(gbc.pc(), 0x6b80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0045
        gbc.setState(0xa586, 0x62ec, 0x5560, 0x9ae0, 0x42f7, 0x3b46, 0x0, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x62ec);
        EXPECT(gbc.pc(), 0xa588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa586), 0xcb);
        EXPECT(gbc.readMem(0xa587), 0xac);
        // CB AC 0048
        gbc.setState(0x83e9, 0x71f7, 0x2a50, 0x7912, 0xfcea, 0xa83b, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x71f7);
        EXPECT(gbc.pc(), 0x83eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83e9), 0xcb);
        EXPECT(gbc.readMem(0x83ea), 0xac);
        // CB AC 0049
        gbc.setState(0x207a, 0x43d9, 0x2910, 0x50d7, 0x9215, 0xc9a4, 0x1, 0x0);
        gbc.writeMem(0x207a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x43d9);
        EXPECT(gbc.pc(), 0x207c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 004A
        gbc.setState(0x7355, 0xc25f, 0x5480, 0xd547, 0x551, 0x734e, 0x1, 0x0);
        gbc.writeMem(0x7355, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc25f);
        EXPECT(gbc.pc(), 0x7357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 004B
        gbc.setState(0x1bcb, 0xee5a, 0xbbc0, 0x173a, 0x890d, 0xdcb0, 0x1, 0x1);
        gbc.writeMem(0x1bcb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xee5a);
        EXPECT(gbc.pc(), 0x1bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 004C
        gbc.setState(0xd455, 0x4d6d, 0x1ea0, 0x67b1, 0xceec, 0x23d9, 0x0, 0x0);
        gbc.writeMem(0xd455, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4d6d);
        EXPECT(gbc.pc(), 0xd457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd455), 0xcb);
        EXPECT(gbc.readMem(0xd456), 0xac);
        // CB AC 004D
        gbc.setState(0x502c, 0x5b80, 0xe720, 0xbcde, 0x7c26, 0xed2d, 0x0, 0x1);
        gbc.writeMem(0x502c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5b80);
        EXPECT(gbc.pc(), 0x502e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 004E
        gbc.setState(0xe9e4, 0xbd87, 0x9270, 0x4a16, 0xf4e7, 0x38d7, 0x0, 0x1);
        gbc.writeMem(0xe9e4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xbd87);
        EXPECT(gbc.pc(), 0xe9e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e4), 0xcb);
        EXPECT(gbc.readMem(0xe9e5), 0xac);
        // CB AC 004F
        gbc.setState(0x8d28, 0xc0ac, 0x9410, 0x351f, 0x80e7, 0x4afd, 0x1, 0x0);
        gbc.writeMem(0x8d28, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc0ac);
        EXPECT(gbc.pc(), 0x8d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d28), 0xcb);
        EXPECT(gbc.readMem(0x8d29), 0xac);
        // CB AC 0050
        gbc.setState(0x34b4, 0x37e6, 0x6130, 0x25ad, 0x5e27, 0x875e, 0x1, 0x0);
        gbc.writeMem(0x34b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x37e6);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0051
        gbc.setState(0xc628, 0x416a, 0x7730, 0xa2d0, 0x4706, 0x6344, 0x0, 0x0);
        gbc.writeMem(0xc628, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x416a);
        EXPECT(gbc.pc(), 0xc62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc628), 0xcb);
        EXPECT(gbc.readMem(0xc629), 0xac);
        // CB AC 0053
        gbc.setState(0x3d38, 0x4cc7, 0x7e60, 0xfcab, 0xe068, 0xc613, 0x1, 0x1);
        gbc.writeMem(0x3d38, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4cc7);
        EXPECT(gbc.pc(), 0x3d3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0054
        gbc.setState(0x423a, 0xbca3, 0xec80, 0x3afa, 0x968, 0x810f, 0x0, 0x0);
        gbc.writeMem(0x423a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xbca3);
        EXPECT(gbc.pc(), 0x423c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0056
        gbc.setState(0xcf72, 0x46c5, 0x6a50, 0xe058, 0xbf2c, 0x23a, 0x1, 0x1);
        gbc.writeMem(0xcf72, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x46c5);
        EXPECT(gbc.pc(), 0xcf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf72), 0xcb);
        EXPECT(gbc.readMem(0xcf73), 0xac);
        // CB AC 0057
        gbc.setState(0xb97c, 0x8f8e, 0x4f50, 0xddd7, 0x246a, 0xab0c, 0x1, 0x0);
        gbc.writeMem(0xb97c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8f8e);
        EXPECT(gbc.pc(), 0xb97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb97c), 0xcb);
        EXPECT(gbc.readMem(0xb97d), 0xac);
        // CB AC 0058
        gbc.setState(0x3808, 0xf7a1, 0xf020, 0x7943, 0x1199, 0x37b, 0x1, 0x0);
        gbc.writeMem(0x3808, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf7a1);
        EXPECT(gbc.pc(), 0x380a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0059
        gbc.setState(0xe2c1, 0xef6c, 0x5140, 0xb086, 0xa681, 0x2ae9, 0x0, 0x0);
        gbc.writeMem(0xe2c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xef6c);
        EXPECT(gbc.pc(), 0xe2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c1), 0xcb);
        EXPECT(gbc.readMem(0xe2c2), 0xac);
        // CB AC 005A
        gbc.setState(0x5f95, 0x4d68, 0xdd40, 0x697e, 0x47ec, 0x6d9c, 0x0, 0x0);
        gbc.writeMem(0x5f95, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4d68);
        EXPECT(gbc.pc(), 0x5f97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 005B
        gbc.setState(0xaa1d, 0xab28, 0xc690, 0xb7c6, 0xf937, 0xca44, 0x1, 0x1);
        gbc.writeMem(0xaa1d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xab28);
        EXPECT(gbc.pc(), 0xaa1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa1d), 0xcb);
        EXPECT(gbc.readMem(0xaa1e), 0xac);
        // CB AC 005C
        gbc.setState(0x7ccd, 0x3985, 0xdf60, 0xd6ff, 0x5bb7, 0x6107, 0x0, 0x0);
        gbc.writeMem(0x7ccd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3985);
        EXPECT(gbc.pc(), 0x7ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 005D
        gbc.setState(0x658e, 0xdd18, 0xc7a0, 0xa569, 0x3a31, 0xc01e, 0x0, 0x0);
        gbc.writeMem(0x658e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdd18);
        EXPECT(gbc.pc(), 0x6590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 005E
        gbc.setState(0xe5f1, 0xe244, 0xd1a0, 0xaba1, 0x6572, 0x400d, 0x1, 0x0);
        gbc.writeMem(0xe5f1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xe244);
        EXPECT(gbc.pc(), 0xe5f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f1), 0xcb);
        EXPECT(gbc.readMem(0xe5f2), 0xac);
        // CB AC 005F
        gbc.setState(0xc313, 0xdd94, 0x76b0, 0x5f0a, 0xae7e, 0x2bd3, 0x1, 0x1);
        gbc.writeMem(0xc313, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdd94);
        EXPECT(gbc.pc(), 0xc315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc313), 0xcb);
        EXPECT(gbc.readMem(0xc314), 0xac);
        // CB AC 0060
        gbc.setState(0x3d2f, 0x51fe, 0x3970, 0xcd3c, 0x8948, 0xee10, 0x0, 0x1);
        gbc.writeMem(0x3d2f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x51fe);
        EXPECT(gbc.pc(), 0x3d31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0061
        gbc.setState(0xa52a, 0x8398, 0xeb40, 0x1b4e, 0xa03, 0x20ae, 0x1, 0x1);
        gbc.writeMem(0xa52a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8398);
        EXPECT(gbc.pc(), 0xa52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa52a), 0xcb);
        EXPECT(gbc.readMem(0xa52b), 0xac);
        // CB AC 0062
        gbc.setState(0xa632, 0x8d54, 0xf9b0, 0xabb5, 0x167c, 0xc84, 0x0, 0x1);
        gbc.writeMem(0xa632, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8d54);
        EXPECT(gbc.pc(), 0xa634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa632), 0xcb);
        EXPECT(gbc.readMem(0xa633), 0xac);
        // CB AC 0063
        gbc.setState(0x769f, 0x1b61, 0x29e0, 0x5e1f, 0x8684, 0x4443, 0x1, 0x0);
        gbc.writeMem(0x769f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1b61);
        EXPECT(gbc.pc(), 0x76a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0064
        gbc.setState(0x6714, 0xc22b, 0x3fe0, 0x3046, 0xfeea, 0x5900, 0x0, 0x1);
        gbc.writeMem(0x6714, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0x6716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0065
        gbc.setState(0x768, 0x4946, 0x3870, 0x4353, 0x9b67, 0x8fc2, 0x1, 0x0);
        gbc.writeMem(0x768, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4946);
        EXPECT(gbc.pc(), 0x76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0066
        gbc.setState(0xa4fe, 0xc0b8, 0xb290, 0x3159, 0x109e, 0x3c77, 0x0, 0x0);
        gbc.writeMem(0xa4fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc0b8);
        EXPECT(gbc.pc(), 0xa500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4fe), 0xcb);
        EXPECT(gbc.readMem(0xa4ff), 0xac);
        // CB AC 0068
        gbc.setState(0x761, 0xc108, 0xe290, 0x1aac, 0x6c85, 0x723a, 0x0, 0x0);
        gbc.writeMem(0x761, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc108);
        EXPECT(gbc.pc(), 0x763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0069
        gbc.setState(0x6e89, 0x6273, 0x3dd0, 0x2d36, 0x1ce3, 0x30c0, 0x1, 0x0);
        gbc.writeMem(0x6e89, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6273);
        EXPECT(gbc.pc(), 0x6e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 006A
        gbc.setState(0xcfc5, 0xdfd0, 0x4dc0, 0x8a1b, 0xb73a, 0x4466, 0x0, 0x1);
        gbc.writeMem(0xcfc5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdfd0);
        EXPECT(gbc.pc(), 0xcfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfc5), 0xcb);
        EXPECT(gbc.readMem(0xcfc6), 0xac);
        // CB AC 006B
        gbc.setState(0xedfe, 0xf491, 0x4f20, 0xb447, 0x82cd, 0xeb88, 0x1, 0x0);
        gbc.writeMem(0xedfe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf491);
        EXPECT(gbc.pc(), 0xee00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfe), 0xcb);
        EXPECT(gbc.readMem(0xedff), 0xac);
        // CB AC 006C
        gbc.setState(0xb13, 0xf37, 0xe970, 0x6be6, 0xc7d9, 0x207c, 0x1, 0x0);
        gbc.writeMem(0xb13, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf37);
        EXPECT(gbc.pc(), 0xb15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 006D
        gbc.setState(0x1e94, 0xb1f8, 0x4440, 0x99b2, 0xb172, 0xe5b0, 0x1, 0x1);
        gbc.writeMem(0x1e94, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb1f8);
        EXPECT(gbc.pc(), 0x1e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 006E
        gbc.setState(0xad4b, 0xc870, 0x630, 0x461c, 0xd2f1, 0xae53, 0x0, 0x1);
        gbc.writeMem(0xad4b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc870);
        EXPECT(gbc.pc(), 0xad4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4b), 0xcb);
        EXPECT(gbc.readMem(0xad4c), 0xac);
        // CB AC 006F
        gbc.setState(0x6821, 0x61dd, 0x95f0, 0xd97f, 0x24dd, 0x2941, 0x1, 0x0);
        gbc.writeMem(0x6821, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x61dd);
        EXPECT(gbc.pc(), 0x6823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0070
        gbc.setState(0x9dc2, 0x4c38, 0xa980, 0x39bb, 0x3afe, 0x79ab, 0x0, 0x0);
        gbc.writeMem(0x9dc2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4c38);
        EXPECT(gbc.pc(), 0x9dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc2), 0xcb);
        EXPECT(gbc.readMem(0x9dc3), 0xac);
        // CB AC 0071
        gbc.setState(0x3899, 0xe7a3, 0xc7e0, 0x9a58, 0x6851, 0x752a, 0x1, 0x1);
        gbc.writeMem(0x3899, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe7a3);
        EXPECT(gbc.pc(), 0x389b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0072
        gbc.setState(0x4527, 0x2981, 0x6da0, 0xa17c, 0xbfaf, 0x48a, 0x0, 0x1);
        gbc.writeMem(0x4527, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2981);
        EXPECT(gbc.pc(), 0x4529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0073
        gbc.setState(0xe2d3, 0xab42, 0x61d0, 0x6ae2, 0x63f5, 0xd160, 0x0, 0x0);
        gbc.writeMem(0xe2d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xab42);
        EXPECT(gbc.pc(), 0xe2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d3), 0xcb);
        EXPECT(gbc.readMem(0xe2d4), 0xac);
        // CB AC 0074
        gbc.setState(0xb49c, 0xa786, 0xea20, 0x71c2, 0xdcee, 0xb4ae, 0x1, 0x1);
        gbc.writeMem(0xb49c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa786);
        EXPECT(gbc.pc(), 0xb49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49c), 0xcb);
        EXPECT(gbc.readMem(0xb49d), 0xac);
        // CB AC 0075
        gbc.setState(0x5502, 0x2ec0, 0xc420, 0x37d1, 0xd5aa, 0xdeb0, 0x1, 0x1);
        gbc.writeMem(0x5502, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2ec0);
        EXPECT(gbc.pc(), 0x5504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0076
        gbc.setState(0x3b5d, 0x174a, 0x2970, 0x74a0, 0x8b95, 0xabc5, 0x0, 0x1);
        gbc.writeMem(0x3b5d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x174a);
        EXPECT(gbc.pc(), 0x3b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0077
        gbc.setState(0xccd1, 0x7d22, 0x960, 0x3700, 0xeea3, 0xbf3, 0x0, 0x0);
        gbc.writeMem(0xccd1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7d22);
        EXPECT(gbc.pc(), 0xccd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd1), 0xcb);
        EXPECT(gbc.readMem(0xccd2), 0xac);
        // CB AC 007A
        gbc.setState(0x5549, 0x95f3, 0xfbe0, 0x97fb, 0x9d92, 0xcc31, 0x1, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x95f3);
        EXPECT(gbc.pc(), 0x554b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 007B
        gbc.setState(0x2582, 0x7ef6, 0x8d20, 0xb113, 0x6f1e, 0x5dc, 0x1, 0x0);
        gbc.writeMem(0x2582, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7ef6);
        EXPECT(gbc.pc(), 0x2584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 007C
        gbc.setState(0x812e, 0xe8fa, 0x6c60, 0xb6, 0x7a85, 0x76aa, 0x0, 0x0);
        gbc.writeMem(0x812e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe8fa);
        EXPECT(gbc.pc(), 0x8130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812e), 0xcb);
        EXPECT(gbc.readMem(0x812f), 0xac);
        // CB AC 007D
        gbc.setState(0x1280, 0xf54c, 0xb200, 0x825e, 0x693f, 0x3597, 0x1, 0x0);
        gbc.writeMem(0x1280, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf54c);
        EXPECT(gbc.pc(), 0x1282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 007E
        gbc.setState(0x5c48, 0xd632, 0x36b0, 0x5bc3, 0xfd79, 0xd8f8, 0x1, 0x1);
        gbc.writeMem(0x5c48, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd632);
        EXPECT(gbc.pc(), 0x5c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 007F
        gbc.setState(0xc5b8, 0xcb1d, 0x6770, 0x4d83, 0x614b, 0xe2b7, 0x1, 0x0);
        gbc.writeMem(0xc5b8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcb1d);
        EXPECT(gbc.pc(), 0xc5ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b8), 0xcb);
        EXPECT(gbc.readMem(0xc5b9), 0xac);
        // CB AC 0080
        gbc.setState(0xbd9f, 0x5744, 0x4b0, 0xb049, 0xe962, 0xae4b, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5744);
        EXPECT(gbc.pc(), 0xbda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd9f), 0xcb);
        EXPECT(gbc.readMem(0xbda0), 0xac);
        // CB AC 0081
        gbc.setState(0x10fa, 0xbb34, 0xd600, 0xe5f3, 0xfbd3, 0xde09, 0x0, 0x0);
        gbc.writeMem(0x10fa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xbb34);
        EXPECT(gbc.pc(), 0x10fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0082
        gbc.setState(0x7ee4, 0x7d1, 0x6a30, 0x4b25, 0xdc3, 0x226a, 0x0, 0x1);
        gbc.writeMem(0x7ee4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7d1);
        EXPECT(gbc.pc(), 0x7ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0083
        gbc.setState(0x6e16, 0xa977, 0x8d60, 0xa7c2, 0xe40e, 0xf222, 0x1, 0x1);
        gbc.writeMem(0x6e16, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa977);
        EXPECT(gbc.pc(), 0x6e18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0084
        gbc.setState(0x6074, 0x3b01, 0xdda0, 0xd464, 0x6dbb, 0xf0db, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3b01);
        EXPECT(gbc.pc(), 0x6076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0085
        gbc.setState(0xd346, 0xc554, 0x7640, 0x1290, 0xa28c, 0x9ad4, 0x0, 0x1);
        gbc.writeMem(0xd346, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc554);
        EXPECT(gbc.pc(), 0xd348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd346), 0xcb);
        EXPECT(gbc.readMem(0xd347), 0xac);
        // CB AC 0086
        gbc.setState(0x528f, 0x2b86, 0xe880, 0x1951, 0x9a16, 0xb1e2, 0x1, 0x0);
        gbc.writeMem(0x528f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2b86);
        EXPECT(gbc.pc(), 0x5291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0087
        gbc.setState(0xc402, 0xc4bb, 0xd300, 0x39c2, 0x3a4c, 0xc38d, 0x1, 0x1);
        gbc.writeMem(0xc402, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc4bb);
        EXPECT(gbc.pc(), 0xc404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc402), 0xcb);
        EXPECT(gbc.readMem(0xc403), 0xac);
        // CB AC 0088
        gbc.setState(0x5ecf, 0x7721, 0x2040, 0xafd2, 0x379c, 0xde91, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7721);
        EXPECT(gbc.pc(), 0x5ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0089
        gbc.setState(0x4896, 0x23a0, 0xea60, 0x68de, 0xc435, 0x9817, 0x0, 0x0);
        gbc.writeMem(0x4896, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x23a0);
        EXPECT(gbc.pc(), 0x4898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 008A
        gbc.setState(0x9ae5, 0x5d0f, 0xcfd0, 0xa637, 0x58ec, 0x8771, 0x0, 0x0);
        gbc.writeMem(0x9ae5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5d0f);
        EXPECT(gbc.pc(), 0x9ae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae5), 0xcb);
        EXPECT(gbc.readMem(0x9ae6), 0xac);
        // CB AC 008B
        gbc.setState(0xe38f, 0x4aaa, 0xd20, 0xc6d5, 0x3395, 0xec86, 0x0, 0x1);
        gbc.writeMem(0xe38f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4aaa);
        EXPECT(gbc.pc(), 0xe391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe38f), 0xcb);
        EXPECT(gbc.readMem(0xe390), 0xac);
        // CB AC 008C
        gbc.setState(0x7430, 0x6e25, 0xd450, 0xe2b8, 0xd4d7, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0x7430, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6e25);
        EXPECT(gbc.pc(), 0x7432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 008E
        gbc.setState(0xe8b0, 0x9f1c, 0xbd70, 0xf2ea, 0x5978, 0x8f24, 0x0, 0x0);
        gbc.writeMem(0xe8b0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9f1c);
        EXPECT(gbc.pc(), 0xe8b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b0), 0xcb);
        EXPECT(gbc.readMem(0xe8b1), 0xac);
        // CB AC 008F
        gbc.setState(0x5620, 0x4769, 0x3880, 0x3369, 0xf840, 0x71db, 0x1, 0x0);
        gbc.writeMem(0x5620, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4769);
        EXPECT(gbc.pc(), 0x5622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0090
        gbc.setState(0xa00b, 0x5123, 0xe680, 0xab9e, 0x6575, 0xfad6, 0x0, 0x1);
        gbc.writeMem(0xa00b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5123);
        EXPECT(gbc.pc(), 0xa00d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00b), 0xcb);
        EXPECT(gbc.readMem(0xa00c), 0xac);
        // CB AC 0091
        gbc.setState(0xdf1c, 0x3492, 0x7610, 0xfc06, 0xff68, 0xb636, 0x0, 0x1);
        gbc.writeMem(0xdf1c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3492);
        EXPECT(gbc.pc(), 0xdf1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf1c), 0xcb);
        EXPECT(gbc.readMem(0xdf1d), 0xac);
        // CB AC 0092
        gbc.setState(0xa801, 0xfcb3, 0x2ee0, 0x439d, 0x74bd, 0x72e2, 0x0, 0x0);
        gbc.writeMem(0xa801, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xfcb3);
        EXPECT(gbc.pc(), 0xa803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa801), 0xcb);
        EXPECT(gbc.readMem(0xa802), 0xac);
        // CB AC 0093
        gbc.setState(0x3e15, 0x467d, 0xb1a0, 0xca29, 0x5b24, 0xceb4, 0x1, 0x1);
        gbc.writeMem(0x3e15, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x467d);
        EXPECT(gbc.pc(), 0x3e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0094
        gbc.setState(0x18ef, 0xb5b9, 0x66e0, 0x12a2, 0x836f, 0x91fd, 0x1, 0x0);
        gbc.writeMem(0x18ef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb5b9);
        EXPECT(gbc.pc(), 0x18f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0095
        gbc.setState(0x6f9b, 0x41fd, 0xaa00, 0x1fc1, 0x3aa3, 0xc697, 0x0, 0x1);
        gbc.writeMem(0x6f9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x6f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0096
        gbc.setState(0xcc6e, 0xde1, 0xf8f0, 0x1a55, 0xa190, 0xfb61, 0x0, 0x0);
        gbc.writeMem(0xcc6e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0xcc70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc6e), 0xcb);
        EXPECT(gbc.readMem(0xcc6f), 0xac);
        // CB AC 0097
        gbc.setState(0x8507, 0x8f85, 0xca80, 0xd816, 0xdbcf, 0xbe0d, 0x1, 0x1);
        gbc.writeMem(0x8507, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0x8509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8507), 0xcb);
        EXPECT(gbc.readMem(0x8508), 0xac);
        // CB AC 0098
        gbc.setState(0x9ec5, 0x7860, 0x6b30, 0x5a8f, 0xc075, 0x96cf, 0x1, 0x1);
        gbc.writeMem(0x9ec5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7860);
        EXPECT(gbc.pc(), 0x9ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec5), 0xcb);
        EXPECT(gbc.readMem(0x9ec6), 0xac);
        // CB AC 0099
        gbc.setState(0x4ff3, 0xdf7f, 0xee50, 0x7cb3, 0x3afb, 0x407, 0x1, 0x1);
        gbc.writeMem(0x4ff3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdf7f);
        EXPECT(gbc.pc(), 0x4ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 009A
        gbc.setState(0xe739, 0x67c, 0x7810, 0xf460, 0x60d0, 0x95fa, 0x0, 0x1);
        gbc.writeMem(0xe739, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x67c);
        EXPECT(gbc.pc(), 0xe73b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe739), 0xcb);
        EXPECT(gbc.readMem(0xe73a), 0xac);
        // CB AC 009B
        gbc.setState(0x7181, 0x74be, 0x7590, 0x8a5e, 0x9e34, 0xe5ca, 0x0, 0x1);
        gbc.writeMem(0x7181, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x74be);
        EXPECT(gbc.pc(), 0x7183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 009C
        gbc.setState(0x8fb8, 0xaad7, 0x1a50, 0xd53a, 0x2391, 0x6d7f, 0x1, 0x1);
        gbc.writeMem(0x8fb8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaad7);
        EXPECT(gbc.pc(), 0x8fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb8), 0xcb);
        EXPECT(gbc.readMem(0x8fb9), 0xac);
        // CB AC 009D
        gbc.setState(0xa382, 0xa1dc, 0x9440, 0xd8e9, 0xcb10, 0x27bd, 0x1, 0x1);
        gbc.writeMem(0xa382, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xa1dc);
        EXPECT(gbc.pc(), 0xa384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa382), 0xcb);
        EXPECT(gbc.readMem(0xa383), 0xac);
        // CB AC 009E
        gbc.setState(0xc8f, 0xae21, 0x13d0, 0x5186, 0x95b4, 0x89ed, 0x1, 0x0);
        gbc.writeMem(0xc8f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xae21);
        EXPECT(gbc.pc(), 0xc91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 009F
        gbc.setState(0xb658, 0x21ee, 0xb6e0, 0x94fd, 0x533f, 0x2be9, 0x0, 0x0);
        gbc.writeMem(0xb658, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x21ee);
        EXPECT(gbc.pc(), 0xb65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb658), 0xcb);
        EXPECT(gbc.readMem(0xb659), 0xac);
        // CB AC 00A0
        gbc.setState(0x6d9d, 0xdcf, 0xf440, 0xc0fc, 0xde1f, 0xc416, 0x0, 0x1);
        gbc.writeMem(0x6d9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdcf);
        EXPECT(gbc.pc(), 0x6d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00A1
        gbc.setState(0x4750, 0x2e5f, 0xfdb0, 0xb106, 0x516a, 0xec17, 0x1, 0x1);
        gbc.writeMem(0x4750, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x4752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00A2
        gbc.setState(0xbd16, 0xc359, 0x8590, 0x9b4, 0x2c11, 0xd398, 0x1, 0x0);
        gbc.writeMem(0xbd16, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc359);
        EXPECT(gbc.pc(), 0xbd18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd16), 0xcb);
        EXPECT(gbc.readMem(0xbd17), 0xac);
        // CB AC 00A3
        gbc.setState(0x1d45, 0x3168, 0x94a0, 0xbc2b, 0x9b47, 0x4dc6, 0x0, 0x0);
        gbc.writeMem(0x1d45, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3168);
        EXPECT(gbc.pc(), 0x1d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00A4
        gbc.setState(0xc11c, 0xd524, 0xcd40, 0xd955, 0x76f, 0x344c, 0x1, 0x1);
        gbc.writeMem(0xc11c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd524);
        EXPECT(gbc.pc(), 0xc11e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc11c), 0xcb);
        EXPECT(gbc.readMem(0xc11d), 0xac);
        // CB AC 00A5
        gbc.setState(0x7e9a, 0xa51a, 0xf540, 0x5108, 0xda1d, 0xf250, 0x1, 0x1);
        gbc.writeMem(0x7e9a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa51a);
        EXPECT(gbc.pc(), 0x7e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00A6
        gbc.setState(0xd91f, 0xe8f7, 0x4910, 0x583a, 0x485c, 0x4a27, 0x0, 0x1);
        gbc.writeMem(0xd91f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe8f7);
        EXPECT(gbc.pc(), 0xd921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd91f), 0xcb);
        EXPECT(gbc.readMem(0xd920), 0xac);
        // CB AC 00A8
        gbc.setState(0x8777, 0x4772, 0xe270, 0xeb28, 0x86d4, 0x1262, 0x1, 0x0);
        gbc.writeMem(0x8777, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4772);
        EXPECT(gbc.pc(), 0x8779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8777), 0xcb);
        EXPECT(gbc.readMem(0x8778), 0xac);
        // CB AC 00A9
        gbc.setState(0x31bc, 0x33a9, 0x2790, 0x2434, 0xaf99, 0xce86, 0x0, 0x0);
        gbc.writeMem(0x31bc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x33a9);
        EXPECT(gbc.pc(), 0x31be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00AA
        gbc.setState(0x2c37, 0x3c89, 0x4870, 0x1dd5, 0xaf3d, 0xa3b9, 0x1, 0x1);
        gbc.writeMem(0x2c37, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3c89);
        EXPECT(gbc.pc(), 0x2c39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00AB
        gbc.setState(0x3886, 0x6cf7, 0x9930, 0xd539, 0xaab9, 0x2c11, 0x0, 0x0);
        gbc.writeMem(0x3886, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6cf7);
        EXPECT(gbc.pc(), 0x3888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00AC
        gbc.setState(0x9b1e, 0xe08, 0x1fe0, 0xe3e9, 0x43ff, 0x6b0f, 0x1, 0x0);
        gbc.writeMem(0x9b1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe08);
        EXPECT(gbc.pc(), 0x9b20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b1e), 0xcb);
        EXPECT(gbc.readMem(0x9b1f), 0xac);
        // CB AC 00AD
        gbc.setState(0xc729, 0xd22b, 0xd60, 0xa7a0, 0x644, 0xbf40, 0x0, 0x1);
        gbc.writeMem(0xc729, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd22b);
        EXPECT(gbc.pc(), 0xc72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc729), 0xcb);
        EXPECT(gbc.readMem(0xc72a), 0xac);
        // CB AC 00AE
        gbc.setState(0x1415, 0x8302, 0xa520, 0x9dc9, 0x7d2d, 0xb367, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8302);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00B0
        gbc.setState(0x46fb, 0x1d2e, 0x7af0, 0x8b04, 0xcdfd, 0xb518, 0x0, 0x1);
        gbc.writeMem(0x46fb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1d2e);
        EXPECT(gbc.pc(), 0x46fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00B1
        gbc.setState(0x9558, 0x6bd4, 0xbc00, 0x7b7e, 0x25dc, 0x6155, 0x0, 0x1);
        gbc.writeMem(0x9558, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6bd4);
        EXPECT(gbc.pc(), 0x955a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9558), 0xcb);
        EXPECT(gbc.readMem(0x9559), 0xac);
        // CB AC 00B2
        gbc.setState(0xa3b3, 0x1f27, 0x9710, 0x4935, 0xb346, 0x32a5, 0x0, 0x1);
        gbc.writeMem(0xa3b3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1f27);
        EXPECT(gbc.pc(), 0xa3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b3), 0xcb);
        EXPECT(gbc.readMem(0xa3b4), 0xac);
        // CB AC 00B3
        gbc.setState(0x8a5f, 0x7fe1, 0x420, 0x6188, 0xe28c, 0x137b, 0x1, 0x0);
        gbc.writeMem(0x8a5f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7fe1);
        EXPECT(gbc.pc(), 0x8a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5f), 0xcb);
        EXPECT(gbc.readMem(0x8a60), 0xac);
        // CB AC 00B4
        gbc.setState(0x6f07, 0xc14d, 0x2610, 0x7c12, 0xfc8d, 0x31bd, 0x1, 0x1);
        gbc.writeMem(0x6f07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc14d);
        EXPECT(gbc.pc(), 0x6f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00B5
        gbc.setState(0xabec, 0xb3da, 0xa8c0, 0xe2de, 0xdbbd, 0xffe7, 0x1, 0x1);
        gbc.writeMem(0xabec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb3da);
        EXPECT(gbc.pc(), 0xabee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabec), 0xcb);
        EXPECT(gbc.readMem(0xabed), 0xac);
        // CB AC 00B6
        gbc.setState(0x1296, 0xafd8, 0x98e0, 0x1514, 0x6bde, 0xda67, 0x1, 0x1);
        gbc.writeMem(0x1296, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xafd8);
        EXPECT(gbc.pc(), 0x1298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00B7
        gbc.setState(0x6ca7, 0x68c, 0xbb30, 0x8db1, 0x5ff3, 0xc734, 0x0, 0x1);
        gbc.writeMem(0x6ca7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x68c);
        EXPECT(gbc.pc(), 0x6ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00B8
        gbc.setState(0x7542, 0x3b36, 0x5900, 0x83c2, 0xfdf3, 0xc77d, 0x1, 0x1);
        gbc.writeMem(0x7542, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3b36);
        EXPECT(gbc.pc(), 0x7544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00B9
        gbc.setState(0x9659, 0x29af, 0x5a10, 0x5869, 0xdc8c, 0x5c0e, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x29af);
        EXPECT(gbc.pc(), 0x965b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9659), 0xcb);
        EXPECT(gbc.readMem(0x965a), 0xac);
        // CB AC 00BA
        gbc.setState(0xd054, 0x1845, 0x66f0, 0xeab2, 0x5bab, 0x94ca, 0x1, 0x1);
        gbc.writeMem(0xd054, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1845);
        EXPECT(gbc.pc(), 0xd056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd054), 0xcb);
        EXPECT(gbc.readMem(0xd055), 0xac);
        // CB AC 00BB
        gbc.setState(0x80b9, 0x62d8, 0x98d0, 0x10ab, 0xef4, 0xc07a, 0x1, 0x0);
        gbc.writeMem(0x80b9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x62d8);
        EXPECT(gbc.pc(), 0x80bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b9), 0xcb);
        EXPECT(gbc.readMem(0x80ba), 0xac);
        // CB AC 00BC
        gbc.setState(0x5337, 0x8307, 0x9e10, 0x7381, 0x13e5, 0xc26e, 0x0, 0x1);
        gbc.writeMem(0x5337, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8307);
        EXPECT(gbc.pc(), 0x5339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00BD
        gbc.setState(0x5898, 0x4a1f, 0xe990, 0x6171, 0xf8b1, 0x9aee, 0x0, 0x0);
        gbc.writeMem(0x5898, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4a1f);
        EXPECT(gbc.pc(), 0x589a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00BE
        gbc.setState(0x9883, 0x12d, 0xf270, 0x5ed7, 0x8848, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0x9883, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x12d);
        EXPECT(gbc.pc(), 0x9885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9883), 0xcb);
        EXPECT(gbc.readMem(0x9884), 0xac);
        // CB AC 00BF
        gbc.setState(0xa259, 0xf8ae, 0xbe40, 0x889c, 0xb633, 0xd3fd, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf8ae);
        EXPECT(gbc.pc(), 0xa25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa259), 0xcb);
        EXPECT(gbc.readMem(0xa25a), 0xac);
        // CB AC 00C0
        gbc.setState(0x9aaf, 0x75ba, 0xed40, 0x2170, 0xf09f, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0x9aaf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x75ba);
        EXPECT(gbc.pc(), 0x9ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aaf), 0xcb);
        EXPECT(gbc.readMem(0x9ab0), 0xac);
        // CB AC 00C1
        gbc.setState(0x639b, 0x29b2, 0xb130, 0x7ac8, 0x7f0f, 0x24c9, 0x1, 0x1);
        gbc.writeMem(0x639b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x29b2);
        EXPECT(gbc.pc(), 0x639d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00C2
        gbc.setState(0xe3e1, 0x919c, 0xba00, 0x3e53, 0xfb7f, 0xe983, 0x0, 0x1);
        gbc.writeMem(0xe3e1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x919c);
        EXPECT(gbc.pc(), 0xe3e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3e1), 0xcb);
        EXPECT(gbc.readMem(0xe3e2), 0xac);
        // CB AC 00C3
        gbc.setState(0x3ff1, 0xfcd7, 0x9db0, 0x9a93, 0xe7e, 0xb92, 0x0, 0x0);
        gbc.writeMem(0x3ff1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfcd7);
        EXPECT(gbc.pc(), 0x3ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00C4
        gbc.setState(0x670, 0x9ddf, 0xfcd0, 0x81cc, 0x74e3, 0x9d1e, 0x1, 0x1);
        gbc.writeMem(0x670, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9ddf);
        EXPECT(gbc.pc(), 0x672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00C5
        gbc.setState(0x568b, 0x944b, 0x750, 0x25b7, 0x6a4, 0xbb75, 0x1, 0x0);
        gbc.writeMem(0x568b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x944b);
        EXPECT(gbc.pc(), 0x568d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00C6
        gbc.setState(0xc4ec, 0x4025, 0x6e30, 0x1654, 0x5fba, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0xc4ec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4025);
        EXPECT(gbc.pc(), 0xc4ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ec), 0xcb);
        EXPECT(gbc.readMem(0xc4ed), 0xac);
        // CB AC 00C7
        gbc.setState(0xfc9, 0xb9fc, 0xc200, 0x6d0e, 0x740d, 0xb859, 0x0, 0x1);
        gbc.writeMem(0xfc9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb9fc);
        EXPECT(gbc.pc(), 0xfcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00C8
        gbc.setState(0xbe3d, 0xf165, 0x2110, 0xaf0a, 0xdbd3, 0x2344, 0x0, 0x1);
        gbc.writeMem(0xbe3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf165);
        EXPECT(gbc.pc(), 0xbe3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe3d), 0xcb);
        EXPECT(gbc.readMem(0xbe3e), 0xac);
        // CB AC 00C9
        gbc.setState(0xb01c, 0x5312, 0xb180, 0x856c, 0xc24b, 0x2db4, 0x1, 0x1);
        gbc.writeMem(0xb01c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5312);
        EXPECT(gbc.pc(), 0xb01e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01c), 0xcb);
        EXPECT(gbc.readMem(0xb01d), 0xac);
        // CB AC 00CA
        gbc.setState(0x615c, 0x33d8, 0xe5e0, 0xc974, 0x6331, 0x9bc6, 0x1, 0x1);
        gbc.writeMem(0x615c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x33d8);
        EXPECT(gbc.pc(), 0x615e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00CB
        gbc.setState(0x1701, 0xfe5f, 0x3860, 0x3503, 0x20cf, 0x20e1, 0x1, 0x1);
        gbc.writeMem(0x1701, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe5f);
        EXPECT(gbc.pc(), 0x1703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00CC
        gbc.setState(0x74d3, 0x25c3, 0xc140, 0xa585, 0x1dc8, 0x4058, 0x0, 0x0);
        gbc.writeMem(0x74d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x25c3);
        EXPECT(gbc.pc(), 0x74d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00CD
        gbc.setState(0x76e4, 0xe1dc, 0x4b30, 0xe0a8, 0x240a, 0x44a4, 0x0, 0x1);
        gbc.writeMem(0x76e4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe1dc);
        EXPECT(gbc.pc(), 0x76e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00CE
        gbc.setState(0xaa3c, 0x490a, 0x2df0, 0xb28c, 0xa500, 0x7cbe, 0x1, 0x1);
        gbc.writeMem(0xaa3c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x490a);
        EXPECT(gbc.pc(), 0xaa3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3c), 0xcb);
        EXPECT(gbc.readMem(0xaa3d), 0xac);
        // CB AC 00CF
        gbc.setState(0x45a3, 0xd4ec, 0xd170, 0xf98, 0x210, 0x519b, 0x1, 0x0);
        gbc.writeMem(0x45a3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd4ec);
        EXPECT(gbc.pc(), 0x45a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00D0
        gbc.setState(0xdcef, 0xaca6, 0xdc70, 0xf8ac, 0x1457, 0x4213, 0x0, 0x0);
        gbc.writeMem(0xdcef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xaca6);
        EXPECT(gbc.pc(), 0xdcf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcef), 0xcb);
        EXPECT(gbc.readMem(0xdcf0), 0xac);
        // CB AC 00D1
        gbc.setState(0xeae2, 0xdbac, 0x5410, 0xb196, 0x1198, 0xd76e, 0x1, 0x1);
        gbc.writeMem(0xeae2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdbac);
        EXPECT(gbc.pc(), 0xeae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae2), 0xcb);
        EXPECT(gbc.readMem(0xeae3), 0xac);
        // CB AC 00D2
        gbc.setState(0xb412, 0x59, 0xdb20, 0x4aee, 0xb4eb, 0xb991, 0x1, 0x0);
        gbc.writeMem(0xb412, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x59);
        EXPECT(gbc.pc(), 0xb414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb412), 0xcb);
        EXPECT(gbc.readMem(0xb413), 0xac);
        // CB AC 00D3
        gbc.setState(0xfd3, 0xd463, 0x9740, 0x6cf4, 0x1b5, 0x9127, 0x0, 0x0);
        gbc.writeMem(0xfd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd463);
        EXPECT(gbc.pc(), 0xfd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00D4
        gbc.setState(0x9dc4, 0xfea8, 0xac50, 0x33d9, 0x86fa, 0x95a9, 0x1, 0x0);
        gbc.writeMem(0x9dc4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfea8);
        EXPECT(gbc.pc(), 0x9dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc4), 0xcb);
        EXPECT(gbc.readMem(0x9dc5), 0xac);
        // CB AC 00D5
        gbc.setState(0x571b, 0xadce, 0x6af0, 0x798b, 0xe8a1, 0x7041, 0x1, 0x1);
        gbc.writeMem(0x571b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xadce);
        EXPECT(gbc.pc(), 0x571d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00D6
        gbc.setState(0xa430, 0x32c6, 0x270, 0x4b17, 0xb334, 0xffee, 0x1, 0x0);
        gbc.writeMem(0xa430, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x32c6);
        EXPECT(gbc.pc(), 0xa432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa430), 0xcb);
        EXPECT(gbc.readMem(0xa431), 0xac);
        // CB AC 00D7
        gbc.setState(0x3160, 0xf78, 0xe880, 0x9147, 0x4a6f, 0x3f2a, 0x1, 0x1);
        gbc.writeMem(0x3160, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf78);
        EXPECT(gbc.pc(), 0x3162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00D8
        gbc.setState(0x258d, 0xda29, 0xa510, 0xdde3, 0xc656, 0xb43f, 0x1, 0x0);
        gbc.writeMem(0x258d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xda29);
        EXPECT(gbc.pc(), 0x258f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00D9
        gbc.setState(0xa714, 0xc380, 0x9170, 0x3c27, 0xb7a0, 0x5615, 0x0, 0x0);
        gbc.writeMem(0xa714, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc380);
        EXPECT(gbc.pc(), 0xa716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa714), 0xcb);
        EXPECT(gbc.readMem(0xa715), 0xac);
        // CB AC 00DA
        gbc.setState(0xcae5, 0xb823, 0x8c80, 0x3fc, 0xd2ff, 0xca7, 0x0, 0x0);
        gbc.writeMem(0xcae5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb823);
        EXPECT(gbc.pc(), 0xcae7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcae5), 0xcb);
        EXPECT(gbc.readMem(0xcae6), 0xac);
        // CB AC 00DB
        gbc.setState(0x6ec8, 0x6115, 0x37f0, 0xea81, 0x883c, 0x66a9, 0x0, 0x1);
        gbc.writeMem(0x6ec8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6115);
        EXPECT(gbc.pc(), 0x6eca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00DC
        gbc.setState(0xcec, 0xf5ab, 0x2a70, 0xc6c2, 0x83e8, 0xfcb9, 0x0, 0x0);
        gbc.writeMem(0xcec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf5ab);
        EXPECT(gbc.pc(), 0xcee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00DD
        gbc.setState(0xb31f, 0x5a0f, 0x3460, 0x6d33, 0xc364, 0xaf83, 0x0, 0x0);
        gbc.writeMem(0xb31f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5a0f);
        EXPECT(gbc.pc(), 0xb321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb31f), 0xcb);
        EXPECT(gbc.readMem(0xb320), 0xac);
        // CB AC 00DE
        gbc.setState(0x65f9, 0xbdb1, 0xf0a0, 0x3bb9, 0xf67a, 0xd555, 0x1, 0x0);
        gbc.writeMem(0x65f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xbdb1);
        EXPECT(gbc.pc(), 0x65fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00DF
        gbc.setState(0xed43, 0xb7da, 0x73a0, 0x752d, 0xfdd2, 0xc3e2, 0x1, 0x0);
        gbc.writeMem(0xed43, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb7da);
        EXPECT(gbc.pc(), 0xed45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed43), 0xcb);
        EXPECT(gbc.readMem(0xed44), 0xac);
        // CB AC 00E1
        gbc.setState(0x733f, 0xb62d, 0x1070, 0xd17b, 0xfe2b, 0x85f9, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb62d);
        EXPECT(gbc.pc(), 0x7341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00E2
        gbc.setState(0x1166, 0x5d34, 0x4440, 0x16e2, 0x2c51, 0x4216, 0x1, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5d34);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00E3
        gbc.setState(0xb640, 0xcabd, 0xd610, 0x8a54, 0x4e9d, 0x1bb2, 0x1, 0x1);
        gbc.writeMem(0xb640, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcabd);
        EXPECT(gbc.pc(), 0xb642);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb640), 0xcb);
        EXPECT(gbc.readMem(0xb641), 0xac);
        // CB AC 00E4
        gbc.setState(0xdf01, 0xf44, 0x9380, 0x67c6, 0xd3d6, 0x487e, 0x1, 0x0);
        gbc.writeMem(0xdf01, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf44);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf01), 0xcb);
        EXPECT(gbc.readMem(0xdf02), 0xac);
        // CB AC 00E5
        gbc.setState(0xdd78, 0xda1d, 0xe460, 0xe7c8, 0x95fb, 0x3add, 0x1, 0x1);
        gbc.writeMem(0xdd78, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xda1d);
        EXPECT(gbc.pc(), 0xdd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd78), 0xcb);
        EXPECT(gbc.readMem(0xdd79), 0xac);
        // CB AC 00E6
        gbc.setState(0x60c1, 0x807d, 0x8780, 0x882f, 0x4e32, 0xc51d, 0x1, 0x1);
        gbc.writeMem(0x60c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x807d);
        EXPECT(gbc.pc(), 0x60c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00E7
        gbc.setState(0x2444, 0x6634, 0xef0, 0xee55, 0x171b, 0x2499, 0x0, 0x1);
        gbc.writeMem(0x2444, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6634);
        EXPECT(gbc.pc(), 0x2446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00E8
        gbc.setState(0x9dc1, 0x3fac, 0x6780, 0xf3f4, 0xcc47, 0xf8c1, 0x1, 0x1);
        gbc.writeMem(0x9dc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3fac);
        EXPECT(gbc.pc(), 0x9dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc1), 0xcb);
        EXPECT(gbc.readMem(0x9dc2), 0xac);
        // CB AC 00E9
        gbc.setState(0xaf90, 0x3dc6, 0xc9e0, 0xfd03, 0xc5e8, 0x2efc, 0x0, 0x1);
        gbc.writeMem(0xaf90, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3dc6);
        EXPECT(gbc.pc(), 0xaf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf90), 0xcb);
        EXPECT(gbc.readMem(0xaf91), 0xac);
        // CB AC 00EB
        gbc.setState(0x18d, 0x229e, 0x6450, 0xf372, 0xc6b1, 0xb890, 0x1, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x229e);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00EC
        gbc.setState(0x54ee, 0xbb8, 0x6070, 0xab07, 0x9b12, 0x436c, 0x1, 0x0);
        gbc.writeMem(0x54ee, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbb8);
        EXPECT(gbc.pc(), 0x54f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00ED
        gbc.setState(0xd635, 0x34da, 0xc0e0, 0x2267, 0x96ec, 0x7999, 0x1, 0x0);
        gbc.writeMem(0xd635, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x34da);
        EXPECT(gbc.pc(), 0xd637);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd635), 0xcb);
        EXPECT(gbc.readMem(0xd636), 0xac);
        // CB AC 00EE
        gbc.setState(0x3943, 0x322f, 0xeb90, 0x8db9, 0xeb48, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0x3943, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x322f);
        EXPECT(gbc.pc(), 0x3945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00EF
        gbc.setState(0xe31b, 0xd8aa, 0x4590, 0x339f, 0xf52, 0xfe2d, 0x1, 0x0);
        gbc.writeMem(0xe31b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd8aa);
        EXPECT(gbc.pc(), 0xe31d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe31b), 0xcb);
        EXPECT(gbc.readMem(0xe31c), 0xac);
        // CB AC 00F1
        gbc.setState(0x47c6, 0xf9af, 0x7f0, 0x2109, 0x4da8, 0xc20, 0x1, 0x1);
        gbc.writeMem(0x47c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf9af);
        EXPECT(gbc.pc(), 0x47c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00F3
        gbc.setState(0xa3fc, 0x6453, 0xa670, 0x2b10, 0xe6b9, 0x5b20, 0x0, 0x1);
        gbc.writeMem(0xa3fc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6453);
        EXPECT(gbc.pc(), 0xa3fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3fc), 0xcb);
        EXPECT(gbc.readMem(0xa3fd), 0xac);
        // CB AC 00F4
        gbc.setState(0x43e5, 0x702, 0x3c60, 0xba7, 0x6823, 0xd044, 0x1, 0x1);
        gbc.writeMem(0x43e5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x702);
        EXPECT(gbc.pc(), 0x43e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00F5
        gbc.setState(0x926c, 0xc449, 0x6700, 0x968, 0x943b, 0x2573, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc449);
        EXPECT(gbc.pc(), 0x926e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926c), 0xcb);
        EXPECT(gbc.readMem(0x926d), 0xac);
        // CB AC 00F6
        gbc.setState(0x768f, 0x3a72, 0xc6b0, 0xd54, 0xa231, 0x7921, 0x1, 0x1);
        gbc.writeMem(0x768f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3a72);
        EXPECT(gbc.pc(), 0x7691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00F7
        gbc.setState(0x8465, 0xfd68, 0xd180, 0x9bc5, 0xcd09, 0x716f, 0x1, 0x1);
        gbc.writeMem(0x8465, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfd68);
        EXPECT(gbc.pc(), 0x8467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8465), 0xcb);
        EXPECT(gbc.readMem(0x8466), 0xac);
        // CB AC 00F8
        gbc.setState(0xa899, 0x1f8d, 0x4360, 0x7c69, 0x69d3, 0xbeef, 0x0, 0x1);
        gbc.writeMem(0xa899, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1f8d);
        EXPECT(gbc.pc(), 0xa89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa899), 0xcb);
        EXPECT(gbc.readMem(0xa89a), 0xac);
        // CB AC 00F9
        gbc.setState(0x4507, 0x150e, 0xe300, 0x13eb, 0xd4a, 0x497d, 0x0, 0x1);
        gbc.writeMem(0x4507, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x150e);
        EXPECT(gbc.pc(), 0x4509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00FA
        gbc.setState(0x3ae1, 0xf883, 0xcc0, 0xe3e5, 0x186f, 0x76c2, 0x1, 0x1);
        gbc.writeMem(0x3ae1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf883);
        EXPECT(gbc.pc(), 0x3ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00FB
        gbc.setState(0x7889, 0x53d4, 0x7ec0, 0x5129, 0x7fa2, 0x14c4, 0x1, 0x0);
        gbc.writeMem(0x7889, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x53d4);
        EXPECT(gbc.pc(), 0x788b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 00FC
        gbc.setState(0x1e7f, 0xe89a, 0x9fd0, 0xfc64, 0x18d5, 0x89a3, 0x1, 0x1);
        gbc.writeMem(0x1e7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe89a);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 00FD
        gbc.setState(0xc31e, 0x7a31, 0xcfb0, 0x8138, 0xff91, 0x9f83, 0x1, 0x0);
        gbc.writeMem(0xc31e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7a31);
        EXPECT(gbc.pc(), 0xc320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc31e), 0xcb);
        EXPECT(gbc.readMem(0xc31f), 0xac);
        // CB AC 00FE
        gbc.setState(0xd9bf, 0x5284, 0x6bc0, 0x3771, 0x1caf, 0x7e3b, 0x0, 0x0);
        gbc.writeMem(0xd9bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5284);
        EXPECT(gbc.pc(), 0xd9c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bf), 0xcb);
        EXPECT(gbc.readMem(0xd9c0), 0xac);
        // CB AC 00FF
        gbc.setState(0xc5cd, 0x5223, 0x2700, 0x5abf, 0x5525, 0x3da2, 0x0, 0x0);
        gbc.writeMem(0xc5cd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5223);
        EXPECT(gbc.pc(), 0xc5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5cd), 0xcb);
        EXPECT(gbc.readMem(0xc5ce), 0xac);
        // CB AC 0100
        gbc.setState(0xfd1, 0x7ef6, 0xa600, 0xdca0, 0x5c29, 0x5c10, 0x1, 0x1);
        gbc.writeMem(0xfd1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7ef6);
        EXPECT(gbc.pc(), 0xfd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0101
        gbc.setState(0x8fe6, 0xbfc8, 0xcf00, 0x5277, 0x7b73, 0x3343, 0x0, 0x0);
        gbc.writeMem(0x8fe6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbfc8);
        EXPECT(gbc.pc(), 0x8fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe6), 0xcb);
        EXPECT(gbc.readMem(0x8fe7), 0xac);
        // CB AC 0102
        gbc.setState(0xd9ca, 0x847d, 0x3c80, 0xace3, 0x440c, 0xb3e8, 0x1, 0x1);
        gbc.writeMem(0xd9ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x847d);
        EXPECT(gbc.pc(), 0xd9cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ca), 0xcb);
        EXPECT(gbc.readMem(0xd9cb), 0xac);
        // CB AC 0103
        gbc.setState(0x3c35, 0x6a06, 0xbf40, 0xd303, 0x5979, 0xec12, 0x1, 0x1);
        gbc.writeMem(0x3c35, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6a06);
        EXPECT(gbc.pc(), 0x3c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0104
        gbc.setState(0x25bf, 0x807e, 0xc5b0, 0x52a4, 0x68e6, 0x7911, 0x0, 0x0);
        gbc.writeMem(0x25bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x807e);
        EXPECT(gbc.pc(), 0x25c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0105
        gbc.setState(0xd4b1, 0x93db, 0xc0, 0xb1cd, 0x135f, 0x25d0, 0x0, 0x0);
        gbc.writeMem(0xd4b1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x93db);
        EXPECT(gbc.pc(), 0xd4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b1), 0xcb);
        EXPECT(gbc.readMem(0xd4b2), 0xac);
        // CB AC 0106
        gbc.setState(0xc6c8, 0x9c48, 0x5220, 0xb562, 0x2c81, 0xd779, 0x0, 0x1);
        gbc.writeMem(0xc6c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9c48);
        EXPECT(gbc.pc(), 0xc6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c8), 0xcb);
        EXPECT(gbc.readMem(0xc6c9), 0xac);
        // CB AC 0107
        gbc.setState(0xaa28, 0x8bef, 0xc970, 0xce0f, 0xca38, 0x5331, 0x1, 0x1);
        gbc.writeMem(0xaa28, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8bef);
        EXPECT(gbc.pc(), 0xaa2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa28), 0xcb);
        EXPECT(gbc.readMem(0xaa29), 0xac);
        // CB AC 0108
        gbc.setState(0x99d5, 0x5a88, 0x29b0, 0x42b3, 0xa14d, 0x3b80, 0x1, 0x1);
        gbc.writeMem(0x99d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5a88);
        EXPECT(gbc.pc(), 0x99d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d5), 0xcb);
        EXPECT(gbc.readMem(0x99d6), 0xac);
        // CB AC 0109
        gbc.setState(0x163c, 0x38a3, 0x2300, 0xda45, 0x348a, 0x4ff7, 0x0, 0x1);
        gbc.writeMem(0x163c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0x163e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 010A
        gbc.setState(0x81c5, 0xf835, 0x2860, 0xfed5, 0xbbe5, 0xf66d, 0x0, 0x1);
        gbc.writeMem(0x81c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf835);
        EXPECT(gbc.pc(), 0x81c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81c5), 0xcb);
        EXPECT(gbc.readMem(0x81c6), 0xac);
        // CB AC 010B
        gbc.setState(0x4ea0, 0x8ec5, 0x6220, 0x8686, 0xb5e3, 0x4615, 0x1, 0x0);
        gbc.writeMem(0x4ea0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8ec5);
        EXPECT(gbc.pc(), 0x4ea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 010C
        gbc.setState(0x24e5, 0x8215, 0xc230, 0x6416, 0xbef0, 0x8b39, 0x1, 0x0);
        gbc.writeMem(0x24e5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8215);
        EXPECT(gbc.pc(), 0x24e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 010D
        gbc.setState(0x971f, 0x7c7c, 0x1100, 0xc1a1, 0xade6, 0x49aa, 0x1, 0x1);
        gbc.writeMem(0x971f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7c7c);
        EXPECT(gbc.pc(), 0x9721);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971f), 0xcb);
        EXPECT(gbc.readMem(0x9720), 0xac);
        // CB AC 010E
        gbc.setState(0xed7, 0x117f, 0x59a0, 0x986e, 0x5eee, 0x2a3a, 0x0, 0x1);
        gbc.writeMem(0xed7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x117f);
        EXPECT(gbc.pc(), 0xed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 010F
        gbc.setState(0x531c, 0xf912, 0x2bc0, 0x62d3, 0x9593, 0xb9e, 0x1, 0x0);
        gbc.writeMem(0x531c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf912);
        EXPECT(gbc.pc(), 0x531e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0110
        gbc.setState(0x6424, 0x6502, 0x180, 0xb274, 0xd576, 0x45a2, 0x0, 0x1);
        gbc.writeMem(0x6424, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x6502);
        EXPECT(gbc.pc(), 0x6426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0111
        gbc.setState(0xebf0, 0x4fc0, 0xed20, 0xe81f, 0xe3f1, 0x630f, 0x0, 0x1);
        gbc.writeMem(0xebf0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x4fc0);
        EXPECT(gbc.pc(), 0xebf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf0), 0xcb);
        EXPECT(gbc.readMem(0xebf1), 0xac);
        // CB AC 0112
        gbc.setState(0x98ec, 0x19b3, 0x5a10, 0xffb4, 0x9d15, 0x5d5e, 0x0, 0x1);
        gbc.writeMem(0x98ec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x19b3);
        EXPECT(gbc.pc(), 0x98ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ec), 0xcb);
        EXPECT(gbc.readMem(0x98ed), 0xac);
        // CB AC 0113
        gbc.setState(0x8f7, 0x544d, 0xf280, 0x76de, 0xef42, 0xbb4, 0x1, 0x0);
        gbc.writeMem(0x8f7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x544d);
        EXPECT(gbc.pc(), 0x8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0114
        gbc.setState(0xb52, 0x3056, 0x9da0, 0xed8f, 0xd2b, 0x93cf, 0x0, 0x0);
        gbc.writeMem(0xb52, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3056);
        EXPECT(gbc.pc(), 0xb54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0115
        gbc.setState(0x6fc8, 0x392f, 0x93c0, 0xe867, 0xbbf5, 0xe5ae, 0x0, 0x1);
        gbc.writeMem(0x6fc8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x392f);
        EXPECT(gbc.pc(), 0x6fca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0116
        gbc.setState(0x48a2, 0x9fb5, 0xb3a0, 0x65af, 0xf3ef, 0xdc38, 0x0, 0x0);
        gbc.writeMem(0x48a2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9fb5);
        EXPECT(gbc.pc(), 0x48a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0117
        gbc.setState(0x58e7, 0x1a4d, 0x5230, 0x8427, 0x7c10, 0xaaf1, 0x0, 0x0);
        gbc.writeMem(0x58e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1a4d);
        EXPECT(gbc.pc(), 0x58e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0118
        gbc.setState(0x3db6, 0xaaa5, 0xc320, 0xfc05, 0x4391, 0xfe43, 0x0, 0x1);
        gbc.writeMem(0x3db6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xaaa5);
        EXPECT(gbc.pc(), 0x3db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0119
        gbc.setState(0x515e, 0x1078, 0xe280, 0x3da4, 0x58c6, 0x34b, 0x1, 0x1);
        gbc.writeMem(0x515e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1078);
        EXPECT(gbc.pc(), 0x5160);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 011A
        gbc.setState(0x2db, 0x3b07, 0x92b0, 0x785d, 0x37ea, 0xa7e5, 0x0, 0x0);
        gbc.writeMem(0x2db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3b07);
        EXPECT(gbc.pc(), 0x2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 011B
        gbc.setState(0x43a8, 0x63f2, 0x6f50, 0xe1f6, 0x94e0, 0x8600, 0x0, 0x0);
        gbc.writeMem(0x43a8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x63f2);
        EXPECT(gbc.pc(), 0x43aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 011C
        gbc.setState(0xe70b, 0x4c34, 0x6b90, 0x5004, 0x7470, 0xb548, 0x0, 0x1);
        gbc.writeMem(0xe70b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4c34);
        EXPECT(gbc.pc(), 0xe70d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70b), 0xcb);
        EXPECT(gbc.readMem(0xe70c), 0xac);
        // CB AC 011D
        gbc.setState(0x7c66, 0x15d4, 0x4690, 0xfae6, 0x5713, 0x7944, 0x0, 0x1);
        gbc.writeMem(0x7c66, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x15d4);
        EXPECT(gbc.pc(), 0x7c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 011E
        gbc.setState(0x8e3b, 0xd16e, 0xdbd0, 0x8a11, 0xf091, 0x585c, 0x1, 0x0);
        gbc.writeMem(0x8e3b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd16e);
        EXPECT(gbc.pc(), 0x8e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e3b), 0xcb);
        EXPECT(gbc.readMem(0x8e3c), 0xac);
        // CB AC 011F
        gbc.setState(0x6ef4, 0xa69d, 0x2fa0, 0x4105, 0xe51d, 0xf8a5, 0x1, 0x0);
        gbc.writeMem(0x6ef4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa69d);
        EXPECT(gbc.pc(), 0x6ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0120
        gbc.setState(0xe60f, 0xc962, 0x8510, 0x67da, 0xdd57, 0xe72f, 0x1, 0x0);
        gbc.writeMem(0xe60f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc962);
        EXPECT(gbc.pc(), 0xe611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60f), 0xcb);
        EXPECT(gbc.readMem(0xe610), 0xac);
        // CB AC 0122
        gbc.setState(0x79d6, 0x84ba, 0xae0, 0xee29, 0x58dc, 0xb962, 0x1, 0x1);
        gbc.writeMem(0x79d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x84ba);
        EXPECT(gbc.pc(), 0x79d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0123
        gbc.setState(0x2abb, 0x4f23, 0xf070, 0x32ec, 0xe273, 0x8a55, 0x0, 0x1);
        gbc.writeMem(0x2abb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4f23);
        EXPECT(gbc.pc(), 0x2abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0124
        gbc.setState(0xb076, 0xaed6, 0x9ad0, 0xcbfc, 0x1f6b, 0xabb5, 0x0, 0x0);
        gbc.writeMem(0xb076, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xaed6);
        EXPECT(gbc.pc(), 0xb078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb076), 0xcb);
        EXPECT(gbc.readMem(0xb077), 0xac);
        // CB AC 0125
        gbc.setState(0x1e05, 0x9416, 0x4430, 0x321a, 0x8be1, 0x410b, 0x1, 0x0);
        gbc.writeMem(0x1e05, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0x1e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0126
        gbc.setState(0xd60, 0xfc89, 0x9980, 0xcaf2, 0x8810, 0x819, 0x0, 0x0);
        gbc.writeMem(0xd60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfc89);
        EXPECT(gbc.pc(), 0xd62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0127
        gbc.setState(0x25b9, 0xdcdd, 0xb70, 0x6dbe, 0xda65, 0x977e, 0x1, 0x0);
        gbc.writeMem(0x25b9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdcdd);
        EXPECT(gbc.pc(), 0x25bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0128
        gbc.setState(0xaa90, 0x37c9, 0xe440, 0xf91f, 0x817f, 0xbea8, 0x0, 0x1);
        gbc.writeMem(0xaa90, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x37c9);
        EXPECT(gbc.pc(), 0xaa92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa90), 0xcb);
        EXPECT(gbc.readMem(0xaa91), 0xac);
        // CB AC 0129
        gbc.setState(0x36d2, 0xe8d7, 0x3e10, 0xbef7, 0x6436, 0x4be2, 0x1, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe8d7);
        EXPECT(gbc.pc(), 0x36d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 012A
        gbc.setState(0x9692, 0xadf7, 0x980, 0x7f5, 0xba0a, 0x6243, 0x0, 0x0);
        gbc.writeMem(0x9692, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xadf7);
        EXPECT(gbc.pc(), 0x9694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9692), 0xcb);
        EXPECT(gbc.readMem(0x9693), 0xac);
        // CB AC 012B
        gbc.setState(0xea51, 0x26f4, 0x8770, 0x1e84, 0xe404, 0x7968, 0x0, 0x1);
        gbc.writeMem(0xea51, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x26f4);
        EXPECT(gbc.pc(), 0xea53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea51), 0xcb);
        EXPECT(gbc.readMem(0xea52), 0xac);
        // CB AC 012C
        gbc.setState(0xae15, 0x1c5e, 0x3160, 0xb6ae, 0x5843, 0x65db, 0x1, 0x1);
        gbc.writeMem(0xae15, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1c5e);
        EXPECT(gbc.pc(), 0xae17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae15), 0xcb);
        EXPECT(gbc.readMem(0xae16), 0xac);
        // CB AC 012D
        gbc.setState(0x5ba4, 0x5510, 0xdad0, 0xeb8f, 0xe18e, 0x1979, 0x0, 0x0);
        gbc.writeMem(0x5ba4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5510);
        EXPECT(gbc.pc(), 0x5ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 012E
        gbc.setState(0x43e7, 0xadda, 0x3810, 0x914a, 0xbc83, 0x805a, 0x1, 0x1);
        gbc.writeMem(0x43e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xadda);
        EXPECT(gbc.pc(), 0x43e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 012F
        gbc.setState(0x1dd4, 0xf805, 0xc1b0, 0x6ba2, 0x859a, 0xd37d, 0x1, 0x1);
        gbc.writeMem(0x1dd4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf805);
        EXPECT(gbc.pc(), 0x1dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0130
        gbc.setState(0x5c60, 0x807e, 0xb7b0, 0xe7b, 0x1f33, 0x9aa5, 0x0, 0x0);
        gbc.writeMem(0x5c60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x807e);
        EXPECT(gbc.pc(), 0x5c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0131
        gbc.setState(0x2bb2, 0xc1c1, 0x2380, 0xebae, 0x9c8f, 0xe8a5, 0x0, 0x1);
        gbc.writeMem(0x2bb2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc1c1);
        EXPECT(gbc.pc(), 0x2bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0132
        gbc.setState(0x69fa, 0xd3dc, 0xd230, 0x4143, 0x8ca1, 0x6a0c, 0x0, 0x1);
        gbc.writeMem(0x69fa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd3dc);
        EXPECT(gbc.pc(), 0x69fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0133
        gbc.setState(0x52e7, 0x4647, 0x4f00, 0x7bb2, 0xe4ba, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x52e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4647);
        EXPECT(gbc.pc(), 0x52e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0135
        gbc.setState(0x1646, 0xc8cc, 0xa190, 0x35b1, 0x3dbb, 0x1565, 0x1, 0x0);
        gbc.writeMem(0x1646, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc8cc);
        EXPECT(gbc.pc(), 0x1648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0136
        gbc.setState(0x8817, 0x4a4b, 0xa280, 0x4403, 0x35e8, 0x5849, 0x0, 0x1);
        gbc.writeMem(0x8817, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4a4b);
        EXPECT(gbc.pc(), 0x8819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8817), 0xcb);
        EXPECT(gbc.readMem(0x8818), 0xac);
        // CB AC 0137
        gbc.setState(0xb7ce, 0x6c13, 0x56e0, 0x5e2c, 0xf277, 0xaa81, 0x0, 0x1);
        gbc.writeMem(0xb7ce, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6c13);
        EXPECT(gbc.pc(), 0xb7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ce), 0xcb);
        EXPECT(gbc.readMem(0xb7cf), 0xac);
        // CB AC 0138
        gbc.setState(0x252b, 0x484f, 0x6f10, 0x7380, 0x99db, 0xa2d9, 0x0, 0x1);
        gbc.writeMem(0x252b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x484f);
        EXPECT(gbc.pc(), 0x252d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0139
        gbc.setState(0x60e9, 0x304d, 0x9aa0, 0x9efb, 0x89cc, 0x3bf7, 0x1, 0x1);
        gbc.writeMem(0x60e9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x304d);
        EXPECT(gbc.pc(), 0x60eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 013A
        gbc.setState(0x3a62, 0xfd8e, 0x1eb0, 0x2cdd, 0xdd2d, 0xeefb, 0x1, 0x0);
        gbc.writeMem(0x3a62, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfd8e);
        EXPECT(gbc.pc(), 0x3a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 013B
        gbc.setState(0x17a2, 0x8228, 0xf3a0, 0xb055, 0x6c3d, 0x9095, 0x0, 0x1);
        gbc.writeMem(0x17a2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8228);
        EXPECT(gbc.pc(), 0x17a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 013C
        gbc.setState(0x5ed1, 0xb8f9, 0x73c0, 0xb8b3, 0xa4e2, 0x8a5e, 0x1, 0x1);
        gbc.writeMem(0x5ed1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb8f9);
        EXPECT(gbc.pc(), 0x5ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 013D
        gbc.setState(0xca4e, 0x5a0, 0x790, 0xe5a7, 0x5f20, 0x21ce, 0x0, 0x0);
        gbc.writeMem(0xca4e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5a0);
        EXPECT(gbc.pc(), 0xca50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4e), 0xcb);
        EXPECT(gbc.readMem(0xca4f), 0xac);
        // CB AC 013E
        gbc.setState(0x5190, 0x4828, 0x13c0, 0xc7c4, 0x551e, 0x3019, 0x0, 0x1);
        gbc.writeMem(0x5190, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4828);
        EXPECT(gbc.pc(), 0x5192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 013F
        gbc.setState(0xb0fe, 0x7b65, 0x3190, 0x134e, 0xf013, 0x20dc, 0x0, 0x0);
        gbc.writeMem(0xb0fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7b65);
        EXPECT(gbc.pc(), 0xb100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0fe), 0xcb);
        EXPECT(gbc.readMem(0xb0ff), 0xac);
        // CB AC 0140
        gbc.setState(0x76b0, 0x5ad9, 0x17b0, 0xf965, 0x416d, 0x2f17, 0x0, 0x0);
        gbc.writeMem(0x76b0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5ad9);
        EXPECT(gbc.pc(), 0x76b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0141
        gbc.setState(0x4d6c, 0x8b62, 0x3960, 0xc1a9, 0xe97b, 0xfbf0, 0x0, 0x0);
        gbc.writeMem(0x4d6c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8b62);
        EXPECT(gbc.pc(), 0x4d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0142
        gbc.setState(0x3d7b, 0xd439, 0xfb30, 0x6977, 0x5243, 0xe6a9, 0x0, 0x0);
        gbc.writeMem(0x3d7b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd439);
        EXPECT(gbc.pc(), 0x3d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0143
        gbc.setState(0x7171, 0x93c6, 0x2290, 0x7efb, 0x49cd, 0xacdb, 0x0, 0x0);
        gbc.writeMem(0x7171, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x93c6);
        EXPECT(gbc.pc(), 0x7173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0144
        gbc.setState(0x98da, 0xe2a0, 0x30c0, 0xec96, 0xb8c, 0xbbe, 0x0, 0x0);
        gbc.writeMem(0x98da, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe2a0);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98da), 0xcb);
        EXPECT(gbc.readMem(0x98db), 0xac);
        // CB AC 0145
        gbc.setState(0x35ff, 0x2ec8, 0xe040, 0x9c20, 0x15d8, 0xcfa8, 0x1, 0x0);
        gbc.writeMem(0x35ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2ec8);
        EXPECT(gbc.pc(), 0x3601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0146
        gbc.setState(0x2fc8, 0x7ee7, 0x2190, 0x2d7b, 0x74bf, 0xa9f5, 0x1, 0x1);
        gbc.writeMem(0x2fc8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7ee7);
        EXPECT(gbc.pc(), 0x2fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0148
        gbc.setState(0x4350, 0xafc2, 0x6d00, 0x6375, 0xc658, 0x9477, 0x0, 0x0);
        gbc.writeMem(0x4350, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xafc2);
        EXPECT(gbc.pc(), 0x4352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0149
        gbc.setState(0x1e2f, 0x8baa, 0xbb60, 0x477a, 0x5592, 0x28b5, 0x0, 0x1);
        gbc.writeMem(0x1e2f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8baa);
        EXPECT(gbc.pc(), 0x1e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 014A
        gbc.setState(0x2edd, 0x45f2, 0xf680, 0xb91d, 0x1138, 0x1b9f, 0x0, 0x0);
        gbc.writeMem(0x2edd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x45f2);
        EXPECT(gbc.pc(), 0x2edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 014B
        gbc.setState(0x9f76, 0xa83b, 0x14c0, 0x4f90, 0x9e9b, 0xd155, 0x1, 0x0);
        gbc.writeMem(0x9f76, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa83b);
        EXPECT(gbc.pc(), 0x9f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f76), 0xcb);
        EXPECT(gbc.readMem(0x9f77), 0xac);
        // CB AC 014C
        gbc.setState(0xaab6, 0x6339, 0x24b0, 0xbbfc, 0x587b, 0x5164, 0x1, 0x0);
        gbc.writeMem(0xaab6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6339);
        EXPECT(gbc.pc(), 0xaab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab6), 0xcb);
        EXPECT(gbc.readMem(0xaab7), 0xac);
        // CB AC 014D
        gbc.setState(0x3cf7, 0xdc99, 0xb10, 0x18e7, 0x12b, 0x4b0e, 0x1, 0x0);
        gbc.writeMem(0x3cf7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdc99);
        EXPECT(gbc.pc(), 0x3cf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 014E
        gbc.setState(0x98f4, 0x9a3b, 0x3730, 0x3134, 0xb21b, 0x6094, 0x0, 0x0);
        gbc.writeMem(0x98f4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9a3b);
        EXPECT(gbc.pc(), 0x98f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f4), 0xcb);
        EXPECT(gbc.readMem(0x98f5), 0xac);
        // CB AC 014F
        gbc.setState(0x3055, 0x9386, 0xad40, 0x12c3, 0xd6c3, 0x98d5, 0x0, 0x0);
        gbc.writeMem(0x3055, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9386);
        EXPECT(gbc.pc(), 0x3057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0150
        gbc.setState(0x34a, 0x3d4c, 0x3200, 0x8754, 0xdd10, 0xd2a7, 0x0, 0x1);
        gbc.writeMem(0x34a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3d4c);
        EXPECT(gbc.pc(), 0x34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0152
        gbc.setState(0x569e, 0x2d97, 0x6380, 0xb339, 0x660f, 0x948e, 0x1, 0x0);
        gbc.writeMem(0x569e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2d97);
        EXPECT(gbc.pc(), 0x56a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0153
        gbc.setState(0x8542, 0x7d7f, 0xbcf0, 0xc5f7, 0xb1c5, 0xde20, 0x1, 0x0);
        gbc.writeMem(0x8542, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7d7f);
        EXPECT(gbc.pc(), 0x8544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8542), 0xcb);
        EXPECT(gbc.readMem(0x8543), 0xac);
        // CB AC 0154
        gbc.setState(0xadf7, 0x58c3, 0xe400, 0x9e8b, 0xf6eb, 0x58eb, 0x0, 0x1);
        gbc.writeMem(0xadf7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x58c3);
        EXPECT(gbc.pc(), 0xadf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadf7), 0xcb);
        EXPECT(gbc.readMem(0xadf8), 0xac);
        // CB AC 0156
        gbc.setState(0xc9e, 0xc199, 0x4700, 0xd99e, 0xf82e, 0xb2b5, 0x0, 0x1);
        gbc.writeMem(0xc9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc199);
        EXPECT(gbc.pc(), 0xca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0157
        gbc.setState(0xee31, 0x2ed0, 0x2750, 0x1c61, 0x49c8, 0xe208, 0x1, 0x0);
        gbc.writeMem(0xee31, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0xee33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee31), 0xcb);
        EXPECT(gbc.readMem(0xee32), 0xac);
        // CB AC 0158
        gbc.setState(0x6c25, 0x56e0, 0x91d0, 0x25e3, 0xcc23, 0xb970, 0x0, 0x1);
        gbc.writeMem(0x6c25, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x56e0);
        EXPECT(gbc.pc(), 0x6c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0159
        gbc.setState(0xa853, 0x55b3, 0xef00, 0x44c9, 0xd86f, 0x3942, 0x1, 0x0);
        gbc.writeMem(0xa853, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x55b3);
        EXPECT(gbc.pc(), 0xa855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa853), 0xcb);
        EXPECT(gbc.readMem(0xa854), 0xac);
        // CB AC 015A
        gbc.setState(0x980a, 0x5052, 0x7df0, 0x392d, 0x1eae, 0xb718, 0x0, 0x1);
        gbc.writeMem(0x980a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5052);
        EXPECT(gbc.pc(), 0x980c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980a), 0xcb);
        EXPECT(gbc.readMem(0x980b), 0xac);
        // CB AC 015B
        gbc.setState(0x5dee, 0xbe60, 0xd880, 0x900, 0x2bb7, 0xd44b, 0x1, 0x1);
        gbc.writeMem(0x5dee, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xbe60);
        EXPECT(gbc.pc(), 0x5df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 015C
        gbc.setState(0x6f52, 0x44bb, 0xb560, 0x2df2, 0x9e20, 0x3a53, 0x0, 0x1);
        gbc.writeMem(0x6f52, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x44bb);
        EXPECT(gbc.pc(), 0x6f54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 015D
        gbc.setState(0x78ff, 0xddd5, 0x5f70, 0x2895, 0xd517, 0x33a, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xddd5);
        EXPECT(gbc.pc(), 0x7901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 015E
        gbc.setState(0x4831, 0x77fa, 0x5f70, 0x7bfb, 0x8660, 0x7394, 0x1, 0x0);
        gbc.writeMem(0x4831, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x77fa);
        EXPECT(gbc.pc(), 0x4833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 015F
        gbc.setState(0x1659, 0x5589, 0x5f50, 0x13ed, 0xde85, 0xfcd6, 0x1, 0x1);
        gbc.writeMem(0x1659, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5589);
        EXPECT(gbc.pc(), 0x165b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0160
        gbc.setState(0xe3d, 0xd94c, 0x8eb0, 0x6b91, 0xe48b, 0xbc56, 0x1, 0x1);
        gbc.writeMem(0xe3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd94c);
        EXPECT(gbc.pc(), 0xe3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0161
        gbc.setState(0x4208, 0x7651, 0xcd20, 0x54ee, 0xd85, 0x74ea, 0x0, 0x0);
        gbc.writeMem(0x4208, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7651);
        EXPECT(gbc.pc(), 0x420a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0163
        gbc.setState(0x2ab8, 0x8327, 0xc170, 0x828d, 0xcee3, 0xaacf, 0x0, 0x0);
        gbc.writeMem(0x2ab8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8327);
        EXPECT(gbc.pc(), 0x2aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0164
        gbc.setState(0x2503, 0x165, 0xac60, 0x5456, 0xb35b, 0x885c, 0x1, 0x0);
        gbc.writeMem(0x2503, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x165);
        EXPECT(gbc.pc(), 0x2505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0165
        gbc.setState(0xa6ac, 0xdd8, 0x5280, 0x7cb2, 0xf20, 0xee35, 0x0, 0x1);
        gbc.writeMem(0xa6ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdd8);
        EXPECT(gbc.pc(), 0xa6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ac), 0xcb);
        EXPECT(gbc.readMem(0xa6ad), 0xac);
        // CB AC 0166
        gbc.setState(0x6ca6, 0xd6a8, 0xe210, 0x8ac9, 0x8244, 0x966b, 0x0, 0x1);
        gbc.writeMem(0x6ca6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd6a8);
        EXPECT(gbc.pc(), 0x6ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0167
        gbc.setState(0x90f4, 0x8131, 0xc1e0, 0x10c9, 0x30, 0x9001, 0x0, 0x0);
        gbc.writeMem(0x90f4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8131);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0xac);
        // CB AC 0168
        gbc.setState(0x697f, 0x6781, 0xe110, 0x446, 0x8550, 0x2ffa, 0x0, 0x1);
        gbc.writeMem(0x697f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6781);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0169
        gbc.setState(0xec18, 0xdf21, 0xd530, 0xc5f2, 0x2a7f, 0x9236, 0x0, 0x1);
        gbc.writeMem(0xec18, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xdf21);
        EXPECT(gbc.pc(), 0xec1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec18), 0xcb);
        EXPECT(gbc.readMem(0xec19), 0xac);
        // CB AC 016A
        gbc.setState(0xcee4, 0x1bd6, 0x6750, 0xe4b, 0xc50b, 0xe599, 0x1, 0x1);
        gbc.writeMem(0xcee4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1bd6);
        EXPECT(gbc.pc(), 0xcee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee4), 0xcb);
        EXPECT(gbc.readMem(0xcee5), 0xac);
        // CB AC 016B
        gbc.setState(0x215e, 0x39fb, 0xc8a0, 0x2318, 0xaeca, 0x6b01, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x39fb);
        EXPECT(gbc.pc(), 0x2160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 016C
        gbc.setState(0xd22b, 0x5f8b, 0xeb60, 0x1863, 0x87e3, 0xb8f4, 0x1, 0x1);
        gbc.writeMem(0xd22b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5f8b);
        EXPECT(gbc.pc(), 0xd22d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22b), 0xcb);
        EXPECT(gbc.readMem(0xd22c), 0xac);
        // CB AC 016D
        gbc.setState(0x8ce0, 0xe939, 0x7b80, 0x93a7, 0x9cd2, 0x5c6a, 0x0, 0x1);
        gbc.writeMem(0x8ce0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0x8ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ce0), 0xcb);
        EXPECT(gbc.readMem(0x8ce1), 0xac);
        // CB AC 016E
        gbc.setState(0xd3df, 0xdd59, 0x8580, 0xaee0, 0xee0a, 0xd538, 0x0, 0x0);
        gbc.writeMem(0xd3df, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdd59);
        EXPECT(gbc.pc(), 0xd3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3df), 0xcb);
        EXPECT(gbc.readMem(0xd3e0), 0xac);
        // CB AC 0170
        gbc.setState(0x81ea, 0x7c12, 0xe1f0, 0x6894, 0x9abe, 0x2a70, 0x0, 0x0);
        gbc.writeMem(0x81ea, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7c12);
        EXPECT(gbc.pc(), 0x81ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ea), 0xcb);
        EXPECT(gbc.readMem(0x81eb), 0xac);
        // CB AC 0171
        gbc.setState(0xd7de, 0x18a3, 0x77a0, 0x93f0, 0x4df6, 0xb14b, 0x1, 0x1);
        gbc.writeMem(0xd7de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x18a3);
        EXPECT(gbc.pc(), 0xd7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7de), 0xcb);
        EXPECT(gbc.readMem(0xd7df), 0xac);
        // CB AC 0172
        gbc.setState(0x4f98, 0x4ba3, 0x6710, 0x98cf, 0xd54, 0x8174, 0x1, 0x1);
        gbc.writeMem(0x4f98, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4ba3);
        EXPECT(gbc.pc(), 0x4f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0173
        gbc.setState(0xe299, 0x194b, 0x9b50, 0x50af, 0x2451, 0xf99, 0x1, 0x1);
        gbc.writeMem(0xe299, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x194b);
        EXPECT(gbc.pc(), 0xe29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe299), 0xcb);
        EXPECT(gbc.readMem(0xe29a), 0xac);
        // CB AC 0174
        gbc.setState(0x5a69, 0x67bb, 0xef00, 0xf650, 0x15e4, 0x5f30, 0x0, 0x0);
        gbc.writeMem(0x5a69, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x67bb);
        EXPECT(gbc.pc(), 0x5a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0175
        gbc.setState(0xbf51, 0x5dbb, 0x1700, 0x1d60, 0x4ac3, 0x4dac, 0x1, 0x0);
        gbc.writeMem(0xbf51, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5dbb);
        EXPECT(gbc.pc(), 0xbf53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf51), 0xcb);
        EXPECT(gbc.readMem(0xbf52), 0xac);
        // CB AC 0176
        gbc.setState(0xc6de, 0x1529, 0x9c10, 0x57a6, 0xf90b, 0x80af, 0x0, 0x1);
        gbc.writeMem(0xc6de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1529);
        EXPECT(gbc.pc(), 0xc6e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6de), 0xcb);
        EXPECT(gbc.readMem(0xc6df), 0xac);
        // CB AC 0178
        gbc.setState(0xc7b9, 0xac06, 0x9b30, 0xdbf2, 0x8f46, 0x4ba8, 0x1, 0x0);
        gbc.writeMem(0xc7b9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xac06);
        EXPECT(gbc.pc(), 0xc7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b9), 0xcb);
        EXPECT(gbc.readMem(0xc7ba), 0xac);
        // CB AC 0179
        gbc.setState(0x5929, 0x55a8, 0x2e50, 0xbe56, 0xc617, 0x210, 0x0, 0x0);
        gbc.writeMem(0x5929, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x55a8);
        EXPECT(gbc.pc(), 0x592b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 017A
        gbc.setState(0x68b5, 0x7cd1, 0xed50, 0x5259, 0x291e, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x68b5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7cd1);
        EXPECT(gbc.pc(), 0x68b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 017B
        gbc.setState(0x1c73, 0xf076, 0x6c70, 0xc346, 0xad8c, 0x8319, 0x1, 0x1);
        gbc.writeMem(0x1c73, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf076);
        EXPECT(gbc.pc(), 0x1c75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 017C
        gbc.setState(0x4dba, 0x9601, 0xa210, 0x303, 0x5484, 0xe463, 0x0, 0x1);
        gbc.writeMem(0x4dba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9601);
        EXPECT(gbc.pc(), 0x4dbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 017D
        gbc.setState(0x4aab, 0xf423, 0x7d30, 0xf12b, 0xf607, 0xdca9, 0x0, 0x1);
        gbc.writeMem(0x4aab, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf423);
        EXPECT(gbc.pc(), 0x4aad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 017E
        gbc.setState(0xde75, 0x1779, 0xc1f0, 0xf2da, 0x1a5f, 0x3e69, 0x1, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1779);
        EXPECT(gbc.pc(), 0xde77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde75), 0xcb);
        EXPECT(gbc.readMem(0xde76), 0xac);
        // CB AC 017F
        gbc.setState(0x4560, 0x7fe9, 0x3d0, 0x3e49, 0xa66, 0x16a8, 0x1, 0x0);
        gbc.writeMem(0x4560, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7fe9);
        EXPECT(gbc.pc(), 0x4562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0180
        gbc.setState(0xaae9, 0xc3f, 0x44c0, 0x8ca7, 0xa2e4, 0xe008, 0x1, 0x0);
        gbc.writeMem(0xaae9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc3f);
        EXPECT(gbc.pc(), 0xaaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae9), 0xcb);
        EXPECT(gbc.readMem(0xaaea), 0xac);
        // CB AC 0181
        gbc.setState(0x800b, 0x3b0d, 0x2750, 0xcfeb, 0xc4c1, 0x4bd8, 0x0, 0x1);
        gbc.writeMem(0x800b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3b0d);
        EXPECT(gbc.pc(), 0x800d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800b), 0xcb);
        EXPECT(gbc.readMem(0x800c), 0xac);
        // CB AC 0182
        gbc.setState(0xac07, 0x6dbd, 0x12b0, 0xbd24, 0x2839, 0x9763, 0x1, 0x0);
        gbc.writeMem(0xac07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6dbd);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac07), 0xcb);
        EXPECT(gbc.readMem(0xac08), 0xac);
        // CB AC 0184
        gbc.setState(0x269d, 0xe79e, 0x76e0, 0xad87, 0x6183, 0x7644, 0x1, 0x0);
        gbc.writeMem(0x269d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe79e);
        EXPECT(gbc.pc(), 0x269f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0185
        gbc.setState(0x8c8c, 0x2022, 0x8020, 0x3def, 0xa42f, 0x2ed2, 0x1, 0x0);
        gbc.writeMem(0x8c8c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2022);
        EXPECT(gbc.pc(), 0x8c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8c), 0xcb);
        EXPECT(gbc.readMem(0x8c8d), 0xac);
        // CB AC 0186
        gbc.setState(0x89df, 0x1bcd, 0x22c0, 0xd4d, 0x6f41, 0x4563, 0x1, 0x1);
        gbc.writeMem(0x89df, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1bcd);
        EXPECT(gbc.pc(), 0x89e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89df), 0xcb);
        EXPECT(gbc.readMem(0x89e0), 0xac);
        // CB AC 0187
        gbc.setState(0x52ea, 0x9212, 0x2710, 0xba23, 0x3ddc, 0x946e, 0x1, 0x1);
        gbc.writeMem(0x52ea, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0x52ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0188
        gbc.setState(0x1d56, 0x3310, 0xaff0, 0xd61a, 0x3c8a, 0x26aa, 0x0, 0x1);
        gbc.writeMem(0x1d56, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3310);
        EXPECT(gbc.pc(), 0x1d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0189
        gbc.setState(0x37c, 0xf288, 0x8990, 0xb52b, 0x8ae2, 0x36c5, 0x0, 0x0);
        gbc.writeMem(0x37c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf288);
        EXPECT(gbc.pc(), 0x37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 018A
        gbc.setState(0xb6a1, 0x97ff, 0x8a90, 0x64ed, 0x3d49, 0x5342, 0x0, 0x1);
        gbc.writeMem(0xb6a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x97ff);
        EXPECT(gbc.pc(), 0xb6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a1), 0xcb);
        EXPECT(gbc.readMem(0xb6a2), 0xac);
        // CB AC 018B
        gbc.setState(0x8914, 0x3aca, 0x1a80, 0xc260, 0x4614, 0x9bf9, 0x1, 0x0);
        gbc.writeMem(0x8914, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3aca);
        EXPECT(gbc.pc(), 0x8916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8914), 0xcb);
        EXPECT(gbc.readMem(0x8915), 0xac);
        // CB AC 018C
        gbc.setState(0xc709, 0x6a98, 0x92d0, 0xac17, 0x1a5c, 0x7fed, 0x1, 0x1);
        gbc.writeMem(0xc709, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6a98);
        EXPECT(gbc.pc(), 0xc70b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc709), 0xcb);
        EXPECT(gbc.readMem(0xc70a), 0xac);
        // CB AC 018E
        gbc.setState(0xc428, 0x525e, 0x2730, 0x3ffc, 0x3bf2, 0xb53d, 0x0, 0x1);
        gbc.writeMem(0xc428, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x525e);
        EXPECT(gbc.pc(), 0xc42a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc428), 0xcb);
        EXPECT(gbc.readMem(0xc429), 0xac);
        // CB AC 018F
        gbc.setState(0x6744, 0xe1b2, 0xc530, 0x5a8a, 0x94dd, 0x1fc8, 0x0, 0x0);
        gbc.writeMem(0x6744, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe1b2);
        EXPECT(gbc.pc(), 0x6746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0190
        gbc.setState(0xe343, 0xc721, 0x5640, 0x61f7, 0x5c14, 0xe95a, 0x0, 0x1);
        gbc.writeMem(0xe343, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc721);
        EXPECT(gbc.pc(), 0xe345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe343), 0xcb);
        EXPECT(gbc.readMem(0xe344), 0xac);
        // CB AC 0191
        gbc.setState(0x27b2, 0x693c, 0xd0a0, 0x1db7, 0xcdea, 0xa1ef, 0x0, 0x0);
        gbc.writeMem(0x27b2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x693c);
        EXPECT(gbc.pc(), 0x27b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0192
        gbc.setState(0x88cd, 0xdb9a, 0xa9b0, 0x7f0f, 0x1e43, 0x3b56, 0x0, 0x0);
        gbc.writeMem(0x88cd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xdb9a);
        EXPECT(gbc.pc(), 0x88cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cd), 0xcb);
        EXPECT(gbc.readMem(0x88ce), 0xac);
        // CB AC 0193
        gbc.setState(0x7adb, 0x1702, 0x88a0, 0x9424, 0xf5fc, 0xbf3, 0x1, 0x1);
        gbc.writeMem(0x7adb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1702);
        EXPECT(gbc.pc(), 0x7add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0195
        gbc.setState(0x59ac, 0x3c5e, 0x5b20, 0x90f1, 0xbd09, 0xb134, 0x0, 0x0);
        gbc.writeMem(0x59ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c5e);
        EXPECT(gbc.pc(), 0x59ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0196
        gbc.setState(0x5e19, 0xcf30, 0x4640, 0x6ce5, 0x8e63, 0x32c5, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcf30);
        EXPECT(gbc.pc(), 0x5e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0197
        gbc.setState(0xcc3c, 0x56b4, 0xd200, 0x3835, 0xdc54, 0x2d19, 0x0, 0x1);
        gbc.writeMem(0xcc3c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x56b4);
        EXPECT(gbc.pc(), 0xcc3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3c), 0xcb);
        EXPECT(gbc.readMem(0xcc3d), 0xac);
        // CB AC 0198
        gbc.setState(0x83fe, 0xf605, 0x48f0, 0x173a, 0xe898, 0xae06, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf605);
        EXPECT(gbc.pc(), 0x8400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fe), 0xcb);
        EXPECT(gbc.readMem(0x83ff), 0xac);
        // CB AC 019A
        gbc.setState(0x738, 0xe7dc, 0xcf80, 0x8714, 0xd9ba, 0x5708, 0x0, 0x1);
        gbc.writeMem(0x738, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe7dc);
        EXPECT(gbc.pc(), 0x73a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 019B
        gbc.setState(0x37ac, 0x345d, 0x17d0, 0xcd17, 0x668b, 0xa354, 0x0, 0x1);
        gbc.writeMem(0x37ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x345d);
        EXPECT(gbc.pc(), 0x37ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 019C
        gbc.setState(0x27d6, 0xeff7, 0x34e0, 0xb5f6, 0xd958, 0x6ca1, 0x0, 0x0);
        gbc.writeMem(0x27d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xeff7);
        EXPECT(gbc.pc(), 0x27d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 019D
        gbc.setState(0x3f6b, 0xa71, 0x7f60, 0x1f2e, 0xa25a, 0x6b48, 0x1, 0x1);
        gbc.writeMem(0x3f6b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa71);
        EXPECT(gbc.pc(), 0x3f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 019E
        gbc.setState(0x219e, 0xb0be, 0x5110, 0x4164, 0x196f, 0x3598, 0x1, 0x0);
        gbc.writeMem(0x219e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb0be);
        EXPECT(gbc.pc(), 0x21a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 019F
        gbc.setState(0x82d6, 0xa019, 0x9d30, 0x851d, 0xfc72, 0xe19d, 0x0, 0x1);
        gbc.writeMem(0x82d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xa019);
        EXPECT(gbc.pc(), 0x82d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82d6), 0xcb);
        EXPECT(gbc.readMem(0x82d7), 0xac);
        // CB AC 01A0
        gbc.setState(0xb736, 0x9ab5, 0x2380, 0x4c78, 0x9a7c, 0x8992, 0x1, 0x0);
        gbc.writeMem(0xb736, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9ab5);
        EXPECT(gbc.pc(), 0xb738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb736), 0xcb);
        EXPECT(gbc.readMem(0xb737), 0xac);
        // CB AC 01A1
        gbc.setState(0x80fe, 0xda02, 0xf2b0, 0x2153, 0x48a0, 0x2af2, 0x0, 0x1);
        gbc.writeMem(0x80fe, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xda02);
        EXPECT(gbc.pc(), 0x8100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80fe), 0xcb);
        EXPECT(gbc.readMem(0x80ff), 0xac);
        // CB AC 01A2
        gbc.setState(0xe0ce, 0x7c5b, 0x83c0, 0xc74b, 0xf58d, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0xe0ce, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7c5b);
        EXPECT(gbc.pc(), 0xe0d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ce), 0xcb);
        EXPECT(gbc.readMem(0xe0cf), 0xac);
        // CB AC 01A3
        gbc.setState(0x8ba, 0x8c72, 0x56d0, 0xfd4f, 0x57e4, 0x889, 0x1, 0x0);
        gbc.writeMem(0x8ba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8c72);
        EXPECT(gbc.pc(), 0x8bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01A4
        gbc.setState(0xa0c4, 0xdf5e, 0xe7c0, 0x9c26, 0x8c8d, 0x6ef6, 0x1, 0x0);
        gbc.writeMem(0xa0c4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdf5e);
        EXPECT(gbc.pc(), 0xa0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c4), 0xcb);
        EXPECT(gbc.readMem(0xa0c5), 0xac);
        // CB AC 01A5
        gbc.setState(0xd180, 0xee31, 0xcdb0, 0xb1ed, 0x9069, 0xc25e, 0x1, 0x0);
        gbc.writeMem(0xd180, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xee31);
        EXPECT(gbc.pc(), 0xd182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd180), 0xcb);
        EXPECT(gbc.readMem(0xd181), 0xac);
        // CB AC 01A6
        gbc.setState(0xa137, 0x4a2b, 0xe3f0, 0x20aa, 0x731f, 0x420e, 0x0, 0x0);
        gbc.writeMem(0xa137, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4a2b);
        EXPECT(gbc.pc(), 0xa139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa137), 0xcb);
        EXPECT(gbc.readMem(0xa138), 0xac);
        // CB AC 01A7
        gbc.setState(0x1a87, 0x74c0, 0xe2a0, 0xb07f, 0x8dc4, 0xa842, 0x0, 0x0);
        gbc.writeMem(0x1a87, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x74c0);
        EXPECT(gbc.pc(), 0x1a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01A8
        gbc.setState(0xeb9b, 0x3d9b, 0x3410, 0xfcc5, 0x6afb, 0x8afe, 0x1, 0x1);
        gbc.writeMem(0xeb9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3d9b);
        EXPECT(gbc.pc(), 0xeb9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9b), 0xcb);
        EXPECT(gbc.readMem(0xeb9c), 0xac);
        // CB AC 01A9
        gbc.setState(0x3baa, 0x5bee, 0xfa20, 0x81e2, 0xa066, 0x4b9f, 0x1, 0x0);
        gbc.writeMem(0x3baa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5bee);
        EXPECT(gbc.pc(), 0x3bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01AA
        gbc.setState(0x2e99, 0x9417, 0xe040, 0x1bc3, 0x6fb7, 0x35a6, 0x1, 0x1);
        gbc.writeMem(0x2e99, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9417);
        EXPECT(gbc.pc(), 0x2e9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01AB
        gbc.setState(0x8236, 0xb62d, 0xf350, 0xbd02, 0xad, 0xde, 0x1, 0x1);
        gbc.writeMem(0x8236, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb62d);
        EXPECT(gbc.pc(), 0x8238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8236), 0xcb);
        EXPECT(gbc.readMem(0x8237), 0xac);
        // CB AC 01AC
        gbc.setState(0x1eef, 0x9eb2, 0xa70, 0xe99e, 0x56e3, 0x4bd3, 0x0, 0x1);
        gbc.writeMem(0x1eef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9eb2);
        EXPECT(gbc.pc(), 0x1ef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01AD
        gbc.setState(0x8d78, 0x3a9, 0x40e0, 0xb663, 0x72d0, 0x98e1, 0x1, 0x0);
        gbc.writeMem(0x8d78, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3a9);
        EXPECT(gbc.pc(), 0x8d7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d78), 0xcb);
        EXPECT(gbc.readMem(0x8d79), 0xac);
        // CB AC 01AE
        gbc.setState(0xbdb4, 0xbb6e, 0xce70, 0x3d65, 0xcfba, 0x5bd4, 0x1, 0x0);
        gbc.writeMem(0xbdb4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbb6e);
        EXPECT(gbc.pc(), 0xbdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb4), 0xcb);
        EXPECT(gbc.readMem(0xbdb5), 0xac);
        // CB AC 01AF
        gbc.setState(0xc60a, 0x863c, 0x7db0, 0xf03c, 0x3049, 0x6ef1, 0x0, 0x0);
        gbc.writeMem(0xc60a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x863c);
        EXPECT(gbc.pc(), 0xc60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc60a), 0xcb);
        EXPECT(gbc.readMem(0xc60b), 0xac);
        // CB AC 01B0
        gbc.setState(0x12c8, 0x588, 0xf4c0, 0xf4d6, 0xe06a, 0x16d5, 0x1, 0x1);
        gbc.writeMem(0x12c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x588);
        EXPECT(gbc.pc(), 0x12ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01B1
        gbc.setState(0x37e5, 0x27dd, 0x3fe0, 0x27c7, 0xd719, 0xf928, 0x0, 0x0);
        gbc.writeMem(0x37e5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x27dd);
        EXPECT(gbc.pc(), 0x37e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01B2
        gbc.setState(0x1fd3, 0xfb4c, 0x7d60, 0x1a54, 0xf534, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0x1fd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xfb4c);
        EXPECT(gbc.pc(), 0x1fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01B3
        gbc.setState(0x7312, 0xa646, 0x84e0, 0x1bb2, 0x441a, 0xc8f3, 0x1, 0x1);
        gbc.writeMem(0x7312, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa646);
        EXPECT(gbc.pc(), 0x7314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01B5
        gbc.setState(0x3a87, 0xe497, 0xcea0, 0x167c, 0x9056, 0xe959, 0x0, 0x0);
        gbc.writeMem(0x3a87, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe497);
        EXPECT(gbc.pc(), 0x3a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01B6
        gbc.setState(0xcc51, 0x4ad8, 0x6450, 0xd8d8, 0x714b, 0xc677, 0x0, 0x0);
        gbc.writeMem(0xcc51, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4ad8);
        EXPECT(gbc.pc(), 0xcc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc51), 0xcb);
        EXPECT(gbc.readMem(0xcc52), 0xac);
        // CB AC 01B7
        gbc.setState(0x364b, 0x9511, 0xe460, 0x3fa5, 0x8a4a, 0x3e0b, 0x1, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9511);
        EXPECT(gbc.pc(), 0x364d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01BA
        gbc.setState(0x35a1, 0xf263, 0xca80, 0x19f7, 0x5a6d, 0x1c2f, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf263);
        EXPECT(gbc.pc(), 0x35a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01BB
        gbc.setState(0x2773, 0x2479, 0x970, 0x8e08, 0x1569, 0x5773, 0x1, 0x1);
        gbc.writeMem(0x2773, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2479);
        EXPECT(gbc.pc(), 0x2775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01BC
        gbc.setState(0x80ae, 0x9a5f, 0x2660, 0x6318, 0xb63c, 0x1950, 0x1, 0x0);
        gbc.writeMem(0x80ae, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9a5f);
        EXPECT(gbc.pc(), 0x80b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ae), 0xcb);
        EXPECT(gbc.readMem(0x80af), 0xac);
        // CB AC 01BD
        gbc.setState(0x35cf, 0xdbc8, 0xe3c0, 0x1c5c, 0x2e51, 0xc3, 0x0, 0x0);
        gbc.writeMem(0x35cf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdbc8);
        EXPECT(gbc.pc(), 0x35d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01BE
        gbc.setState(0x2443, 0xdf7, 0xab10, 0x6b14, 0x2980, 0xa7ce, 0x1, 0x1);
        gbc.writeMem(0x2443, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdf7);
        EXPECT(gbc.pc(), 0x2445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01BF
        gbc.setState(0xb32a, 0xc6b2, 0x2c90, 0xe4bf, 0x36f3, 0x6140, 0x0, 0x0);
        gbc.writeMem(0xb32a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc6b2);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb32a), 0xcb);
        EXPECT(gbc.readMem(0xb32b), 0xac);
        // CB AC 01C0
        gbc.setState(0xb9d5, 0xc421, 0x310, 0xfe0f, 0x8607, 0x7c79, 0x1, 0x0);
        gbc.writeMem(0xb9d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc421);
        EXPECT(gbc.pc(), 0xb9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9d5), 0xcb);
        EXPECT(gbc.readMem(0xb9d6), 0xac);
        // CB AC 01C1
        gbc.setState(0x9192, 0x4579, 0xd480, 0x49df, 0x9e59, 0xe966, 0x0, 0x0);
        gbc.writeMem(0x9192, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4579);
        EXPECT(gbc.pc(), 0x9194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9192), 0xcb);
        EXPECT(gbc.readMem(0x9193), 0xac);
        // CB AC 01C2
        gbc.setState(0x3597, 0x391, 0xf560, 0xb57a, 0x4f4c, 0x52ee, 0x0, 0x0);
        gbc.writeMem(0x3597, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x391);
        EXPECT(gbc.pc(), 0x3599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01C3
        gbc.setState(0xb590, 0x4b0, 0xc5f0, 0xebc1, 0x853e, 0x2eae, 0x1, 0x1);
        gbc.writeMem(0xb590, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4b0);
        EXPECT(gbc.pc(), 0xb592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb590), 0xcb);
        EXPECT(gbc.readMem(0xb591), 0xac);
        // CB AC 01C4
        gbc.setState(0x9fa2, 0x8ad5, 0x6e70, 0xd9cc, 0x4ebf, 0x6020, 0x0, 0x0);
        gbc.writeMem(0x9fa2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8ad5);
        EXPECT(gbc.pc(), 0x9fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa2), 0xcb);
        EXPECT(gbc.readMem(0x9fa3), 0xac);
        // CB AC 01C5
        gbc.setState(0x5222, 0x2333, 0x9ae0, 0xed41, 0xc610, 0x1694, 0x1, 0x1);
        gbc.writeMem(0x5222, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2333);
        EXPECT(gbc.pc(), 0x5224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01C6
        gbc.setState(0x2469, 0x5658, 0x42d0, 0x3dca, 0x9776, 0xecc7, 0x0, 0x1);
        gbc.writeMem(0x2469, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5658);
        EXPECT(gbc.pc(), 0x246b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01C7
        gbc.setState(0x5684, 0xb9f7, 0x1520, 0xf17c, 0xf0de, 0x7c15, 0x0, 0x1);
        gbc.writeMem(0x5684, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb9f7);
        EXPECT(gbc.pc(), 0x5686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01C8
        gbc.setState(0xddd3, 0x4618, 0x7b0, 0x4d13, 0xdcd6, 0xbb08, 0x0, 0x1);
        gbc.writeMem(0xddd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4618);
        EXPECT(gbc.pc(), 0xddd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd3), 0xcb);
        EXPECT(gbc.readMem(0xddd4), 0xac);
        // CB AC 01C9
        gbc.setState(0xa72a, 0x249f, 0x5ed0, 0x3ff2, 0xefe4, 0x96c5, 0x1, 0x1);
        gbc.writeMem(0xa72a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x249f);
        EXPECT(gbc.pc(), 0xa72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa72a), 0xcb);
        EXPECT(gbc.readMem(0xa72b), 0xac);
        // CB AC 01CA
        gbc.setState(0xa046, 0x78bb, 0x4ad0, 0x36dd, 0x60c5, 0xf3df, 0x0, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x78bb);
        EXPECT(gbc.pc(), 0xa048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa046), 0xcb);
        EXPECT(gbc.readMem(0xa047), 0xac);
        // CB AC 01CB
        gbc.setState(0xa5d1, 0xb98b, 0xec70, 0x9ec9, 0x13aa, 0x4d43, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb98b);
        EXPECT(gbc.pc(), 0xa5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d1), 0xcb);
        EXPECT(gbc.readMem(0xa5d2), 0xac);
        // CB AC 01CC
        gbc.setState(0xcf69, 0xdb6c, 0xae50, 0x8eb2, 0x49c1, 0x2d2c, 0x0, 0x0);
        gbc.writeMem(0xcf69, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xdb6c);
        EXPECT(gbc.pc(), 0xcf6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf69), 0xcb);
        EXPECT(gbc.readMem(0xcf6a), 0xac);
        // CB AC 01CD
        gbc.setState(0x8176, 0xf93, 0xdfd0, 0x4718, 0xa655, 0x74c0, 0x1, 0x1);
        gbc.writeMem(0x8176, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf93);
        EXPECT(gbc.pc(), 0x8178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8176), 0xcb);
        EXPECT(gbc.readMem(0x8177), 0xac);
        // CB AC 01CE
        gbc.setState(0xc27a, 0x1c6, 0x2bc0, 0x8526, 0xfc05, 0x3a5, 0x1, 0x0);
        gbc.writeMem(0xc27a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1c6);
        EXPECT(gbc.pc(), 0xc27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27a), 0xcb);
        EXPECT(gbc.readMem(0xc27b), 0xac);
        // CB AC 01CF
        gbc.setState(0x99b, 0xe2c2, 0x42d0, 0xb4eb, 0x288b, 0x1193, 0x0, 0x0);
        gbc.writeMem(0x99b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe2c2);
        EXPECT(gbc.pc(), 0x99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01D0
        gbc.setState(0x66a3, 0x7eee, 0x8cc0, 0x9e, 0x645a, 0xd333, 0x1, 0x0);
        gbc.writeMem(0x66a3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7eee);
        EXPECT(gbc.pc(), 0x66a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01D1
        gbc.setState(0xd013, 0x66fe, 0xcb70, 0xbd64, 0x332c, 0x65ae, 0x0, 0x1);
        gbc.writeMem(0xd013, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x66fe);
        EXPECT(gbc.pc(), 0xd015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd013), 0xcb);
        EXPECT(gbc.readMem(0xd014), 0xac);
        // CB AC 01D3
        gbc.setState(0x439d, 0xf129, 0x7550, 0xdbf1, 0x1244, 0x698a, 0x1, 0x1);
        gbc.writeMem(0x439d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf129);
        EXPECT(gbc.pc(), 0x439f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01D4
        gbc.setState(0x4744, 0x1b45, 0x3cf0, 0x455, 0xd7f7, 0x5ab6, 0x0, 0x0);
        gbc.writeMem(0x4744, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1b45);
        EXPECT(gbc.pc(), 0x4746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01D6
        gbc.setState(0xee60, 0x3dbf, 0xa4f0, 0x4eba, 0x3848, 0x375b, 0x1, 0x0);
        gbc.writeMem(0xee60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x3dbf);
        EXPECT(gbc.pc(), 0xee62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee60), 0xcb);
        EXPECT(gbc.readMem(0xee61), 0xac);
        // CB AC 01D7
        gbc.setState(0x6f6f, 0x6d40, 0xe960, 0xf979, 0xba62, 0x6385, 0x1, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6d40);
        EXPECT(gbc.pc(), 0x6f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01D8
        gbc.setState(0xc15a, 0xb7ad, 0x9070, 0x426f, 0x4405, 0xab1d, 0x0, 0x1);
        gbc.writeMem(0xc15a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb7ad);
        EXPECT(gbc.pc(), 0xc15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc15a), 0xcb);
        EXPECT(gbc.readMem(0xc15b), 0xac);
        // CB AC 01D9
        gbc.setState(0x3640, 0xb045, 0x7870, 0x38ff, 0xa814, 0xe63c, 0x0, 0x1);
        gbc.writeMem(0x3640, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb045);
        EXPECT(gbc.pc(), 0x3642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01DA
        gbc.setState(0x6f93, 0x16ee, 0x6220, 0xe79d, 0x3d2e, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0x6f93, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x16ee);
        EXPECT(gbc.pc(), 0x6f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01DB
        gbc.setState(0xe282, 0x549e, 0x7cf0, 0xc995, 0x250f, 0x7a7f, 0x0, 0x1);
        gbc.writeMem(0xe282, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x549e);
        EXPECT(gbc.pc(), 0xe284);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe282), 0xcb);
        EXPECT(gbc.readMem(0xe283), 0xac);
        // CB AC 01DC
        gbc.setState(0x45f6, 0x572c, 0xa000, 0x5df, 0x23cf, 0x8a16, 0x0, 0x0);
        gbc.writeMem(0x45f6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x572c);
        EXPECT(gbc.pc(), 0x45f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01DD
        gbc.setState(0x2c89, 0xa378, 0x3890, 0x816, 0xc09d, 0xda8c, 0x1, 0x1);
        gbc.writeMem(0x2c89, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa378);
        EXPECT(gbc.pc(), 0x2c8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01DE
        gbc.setState(0x1ae8, 0x5f5c, 0xfa90, 0x57f1, 0xd8ec, 0x1c3a, 0x0, 0x0);
        gbc.writeMem(0x1ae8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5f5c);
        EXPECT(gbc.pc(), 0x1aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01DF
        gbc.setState(0xcba2, 0x2ff0, 0x9ff0, 0x8c22, 0xb32d, 0xf856, 0x0, 0x1);
        gbc.writeMem(0xcba2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2ff0);
        EXPECT(gbc.pc(), 0xcba4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba2), 0xcb);
        EXPECT(gbc.readMem(0xcba3), 0xac);
        // CB AC 01E0
        gbc.setState(0xabed, 0x5471, 0x92b0, 0xf839, 0x32bc, 0x9863, 0x0, 0x1);
        gbc.writeMem(0xabed, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5471);
        EXPECT(gbc.pc(), 0xabef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabed), 0xcb);
        EXPECT(gbc.readMem(0xabee), 0xac);
        // CB AC 01E1
        gbc.setState(0x93e7, 0x12ad, 0xbb20, 0xea20, 0x90a4, 0x2044, 0x1, 0x0);
        gbc.writeMem(0x93e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x12ad);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e7), 0xcb);
        EXPECT(gbc.readMem(0x93e8), 0xac);
        // CB AC 01E2
        gbc.setState(0xd3d6, 0x6cf4, 0xc5b0, 0x2e75, 0x933b, 0xcc94, 0x0, 0x0);
        gbc.writeMem(0xd3d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6cf4);
        EXPECT(gbc.pc(), 0xd3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d6), 0xcb);
        EXPECT(gbc.readMem(0xd3d7), 0xac);
        // CB AC 01E3
        gbc.setState(0x6ee0, 0x3a30, 0xc3a0, 0x3333, 0x6eed, 0x5954, 0x0, 0x1);
        gbc.writeMem(0x6ee0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3a30);
        EXPECT(gbc.pc(), 0x6ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01E4
        gbc.setState(0x3ae1, 0x5c9d, 0x2de0, 0xd9d3, 0x8bef, 0xe06b, 0x1, 0x0);
        gbc.writeMem(0x3ae1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5c9d);
        EXPECT(gbc.pc(), 0x3ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01E5
        gbc.setState(0xcc07, 0xacaf, 0x3f20, 0xa0ad, 0xcbb2, 0xf09f, 0x0, 0x0);
        gbc.writeMem(0xcc07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xacaf);
        EXPECT(gbc.pc(), 0xcc09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc07), 0xcb);
        EXPECT(gbc.readMem(0xcc08), 0xac);
        // CB AC 01E6
        gbc.setState(0xe401, 0x5846, 0xc5a0, 0x4b35, 0x4ed7, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0xe401, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5846);
        EXPECT(gbc.pc(), 0xe403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe401), 0xcb);
        EXPECT(gbc.readMem(0xe402), 0xac);
        // CB AC 01E7
        gbc.setState(0xe144, 0xfaf9, 0xbc90, 0xb31a, 0x79b0, 0x5fc3, 0x0, 0x1);
        gbc.writeMem(0xe144, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfaf9);
        EXPECT(gbc.pc(), 0xe146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe144), 0xcb);
        EXPECT(gbc.readMem(0xe145), 0xac);
        // CB AC 01E8
        gbc.setState(0xd831, 0x61f2, 0x16c0, 0xdc75, 0x11bb, 0x110a, 0x0, 0x1);
        gbc.writeMem(0xd831, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x61f2);
        EXPECT(gbc.pc(), 0xd833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd831), 0xcb);
        EXPECT(gbc.readMem(0xd832), 0xac);
        // CB AC 01E9
        gbc.setState(0xbfaa, 0x7de, 0xd9c0, 0x3d35, 0xe1fe, 0xfb7f, 0x1, 0x1);
        gbc.writeMem(0xbfaa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7de);
        EXPECT(gbc.pc(), 0xbfac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfaa), 0xcb);
        EXPECT(gbc.readMem(0xbfab), 0xac);
        // CB AC 01EA
        gbc.setState(0xcf4b, 0xea7b, 0xa5c0, 0xfc72, 0xf9a3, 0xb209, 0x1, 0x0);
        gbc.writeMem(0xcf4b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xea7b);
        EXPECT(gbc.pc(), 0xcf4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4b), 0xcb);
        EXPECT(gbc.readMem(0xcf4c), 0xac);
        // CB AC 01EB
        gbc.setState(0x6593, 0x527, 0x1a30, 0x3504, 0xd622, 0x663f, 0x1, 0x1);
        gbc.writeMem(0x6593, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x527);
        EXPECT(gbc.pc(), 0x6595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01EC
        gbc.setState(0x4631, 0x4588, 0x6cd0, 0x3fcd, 0x4900, 0x33ff, 0x0, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0x4633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01ED
        gbc.setState(0xe653, 0x2fe6, 0xa3d0, 0x6b5e, 0x710c, 0xdef, 0x0, 0x0);
        gbc.writeMem(0xe653, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2fe6);
        EXPECT(gbc.pc(), 0xe655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe653), 0xcb);
        EXPECT(gbc.readMem(0xe654), 0xac);
        // CB AC 01EE
        gbc.setState(0xcde9, 0x8a21, 0xcbb0, 0xc956, 0xdc66, 0xc03b, 0x0, 0x1);
        gbc.writeMem(0xcde9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8a21);
        EXPECT(gbc.pc(), 0xcdeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde9), 0xcb);
        EXPECT(gbc.readMem(0xcdea), 0xac);
        // CB AC 01EF
        gbc.setState(0xdd17, 0xac34, 0x7ee0, 0x770c, 0x8318, 0x1f17, 0x0, 0x1);
        gbc.writeMem(0xdd17, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xac34);
        EXPECT(gbc.pc(), 0xdd19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd17), 0xcb);
        EXPECT(gbc.readMem(0xdd18), 0xac);
        // CB AC 01F1
        gbc.setState(0xee5f, 0x5f2a, 0xc460, 0x6613, 0xd2ca, 0x6bf, 0x1, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5f2a);
        EXPECT(gbc.pc(), 0xee61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee5f), 0xcb);
        EXPECT(gbc.readMem(0xee60), 0xac);
        // CB AC 01F2
        gbc.setState(0x5f90, 0x1173, 0x3c40, 0xc0ac, 0x1d4f, 0x1019, 0x1, 0x0);
        gbc.writeMem(0x5f90, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1173);
        EXPECT(gbc.pc(), 0x5f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01F3
        gbc.setState(0x782b, 0x4f1c, 0x7540, 0x8acb, 0x6642, 0x791b, 0x1, 0x1);
        gbc.writeMem(0x782b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4f1c);
        EXPECT(gbc.pc(), 0x782d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01F4
        gbc.setState(0x74e0, 0x8ac1, 0x21f0, 0xb6b4, 0x7c5c, 0xcb75, 0x1, 0x0);
        gbc.writeMem(0x74e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8ac1);
        EXPECT(gbc.pc(), 0x74e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01F5
        gbc.setState(0x47c9, 0xab6c, 0x7260, 0x8331, 0x6839, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0x47c9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xab6c);
        EXPECT(gbc.pc(), 0x47cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01F6
        gbc.setState(0x57ca, 0x23d8, 0x21b0, 0x3b2, 0x7be4, 0x1cde, 0x0, 0x0);
        gbc.writeMem(0x57ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x23d8);
        EXPECT(gbc.pc(), 0x57cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01F7
        gbc.setState(0x172c, 0xde74, 0x3180, 0x68e0, 0x17cc, 0x485d, 0x1, 0x0);
        gbc.writeMem(0x172c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xde74);
        EXPECT(gbc.pc(), 0x172e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01F8
        gbc.setState(0x83a1, 0xe5b, 0x8080, 0x51d8, 0xf58c, 0x849f, 0x1, 0x0);
        gbc.writeMem(0x83a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe5b);
        EXPECT(gbc.pc(), 0x83a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a1), 0xcb);
        EXPECT(gbc.readMem(0x83a2), 0xac);
        // CB AC 01F9
        gbc.setState(0xa9b, 0xc6ec, 0x4c60, 0x8434, 0x7a2e, 0x847b, 0x0, 0x1);
        gbc.writeMem(0xa9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc6ec);
        EXPECT(gbc.pc(), 0xa9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01FA
        gbc.setState(0xe070, 0xbb7d, 0x840, 0x8be3, 0x179, 0xe700, 0x0, 0x0);
        gbc.writeMem(0xe070, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbb7d);
        EXPECT(gbc.pc(), 0xe072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe070), 0xcb);
        EXPECT(gbc.readMem(0xe071), 0xac);
        // CB AC 01FB
        gbc.setState(0x8b8a, 0x2bc6, 0xbcc0, 0x4d9f, 0xd4e, 0x5bf2, 0x0, 0x1);
        gbc.writeMem(0x8b8a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2bc6);
        EXPECT(gbc.pc(), 0x8b8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8a), 0xcb);
        EXPECT(gbc.readMem(0x8b8b), 0xac);
        // CB AC 01FC
        gbc.setState(0xc7c1, 0x44e7, 0x4c60, 0x5325, 0x1847, 0x7ed6, 0x0, 0x0);
        gbc.writeMem(0xc7c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x44e7);
        EXPECT(gbc.pc(), 0xc7c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c1), 0xcb);
        EXPECT(gbc.readMem(0xc7c2), 0xac);
        // CB AC 01FD
        gbc.setState(0x730a, 0x847c, 0x1870, 0x6811, 0xc14d, 0xed31, 0x0, 0x1);
        gbc.writeMem(0x730a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x847c);
        EXPECT(gbc.pc(), 0x730c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 01FE
        gbc.setState(0x58e0, 0x73b2, 0x2120, 0x2dab, 0x183d, 0x3907, 0x1, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x73b2);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 01FF
        gbc.setState(0x9b04, 0xb5f9, 0xc9f0, 0x5b75, 0x359b, 0x3f60, 0x0, 0x1);
        gbc.writeMem(0x9b04, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb5f9);
        EXPECT(gbc.pc(), 0x9b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b04), 0xcb);
        EXPECT(gbc.readMem(0x9b05), 0xac);
        // CB AC 0201
        gbc.setState(0xc08a, 0x8a00, 0xfd70, 0xcab1, 0xf428, 0x9fe2, 0x0, 0x0);
        gbc.writeMem(0xc08a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0xc08c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08a), 0xcb);
        EXPECT(gbc.readMem(0xc08b), 0xac);
        // CB AC 0202
        gbc.setState(0x3122, 0xfc53, 0xff90, 0x3f6f, 0x54ef, 0x75bb, 0x1, 0x1);
        gbc.writeMem(0x3122, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfc53);
        EXPECT(gbc.pc(), 0x3124);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0203
        gbc.setState(0x8cfa, 0x1313, 0xd190, 0xad8f, 0xf5ea, 0xa39a, 0x0, 0x0);
        gbc.writeMem(0x8cfa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1313);
        EXPECT(gbc.pc(), 0x8cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfa), 0xcb);
        EXPECT(gbc.readMem(0x8cfb), 0xac);
        // CB AC 0204
        gbc.setState(0x2256, 0xf85b, 0x9e40, 0xebf3, 0x4553, 0x263f, 0x1, 0x1);
        gbc.writeMem(0x2256, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf85b);
        EXPECT(gbc.pc(), 0x2258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0206
        gbc.setState(0x1817, 0x8d34, 0xe590, 0xe975, 0x6b71, 0xc0b2, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8d34);
        EXPECT(gbc.pc(), 0x1819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0207
        gbc.setState(0x7473, 0xf9ed, 0x31e0, 0x63b9, 0x855, 0x58e6, 0x1, 0x0);
        gbc.writeMem(0x7473, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf9ed);
        EXPECT(gbc.pc(), 0x7475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0208
        gbc.setState(0x6dc3, 0x1f2d, 0xee40, 0xd638, 0x7c99, 0xf34e, 0x0, 0x1);
        gbc.writeMem(0x6dc3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1f2d);
        EXPECT(gbc.pc(), 0x6dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0209
        gbc.setState(0x5837, 0x716d, 0xe3f0, 0xcf0, 0xb335, 0xfde8, 0x1, 0x0);
        gbc.writeMem(0x5837, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x716d);
        EXPECT(gbc.pc(), 0x5839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 020A
        gbc.setState(0x5ef7, 0xc71f, 0x8830, 0x9160, 0xd6a9, 0x9608, 0x1, 0x0);
        gbc.writeMem(0x5ef7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc71f);
        EXPECT(gbc.pc(), 0x5ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 020B
        gbc.setState(0xedf6, 0x1536, 0xa440, 0x5e72, 0xef48, 0x3f43, 0x0, 0x0);
        gbc.writeMem(0xedf6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1536);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf6), 0xcb);
        EXPECT(gbc.readMem(0xedf7), 0xac);
        // CB AC 020D
        gbc.setState(0xe0b8, 0x73bb, 0xf3a0, 0xf7d4, 0x4b8, 0xb451, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0xe0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b8), 0xcb);
        EXPECT(gbc.readMem(0xe0b9), 0xac);
        // CB AC 020E
        gbc.setState(0xe503, 0x46f3, 0xeb20, 0xf62, 0xf1ff, 0x68d2, 0x0, 0x0);
        gbc.writeMem(0xe503, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x46f3);
        EXPECT(gbc.pc(), 0xe505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe503), 0xcb);
        EXPECT(gbc.readMem(0xe504), 0xac);
        // CB AC 020F
        gbc.setState(0x7689, 0x68d7, 0x6220, 0xacf, 0x3af2, 0xe5be, 0x1, 0x1);
        gbc.writeMem(0x7689, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x68d7);
        EXPECT(gbc.pc(), 0x768b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0210
        gbc.setState(0x9fbc, 0xa54, 0x17d0, 0x10c2, 0x6133, 0xe5dc, 0x0, 0x0);
        gbc.writeMem(0x9fbc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa54);
        EXPECT(gbc.pc(), 0x9fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbc), 0xcb);
        EXPECT(gbc.readMem(0x9fbd), 0xac);
        // CB AC 0211
        gbc.setState(0x7a43, 0x2250, 0x4400, 0xbd39, 0x197, 0x8425, 0x0, 0x0);
        gbc.writeMem(0x7a43, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2250);
        EXPECT(gbc.pc(), 0x7a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0212
        gbc.setState(0x946a, 0xfe6e, 0xdf10, 0x4e84, 0xa189, 0x1719, 0x1, 0x1);
        gbc.writeMem(0x946a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfe6e);
        EXPECT(gbc.pc(), 0x946c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x946a), 0xcb);
        EXPECT(gbc.readMem(0x946b), 0xac);
        // CB AC 0213
        gbc.setState(0xc845, 0x5a68, 0xb050, 0xea94, 0x8889, 0x1341, 0x0, 0x1);
        gbc.writeMem(0xc845, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5a68);
        EXPECT(gbc.pc(), 0xc847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc845), 0xcb);
        EXPECT(gbc.readMem(0xc846), 0xac);
        // CB AC 0214
        gbc.setState(0xe6d7, 0x3a36, 0x64e0, 0xee76, 0x921f, 0xe5cb, 0x1, 0x0);
        gbc.writeMem(0xe6d7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3a36);
        EXPECT(gbc.pc(), 0xe6d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d7), 0xcb);
        EXPECT(gbc.readMem(0xe6d8), 0xac);
        // CB AC 0215
        gbc.setState(0xe16f, 0xa300, 0x7be0, 0xf1b9, 0x379, 0xf0d0, 0x1, 0x0);
        gbc.writeMem(0xe16f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xa300);
        EXPECT(gbc.pc(), 0xe171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16f), 0xcb);
        EXPECT(gbc.readMem(0xe170), 0xac);
        // CB AC 0216
        gbc.setState(0xc7a, 0x670a, 0x5320, 0xc468, 0x48a8, 0xd120, 0x1, 0x0);
        gbc.writeMem(0xc7a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x670a);
        EXPECT(gbc.pc(), 0xc7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0217
        gbc.setState(0xd8e2, 0x8204, 0x3570, 0x9c44, 0xc542, 0xf27e, 0x0, 0x0);
        gbc.writeMem(0xd8e2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8204);
        EXPECT(gbc.pc(), 0xd8e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e2), 0xcb);
        EXPECT(gbc.readMem(0xd8e3), 0xac);
        // CB AC 0218
        gbc.setState(0x771d, 0xa038, 0xb4c0, 0xe678, 0xb7a6, 0x58e2, 0x1, 0x0);
        gbc.writeMem(0x771d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa038);
        EXPECT(gbc.pc(), 0x771f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0219
        gbc.setState(0xaef8, 0x73f7, 0x1f10, 0x8bf3, 0x9547, 0xe03c, 0x1, 0x1);
        gbc.writeMem(0xaef8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x73f7);
        EXPECT(gbc.pc(), 0xaefa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef8), 0xcb);
        EXPECT(gbc.readMem(0xaef9), 0xac);
        // CB AC 021A
        gbc.setState(0x6ee3, 0xda9a, 0x4430, 0x998, 0xc378, 0x9d29, 0x1, 0x0);
        gbc.writeMem(0x6ee3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xda9a);
        EXPECT(gbc.pc(), 0x6ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 021B
        gbc.setState(0x6933, 0x49e, 0xae90, 0x64cf, 0xe7bf, 0xa4b4, 0x0, 0x0);
        gbc.writeMem(0x6933, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x49e);
        EXPECT(gbc.pc(), 0x6935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 021C
        gbc.setState(0x70b, 0x7de0, 0xed90, 0xf791, 0xd9b2, 0x114, 0x1, 0x1);
        gbc.writeMem(0x70b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7de0);
        EXPECT(gbc.pc(), 0x70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 021D
        gbc.setState(0x24d3, 0xfb4b, 0xd450, 0x3a4d, 0xfa8d, 0x2993, 0x0, 0x0);
        gbc.writeMem(0x24d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfb4b);
        EXPECT(gbc.pc(), 0x24d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 021E
        gbc.setState(0x4fa1, 0x97aa, 0x2560, 0x10fb, 0xcad3, 0x3f4c, 0x0, 0x0);
        gbc.writeMem(0x4fa1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x97aa);
        EXPECT(gbc.pc(), 0x4fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 021F
        gbc.setState(0xe9de, 0x6c6a, 0x8380, 0x246, 0x7337, 0x2d13, 0x1, 0x0);
        gbc.writeMem(0xe9de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6c6a);
        EXPECT(gbc.pc(), 0xe9e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9de), 0xcb);
        EXPECT(gbc.readMem(0xe9df), 0xac);
        // CB AC 0220
        gbc.setState(0x84e8, 0x9b98, 0xf490, 0x7079, 0x9a62, 0xf215, 0x1, 0x0);
        gbc.writeMem(0x84e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9b98);
        EXPECT(gbc.pc(), 0x84ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e8), 0xcb);
        EXPECT(gbc.readMem(0x84e9), 0xac);
        // CB AC 0221
        gbc.setState(0x5796, 0xb4bd, 0x8300, 0xbf15, 0x977d, 0xf1cd, 0x0, 0x0);
        gbc.writeMem(0x5796, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb4bd);
        EXPECT(gbc.pc(), 0x5798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0222
        gbc.setState(0x605d, 0x5786, 0x8dc0, 0xbdb5, 0x482a, 0x91ff, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5786);
        EXPECT(gbc.pc(), 0x605f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0223
        gbc.setState(0x99fc, 0x7817, 0x9590, 0x6660, 0x9012, 0xeddc, 0x0, 0x0);
        gbc.writeMem(0x99fc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7817);
        EXPECT(gbc.pc(), 0x99fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fc), 0xcb);
        EXPECT(gbc.readMem(0x99fd), 0xac);
        // CB AC 0224
        gbc.setState(0xb52a, 0x1534, 0x1f10, 0xf371, 0x67bb, 0x8e7d, 0x0, 0x1);
        gbc.writeMem(0xb52a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1534);
        EXPECT(gbc.pc(), 0xb52c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52a), 0xcb);
        EXPECT(gbc.readMem(0xb52b), 0xac);
        // CB AC 0225
        gbc.setState(0x3264, 0xf8a2, 0xf850, 0xfd45, 0x2089, 0x671f, 0x0, 0x1);
        gbc.writeMem(0x3264, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf8a2);
        EXPECT(gbc.pc(), 0x3266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0226
        gbc.setState(0xb506, 0x9acf, 0xa7e0, 0xae1e, 0xdbbd, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9acf);
        EXPECT(gbc.pc(), 0xb508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb506), 0xcb);
        EXPECT(gbc.readMem(0xb507), 0xac);
        // CB AC 0227
        gbc.setState(0x5f53, 0xef50, 0x7c80, 0xa6c7, 0x3009, 0xa904, 0x0, 0x0);
        gbc.writeMem(0x5f53, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xef50);
        EXPECT(gbc.pc(), 0x5f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0228
        gbc.setState(0xcd1d, 0xd617, 0x8410, 0x5063, 0x4bf8, 0x405d, 0x0, 0x0);
        gbc.writeMem(0xcd1d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd617);
        EXPECT(gbc.pc(), 0xcd1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd1d), 0xcb);
        EXPECT(gbc.readMem(0xcd1e), 0xac);
        // CB AC 0229
        gbc.setState(0xc940, 0x94b0, 0xe460, 0x251, 0xa248, 0x889d, 0x0, 0x0);
        gbc.writeMem(0xc940, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x94b0);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc940), 0xcb);
        EXPECT(gbc.readMem(0xc941), 0xac);
        // CB AC 022A
        gbc.setState(0x527e, 0x97ca, 0x92f0, 0xbd1a, 0x1e8f, 0xe04a, 0x0, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x97ca);
        EXPECT(gbc.pc(), 0x5280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 022B
        gbc.setState(0x1e9e, 0x81ba, 0xaf60, 0x223b, 0xcf44, 0xf98c, 0x0, 0x0);
        gbc.writeMem(0x1e9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x81ba);
        EXPECT(gbc.pc(), 0x1ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 022C
        gbc.setState(0x28db, 0x6c45, 0x1ce0, 0x884, 0x78fc, 0x2c3b, 0x1, 0x0);
        gbc.writeMem(0x28db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6c45);
        EXPECT(gbc.pc(), 0x28dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 022D
        gbc.setState(0xd485, 0x2d39, 0x8d20, 0xc584, 0xdc27, 0x7e87, 0x1, 0x1);
        gbc.writeMem(0xd485, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2d39);
        EXPECT(gbc.pc(), 0xd487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd485), 0xcb);
        EXPECT(gbc.readMem(0xd486), 0xac);
        // CB AC 022E
        gbc.setState(0x6d62, 0x6840, 0x4490, 0xc415, 0xdb52, 0x21bc, 0x1, 0x0);
        gbc.writeMem(0x6d62, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6840);
        EXPECT(gbc.pc(), 0x6d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 022F
        gbc.setState(0x5d27, 0xb05e, 0x4f90, 0x54d6, 0x6920, 0x2111, 0x0, 0x0);
        gbc.writeMem(0x5d27, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb05e);
        EXPECT(gbc.pc(), 0x5d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0230
        gbc.setState(0x80a1, 0x83f3, 0x2bb0, 0xd0c8, 0x5356, 0x8105, 0x1, 0x1);
        gbc.writeMem(0x80a1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x83f3);
        EXPECT(gbc.pc(), 0x80a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a1), 0xcb);
        EXPECT(gbc.readMem(0x80a2), 0xac);
        // CB AC 0231
        gbc.setState(0xb16b, 0xec9b, 0xdfa0, 0xde62, 0xcbf6, 0xa59f, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xec9b);
        EXPECT(gbc.pc(), 0xb16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb16b), 0xcb);
        EXPECT(gbc.readMem(0xb16c), 0xac);
        // CB AC 0232
        gbc.setState(0xe6c4, 0x6c6c, 0x7a70, 0x6c02, 0x9c23, 0xe8e4, 0x1, 0x1);
        gbc.writeMem(0xe6c4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6c6c);
        EXPECT(gbc.pc(), 0xe6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c4), 0xcb);
        EXPECT(gbc.readMem(0xe6c5), 0xac);
        // CB AC 0233
        gbc.setState(0x71af, 0x45d4, 0x7e50, 0x7ac8, 0x68af, 0x43d1, 0x0, 0x0);
        gbc.writeMem(0x71af, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x45d4);
        EXPECT(gbc.pc(), 0x71b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0234
        gbc.setState(0xc88c, 0xd3ab, 0xddf0, 0xeeaa, 0xeb75, 0xb782, 0x1, 0x0);
        gbc.writeMem(0xc88c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd3ab);
        EXPECT(gbc.pc(), 0xc88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc88c), 0xcb);
        EXPECT(gbc.readMem(0xc88d), 0xac);
        // CB AC 0237
        gbc.setState(0x1bad, 0xb2f, 0xe6a0, 0xefbc, 0xa0c9, 0xa8a3, 0x0, 0x0);
        gbc.writeMem(0x1bad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb2f);
        EXPECT(gbc.pc(), 0x1baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0239
        gbc.setState(0xbbb3, 0xad4c, 0x6420, 0x8b4f, 0xcf96, 0x13df, 0x1, 0x0);
        gbc.writeMem(0xbbb3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xad4c);
        EXPECT(gbc.pc(), 0xbbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb3), 0xcb);
        EXPECT(gbc.readMem(0xbbb4), 0xac);
        // CB AC 023A
        gbc.setState(0xcaf2, 0xd5fc, 0xc3b0, 0xb777, 0xb493, 0x9edf, 0x0, 0x0);
        gbc.writeMem(0xcaf2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd5fc);
        EXPECT(gbc.pc(), 0xcaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf2), 0xcb);
        EXPECT(gbc.readMem(0xcaf3), 0xac);
        // CB AC 023B
        gbc.setState(0xb53f, 0x739d, 0x3520, 0x84d9, 0x2d66, 0x541, 0x1, 0x1);
        gbc.writeMem(0xb53f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x739d);
        EXPECT(gbc.pc(), 0xb541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53f), 0xcb);
        EXPECT(gbc.readMem(0xb540), 0xac);
        // CB AC 023C
        gbc.setState(0xf8, 0xa57e, 0x7a40, 0x726e, 0x4dbe, 0xe39a, 0x0, 0x0);
        gbc.writeMem(0xf8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa57e);
        EXPECT(gbc.pc(), 0xfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 023D
        gbc.setState(0x1df2, 0xbe9a, 0x2150, 0x2c69, 0x32bb, 0xbcdb, 0x1, 0x1);
        gbc.writeMem(0x1df2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbe9a);
        EXPECT(gbc.pc(), 0x1df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 023E
        gbc.setState(0x4a7f, 0xb9bf, 0xaaf0, 0xd405, 0x604b, 0x1609, 0x1, 0x1);
        gbc.writeMem(0x4a7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb9bf);
        EXPECT(gbc.pc(), 0x4a81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 023F
        gbc.setState(0xc154, 0x4eed, 0xef10, 0x2a2f, 0x7e34, 0x5083, 0x1, 0x1);
        gbc.writeMem(0xc154, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4eed);
        EXPECT(gbc.pc(), 0xc156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc154), 0xcb);
        EXPECT(gbc.readMem(0xc155), 0xac);
        // CB AC 0240
        gbc.setState(0x5c47, 0xdec8, 0x3e40, 0x79b4, 0xb163, 0x600f, 0x1, 0x1);
        gbc.writeMem(0x5c47, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdec8);
        EXPECT(gbc.pc(), 0x5c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0241
        gbc.setState(0x61b1, 0x89f7, 0x75f0, 0x374e, 0xdb5b, 0x46a9, 0x1, 0x1);
        gbc.writeMem(0x61b1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x89f7);
        EXPECT(gbc.pc(), 0x61b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0242
        gbc.setState(0xca4c, 0x7a98, 0x4ab0, 0x70af, 0x5ae6, 0x2ec4, 0x1, 0x0);
        gbc.writeMem(0xca4c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7a98);
        EXPECT(gbc.pc(), 0xca4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4c), 0xcb);
        EXPECT(gbc.readMem(0xca4d), 0xac);
        // CB AC 0243
        gbc.setState(0x5a0, 0x4a10, 0x1d20, 0x9783, 0x6dc6, 0x19d3, 0x0, 0x1);
        gbc.writeMem(0x5a0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4a10);
        EXPECT(gbc.pc(), 0x5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0244
        gbc.setState(0x4331, 0x59bc, 0x2d20, 0x4cfa, 0xb639, 0xe009, 0x1, 0x1);
        gbc.writeMem(0x4331, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x59bc);
        EXPECT(gbc.pc(), 0x4333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0245
        gbc.setState(0x878, 0xd76d, 0xd1b0, 0x3147, 0x148, 0x7353, 0x0, 0x1);
        gbc.writeMem(0x878, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd76d);
        EXPECT(gbc.pc(), 0x87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0246
        gbc.setState(0x773e, 0xb656, 0x9130, 0x7737, 0xcf6c, 0xda7, 0x1, 0x0);
        gbc.writeMem(0x773e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb656);
        EXPECT(gbc.pc(), 0x7740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0247
        gbc.setState(0xaf91, 0x5ddd, 0x9e60, 0x921c, 0x9d53, 0x5066, 0x0, 0x0);
        gbc.writeMem(0xaf91, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5ddd);
        EXPECT(gbc.pc(), 0xaf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf91), 0xcb);
        EXPECT(gbc.readMem(0xaf92), 0xac);
        // CB AC 0248
        gbc.setState(0x8222, 0x5dbd, 0x2940, 0xa181, 0x44cd, 0x24fb, 0x0, 0x0);
        gbc.writeMem(0x8222, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5dbd);
        EXPECT(gbc.pc(), 0x8224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8222), 0xcb);
        EXPECT(gbc.readMem(0x8223), 0xac);
        // CB AC 024A
        gbc.setState(0x5512, 0xe2a1, 0xa0a0, 0xb262, 0x9ada, 0x12ac, 0x1, 0x1);
        gbc.writeMem(0x5512, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe2a1);
        EXPECT(gbc.pc(), 0x5514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 024C
        gbc.setState(0x9e6b, 0x2ac8, 0xbcb0, 0xb777, 0xaaad, 0xf1bf, 0x0, 0x1);
        gbc.writeMem(0x9e6b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2ac8);
        EXPECT(gbc.pc(), 0x9e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6b), 0xcb);
        EXPECT(gbc.readMem(0x9e6c), 0xac);
        // CB AC 024D
        gbc.setState(0x1af5, 0xff4c, 0x6810, 0x19b2, 0xe127, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x1af5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xff4c);
        EXPECT(gbc.pc(), 0x1af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 024E
        gbc.setState(0x498f, 0xd13, 0x29a0, 0x9ed7, 0xd88d, 0xbd48, 0x0, 0x1);
        gbc.writeMem(0x498f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd13);
        EXPECT(gbc.pc(), 0x4991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 024F
        gbc.setState(0x6f39, 0xb4ff, 0x1e0, 0xd43f, 0xa489, 0xa432, 0x1, 0x1);
        gbc.writeMem(0x6f39, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb4ff);
        EXPECT(gbc.pc(), 0x6f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0250
        gbc.setState(0xc385, 0xfc39, 0x36a0, 0x1435, 0x65b7, 0x2fe3, 0x1, 0x0);
        gbc.writeMem(0xc385, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfc39);
        EXPECT(gbc.pc(), 0xc387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc385), 0xcb);
        EXPECT(gbc.readMem(0xc386), 0xac);
        // CB AC 0251
        gbc.setState(0x6896, 0xf391, 0x8b40, 0xb196, 0x7c0f, 0x5f1d, 0x0, 0x0);
        gbc.writeMem(0x6896, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf391);
        EXPECT(gbc.pc(), 0x6898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0252
        gbc.setState(0x51f8, 0x98a5, 0x9560, 0x4461, 0x2dbe, 0xf91e, 0x1, 0x0);
        gbc.writeMem(0x51f8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x98a5);
        EXPECT(gbc.pc(), 0x51fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0253
        gbc.setState(0xea2a, 0x7f70, 0x33f0, 0x7657, 0xe029, 0x1385, 0x1, 0x1);
        gbc.writeMem(0xea2a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7f70);
        EXPECT(gbc.pc(), 0xea2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2a), 0xcb);
        EXPECT(gbc.readMem(0xea2b), 0xac);
        // CB AC 0254
        gbc.setState(0x407d, 0xe489, 0x35b0, 0xff71, 0xd494, 0xe353, 0x1, 0x0);
        gbc.writeMem(0x407d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe489);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0255
        gbc.setState(0x3c1e, 0x253e, 0x6f0, 0xbe1e, 0x6fb6, 0xb8a5, 0x0, 0x1);
        gbc.writeMem(0x3c1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x253e);
        EXPECT(gbc.pc(), 0x3c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0256
        gbc.setState(0x8580, 0xb05, 0xb7a0, 0xb70, 0x5032, 0xc7f2, 0x0, 0x1);
        gbc.writeMem(0x8580, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb05);
        EXPECT(gbc.pc(), 0x8582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8580), 0xcb);
        EXPECT(gbc.readMem(0x8581), 0xac);
        // CB AC 0257
        gbc.setState(0x566a, 0xe0d9, 0x87f0, 0x4dca, 0xef21, 0xdfae, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe0d9);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0258
        gbc.setState(0xe9e2, 0x55ea, 0x1870, 0xe4a1, 0xdc56, 0x63be, 0x1, 0x0);
        gbc.writeMem(0xe9e2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x55ea);
        EXPECT(gbc.pc(), 0xe9e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e2), 0xcb);
        EXPECT(gbc.readMem(0xe9e3), 0xac);
        // CB AC 0259
        gbc.setState(0x324e, 0x551b, 0x7730, 0xa76a, 0x272c, 0x8ec8, 0x1, 0x0);
        gbc.writeMem(0x324e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x551b);
        EXPECT(gbc.pc(), 0x3250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 025A
        gbc.setState(0x366d, 0xcd11, 0xe140, 0x6c5, 0xd82f, 0xdb7a, 0x0, 0x0);
        gbc.writeMem(0x366d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcd11);
        EXPECT(gbc.pc(), 0x366f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 025C
        gbc.setState(0xb7f, 0x9ff8, 0x4620, 0x95f4, 0xbf9, 0xc549, 0x1, 0x0);
        gbc.writeMem(0xb7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9ff8);
        EXPECT(gbc.pc(), 0xb81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 025D
        gbc.setState(0x32d, 0xf482, 0x5f90, 0xa65f, 0xbf0b, 0x32fe, 0x1, 0x1);
        gbc.writeMem(0x32d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf482);
        EXPECT(gbc.pc(), 0x32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 025E
        gbc.setState(0xdbcb, 0x4a29, 0xa200, 0xa411, 0xd2eb, 0x8733, 0x1, 0x1);
        gbc.writeMem(0xdbcb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4a29);
        EXPECT(gbc.pc(), 0xdbcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbcb), 0xcb);
        EXPECT(gbc.readMem(0xdbcc), 0xac);
        // CB AC 025F
        gbc.setState(0x7ba, 0xf70b, 0xe970, 0x5b5f, 0x1b6a, 0x2a45, 0x0, 0x0);
        gbc.writeMem(0x7ba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf70b);
        EXPECT(gbc.pc(), 0x7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0260
        gbc.setState(0x673f, 0x2175, 0x89c0, 0x107, 0x55ed, 0xc728, 0x1, 0x1);
        gbc.writeMem(0x673f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2175);
        EXPECT(gbc.pc(), 0x6741);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0261
        gbc.setState(0x4f73, 0xe9f6, 0xab60, 0x9448, 0x4d71, 0x7c63, 0x0, 0x0);
        gbc.writeMem(0x4f73, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe9f6);
        EXPECT(gbc.pc(), 0x4f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0262
        gbc.setState(0x1064, 0xfbf6, 0xf8c0, 0xf4e7, 0x9151, 0x8533, 0x1, 0x1);
        gbc.writeMem(0x1064, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfbf6);
        EXPECT(gbc.pc(), 0x1066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0263
        gbc.setState(0x10a4, 0x4298, 0x51e0, 0xe38d, 0x99b, 0xbdb8, 0x0, 0x0);
        gbc.writeMem(0x10a4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4298);
        EXPECT(gbc.pc(), 0x10a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0264
        gbc.setState(0x6d45, 0xd9b7, 0xc530, 0x403e, 0x4f78, 0x27b3, 0x1, 0x1);
        gbc.writeMem(0x6d45, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd9b7);
        EXPECT(gbc.pc(), 0x6d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0265
        gbc.setState(0xb199, 0xbf23, 0xd930, 0x4d5f, 0xc63b, 0x5582, 0x0, 0x0);
        gbc.writeMem(0xb199, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbf23);
        EXPECT(gbc.pc(), 0xb19b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb199), 0xcb);
        EXPECT(gbc.readMem(0xb19a), 0xac);
        // CB AC 0266
        gbc.setState(0x8155, 0x7c49, 0xecd0, 0x9fac, 0xaa13, 0xee48, 0x1, 0x1);
        gbc.writeMem(0x8155, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7c49);
        EXPECT(gbc.pc(), 0x8157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8155), 0xcb);
        EXPECT(gbc.readMem(0x8156), 0xac);
        // CB AC 0267
        gbc.setState(0x49cb, 0x83ad, 0x42c0, 0x8861, 0x961c, 0x901e, 0x0, 0x0);
        gbc.writeMem(0x49cb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x83ad);
        EXPECT(gbc.pc(), 0x49cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0268
        gbc.setState(0xaa14, 0x6d3f, 0x75b0, 0xf931, 0xf542, 0x2c7, 0x1, 0x0);
        gbc.writeMem(0xaa14, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6d3f);
        EXPECT(gbc.pc(), 0xaa16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa14), 0xcb);
        EXPECT(gbc.readMem(0xaa15), 0xac);
        // CB AC 0269
        gbc.setState(0x9ef, 0x7981, 0xd080, 0xc96e, 0x2ae1, 0xab02, 0x1, 0x1);
        gbc.writeMem(0x9ef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7981);
        EXPECT(gbc.pc(), 0x9f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 026A
        gbc.setState(0xeb8b, 0xa65b, 0xd340, 0x1a7e, 0x30da, 0xa49e, 0x1, 0x0);
        gbc.writeMem(0xeb8b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa65b);
        EXPECT(gbc.pc(), 0xeb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8b), 0xcb);
        EXPECT(gbc.readMem(0xeb8c), 0xac);
        // CB AC 026C
        gbc.setState(0x5d56, 0xc796, 0xa840, 0xcca0, 0x82ee, 0x804e, 0x0, 0x0);
        gbc.writeMem(0x5d56, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc796);
        EXPECT(gbc.pc(), 0x5d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 026D
        gbc.setState(0xc9cc, 0x6f30, 0x9920, 0x54b7, 0x1d28, 0xa6e4, 0x0, 0x0);
        gbc.writeMem(0xc9cc, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6f30);
        EXPECT(gbc.pc(), 0xc9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cc), 0xcb);
        EXPECT(gbc.readMem(0xc9cd), 0xac);
        // CB AC 026E
        gbc.setState(0xe0b5, 0x205a, 0xfbf0, 0x1007, 0x2f6b, 0x1bfc, 0x1, 0x0);
        gbc.writeMem(0xe0b5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x205a);
        EXPECT(gbc.pc(), 0xe0b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0b5), 0xcb);
        EXPECT(gbc.readMem(0xe0b6), 0xac);
        // CB AC 026F
        gbc.setState(0xbd45, 0x1b40, 0x7e0, 0x1ceb, 0x8480, 0x9868, 0x1, 0x1);
        gbc.writeMem(0xbd45, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1b40);
        EXPECT(gbc.pc(), 0xbd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd45), 0xcb);
        EXPECT(gbc.readMem(0xbd46), 0xac);
        // CB AC 0271
        gbc.setState(0x13f0, 0x51ac, 0x7f80, 0x846c, 0x893, 0xa86e, 0x0, 0x1);
        gbc.writeMem(0x13f0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x51ac);
        EXPECT(gbc.pc(), 0x13f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0272
        gbc.setState(0x33da, 0xd8aa, 0x3770, 0xc042, 0xa6a7, 0xba, 0x0, 0x0);
        gbc.writeMem(0x33da, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd8aa);
        EXPECT(gbc.pc(), 0x33dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0273
        gbc.setState(0xbc1, 0xf591, 0x5190, 0xc5c0, 0x2937, 0xc4ff, 0x1, 0x1);
        gbc.writeMem(0xbc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf591);
        EXPECT(gbc.pc(), 0xbc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0274
        gbc.setState(0x3425, 0x5076, 0x3c70, 0xe96f, 0x8149, 0x7abe, 0x0, 0x0);
        gbc.writeMem(0x3425, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5076);
        EXPECT(gbc.pc(), 0x3427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0275
        gbc.setState(0x234b, 0xd310, 0x460, 0x8001, 0xa549, 0xe35d, 0x1, 0x0);
        gbc.writeMem(0x234b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd310);
        EXPECT(gbc.pc(), 0x234d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0276
        gbc.setState(0x2f36, 0x56ae, 0x4e0, 0x1e0a, 0x8dd5, 0x26, 0x0, 0x1);
        gbc.writeMem(0x2f36, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x56ae);
        EXPECT(gbc.pc(), 0x2f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0277
        gbc.setState(0xe64, 0xba6, 0x7720, 0x7f57, 0x7de, 0x887b, 0x1, 0x0);
        gbc.writeMem(0xe64, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xba6);
        EXPECT(gbc.pc(), 0xe66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0279
        gbc.setState(0xecf1, 0x5433, 0x77e0, 0x88fd, 0x4f75, 0x4ec2, 0x1, 0x0);
        gbc.writeMem(0xecf1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5433);
        EXPECT(gbc.pc(), 0xecf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf1), 0xcb);
        EXPECT(gbc.readMem(0xecf2), 0xac);
        // CB AC 027A
        gbc.setState(0xbff0, 0xc118, 0xac80, 0xab23, 0x18c7, 0x9b36, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc118);
        EXPECT(gbc.pc(), 0xbff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff0), 0xcb);
        EXPECT(gbc.readMem(0xbff1), 0xac);
        // CB AC 027C
        gbc.setState(0x9979, 0x4013, 0xfd30, 0xf8ca, 0x14e8, 0x9cfc, 0x1, 0x0);
        gbc.writeMem(0x9979, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4013);
        EXPECT(gbc.pc(), 0x997b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9979), 0xcb);
        EXPECT(gbc.readMem(0x997a), 0xac);
        // CB AC 027D
        gbc.setState(0x8f37, 0x7d4a, 0x6df0, 0x849, 0x13f8, 0xb405, 0x1, 0x0);
        gbc.writeMem(0x8f37, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7d4a);
        EXPECT(gbc.pc(), 0x8f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f37), 0xcb);
        EXPECT(gbc.readMem(0x8f38), 0xac);
        // CB AC 027E
        gbc.setState(0x87be, 0x301, 0xf7f0, 0x96f2, 0xa153, 0x4efc, 0x0, 0x0);
        gbc.writeMem(0x87be, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x301);
        EXPECT(gbc.pc(), 0x87c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87be), 0xcb);
        EXPECT(gbc.readMem(0x87bf), 0xac);
        // CB AC 027F
        gbc.setState(0xe6ad, 0xadea, 0xebd0, 0x33c5, 0xa447, 0x19d8, 0x1, 0x1);
        gbc.writeMem(0xe6ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xadea);
        EXPECT(gbc.pc(), 0xe6af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ad), 0xcb);
        EXPECT(gbc.readMem(0xe6ae), 0xac);
        // CB AC 0280
        gbc.setState(0xb854, 0x204c, 0x77f0, 0xb6fc, 0x4023, 0x7b1a, 0x1, 0x0);
        gbc.writeMem(0xb854, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0xb856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb854), 0xcb);
        EXPECT(gbc.readMem(0xb855), 0xac);
        // CB AC 0281
        gbc.setState(0x68b2, 0x952a, 0x7ea0, 0xa166, 0xc870, 0x204a, 0x0, 0x0);
        gbc.writeMem(0x68b2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x952a);
        EXPECT(gbc.pc(), 0x68b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0282
        gbc.setState(0x5071, 0x6466, 0xf390, 0x8aa7, 0xcbc5, 0xaeca, 0x0, 0x0);
        gbc.writeMem(0x5071, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6466);
        EXPECT(gbc.pc(), 0x5073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0283
        gbc.setState(0x9f78, 0x8877, 0xd40, 0x1fb8, 0xd9b9, 0x3c13, 0x1, 0x1);
        gbc.writeMem(0x9f78, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8877);
        EXPECT(gbc.pc(), 0x9f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f78), 0xcb);
        EXPECT(gbc.readMem(0x9f79), 0xac);
        // CB AC 0284
        gbc.setState(0x3234, 0x3f09, 0x1e40, 0x58d7, 0x5bda, 0x9a9f, 0x0, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3f09);
        EXPECT(gbc.pc(), 0x3236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0285
        gbc.setState(0x639b, 0xf170, 0x97c0, 0x232, 0xeafe, 0xd4ef, 0x0, 0x0);
        gbc.writeMem(0x639b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf170);
        EXPECT(gbc.pc(), 0x639d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0286
        gbc.setState(0x26e0, 0xe51f, 0x6530, 0xe24c, 0x5b73, 0xf9ad, 0x0, 0x0);
        gbc.writeMem(0x26e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe51f);
        EXPECT(gbc.pc(), 0x26e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0287
        gbc.setState(0x129d, 0xa9ed, 0xe9f0, 0x8780, 0xd870, 0x9790, 0x0, 0x1);
        gbc.writeMem(0x129d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa9ed);
        EXPECT(gbc.pc(), 0x129f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0288
        gbc.setState(0x8881, 0x1628, 0xeb30, 0x7d66, 0xffc9, 0x5e6f, 0x0, 0x1);
        gbc.writeMem(0x8881, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1628);
        EXPECT(gbc.pc(), 0x8883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8881), 0xcb);
        EXPECT(gbc.readMem(0x8882), 0xac);
        // CB AC 0289
        gbc.setState(0xe3ff, 0x2503, 0x4110, 0xaaf5, 0xbbb1, 0x6bea, 0x1, 0x0);
        gbc.writeMem(0xe3ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2503);
        EXPECT(gbc.pc(), 0xe401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ff), 0xcb);
        EXPECT(gbc.readMem(0xe400), 0xac);
        // CB AC 028A
        gbc.setState(0xbe9d, 0x403e, 0x9870, 0xdb8d, 0x568f, 0x8cd4, 0x0, 0x1);
        gbc.writeMem(0xbe9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x403e);
        EXPECT(gbc.pc(), 0xbe9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe9d), 0xcb);
        EXPECT(gbc.readMem(0xbe9e), 0xac);
        // CB AC 028B
        gbc.setState(0xc0ca, 0x7e31, 0x7b80, 0x4e76, 0xff37, 0x6078, 0x0, 0x1);
        gbc.writeMem(0xc0ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7e31);
        EXPECT(gbc.pc(), 0xc0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ca), 0xcb);
        EXPECT(gbc.readMem(0xc0cb), 0xac);
        // CB AC 028C
        gbc.setState(0xe70, 0xc3a5, 0x9170, 0x86d4, 0x7b55, 0xa9fc, 0x1, 0x1);
        gbc.writeMem(0xe70, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc3a5);
        EXPECT(gbc.pc(), 0xe72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 028D
        gbc.setState(0xc7d0, 0xe7f4, 0x3f40, 0x2b4c, 0xdc31, 0xa4c5, 0x0, 0x0);
        gbc.writeMem(0xc7d0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe7f4);
        EXPECT(gbc.pc(), 0xc7d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d0), 0xcb);
        EXPECT(gbc.readMem(0xc7d1), 0xac);
        // CB AC 028E
        gbc.setState(0x452e, 0xce51, 0x1b40, 0x44f, 0x650d, 0x9a07, 0x1, 0x0);
        gbc.writeMem(0x452e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xce51);
        EXPECT(gbc.pc(), 0x4530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 028F
        gbc.setState(0x890f, 0x1d47, 0xb680, 0x9113, 0x2aba, 0xc8b0, 0x1, 0x1);
        gbc.writeMem(0x890f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1d47);
        EXPECT(gbc.pc(), 0x8911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890f), 0xcb);
        EXPECT(gbc.readMem(0x8910), 0xac);
        // CB AC 0290
        gbc.setState(0x8112, 0xb9ce, 0x30, 0x5902, 0xbdba, 0x16d3, 0x1, 0x1);
        gbc.writeMem(0x8112, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb9ce);
        EXPECT(gbc.pc(), 0x8114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8112), 0xcb);
        EXPECT(gbc.readMem(0x8113), 0xac);
        // CB AC 0291
        gbc.setState(0x1a5, 0xe8f0, 0x2f0, 0x68d7, 0xc608, 0x4751, 0x1, 0x0);
        gbc.writeMem(0x1a5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe8f0);
        EXPECT(gbc.pc(), 0x1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0292
        gbc.setState(0x7117, 0xf9c, 0x6310, 0xd753, 0x817f, 0x2f0b, 0x0, 0x1);
        gbc.writeMem(0x7117, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf9c);
        EXPECT(gbc.pc(), 0x7119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0293
        gbc.setState(0x7b33, 0x26da, 0xf5a0, 0x1b77, 0xe78a, 0xf675, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x26da);
        EXPECT(gbc.pc(), 0x7b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0294
        gbc.setState(0x11b4, 0x3c08, 0x5d80, 0x470d, 0xace6, 0x8b6, 0x0, 0x0);
        gbc.writeMem(0x11b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3c08);
        EXPECT(gbc.pc(), 0x11b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0295
        gbc.setState(0xaa0d, 0xacc5, 0x1be0, 0x33ca, 0x8d77, 0x2822, 0x1, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xacc5);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0d), 0xcb);
        EXPECT(gbc.readMem(0xaa0e), 0xac);
        // CB AC 0296
        gbc.setState(0xef07, 0xaaaa, 0xefb0, 0x3740, 0xa98f, 0x57f, 0x0, 0x0);
        gbc.writeMem(0xef07, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xaaaa);
        EXPECT(gbc.pc(), 0xef09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef07), 0xcb);
        EXPECT(gbc.readMem(0xef08), 0xac);
        // CB AC 0297
        gbc.setState(0xeb1e, 0xb1e5, 0xec50, 0x9b8a, 0x9fd8, 0x78e, 0x1, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0xeb20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1e), 0xcb);
        EXPECT(gbc.readMem(0xeb1f), 0xac);
        // CB AC 0298
        gbc.setState(0x2ab1, 0x4233, 0x9e90, 0x5145, 0x84bc, 0x66f7, 0x0, 0x1);
        gbc.writeMem(0x2ab1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4233);
        EXPECT(gbc.pc(), 0x2ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0299
        gbc.setState(0x7400, 0xc9d0, 0x7400, 0x8750, 0xb6a3, 0x1408, 0x1, 0x1);
        gbc.writeMem(0x7400, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0x7402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 029A
        gbc.setState(0xe9c5, 0x9fe6, 0x5640, 0x1a65, 0x7e32, 0xe3b, 0x1, 0x0);
        gbc.writeMem(0xe9c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9fe6);
        EXPECT(gbc.pc(), 0xe9c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9c5), 0xcb);
        EXPECT(gbc.readMem(0xe9c6), 0xac);
        // CB AC 029B
        gbc.setState(0x1c7f, 0x7ac0, 0xb740, 0xe38f, 0x69eb, 0x25e5, 0x0, 0x1);
        gbc.writeMem(0x1c7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7ac0);
        EXPECT(gbc.pc(), 0x1c81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 029C
        gbc.setState(0x63ba, 0x174f, 0xb8a0, 0x14f2, 0xaa98, 0x2664, 0x1, 0x1);
        gbc.writeMem(0x63ba, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x174f);
        EXPECT(gbc.pc(), 0x63bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 029D
        gbc.setState(0x7e97, 0xf38, 0x860, 0x7e65, 0x989e, 0x9b3, 0x1, 0x1);
        gbc.writeMem(0x7e97, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf38);
        EXPECT(gbc.pc(), 0x7e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 029E
        gbc.setState(0xe2c6, 0x9472, 0x3c00, 0x5724, 0x51fe, 0x534b, 0x0, 0x1);
        gbc.writeMem(0xe2c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9472);
        EXPECT(gbc.pc(), 0xe2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2c6), 0xcb);
        EXPECT(gbc.readMem(0xe2c7), 0xac);
        // CB AC 029F
        gbc.setState(0x4815, 0xb4f3, 0xd4a0, 0xec67, 0x8ff4, 0x71b5, 0x0, 0x0);
        gbc.writeMem(0x4815, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb4f3);
        EXPECT(gbc.pc(), 0x4817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02A1
        gbc.setState(0x2245, 0xa978, 0xc180, 0x1f6b, 0x3397, 0xa81, 0x1, 0x0);
        gbc.writeMem(0x2245, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa978);
        EXPECT(gbc.pc(), 0x2247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02A2
        gbc.setState(0x91ce, 0xd52e, 0x3220, 0xc34, 0xdedd, 0x6b1e, 0x0, 0x1);
        gbc.writeMem(0x91ce, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd52e);
        EXPECT(gbc.pc(), 0x91d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ce), 0xcb);
        EXPECT(gbc.readMem(0x91cf), 0xac);
        // CB AC 02A3
        gbc.setState(0xdf76, 0x10f5, 0x7c70, 0xcc67, 0x1e67, 0xfca6, 0x1, 0x0);
        gbc.writeMem(0xdf76, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x10f5);
        EXPECT(gbc.pc(), 0xdf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf76), 0xcb);
        EXPECT(gbc.readMem(0xdf77), 0xac);
        // CB AC 02A4
        gbc.setState(0x5596, 0x2f19, 0x7a70, 0x5c0c, 0x5220, 0x3ebe, 0x1, 0x0);
        gbc.writeMem(0x5596, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2f19);
        EXPECT(gbc.pc(), 0x5598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02A5
        gbc.setState(0x155c, 0x418, 0xd360, 0x7b7f, 0x77ac, 0x5bc3, 0x0, 0x1);
        gbc.writeMem(0x155c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x418);
        EXPECT(gbc.pc(), 0x155e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02A6
        gbc.setState(0xd51c, 0xfd36, 0x9b50, 0xd987, 0xa8ea, 0x5019, 0x1, 0x1);
        gbc.writeMem(0xd51c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xfd36);
        EXPECT(gbc.pc(), 0xd51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51c), 0xcb);
        EXPECT(gbc.readMem(0xd51d), 0xac);
        // CB AC 02A7
        gbc.setState(0x45c8, 0x2177, 0x2f20, 0xfd5c, 0x4b9f, 0x8558, 0x1, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2177);
        EXPECT(gbc.pc(), 0x45ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02A8
        gbc.setState(0xa96e, 0x1f66, 0x54d0, 0x1d23, 0x805d, 0x35ca, 0x1, 0x0);
        gbc.writeMem(0xa96e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1f66);
        EXPECT(gbc.pc(), 0xa970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96e), 0xcb);
        EXPECT(gbc.readMem(0xa96f), 0xac);
        // CB AC 02A9
        gbc.setState(0x9a0d, 0xbe08, 0xd030, 0x52c7, 0xc17e, 0xd43, 0x0, 0x0);
        gbc.writeMem(0x9a0d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbe08);
        EXPECT(gbc.pc(), 0x9a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0d), 0xcb);
        EXPECT(gbc.readMem(0x9a0e), 0xac);
        // CB AC 02AA
        gbc.setState(0x37e1, 0xf473, 0xd800, 0x6f98, 0x6eaf, 0xe580, 0x0, 0x0);
        gbc.writeMem(0x37e1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf473);
        EXPECT(gbc.pc(), 0x37e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02AB
        gbc.setState(0xe529, 0xb918, 0x4710, 0x8e07, 0xc09c, 0x6dcf, 0x1, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb918);
        EXPECT(gbc.pc(), 0xe52b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe529), 0xcb);
        EXPECT(gbc.readMem(0xe52a), 0xac);
        // CB AC 02AD
        gbc.setState(0x11b7, 0x460f, 0x3130, 0xa2c0, 0x7d8b, 0x482e, 0x1, 0x1);
        gbc.writeMem(0x11b7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x460f);
        EXPECT(gbc.pc(), 0x11b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02AE
        gbc.setState(0xcdc5, 0xf193, 0xa4d0, 0x7282, 0xe1dd, 0x63ed, 0x0, 0x0);
        gbc.writeMem(0xcdc5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf193);
        EXPECT(gbc.pc(), 0xcdc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc5), 0xcb);
        EXPECT(gbc.readMem(0xcdc6), 0xac);
        // CB AC 02AF
        gbc.setState(0x8815, 0x56a8, 0x250, 0x8e24, 0x459f, 0x6dbc, 0x0, 0x1);
        gbc.writeMem(0x8815, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x56a8);
        EXPECT(gbc.pc(), 0x8817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8815), 0xcb);
        EXPECT(gbc.readMem(0x8816), 0xac);
        // CB AC 02B0
        gbc.setState(0x77ad, 0xa8c, 0x22f0, 0xd43c, 0xdf46, 0x9179, 0x0, 0x0);
        gbc.writeMem(0x77ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa8c);
        EXPECT(gbc.pc(), 0x77af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02B1
        gbc.setState(0xb42d, 0x9639, 0x1360, 0x7d9c, 0x4793, 0xc7b5, 0x1, 0x1);
        gbc.writeMem(0xb42d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9639);
        EXPECT(gbc.pc(), 0xb42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42d), 0xcb);
        EXPECT(gbc.readMem(0xb42e), 0xac);
        // CB AC 02B2
        gbc.setState(0x771, 0x980c, 0xb5b0, 0x3383, 0xdab8, 0x310f, 0x0, 0x0);
        gbc.writeMem(0x771, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x980c);
        EXPECT(gbc.pc(), 0x773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02B3
        gbc.setState(0x5eec, 0x42fb, 0xc780, 0x531e, 0xc6bf, 0x90d5, 0x0, 0x1);
        gbc.writeMem(0x5eec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x42fb);
        EXPECT(gbc.pc(), 0x5eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02B4
        gbc.setState(0xc089, 0xff14, 0xc870, 0x78f3, 0x18bc, 0x46d0, 0x0, 0x1);
        gbc.writeMem(0xc089, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xff14);
        EXPECT(gbc.pc(), 0xc08b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc089), 0xcb);
        EXPECT(gbc.readMem(0xc08a), 0xac);
        // CB AC 02B5
        gbc.setState(0x7f2d, 0x9434, 0x4610, 0x6b2b, 0xe496, 0x99db, 0x0, 0x1);
        gbc.writeMem(0x7f2d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9434);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02B6
        gbc.setState(0x76df, 0x9865, 0x9800, 0xdfec, 0xacee, 0x5f6e, 0x0, 0x0);
        gbc.writeMem(0x76df, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9865);
        EXPECT(gbc.pc(), 0x76e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02B7
        gbc.setState(0x9780, 0xca15, 0xfc60, 0x22f1, 0x9a29, 0x90e5, 0x0, 0x1);
        gbc.writeMem(0x9780, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xca15);
        EXPECT(gbc.pc(), 0x9782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9780), 0xcb);
        EXPECT(gbc.readMem(0x9781), 0xac);
        // CB AC 02B8
        gbc.setState(0xa713, 0x34e, 0x6680, 0x9e68, 0xeed, 0x288a, 0x0, 0x0);
        gbc.writeMem(0xa713, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x34e);
        EXPECT(gbc.pc(), 0xa715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa713), 0xcb);
        EXPECT(gbc.readMem(0xa714), 0xac);
        // CB AC 02B9
        gbc.setState(0x356c, 0x3d64, 0x1e00, 0x488, 0xdfca, 0x4460, 0x1, 0x1);
        gbc.writeMem(0x356c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3d64);
        EXPECT(gbc.pc(), 0x356e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02BA
        gbc.setState(0x6263, 0x8300, 0xb9a0, 0x5941, 0xfe1, 0x82dd, 0x0, 0x0);
        gbc.writeMem(0x6263, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8300);
        EXPECT(gbc.pc(), 0x6265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02BB
        gbc.setState(0xb5c7, 0xf3d8, 0xedb0, 0x7a89, 0xedcc, 0x5c2a, 0x1, 0x1);
        gbc.writeMem(0xb5c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf3d8);
        EXPECT(gbc.pc(), 0xb5c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c7), 0xcb);
        EXPECT(gbc.readMem(0xb5c8), 0xac);
        // CB AC 02BC
        gbc.setState(0x1b3d, 0x59f3, 0x7d00, 0x6bb9, 0x904, 0x147c, 0x1, 0x1);
        gbc.writeMem(0x1b3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x59f3);
        EXPECT(gbc.pc(), 0x1b3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02BD
        gbc.setState(0xaf7d, 0xc740, 0xb1e0, 0x808a, 0xaad9, 0x51f0, 0x1, 0x0);
        gbc.writeMem(0xaf7d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc740);
        EXPECT(gbc.pc(), 0xaf7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf7d), 0xcb);
        EXPECT(gbc.readMem(0xaf7e), 0xac);
        // CB AC 02BE
        gbc.setState(0xef47, 0x9577, 0xda70, 0x1c30, 0x957, 0x81, 0x0, 0x0);
        gbc.writeMem(0xef47, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9577);
        EXPECT(gbc.pc(), 0xef49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef47), 0xcb);
        EXPECT(gbc.readMem(0xef48), 0xac);
        // CB AC 02BF
        gbc.setState(0x81db, 0xddd7, 0xa6d0, 0x4295, 0xb07d, 0x27f0, 0x0, 0x1);
        gbc.writeMem(0x81db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xddd7);
        EXPECT(gbc.pc(), 0x81dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81db), 0xcb);
        EXPECT(gbc.readMem(0x81dc), 0xac);
        // CB AC 02C0
        gbc.setState(0xc22a, 0xa8ee, 0x8600, 0x52e5, 0xc044, 0xa96e, 0x0, 0x1);
        gbc.writeMem(0xc22a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa8ee);
        EXPECT(gbc.pc(), 0xc22c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc22a), 0xcb);
        EXPECT(gbc.readMem(0xc22b), 0xac);
        // CB AC 02C1
        gbc.setState(0xb21d, 0x8973, 0xe920, 0xc5de, 0xfce0, 0xc42b, 0x0, 0x1);
        gbc.writeMem(0xb21d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8973);
        EXPECT(gbc.pc(), 0xb21f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21d), 0xcb);
        EXPECT(gbc.readMem(0xb21e), 0xac);
        // CB AC 02C2
        gbc.setState(0x59ae, 0x7b59, 0x9700, 0xeec, 0x21db, 0xca96, 0x0, 0x0);
        gbc.writeMem(0x59ae, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7b59);
        EXPECT(gbc.pc(), 0x59b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02C3
        gbc.setState(0x87d3, 0x856, 0xb4f0, 0x955d, 0x831b, 0x7909, 0x0, 0x0);
        gbc.writeMem(0x87d3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x856);
        EXPECT(gbc.pc(), 0x87d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d3), 0xcb);
        EXPECT(gbc.readMem(0x87d4), 0xac);
        // CB AC 02C4
        gbc.setState(0x217d, 0x86ec, 0x2dc0, 0xd97e, 0x6bb9, 0x73f7, 0x1, 0x1);
        gbc.writeMem(0x217d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x86ec);
        EXPECT(gbc.pc(), 0x217f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02C5
        gbc.setState(0x986, 0xde49, 0x2fa0, 0xbd31, 0x2294, 0x2fb0, 0x0, 0x0);
        gbc.writeMem(0x986, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xde49);
        EXPECT(gbc.pc(), 0x988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02C6
        gbc.setState(0xbb0b, 0xbdef, 0x17f0, 0x80eb, 0x222c, 0xe5b2, 0x0, 0x1);
        gbc.writeMem(0xbb0b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbdef);
        EXPECT(gbc.pc(), 0xbb0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0b), 0xcb);
        EXPECT(gbc.readMem(0xbb0c), 0xac);
        // CB AC 02C7
        gbc.setState(0xa2a4, 0x1f32, 0xc210, 0x53ff, 0xe943, 0x148a, 0x1, 0x0);
        gbc.writeMem(0xa2a4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1f32);
        EXPECT(gbc.pc(), 0xa2a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a4), 0xcb);
        EXPECT(gbc.readMem(0xa2a5), 0xac);
        // CB AC 02C8
        gbc.setState(0xce87, 0xf040, 0x3b60, 0xed55, 0x5991, 0xc012, 0x1, 0x1);
        gbc.writeMem(0xce87, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf040);
        EXPECT(gbc.pc(), 0xce89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce87), 0xcb);
        EXPECT(gbc.readMem(0xce88), 0xac);
        // CB AC 02C9
        gbc.setState(0xba7b, 0xadd7, 0xe360, 0x809, 0x48e9, 0x6ee8, 0x1, 0x1);
        gbc.writeMem(0xba7b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xadd7);
        EXPECT(gbc.pc(), 0xba7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7b), 0xcb);
        EXPECT(gbc.readMem(0xba7c), 0xac);
        // CB AC 02CA
        gbc.setState(0x20c8, 0xf7a6, 0x4140, 0x3be1, 0xac66, 0xf421, 0x0, 0x1);
        gbc.writeMem(0x20c8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf7a6);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02CB
        gbc.setState(0x6b4, 0x24ee, 0x93a0, 0x5073, 0xb151, 0x8f9c, 0x0, 0x1);
        gbc.writeMem(0x6b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x24ee);
        EXPECT(gbc.pc(), 0x6b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02CD
        gbc.setState(0x71e2, 0x8816, 0x7300, 0xd006, 0x1562, 0xa209, 0x0, 0x0);
        gbc.writeMem(0x71e2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8816);
        EXPECT(gbc.pc(), 0x71e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02CE
        gbc.setState(0x4bf0, 0x2c2d, 0x8a70, 0x6db9, 0x92ea, 0xdbd2, 0x0, 0x0);
        gbc.writeMem(0x4bf0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2c2d);
        EXPECT(gbc.pc(), 0x4bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02CF
        gbc.setState(0x59c2, 0x56d5, 0x3190, 0x40dd, 0x1c63, 0x4f3, 0x0, 0x1);
        gbc.writeMem(0x59c2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x56d5);
        EXPECT(gbc.pc(), 0x59c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02D1
        gbc.setState(0xe49, 0x40c4, 0x7a30, 0x5f40, 0x85fb, 0x61e, 0x1, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x40c4);
        EXPECT(gbc.pc(), 0xe4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02D2
        gbc.setState(0xd4e8, 0x690c, 0xad10, 0x1f35, 0xf047, 0x8ec4, 0x1, 0x1);
        gbc.writeMem(0xd4e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x690c);
        EXPECT(gbc.pc(), 0xd4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e8), 0xcb);
        EXPECT(gbc.readMem(0xd4e9), 0xac);
        // CB AC 02D3
        gbc.setState(0x9801, 0x446, 0x8080, 0x501e, 0x81d0, 0x3238, 0x1, 0x0);
        gbc.writeMem(0x9801, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x446);
        EXPECT(gbc.pc(), 0x9803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9801), 0xcb);
        EXPECT(gbc.readMem(0x9802), 0xac);
        // CB AC 02D4
        gbc.setState(0x1ead, 0xa9e0, 0x40a0, 0x38fa, 0x1818, 0x5c6, 0x0, 0x1);
        gbc.writeMem(0x1ead, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa9e0);
        EXPECT(gbc.pc(), 0x1eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02D5
        gbc.setState(0xdfc5, 0xbad2, 0xa520, 0xb9d6, 0x5c97, 0x903d, 0x1, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0xdfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc5), 0xcb);
        EXPECT(gbc.readMem(0xdfc6), 0xac);
        // CB AC 02D6
        gbc.setState(0x640d, 0x45f2, 0x3ac0, 0xe15, 0xd20b, 0xdda4, 0x1, 0x1);
        gbc.writeMem(0x640d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x45f2);
        EXPECT(gbc.pc(), 0x640f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02D7
        gbc.setState(0x652d, 0xf561, 0x37b0, 0x4dbb, 0x5510, 0x91e7, 0x0, 0x0);
        gbc.writeMem(0x652d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf561);
        EXPECT(gbc.pc(), 0x652f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02D8
        gbc.setState(0xb3f9, 0x54c3, 0x85f0, 0xa64e, 0x668c, 0x7d79, 0x1, 0x1);
        gbc.writeMem(0xb3f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x54c3);
        EXPECT(gbc.pc(), 0xb3fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f9), 0xcb);
        EXPECT(gbc.readMem(0xb3fa), 0xac);
        // CB AC 02DA
        gbc.setState(0x742, 0xb5a6, 0x52d0, 0xb319, 0x1534, 0x1ede, 0x1, 0x0);
        gbc.writeMem(0x742, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb5a6);
        EXPECT(gbc.pc(), 0x744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02DB
        gbc.setState(0x2acf, 0x4eb4, 0x2b00, 0xc226, 0x2c84, 0x3978, 0x0, 0x0);
        gbc.writeMem(0x2acf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4eb4);
        EXPECT(gbc.pc(), 0x2ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02DC
        gbc.setState(0xb2b2, 0xfbe0, 0x7000, 0x4f55, 0x8d2f, 0x9e44, 0x1, 0x1);
        gbc.writeMem(0xb2b2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0xb2b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b2), 0xcb);
        EXPECT(gbc.readMem(0xb2b3), 0xac);
        // CB AC 02DD
        gbc.setState(0xaf4, 0x6701, 0x5670, 0x619c, 0xc2ab, 0x6cc0, 0x0, 0x0);
        gbc.writeMem(0xaf4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6701);
        EXPECT(gbc.pc(), 0xaf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02DE
        gbc.setState(0xac20, 0xffe4, 0x12e0, 0x55f1, 0x29af, 0xa0e5, 0x1, 0x0);
        gbc.writeMem(0xac20, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xffe4);
        EXPECT(gbc.pc(), 0xac22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac20), 0xcb);
        EXPECT(gbc.readMem(0xac21), 0xac);
        // CB AC 02DF
        gbc.setState(0x2b94, 0xe189, 0xf4d0, 0x7e30, 0xd5dd, 0xf61f, 0x0, 0x0);
        gbc.writeMem(0x2b94, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe189);
        EXPECT(gbc.pc(), 0x2b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02E0
        gbc.setState(0x35bb, 0x2768, 0x2000, 0x4e44, 0xf7ec, 0x46ae, 0x1, 0x0);
        gbc.writeMem(0x35bb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2768);
        EXPECT(gbc.pc(), 0x35bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02E1
        gbc.setState(0x5bd5, 0x6a3c, 0x26f0, 0x6117, 0x424f, 0x4095, 0x1, 0x0);
        gbc.writeMem(0x5bd5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6a3c);
        EXPECT(gbc.pc(), 0x5bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02E2
        gbc.setState(0xa3ac, 0x9987, 0x76c0, 0x4646, 0x907, 0xd9e7, 0x1, 0x1);
        gbc.writeMem(0xa3ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9987);
        EXPECT(gbc.pc(), 0xa3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ac), 0xcb);
        EXPECT(gbc.readMem(0xa3ad), 0xac);
        // CB AC 02E3
        gbc.setState(0xbc60, 0x8997, 0x23d0, 0xc7e7, 0x2509, 0x2ab1, 0x1, 0x1);
        gbc.writeMem(0xbc60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8997);
        EXPECT(gbc.pc(), 0xbc62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc60), 0xcb);
        EXPECT(gbc.readMem(0xbc61), 0xac);
        // CB AC 02E4
        gbc.setState(0xb1c6, 0x8c48, 0xe880, 0x81bb, 0xd39d, 0x44b9, 0x0, 0x0);
        gbc.writeMem(0xb1c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8c48);
        EXPECT(gbc.pc(), 0xb1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c6), 0xcb);
        EXPECT(gbc.readMem(0xb1c7), 0xac);
        // CB AC 02E5
        gbc.setState(0xcda3, 0x568c, 0xec80, 0x8364, 0x4e3e, 0xfa20, 0x0, 0x1);
        gbc.writeMem(0xcda3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x568c);
        EXPECT(gbc.pc(), 0xcda5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda3), 0xcb);
        EXPECT(gbc.readMem(0xcda4), 0xac);
        // CB AC 02E6
        gbc.setState(0xe4e, 0xbd2e, 0xc2d0, 0x6ef6, 0x3dc9, 0x78e5, 0x1, 0x1);
        gbc.writeMem(0xe4e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbd2e);
        EXPECT(gbc.pc(), 0xe50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02E7
        gbc.setState(0x892, 0x6757, 0x10d0, 0x86e4, 0x6bd1, 0x94e, 0x1, 0x1);
        gbc.writeMem(0x892, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6757);
        EXPECT(gbc.pc(), 0x894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02E8
        gbc.setState(0x32ef, 0x4a2a, 0x6200, 0x9554, 0xa09e, 0xef48, 0x0, 0x1);
        gbc.writeMem(0x32ef, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4a2a);
        EXPECT(gbc.pc(), 0x32f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02E9
        gbc.setState(0xc931, 0xe548, 0x100, 0xb66e, 0x4207, 0x5ac4, 0x1, 0x1);
        gbc.writeMem(0xc931, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe548);
        EXPECT(gbc.pc(), 0xc933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc931), 0xcb);
        EXPECT(gbc.readMem(0xc932), 0xac);
        // CB AC 02EA
        gbc.setState(0xe219, 0x63d, 0xeae0, 0xa211, 0x3e0, 0xacf8, 0x0, 0x1);
        gbc.writeMem(0xe219, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x63d);
        EXPECT(gbc.pc(), 0xe21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe219), 0xcb);
        EXPECT(gbc.readMem(0xe21a), 0xac);
        // CB AC 02EB
        gbc.setState(0x5174, 0x142f, 0x2360, 0x7e9a, 0xeac3, 0x544, 0x1, 0x1);
        gbc.writeMem(0x5174, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x142f);
        EXPECT(gbc.pc(), 0x5176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02EC
        gbc.setState(0x5397, 0xdc30, 0x16a0, 0x848f, 0x86d1, 0x6f51, 0x1, 0x0);
        gbc.writeMem(0x5397, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdc30);
        EXPECT(gbc.pc(), 0x5399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02EE
        gbc.setState(0x3037, 0x3428, 0x4a80, 0x1987, 0x86ec, 0x8ad9, 0x1, 0x0);
        gbc.writeMem(0x3037, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3428);
        EXPECT(gbc.pc(), 0x3039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02EF
        gbc.setState(0xef5c, 0xb330, 0x1960, 0xa5cc, 0x1d5b, 0xfe40, 0x0, 0x0);
        gbc.writeMem(0xef5c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb330);
        EXPECT(gbc.pc(), 0xef5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5c), 0xcb);
        EXPECT(gbc.readMem(0xef5d), 0xac);
        // CB AC 02F0
        gbc.setState(0x69d5, 0x4601, 0x25f0, 0x62ce, 0x35ac, 0xe769, 0x1, 0x1);
        gbc.writeMem(0x69d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4601);
        EXPECT(gbc.pc(), 0x69d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02F1
        gbc.setState(0x5503, 0x36d9, 0x1b60, 0x79a, 0x5693, 0x8eb4, 0x1, 0x1);
        gbc.writeMem(0x5503, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x36d9);
        EXPECT(gbc.pc(), 0x5505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02F2
        gbc.setState(0x997e, 0xf381, 0x4f80, 0xc28a, 0x8cb, 0x2903, 0x1, 0x1);
        gbc.writeMem(0x997e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf381);
        EXPECT(gbc.pc(), 0x9980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997e), 0xcb);
        EXPECT(gbc.readMem(0x997f), 0xac);
        // CB AC 02F3
        gbc.setState(0x60f3, 0xc9e6, 0x88d0, 0x873a, 0x84e, 0x488, 0x0, 0x0);
        gbc.writeMem(0x60f3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc9e6);
        EXPECT(gbc.pc(), 0x60f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02F4
        gbc.setState(0x3409, 0x868a, 0xe4b0, 0xf440, 0x9080, 0x57a, 0x0, 0x0);
        gbc.writeMem(0x3409, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x868a);
        EXPECT(gbc.pc(), 0x340b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02F5
        gbc.setState(0xef7d, 0x9776, 0x57b0, 0x701b, 0xd4d5, 0x8ead, 0x1, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9776);
        EXPECT(gbc.pc(), 0xef7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7d), 0xcb);
        EXPECT(gbc.readMem(0xef7e), 0xac);
        // CB AC 02F6
        gbc.setState(0x3125, 0xda4a, 0xeda0, 0xbafe, 0x3004, 0x5c59, 0x1, 0x0);
        gbc.writeMem(0x3125, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xda4a);
        EXPECT(gbc.pc(), 0x3127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02F7
        gbc.setState(0x88ac, 0x4fa0, 0x9c0, 0xd3bb, 0x4c45, 0xde32, 0x1, 0x0);
        gbc.writeMem(0x88ac, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4fa0);
        EXPECT(gbc.pc(), 0x88ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ac), 0xcb);
        EXPECT(gbc.readMem(0x88ad), 0xac);
        // CB AC 02F8
        gbc.setState(0xa31, 0xb285, 0x9a40, 0x2ca7, 0x544b, 0xc9c6, 0x1, 0x0);
        gbc.writeMem(0xa31, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb285);
        EXPECT(gbc.pc(), 0xa33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02F9
        gbc.setState(0x37f9, 0xf161, 0xa100, 0x5740, 0x11fc, 0x2462, 0x0, 0x1);
        gbc.writeMem(0x37f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf161);
        EXPECT(gbc.pc(), 0x37fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02FA
        gbc.setState(0x1be8, 0x6c07, 0x1f80, 0x26b0, 0x4cb7, 0xb0a1, 0x0, 0x1);
        gbc.writeMem(0x1be8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6c07);
        EXPECT(gbc.pc(), 0x1bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 02FB
        gbc.setState(0x1d36, 0x770e, 0xa4d0, 0x2e91, 0x663a, 0xe1e9, 0x0, 0x1);
        gbc.writeMem(0x1d36, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x770e);
        EXPECT(gbc.pc(), 0x1d38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02FC
        gbc.setState(0x41d6, 0xdc66, 0x7930, 0xa1b5, 0x6622, 0x19dd, 0x1, 0x1);
        gbc.writeMem(0x41d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdc66);
        EXPECT(gbc.pc(), 0x41d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 02FD
        gbc.setState(0x89b4, 0x164f, 0x4fe0, 0x7841, 0x1d42, 0x7479, 0x0, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x164f);
        EXPECT(gbc.pc(), 0x89b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b4), 0xcb);
        EXPECT(gbc.readMem(0x89b5), 0xac);
        // CB AC 02FE
        gbc.setState(0xa752, 0x89a1, 0xb80, 0x81eb, 0x4853, 0x73d4, 0x0, 0x0);
        gbc.writeMem(0xa752, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x89a1);
        EXPECT(gbc.pc(), 0xa754);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa752), 0xcb);
        EXPECT(gbc.readMem(0xa753), 0xac);
        // CB AC 02FF
        gbc.setState(0x51d8, 0xb190, 0xfe60, 0xb105, 0x4ee5, 0x6d91, 0x0, 0x0);
        gbc.writeMem(0x51d8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb190);
        EXPECT(gbc.pc(), 0x51da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0300
        gbc.setState(0x43c5, 0x1c2a, 0x3210, 0x8703, 0xffa7, 0xd3ad, 0x1, 0x1);
        gbc.writeMem(0x43c5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1c2a);
        EXPECT(gbc.pc(), 0x43c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0302
        gbc.setState(0x7f97, 0xd8bb, 0x9c90, 0xbfee, 0xe74f, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd8bb);
        EXPECT(gbc.pc(), 0x7f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0303
        gbc.setState(0x234e, 0x5be5, 0x7d50, 0xf521, 0x703a, 0xb4dd, 0x0, 0x1);
        gbc.writeMem(0x234e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5be5);
        EXPECT(gbc.pc(), 0x2350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0304
        gbc.setState(0x513e, 0x7f5f, 0x1070, 0x7024, 0xdfb2, 0xdb9e, 0x0, 0x0);
        gbc.writeMem(0x513e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7f5f);
        EXPECT(gbc.pc(), 0x5140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0305
        gbc.setState(0xd1e, 0x2bae, 0x7f00, 0xffb0, 0xa4b7, 0xff9e, 0x0, 0x0);
        gbc.writeMem(0xd1e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2bae);
        EXPECT(gbc.pc(), 0xd20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0307
        gbc.setState(0x490b, 0x4e1c, 0xe840, 0x28e8, 0x16bf, 0xae4e, 0x1, 0x1);
        gbc.writeMem(0x490b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4e1c);
        EXPECT(gbc.pc(), 0x490d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0308
        gbc.setState(0xcd79, 0xe732, 0x6c40, 0x1cc5, 0x2f55, 0xd316, 0x0, 0x0);
        gbc.writeMem(0xcd79, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe732);
        EXPECT(gbc.pc(), 0xcd7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd79), 0xcb);
        EXPECT(gbc.readMem(0xcd7a), 0xac);
        // CB AC 030A
        gbc.setState(0xc4d6, 0x9ad1, 0x3930, 0xf650, 0xff01, 0x2801, 0x1, 0x1);
        gbc.writeMem(0xc4d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9ad1);
        EXPECT(gbc.pc(), 0xc4d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d6), 0xcb);
        EXPECT(gbc.readMem(0xc4d7), 0xac);
        // CB AC 030B
        gbc.setState(0x6291, 0x64d5, 0xfd30, 0x12f1, 0x67b3, 0xaccd, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x64d5);
        EXPECT(gbc.pc(), 0x6293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 030C
        gbc.setState(0xcdd3, 0x54f1, 0x9c70, 0xe6f6, 0xccec, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0xcdd3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x54f1);
        EXPECT(gbc.pc(), 0xcdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd3), 0xcb);
        EXPECT(gbc.readMem(0xcdd4), 0xac);
        // CB AC 030D
        gbc.setState(0x5f9d, 0x40ed, 0xa80, 0xdf50, 0x18a5, 0x1c9c, 0x1, 0x0);
        gbc.writeMem(0x5f9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x40ed);
        EXPECT(gbc.pc(), 0x5f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 030E
        gbc.setState(0xe029, 0x2bfc, 0x30c0, 0xdd56, 0xd990, 0x4176, 0x0, 0x1);
        gbc.writeMem(0xe029, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2bfc);
        EXPECT(gbc.pc(), 0xe02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe029), 0xcb);
        EXPECT(gbc.readMem(0xe02a), 0xac);
        // CB AC 030F
        gbc.setState(0x177f, 0x74cf, 0xce90, 0x7b61, 0x8bca, 0x351a, 0x0, 0x1);
        gbc.writeMem(0x177f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x74cf);
        EXPECT(gbc.pc(), 0x1781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0310
        gbc.setState(0xaf29, 0xc48b, 0x1960, 0x92c4, 0x1508, 0x3c73, 0x1, 0x1);
        gbc.writeMem(0xaf29, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc48b);
        EXPECT(gbc.pc(), 0xaf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf29), 0xcb);
        EXPECT(gbc.readMem(0xaf2a), 0xac);
        // CB AC 0311
        gbc.setState(0x7181, 0x1907, 0x8430, 0x317d, 0x2d1e, 0x5c7b, 0x1, 0x1);
        gbc.writeMem(0x7181, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1907);
        EXPECT(gbc.pc(), 0x7183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0312
        gbc.setState(0x2a7d, 0x3e75, 0xfea0, 0x175d, 0xb6a5, 0xb4e4, 0x0, 0x0);
        gbc.writeMem(0x2a7d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3e75);
        EXPECT(gbc.pc(), 0x2a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0313
        gbc.setState(0xd59a, 0xba3b, 0x5e70, 0x5f3a, 0xa36e, 0xf62f, 0x1, 0x1);
        gbc.writeMem(0xd59a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xba3b);
        EXPECT(gbc.pc(), 0xd59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd59a), 0xcb);
        EXPECT(gbc.readMem(0xd59b), 0xac);
        // CB AC 0314
        gbc.setState(0xba3d, 0x18b6, 0xa3e0, 0x8b48, 0x3f0a, 0x9e12, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x18b6);
        EXPECT(gbc.pc(), 0xba3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba3d), 0xcb);
        EXPECT(gbc.readMem(0xba3e), 0xac);
        // CB AC 0316
        gbc.setState(0x82fb, 0x76a3, 0x5f20, 0x5ab9, 0x5487, 0x1a58, 0x1, 0x1);
        gbc.writeMem(0x82fb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x76a3);
        EXPECT(gbc.pc(), 0x82fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82fb), 0xcb);
        EXPECT(gbc.readMem(0x82fc), 0xac);
        // CB AC 0317
        gbc.setState(0x7b36, 0x9469, 0xdce0, 0xa5d9, 0xc829, 0x1161, 0x0, 0x1);
        gbc.writeMem(0x7b36, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9469);
        EXPECT(gbc.pc(), 0x7b38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0318
        gbc.setState(0x4f1f, 0x9be6, 0x9e50, 0x404e, 0x2019, 0xe6d7, 0x0, 0x0);
        gbc.writeMem(0x4f1f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9be6);
        EXPECT(gbc.pc(), 0x4f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 031A
        gbc.setState(0x7629, 0xa823, 0x6c60, 0xa2d6, 0xa69, 0x605e, 0x0, 0x1);
        gbc.writeMem(0x7629, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa823);
        EXPECT(gbc.pc(), 0x762b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 031B
        gbc.setState(0xb672, 0x21e8, 0xbaf0, 0xeae1, 0xe4f3, 0x9680, 0x0, 0x0);
        gbc.writeMem(0xb672, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x21e8);
        EXPECT(gbc.pc(), 0xb674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb672), 0xcb);
        EXPECT(gbc.readMem(0xb673), 0xac);
        // CB AC 031C
        gbc.setState(0x4945, 0xdbf, 0xcd30, 0x8eba, 0xf19f, 0x6814, 0x1, 0x1);
        gbc.writeMem(0x4945, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdbf);
        EXPECT(gbc.pc(), 0x4947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 031D
        gbc.setState(0x5c9e, 0xd1a5, 0x76d0, 0x437a, 0x5bea, 0xeaaa, 0x1, 0x1);
        gbc.writeMem(0x5c9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd1a5);
        EXPECT(gbc.pc(), 0x5ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 031E
        gbc.setState(0x6f7f, 0x9876, 0x61a0, 0x686, 0xcdb3, 0x451e, 0x0, 0x1);
        gbc.writeMem(0x6f7f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9876);
        EXPECT(gbc.pc(), 0x6f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 031F
        gbc.setState(0xcfd7, 0xd4f4, 0x18b0, 0xafeb, 0x789, 0xdded, 0x0, 0x0);
        gbc.writeMem(0xcfd7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd4f4);
        EXPECT(gbc.pc(), 0xcfd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd7), 0xcb);
        EXPECT(gbc.readMem(0xcfd8), 0xac);
        // CB AC 0320
        gbc.setState(0xef22, 0x593c, 0xfdd0, 0x20b9, 0x5f42, 0xba76, 0x0, 0x0);
        gbc.writeMem(0xef22, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x593c);
        EXPECT(gbc.pc(), 0xef24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef22), 0xcb);
        EXPECT(gbc.readMem(0xef23), 0xac);
        // CB AC 0321
        gbc.setState(0xe386, 0xd52c, 0x1910, 0xafbe, 0x71e0, 0xfcb4, 0x0, 0x1);
        gbc.writeMem(0xe386, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd52c);
        EXPECT(gbc.pc(), 0xe388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe386), 0xcb);
        EXPECT(gbc.readMem(0xe387), 0xac);
        // CB AC 0322
        gbc.setState(0x13b, 0xadbb, 0x3270, 0x512e, 0xa90b, 0x1e28, 0x1, 0x1);
        gbc.writeMem(0x13b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xadbb);
        EXPECT(gbc.pc(), 0x13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0323
        gbc.setState(0x1d6, 0x4072, 0x7c20, 0x7ca2, 0xd229, 0x9898, 0x0, 0x1);
        gbc.writeMem(0x1d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4072);
        EXPECT(gbc.pc(), 0x1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0324
        gbc.setState(0x9223, 0xa500, 0xf6a0, 0xc96f, 0xa1ab, 0xb98e, 0x1, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa500);
        EXPECT(gbc.pc(), 0x9225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9223), 0xcb);
        EXPECT(gbc.readMem(0x9224), 0xac);
        // CB AC 0325
        gbc.setState(0xd9f, 0x4a1f, 0xd000, 0xcf14, 0x4da6, 0xa8ec, 0x0, 0x1);
        gbc.writeMem(0xd9f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4a1f);
        EXPECT(gbc.pc(), 0xda1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0326
        gbc.setState(0xb50f, 0xec93, 0x6a10, 0x35d1, 0x8db, 0x7a11, 0x1, 0x0);
        gbc.writeMem(0xb50f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xec93);
        EXPECT(gbc.pc(), 0xb511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50f), 0xcb);
        EXPECT(gbc.readMem(0xb510), 0xac);
        // CB AC 0327
        gbc.setState(0x56f4, 0x1553, 0x8720, 0x89d8, 0x6ad3, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0x56f4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1553);
        EXPECT(gbc.pc(), 0x56f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0328
        gbc.setState(0x8fb3, 0xa4ca, 0x110, 0x44bb, 0x6e8, 0x4139, 0x0, 0x0);
        gbc.writeMem(0x8fb3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa4ca);
        EXPECT(gbc.pc(), 0x8fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb3), 0xcb);
        EXPECT(gbc.readMem(0x8fb4), 0xac);
        // CB AC 0329
        gbc.setState(0xbb1f, 0x2ea4, 0x5ff0, 0x8a41, 0x69c6, 0xab0c, 0x1, 0x0);
        gbc.writeMem(0xbb1f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x2ea4);
        EXPECT(gbc.pc(), 0xbb21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb1f), 0xcb);
        EXPECT(gbc.readMem(0xbb20), 0xac);
        // CB AC 032A
        gbc.setState(0x1374, 0xaff2, 0xa2f0, 0x2cf6, 0x51df, 0xcc3, 0x1, 0x1);
        gbc.writeMem(0x1374, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xaff2);
        EXPECT(gbc.pc(), 0x1376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 032B
        gbc.setState(0x164f, 0xdd, 0xf690, 0xbd5e, 0x9db, 0x2905, 0x1, 0x0);
        gbc.writeMem(0x164f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xdd);
        EXPECT(gbc.pc(), 0x1651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 032C
        gbc.setState(0x3050, 0x9c4e, 0xa4d0, 0x147d, 0xeb3b, 0x3907, 0x1, 0x0);
        gbc.writeMem(0x3050, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9c4e);
        EXPECT(gbc.pc(), 0x3052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 032D
        gbc.setState(0xb8b, 0xf21c, 0x8170, 0x9360, 0x1cd6, 0x605c, 0x1, 0x1);
        gbc.writeMem(0xb8b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf21c);
        EXPECT(gbc.pc(), 0xb8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 032E
        gbc.setState(0x8d6, 0x15d4, 0xe3d0, 0x2e62, 0x2f77, 0x7570, 0x0, 0x0);
        gbc.writeMem(0x8d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x15d4);
        EXPECT(gbc.pc(), 0x8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 032F
        gbc.setState(0x17c7, 0xb430, 0xd3a0, 0xc954, 0x5565, 0xf7f6, 0x0, 0x0);
        gbc.writeMem(0x17c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb430);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0330
        gbc.setState(0x10f8, 0x316a, 0xeb40, 0x16cf, 0xe31a, 0x162, 0x1, 0x1);
        gbc.writeMem(0x10f8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x316a);
        EXPECT(gbc.pc(), 0x10fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0331
        gbc.setState(0xae8b, 0x8f59, 0xc8c0, 0x9ea0, 0xe551, 0x2b65, 0x0, 0x1);
        gbc.writeMem(0xae8b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8f59);
        EXPECT(gbc.pc(), 0xae8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8b), 0xcb);
        EXPECT(gbc.readMem(0xae8c), 0xac);
        // CB AC 0332
        gbc.setState(0xcdec, 0x1eb4, 0x17e0, 0x7332, 0x102c, 0x44e4, 0x0, 0x0);
        gbc.writeMem(0xcdec, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1eb4);
        EXPECT(gbc.pc(), 0xcdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdec), 0xcb);
        EXPECT(gbc.readMem(0xcded), 0xac);
        // CB AC 0333
        gbc.setState(0x6427, 0x82be, 0xaf70, 0x577b, 0x3496, 0x6867, 0x1, 0x0);
        gbc.writeMem(0x6427, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x82be);
        EXPECT(gbc.pc(), 0x6429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0334
        gbc.setState(0x8229, 0x8f10, 0x4300, 0x784a, 0xeded, 0x1d71, 0x1, 0x0);
        gbc.writeMem(0x8229, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8f10);
        EXPECT(gbc.pc(), 0x822b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8229), 0xcb);
        EXPECT(gbc.readMem(0x822a), 0xac);
        // CB AC 0335
        gbc.setState(0xde5c, 0x4af6, 0x3320, 0xc765, 0xcdcb, 0xcd21, 0x0, 0x1);
        gbc.writeMem(0xde5c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4af6);
        EXPECT(gbc.pc(), 0xde5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde5c), 0xcb);
        EXPECT(gbc.readMem(0xde5d), 0xac);
        // CB AC 0336
        gbc.setState(0xd462, 0x1586, 0x8e50, 0x10fa, 0xcb2c, 0x5122, 0x1, 0x1);
        gbc.writeMem(0xd462, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1586);
        EXPECT(gbc.pc(), 0xd464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd462), 0xcb);
        EXPECT(gbc.readMem(0xd463), 0xac);
        // CB AC 0337
        gbc.setState(0xa28a, 0xdca5, 0x8340, 0x5eb7, 0x39cc, 0x253c, 0x1, 0x0);
        gbc.writeMem(0xa28a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdca5);
        EXPECT(gbc.pc(), 0xa28c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28a), 0xcb);
        EXPECT(gbc.readMem(0xa28b), 0xac);
        // CB AC 0338
        gbc.setState(0x1553, 0xe2e7, 0xdbc0, 0x29ac, 0xc800, 0x625a, 0x0, 0x0);
        gbc.writeMem(0x1553, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe2e7);
        EXPECT(gbc.pc(), 0x1555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0339
        gbc.setState(0x57be, 0x233c, 0xb120, 0x5ae4, 0x103f, 0x3a9e, 0x1, 0x1);
        gbc.writeMem(0x57be, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x233c);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 033B
        gbc.setState(0xe271, 0x126b, 0x5b90, 0x2ca5, 0x5b35, 0x93fd, 0x1, 0x0);
        gbc.writeMem(0xe271, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x126b);
        EXPECT(gbc.pc(), 0xe273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe271), 0xcb);
        EXPECT(gbc.readMem(0xe272), 0xac);
        // CB AC 033C
        gbc.setState(0x2823, 0xc9f, 0x8350, 0x9aa2, 0x8a34, 0x6a18, 0x1, 0x0);
        gbc.writeMem(0x2823, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc9f);
        EXPECT(gbc.pc(), 0x2825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 033D
        gbc.setState(0xd4f9, 0x439f, 0x3990, 0xe8fc, 0x3e22, 0xc38, 0x0, 0x0);
        gbc.writeMem(0xd4f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x439f);
        EXPECT(gbc.pc(), 0xd4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f9), 0xcb);
        EXPECT(gbc.readMem(0xd4fa), 0xac);
        // CB AC 033F
        gbc.setState(0xcc8c, 0xb116, 0x5740, 0xddc, 0xc023, 0x145f, 0x1, 0x0);
        gbc.writeMem(0xcc8c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb116);
        EXPECT(gbc.pc(), 0xcc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8c), 0xcb);
        EXPECT(gbc.readMem(0xcc8d), 0xac);
        // CB AC 0340
        gbc.setState(0xee95, 0xb98e, 0xb5d0, 0xc2b4, 0x2a4c, 0x1f5c, 0x1, 0x1);
        gbc.writeMem(0xee95, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb98e);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee95), 0xcb);
        EXPECT(gbc.readMem(0xee96), 0xac);
        // CB AC 0341
        gbc.setState(0x8271, 0x4f61, 0x1db0, 0x3733, 0xf549, 0x7d9a, 0x1, 0x1);
        gbc.writeMem(0x8271, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4f61);
        EXPECT(gbc.pc(), 0x8273);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8271), 0xcb);
        EXPECT(gbc.readMem(0x8272), 0xac);
        // CB AC 0342
        gbc.setState(0x66e0, 0xd117, 0xf610, 0x736a, 0x2756, 0xa9e7, 0x0, 0x1);
        gbc.writeMem(0x66e0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd117);
        EXPECT(gbc.pc(), 0x66e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0343
        gbc.setState(0x2471, 0x13c8, 0xf9e0, 0x74da, 0x7ec3, 0xd3c3, 0x0, 0x0);
        gbc.writeMem(0x2471, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x13c8);
        EXPECT(gbc.pc(), 0x2473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0344
        gbc.setState(0x2ae3, 0xa430, 0x5270, 0xb154, 0xc132, 0x84c1, 0x1, 0x0);
        gbc.writeMem(0x2ae3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa430);
        EXPECT(gbc.pc(), 0x2ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0345
        gbc.setState(0xd37c, 0x252c, 0x1d30, 0x10bc, 0x64d2, 0x2074, 0x1, 0x0);
        gbc.writeMem(0xd37c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x252c);
        EXPECT(gbc.pc(), 0xd37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd37c), 0xcb);
        EXPECT(gbc.readMem(0xd37d), 0xac);
        // CB AC 0346
        gbc.setState(0x1bca, 0xf2dc, 0xb2c0, 0xd794, 0x8adb, 0x378d, 0x1, 0x0);
        gbc.writeMem(0x1bca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf2dc);
        EXPECT(gbc.pc(), 0x1bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0347
        gbc.setState(0x988, 0x37bc, 0xef90, 0x8374, 0xc2e8, 0x89e7, 0x0, 0x1);
        gbc.writeMem(0x988, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x37bc);
        EXPECT(gbc.pc(), 0x98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0348
        gbc.setState(0x98a7, 0xc313, 0xbea0, 0x5f22, 0xa743, 0x34c3, 0x0, 0x0);
        gbc.writeMem(0x98a7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc313);
        EXPECT(gbc.pc(), 0x98a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a7), 0xcb);
        EXPECT(gbc.readMem(0x98a8), 0xac);
        // CB AC 0349
        gbc.setState(0xb77f, 0x1e8, 0xd3d0, 0x6883, 0xd14d, 0x6fac, 0x0, 0x1);
        gbc.writeMem(0xb77f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1e8);
        EXPECT(gbc.pc(), 0xb781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77f), 0xcb);
        EXPECT(gbc.readMem(0xb780), 0xac);
        // CB AC 034A
        gbc.setState(0x2132, 0x1ea, 0x2ff0, 0xa7a6, 0x8d38, 0x4033, 0x1, 0x0);
        gbc.writeMem(0x2132, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1ea);
        EXPECT(gbc.pc(), 0x2134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 034B
        gbc.setState(0x9006, 0x3a4, 0xd2e0, 0x7250, 0x66bb, 0x5a43, 0x0, 0x0);
        gbc.writeMem(0x9006, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3a4);
        EXPECT(gbc.pc(), 0x9008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9006), 0xcb);
        EXPECT(gbc.readMem(0x9007), 0xac);
        // CB AC 034C
        gbc.setState(0xd5d2, 0x9fa2, 0x84f0, 0x37a3, 0x6579, 0x8343, 0x0, 0x0);
        gbc.writeMem(0xd5d2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9fa2);
        EXPECT(gbc.pc(), 0xd5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d2), 0xcb);
        EXPECT(gbc.readMem(0xd5d3), 0xac);
        // CB AC 034D
        gbc.setState(0x2a4c, 0xcf4d, 0x82e0, 0xf8e8, 0x79ab, 0x89de, 0x0, 0x0);
        gbc.writeMem(0x2a4c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcf4d);
        EXPECT(gbc.pc(), 0x2a4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 034E
        gbc.setState(0x3d66, 0xec82, 0x6a70, 0xc766, 0xf295, 0x8dcd, 0x0, 0x1);
        gbc.writeMem(0x3d66, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xec82);
        EXPECT(gbc.pc(), 0x3d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 034F
        gbc.setState(0x356a, 0x4f98, 0x80c0, 0xd83b, 0xce1, 0x66cc, 0x1, 0x0);
        gbc.writeMem(0x356a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4f98);
        EXPECT(gbc.pc(), 0x356c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0350
        gbc.setState(0x60c9, 0xf1b8, 0x69f0, 0x33e0, 0x40c9, 0x4fa, 0x0, 0x1);
        gbc.writeMem(0x60c9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf1b8);
        EXPECT(gbc.pc(), 0x60cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0351
        gbc.setState(0xb7d4, 0x9845, 0xa4e0, 0xe536, 0xaeec, 0x2abb, 0x0, 0x1);
        gbc.writeMem(0xb7d4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0xb7d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d4), 0xcb);
        EXPECT(gbc.readMem(0xb7d5), 0xac);
        // CB AC 0352
        gbc.setState(0x81b5, 0x446f, 0x3ce0, 0xcfb3, 0x1b4f, 0xc5a1, 0x0, 0x0);
        gbc.writeMem(0x81b5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x446f);
        EXPECT(gbc.pc(), 0x81b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b5), 0xcb);
        EXPECT(gbc.readMem(0x81b6), 0xac);
        // CB AC 0353
        gbc.setState(0xd756, 0x600b, 0xd080, 0xdf03, 0x7af8, 0xcea3, 0x0, 0x0);
        gbc.writeMem(0xd756, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x600b);
        EXPECT(gbc.pc(), 0xd758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd756), 0xcb);
        EXPECT(gbc.readMem(0xd757), 0xac);
        // CB AC 0354
        gbc.setState(0xe46c, 0x5e3b, 0xa460, 0xbb4e, 0xe76b, 0x15fa, 0x1, 0x0);
        gbc.writeMem(0xe46c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5e3b);
        EXPECT(gbc.pc(), 0xe46e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe46c), 0xcb);
        EXPECT(gbc.readMem(0xe46d), 0xac);
        // CB AC 0355
        gbc.setState(0xd50b, 0x6000, 0xb030, 0xfd66, 0xf33a, 0x299b, 0x0, 0x0);
        gbc.writeMem(0xd50b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6000);
        EXPECT(gbc.pc(), 0xd50d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50b), 0xcb);
        EXPECT(gbc.readMem(0xd50c), 0xac);
        // CB AC 0356
        gbc.setState(0x5043, 0x7fbb, 0x8fb0, 0x3137, 0xe377, 0xc139, 0x0, 0x0);
        gbc.writeMem(0x5043, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7fbb);
        EXPECT(gbc.pc(), 0x5045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0357
        gbc.setState(0x2c66, 0x81b5, 0x8700, 0xd8ba, 0x90b1, 0x8a36, 0x1, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x81b5);
        EXPECT(gbc.pc(), 0x2c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0358
        gbc.setState(0x5c28, 0x7b26, 0x2640, 0x5845, 0x7ec6, 0xcf6b, 0x1, 0x0);
        gbc.writeMem(0x5c28, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7b26);
        EXPECT(gbc.pc(), 0x5c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0359
        gbc.setState(0xad80, 0xb163, 0x8f00, 0x36b7, 0x3112, 0x63b1, 0x0, 0x0);
        gbc.writeMem(0xad80, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb163);
        EXPECT(gbc.pc(), 0xad82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad80), 0xcb);
        EXPECT(gbc.readMem(0xad81), 0xac);
        // CB AC 035A
        gbc.setState(0xa2c4, 0x6812, 0xf140, 0xa774, 0x52e1, 0x1443, 0x1, 0x1);
        gbc.writeMem(0xa2c4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6812);
        EXPECT(gbc.pc(), 0xa2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c4), 0xcb);
        EXPECT(gbc.readMem(0xa2c5), 0xac);
        // CB AC 035B
        gbc.setState(0x8ee7, 0x489e, 0x3320, 0x362, 0x2555, 0x34f1, 0x1, 0x1);
        gbc.writeMem(0x8ee7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x489e);
        EXPECT(gbc.pc(), 0x8ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee7), 0xcb);
        EXPECT(gbc.readMem(0x8ee8), 0xac);
        // CB AC 035C
        gbc.setState(0x1ec8, 0xda50, 0x7fb0, 0x664a, 0x8ae7, 0xa25c, 0x1, 0x0);
        gbc.writeMem(0x1ec8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xda50);
        EXPECT(gbc.pc(), 0x1eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 035D
        gbc.setState(0xe904, 0x6181, 0x2870, 0x2a51, 0xb74f, 0x7ecb, 0x0, 0x0);
        gbc.writeMem(0xe904, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0xe906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe904), 0xcb);
        EXPECT(gbc.readMem(0xe905), 0xac);
        // CB AC 035E
        gbc.setState(0x1535, 0xfc55, 0xc830, 0xc2bd, 0xa4c1, 0xc26d, 0x1, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xfc55);
        EXPECT(gbc.pc(), 0x1537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 035F
        gbc.setState(0x4f9d, 0x498b, 0xa820, 0xb67f, 0x8961, 0xf5a4, 0x0, 0x1);
        gbc.writeMem(0x4f9d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x498b);
        EXPECT(gbc.pc(), 0x4f9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0360
        gbc.setState(0x2db3, 0x9caa, 0x8040, 0xd5b1, 0x810f, 0xb849, 0x1, 0x1);
        gbc.writeMem(0x2db3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9caa);
        EXPECT(gbc.pc(), 0x2db5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0361
        gbc.setState(0x8076, 0xa7f8, 0xee20, 0xec9c, 0xbd89, 0x730d, 0x0, 0x0);
        gbc.writeMem(0x8076, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa7f8);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xac);
        // CB AC 0362
        gbc.setState(0xd638, 0x1879, 0x1010, 0xbfd8, 0xe272, 0xcbd4, 0x0, 0x0);
        gbc.writeMem(0xd638, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1879);
        EXPECT(gbc.pc(), 0xd63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd638), 0xcb);
        EXPECT(gbc.readMem(0xd639), 0xac);
        // CB AC 0363
        gbc.setState(0x5ead, 0x7cb6, 0xedf0, 0xe940, 0x96f3, 0x9a53, 0x1, 0x1);
        gbc.writeMem(0x5ead, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7cb6);
        EXPECT(gbc.pc(), 0x5eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0364
        gbc.setState(0x7198, 0x29bb, 0x1920, 0xa8be, 0x231d, 0x3dca, 0x1, 0x1);
        gbc.writeMem(0x7198, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x29bb);
        EXPECT(gbc.pc(), 0x719a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0365
        gbc.setState(0xbd09, 0x1451, 0x8650, 0x67cc, 0x6623, 0x33b6, 0x0, 0x1);
        gbc.writeMem(0xbd09, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1451);
        EXPECT(gbc.pc(), 0xbd0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd09), 0xcb);
        EXPECT(gbc.readMem(0xbd0a), 0xac);
        // CB AC 0366
        gbc.setState(0xc0f2, 0x29ad, 0xbee0, 0xc5fb, 0xaa92, 0x3d5e, 0x1, 0x1);
        gbc.writeMem(0xc0f2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x29ad);
        EXPECT(gbc.pc(), 0xc0f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f2), 0xcb);
        EXPECT(gbc.readMem(0xc0f3), 0xac);
        // CB AC 0367
        gbc.setState(0x387d, 0xf231, 0x2570, 0x40f1, 0x5ec0, 0x6f61, 0x0, 0x1);
        gbc.writeMem(0x387d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf231);
        EXPECT(gbc.pc(), 0x387f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0368
        gbc.setState(0x9cc1, 0xb764, 0x4400, 0x384a, 0x7579, 0xa247, 0x0, 0x1);
        gbc.writeMem(0x9cc1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb764);
        EXPECT(gbc.pc(), 0x9cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc1), 0xcb);
        EXPECT(gbc.readMem(0x9cc2), 0xac);
        // CB AC 036A
        gbc.setState(0xa6fa, 0xda78, 0xc80, 0x512c, 0x101b, 0xab20, 0x1, 0x1);
        gbc.writeMem(0xa6fa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xda78);
        EXPECT(gbc.pc(), 0xa6fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fa), 0xcb);
        EXPECT(gbc.readMem(0xa6fb), 0xac);
        // CB AC 036B
        gbc.setState(0xcb2d, 0xf531, 0x55e0, 0xe0be, 0x3950, 0x3b0c, 0x0, 0x1);
        gbc.writeMem(0xcb2d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf531);
        EXPECT(gbc.pc(), 0xcb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb2d), 0xcb);
        EXPECT(gbc.readMem(0xcb2e), 0xac);
        // CB AC 036C
        gbc.setState(0x7285, 0x20fa, 0x2290, 0x35a3, 0xd0e8, 0x9a6, 0x1, 0x0);
        gbc.writeMem(0x7285, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x20fa);
        EXPECT(gbc.pc(), 0x7287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 036D
        gbc.setState(0x9626, 0x2d38, 0x6410, 0xf4b4, 0xac44, 0xa8ce, 0x0, 0x0);
        gbc.writeMem(0x9626, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2d38);
        EXPECT(gbc.pc(), 0x9628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9626), 0xcb);
        EXPECT(gbc.readMem(0x9627), 0xac);
        // CB AC 036E
        gbc.setState(0xdf19, 0x997e, 0x8cf0, 0x87cd, 0xdf34, 0xa52a, 0x0, 0x0);
        gbc.writeMem(0xdf19, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x997e);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf19), 0xcb);
        EXPECT(gbc.readMem(0xdf1a), 0xac);
        // CB AC 036F
        gbc.setState(0xeee2, 0x73f9, 0xc980, 0x86f8, 0xd7b3, 0xe9a8, 0x0, 0x1);
        gbc.writeMem(0xeee2, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x73f9);
        EXPECT(gbc.pc(), 0xeee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee2), 0xcb);
        EXPECT(gbc.readMem(0xeee3), 0xac);
        // CB AC 0370
        gbc.setState(0x9c7e, 0xd458, 0xfed0, 0xcc2, 0x8753, 0xbeaf, 0x0, 0x1);
        gbc.writeMem(0x9c7e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0x9c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c7e), 0xcb);
        EXPECT(gbc.readMem(0x9c7f), 0xac);
        // CB AC 0371
        gbc.setState(0xb644, 0xfb0f, 0x32a0, 0x3e51, 0x4ee3, 0xb97e, 0x1, 0x1);
        gbc.writeMem(0xb644, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfb0f);
        EXPECT(gbc.pc(), 0xb646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb644), 0xcb);
        EXPECT(gbc.readMem(0xb645), 0xac);
        // CB AC 0372
        gbc.setState(0x3ff4, 0xc7bf, 0x5040, 0x9b6c, 0x21d7, 0x10fa, 0x0, 0x0);
        gbc.writeMem(0x3ff4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc7bf);
        EXPECT(gbc.pc(), 0x3ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0373
        gbc.setState(0x2a47, 0xd7e2, 0xf3c0, 0xf5e5, 0xbfc4, 0x8bec, 0x0, 0x0);
        gbc.writeMem(0x2a47, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd7e2);
        EXPECT(gbc.pc(), 0x2a49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0374
        gbc.setState(0x312a, 0x4503, 0xe550, 0xcbc9, 0x85e3, 0x4f2d, 0x0, 0x0);
        gbc.writeMem(0x312a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4503);
        EXPECT(gbc.pc(), 0x312c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0375
        gbc.setState(0xb5ff, 0x2215, 0x9030, 0x1ab, 0x2395, 0xa3e4, 0x1, 0x1);
        gbc.writeMem(0xb5ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2215);
        EXPECT(gbc.pc(), 0xb601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ff), 0xcb);
        EXPECT(gbc.readMem(0xb600), 0xac);
        // CB AC 0376
        gbc.setState(0x281f, 0xc989, 0x31f0, 0x4173, 0x4ffe, 0x30ef, 0x1, 0x0);
        gbc.writeMem(0x281f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc989);
        EXPECT(gbc.pc(), 0x2821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0377
        gbc.setState(0xdce3, 0xa791, 0xe2e0, 0x1609, 0x5dc6, 0x6a18, 0x1, 0x0);
        gbc.writeMem(0xdce3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa791);
        EXPECT(gbc.pc(), 0xdce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce3), 0xcb);
        EXPECT(gbc.readMem(0xdce4), 0xac);
        // CB AC 0378
        gbc.setState(0xd43d, 0x7e73, 0x4bd0, 0x4867, 0x1f1, 0x1f02, 0x1, 0x0);
        gbc.writeMem(0xd43d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7e73);
        EXPECT(gbc.pc(), 0xd43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd43d), 0xcb);
        EXPECT(gbc.readMem(0xd43e), 0xac);
        // CB AC 0379
        gbc.setState(0x7832, 0x5d59, 0xa920, 0xdbc3, 0xd117, 0x9a6b, 0x1, 0x0);
        gbc.writeMem(0x7832, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5d59);
        EXPECT(gbc.pc(), 0x7834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 037A
        gbc.setState(0xda9e, 0xf670, 0x4430, 0xa7c2, 0x7f9c, 0x222e, 0x0, 0x1);
        gbc.writeMem(0xda9e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf670);
        EXPECT(gbc.pc(), 0xdaa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9e), 0xcb);
        EXPECT(gbc.readMem(0xda9f), 0xac);
        // CB AC 037B
        gbc.setState(0x6bd4, 0x31b4, 0x1e0, 0x9b77, 0xe28a, 0x2453, 0x1, 0x0);
        gbc.writeMem(0x6bd4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x31b4);
        EXPECT(gbc.pc(), 0x6bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 037C
        gbc.setState(0x23f7, 0xe054, 0xc8c0, 0x3ebe, 0x9832, 0xbda0, 0x0, 0x0);
        gbc.writeMem(0x23f7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe054);
        EXPECT(gbc.pc(), 0x23f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 037D
        gbc.setState(0x1433, 0x5159, 0x28d0, 0x4e9c, 0xed65, 0xc7be, 0x0, 0x0);
        gbc.writeMem(0x1433, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5159);
        EXPECT(gbc.pc(), 0x1435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 037E
        gbc.setState(0x106e, 0x679, 0x4140, 0x14b3, 0xe6c, 0xe0cd, 0x1, 0x0);
        gbc.writeMem(0x106e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x679);
        EXPECT(gbc.pc(), 0x1070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 037F
        gbc.setState(0x45ad, 0x96bd, 0x8170, 0xd70c, 0xa359, 0xd125, 0x0, 0x0);
        gbc.writeMem(0x45ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x96bd);
        EXPECT(gbc.pc(), 0x45af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0380
        gbc.setState(0x6e5c, 0x3c24, 0x7860, 0xc3e6, 0xd0ff, 0x8957, 0x0, 0x0);
        gbc.writeMem(0x6e5c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3c24);
        EXPECT(gbc.pc(), 0x6e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0382
        gbc.setState(0xc7de, 0xe596, 0xd960, 0xa98b, 0x7f90, 0xb3e5, 0x1, 0x0);
        gbc.writeMem(0xc7de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe596);
        EXPECT(gbc.pc(), 0xc7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7de), 0xcb);
        EXPECT(gbc.readMem(0xc7df), 0xac);
        // CB AC 0383
        gbc.setState(0xc9c, 0x4ee0, 0x6c70, 0xfaa8, 0xc679, 0x2205, 0x0, 0x1);
        gbc.writeMem(0xc9c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4ee0);
        EXPECT(gbc.pc(), 0xc9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0384
        gbc.setState(0xe86d, 0x33e0, 0x6fa0, 0x99c, 0x98bc, 0x7d10, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x33e0);
        EXPECT(gbc.pc(), 0xe86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86d), 0xcb);
        EXPECT(gbc.readMem(0xe86e), 0xac);
        // CB AC 0385
        gbc.setState(0xb1a5, 0x4269, 0xbe90, 0xe0b0, 0x7459, 0x90a1, 0x1, 0x1);
        gbc.writeMem(0xb1a5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4269);
        EXPECT(gbc.pc(), 0xb1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a5), 0xcb);
        EXPECT(gbc.readMem(0xb1a6), 0xac);
        // CB AC 0387
        gbc.setState(0x49f9, 0x1362, 0xd5b0, 0x7107, 0x8463, 0xbc94, 0x1, 0x1);
        gbc.writeMem(0x49f9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1362);
        EXPECT(gbc.pc(), 0x49fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0388
        gbc.setState(0x9baa, 0x480f, 0x1980, 0x59b4, 0xbdfd, 0x9029, 0x1, 0x0);
        gbc.writeMem(0x9baa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x480f);
        EXPECT(gbc.pc(), 0x9bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9baa), 0xcb);
        EXPECT(gbc.readMem(0x9bab), 0xac);
        // CB AC 0389
        gbc.setState(0x939c, 0xf893, 0x98c0, 0xd6a1, 0xfa52, 0x698e, 0x0, 0x0);
        gbc.writeMem(0x939c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf893);
        EXPECT(gbc.pc(), 0x939e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939c), 0xcb);
        EXPECT(gbc.readMem(0x939d), 0xac);
        // CB AC 038A
        gbc.setState(0x5164, 0x291b, 0x6ca0, 0xa548, 0x3f31, 0x8454, 0x1, 0x0);
        gbc.writeMem(0x5164, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x291b);
        EXPECT(gbc.pc(), 0x5166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 038B
        gbc.setState(0x5c94, 0x3eb0, 0x4c20, 0xce84, 0x1430, 0xfe20, 0x1, 0x1);
        gbc.writeMem(0x5c94, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3eb0);
        EXPECT(gbc.pc(), 0x5c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 038C
        gbc.setState(0xb07a, 0xd071, 0x6730, 0xab2e, 0x3ed7, 0xfa9d, 0x1, 0x1);
        gbc.writeMem(0xb07a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd071);
        EXPECT(gbc.pc(), 0xb07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07a), 0xcb);
        EXPECT(gbc.readMem(0xb07b), 0xac);
        // CB AC 038D
        gbc.setState(0x8243, 0xf28c, 0xc060, 0xa299, 0x8b41, 0xd182, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf28c);
        EXPECT(gbc.pc(), 0x8245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8243), 0xcb);
        EXPECT(gbc.readMem(0x8244), 0xac);
        // CB AC 038E
        gbc.setState(0x7775, 0xc9c2, 0xc920, 0xb4e7, 0x5eb5, 0xb9bd, 0x1, 0x1);
        gbc.writeMem(0x7775, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc9c2);
        EXPECT(gbc.pc(), 0x7777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 038F
        gbc.setState(0xbf01, 0xe952, 0x9e60, 0x16b1, 0x52fc, 0x382b, 0x0, 0x1);
        gbc.writeMem(0xbf01, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe952);
        EXPECT(gbc.pc(), 0xbf03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf01), 0xcb);
        EXPECT(gbc.readMem(0xbf02), 0xac);
        // CB AC 0390
        gbc.setState(0x45eb, 0x81b6, 0x2b50, 0xce82, 0x116e, 0xc25c, 0x1, 0x0);
        gbc.writeMem(0x45eb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x81b6);
        EXPECT(gbc.pc(), 0x45ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0391
        gbc.setState(0x1d5, 0xd8d8, 0x6130, 0x20b0, 0xaf0f, 0x219d, 0x1, 0x1);
        gbc.writeMem(0x1d5, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd8d8);
        EXPECT(gbc.pc(), 0x1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 0392
        gbc.setState(0x8e14, 0x613e, 0xe4e0, 0x5a1b, 0x7f3, 0xab19, 0x1, 0x0);
        gbc.writeMem(0x8e14, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x613e);
        EXPECT(gbc.pc(), 0x8e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e14), 0xcb);
        EXPECT(gbc.readMem(0x8e15), 0xac);
        // CB AC 0393
        gbc.setState(0xd39c, 0xebe, 0xe430, 0x3ae2, 0x17fa, 0x9a, 0x1, 0x1);
        gbc.writeMem(0xd39c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xebe);
        EXPECT(gbc.pc(), 0xd39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd39c), 0xcb);
        EXPECT(gbc.readMem(0xd39d), 0xac);
        // CB AC 0394
        gbc.setState(0x66eb, 0xead9, 0xc120, 0x15c1, 0x20bb, 0xeb80, 0x1, 0x0);
        gbc.writeMem(0x66eb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xead9);
        EXPECT(gbc.pc(), 0x66ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0395
        gbc.setState(0x3b77, 0xae81, 0xeb40, 0x8aab, 0xb7e4, 0xa51e, 0x1, 0x0);
        gbc.writeMem(0x3b77, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xae81);
        EXPECT(gbc.pc(), 0x3b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0396
        gbc.setState(0xe541, 0x6452, 0xed70, 0xa7db, 0xa81a, 0x64a6, 0x0, 0x0);
        gbc.writeMem(0xe541, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6452);
        EXPECT(gbc.pc(), 0xe543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe541), 0xcb);
        EXPECT(gbc.readMem(0xe542), 0xac);
        // CB AC 0397
        gbc.setState(0xc341, 0x436b, 0x2a90, 0x7d6, 0x1b9, 0xe628, 0x0, 0x1);
        gbc.writeMem(0xc341, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x436b);
        EXPECT(gbc.pc(), 0xc343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc341), 0xcb);
        EXPECT(gbc.readMem(0xc342), 0xac);
        // CB AC 0398
        gbc.setState(0x4fa7, 0xfe8c, 0x7a20, 0x7211, 0xd8e9, 0xb236, 0x1, 0x1);
        gbc.writeMem(0x4fa7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfe8c);
        EXPECT(gbc.pc(), 0x4fa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 0399
        gbc.setState(0xde79, 0xd924, 0xc9e0, 0xec85, 0xef35, 0x964f, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd924);
        EXPECT(gbc.pc(), 0xde7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde79), 0xcb);
        EXPECT(gbc.readMem(0xde7a), 0xac);
        // CB AC 039A
        gbc.setState(0x5b4c, 0xf8f0, 0xfa30, 0xa028, 0x8eb8, 0x2c4d, 0x0, 0x0);
        gbc.writeMem(0x5b4c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf8f0);
        EXPECT(gbc.pc(), 0x5b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 039B
        gbc.setState(0x6c9, 0xf405, 0xf530, 0xe4c8, 0x2d99, 0x520, 0x1, 0x0);
        gbc.writeMem(0x6c9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf405);
        EXPECT(gbc.pc(), 0x6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 039C
        gbc.setState(0xd849, 0xccd2, 0xba10, 0x8165, 0x76ea, 0x14e3, 0x0, 0x1);
        gbc.writeMem(0xd849, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xccd2);
        EXPECT(gbc.pc(), 0xd84b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd849), 0xcb);
        EXPECT(gbc.readMem(0xd84a), 0xac);
        // CB AC 039D
        gbc.setState(0xda60, 0x9002, 0x5350, 0x313e, 0xea7e, 0x854f, 0x1, 0x0);
        gbc.writeMem(0xda60, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9002);
        EXPECT(gbc.pc(), 0xda62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda60), 0xcb);
        EXPECT(gbc.readMem(0xda61), 0xac);
        // CB AC 039E
        gbc.setState(0x7b62, 0xaf35, 0xecc0, 0x9d2e, 0x7db5, 0xd657, 0x1, 0x0);
        gbc.writeMem(0x7b62, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xaf35);
        EXPECT(gbc.pc(), 0x7b64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 039F
        gbc.setState(0x86b7, 0x386c, 0xcf60, 0x1c02, 0x9402, 0xbc55, 0x0, 0x0);
        gbc.writeMem(0x86b7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x386c);
        EXPECT(gbc.pc(), 0x86b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b7), 0xcb);
        EXPECT(gbc.readMem(0x86b8), 0xac);
        // CB AC 03A0
        gbc.setState(0x853b, 0x1bef, 0x5220, 0x9992, 0x9078, 0x81c7, 0x1, 0x0);
        gbc.writeMem(0x853b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1bef);
        EXPECT(gbc.pc(), 0x853d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853b), 0xcb);
        EXPECT(gbc.readMem(0x853c), 0xac);
        // CB AC 03A1
        gbc.setState(0x4d08, 0xb05c, 0x55d0, 0xd98d, 0xcb20, 0x79fa, 0x0, 0x0);
        gbc.writeMem(0x4d08, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb05c);
        EXPECT(gbc.pc(), 0x4d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03A3
        gbc.setState(0x77bf, 0x93c1, 0xa480, 0x8f4c, 0x393c, 0xbac2, 0x1, 0x1);
        gbc.writeMem(0x77bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x93c1);
        EXPECT(gbc.pc(), 0x77c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03A4
        gbc.setState(0x69e7, 0x913a, 0x2230, 0x2b4d, 0x44f9, 0x4874, 0x1, 0x1);
        gbc.writeMem(0x69e7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x913a);
        EXPECT(gbc.pc(), 0x69e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03A5
        gbc.setState(0xcebb, 0x94d9, 0xa0f0, 0x6067, 0x7739, 0x896f, 0x1, 0x0);
        gbc.writeMem(0xcebb, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x94d9);
        EXPECT(gbc.pc(), 0xcebd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebb), 0xcb);
        EXPECT(gbc.readMem(0xcebc), 0xac);
        // CB AC 03A6
        gbc.setState(0xeab3, 0x44f6, 0x2c30, 0xa631, 0xddbd, 0x7a1c, 0x0, 0x0);
        gbc.writeMem(0xeab3, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x44f6);
        EXPECT(gbc.pc(), 0xeab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab3), 0xcb);
        EXPECT(gbc.readMem(0xeab4), 0xac);
        // CB AC 03A7
        gbc.setState(0x231f, 0xa5c7, 0x3c10, 0x6d2f, 0xef53, 0xa272, 0x1, 0x0);
        gbc.writeMem(0x231f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa5c7);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03A8
        gbc.setState(0x9b79, 0xdd44, 0x1660, 0x9737, 0x8784, 0xb995, 0x0, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdd44);
        EXPECT(gbc.pc(), 0x9b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b79), 0xcb);
        EXPECT(gbc.readMem(0x9b7a), 0xac);
        // CB AC 03A9
        gbc.setState(0x92c7, 0x2060, 0x8180, 0x44c2, 0x3279, 0xf48d, 0x0, 0x1);
        gbc.writeMem(0x92c7, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2060);
        EXPECT(gbc.pc(), 0x92c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c7), 0xcb);
        EXPECT(gbc.readMem(0x92c8), 0xac);
        // CB AC 03AA
        gbc.setState(0xb794, 0x80e4, 0x2b0, 0x286a, 0xc0f4, 0x884, 0x0, 0x1);
        gbc.writeMem(0xb794, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x80e4);
        EXPECT(gbc.pc(), 0xb796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb794), 0xcb);
        EXPECT(gbc.readMem(0xb795), 0xac);
        // CB AC 03AC
        gbc.setState(0x7592, 0x4167, 0x78f0, 0xe769, 0xb26d, 0x61d6, 0x1, 0x0);
        gbc.writeMem(0x7592, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4167);
        EXPECT(gbc.pc(), 0x7594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03AD
        gbc.setState(0x5383, 0x494, 0x7740, 0xeddf, 0x70d, 0x8add, 0x0, 0x1);
        gbc.writeMem(0x5383, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x494);
        EXPECT(gbc.pc(), 0x5385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03AE
        gbc.setState(0x5c7e, 0x22db, 0x7180, 0x55b6, 0x11c2, 0xd8f, 0x0, 0x1);
        gbc.writeMem(0x5c7e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x22db);
        EXPECT(gbc.pc(), 0x5c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03AF
        gbc.setState(0xd22, 0x131, 0x6b40, 0x975f, 0x2d06, 0xaf89, 0x0, 0x0);
        gbc.writeMem(0xd22, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x131);
        EXPECT(gbc.pc(), 0xd24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03B0
        gbc.setState(0xd27b, 0x36f5, 0x5c0, 0xc5f0, 0xeb48, 0x61e9, 0x0, 0x0);
        gbc.writeMem(0xd27b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x36f5);
        EXPECT(gbc.pc(), 0xd27d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27b), 0xcb);
        EXPECT(gbc.readMem(0xd27c), 0xac);
        // CB AC 03B1
        gbc.setState(0xb108, 0x857a, 0x4010, 0xbc7d, 0x3ac8, 0x6c88, 0x1, 0x1);
        gbc.writeMem(0xb108, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x857a);
        EXPECT(gbc.pc(), 0xb10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb108), 0xcb);
        EXPECT(gbc.readMem(0xb109), 0xac);
        // CB AC 03B2
        gbc.setState(0x6821, 0xc12f, 0x3e90, 0x3cf3, 0xc693, 0xc3a4, 0x0, 0x1);
        gbc.writeMem(0x6821, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc12f);
        EXPECT(gbc.pc(), 0x6823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03B3
        gbc.setState(0x4b1c, 0x6e54, 0x4b10, 0x2b2c, 0x9bbb, 0x9119, 0x1, 0x1);
        gbc.writeMem(0x4b1c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6e54);
        EXPECT(gbc.pc(), 0x4b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03B4
        gbc.setState(0xb38e, 0xfa46, 0x6650, 0x1240, 0x2e6d, 0x7344, 0x1, 0x1);
        gbc.writeMem(0xb38e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xfa46);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb38e), 0xcb);
        EXPECT(gbc.readMem(0xb38f), 0xac);
        // CB AC 03B5
        gbc.setState(0x4864, 0x3784, 0xb370, 0xc3, 0xf711, 0x5fd1, 0x1, 0x1);
        gbc.writeMem(0x4864, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3784);
        EXPECT(gbc.pc(), 0x4866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03B6
        gbc.setState(0xd8dd, 0x4bd7, 0x9cd0, 0xe2f7, 0x9a84, 0x8e73, 0x1, 0x1);
        gbc.writeMem(0xd8dd, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4bd7);
        EXPECT(gbc.pc(), 0xd8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8dd), 0xcb);
        EXPECT(gbc.readMem(0xd8de), 0xac);
        // CB AC 03B7
        gbc.setState(0x9781, 0x86a5, 0x2550, 0xab5a, 0x651f, 0x81, 0x1, 0x1);
        gbc.writeMem(0x9781, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x86a5);
        EXPECT(gbc.pc(), 0x9783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9781), 0xcb);
        EXPECT(gbc.readMem(0x9782), 0xac);
        // CB AC 03B8
        gbc.setState(0x85d6, 0xe292, 0x69c0, 0x2e5c, 0x7a74, 0x2a14, 0x0, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe292);
        EXPECT(gbc.pc(), 0x85d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d6), 0xcb);
        EXPECT(gbc.readMem(0x85d7), 0xac);
        // CB AC 03B9
        gbc.setState(0x994f, 0xde88, 0xdf30, 0x9b21, 0x1aee, 0x427c, 0x1, 0x0);
        gbc.writeMem(0x994f, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xde88);
        EXPECT(gbc.pc(), 0x9951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994f), 0xcb);
        EXPECT(gbc.readMem(0x9950), 0xac);
        // CB AC 03BA
        gbc.setState(0x72bf, 0x4d22, 0xe590, 0xbd92, 0xe4b5, 0x78ff, 0x0, 0x1);
        gbc.writeMem(0x72bf, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4d22);
        EXPECT(gbc.pc(), 0x72c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03BB
        gbc.setState(0xc928, 0x9ca3, 0x5260, 0x890, 0xa77d, 0xcfcc, 0x1, 0x1);
        gbc.writeMem(0xc928, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9ca3);
        EXPECT(gbc.pc(), 0xc92a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc928), 0xcb);
        EXPECT(gbc.readMem(0xc929), 0xac);
        // CB AC 03BC
        gbc.setState(0x85ca, 0x241, 0xe730, 0xf567, 0xa936, 0x6d5e, 0x1, 0x1);
        gbc.writeMem(0x85ca, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x241);
        EXPECT(gbc.pc(), 0x85cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ca), 0xcb);
        EXPECT(gbc.readMem(0x85cb), 0xac);
        // CB AC 03BD
        gbc.setState(0x9669, 0xe7f5, 0xc330, 0x272a, 0xef46, 0x3c55, 0x1, 0x1);
        gbc.writeMem(0x9669, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe7f5);
        EXPECT(gbc.pc(), 0x966b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9669), 0xcb);
        EXPECT(gbc.readMem(0x966a), 0xac);
        // CB AC 03BE
        gbc.setState(0x210d, 0x3ac0, 0x3960, 0x3f58, 0x11c, 0x479b, 0x1, 0x0);
        gbc.writeMem(0x210d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3ac0);
        EXPECT(gbc.pc(), 0x210f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03BF
        gbc.setState(0xcc19, 0xf9d5, 0xf290, 0x1625, 0x65e1, 0xb38f, 0x0, 0x0);
        gbc.writeMem(0xcc19, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf9d5);
        EXPECT(gbc.pc(), 0xcc1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc19), 0xcb);
        EXPECT(gbc.readMem(0xcc1a), 0xac);
        // CB AC 03C0
        gbc.setState(0x66ff, 0xa373, 0x4aa0, 0xfa01, 0x7db0, 0x4a50, 0x0, 0x1);
        gbc.writeMem(0x66ff, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa373);
        EXPECT(gbc.pc(), 0x6701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03C1
        gbc.setState(0xc901, 0xe43e, 0xaf50, 0x7c2c, 0x6747, 0x58c9, 0x1, 0x1);
        gbc.writeMem(0xc901, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe43e);
        EXPECT(gbc.pc(), 0xc903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc901), 0xcb);
        EXPECT(gbc.readMem(0xc902), 0xac);
        // CB AC 03C2
        gbc.setState(0xc493, 0x9182, 0xd400, 0x1265, 0xa46, 0x79ca, 0x0, 0x0);
        gbc.writeMem(0xc493, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9182);
        EXPECT(gbc.pc(), 0xc495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc493), 0xcb);
        EXPECT(gbc.readMem(0xc494), 0xac);
        // CB AC 03C3
        gbc.setState(0x88d9, 0x4919, 0x65d0, 0x5736, 0x9135, 0xa7f2, 0x1, 0x0);
        gbc.writeMem(0x88d9, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4919);
        EXPECT(gbc.pc(), 0x88db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d9), 0xcb);
        EXPECT(gbc.readMem(0x88da), 0xac);
        // CB AC 03C4
        gbc.setState(0x63c0, 0x6e31, 0x1770, 0xd421, 0xe100, 0xb447, 0x0, 0x0);
        gbc.writeMem(0x63c0, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0x63c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03C5
        gbc.setState(0x796d, 0xd5, 0xd3e0, 0x9485, 0xa8f8, 0x49aa, 0x0, 0x0);
        gbc.writeMem(0x796d, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0x796f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03C6
        gbc.setState(0x8642, 0x4aca, 0x5640, 0x18da, 0x94b1, 0xa782, 0x0, 0x1);
        gbc.writeMem(0x8642, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4aca);
        EXPECT(gbc.pc(), 0x8644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8642), 0xcb);
        EXPECT(gbc.readMem(0x8643), 0xac);
        // CB AC 03C7
        gbc.setState(0x1c96, 0x84ac, 0xd0b0, 0xf32f, 0x80d5, 0x56b6, 0x0, 0x0);
        gbc.writeMem(0x1c96, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x84ac);
        EXPECT(gbc.pc(), 0x1c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03C8
        gbc.setState(0xeffa, 0xfaa8, 0x5b50, 0x6fb6, 0x5d2d, 0x9db, 0x1, 0x0);
        gbc.writeMem(0xeffa, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfaa8);
        EXPECT(gbc.pc(), 0xeffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffa), 0xcb);
        EXPECT(gbc.readMem(0xeffb), 0xac);
        // CB AC 03C9
        gbc.setState(0x4aee, 0x6322, 0x4800, 0x41d5, 0x1d7c, 0x5169, 0x0, 0x0);
        gbc.writeMem(0x4aee, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x6322);
        EXPECT(gbc.pc(), 0x4af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03CA
        gbc.setState(0xb348, 0xdf77, 0x4460, 0xdaf6, 0x9517, 0x8eb5, 0x0, 0x0);
        gbc.writeMem(0xb348, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdf77);
        EXPECT(gbc.pc(), 0xb34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb348), 0xcb);
        EXPECT(gbc.readMem(0xb349), 0xac);
        // CB AC 03CB
        gbc.setState(0xa161, 0x3fb2, 0x83c0, 0xc017, 0x1c27, 0xa8dd, 0x1, 0x0);
        gbc.writeMem(0xa161, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3fb2);
        EXPECT(gbc.pc(), 0xa163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa161), 0xcb);
        EXPECT(gbc.readMem(0xa162), 0xac);
        // CB AC 03CC
        gbc.setState(0x81ad, 0x1026, 0x42f0, 0xb6d8, 0xd6f3, 0xaff6, 0x1, 0x1);
        gbc.writeMem(0x81ad, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1026);
        EXPECT(gbc.pc(), 0x81af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ad), 0xcb);
        EXPECT(gbc.readMem(0x81ae), 0xac);
        // CB AC 03CD
        gbc.setState(0x420, 0x8f, 0x760, 0x7964, 0x151b, 0x62d0, 0x1, 0x0);
        gbc.writeMem(0x420, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8f);
        EXPECT(gbc.pc(), 0x422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03CE
        gbc.setState(0x83de, 0x4e7b, 0x7b0, 0x95a6, 0x9a55, 0xe51d, 0x0, 0x1);
        gbc.writeMem(0x83de, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4e7b);
        EXPECT(gbc.pc(), 0x83e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83de), 0xcb);
        EXPECT(gbc.readMem(0x83df), 0xac);
        // CB AC 03CF
        gbc.setState(0x5a2b, 0xf468, 0x460, 0x69, 0x9228, 0x29a2, 0x0, 0x0);
        gbc.writeMem(0x5a2b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf468);
        EXPECT(gbc.pc(), 0x5a2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03D0
        gbc.setState(0x605c, 0x4c6c, 0x9df0, 0x67e8, 0x2257, 0xcc11, 0x1, 0x1);
        gbc.writeMem(0x605c, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4c6c);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03D1
        gbc.setState(0xb7db, 0x9d31, 0x33a0, 0x798c, 0x619d, 0xebf9, 0x1, 0x0);
        gbc.writeMem(0xb7db, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9d31);
        EXPECT(gbc.pc(), 0xb7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7db), 0xcb);
        EXPECT(gbc.readMem(0xb7dc), 0xac);
        // CB AC 03D2
        gbc.setState(0xc37b, 0x4ef5, 0x3ad0, 0xb5a3, 0x875b, 0x7f84, 0x1, 0x0);
        gbc.writeMem(0xc37b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4ef5);
        EXPECT(gbc.pc(), 0xc37d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc37b), 0xcb);
        EXPECT(gbc.readMem(0xc37c), 0xac);
        // CB AC 03D3
        gbc.setState(0xa64e, 0xd1d5, 0x1010, 0x676f, 0xb0f3, 0x24a9, 0x1, 0x1);
        gbc.writeMem(0xa64e, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd1d5);
        EXPECT(gbc.pc(), 0xa650);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64e), 0xcb);
        EXPECT(gbc.readMem(0xa64f), 0xac);
        // CB AC 03D4
        gbc.setState(0xd7e8, 0x875, 0x710, 0x194c, 0xc110, 0xa15c, 0x1, 0x0);
        gbc.writeMem(0xd7e8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x875);
        EXPECT(gbc.pc(), 0xd7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e8), 0xcb);
        EXPECT(gbc.readMem(0xd7e9), 0xac);
        // CB AC 03D5
        gbc.setState(0xc5b, 0x51f9, 0xfa40, 0x72d9, 0x50c7, 0xfb51, 0x0, 0x0);
        gbc.writeMem(0xc5b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x51f9);
        EXPECT(gbc.pc(), 0xc5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03D6
        gbc.setState(0x3f1b, 0xffda, 0xdac0, 0xfff0, 0x3b3b, 0x5d96, 0x1, 0x1);
        gbc.writeMem(0x3f1b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xffda);
        EXPECT(gbc.pc(), 0x3f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB AC 03D7
        gbc.setState(0x8196, 0x5080, 0x2080, 0xc1e8, 0x4ce4, 0xfb15, 0x0, 0x0);
        gbc.writeMem(0x8196, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5080);
        EXPECT(gbc.pc(), 0x8198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8196), 0xcb);
        EXPECT(gbc.readMem(0x8197), 0xac);
        // CB AC 03D9
        gbc.setState(0xb937, 0x60d9, 0xf270, 0x79ef, 0x72be, 0xb0e6, 0x0, 0x1);
        gbc.writeMem(0xb937, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x60d9);
        EXPECT(gbc.pc(), 0xb939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb937), 0xcb);
        EXPECT(gbc.readMem(0xb938), 0xac);
        // CB AC 03DA
        gbc.setState(0xc3ae, 0x963f, 0x5cb0, 0x9ff3, 0xdb8b, 0x5bcd, 0x1, 0x0);
        gbc.writeMem(0xc3ae, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x963f);
        EXPECT(gbc.pc(), 0xc3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ae), 0xcb);
        EXPECT(gbc.readMem(0xc3af), 0xac);
        // CB AC 03DB
        gbc.setState(0x3629, 0xddce, 0xe990, 0x8c64, 0x630, 0xcd14, 0x1, 0x1);
        gbc.writeMem(0x3629, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xddce);
        EXPECT(gbc.pc(), 0x362b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03DC
        gbc.setState(0x3716, 0xbd16, 0x70d0, 0x1eac, 0xc76, 0x32bb, 0x1, 0x1);
        gbc.writeMem(0x3716, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbd16);
        EXPECT(gbc.pc(), 0x3718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03DD
        gbc.setState(0xeda8, 0x570f, 0xf4f0, 0x2fad, 0xf36e, 0x8b69, 0x1, 0x0);
        gbc.writeMem(0xeda8, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x570f);
        EXPECT(gbc.pc(), 0xedaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeda8), 0xcb);
        EXPECT(gbc.readMem(0xeda9), 0xac);
        // CB AC 03DE
        gbc.setState(0x53d4, 0x7dc8, 0xc890, 0xc35, 0x8e9a, 0x976d, 0x1, 0x1);
        gbc.writeMem(0x53d4, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x7dc8);
        EXPECT(gbc.pc(), 0x53d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03E0
        gbc.setState(0x1a6a, 0x4175, 0x9070, 0x363d, 0x75b, 0x6c61, 0x1, 0x0);
        gbc.writeMem(0x1a6a, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4175);
        EXPECT(gbc.pc(), 0x1a6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03E1
        gbc.setState(0xb450, 0x7158, 0xc100, 0xde47, 0x9958, 0x4911, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7158);
        EXPECT(gbc.pc(), 0xb452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb450), 0xcb);
        EXPECT(gbc.readMem(0xb451), 0xac);
        // CB AC 03E2
        gbc.setState(0x56c1, 0xe292, 0x12f0, 0xfac, 0x5f87, 0xf302, 0x0, 0x0);
        gbc.writeMem(0x56c1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe292);
        EXPECT(gbc.pc(), 0x56c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03E3
        gbc.setState(0xd7e1, 0xb2a2, 0x9cb0, 0xa34, 0xc2b8, 0xbd29, 0x0, 0x0);
        gbc.writeMem(0xd7e1, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb2a2);
        EXPECT(gbc.pc(), 0xd7e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e1), 0xcb);
        EXPECT(gbc.readMem(0xd7e2), 0xac);
        // CB AC 03E4
        gbc.setState(0x68c6, 0xca7b, 0x8b0, 0xc2c2, 0xe45, 0xdeb0, 0x0, 0x0);
        gbc.writeMem(0x68c6, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xca7b);
        EXPECT(gbc.pc(), 0x68c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03E5
        gbc.setState(0x1843, 0x12b0, 0x1930, 0xbbd0, 0xef25, 0x6f7a, 0x0, 0x1);
        gbc.writeMem(0x1843, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x12b0);
        EXPECT(gbc.pc(), 0x1845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB AC 03E6
        gbc.setState(0xbe29, 0x4f0a, 0xc4e0, 0x4eb3, 0x5076, 0x878a, 0x1, 0x0);
        gbc.writeMem(0xbe29, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4f0a);
        EXPECT(gbc.pc(), 0xbe2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe29), 0xcb);
        EXPECT(gbc.readMem(0xbe2a), 0xac);
        // CB AC 03E7
        gbc.setState(0x6c9b, 0x2fe3, 0x4460, 0xbe3d, 0xbb32, 0x5c98, 0x1, 0x1);
        gbc.writeMem(0x6c9b, { 0xcb, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2fe3);
        EXPECT(gbc.pc(), 0x6c9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
