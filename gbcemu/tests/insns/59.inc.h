    TEST(gbcemu, opcode_59) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 59 0000
        gbc.setState(0xda32, 0x290b, 0xf780, 0x92ec, 0xf560, 0x56fd, 0x0, 0x0);
        gbc.writeMem(0xda32, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x290b);
        EXPECT(gbc.pc(), 0xda33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda32), 0x59);
        // 59 0001
        gbc.setState(0x2971, 0x9a56, 0x7110, 0x220e, 0x33c8, 0xe02f, 0x0, 0x1);
        gbc.writeMem(0x2971, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9a56);
        EXPECT(gbc.pc(), 0x2972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0002
        gbc.setState(0xc9cf, 0x62bb, 0x620, 0xacd4, 0x55d, 0x914a, 0x1, 0x0);
        gbc.writeMem(0xc9cf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x62bb);
        EXPECT(gbc.pc(), 0xc9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9cf), 0x59);
        // 59 0004
        gbc.setState(0x3e56, 0x940f, 0x6920, 0x2419, 0x9b6c, 0x7f8f, 0x1, 0x1);
        gbc.writeMem(0x3e56, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x940f);
        EXPECT(gbc.pc(), 0x3e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0005
        gbc.setState(0x3154, 0xee64, 0x77e0, 0x6530, 0x6464, 0xf30d, 0x0, 0x1);
        gbc.writeMem(0x3154, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xee64);
        EXPECT(gbc.pc(), 0x3155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0006
        gbc.setState(0x115c, 0xeefa, 0x2340, 0x40a5, 0xe61a, 0xb3b5, 0x0, 0x0);
        gbc.writeMem(0x115c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeefa);
        EXPECT(gbc.pc(), 0x115d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0007
        gbc.setState(0xcd6d, 0xe7a6, 0x2360, 0x742b, 0xa40b, 0xbc67, 0x1, 0x0);
        gbc.writeMem(0xcd6d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe7a6);
        EXPECT(gbc.pc(), 0xcd6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd6d), 0x59);
        // 59 0008
        gbc.setState(0x84e3, 0x3356, 0xe870, 0x6d0f, 0x94c2, 0x6282, 0x0, 0x0);
        gbc.writeMem(0x84e3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3356);
        EXPECT(gbc.pc(), 0x84e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e3), 0x59);
        // 59 0009
        gbc.setState(0x29b6, 0x2fee, 0xb040, 0x41aa, 0xbc37, 0x8955, 0x1, 0x0);
        gbc.writeMem(0x29b6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2fee);
        EXPECT(gbc.pc(), 0x29b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 000A
        gbc.setState(0x6713, 0xa523, 0xa4a0, 0xc568, 0x388a, 0x6e4f, 0x0, 0x1);
        gbc.writeMem(0x6713, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa523);
        EXPECT(gbc.pc(), 0x6714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 000B
        gbc.setState(0x754c, 0xac69, 0xfe70, 0x52d0, 0xbd35, 0x9181, 0x1, 0x0);
        gbc.writeMem(0x754c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xac69);
        EXPECT(gbc.pc(), 0x754d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 000C
        gbc.setState(0x72c1, 0xa61e, 0xd350, 0x5c18, 0x3c27, 0x2e9e, 0x0, 0x1);
        gbc.writeMem(0x72c1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa61e);
        EXPECT(gbc.pc(), 0x72c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 000E
        gbc.setState(0x75e9, 0x7c5e, 0xcd70, 0x4803, 0xf054, 0xf8ba, 0x1, 0x0);
        gbc.writeMem(0x75e9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7c5e);
        EXPECT(gbc.pc(), 0x75ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 000F
        gbc.setState(0xeb46, 0xe8da, 0x6880, 0x4f3c, 0x809b, 0x2fa1, 0x1, 0x1);
        gbc.writeMem(0xeb46, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe8da);
        EXPECT(gbc.pc(), 0xeb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb46), 0x59);
        // 59 0010
        gbc.setState(0xc4e4, 0x2a86, 0xbca0, 0x89a2, 0x3788, 0xfee2, 0x0, 0x1);
        gbc.writeMem(0xc4e4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2a86);
        EXPECT(gbc.pc(), 0xc4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e4), 0x59);
        // 59 0011
        gbc.setState(0x81f, 0x5303, 0x2c20, 0x7227, 0x4f07, 0xee6, 0x1, 0x1);
        gbc.writeMem(0x81f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5303);
        EXPECT(gbc.pc(), 0x820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0012
        gbc.setState(0x2825, 0x7045, 0xe300, 0x45b4, 0x69e6, 0x20d2, 0x1, 0x1);
        gbc.writeMem(0x2825, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7045);
        EXPECT(gbc.pc(), 0x2826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0013
        gbc.setState(0x50e7, 0xc0d3, 0xd760, 0xb34d, 0x438c, 0x876c, 0x0, 0x1);
        gbc.writeMem(0x50e7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xc0d3);
        EXPECT(gbc.pc(), 0x50e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0014
        gbc.setState(0x1e7, 0x350a, 0xeb50, 0xad74, 0x755a, 0xe9e0, 0x0, 0x0);
        gbc.writeMem(0x1e7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x350a);
        EXPECT(gbc.pc(), 0x1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0015
        gbc.setState(0x1627, 0xf214, 0xda20, 0x185f, 0x3d86, 0x3036, 0x0, 0x0);
        gbc.writeMem(0x1627, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf214);
        EXPECT(gbc.pc(), 0x1628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0016
        gbc.setState(0xcaf1, 0x42f1, 0xabc0, 0xa072, 0x22c2, 0x74d0, 0x1, 0x0);
        gbc.writeMem(0xcaf1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x42f1);
        EXPECT(gbc.pc(), 0xcaf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf1), 0x59);
        // 59 0017
        gbc.setState(0x5e09, 0x9ff, 0xa4d0, 0xb51c, 0xc71, 0x3556, 0x0, 0x1);
        gbc.writeMem(0x5e09, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9ff);
        EXPECT(gbc.pc(), 0x5e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0018
        gbc.setState(0x5014, 0xdbde, 0x3af0, 0x8741, 0x3ab6, 0x5d2e, 0x0, 0x0);
        gbc.writeMem(0x5014, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdbde);
        EXPECT(gbc.pc(), 0x5015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0019
        gbc.setState(0x9992, 0x9c5c, 0x1f80, 0x3aec, 0xd75a, 0x5fec, 0x0, 0x0);
        gbc.writeMem(0x9992, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9c5c);
        EXPECT(gbc.pc(), 0x9993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9992), 0x59);
        // 59 001A
        gbc.setState(0x5b9, 0x981f, 0x4c40, 0xbcc0, 0x8f7e, 0xc798, 0x0, 0x1);
        gbc.writeMem(0x5b9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x981f);
        EXPECT(gbc.pc(), 0x5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 001B
        gbc.setState(0x500e, 0xbfd7, 0x9500, 0xc0ad, 0x3542, 0x1d93, 0x0, 0x1);
        gbc.writeMem(0x500e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbfd7);
        EXPECT(gbc.pc(), 0x500f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 001C
        gbc.setState(0x562f, 0xcfd7, 0xd750, 0xb33d, 0xb61, 0x279b, 0x0, 0x0);
        gbc.writeMem(0x562f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcfd7);
        EXPECT(gbc.pc(), 0x5630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 001D
        gbc.setState(0x561f, 0x8ae8, 0xd8a0, 0x2aee, 0xec1d, 0x95d9, 0x0, 0x1);
        gbc.writeMem(0x561f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8ae8);
        EXPECT(gbc.pc(), 0x5620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 001E
        gbc.setState(0x88ff, 0xffac, 0x9b60, 0xdbfb, 0xcaf5, 0x511d, 0x1, 0x0);
        gbc.writeMem(0x88ff, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xffac);
        EXPECT(gbc.pc(), 0x8900);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88ff), 0x59);
        // 59 001F
        gbc.setState(0xe9cd, 0x704e, 0x5e60, 0x857f, 0x87e, 0xc631, 0x1, 0x0);
        gbc.writeMem(0xe9cd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x704e);
        EXPECT(gbc.pc(), 0xe9ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9cd), 0x59);
        // 59 0020
        gbc.setState(0x51f2, 0x4fe4, 0x7b40, 0xebf3, 0xf6dc, 0x38fd, 0x0, 0x1);
        gbc.writeMem(0x51f2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4fe4);
        EXPECT(gbc.pc(), 0x51f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0021
        gbc.setState(0x7620, 0x1ee6, 0x9a90, 0xf05e, 0x1dec, 0x1433, 0x1, 0x1);
        gbc.writeMem(0x7620, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x1ee6);
        EXPECT(gbc.pc(), 0x7621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0022
        gbc.setState(0x592a, 0xe78f, 0x7600, 0xe4fb, 0x847b, 0x69df, 0x1, 0x1);
        gbc.writeMem(0x592a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe78f);
        EXPECT(gbc.pc(), 0x592b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0023
        gbc.setState(0xd565, 0x8092, 0x81d0, 0xe1a5, 0x29af, 0xc4fe, 0x0, 0x1);
        gbc.writeMem(0xd565, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8092);
        EXPECT(gbc.pc(), 0xd566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd565), 0x59);
        // 59 0025
        gbc.setState(0xc759, 0x1b89, 0x9b20, 0x10ad, 0x62fc, 0xf049, 0x1, 0x0);
        gbc.writeMem(0xc759, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1b89);
        EXPECT(gbc.pc(), 0xc75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc759), 0x59);
        // 59 0026
        gbc.setState(0xbc5c, 0x7aca, 0x1430, 0xa62d, 0xce51, 0xcdb2, 0x1, 0x1);
        gbc.writeMem(0xbc5c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7aca);
        EXPECT(gbc.pc(), 0xbc5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc5c), 0x59);
        // 59 0027
        gbc.setState(0x7305, 0xa3ef, 0x58b0, 0xcd1c, 0xafa, 0x361e, 0x0, 0x0);
        gbc.writeMem(0x7305, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0x7306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0028
        gbc.setState(0xa518, 0xfb44, 0x3610, 0xae71, 0x6e61, 0xeb03, 0x0, 0x0);
        gbc.writeMem(0xa518, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfb44);
        EXPECT(gbc.pc(), 0xa519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa518), 0x59);
        // 59 0029
        gbc.setState(0xc872, 0xb46, 0x81c0, 0x7ca3, 0x1b77, 0xc4ce, 0x0, 0x1);
        gbc.writeMem(0xc872, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb46);
        EXPECT(gbc.pc(), 0xc873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc872), 0x59);
        // 59 002B
        gbc.setState(0x4271, 0x8882, 0x5180, 0xb5fb, 0xafc6, 0x1449, 0x1, 0x0);
        gbc.writeMem(0x4271, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8882);
        EXPECT(gbc.pc(), 0x4272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 002C
        gbc.setState(0xac2b, 0x705b, 0xac50, 0x7e07, 0x5004, 0x11b5, 0x1, 0x0);
        gbc.writeMem(0xac2b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x705b);
        EXPECT(gbc.pc(), 0xac2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2b), 0x59);
        // 59 002D
        gbc.setState(0xd07, 0x8d7c, 0xd9e0, 0x5db8, 0xd463, 0x1fe6, 0x0, 0x1);
        gbc.writeMem(0xd07, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8d7c);
        EXPECT(gbc.pc(), 0xd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 002E
        gbc.setState(0x916d, 0xda89, 0xd850, 0xdf98, 0x1cb, 0xeb0c, 0x1, 0x1);
        gbc.writeMem(0x916d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xda89);
        EXPECT(gbc.pc(), 0x916e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916d), 0x59);
        // 59 002F
        gbc.setState(0x29d7, 0x671e, 0xd4c0, 0x6837, 0x91fd, 0x5d1b, 0x1, 0x1);
        gbc.writeMem(0x29d7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x671e);
        EXPECT(gbc.pc(), 0x29d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0030
        gbc.setState(0x328f, 0x69c, 0x2f0, 0x4188, 0xc27d, 0xdb73, 0x0, 0x1);
        gbc.writeMem(0x328f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x69c);
        EXPECT(gbc.pc(), 0x3290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0031
        gbc.setState(0x5ce9, 0x3d3b, 0xbeb0, 0x2222, 0x2097, 0x9ee5, 0x0, 0x1);
        gbc.writeMem(0x5ce9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3d3b);
        EXPECT(gbc.pc(), 0x5cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0032
        gbc.setState(0xe43d, 0x76f, 0xf460, 0xadc2, 0x26d7, 0xf8a9, 0x0, 0x0);
        gbc.writeMem(0xe43d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x76f);
        EXPECT(gbc.pc(), 0xe43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43d), 0x59);
        // 59 0033
        gbc.setState(0xb904, 0xee1, 0x5c0, 0xa245, 0xe678, 0x5ecc, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xee1);
        EXPECT(gbc.pc(), 0xb905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb904), 0x59);
        // 59 0034
        gbc.setState(0x421, 0x867, 0x2710, 0xa4, 0x2ddc, 0x11, 0x1, 0x0);
        gbc.writeMem(0x421, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x867);
        EXPECT(gbc.pc(), 0x422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0035
        gbc.setState(0x8b2c, 0x1c92, 0x520, 0xf572, 0xadd6, 0xb7d0, 0x0, 0x0);
        gbc.writeMem(0x8b2c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1c92);
        EXPECT(gbc.pc(), 0x8b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2c), 0x59);
        // 59 0036
        gbc.setState(0x1f58, 0x697, 0xb010, 0x42f9, 0xf669, 0x4436, 0x0, 0x1);
        gbc.writeMem(0x1f58, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x697);
        EXPECT(gbc.pc(), 0x1f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0037
        gbc.setState(0xb3b3, 0x90eb, 0x32a0, 0xe0d2, 0x223c, 0xe000, 0x0, 0x0);
        gbc.writeMem(0xb3b3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x90eb);
        EXPECT(gbc.pc(), 0xb3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b3), 0x59);
        // 59 0038
        gbc.setState(0x4f24, 0x91ab, 0x9cb0, 0x49f7, 0xcc36, 0xf95a, 0x1, 0x0);
        gbc.writeMem(0x4f24, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x91ab);
        EXPECT(gbc.pc(), 0x4f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0039
        gbc.setState(0x8957, 0xdfd9, 0xebf0, 0x953d, 0x41ee, 0x93c3, 0x1, 0x1);
        gbc.writeMem(0x8957, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0x8958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8957), 0x59);
        // 59 003A
        gbc.setState(0x143, 0xde22, 0xcea0, 0x74c2, 0xb2d2, 0x42b, 0x0, 0x0);
        gbc.writeMem(0x143, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xde22);
        EXPECT(gbc.pc(), 0x144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 003B
        gbc.setState(0xa2d3, 0x6847, 0xf3c0, 0x8c46, 0x6f49, 0xfd28, 0x1, 0x1);
        gbc.writeMem(0xa2d3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6847);
        EXPECT(gbc.pc(), 0xa2d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d3), 0x59);
        // 59 003C
        gbc.setState(0x91f, 0xa4a1, 0xa6c0, 0xfe84, 0x3964, 0xb2d1, 0x0, 0x1);
        gbc.writeMem(0x91f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa4a1);
        EXPECT(gbc.pc(), 0x920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 003D
        gbc.setState(0x8b8e, 0x94bd, 0x2c50, 0xb5b1, 0x2ac6, 0xb248, 0x0, 0x0);
        gbc.writeMem(0x8b8e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x94bd);
        EXPECT(gbc.pc(), 0x8b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b8e), 0x59);
        // 59 003E
        gbc.setState(0x6b5c, 0x70c0, 0x3180, 0x489c, 0xaa9f, 0x3e52, 0x1, 0x0);
        gbc.writeMem(0x6b5c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x70c0);
        EXPECT(gbc.pc(), 0x6b5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 003F
        gbc.setState(0xbdfc, 0x41ee, 0x45e0, 0xbada, 0x12d4, 0xc398, 0x1, 0x1);
        gbc.writeMem(0xbdfc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x41ee);
        EXPECT(gbc.pc(), 0xbdfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfc), 0x59);
        // 59 0040
        gbc.setState(0x46d8, 0x648c, 0x5800, 0x7e44, 0x1883, 0x7c6a, 0x0, 0x0);
        gbc.writeMem(0x46d8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x648c);
        EXPECT(gbc.pc(), 0x46d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0041
        gbc.setState(0x7b43, 0x1bec, 0x9c60, 0xc2e, 0xd93b, 0xab4e, 0x1, 0x0);
        gbc.writeMem(0x7b43, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1bec);
        EXPECT(gbc.pc(), 0x7b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0042
        gbc.setState(0x4a82, 0x8e2b, 0x12d0, 0xf1f8, 0x42ad, 0x15c2, 0x1, 0x0);
        gbc.writeMem(0x4a82, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8e2b);
        EXPECT(gbc.pc(), 0x4a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0043
        gbc.setState(0x48ca, 0xd42e, 0x2cb0, 0xaee8, 0x25fe, 0x8e8, 0x1, 0x1);
        gbc.writeMem(0x48ca, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x48cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0044
        gbc.setState(0x1fa0, 0xc9bd, 0x65f0, 0x88e2, 0x6e12, 0x3410, 0x1, 0x0);
        gbc.writeMem(0x1fa0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc9bd);
        EXPECT(gbc.pc(), 0x1fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0045
        gbc.setState(0xdbe, 0xb1f4, 0xbbb0, 0x98b3, 0x51d, 0xdad2, 0x1, 0x0);
        gbc.writeMem(0xdbe, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb1f4);
        EXPECT(gbc.pc(), 0xdbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0046
        gbc.setState(0x1118, 0x93ad, 0x4a60, 0x57ca, 0x142a, 0xc341, 0x0, 0x0);
        gbc.writeMem(0x1118, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x93ad);
        EXPECT(gbc.pc(), 0x1119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0047
        gbc.setState(0xd886, 0x13d2, 0xe3d0, 0x8777, 0xafe2, 0x530b, 0x1, 0x1);
        gbc.writeMem(0xd886, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x13d2);
        EXPECT(gbc.pc(), 0xd887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd886), 0x59);
        // 59 0048
        gbc.setState(0xbe59, 0xcda1, 0xfcb0, 0x8ab3, 0xf33e, 0xb111, 0x1, 0x1);
        gbc.writeMem(0xbe59, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xcda1);
        EXPECT(gbc.pc(), 0xbe5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe59), 0x59);
        // 59 004A
        gbc.setState(0x4212, 0x7ec6, 0x9820, 0x2ffa, 0xce90, 0xd015, 0x1, 0x0);
        gbc.writeMem(0x4212, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7ec6);
        EXPECT(gbc.pc(), 0x4213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 004B
        gbc.setState(0x708f, 0x978f, 0x7c00, 0xd25c, 0x9bf7, 0xb03f, 0x0, 0x0);
        gbc.writeMem(0x708f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x978f);
        EXPECT(gbc.pc(), 0x7090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 004C
        gbc.setState(0x8044, 0x1a07, 0xf1e0, 0x90f9, 0xe614, 0xeb8e, 0x1, 0x0);
        gbc.writeMem(0x8044, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1a07);
        EXPECT(gbc.pc(), 0x8045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8044), 0x59);
        // 59 004D
        gbc.setState(0xc663, 0x4c45, 0x1260, 0x14e5, 0x4053, 0x6bf3, 0x1, 0x1);
        gbc.writeMem(0xc663, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4c45);
        EXPECT(gbc.pc(), 0xc664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc663), 0x59);
        // 59 004E
        gbc.setState(0xe84e, 0x9f35, 0xea60, 0x149e, 0x3e7f, 0x897a, 0x0, 0x0);
        gbc.writeMem(0xe84e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9f35);
        EXPECT(gbc.pc(), 0xe84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe84e), 0x59);
        // 59 004F
        gbc.setState(0xbd53, 0x10e, 0x5ef0, 0xb633, 0x5f21, 0x6967, 0x0, 0x0);
        gbc.writeMem(0xbd53, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x10e);
        EXPECT(gbc.pc(), 0xbd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd53), 0x59);
        // 59 0050
        gbc.setState(0x19a3, 0x2b4c, 0x7440, 0x71c3, 0x7be0, 0x2757, 0x0, 0x1);
        gbc.writeMem(0x19a3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2b4c);
        EXPECT(gbc.pc(), 0x19a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0051
        gbc.setState(0x1532, 0x9e83, 0xd1b0, 0x9cde, 0x219a, 0x8a72, 0x1, 0x0);
        gbc.writeMem(0x1532, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9e83);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0053
        gbc.setState(0xdb65, 0xfe6f, 0x77e0, 0xb5cf, 0x56dd, 0x40dd, 0x0, 0x0);
        gbc.writeMem(0xdb65, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfe6f);
        EXPECT(gbc.pc(), 0xdb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb65), 0x59);
        // 59 0054
        gbc.setState(0x9d24, 0xf234, 0xf960, 0xa275, 0x9501, 0xe5bf, 0x0, 0x0);
        gbc.writeMem(0x9d24, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf234);
        EXPECT(gbc.pc(), 0x9d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d24), 0x59);
        // 59 0055
        gbc.setState(0xc28f, 0xd4f3, 0x9230, 0x4bcf, 0xd27e, 0x41fe, 0x0, 0x1);
        gbc.writeMem(0xc28f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd4f3);
        EXPECT(gbc.pc(), 0xc290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc28f), 0x59);
        // 59 0056
        gbc.setState(0x87b1, 0x4ddb, 0xd370, 0x767e, 0x623f, 0x72f7, 0x1, 0x1);
        gbc.writeMem(0x87b1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4ddb);
        EXPECT(gbc.pc(), 0x87b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87b1), 0x59);
        // 59 0057
        gbc.setState(0xe07e, 0xb31e, 0x8810, 0xec79, 0x9f36, 0x4512, 0x1, 0x0);
        gbc.writeMem(0xe07e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb31e);
        EXPECT(gbc.pc(), 0xe07f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe07e), 0x59);
        // 59 0058
        gbc.setState(0x21fb, 0xf8d2, 0x48e0, 0x7a09, 0xd3a3, 0x8583, 0x1, 0x0);
        gbc.writeMem(0x21fb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xf8d2);
        EXPECT(gbc.pc(), 0x21fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0059
        gbc.setState(0x68a2, 0xea66, 0xd6c0, 0x987a, 0xc9c4, 0x4cf1, 0x1, 0x0);
        gbc.writeMem(0x68a2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xea66);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 005A
        gbc.setState(0x92f9, 0x36fe, 0x59d0, 0x922c, 0xfce3, 0xa901, 0x0, 0x1);
        gbc.writeMem(0x92f9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x36fe);
        EXPECT(gbc.pc(), 0x92fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92f9), 0x59);
        // 59 005B
        gbc.setState(0x6e87, 0x12dd, 0x49c0, 0xf01e, 0xbfd8, 0x7c7c, 0x1, 0x1);
        gbc.writeMem(0x6e87, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x12dd);
        EXPECT(gbc.pc(), 0x6e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 005C
        gbc.setState(0xec41, 0x796f, 0xbd50, 0xd22f, 0x96d9, 0x43b9, 0x1, 0x0);
        gbc.writeMem(0xec41, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x796f);
        EXPECT(gbc.pc(), 0xec42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec41), 0x59);
        // 59 005D
        gbc.setState(0x8fbb, 0x6282, 0x8fe0, 0xdfdd, 0x29ac, 0x8e30, 0x0, 0x1);
        gbc.writeMem(0x8fbb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6282);
        EXPECT(gbc.pc(), 0x8fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbb), 0x59);
        // 59 005E
        gbc.setState(0xbcce, 0x68ce, 0xd700, 0x6994, 0xedc4, 0x842c, 0x1, 0x0);
        gbc.writeMem(0xbcce, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x68ce);
        EXPECT(gbc.pc(), 0xbccf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcce), 0x59);
        // 59 005F
        gbc.setState(0xd2cb, 0x5d37, 0xb460, 0x724e, 0xfea7, 0xbe7a, 0x1, 0x0);
        gbc.writeMem(0xd2cb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5d37);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2cb), 0x59);
        // 59 0061
        gbc.setState(0xc285, 0xbbf9, 0x2520, 0x2516, 0x2103, 0x7d0, 0x1, 0x0);
        gbc.writeMem(0xc285, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbbf9);
        EXPECT(gbc.pc(), 0xc286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc285), 0x59);
        // 59 0063
        gbc.setState(0xe838, 0x9715, 0x88e0, 0x1026, 0x96a9, 0x71fc, 0x1, 0x0);
        gbc.writeMem(0xe838, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9715);
        EXPECT(gbc.pc(), 0xe839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe838), 0x59);
        // 59 0064
        gbc.setState(0x8fc0, 0x2744, 0x6200, 0x7684, 0xfb63, 0x9175, 0x0, 0x1);
        gbc.writeMem(0x8fc0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2744);
        EXPECT(gbc.pc(), 0x8fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc0), 0x59);
        // 59 0065
        gbc.setState(0x525a, 0x632, 0x4350, 0xa01e, 0xe9ab, 0x1ea8, 0x1, 0x0);
        gbc.writeMem(0x525a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x632);
        EXPECT(gbc.pc(), 0x525b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0066
        gbc.setState(0xd0ed, 0xbde9, 0xa680, 0x99f1, 0x810f, 0x38e, 0x1, 0x1);
        gbc.writeMem(0xd0ed, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbde9);
        EXPECT(gbc.pc(), 0xd0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0ed), 0x59);
        // 59 0067
        gbc.setState(0x1c67, 0x272d, 0xb300, 0xf6f3, 0x1618, 0xe5a1, 0x1, 0x1);
        gbc.writeMem(0x1c67, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x272d);
        EXPECT(gbc.pc(), 0x1c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0068
        gbc.setState(0xefd, 0xa005, 0x7150, 0xce51, 0x297c, 0xccaf, 0x0, 0x0);
        gbc.writeMem(0xefd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa005);
        EXPECT(gbc.pc(), 0xefe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0069
        gbc.setState(0xb2b5, 0x9f67, 0x5010, 0xd719, 0xaa87, 0xc312, 0x0, 0x0);
        gbc.writeMem(0xb2b5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9f67);
        EXPECT(gbc.pc(), 0xb2b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b5), 0x59);
        // 59 006A
        gbc.setState(0x8cbb, 0xd08f, 0x7a90, 0x3570, 0xa4d4, 0x2cb0, 0x0, 0x1);
        gbc.writeMem(0x8cbb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd08f);
        EXPECT(gbc.pc(), 0x8cbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbb), 0x59);
        // 59 006B
        gbc.setState(0x31d, 0x8b38, 0xca20, 0xfdbd, 0xc829, 0x444a, 0x0, 0x0);
        gbc.writeMem(0x31d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8b38);
        EXPECT(gbc.pc(), 0x31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 006C
        gbc.setState(0x373f, 0x857d, 0xf920, 0x4664, 0xb40a, 0xe681, 0x1, 0x1);
        gbc.writeMem(0x373f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x857d);
        EXPECT(gbc.pc(), 0x3740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 006D
        gbc.setState(0xd22d, 0xe9f7, 0x6bf0, 0x7906, 0xe572, 0xdf88, 0x1, 0x0);
        gbc.writeMem(0xd22d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe9f7);
        EXPECT(gbc.pc(), 0xd22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd22d), 0x59);
        // 59 006E
        gbc.setState(0x3001, 0xaba5, 0xa150, 0xb0a4, 0x40ae, 0x40f6, 0x1, 0x0);
        gbc.writeMem(0x3001, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xaba5);
        EXPECT(gbc.pc(), 0x3002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 006F
        gbc.setState(0x469c, 0x1b29, 0x3730, 0xfb49, 0xbe88, 0x9a00, 0x0, 0x1);
        gbc.writeMem(0x469c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1b29);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0070
        gbc.setState(0x3e3, 0x9f77, 0x7e0, 0x2f22, 0xe0e8, 0xd25c, 0x1, 0x0);
        gbc.writeMem(0x3e3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9f77);
        EXPECT(gbc.pc(), 0x3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0071
        gbc.setState(0x443, 0x726, 0x2100, 0x62f0, 0x3c31, 0x1ac9, 0x0, 0x0);
        gbc.writeMem(0x443, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x726);
        EXPECT(gbc.pc(), 0x444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0072
        gbc.setState(0x55f6, 0x24c4, 0xd730, 0x2978, 0xf81c, 0x2a0c, 0x0, 0x1);
        gbc.writeMem(0x55f6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x24c4);
        EXPECT(gbc.pc(), 0x55f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0073
        gbc.setState(0x9d10, 0x9f4, 0xb0e0, 0x6036, 0x6b41, 0xd612, 0x0, 0x1);
        gbc.writeMem(0x9d10, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9f4);
        EXPECT(gbc.pc(), 0x9d11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d10), 0x59);
        // 59 0074
        gbc.setState(0x5909, 0x9bec, 0xfbb0, 0xf880, 0xbfb9, 0x309f, 0x0, 0x1);
        gbc.writeMem(0x5909, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9bec);
        EXPECT(gbc.pc(), 0x590a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0075
        gbc.setState(0x1d99, 0xd663, 0xb270, 0x6eb7, 0x9cb9, 0xf8a0, 0x0, 0x1);
        gbc.writeMem(0x1d99, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0x1d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0076
        gbc.setState(0xceaf, 0x1d76, 0xaa40, 0xfd25, 0xb21a, 0x70e9, 0x1, 0x0);
        gbc.writeMem(0xceaf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1d76);
        EXPECT(gbc.pc(), 0xceb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaf), 0x59);
        // 59 0077
        gbc.setState(0x254, 0xfef3, 0xc2b0, 0x3030, 0x5520, 0x3962, 0x0, 0x0);
        gbc.writeMem(0x254, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfef3);
        EXPECT(gbc.pc(), 0x255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0078
        gbc.setState(0x51ca, 0x2b15, 0x3be0, 0xfee, 0x1b43, 0x4e63, 0x0, 0x0);
        gbc.writeMem(0x51ca, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2b15);
        EXPECT(gbc.pc(), 0x51cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0079
        gbc.setState(0x93db, 0x6468, 0x9450, 0xd1a, 0x2d2b, 0x1973, 0x0, 0x1);
        gbc.writeMem(0x93db, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6468);
        EXPECT(gbc.pc(), 0x93dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93db), 0x59);
        // 59 007A
        gbc.setState(0x33eb, 0x3a71, 0x30, 0x1861, 0xc51c, 0xa34d, 0x0, 0x1);
        gbc.writeMem(0x33eb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3a71);
        EXPECT(gbc.pc(), 0x33ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 007B
        gbc.setState(0xe68b, 0x54ee, 0xf430, 0x1cd3, 0xe754, 0x3948, 0x0, 0x1);
        gbc.writeMem(0xe68b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x54ee);
        EXPECT(gbc.pc(), 0xe68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68b), 0x59);
        // 59 007C
        gbc.setState(0x83a2, 0x50c4, 0xbfa0, 0x25ae, 0xe411, 0x591c, 0x1, 0x1);
        gbc.writeMem(0x83a2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x50c4);
        EXPECT(gbc.pc(), 0x83a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a2), 0x59);
        // 59 007D
        gbc.setState(0xb413, 0xffae, 0xce80, 0x472e, 0x5804, 0x3de3, 0x1, 0x1);
        gbc.writeMem(0xb413, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xffae);
        EXPECT(gbc.pc(), 0xb414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb413), 0x59);
        // 59 007E
        gbc.setState(0x2ad5, 0x18b8, 0xd640, 0x6df0, 0x94d4, 0x1c69, 0x0, 0x0);
        gbc.writeMem(0x2ad5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x18b8);
        EXPECT(gbc.pc(), 0x2ad6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 007F
        gbc.setState(0x8d09, 0x7ac3, 0x3ab0, 0x9d86, 0x6abe, 0x20, 0x0, 0x1);
        gbc.writeMem(0x8d09, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x7ac3);
        EXPECT(gbc.pc(), 0x8d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d09), 0x59);
        // 59 0080
        gbc.setState(0x23c4, 0x2804, 0x54f0, 0x5623, 0xdeb4, 0x8405, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2804);
        EXPECT(gbc.pc(), 0x23c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0081
        gbc.setState(0x592d, 0x56a5, 0x1cd0, 0x2697, 0x2b88, 0xdcb8, 0x1, 0x1);
        gbc.writeMem(0x592d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x56a5);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0082
        gbc.setState(0x764d, 0xcac6, 0x210, 0x7d3, 0x8393, 0x8926, 0x0, 0x1);
        gbc.writeMem(0x764d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0x764e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0083
        gbc.setState(0xac0b, 0x2aa5, 0x5250, 0x6041, 0xcfa2, 0x7c37, 0x0, 0x1);
        gbc.writeMem(0xac0b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x2aa5);
        EXPECT(gbc.pc(), 0xac0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0b), 0x59);
        // 59 0084
        gbc.setState(0x791f, 0x5537, 0x3570, 0xe07e, 0xf487, 0x1f83, 0x0, 0x0);
        gbc.writeMem(0x791f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5537);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0085
        gbc.setState(0x4db, 0xf18b, 0x2810, 0x81e7, 0x6d0b, 0x8fb2, 0x0, 0x1);
        gbc.writeMem(0x4db, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf18b);
        EXPECT(gbc.pc(), 0x4dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0086
        gbc.setState(0x366b, 0x7eb3, 0xc110, 0xad84, 0xf0c2, 0x4eb7, 0x0, 0x1);
        gbc.writeMem(0x366b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7eb3);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0087
        gbc.setState(0xdacd, 0x5c6, 0x1130, 0x90cd, 0x825, 0xcf27, 0x1, 0x1);
        gbc.writeMem(0xdacd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5c6);
        EXPECT(gbc.pc(), 0xdace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdacd), 0x59);
        // 59 0088
        gbc.setState(0xedb8, 0x4a19, 0xde40, 0xd696, 0xbfe, 0xe6b, 0x0, 0x1);
        gbc.writeMem(0xedb8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4a19);
        EXPECT(gbc.pc(), 0xedb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb8), 0x59);
        // 59 0089
        gbc.setState(0xdc22, 0xe3cc, 0xde20, 0xb4f1, 0xe38f, 0x38d6, 0x1, 0x1);
        gbc.writeMem(0xdc22, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe3cc);
        EXPECT(gbc.pc(), 0xdc23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc22), 0x59);
        // 59 008A
        gbc.setState(0xe6f7, 0x4380, 0xbca0, 0xcc73, 0x8caf, 0xdd53, 0x0, 0x0);
        gbc.writeMem(0xe6f7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4380);
        EXPECT(gbc.pc(), 0xe6f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f7), 0x59);
        // 59 008B
        gbc.setState(0x2973, 0x6ff9, 0xa30, 0x5349, 0x90db, 0x5ce2, 0x0, 0x0);
        gbc.writeMem(0x2973, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0x2974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 008C
        gbc.setState(0x11dd, 0x4d41, 0x8890, 0xea5a, 0xecb2, 0xc40b, 0x1, 0x1);
        gbc.writeMem(0x11dd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4d41);
        EXPECT(gbc.pc(), 0x11de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 008D
        gbc.setState(0x12aa, 0x14fa, 0x3250, 0xc7c5, 0xdfcf, 0xb3f6, 0x0, 0x1);
        gbc.writeMem(0x12aa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x14fa);
        EXPECT(gbc.pc(), 0x12ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 008F
        gbc.setState(0x37a1, 0xb9ee, 0xb90, 0x2d96, 0x5da4, 0xd35c, 0x1, 0x1);
        gbc.writeMem(0x37a1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb9ee);
        EXPECT(gbc.pc(), 0x37a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0090
        gbc.setState(0x7610, 0x13af, 0xf5c0, 0x2522, 0xb61, 0x9ca0, 0x0, 0x0);
        gbc.writeMem(0x7610, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x13af);
        EXPECT(gbc.pc(), 0x7611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0091
        gbc.setState(0x2e35, 0x9f06, 0xbbe0, 0x3dae, 0x246c, 0x1d49, 0x1, 0x0);
        gbc.writeMem(0x2e35, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9f06);
        EXPECT(gbc.pc(), 0x2e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0092
        gbc.setState(0x5025, 0xbca0, 0x6b00, 0xba07, 0xc449, 0x52bc, 0x1, 0x1);
        gbc.writeMem(0x5025, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbca0);
        EXPECT(gbc.pc(), 0x5026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0093
        gbc.setState(0x566c, 0x7474, 0x47e0, 0x4c35, 0xc3fe, 0x5b7f, 0x1, 0x1);
        gbc.writeMem(0x566c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7474);
        EXPECT(gbc.pc(), 0x566d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0094
        gbc.setState(0x9a6e, 0x5919, 0x7c50, 0x9b1f, 0x33eb, 0x5578, 0x0, 0x0);
        gbc.writeMem(0x9a6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5919);
        EXPECT(gbc.pc(), 0x9a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6e), 0x59);
        // 59 0095
        gbc.setState(0xe4b4, 0x3fcf, 0x1b50, 0x9f91, 0xfb07, 0xd185, 0x1, 0x0);
        gbc.writeMem(0xe4b4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3fcf);
        EXPECT(gbc.pc(), 0xe4b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b4), 0x59);
        // 59 0096
        gbc.setState(0xd93e, 0xecd3, 0x9ee0, 0x973b, 0xc8f7, 0xd52e, 0x1, 0x0);
        gbc.writeMem(0xd93e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xecd3);
        EXPECT(gbc.pc(), 0xd93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd93e), 0x59);
        // 59 0097
        gbc.setState(0xce4, 0x3ef5, 0x5fc0, 0xcdd5, 0x7d73, 0xccf6, 0x0, 0x1);
        gbc.writeMem(0xce4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3ef5);
        EXPECT(gbc.pc(), 0xce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0098
        gbc.setState(0x7308, 0x304a, 0x7640, 0x5fec, 0xeae6, 0x37bd, 0x1, 0x1);
        gbc.writeMem(0x7308, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x304a);
        EXPECT(gbc.pc(), 0x7309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0099
        gbc.setState(0x4d84, 0x8fee, 0xab30, 0xd84e, 0xad97, 0x830e, 0x1, 0x1);
        gbc.writeMem(0x4d84, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8fee);
        EXPECT(gbc.pc(), 0x4d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 009A
        gbc.setState(0xb4f5, 0x73aa, 0xfc70, 0x67ca, 0x7966, 0xe946, 0x0, 0x0);
        gbc.writeMem(0xb4f5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x73aa);
        EXPECT(gbc.pc(), 0xb4f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f5), 0x59);
        // 59 009B
        gbc.setState(0x2f08, 0x7958, 0x9a20, 0xa347, 0x38f1, 0x1bc, 0x0, 0x0);
        gbc.writeMem(0x2f08, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7958);
        EXPECT(gbc.pc(), 0x2f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 009C
        gbc.setState(0x2273, 0x8ba7, 0xdae0, 0xba67, 0x8f71, 0x254f, 0x0, 0x0);
        gbc.writeMem(0x2273, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8ba7);
        EXPECT(gbc.pc(), 0x2274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 009D
        gbc.setState(0x62e0, 0x6a41, 0x62f0, 0xf44f, 0xba82, 0xb2c4, 0x0, 0x1);
        gbc.writeMem(0x62e0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6a41);
        EXPECT(gbc.pc(), 0x62e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 009E
        gbc.setState(0xb30a, 0x50f7, 0xc540, 0x9127, 0x8720, 0xd0f9, 0x0, 0x0);
        gbc.writeMem(0xb30a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x50f7);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb30a), 0x59);
        // 59 009F
        gbc.setState(0xc3e7, 0xccfd, 0x3030, 0xb214, 0xe009, 0x1b35, 0x1, 0x0);
        gbc.writeMem(0xc3e7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xccfd);
        EXPECT(gbc.pc(), 0xc3e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e7), 0x59);
        // 59 00A0
        gbc.setState(0x6434, 0x33ec, 0xafa0, 0xf526, 0x57d2, 0xd865, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x33ec);
        EXPECT(gbc.pc(), 0x6435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00A1
        gbc.setState(0x3bf7, 0x5fd4, 0x8690, 0xd5e5, 0xd8cc, 0x953, 0x0, 0x1);
        gbc.writeMem(0x3bf7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5fd4);
        EXPECT(gbc.pc(), 0x3bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00A2
        gbc.setState(0x5d50, 0xf632, 0x5c0, 0x199e, 0x5368, 0x5198, 0x0, 0x1);
        gbc.writeMem(0x5d50, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf632);
        EXPECT(gbc.pc(), 0x5d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00A3
        gbc.setState(0x2b0, 0x540b, 0xfd80, 0x3708, 0x8597, 0x55ed, 0x1, 0x1);
        gbc.writeMem(0x2b0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x540b);
        EXPECT(gbc.pc(), 0x2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00A4
        gbc.setState(0x1c8f, 0x35d3, 0x3b80, 0xd7eb, 0x5e1a, 0xebb6, 0x1, 0x1);
        gbc.writeMem(0x1c8f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x35d3);
        EXPECT(gbc.pc(), 0x1c90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00A5
        gbc.setState(0x3a17, 0xf2e8, 0x49e0, 0x21c9, 0x1cca, 0x3fb, 0x0, 0x0);
        gbc.writeMem(0x3a17, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf2e8);
        EXPECT(gbc.pc(), 0x3a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00A6
        gbc.setState(0x2da4, 0x4348, 0x1830, 0x7a31, 0x1322, 0x39ae, 0x0, 0x1);
        gbc.writeMem(0x2da4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4348);
        EXPECT(gbc.pc(), 0x2da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00A7
        gbc.setState(0x1f2a, 0x795b, 0xa540, 0x2591, 0x3f0, 0xfad4, 0x1, 0x1);
        gbc.writeMem(0x1f2a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x795b);
        EXPECT(gbc.pc(), 0x1f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00A8
        gbc.setState(0x53d0, 0xae48, 0xb880, 0xd779, 0x1163, 0xae85, 0x1, 0x1);
        gbc.writeMem(0x53d0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xae48);
        EXPECT(gbc.pc(), 0x53d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00AA
        gbc.setState(0x3f4d, 0x21d7, 0xb990, 0xc113, 0xf721, 0x9132, 0x1, 0x0);
        gbc.writeMem(0x3f4d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x21d7);
        EXPECT(gbc.pc(), 0x3f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00AB
        gbc.setState(0xeaa5, 0x63bf, 0x1840, 0xb62c, 0xf6b, 0xab36, 0x1, 0x1);
        gbc.writeMem(0xeaa5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x63bf);
        EXPECT(gbc.pc(), 0xeaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa5), 0x59);
        // 59 00AC
        gbc.setState(0x4acb, 0xf62a, 0xb990, 0x9b4d, 0x7306, 0x3a50, 0x0, 0x1);
        gbc.writeMem(0x4acb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf62a);
        EXPECT(gbc.pc(), 0x4acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00AD
        gbc.setState(0xc7e3, 0x51a0, 0xc600, 0x943b, 0x50b6, 0x3f3d, 0x0, 0x1);
        gbc.writeMem(0xc7e3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x51a0);
        EXPECT(gbc.pc(), 0xc7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e3), 0x59);
        // 59 00AE
        gbc.setState(0x2ee6, 0x3c9f, 0x6720, 0xeaab, 0xf514, 0x459c, 0x0, 0x1);
        gbc.writeMem(0x2ee6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3c9f);
        EXPECT(gbc.pc(), 0x2ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00AF
        gbc.setState(0x3c3, 0xf600, 0x13c0, 0x2e47, 0x11f5, 0xce5e, 0x1, 0x0);
        gbc.writeMem(0x3c3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf600);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00B0
        gbc.setState(0x4da1, 0x2b92, 0xe120, 0x637a, 0x396a, 0xeda8, 0x0, 0x1);
        gbc.writeMem(0x4da1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2b92);
        EXPECT(gbc.pc(), 0x4da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00B1
        gbc.setState(0xecd1, 0x84a6, 0xb920, 0x113f, 0xe6, 0x220b, 0x1, 0x0);
        gbc.writeMem(0xecd1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x84a6);
        EXPECT(gbc.pc(), 0xecd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd1), 0x59);
        // 59 00B2
        gbc.setState(0x7da0, 0x100f, 0x8370, 0x4c35, 0x72, 0x9b5b, 0x1, 0x1);
        gbc.writeMem(0x7da0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x100f);
        EXPECT(gbc.pc(), 0x7da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00B3
        gbc.setState(0x9bc8, 0xb56c, 0xcb10, 0x5e06, 0xd47f, 0xb96c, 0x1, 0x0);
        gbc.writeMem(0x9bc8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb56c);
        EXPECT(gbc.pc(), 0x9bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc8), 0x59);
        // 59 00B4
        gbc.setState(0xd07, 0x4e79, 0x6100, 0x182b, 0x3e07, 0x3be1, 0x1, 0x0);
        gbc.writeMem(0xd07, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x4e79);
        EXPECT(gbc.pc(), 0xd08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00B5
        gbc.setState(0x1d41, 0xc22d, 0x1090, 0xf00b, 0x5d09, 0xd64f, 0x0, 0x1);
        gbc.writeMem(0x1d41, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc22d);
        EXPECT(gbc.pc(), 0x1d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00B6
        gbc.setState(0xd0d2, 0xddac, 0xda20, 0x4d5a, 0x6ca9, 0xfbbc, 0x1, 0x0);
        gbc.writeMem(0xd0d2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xddac);
        EXPECT(gbc.pc(), 0xd0d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d2), 0x59);
        // 59 00B7
        gbc.setState(0x2d96, 0x1c98, 0xd110, 0xb03f, 0x7849, 0xf849, 0x1, 0x0);
        gbc.writeMem(0x2d96, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1c98);
        EXPECT(gbc.pc(), 0x2d97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00B8
        gbc.setState(0xdd87, 0x3318, 0x850, 0x3d5b, 0xf823, 0x1427, 0x0, 0x0);
        gbc.writeMem(0xdd87, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3318);
        EXPECT(gbc.pc(), 0xdd88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd87), 0x59);
        // 59 00B9
        gbc.setState(0x8030, 0x2637, 0x15d0, 0xbaff, 0x5034, 0x9fc5, 0x1, 0x0);
        gbc.writeMem(0x8030, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2637);
        EXPECT(gbc.pc(), 0x8031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8030), 0x59);
        // 59 00BA
        gbc.setState(0x2fe2, 0xb688, 0xb690, 0x10aa, 0xb68, 0x588f, 0x1, 0x0);
        gbc.writeMem(0x2fe2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb688);
        EXPECT(gbc.pc(), 0x2fe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00BB
        gbc.setState(0x8544, 0x3171, 0x35c0, 0xd824, 0x719d, 0x8b05, 0x0, 0x0);
        gbc.writeMem(0x8544, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3171);
        EXPECT(gbc.pc(), 0x8545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8544), 0x59);
        // 59 00BC
        gbc.setState(0x7e0f, 0xbb09, 0x4bf0, 0xa57c, 0xff11, 0xc5ba, 0x1, 0x0);
        gbc.writeMem(0x7e0f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbb09);
        EXPECT(gbc.pc(), 0x7e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00BD
        gbc.setState(0x1abd, 0x6558, 0xed60, 0x4fd8, 0xee85, 0x7d8d, 0x1, 0x0);
        gbc.writeMem(0x1abd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6558);
        EXPECT(gbc.pc(), 0x1abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00BE
        gbc.setState(0xc47a, 0xa290, 0x9b10, 0x9084, 0x4d8a, 0x7adb, 0x1, 0x1);
        gbc.writeMem(0xc47a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa290);
        EXPECT(gbc.pc(), 0xc47b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47a), 0x59);
        // 59 00BF
        gbc.setState(0x5e5c, 0x45d2, 0x7190, 0xfbe3, 0x1feb, 0x91f, 0x0, 0x0);
        gbc.writeMem(0x5e5c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x45d2);
        EXPECT(gbc.pc(), 0x5e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00C0
        gbc.setState(0xd635, 0x3445, 0xe050, 0x8357, 0xd2e9, 0xf481, 0x0, 0x0);
        gbc.writeMem(0xd635, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3445);
        EXPECT(gbc.pc(), 0xd636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd635), 0x59);
        // 59 00C1
        gbc.setState(0xad28, 0x2aef, 0x8d60, 0x98c2, 0xd430, 0x1b65, 0x1, 0x1);
        gbc.writeMem(0xad28, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2aef);
        EXPECT(gbc.pc(), 0xad29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad28), 0x59);
        // 59 00C2
        gbc.setState(0xc2e2, 0xc5e1, 0xa110, 0x4133, 0xf651, 0x1b57, 0x0, 0x0);
        gbc.writeMem(0xc2e2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc5e1);
        EXPECT(gbc.pc(), 0xc2e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e2), 0x59);
        // 59 00C3
        gbc.setState(0x6372, 0xa639, 0xfa10, 0x2a16, 0x56b9, 0xac78, 0x1, 0x0);
        gbc.writeMem(0x6372, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa639);
        EXPECT(gbc.pc(), 0x6373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00C4
        gbc.setState(0xbc69, 0x688, 0x9470, 0xf41a, 0xa063, 0x619e, 0x1, 0x0);
        gbc.writeMem(0xbc69, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x688);
        EXPECT(gbc.pc(), 0xbc6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc69), 0x59);
        // 59 00C5
        gbc.setState(0xbd2e, 0xa94c, 0x3760, 0xfbbf, 0x43f1, 0x188d, 0x1, 0x1);
        gbc.writeMem(0xbd2e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa94c);
        EXPECT(gbc.pc(), 0xbd2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2e), 0x59);
        // 59 00C6
        gbc.setState(0x9e59, 0x53e6, 0xde20, 0x4e2f, 0xb64a, 0xc223, 0x1, 0x1);
        gbc.writeMem(0x9e59, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x53e6);
        EXPECT(gbc.pc(), 0x9e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e59), 0x59);
        // 59 00C7
        gbc.setState(0x2528, 0x8fd5, 0xc540, 0x9420, 0xc286, 0xcad5, 0x0, 0x0);
        gbc.writeMem(0x2528, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8fd5);
        EXPECT(gbc.pc(), 0x2529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00C8
        gbc.setState(0x9f5c, 0xacbf, 0x5580, 0xed30, 0xf0e9, 0xae58, 0x0, 0x1);
        gbc.writeMem(0x9f5c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xacbf);
        EXPECT(gbc.pc(), 0x9f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5c), 0x59);
        // 59 00C9
        gbc.setState(0x3dd0, 0x14f1, 0x8c70, 0xafc1, 0xd398, 0x247c, 0x1, 0x1);
        gbc.writeMem(0x3dd0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x14f1);
        EXPECT(gbc.pc(), 0x3dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00CA
        gbc.setState(0x85a2, 0x7a86, 0xf1e0, 0x1224, 0x6d3f, 0x6e0d, 0x1, 0x1);
        gbc.writeMem(0x85a2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7a86);
        EXPECT(gbc.pc(), 0x85a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a2), 0x59);
        // 59 00CC
        gbc.setState(0xbd68, 0xe5d, 0xb270, 0x49b3, 0x11fc, 0x33ab, 0x1, 0x1);
        gbc.writeMem(0xbd68, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe5d);
        EXPECT(gbc.pc(), 0xbd69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd68), 0x59);
        // 59 00CD
        gbc.setState(0xab70, 0xb7e, 0x8c00, 0x73b1, 0x747a, 0xbcab, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb7e);
        EXPECT(gbc.pc(), 0xab71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab70), 0x59);
        // 59 00CE
        gbc.setState(0xec4c, 0x4519, 0x7d30, 0x87f4, 0xcc7f, 0x9f0c, 0x0, 0x1);
        gbc.writeMem(0xec4c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4519);
        EXPECT(gbc.pc(), 0xec4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4c), 0x59);
        // 59 00CF
        gbc.setState(0xa710, 0xc463, 0x4ff0, 0x51be, 0xa780, 0x53dc, 0x1, 0x1);
        gbc.writeMem(0xa710, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc463);
        EXPECT(gbc.pc(), 0xa711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa710), 0x59);
        // 59 00D0
        gbc.setState(0x6150, 0x1bc6, 0xa860, 0xbe04, 0x622c, 0xdb3d, 0x0, 0x0);
        gbc.writeMem(0x6150, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1bc6);
        EXPECT(gbc.pc(), 0x6151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00D1
        gbc.setState(0xd547, 0x1878, 0xb3d0, 0x991e, 0xce2c, 0xaa7f, 0x0, 0x1);
        gbc.writeMem(0xd547, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1878);
        EXPECT(gbc.pc(), 0xd548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd547), 0x59);
        // 59 00D2
        gbc.setState(0x1949, 0x62e3, 0x8180, 0xdae5, 0x1150, 0xf35, 0x1, 0x1);
        gbc.writeMem(0x1949, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x62e3);
        EXPECT(gbc.pc(), 0x194a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00D3
        gbc.setState(0x27e0, 0xe437, 0x4cf0, 0xc527, 0x9cd2, 0xc26, 0x0, 0x0);
        gbc.writeMem(0x27e0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe437);
        EXPECT(gbc.pc(), 0x27e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00D4
        gbc.setState(0x4d4e, 0x7010, 0x34c0, 0x42c, 0x29e4, 0x5e66, 0x0, 0x1);
        gbc.writeMem(0x4d4e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0x4d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00D6
        gbc.setState(0xed50, 0x5396, 0x4240, 0x3619, 0x2b4e, 0xc236, 0x1, 0x0);
        gbc.writeMem(0xed50, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5396);
        EXPECT(gbc.pc(), 0xed51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed50), 0x59);
        // 59 00D7
        gbc.setState(0x60f1, 0x9104, 0xd160, 0x9139, 0x8834, 0x768a, 0x1, 0x0);
        gbc.writeMem(0x60f1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9104);
        EXPECT(gbc.pc(), 0x60f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00D8
        gbc.setState(0x487a, 0x88e4, 0x5c80, 0xbf29, 0xd50, 0xa80b, 0x1, 0x1);
        gbc.writeMem(0x487a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x88e4);
        EXPECT(gbc.pc(), 0x487b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00D9
        gbc.setState(0xa01d, 0xc563, 0xcea0, 0xc8f5, 0x38ea, 0x30ff, 0x0, 0x0);
        gbc.writeMem(0xa01d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc563);
        EXPECT(gbc.pc(), 0xa01e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa01d), 0x59);
        // 59 00DB
        gbc.setState(0xb7ef, 0xddf0, 0x6630, 0x4625, 0xc669, 0x3887, 0x1, 0x0);
        gbc.writeMem(0xb7ef, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xddf0);
        EXPECT(gbc.pc(), 0xb7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ef), 0x59);
        // 59 00DC
        gbc.setState(0x9f0c, 0xa78, 0x2b40, 0x9a95, 0x657c, 0x89a1, 0x0, 0x0);
        gbc.writeMem(0x9f0c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa78);
        EXPECT(gbc.pc(), 0x9f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0c), 0x59);
        // 59 00DD
        gbc.setState(0x4f44, 0x3f76, 0x1c80, 0xe8a2, 0x7913, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0x4f44, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3f76);
        EXPECT(gbc.pc(), 0x4f45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00DE
        gbc.setState(0x89d0, 0x3bf1, 0x620, 0x2301, 0xb7ff, 0xeb2a, 0x0, 0x1);
        gbc.writeMem(0x89d0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3bf1);
        EXPECT(gbc.pc(), 0x89d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d0), 0x59);
        // 59 00DF
        gbc.setState(0xa0d2, 0x9b40, 0x6e40, 0xcf85, 0x9b35, 0x2274, 0x0, 0x1);
        gbc.writeMem(0xa0d2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9b40);
        EXPECT(gbc.pc(), 0xa0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d2), 0x59);
        // 59 00E0
        gbc.setState(0x45e1, 0xf2de, 0xb530, 0x9bbe, 0x66ea, 0xefc, 0x0, 0x1);
        gbc.writeMem(0x45e1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf2de);
        EXPECT(gbc.pc(), 0x45e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00E1
        gbc.setState(0xe759, 0xf485, 0xaf40, 0x23cc, 0xa246, 0xc0f5, 0x0, 0x1);
        gbc.writeMem(0xe759, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf485);
        EXPECT(gbc.pc(), 0xe75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe759), 0x59);
        // 59 00E2
        gbc.setState(0xa0d8, 0x1295, 0x9e0, 0x24, 0xb724, 0x157f, 0x1, 0x0);
        gbc.writeMem(0xa0d8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1295);
        EXPECT(gbc.pc(), 0xa0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d8), 0x59);
        // 59 00E3
        gbc.setState(0x36df, 0x2850, 0x3810, 0xb32, 0x7b5e, 0x489, 0x0, 0x1);
        gbc.writeMem(0x36df, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x36e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00E4
        gbc.setState(0x6cd5, 0xd47c, 0x4ad0, 0x10e3, 0x502f, 0x209b, 0x0, 0x1);
        gbc.writeMem(0x6cd5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd47c);
        EXPECT(gbc.pc(), 0x6cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00E5
        gbc.setState(0xce49, 0x6762, 0x5c90, 0x4f58, 0x600, 0x117e, 0x1, 0x1);
        gbc.writeMem(0xce49, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6762);
        EXPECT(gbc.pc(), 0xce4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce49), 0x59);
        // 59 00E6
        gbc.setState(0x8fea, 0x9fef, 0x8fa0, 0xa258, 0x9321, 0xd826, 0x1, 0x1);
        gbc.writeMem(0x8fea, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9fef);
        EXPECT(gbc.pc(), 0x8feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fea), 0x59);
        // 59 00E7
        gbc.setState(0x839, 0xd731, 0x7860, 0x7601, 0x2fd7, 0x27c2, 0x1, 0x0);
        gbc.writeMem(0x839, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd731);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00E8
        gbc.setState(0xeb21, 0xff8c, 0x940, 0xf066, 0x345f, 0x355c, 0x0, 0x1);
        gbc.writeMem(0xeb21, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xff8c);
        EXPECT(gbc.pc(), 0xeb22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb21), 0x59);
        // 59 00E9
        gbc.setState(0x4cf3, 0xd663, 0x2e70, 0x9268, 0xfe7c, 0x91ac, 0x1, 0x0);
        gbc.writeMem(0x4cf3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd663);
        EXPECT(gbc.pc(), 0x4cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00EA
        gbc.setState(0x3848, 0x5aac, 0x1620, 0xba78, 0x65a0, 0x2ec4, 0x0, 0x0);
        gbc.writeMem(0x3848, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5aac);
        EXPECT(gbc.pc(), 0x3849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00EB
        gbc.setState(0x981c, 0x5bf8, 0xc710, 0x5cf7, 0x2997, 0x22d8, 0x0, 0x0);
        gbc.writeMem(0x981c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5bf8);
        EXPECT(gbc.pc(), 0x981d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981c), 0x59);
        // 59 00EC
        gbc.setState(0x465f, 0xe9d4, 0x6270, 0xfebf, 0x649, 0xde8d, 0x1, 0x1);
        gbc.writeMem(0x465f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe9d4);
        EXPECT(gbc.pc(), 0x4660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00ED
        gbc.setState(0x9fbd, 0x3402, 0xcf10, 0xc395, 0xc0a2, 0x33f4, 0x1, 0x0);
        gbc.writeMem(0x9fbd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3402);
        EXPECT(gbc.pc(), 0x9fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbd), 0x59);
        // 59 00EE
        gbc.setState(0x4963, 0x221e, 0x1d30, 0x22f, 0x8f4e, 0xa78e, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x221e);
        EXPECT(gbc.pc(), 0x4964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00EF
        gbc.setState(0xd2c4, 0xe64a, 0xf3f0, 0xb3e4, 0x2239, 0x37ea, 0x0, 0x1);
        gbc.writeMem(0xd2c4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe64a);
        EXPECT(gbc.pc(), 0xd2c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c4), 0x59);
        // 59 00F0
        gbc.setState(0x3473, 0xe3fd, 0xf140, 0xd285, 0xa8c9, 0x4ca6, 0x1, 0x0);
        gbc.writeMem(0x3473, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe3fd);
        EXPECT(gbc.pc(), 0x3474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 00F1
        gbc.setState(0x53c5, 0x3ce9, 0x2860, 0x2883, 0xe857, 0xbb06, 0x0, 0x1);
        gbc.writeMem(0x53c5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3ce9);
        EXPECT(gbc.pc(), 0x53c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00F2
        gbc.setState(0x8ceb, 0xcd5c, 0xcd00, 0x8f36, 0x37ae, 0x8436, 0x0, 0x0);
        gbc.writeMem(0x8ceb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xcd5c);
        EXPECT(gbc.pc(), 0x8cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ceb), 0x59);
        // 59 00F3
        gbc.setState(0x27b2, 0x3945, 0xf170, 0xb0b7, 0xc7fc, 0xcb2, 0x1, 0x1);
        gbc.writeMem(0x27b2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3945);
        EXPECT(gbc.pc(), 0x27b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00F4
        gbc.setState(0x67e9, 0xcf0, 0x390, 0x88c1, 0x1b48, 0xbaa2, 0x1, 0x1);
        gbc.writeMem(0x67e9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xcf0);
        EXPECT(gbc.pc(), 0x67ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00F5
        gbc.setState(0x9694, 0x9009, 0x4cd0, 0x1b89, 0x3521, 0x7721, 0x1, 0x0);
        gbc.writeMem(0x9694, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9009);
        EXPECT(gbc.pc(), 0x9695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9694), 0x59);
        // 59 00F6
        gbc.setState(0x620d, 0xa053, 0x67e0, 0x8e74, 0xe55c, 0xb543, 0x0, 0x0);
        gbc.writeMem(0x620d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa053);
        EXPECT(gbc.pc(), 0x620e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00F8
        gbc.setState(0xab1c, 0x2e1f, 0x1a50, 0xa745, 0x4449, 0xa18b, 0x1, 0x0);
        gbc.writeMem(0xab1c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2e1f);
        EXPECT(gbc.pc(), 0xab1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1c), 0x59);
        // 59 00F9
        gbc.setState(0x4f82, 0x62b9, 0xf460, 0x1f29, 0xefd7, 0x5778, 0x0, 0x1);
        gbc.writeMem(0x4f82, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x62b9);
        EXPECT(gbc.pc(), 0x4f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00FA
        gbc.setState(0xae74, 0x2ea9, 0x450, 0xba54, 0xd9a0, 0xdd1d, 0x0, 0x1);
        gbc.writeMem(0xae74, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2ea9);
        EXPECT(gbc.pc(), 0xae75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae74), 0x59);
        // 59 00FB
        gbc.setState(0x32e1, 0xe402, 0x2c60, 0x3470, 0x4f9d, 0x3e97, 0x1, 0x0);
        gbc.writeMem(0x32e1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe402);
        EXPECT(gbc.pc(), 0x32e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 00FC
        gbc.setState(0x1185, 0xc8e0, 0x36f0, 0x5f3f, 0xdc8c, 0x5548, 0x0, 0x1);
        gbc.writeMem(0x1185, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc8e0);
        EXPECT(gbc.pc(), 0x1186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 00FD
        gbc.setState(0x641b, 0x7f28, 0x5490, 0x6f81, 0x6a5c, 0xe02e, 0x1, 0x0);
        gbc.writeMem(0x641b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7f28);
        EXPECT(gbc.pc(), 0x641c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 00FE
        gbc.setState(0xdbab, 0x6c07, 0xe9b0, 0x20a6, 0xea1c, 0x4b67, 0x1, 0x1);
        gbc.writeMem(0xdbab, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6c07);
        EXPECT(gbc.pc(), 0xdbac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbab), 0x59);
        // 59 00FF
        gbc.setState(0xa5c2, 0xa139, 0x9080, 0xcb0c, 0x4654, 0x4864, 0x1, 0x1);
        gbc.writeMem(0xa5c2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xa139);
        EXPECT(gbc.pc(), 0xa5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c2), 0x59);
        // 59 0100
        gbc.setState(0xec99, 0x9f99, 0x9fd0, 0x2ec9, 0x4093, 0xdd93, 0x0, 0x1);
        gbc.writeMem(0xec99, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9f99);
        EXPECT(gbc.pc(), 0xec9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec99), 0x59);
        // 59 0101
        gbc.setState(0xbb2d, 0x7765, 0x3090, 0xd01, 0x9584, 0x4da5, 0x1, 0x0);
        gbc.writeMem(0xbb2d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7765);
        EXPECT(gbc.pc(), 0xbb2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb2d), 0x59);
        // 59 0102
        gbc.setState(0xebc4, 0x2495, 0xbb30, 0x6f69, 0xa830, 0xee5a, 0x0, 0x1);
        gbc.writeMem(0xebc4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2495);
        EXPECT(gbc.pc(), 0xebc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc4), 0x59);
        // 59 0104
        gbc.setState(0xd00f, 0xd907, 0x1570, 0x3241, 0x80f2, 0xe11a, 0x0, 0x1);
        gbc.writeMem(0xd00f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd907);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00f), 0x59);
        // 59 0105
        gbc.setState(0x1198, 0x71b7, 0xf930, 0xafe6, 0x3ee1, 0x5e51, 0x0, 0x1);
        gbc.writeMem(0x1198, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x71b7);
        EXPECT(gbc.pc(), 0x1199);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0106
        gbc.setState(0x7493, 0x908e, 0x2a50, 0x514c, 0xeef6, 0xa41a, 0x1, 0x1);
        gbc.writeMem(0x7493, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x908e);
        EXPECT(gbc.pc(), 0x7494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0107
        gbc.setState(0x836f, 0xbc8e, 0xe0f0, 0x40df, 0xe733, 0xb715, 0x1, 0x1);
        gbc.writeMem(0x836f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbc8e);
        EXPECT(gbc.pc(), 0x8370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x836f), 0x59);
        // 59 0108
        gbc.setState(0x75f0, 0x69c1, 0x15d0, 0x35ee, 0x1839, 0x5d97, 0x1, 0x1);
        gbc.writeMem(0x75f0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x69c1);
        EXPECT(gbc.pc(), 0x75f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0109
        gbc.setState(0xa914, 0xc0c9, 0xe5e0, 0xd87d, 0x4dc3, 0x7acd, 0x1, 0x0);
        gbc.writeMem(0xa914, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc0c9);
        EXPECT(gbc.pc(), 0xa915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa914), 0x59);
        // 59 010B
        gbc.setState(0x4c17, 0x9b6e, 0x2090, 0x7778, 0x67e5, 0x778d, 0x0, 0x1);
        gbc.writeMem(0x4c17, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9b6e);
        EXPECT(gbc.pc(), 0x4c18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 010C
        gbc.setState(0x8405, 0xfb6f, 0x7480, 0x2ce0, 0xd922, 0x4ed5, 0x0, 0x0);
        gbc.writeMem(0x8405, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xfb6f);
        EXPECT(gbc.pc(), 0x8406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8405), 0x59);
        // 59 010D
        gbc.setState(0x5e6d, 0x6bbd, 0x5340, 0x16f5, 0x69be, 0xc9f6, 0x1, 0x0);
        gbc.writeMem(0x5e6d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6bbd);
        EXPECT(gbc.pc(), 0x5e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 010E
        gbc.setState(0x1357, 0xdda8, 0xf690, 0xad4a, 0x5dfa, 0xa19d, 0x1, 0x0);
        gbc.writeMem(0x1357, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdda8);
        EXPECT(gbc.pc(), 0x1358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 010F
        gbc.setState(0xc9d1, 0xad83, 0x13a0, 0x2c5c, 0xd778, 0x8c76, 0x0, 0x0);
        gbc.writeMem(0xc9d1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xad83);
        EXPECT(gbc.pc(), 0xc9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d1), 0x59);
        // 59 0110
        gbc.setState(0x1bc2, 0x6f47, 0x2c20, 0xad4b, 0x68, 0x52a7, 0x0, 0x0);
        gbc.writeMem(0x1bc2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x6f47);
        EXPECT(gbc.pc(), 0x1bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0111
        gbc.setState(0xc4c3, 0xaedf, 0x6b10, 0x1b44, 0x1d31, 0xdfdb, 0x1, 0x1);
        gbc.writeMem(0xc4c3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xaedf);
        EXPECT(gbc.pc(), 0xc4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4c3), 0x59);
        // 59 0112
        gbc.setState(0xedee, 0x75f9, 0x37b0, 0x6778, 0xff26, 0x204c, 0x1, 0x0);
        gbc.writeMem(0xedee, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x75f9);
        EXPECT(gbc.pc(), 0xedef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedee), 0x59);
        // 59 0113
        gbc.setState(0xd235, 0x9996, 0xe700, 0x786f, 0xfdc9, 0x1673, 0x1, 0x0);
        gbc.writeMem(0xd235, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9996);
        EXPECT(gbc.pc(), 0xd236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd235), 0x59);
        // 59 0114
        gbc.setState(0x9bf0, 0x1a89, 0x62c0, 0x6c73, 0xdefa, 0x340c, 0x0, 0x1);
        gbc.writeMem(0x9bf0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1a89);
        EXPECT(gbc.pc(), 0x9bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf0), 0x59);
        // 59 0115
        gbc.setState(0xeaac, 0xa489, 0xe3c0, 0x99f1, 0xa0f0, 0x207d, 0x1, 0x1);
        gbc.writeMem(0xeaac, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa489);
        EXPECT(gbc.pc(), 0xeaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaac), 0x59);
        // 59 0116
        gbc.setState(0x8386, 0xcf6b, 0x5090, 0x23ca, 0x2c19, 0x324, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcf6b);
        EXPECT(gbc.pc(), 0x8387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8386), 0x59);
        // 59 0117
        gbc.setState(0x85ae, 0x786f, 0x53a0, 0x39e2, 0x63d2, 0x306e, 0x1, 0x1);
        gbc.writeMem(0x85ae, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x786f);
        EXPECT(gbc.pc(), 0x85af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85ae), 0x59);
        // 59 0119
        gbc.setState(0x9931, 0x13de, 0x7590, 0x8f88, 0x11d2, 0xba41, 0x0, 0x1);
        gbc.writeMem(0x9931, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x13de);
        EXPECT(gbc.pc(), 0x9932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9931), 0x59);
        // 59 011A
        gbc.setState(0xe895, 0xcfab, 0xafc0, 0xaee5, 0x57b9, 0x7df5, 0x0, 0x1);
        gbc.writeMem(0xe895, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcfab);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe895), 0x59);
        // 59 011B
        gbc.setState(0x469b, 0x8e44, 0xc170, 0x6077, 0x730d, 0xb626, 0x0, 0x1);
        gbc.writeMem(0x469b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x8e44);
        EXPECT(gbc.pc(), 0x469c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 011C
        gbc.setState(0x8d5b, 0xdb31, 0x69e0, 0x4b, 0xc5d1, 0x5867, 0x1, 0x1);
        gbc.writeMem(0x8d5b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdb31);
        EXPECT(gbc.pc(), 0x8d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5b), 0x59);
        // 59 011D
        gbc.setState(0x392e, 0x3bc7, 0xa750, 0x50b, 0xb812, 0x9730, 0x1, 0x1);
        gbc.writeMem(0x392e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3bc7);
        EXPECT(gbc.pc(), 0x392f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 011E
        gbc.setState(0xb1e5, 0xe6cb, 0xdaf0, 0x5d2e, 0x3622, 0x8c74, 0x0, 0x0);
        gbc.writeMem(0xb1e5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe6cb);
        EXPECT(gbc.pc(), 0xb1e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e5), 0x59);
        // 59 011F
        gbc.setState(0x2d51, 0xadc7, 0x9dc0, 0x4669, 0xd57a, 0x9a43, 0x1, 0x0);
        gbc.writeMem(0x2d51, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xadc7);
        EXPECT(gbc.pc(), 0x2d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0120
        gbc.setState(0x57f2, 0xba8b, 0xdc70, 0xde97, 0x74c6, 0x1f17, 0x1, 0x0);
        gbc.writeMem(0x57f2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xba8b);
        EXPECT(gbc.pc(), 0x57f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0121
        gbc.setState(0x4c15, 0x2899, 0xb940, 0x8aae, 0x2373, 0xd0b7, 0x0, 0x1);
        gbc.writeMem(0x4c15, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2899);
        EXPECT(gbc.pc(), 0x4c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0122
        gbc.setState(0x3999, 0x8588, 0x2c60, 0x9621, 0x67af, 0x162f, 0x0, 0x1);
        gbc.writeMem(0x3999, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8588);
        EXPECT(gbc.pc(), 0x399a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0123
        gbc.setState(0x8003, 0x22ba, 0xfc00, 0x292b, 0xf223, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0x8003, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x22ba);
        EXPECT(gbc.pc(), 0x8004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8003), 0x59);
        // 59 0124
        gbc.setState(0xec4a, 0x66ca, 0xfa10, 0x6a44, 0x36eb, 0xd663, 0x0, 0x1);
        gbc.writeMem(0xec4a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x66ca);
        EXPECT(gbc.pc(), 0xec4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec4a), 0x59);
        // 59 0125
        gbc.setState(0xbb81, 0xa142, 0xc4c0, 0x5d2d, 0x8c71, 0x3a9a, 0x1, 0x1);
        gbc.writeMem(0xbb81, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa142);
        EXPECT(gbc.pc(), 0xbb82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb81), 0x59);
        // 59 0126
        gbc.setState(0x46f4, 0x7728, 0xf290, 0x2be3, 0xa5b1, 0xfddf, 0x0, 0x1);
        gbc.writeMem(0x46f4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7728);
        EXPECT(gbc.pc(), 0x46f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0127
        gbc.setState(0xbf24, 0xde20, 0xa3e0, 0x1ad7, 0xd236, 0x4d0b, 0x0, 0x0);
        gbc.writeMem(0xbf24, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xde20);
        EXPECT(gbc.pc(), 0xbf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf24), 0x59);
        // 59 0128
        gbc.setState(0xc66d, 0x7a7f, 0xc0, 0x9a85, 0x6a24, 0xd387, 0x1, 0x0);
        gbc.writeMem(0xc66d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7a7f);
        EXPECT(gbc.pc(), 0xc66e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66d), 0x59);
        // 59 0129
        gbc.setState(0xd3f4, 0x5682, 0x5650, 0xdc72, 0x669, 0x891c, 0x0, 0x1);
        gbc.writeMem(0xd3f4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5682);
        EXPECT(gbc.pc(), 0xd3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f4), 0x59);
        // 59 012A
        gbc.setState(0x21a4, 0xbcc1, 0x3180, 0x9be, 0x875c, 0x6b63, 0x0, 0x0);
        gbc.writeMem(0x21a4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbcc1);
        EXPECT(gbc.pc(), 0x21a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 012B
        gbc.setState(0x25fb, 0xc0db, 0x4170, 0xa9d6, 0xf964, 0xb7fb, 0x1, 0x0);
        gbc.writeMem(0x25fb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc0db);
        EXPECT(gbc.pc(), 0x25fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 012C
        gbc.setState(0x79ab, 0x4066, 0x6370, 0xd0ba, 0x1805, 0xfa17, 0x1, 0x0);
        gbc.writeMem(0x79ab, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4066);
        EXPECT(gbc.pc(), 0x79ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 012E
        gbc.setState(0xa750, 0xb70b, 0xda20, 0x9e6a, 0x3d0e, 0xaeb4, 0x0, 0x1);
        gbc.writeMem(0xa750, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xb70b);
        EXPECT(gbc.pc(), 0xa751);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa750), 0x59);
        // 59 012F
        gbc.setState(0xd471, 0xabf2, 0x6d80, 0xbdea, 0x8d32, 0x7ac8, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xabf2);
        EXPECT(gbc.pc(), 0xd472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd471), 0x59);
        // 59 0130
        gbc.setState(0xaf91, 0x77a2, 0x3900, 0x292d, 0x4445, 0xc15f, 0x1, 0x0);
        gbc.writeMem(0xaf91, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0xaf92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf91), 0x59);
        // 59 0131
        gbc.setState(0x7b50, 0x8151, 0x1bc0, 0xfbfc, 0x6274, 0xd538, 0x0, 0x0);
        gbc.writeMem(0x7b50, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8151);
        EXPECT(gbc.pc(), 0x7b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0132
        gbc.setState(0xb19f, 0xfe33, 0xac50, 0xd528, 0x816d, 0x1b06, 0x1, 0x0);
        gbc.writeMem(0xb19f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfe33);
        EXPECT(gbc.pc(), 0xb1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19f), 0x59);
        // 59 0133
        gbc.setState(0x5ce9, 0x35a4, 0x1180, 0x1174, 0x763d, 0x48cf, 0x0, 0x1);
        gbc.writeMem(0x5ce9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x35a4);
        EXPECT(gbc.pc(), 0x5cea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0134
        gbc.setState(0xc95b, 0xb17e, 0x1740, 0xb531, 0xcc0c, 0x4795, 0x1, 0x0);
        gbc.writeMem(0xc95b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb17e);
        EXPECT(gbc.pc(), 0xc95c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95b), 0x59);
        // 59 0135
        gbc.setState(0x967c, 0x5cca, 0x6a60, 0x9d00, 0x43e2, 0x3abf, 0x0, 0x1);
        gbc.writeMem(0x967c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5cca);
        EXPECT(gbc.pc(), 0x967d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967c), 0x59);
        // 59 0136
        gbc.setState(0x5fa4, 0x4b06, 0x17c0, 0x245, 0x838f, 0x5de8, 0x0, 0x0);
        gbc.writeMem(0x5fa4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0x5fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0137
        gbc.setState(0x3521, 0x4080, 0xee0, 0x1611, 0xf155, 0x847, 0x0, 0x0);
        gbc.writeMem(0x3521, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4080);
        EXPECT(gbc.pc(), 0x3522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0138
        gbc.setState(0xdc74, 0xefd8, 0xf510, 0xb298, 0x993f, 0xfe97, 0x1, 0x1);
        gbc.writeMem(0xdc74, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0xdc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc74), 0x59);
        // 59 0139
        gbc.setState(0xebcf, 0xd55e, 0x1ec0, 0xbfe5, 0xaa0f, 0x17f3, 0x0, 0x1);
        gbc.writeMem(0xebcf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd55e);
        EXPECT(gbc.pc(), 0xebd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebcf), 0x59);
        // 59 013A
        gbc.setState(0xad75, 0xaf58, 0x8410, 0x8151, 0x2b3a, 0x8352, 0x0, 0x0);
        gbc.writeMem(0xad75, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xaf58);
        EXPECT(gbc.pc(), 0xad76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad75), 0x59);
        // 59 013B
        gbc.setState(0x9564, 0xac21, 0x2b0, 0x79ec, 0xfc6, 0xfd3d, 0x0, 0x0);
        gbc.writeMem(0x9564, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xac21);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9564), 0x59);
        // 59 013C
        gbc.setState(0x98f6, 0x9281, 0x5ce0, 0x5e57, 0x4432, 0x971e, 0x1, 0x1);
        gbc.writeMem(0x98f6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x9281);
        EXPECT(gbc.pc(), 0x98f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f6), 0x59);
        // 59 013D
        gbc.setState(0x4e53, 0xe594, 0x70, 0x5b88, 0x1bb9, 0x8b33, 0x1, 0x0);
        gbc.writeMem(0x4e53, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe594);
        EXPECT(gbc.pc(), 0x4e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 013E
        gbc.setState(0xac12, 0x2828, 0xcd00, 0x2104, 0x66a2, 0x4829, 0x1, 0x1);
        gbc.writeMem(0xac12, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2828);
        EXPECT(gbc.pc(), 0xac13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac12), 0x59);
        // 59 013F
        gbc.setState(0x8346, 0xc51c, 0x4670, 0xf3a9, 0x728b, 0xc739, 0x1, 0x1);
        gbc.writeMem(0x8346, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc51c);
        EXPECT(gbc.pc(), 0x8347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8346), 0x59);
        // 59 0140
        gbc.setState(0x8337, 0x8582, 0x8aa0, 0x44f2, 0xf1e1, 0x8d1, 0x1, 0x0);
        gbc.writeMem(0x8337, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8582);
        EXPECT(gbc.pc(), 0x8338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8337), 0x59);
        // 59 0141
        gbc.setState(0x4fa7, 0x2a60, 0x5e50, 0x76fc, 0x717f, 0xa35c, 0x0, 0x1);
        gbc.writeMem(0x4fa7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2a60);
        EXPECT(gbc.pc(), 0x4fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0142
        gbc.setState(0x847e, 0x1bde, 0xa7a0, 0x5594, 0xd01e, 0x79a3, 0x0, 0x1);
        gbc.writeMem(0x847e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1bde);
        EXPECT(gbc.pc(), 0x847f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x847e), 0x59);
        // 59 0143
        gbc.setState(0x2995, 0xf644, 0x26f0, 0x9619, 0x663e, 0x2e18, 0x0, 0x1);
        gbc.writeMem(0x2995, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf644);
        EXPECT(gbc.pc(), 0x2996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0144
        gbc.setState(0xb23a, 0x49c8, 0x7b60, 0xaa22, 0x55d4, 0x1d19, 0x1, 0x0);
        gbc.writeMem(0xb23a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x49c8);
        EXPECT(gbc.pc(), 0xb23b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23a), 0x59);
        // 59 0145
        gbc.setState(0xadc7, 0x189f, 0x71a0, 0x8c07, 0x7597, 0x248a, 0x1, 0x0);
        gbc.writeMem(0xadc7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x189f);
        EXPECT(gbc.pc(), 0xadc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadc7), 0x59);
        // 59 0146
        gbc.setState(0x7121, 0xe0a2, 0x7c50, 0xc621, 0xe9cb, 0xcf03, 0x1, 0x0);
        gbc.writeMem(0x7121, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe0a2);
        EXPECT(gbc.pc(), 0x7122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0147
        gbc.setState(0x824b, 0x714d, 0xaa20, 0x3d48, 0x97de, 0xa04a, 0x1, 0x0);
        gbc.writeMem(0x824b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0x824c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x824b), 0x59);
        // 59 0148
        gbc.setState(0xd438, 0xbc9e, 0xfa00, 0xf1fa, 0x65fd, 0x77e9, 0x0, 0x1);
        gbc.writeMem(0xd438, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xbc9e);
        EXPECT(gbc.pc(), 0xd439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd438), 0x59);
        // 59 0149
        gbc.setState(0xae18, 0x81f0, 0x6360, 0x618c, 0x92c8, 0x52ae, 0x0, 0x0);
        gbc.writeMem(0xae18, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x81f0);
        EXPECT(gbc.pc(), 0xae19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae18), 0x59);
        // 59 014A
        gbc.setState(0x37ca, 0x765, 0x7700, 0x6715, 0x1801, 0xa41, 0x0, 0x0);
        gbc.writeMem(0x37ca, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x765);
        EXPECT(gbc.pc(), 0x37cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 014B
        gbc.setState(0x3478, 0x8463, 0x44d0, 0x607d, 0x8cb1, 0x1097, 0x1, 0x0);
        gbc.writeMem(0x3478, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8463);
        EXPECT(gbc.pc(), 0x3479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 014C
        gbc.setState(0xd03, 0xa4d, 0x2180, 0xdb39, 0xc966, 0xd816, 0x0, 0x1);
        gbc.writeMem(0xd03, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa4d);
        EXPECT(gbc.pc(), 0xd04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 014D
        gbc.setState(0x96a2, 0x600c, 0xdc00, 0x5863, 0x6b6d, 0x1b2a, 0x1, 0x0);
        gbc.writeMem(0x96a2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x96a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a2), 0x59);
        // 59 014E
        gbc.setState(0x7545, 0x49ad, 0x8e40, 0x862f, 0x82fb, 0x3dda, 0x0, 0x0);
        gbc.writeMem(0x7545, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x49ad);
        EXPECT(gbc.pc(), 0x7546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 014F
        gbc.setState(0xbbe3, 0x3b07, 0xeef0, 0x55e6, 0x6c62, 0x805f, 0x1, 0x1);
        gbc.writeMem(0xbbe3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3b07);
        EXPECT(gbc.pc(), 0xbbe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe3), 0x59);
        // 59 0150
        gbc.setState(0x8dc8, 0x3dbe, 0x4330, 0x7cb3, 0x603f, 0x9780, 0x1, 0x0);
        gbc.writeMem(0x8dc8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3dbe);
        EXPECT(gbc.pc(), 0x8dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc8), 0x59);
        // 59 0151
        gbc.setState(0x6d6a, 0x1d35, 0xd7d0, 0xd1a5, 0xe91d, 0x3621, 0x0, 0x0);
        gbc.writeMem(0x6d6a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1d35);
        EXPECT(gbc.pc(), 0x6d6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0152
        gbc.setState(0x7aa1, 0xbbeb, 0xe8b0, 0x5d78, 0xc98f, 0xc571, 0x1, 0x1);
        gbc.writeMem(0x7aa1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbbeb);
        EXPECT(gbc.pc(), 0x7aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0153
        gbc.setState(0xbe6e, 0x82ee, 0x9220, 0xd0f7, 0xac42, 0xe052, 0x1, 0x0);
        gbc.writeMem(0xbe6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x82ee);
        EXPECT(gbc.pc(), 0xbe6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6e), 0x59);
        // 59 0154
        gbc.setState(0xeb52, 0xb526, 0x2450, 0x6609, 0xc856, 0x493b, 0x1, 0x0);
        gbc.writeMem(0xeb52, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb526);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb52), 0x59);
        // 59 0155
        gbc.setState(0x56bd, 0xc076, 0xa7e0, 0xdac3, 0xcc0e, 0x82da, 0x1, 0x0);
        gbc.writeMem(0x56bd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc076);
        EXPECT(gbc.pc(), 0x56be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0156
        gbc.setState(0x4249, 0xb2a7, 0x8e60, 0x35c7, 0x57f8, 0x9311, 0x1, 0x1);
        gbc.writeMem(0x4249, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb2a7);
        EXPECT(gbc.pc(), 0x424a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0157
        gbc.setState(0xb710, 0xd7a3, 0x2fe0, 0x63ef, 0x217, 0x4413, 0x1, 0x1);
        gbc.writeMem(0xb710, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd7a3);
        EXPECT(gbc.pc(), 0xb711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb710), 0x59);
        // 59 0158
        gbc.setState(0x5c74, 0xdff6, 0xc90, 0xa39b, 0x17d0, 0x6eb5, 0x0, 0x1);
        gbc.writeMem(0x5c74, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdff6);
        EXPECT(gbc.pc(), 0x5c75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0159
        gbc.setState(0x918e, 0x4ebe, 0x6b10, 0xdc00, 0x6b6e, 0xdd67, 0x0, 0x1);
        gbc.writeMem(0x918e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4ebe);
        EXPECT(gbc.pc(), 0x918f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x918e), 0x59);
        // 59 015A
        gbc.setState(0x4f5b, 0xda1b, 0xe4e0, 0x5f32, 0xe7e8, 0x5dd1, 0x1, 0x1);
        gbc.writeMem(0x4f5b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xda1b);
        EXPECT(gbc.pc(), 0x4f5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 015B
        gbc.setState(0x91e6, 0x2e49, 0xbed0, 0x3eeb, 0x676b, 0x44cc, 0x0, 0x0);
        gbc.writeMem(0x91e6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2e49);
        EXPECT(gbc.pc(), 0x91e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91e6), 0x59);
        // 59 015C
        gbc.setState(0xd22, 0x9449, 0x9d0, 0xdc98, 0x8683, 0xf469, 0x0, 0x1);
        gbc.writeMem(0xd22, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9449);
        EXPECT(gbc.pc(), 0xd23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 015D
        gbc.setState(0x7fbc, 0x6c80, 0x4120, 0x4d25, 0x40e3, 0xc7f3, 0x0, 0x1);
        gbc.writeMem(0x7fbc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6c80);
        EXPECT(gbc.pc(), 0x7fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 015E
        gbc.setState(0xeefa, 0xa54c, 0x4360, 0x8fad, 0xf79e, 0x4177, 0x0, 0x1);
        gbc.writeMem(0xeefa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa54c);
        EXPECT(gbc.pc(), 0xeefb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeefa), 0x59);
        // 59 015F
        gbc.setState(0x3150, 0x1603, 0x520, 0x19d0, 0x8976, 0xd543, 0x1, 0x1);
        gbc.writeMem(0x3150, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1603);
        EXPECT(gbc.pc(), 0x3151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0160
        gbc.setState(0xcdfc, 0x1c8d, 0x1770, 0x3edf, 0x67b, 0x8864, 0x1, 0x1);
        gbc.writeMem(0xcdfc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0xcdfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfc), 0x59);
        // 59 0161
        gbc.setState(0x4382, 0x5c5e, 0xba30, 0x3cc0, 0xc46, 0x40ff, 0x1, 0x1);
        gbc.writeMem(0x4382, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5c5e);
        EXPECT(gbc.pc(), 0x4383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0162
        gbc.setState(0xcb2d, 0x9a71, 0x3c60, 0xe87b, 0xd1b8, 0x2b68, 0x0, 0x0);
        gbc.writeMem(0xcb2d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9a71);
        EXPECT(gbc.pc(), 0xcb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb2d), 0x59);
        // 59 0163
        gbc.setState(0x9f7d, 0x2782, 0xef20, 0x5395, 0xa74d, 0x45a2, 0x0, 0x0);
        gbc.writeMem(0x9f7d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2782);
        EXPECT(gbc.pc(), 0x9f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7d), 0x59);
        // 59 0164
        gbc.setState(0x35ab, 0x94ce, 0xf650, 0x184e, 0x2be8, 0xc1cb, 0x1, 0x1);
        gbc.writeMem(0x35ab, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x94ce);
        EXPECT(gbc.pc(), 0x35ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0166
        gbc.setState(0x8c94, 0xebad, 0xc600, 0xcd1e, 0x984d, 0xda3, 0x0, 0x0);
        gbc.writeMem(0x8c94, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xebad);
        EXPECT(gbc.pc(), 0x8c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c94), 0x59);
        // 59 0167
        gbc.setState(0x5f94, 0x4cf6, 0x24a0, 0x5981, 0x3442, 0x3b62, 0x1, 0x1);
        gbc.writeMem(0x5f94, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4cf6);
        EXPECT(gbc.pc(), 0x5f95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0168
        gbc.setState(0x9bec, 0x2431, 0x54e0, 0x8c64, 0x474c, 0x1250, 0x1, 0x0);
        gbc.writeMem(0x9bec, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2431);
        EXPECT(gbc.pc(), 0x9bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bec), 0x59);
        // 59 0169
        gbc.setState(0xc73, 0x3f0f, 0x5db0, 0xbad9, 0xa7a, 0xccc9, 0x0, 0x1);
        gbc.writeMem(0xc73, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3f0f);
        EXPECT(gbc.pc(), 0xc74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 016B
        gbc.setState(0x29b5, 0xd208, 0x2350, 0x3789, 0xd0d0, 0x173e, 0x0, 0x1);
        gbc.writeMem(0x29b5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd208);
        EXPECT(gbc.pc(), 0x29b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 016C
        gbc.setState(0x6b37, 0x7242, 0xbae0, 0x56f9, 0x813f, 0x82a, 0x1, 0x0);
        gbc.writeMem(0x6b37, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7242);
        EXPECT(gbc.pc(), 0x6b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 016D
        gbc.setState(0x8e54, 0xb6de, 0xc5a0, 0x4169, 0x2ceb, 0xf0f3, 0x1, 0x1);
        gbc.writeMem(0x8e54, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb6de);
        EXPECT(gbc.pc(), 0x8e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e54), 0x59);
        // 59 016E
        gbc.setState(0x3ea, 0xf81f, 0x3500, 0x19c1, 0x619e, 0x83f0, 0x1, 0x1);
        gbc.writeMem(0x3ea, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf81f);
        EXPECT(gbc.pc(), 0x3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 016F
        gbc.setState(0x72d1, 0xe701, 0x5990, 0xb6d4, 0xb4a8, 0x629f, 0x0, 0x0);
        gbc.writeMem(0x72d1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe701);
        EXPECT(gbc.pc(), 0x72d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0170
        gbc.setState(0xa3e3, 0x8218, 0x8400, 0xb3f7, 0xf50, 0x78e3, 0x1, 0x1);
        gbc.writeMem(0xa3e3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8218);
        EXPECT(gbc.pc(), 0xa3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e3), 0x59);
        // 59 0171
        gbc.setState(0x1d4e, 0x79b8, 0x990, 0xa92b, 0x886, 0xcfc7, 0x0, 0x0);
        gbc.writeMem(0x1d4e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x79b8);
        EXPECT(gbc.pc(), 0x1d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0172
        gbc.setState(0x9379, 0x7e59, 0xb0, 0x5492, 0x3925, 0x2ba2, 0x1, 0x0);
        gbc.writeMem(0x9379, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7e59);
        EXPECT(gbc.pc(), 0x937a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9379), 0x59);
        // 59 0173
        gbc.setState(0x455a, 0xe36e, 0x4f90, 0xcd3a, 0x1800, 0xe525, 0x0, 0x0);
        gbc.writeMem(0x455a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe36e);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0174
        gbc.setState(0xed1d, 0x9dd8, 0x76d0, 0xe75d, 0xe1c1, 0x81da, 0x0, 0x0);
        gbc.writeMem(0xed1d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9dd8);
        EXPECT(gbc.pc(), 0xed1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1d), 0x59);
        // 59 0175
        gbc.setState(0x8927, 0x15b6, 0xbe0, 0xbd79, 0x75d8, 0x6151, 0x0, 0x1);
        gbc.writeMem(0x8927, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x15b6);
        EXPECT(gbc.pc(), 0x8928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8927), 0x59);
        // 59 0176
        gbc.setState(0x374c, 0x1bbf, 0x1c20, 0xfc8e, 0x326e, 0x96f3, 0x1, 0x1);
        gbc.writeMem(0x374c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1bbf);
        EXPECT(gbc.pc(), 0x374d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0177
        gbc.setState(0xd26e, 0x1f3b, 0x53f0, 0x675f, 0x7738, 0x109f, 0x1, 0x1);
        gbc.writeMem(0xd26e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x1f3b);
        EXPECT(gbc.pc(), 0xd26f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd26e), 0x59);
        // 59 0178
        gbc.setState(0x7675, 0x7919, 0xc6e0, 0xbb7f, 0xfd7e, 0x969b, 0x0, 0x0);
        gbc.writeMem(0x7675, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7919);
        EXPECT(gbc.pc(), 0x7676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 017A
        gbc.setState(0xadfc, 0xc13a, 0x3690, 0x7686, 0xa3cb, 0xaa8, 0x0, 0x1);
        gbc.writeMem(0xadfc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc13a);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfc), 0x59);
        // 59 017B
        gbc.setState(0xa8cb, 0x713, 0x290, 0x6f6e, 0xe5e5, 0xcf13, 0x0, 0x0);
        gbc.writeMem(0xa8cb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x713);
        EXPECT(gbc.pc(), 0xa8cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cb), 0x59);
        // 59 017C
        gbc.setState(0x902e, 0x1e89, 0x6d10, 0x73a2, 0x3196, 0x2ed4, 0x0, 0x0);
        gbc.writeMem(0x902e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x1e89);
        EXPECT(gbc.pc(), 0x902f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902e), 0x59);
        // 59 017D
        gbc.setState(0xac2a, 0x91fc, 0x8bb0, 0x1caa, 0xc607, 0xd7ea, 0x0, 0x1);
        gbc.writeMem(0xac2a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x91fc);
        EXPECT(gbc.pc(), 0xac2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2a), 0x59);
        // 59 017E
        gbc.setState(0xe67, 0xd94c, 0x3e90, 0x4753, 0x740, 0x8441, 0x1, 0x1);
        gbc.writeMem(0xe67, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd94c);
        EXPECT(gbc.pc(), 0xe68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 017F
        gbc.setState(0x75e, 0xf1e4, 0xe8a0, 0x891a, 0xd6e1, 0x1916, 0x0, 0x0);
        gbc.writeMem(0x75e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf1e4);
        EXPECT(gbc.pc(), 0x75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0180
        gbc.setState(0x8758, 0x69a1, 0xe2b0, 0x8f40, 0x9d5f, 0x136a, 0x0, 0x0);
        gbc.writeMem(0x8758, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x69a1);
        EXPECT(gbc.pc(), 0x8759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8758), 0x59);
        // 59 0181
        gbc.setState(0xa252, 0x719, 0xb620, 0x8d0f, 0xfc5f, 0x8aff, 0x1, 0x0);
        gbc.writeMem(0xa252, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x719);
        EXPECT(gbc.pc(), 0xa253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa252), 0x59);
        // 59 0182
        gbc.setState(0xb5e8, 0xb194, 0x97c0, 0xd6fd, 0xc6d2, 0xbda1, 0x0, 0x0);
        gbc.writeMem(0xb5e8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb194);
        EXPECT(gbc.pc(), 0xb5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5e8), 0x59);
        // 59 0183
        gbc.setState(0x1c3a, 0x5cce, 0x4b50, 0x1f53, 0x2202, 0x8516, 0x0, 0x0);
        gbc.writeMem(0x1c3a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x5cce);
        EXPECT(gbc.pc(), 0x1c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0184
        gbc.setState(0xda4e, 0x4efa, 0x3b10, 0x6901, 0x1528, 0x863f, 0x1, 0x0);
        gbc.writeMem(0xda4e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x4efa);
        EXPECT(gbc.pc(), 0xda4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda4e), 0x59);
        // 59 0185
        gbc.setState(0xd3dc, 0xdf64, 0x80, 0x54e0, 0x4ddd, 0x55b7, 0x1, 0x1);
        gbc.writeMem(0xd3dc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdf64);
        EXPECT(gbc.pc(), 0xd3dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3dc), 0x59);
        // 59 0186
        gbc.setState(0x55e7, 0x168, 0x9ea0, 0x43b1, 0x39b7, 0x3f7c, 0x1, 0x0);
        gbc.writeMem(0x55e7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x168);
        EXPECT(gbc.pc(), 0x55e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0187
        gbc.setState(0xd7c4, 0xa02d, 0x3cc0, 0x148e, 0xa1ac, 0x7215, 0x0, 0x0);
        gbc.writeMem(0xd7c4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa02d);
        EXPECT(gbc.pc(), 0xd7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7c4), 0x59);
        // 59 0188
        gbc.setState(0x8d9b, 0xbf0c, 0xd410, 0x16fa, 0xd577, 0xa98a, 0x0, 0x0);
        gbc.writeMem(0x8d9b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbf0c);
        EXPECT(gbc.pc(), 0x8d9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9b), 0x59);
        // 59 0189
        gbc.setState(0xff0, 0x4ea4, 0x11f0, 0xc129, 0x42d1, 0x909, 0x1, 0x1);
        gbc.writeMem(0xff0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4ea4);
        EXPECT(gbc.pc(), 0xff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 018A
        gbc.setState(0x42, 0xa567, 0x7b10, 0xb3e3, 0xfec1, 0xd922, 0x1, 0x1);
        gbc.writeMem(0x42, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa567);
        EXPECT(gbc.pc(), 0x43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 018B
        gbc.setState(0x6451, 0x25cd, 0x2e00, 0x4585, 0xc2f, 0x19c1, 0x0, 0x0);
        gbc.writeMem(0x6451, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x25cd);
        EXPECT(gbc.pc(), 0x6452);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 018D
        gbc.setState(0x3db1, 0xbbee, 0x1960, 0x7c2, 0x3b18, 0x17c7, 0x0, 0x0);
        gbc.writeMem(0x3db1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbbee);
        EXPECT(gbc.pc(), 0x3db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 018E
        gbc.setState(0x88b9, 0x6f55, 0xa6d0, 0x6c9, 0xf361, 0x9d4c, 0x1, 0x0);
        gbc.writeMem(0x88b9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6f55);
        EXPECT(gbc.pc(), 0x88ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b9), 0x59);
        // 59 018F
        gbc.setState(0x142b, 0x6c1a, 0x3240, 0xec04, 0xd8fb, 0x72a5, 0x1, 0x1);
        gbc.writeMem(0x142b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6c1a);
        EXPECT(gbc.pc(), 0x142c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0190
        gbc.setState(0x49ac, 0x350a, 0xbe90, 0x3ec1, 0x9c84, 0xa26c, 0x1, 0x0);
        gbc.writeMem(0x49ac, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x350a);
        EXPECT(gbc.pc(), 0x49ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0191
        gbc.setState(0xa262, 0x1df9, 0xdf20, 0xc8df, 0xa675, 0x3c4e, 0x1, 0x0);
        gbc.writeMem(0xa262, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1df9);
        EXPECT(gbc.pc(), 0xa263);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa262), 0x59);
        // 59 0192
        gbc.setState(0x64e7, 0x58e, 0x6630, 0x663f, 0x3607, 0xc369, 0x1, 0x1);
        gbc.writeMem(0x64e7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x58e);
        EXPECT(gbc.pc(), 0x64e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0193
        gbc.setState(0x229, 0xea2, 0x9220, 0x1d17, 0xbdcb, 0x34ff, 0x0, 0x1);
        gbc.writeMem(0x229, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xea2);
        EXPECT(gbc.pc(), 0x22a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0194
        gbc.setState(0x867e, 0x9f76, 0x3b80, 0xb146, 0x6e7f, 0xc2b1, 0x1, 0x0);
        gbc.writeMem(0x867e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9f76);
        EXPECT(gbc.pc(), 0x867f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867e), 0x59);
        // 59 0195
        gbc.setState(0xc59c, 0x2c75, 0xf130, 0xdb, 0xd02b, 0x9f24, 0x1, 0x0);
        gbc.writeMem(0xc59c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2c75);
        EXPECT(gbc.pc(), 0xc59d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc59c), 0x59);
        // 59 0196
        gbc.setState(0x6150, 0xcafe, 0x1e20, 0x2a5f, 0x14fe, 0xc8d2, 0x0, 0x1);
        gbc.writeMem(0x6150, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcafe);
        EXPECT(gbc.pc(), 0x6151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0197
        gbc.setState(0xd551, 0x6bc4, 0x5570, 0x9db4, 0x7abc, 0x3226, 0x1, 0x0);
        gbc.writeMem(0xd551, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6bc4);
        EXPECT(gbc.pc(), 0xd552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd551), 0x59);
        // 59 0198
        gbc.setState(0xc660, 0xaf0d, 0x6f90, 0x6918, 0x8e03, 0x4253, 0x0, 0x1);
        gbc.writeMem(0xc660, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaf0d);
        EXPECT(gbc.pc(), 0xc661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc660), 0x59);
        // 59 0199
        gbc.setState(0x27b4, 0x33be, 0xe640, 0xb680, 0x6d09, 0xbbf7, 0x1, 0x1);
        gbc.writeMem(0x27b4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x33be);
        EXPECT(gbc.pc(), 0x27b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 019A
        gbc.setState(0xc911, 0x54e1, 0x7580, 0x685e, 0x90a4, 0x403f, 0x0, 0x0);
        gbc.writeMem(0xc911, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x54e1);
        EXPECT(gbc.pc(), 0xc912);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc911), 0x59);
        // 59 019B
        gbc.setState(0x8996, 0x3d45, 0xc0e0, 0xd73, 0xc625, 0x7c08, 0x0, 0x0);
        gbc.writeMem(0x8996, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3d45);
        EXPECT(gbc.pc(), 0x8997);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8996), 0x59);
        // 59 019C
        gbc.setState(0x4f6a, 0x9f1e, 0xbd30, 0x3431, 0x17ce, 0x3f8e, 0x0, 0x1);
        gbc.writeMem(0x4f6a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9f1e);
        EXPECT(gbc.pc(), 0x4f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 019D
        gbc.setState(0x1934, 0xe1bb, 0x5130, 0x6154, 0x2e54, 0x8561, 0x1, 0x0);
        gbc.writeMem(0x1934, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe1bb);
        EXPECT(gbc.pc(), 0x1935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 019E
        gbc.setState(0x1226, 0xd27d, 0x8d00, 0x3605, 0xabd1, 0x8b52, 0x0, 0x0);
        gbc.writeMem(0x1226, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0x1227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 019F
        gbc.setState(0x5e7f, 0x2cd2, 0x7640, 0x3cf9, 0x714f, 0x7deb, 0x1, 0x0);
        gbc.writeMem(0x5e7f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2cd2);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01A0
        gbc.setState(0x5dbc, 0x5a8b, 0xf750, 0x3a98, 0x78d5, 0x21ed, 0x0, 0x0);
        gbc.writeMem(0x5dbc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5a8b);
        EXPECT(gbc.pc(), 0x5dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01A1
        gbc.setState(0x27df, 0x20d5, 0xf1a0, 0x17fd, 0xd7e9, 0xe2f9, 0x0, 0x0);
        gbc.writeMem(0x27df, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x20d5);
        EXPECT(gbc.pc(), 0x27e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01A2
        gbc.setState(0x3645, 0xbb14, 0xa810, 0x1746, 0x6d02, 0x28f5, 0x0, 0x0);
        gbc.writeMem(0x3645, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbb14);
        EXPECT(gbc.pc(), 0x3646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01A4
        gbc.setState(0xd73b, 0x5e88, 0x9af0, 0x4de9, 0x859, 0x200d, 0x1, 0x0);
        gbc.writeMem(0xd73b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5e88);
        EXPECT(gbc.pc(), 0xd73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73b), 0x59);
        // 59 01A5
        gbc.setState(0x95d5, 0x5728, 0x7600, 0xa55f, 0x3d6b, 0x7897, 0x1, 0x0);
        gbc.writeMem(0x95d5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5728);
        EXPECT(gbc.pc(), 0x95d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d5), 0x59);
        // 59 01A6
        gbc.setState(0xd8ef, 0x6f25, 0x1e80, 0xca5a, 0x5e41, 0x7b32, 0x1, 0x0);
        gbc.writeMem(0xd8ef, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6f25);
        EXPECT(gbc.pc(), 0xd8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ef), 0x59);
        // 59 01A7
        gbc.setState(0xd119, 0xfafa, 0xcb80, 0xb04, 0x33e1, 0x2ce7, 0x0, 0x1);
        gbc.writeMem(0xd119, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfafa);
        EXPECT(gbc.pc(), 0xd11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd119), 0x59);
        // 59 01A8
        gbc.setState(0x879f, 0xd83d, 0xa7f0, 0xbf6d, 0x9a5b, 0x2b56, 0x1, 0x1);
        gbc.writeMem(0x879f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd83d);
        EXPECT(gbc.pc(), 0x87a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879f), 0x59);
        // 59 01A9
        gbc.setState(0x9848, 0xc079, 0x280, 0xbeb, 0xd77, 0x73e9, 0x0, 0x0);
        gbc.writeMem(0x9848, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc079);
        EXPECT(gbc.pc(), 0x9849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9848), 0x59);
        // 59 01AA
        gbc.setState(0x86d8, 0xfe09, 0x5350, 0xed1f, 0x2948, 0x7f1c, 0x0, 0x1);
        gbc.writeMem(0x86d8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfe09);
        EXPECT(gbc.pc(), 0x86d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d8), 0x59);
        // 59 01AB
        gbc.setState(0xad64, 0xe4ec, 0xd190, 0x4bf0, 0xe304, 0xf46d, 0x1, 0x1);
        gbc.writeMem(0xad64, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe4ec);
        EXPECT(gbc.pc(), 0xad65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad64), 0x59);
        // 59 01AC
        gbc.setState(0x9ad2, 0x2d46, 0xd000, 0x1a01, 0xc9bb, 0x181c, 0x0, 0x0);
        gbc.writeMem(0x9ad2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2d46);
        EXPECT(gbc.pc(), 0x9ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad2), 0x59);
        // 59 01AD
        gbc.setState(0xe9ea, 0x18de, 0xcb50, 0x5717, 0xbe34, 0x942c, 0x0, 0x0);
        gbc.writeMem(0xe9ea, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x18de);
        EXPECT(gbc.pc(), 0xe9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ea), 0x59);
        // 59 01AE
        gbc.setState(0x2d33, 0xb762, 0xe020, 0x30a3, 0x5442, 0xc260, 0x0, 0x1);
        gbc.writeMem(0x2d33, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb762);
        EXPECT(gbc.pc(), 0x2d34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01AF
        gbc.setState(0xcd8d, 0x3198, 0x9ad0, 0x6f0e, 0xf032, 0x32e1, 0x1, 0x0);
        gbc.writeMem(0xcd8d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3198);
        EXPECT(gbc.pc(), 0xcd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd8d), 0x59);
        // 59 01B0
        gbc.setState(0x47e8, 0x3ecb, 0x26d0, 0x8895, 0x20f4, 0x93be, 0x0, 0x0);
        gbc.writeMem(0x47e8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x3ecb);
        EXPECT(gbc.pc(), 0x47e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01B1
        gbc.setState(0x458b, 0xddba, 0x5290, 0x93c9, 0xe04c, 0x5da5, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xddba);
        EXPECT(gbc.pc(), 0x458c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01B2
        gbc.setState(0xd902, 0x65f1, 0xe670, 0x1b8e, 0xbf8b, 0xeb12, 0x1, 0x0);
        gbc.writeMem(0xd902, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x65f1);
        EXPECT(gbc.pc(), 0xd903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd902), 0x59);
        // 59 01B3
        gbc.setState(0x5d7c, 0xf7be, 0xeb90, 0xb0e, 0xacf0, 0xab41, 0x1, 0x0);
        gbc.writeMem(0x5d7c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf7be);
        EXPECT(gbc.pc(), 0x5d7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01B4
        gbc.setState(0x3457, 0x7901, 0x720, 0x83b9, 0x8c14, 0xc5a8, 0x0, 0x1);
        gbc.writeMem(0x3457, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7901);
        EXPECT(gbc.pc(), 0x3458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01B5
        gbc.setState(0x326d, 0xaf30, 0x67a0, 0xab92, 0x2df3, 0xaf01, 0x0, 0x0);
        gbc.writeMem(0x326d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xaf30);
        EXPECT(gbc.pc(), 0x326e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01B6
        gbc.setState(0xa3e4, 0xef96, 0x1a40, 0x3082, 0xc3ee, 0xbfc3, 0x0, 0x1);
        gbc.writeMem(0xa3e4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xef96);
        EXPECT(gbc.pc(), 0xa3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e4), 0x59);
        // 59 01B7
        gbc.setState(0x331a, 0x455c, 0x1390, 0x63a1, 0x9a28, 0x1d14, 0x1, 0x1);
        gbc.writeMem(0x331a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x455c);
        EXPECT(gbc.pc(), 0x331b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01B8
        gbc.setState(0x1afa, 0xdc30, 0xf5b0, 0xddad, 0x541b, 0xb6c8, 0x1, 0x1);
        gbc.writeMem(0x1afa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdc30);
        EXPECT(gbc.pc(), 0x1afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01B9
        gbc.setState(0xdc50, 0xe050, 0x3270, 0x2b45, 0x7244, 0xa708, 0x0, 0x0);
        gbc.writeMem(0xdc50, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xe050);
        EXPECT(gbc.pc(), 0xdc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc50), 0x59);
        // 59 01BA
        gbc.setState(0x1ef6, 0x875a, 0x4af0, 0xec93, 0x39c1, 0xbfa6, 0x1, 0x0);
        gbc.writeMem(0x1ef6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x875a);
        EXPECT(gbc.pc(), 0x1ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01BB
        gbc.setState(0x35e2, 0xb029, 0x3350, 0x48aa, 0x7333, 0xcb45, 0x1, 0x0);
        gbc.writeMem(0x35e2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb029);
        EXPECT(gbc.pc(), 0x35e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01BC
        gbc.setState(0x7bb0, 0x3f65, 0xb290, 0x5812, 0x6235, 0x6042, 0x0, 0x1);
        gbc.writeMem(0x7bb0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3f65);
        EXPECT(gbc.pc(), 0x7bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01BD
        gbc.setState(0xa319, 0x54e3, 0x8350, 0xd911, 0xfaa2, 0xfc49, 0x0, 0x0);
        gbc.writeMem(0xa319, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x54e3);
        EXPECT(gbc.pc(), 0xa31a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa319), 0x59);
        // 59 01BE
        gbc.setState(0xab8d, 0x617a, 0x5870, 0xe381, 0x6097, 0x19f, 0x0, 0x0);
        gbc.writeMem(0xab8d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x617a);
        EXPECT(gbc.pc(), 0xab8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab8d), 0x59);
        // 59 01BF
        gbc.setState(0x9b51, 0x86a8, 0x5890, 0x87ee, 0xa963, 0x47a1, 0x0, 0x1);
        gbc.writeMem(0x9b51, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x86a8);
        EXPECT(gbc.pc(), 0x9b52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b51), 0x59);
        // 59 01C0
        gbc.setState(0x89aa, 0x815a, 0xea30, 0x397c, 0x514d, 0x45, 0x0, 0x0);
        gbc.writeMem(0x89aa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x815a);
        EXPECT(gbc.pc(), 0x89ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89aa), 0x59);
        // 59 01C1
        gbc.setState(0x116d, 0xeae, 0x91b0, 0x99b4, 0x6233, 0x9390, 0x0, 0x1);
        gbc.writeMem(0x116d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xeae);
        EXPECT(gbc.pc(), 0x116e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01C2
        gbc.setState(0x731e, 0xd026, 0xe1e0, 0x7631, 0xa221, 0x14aa, 0x1, 0x0);
        gbc.writeMem(0x731e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd026);
        EXPECT(gbc.pc(), 0x731f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01C4
        gbc.setState(0x8599, 0x9b00, 0xe40, 0xbbd1, 0x110c, 0xc12c, 0x0, 0x1);
        gbc.writeMem(0x8599, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9b00);
        EXPECT(gbc.pc(), 0x859a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8599), 0x59);
        // 59 01C5
        gbc.setState(0x4ddb, 0x6e1e, 0xed50, 0x8ce9, 0xaaa5, 0x7bfd, 0x0, 0x0);
        gbc.writeMem(0x4ddb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6e1e);
        EXPECT(gbc.pc(), 0x4ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01C6
        gbc.setState(0x4867, 0x4166, 0xa560, 0x52ef, 0x867d, 0x4ff, 0x0, 0x0);
        gbc.writeMem(0x4867, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4166);
        EXPECT(gbc.pc(), 0x4868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01C7
        gbc.setState(0xe88a, 0x39b2, 0xa890, 0x4a7f, 0x68e, 0x249e, 0x1, 0x1);
        gbc.writeMem(0xe88a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x39b2);
        EXPECT(gbc.pc(), 0xe88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe88a), 0x59);
        // 59 01C8
        gbc.setState(0x33af, 0x2b26, 0x2220, 0x9947, 0x2519, 0x761, 0x0, 0x1);
        gbc.writeMem(0x33af, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2b26);
        EXPECT(gbc.pc(), 0x33b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01C9
        gbc.setState(0xc6cf, 0xf2e3, 0x6780, 0x372a, 0x4bfb, 0x1dbf, 0x0, 0x0);
        gbc.writeMem(0xc6cf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf2e3);
        EXPECT(gbc.pc(), 0xc6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6cf), 0x59);
        // 59 01CA
        gbc.setState(0x1a3f, 0x95e3, 0xfc10, 0xf5ee, 0x27b6, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0x1a3f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x95e3);
        EXPECT(gbc.pc(), 0x1a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01CB
        gbc.setState(0xecd2, 0xca4a, 0xdd70, 0xadc6, 0x238d, 0xe4ff, 0x1, 0x0);
        gbc.writeMem(0xecd2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0xecd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd2), 0x59);
        // 59 01CC
        gbc.setState(0xad80, 0x6848, 0x9560, 0xc102, 0x6bd0, 0xc091, 0x1, 0x0);
        gbc.writeMem(0xad80, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6848);
        EXPECT(gbc.pc(), 0xad81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad80), 0x59);
        // 59 01CD
        gbc.setState(0x2db8, 0x4250, 0x2c70, 0x4dd2, 0xd590, 0xa68, 0x0, 0x0);
        gbc.writeMem(0x2db8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4250);
        EXPECT(gbc.pc(), 0x2db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01CE
        gbc.setState(0x56f9, 0xc15e, 0x7f80, 0x7660, 0xff73, 0xbf1a, 0x0, 0x1);
        gbc.writeMem(0x56f9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc15e);
        EXPECT(gbc.pc(), 0x56fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01CF
        gbc.setState(0xdeb9, 0x421a, 0xe9e0, 0xd50c, 0x30a2, 0x4ba7, 0x0, 0x1);
        gbc.writeMem(0xdeb9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x421a);
        EXPECT(gbc.pc(), 0xdeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb9), 0x59);
        // 59 01D0
        gbc.setState(0x51f6, 0x3beb, 0xc170, 0xb11, 0x30d5, 0x4bb7, 0x1, 0x1);
        gbc.writeMem(0x51f6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3beb);
        EXPECT(gbc.pc(), 0x51f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01D2
        gbc.setState(0xa0d6, 0x2a8, 0xa210, 0x3f56, 0x9c79, 0x120f, 0x1, 0x1);
        gbc.writeMem(0xa0d6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2a8);
        EXPECT(gbc.pc(), 0xa0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d6), 0x59);
        // 59 01D3
        gbc.setState(0xe973, 0x205a, 0x8c40, 0xc55c, 0xa22a, 0xbd45, 0x1, 0x0);
        gbc.writeMem(0xe973, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x205a);
        EXPECT(gbc.pc(), 0xe974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe973), 0x59);
        // 59 01D4
        gbc.setState(0x40da, 0x50d, 0x3f30, 0xe746, 0xffe6, 0xf6d7, 0x1, 0x0);
        gbc.writeMem(0x40da, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x50d);
        EXPECT(gbc.pc(), 0x40db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01D5
        gbc.setState(0x6551, 0x7c89, 0xe820, 0x1c5e, 0x4b8c, 0x1774, 0x1, 0x0);
        gbc.writeMem(0x6551, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7c89);
        EXPECT(gbc.pc(), 0x6552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01D6
        gbc.setState(0x7b6e, 0xcab3, 0x3cc0, 0xab7f, 0xfeca, 0x7b18, 0x0, 0x1);
        gbc.writeMem(0x7b6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xcab3);
        EXPECT(gbc.pc(), 0x7b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01D7
        gbc.setState(0x45ec, 0xf6e3, 0x6b50, 0x4cbb, 0xd668, 0x779f, 0x1, 0x1);
        gbc.writeMem(0x45ec, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf6e3);
        EXPECT(gbc.pc(), 0x45ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01D8
        gbc.setState(0x95e3, 0xc410, 0xba30, 0xf9a2, 0x144, 0x3876, 0x0, 0x0);
        gbc.writeMem(0x95e3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc410);
        EXPECT(gbc.pc(), 0x95e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e3), 0x59);
        // 59 01D9
        gbc.setState(0xe946, 0xa7d3, 0xfb80, 0x6053, 0xdfcc, 0x4016, 0x0, 0x1);
        gbc.writeMem(0xe946, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa7d3);
        EXPECT(gbc.pc(), 0xe947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe946), 0x59);
        // 59 01DA
        gbc.setState(0x1008, 0x692d, 0x3530, 0xf88b, 0xe710, 0xbbe2, 0x0, 0x0);
        gbc.writeMem(0x1008, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x692d);
        EXPECT(gbc.pc(), 0x1009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01DB
        gbc.setState(0xaaa5, 0x9ffb, 0x6d10, 0x1e43, 0x5e7e, 0x2384, 0x1, 0x1);
        gbc.writeMem(0xaaa5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9ffb);
        EXPECT(gbc.pc(), 0xaaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa5), 0x59);
        // 59 01DC
        gbc.setState(0x5e5a, 0x17f7, 0x55d0, 0x6d8, 0x766c, 0x9dd5, 0x1, 0x1);
        gbc.writeMem(0x5e5a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x5e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01DD
        gbc.setState(0x8457, 0x2d72, 0x72a0, 0x4e6e, 0x8525, 0x4b4d, 0x1, 0x1);
        gbc.writeMem(0x8457, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2d72);
        EXPECT(gbc.pc(), 0x8458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8457), 0x59);
        // 59 01DE
        gbc.setState(0x6543, 0xcbe5, 0x1000, 0x8729, 0x7b65, 0x7039, 0x1, 0x1);
        gbc.writeMem(0x6543, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcbe5);
        EXPECT(gbc.pc(), 0x6544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01DF
        gbc.setState(0xdee1, 0x8999, 0x430, 0xd5da, 0x8db5, 0x861e, 0x0, 0x0);
        gbc.writeMem(0xdee1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8999);
        EXPECT(gbc.pc(), 0xdee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee1), 0x59);
        // 59 01E0
        gbc.setState(0x7d82, 0xb768, 0x6740, 0x3646, 0xeb25, 0x4ef4, 0x1, 0x1);
        gbc.writeMem(0x7d82, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb768);
        EXPECT(gbc.pc(), 0x7d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01E1
        gbc.setState(0xbe94, 0x7364, 0xbd30, 0xb1d3, 0x9c59, 0x10a4, 0x0, 0x0);
        gbc.writeMem(0xbe94, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7364);
        EXPECT(gbc.pc(), 0xbe95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe94), 0x59);
        // 59 01E2
        gbc.setState(0x547b, 0x5f69, 0x8820, 0x8ab0, 0x29c5, 0x4b01, 0x1, 0x0);
        gbc.writeMem(0x547b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5f69);
        EXPECT(gbc.pc(), 0x547c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01E3
        gbc.setState(0xba06, 0xa3c8, 0xd2d0, 0xc735, 0xd8fc, 0x722, 0x1, 0x0);
        gbc.writeMem(0xba06, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa3c8);
        EXPECT(gbc.pc(), 0xba07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba06), 0x59);
        // 59 01E4
        gbc.setState(0xa9dc, 0x4ac2, 0xa6a0, 0xe53, 0xf006, 0x5c01, 0x1, 0x1);
        gbc.writeMem(0xa9dc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4ac2);
        EXPECT(gbc.pc(), 0xa9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9dc), 0x59);
        // 59 01E5
        gbc.setState(0xcb93, 0x51b4, 0x6520, 0xe02e, 0xa34c, 0xdc41, 0x1, 0x0);
        gbc.writeMem(0xcb93, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x51b4);
        EXPECT(gbc.pc(), 0xcb94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb93), 0x59);
        // 59 01E6
        gbc.setState(0x93ba, 0x73fc, 0x7a00, 0x986b, 0xe369, 0x8de2, 0x0, 0x0);
        gbc.writeMem(0x93ba, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x73fc);
        EXPECT(gbc.pc(), 0x93bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ba), 0x59);
        // 59 01E8
        gbc.setState(0xdd95, 0x1bfa, 0x3b90, 0x1c1a, 0x9fd8, 0x6595, 0x0, 0x1);
        gbc.writeMem(0xdd95, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1bfa);
        EXPECT(gbc.pc(), 0xdd96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd95), 0x59);
        // 59 01E9
        gbc.setState(0x62d1, 0xf6e1, 0x49a0, 0xba59, 0xfaf9, 0x4a2f, 0x0, 0x0);
        gbc.writeMem(0x62d1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf6e1);
        EXPECT(gbc.pc(), 0x62d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01EA
        gbc.setState(0x1ce4, 0xd086, 0x1420, 0x6092, 0x41ce, 0x56fc, 0x1, 0x0);
        gbc.writeMem(0x1ce4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd086);
        EXPECT(gbc.pc(), 0x1ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01EB
        gbc.setState(0x4131, 0x9b74, 0x57f0, 0x2d69, 0x72b1, 0xe9b4, 0x0, 0x0);
        gbc.writeMem(0x4131, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9b74);
        EXPECT(gbc.pc(), 0x4132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01EC
        gbc.setState(0x7826, 0x947, 0xce50, 0xd400, 0x81e5, 0xa2b8, 0x1, 0x1);
        gbc.writeMem(0x7826, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x947);
        EXPECT(gbc.pc(), 0x7827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01EE
        gbc.setState(0x5089, 0xec49, 0x6500, 0xd06b, 0x9357, 0x3d3f, 0x1, 0x1);
        gbc.writeMem(0x5089, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xec49);
        EXPECT(gbc.pc(), 0x508a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01EF
        gbc.setState(0x588c, 0x7819, 0xea80, 0x1444, 0xbe5c, 0xed1c, 0x0, 0x1);
        gbc.writeMem(0x588c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7819);
        EXPECT(gbc.pc(), 0x588d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 01F0
        gbc.setState(0x21b4, 0x56f2, 0xbbe0, 0x89d9, 0xb383, 0xf7d8, 0x0, 0x1);
        gbc.writeMem(0x21b4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x56f2);
        EXPECT(gbc.pc(), 0x21b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 01F1
        gbc.setState(0xa709, 0x2893, 0xbe80, 0x6934, 0xe960, 0x6, 0x0, 0x1);
        gbc.writeMem(0xa709, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2893);
        EXPECT(gbc.pc(), 0xa70a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa709), 0x59);
        // 59 01F4
        gbc.setState(0x814f, 0xc3b2, 0x1fb0, 0xd927, 0xb284, 0x3fb5, 0x0, 0x1);
        gbc.writeMem(0x814f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc3b2);
        EXPECT(gbc.pc(), 0x8150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x814f), 0x59);
        // 59 01F5
        gbc.setState(0xdca9, 0x15b9, 0x5bb0, 0x3687, 0x8420, 0xbb78, 0x0, 0x1);
        gbc.writeMem(0xdca9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x15b9);
        EXPECT(gbc.pc(), 0xdcaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca9), 0x59);
        // 59 01F6
        gbc.setState(0xb14a, 0xcf23, 0x2f90, 0x5d4e, 0x13da, 0xf5dc, 0x1, 0x0);
        gbc.writeMem(0xb14a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcf23);
        EXPECT(gbc.pc(), 0xb14b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14a), 0x59);
        // 59 01F7
        gbc.setState(0x3f52, 0x2c45, 0xfdf0, 0x776d, 0x1f06, 0x3bee, 0x0, 0x1);
        gbc.writeMem(0x3f52, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2c45);
        EXPECT(gbc.pc(), 0x3f53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 01F8
        gbc.setState(0xbae0, 0x5469, 0x9b90, 0xc20d, 0x2340, 0xa4f0, 0x1, 0x1);
        gbc.writeMem(0xbae0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5469);
        EXPECT(gbc.pc(), 0xbae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae0), 0x59);
        // 59 01F9
        gbc.setState(0xadaf, 0x9d47, 0x6cf0, 0x6994, 0xaeb, 0xa175, 0x1, 0x1);
        gbc.writeMem(0xadaf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9d47);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadaf), 0x59);
        // 59 01FA
        gbc.setState(0xef1b, 0xfc80, 0x4770, 0x6496, 0xaae1, 0x68c6, 0x0, 0x1);
        gbc.writeMem(0xef1b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfc80);
        EXPECT(gbc.pc(), 0xef1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef1b), 0x59);
        // 59 01FB
        gbc.setState(0xabf7, 0xf24f, 0x28f0, 0x11e6, 0xed11, 0xe5bb, 0x1, 0x0);
        gbc.writeMem(0xabf7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf24f);
        EXPECT(gbc.pc(), 0xabf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabf7), 0x59);
        // 59 01FC
        gbc.setState(0x500d, 0x662f, 0xffd0, 0xd5d3, 0x6e06, 0xe9ff, 0x0, 0x0);
        gbc.writeMem(0x500d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x662f);
        EXPECT(gbc.pc(), 0x500e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 01FD
        gbc.setState(0xa90a, 0x9434, 0x6960, 0x74a1, 0x243f, 0xbfe5, 0x0, 0x0);
        gbc.writeMem(0xa90a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9434);
        EXPECT(gbc.pc(), 0xa90b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa90a), 0x59);
        // 59 01FE
        gbc.setState(0x97ca, 0xbd1f, 0x8790, 0x36b6, 0x3f9, 0xedad, 0x0, 0x1);
        gbc.writeMem(0x97ca, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbd1f);
        EXPECT(gbc.pc(), 0x97cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ca), 0x59);
        // 59 01FF
        gbc.setState(0xcab3, 0x3d8f, 0xfe90, 0x9bbb, 0xbef7, 0x54fe, 0x0, 0x1);
        gbc.writeMem(0xcab3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x3d8f);
        EXPECT(gbc.pc(), 0xcab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab3), 0x59);
        // 59 0200
        gbc.setState(0x4be8, 0x8ec8, 0xc420, 0xcb46, 0x63ee, 0x9759, 0x0, 0x1);
        gbc.writeMem(0x4be8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8ec8);
        EXPECT(gbc.pc(), 0x4be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0201
        gbc.setState(0x3afe, 0xf20e, 0xf000, 0x6420, 0x17b1, 0x732, 0x1, 0x1);
        gbc.writeMem(0x3afe, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf20e);
        EXPECT(gbc.pc(), 0x3aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0202
        gbc.setState(0x1c58, 0x3256, 0x2160, 0x4332, 0x278b, 0x8f9f, 0x0, 0x1);
        gbc.writeMem(0x1c58, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3256);
        EXPECT(gbc.pc(), 0x1c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0203
        gbc.setState(0xc5b1, 0xd7a4, 0xcc90, 0xea35, 0xb787, 0xf40b, 0x0, 0x0);
        gbc.writeMem(0xc5b1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd7a4);
        EXPECT(gbc.pc(), 0xc5b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b1), 0x59);
        // 59 0204
        gbc.setState(0x78c9, 0xba34, 0x8080, 0xe6bb, 0xec05, 0x8f67, 0x0, 0x1);
        gbc.writeMem(0x78c9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xba34);
        EXPECT(gbc.pc(), 0x78ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0205
        gbc.setState(0xe4f, 0x69f7, 0xcd80, 0xe992, 0xbf16, 0x4957, 0x1, 0x1);
        gbc.writeMem(0xe4f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x69f7);
        EXPECT(gbc.pc(), 0xe50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0206
        gbc.setState(0xc426, 0xccc7, 0x71f0, 0xea78, 0x1163, 0x475b, 0x1, 0x1);
        gbc.writeMem(0xc426, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xccc7);
        EXPECT(gbc.pc(), 0xc427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc426), 0x59);
        // 59 0207
        gbc.setState(0x39bf, 0x2126, 0xf410, 0x1b25, 0x3c2b, 0x77c6, 0x1, 0x0);
        gbc.writeMem(0x39bf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2126);
        EXPECT(gbc.pc(), 0x39c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0208
        gbc.setState(0xcc86, 0xe05, 0x3420, 0x4923, 0x58d5, 0xecf3, 0x0, 0x1);
        gbc.writeMem(0xcc86, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe05);
        EXPECT(gbc.pc(), 0xcc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc86), 0x59);
        // 59 0209
        gbc.setState(0x4d02, 0xeb31, 0x7f00, 0x5d01, 0xa0dc, 0x4d19, 0x1, 0x1);
        gbc.writeMem(0x4d02, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xeb31);
        EXPECT(gbc.pc(), 0x4d03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 020A
        gbc.setState(0xc37, 0x68b8, 0xf9a0, 0xf680, 0xc46f, 0x489d, 0x1, 0x1);
        gbc.writeMem(0xc37, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x68b8);
        EXPECT(gbc.pc(), 0xc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 020B
        gbc.setState(0xd804, 0x3a2e, 0xa1a0, 0xe4ea, 0xc7fb, 0x966f, 0x1, 0x0);
        gbc.writeMem(0xd804, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3a2e);
        EXPECT(gbc.pc(), 0xd805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd804), 0x59);
        // 59 020C
        gbc.setState(0x5f38, 0x7706, 0x8d10, 0xf8e9, 0x4bf2, 0x7a87, 0x1, 0x0);
        gbc.writeMem(0x5f38, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7706);
        EXPECT(gbc.pc(), 0x5f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 020D
        gbc.setState(0xbaf7, 0xf869, 0x4a20, 0x5e81, 0x9478, 0x9d46, 0x0, 0x0);
        gbc.writeMem(0xbaf7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf869);
        EXPECT(gbc.pc(), 0xbaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf7), 0x59);
        // 59 020E
        gbc.setState(0xd67, 0x656b, 0x7280, 0x8b7a, 0x50b4, 0xd413, 0x0, 0x0);
        gbc.writeMem(0xd67, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x656b);
        EXPECT(gbc.pc(), 0xd68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 020F
        gbc.setState(0xc120, 0xced9, 0x2240, 0xb651, 0x9223, 0x1c18, 0x1, 0x0);
        gbc.writeMem(0xc120, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xced9);
        EXPECT(gbc.pc(), 0xc121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc120), 0x59);
        // 59 0210
        gbc.setState(0x6333, 0xede4, 0xac0, 0xf910, 0xcd67, 0xfb7b, 0x0, 0x1);
        gbc.writeMem(0x6333, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xede4);
        EXPECT(gbc.pc(), 0x6334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0211
        gbc.setState(0xb07, 0x4074, 0x1200, 0x350c, 0x2219, 0x8ffd, 0x0, 0x1);
        gbc.writeMem(0xb07, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4074);
        EXPECT(gbc.pc(), 0xb08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0212
        gbc.setState(0x43d3, 0xd90b, 0x1740, 0xbba1, 0x1ade, 0x2569, 0x1, 0x0);
        gbc.writeMem(0x43d3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd90b);
        EXPECT(gbc.pc(), 0x43d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0213
        gbc.setState(0xe042, 0x6417, 0xd0a0, 0xcb8, 0x4540, 0x8c77, 0x1, 0x1);
        gbc.writeMem(0xe042, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6417);
        EXPECT(gbc.pc(), 0xe043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe042), 0x59);
        // 59 0214
        gbc.setState(0x51, 0xbcb9, 0xb5b0, 0x91be, 0x1eae, 0xf2ad, 0x0, 0x1);
        gbc.writeMem(0x51, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbcb9);
        EXPECT(gbc.pc(), 0x52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0215
        gbc.setState(0xc949, 0x24bd, 0x9120, 0x732d, 0xc7dc, 0xe3d, 0x1, 0x0);
        gbc.writeMem(0xc949, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x24bd);
        EXPECT(gbc.pc(), 0xc94a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc949), 0x59);
        // 59 0216
        gbc.setState(0xd470, 0xd698, 0x3d70, 0x769a, 0xa1d8, 0xd209, 0x0, 0x0);
        gbc.writeMem(0xd470, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd698);
        EXPECT(gbc.pc(), 0xd471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd470), 0x59);
        // 59 0217
        gbc.setState(0xccaf, 0x84f1, 0x15b0, 0x4bd2, 0x4d00, 0x7467, 0x1, 0x0);
        gbc.writeMem(0xccaf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x84f1);
        EXPECT(gbc.pc(), 0xccb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccaf), 0x59);
        // 59 0219
        gbc.setState(0x4fb4, 0x6c02, 0xf450, 0x7b2e, 0x9f10, 0xe7ef, 0x0, 0x0);
        gbc.writeMem(0x4fb4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6c02);
        EXPECT(gbc.pc(), 0x4fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 021A
        gbc.setState(0xdcaa, 0x1443, 0x9ea0, 0x72c1, 0x4eac, 0xc278, 0x1, 0x1);
        gbc.writeMem(0xdcaa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1443);
        EXPECT(gbc.pc(), 0xdcab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcaa), 0x59);
        // 59 021B
        gbc.setState(0xdd5b, 0xc9c2, 0xc060, 0xb138, 0x4519, 0x7fe4, 0x1, 0x0);
        gbc.writeMem(0xdd5b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc9c2);
        EXPECT(gbc.pc(), 0xdd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd5b), 0x59);
        // 59 021C
        gbc.setState(0xce11, 0xfac2, 0x1550, 0xd32d, 0x6235, 0xd690, 0x1, 0x1);
        gbc.writeMem(0xce11, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce11), 0x59);
        // 59 021D
        gbc.setState(0xa4b2, 0xd815, 0xf070, 0x74b2, 0xaaa2, 0x518e, 0x0, 0x0);
        gbc.writeMem(0xa4b2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd815);
        EXPECT(gbc.pc(), 0xa4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b2), 0x59);
        // 59 021E
        gbc.setState(0x8d68, 0x5951, 0xf060, 0x840a, 0x4e45, 0xc776, 0x1, 0x1);
        gbc.writeMem(0x8d68, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5951);
        EXPECT(gbc.pc(), 0x8d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d68), 0x59);
        // 59 021F
        gbc.setState(0x463e, 0xdf7, 0xcfc0, 0x1a89, 0xd63e, 0xe183, 0x1, 0x1);
        gbc.writeMem(0x463e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdf7);
        EXPECT(gbc.pc(), 0x463f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0220
        gbc.setState(0x4723, 0x889d, 0x3340, 0x6534, 0x865f, 0xaee5, 0x1, 0x1);
        gbc.writeMem(0x4723, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x889d);
        EXPECT(gbc.pc(), 0x4724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0221
        gbc.setState(0x1cd3, 0xd191, 0xb730, 0x605f, 0x2094, 0x1e4f, 0x1, 0x0);
        gbc.writeMem(0x1cd3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd191);
        EXPECT(gbc.pc(), 0x1cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0222
        gbc.setState(0xdc5, 0x4791, 0x8fb0, 0x82f5, 0x8a4a, 0x8747, 0x0, 0x1);
        gbc.writeMem(0xdc5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4791);
        EXPECT(gbc.pc(), 0xdc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0223
        gbc.setState(0xc99a, 0x1e47, 0xb4c0, 0xd057, 0x7480, 0x835c, 0x1, 0x0);
        gbc.writeMem(0xc99a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1e47);
        EXPECT(gbc.pc(), 0xc99b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc99a), 0x59);
        // 59 0224
        gbc.setState(0x3a53, 0x5301, 0x5290, 0x6ad4, 0xc8a7, 0x9b4b, 0x1, 0x0);
        gbc.writeMem(0x3a53, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5301);
        EXPECT(gbc.pc(), 0x3a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0225
        gbc.setState(0x9c2a, 0x4ea1, 0x7980, 0x2a4d, 0x6280, 0x4dd2, 0x0, 0x0);
        gbc.writeMem(0x9c2a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4ea1);
        EXPECT(gbc.pc(), 0x9c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2a), 0x59);
        // 59 0226
        gbc.setState(0xe3bd, 0xe400, 0xa070, 0xebb1, 0x4f07, 0xc84d, 0x0, 0x1);
        gbc.writeMem(0xe3bd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe400);
        EXPECT(gbc.pc(), 0xe3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bd), 0x59);
        // 59 0227
        gbc.setState(0x94df, 0x6acb, 0xb750, 0x6c21, 0x8ac2, 0x6f4c, 0x0, 0x1);
        gbc.writeMem(0x94df, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6acb);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94df), 0x59);
        // 59 0228
        gbc.setState(0xf02, 0xcb8f, 0x36c0, 0x516c, 0x3c9a, 0xda12, 0x1, 0x1);
        gbc.writeMem(0xf02, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcb8f);
        EXPECT(gbc.pc(), 0xf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0229
        gbc.setState(0x191, 0x5ec5, 0xd5b0, 0x6627, 0x6d43, 0xffb3, 0x0, 0x1);
        gbc.writeMem(0x191, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5ec5);
        EXPECT(gbc.pc(), 0x192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 022A
        gbc.setState(0x9236, 0x2f21, 0x5dd0, 0x8cdd, 0x4cf3, 0x6630, 0x0, 0x1);
        gbc.writeMem(0x9236, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2f21);
        EXPECT(gbc.pc(), 0x9237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9236), 0x59);
        // 59 022B
        gbc.setState(0x32ec, 0x8a4e, 0xb2f0, 0xea8a, 0x927c, 0xcfce, 0x1, 0x0);
        gbc.writeMem(0x32ec, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8a4e);
        EXPECT(gbc.pc(), 0x32ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 022C
        gbc.setState(0x76c1, 0xbb19, 0x4de0, 0xc5b9, 0xf861, 0xc1f7, 0x0, 0x1);
        gbc.writeMem(0x76c1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbb19);
        EXPECT(gbc.pc(), 0x76c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 022D
        gbc.setState(0x7368, 0x718e, 0x740, 0x7e00, 0xf740, 0xe898, 0x1, 0x1);
        gbc.writeMem(0x7368, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x718e);
        EXPECT(gbc.pc(), 0x7369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 022E
        gbc.setState(0xcd64, 0x522a, 0x5cc0, 0x3a2d, 0x4fac, 0xa514, 0x0, 0x1);
        gbc.writeMem(0xcd64, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x522a);
        EXPECT(gbc.pc(), 0xcd65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd64), 0x59);
        // 59 022F
        gbc.setState(0x33f9, 0x3911, 0xdf80, 0x7c64, 0x5245, 0x1f09, 0x1, 0x1);
        gbc.writeMem(0x33f9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3911);
        EXPECT(gbc.pc(), 0x33fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0230
        gbc.setState(0x8b82, 0x8dbc, 0x3080, 0x3b22, 0x665, 0x431a, 0x1, 0x1);
        gbc.writeMem(0x8b82, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8dbc);
        EXPECT(gbc.pc(), 0x8b83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b82), 0x59);
        // 59 0231
        gbc.setState(0xcc17, 0xc352, 0x1e00, 0xb851, 0x4aca, 0xfdc2, 0x0, 0x1);
        gbc.writeMem(0xcc17, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc352);
        EXPECT(gbc.pc(), 0xcc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc17), 0x59);
        // 59 0233
        gbc.setState(0xb63e, 0xac75, 0x4390, 0xcb68, 0x205e, 0xfdb8, 0x0, 0x0);
        gbc.writeMem(0xb63e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xac75);
        EXPECT(gbc.pc(), 0xb63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb63e), 0x59);
        // 59 0234
        gbc.setState(0x932e, 0x3c9d, 0x97e0, 0x6232, 0x8212, 0xae7f, 0x1, 0x0);
        gbc.writeMem(0x932e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3c9d);
        EXPECT(gbc.pc(), 0x932f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932e), 0x59);
        // 59 0235
        gbc.setState(0xad89, 0x24e6, 0x5200, 0xd726, 0x22b2, 0x739e, 0x0, 0x0);
        gbc.writeMem(0xad89, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x24e6);
        EXPECT(gbc.pc(), 0xad8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad89), 0x59);
        // 59 0236
        gbc.setState(0x5e16, 0x9f2a, 0x2340, 0xb035, 0x213e, 0xbfb5, 0x0, 0x1);
        gbc.writeMem(0x5e16, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9f2a);
        EXPECT(gbc.pc(), 0x5e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0237
        gbc.setState(0x1166, 0xa708, 0xaaa0, 0x210c, 0xaafe, 0xe413, 0x0, 0x0);
        gbc.writeMem(0x1166, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa708);
        EXPECT(gbc.pc(), 0x1167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0238
        gbc.setState(0xe760, 0x8a79, 0x390, 0x8405, 0x705c, 0x94a3, 0x0, 0x1);
        gbc.writeMem(0xe760, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8a79);
        EXPECT(gbc.pc(), 0xe761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe760), 0x59);
        // 59 0239
        gbc.setState(0xb6cb, 0x6980, 0x540, 0x2065, 0x138b, 0x30d1, 0x0, 0x1);
        gbc.writeMem(0xb6cb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6980);
        EXPECT(gbc.pc(), 0xb6cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6cb), 0x59);
        // 59 023A
        gbc.setState(0x2e9f, 0xb44, 0x8070, 0x8b01, 0x6213, 0xfeb8, 0x0, 0x0);
        gbc.writeMem(0x2e9f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb44);
        EXPECT(gbc.pc(), 0x2ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 023B
        gbc.setState(0x2a15, 0xa9e8, 0x9f60, 0x799e, 0xa3ea, 0x99b4, 0x1, 0x1);
        gbc.writeMem(0x2a15, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa9e8);
        EXPECT(gbc.pc(), 0x2a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 023C
        gbc.setState(0x5f49, 0xac92, 0x50a0, 0xc2c8, 0x4e6c, 0x18b4, 0x0, 0x0);
        gbc.writeMem(0x5f49, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xac92);
        EXPECT(gbc.pc(), 0x5f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 023E
        gbc.setState(0x30ec, 0xdde8, 0x8b50, 0x8e98, 0x2f95, 0x16d8, 0x1, 0x0);
        gbc.writeMem(0x30ec, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xdde8);
        EXPECT(gbc.pc(), 0x30ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 023F
        gbc.setState(0xbccc, 0x8fd6, 0xacc0, 0x47e8, 0x990d, 0xfbd5, 0x0, 0x1);
        gbc.writeMem(0xbccc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8fd6);
        EXPECT(gbc.pc(), 0xbccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbccc), 0x59);
        // 59 0240
        gbc.setState(0x9c39, 0x914c, 0xf150, 0xdb0, 0x689, 0xd52c, 0x0, 0x1);
        gbc.writeMem(0x9c39, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x914c);
        EXPECT(gbc.pc(), 0x9c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c39), 0x59);
        // 59 0241
        gbc.setState(0x22e0, 0x3c19, 0x5e80, 0x6411, 0x16d3, 0xaf10, 0x0, 0x1);
        gbc.writeMem(0x22e0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3c19);
        EXPECT(gbc.pc(), 0x22e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0242
        gbc.setState(0x1e87, 0xa34d, 0xcb30, 0xc4b1, 0x986a, 0x6f35, 0x0, 0x1);
        gbc.writeMem(0x1e87, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa34d);
        EXPECT(gbc.pc(), 0x1e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0243
        gbc.setState(0x67c, 0x6685, 0x7390, 0x3092, 0xc3c4, 0x18, 0x1, 0x0);
        gbc.writeMem(0x67c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6685);
        EXPECT(gbc.pc(), 0x67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0244
        gbc.setState(0x45dd, 0xab4a, 0x63c0, 0xe383, 0xc34b, 0xd10f, 0x0, 0x0);
        gbc.writeMem(0x45dd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xab4a);
        EXPECT(gbc.pc(), 0x45de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0245
        gbc.setState(0x4c1f, 0x332a, 0xfb0, 0x4dd8, 0xfd49, 0x9d7e, 0x0, 0x1);
        gbc.writeMem(0x4c1f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x332a);
        EXPECT(gbc.pc(), 0x4c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0246
        gbc.setState(0x27c2, 0xde5d, 0xc130, 0x392, 0x869a, 0x2890, 0x0, 0x1);
        gbc.writeMem(0x27c2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xde5d);
        EXPECT(gbc.pc(), 0x27c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0247
        gbc.setState(0x1140, 0x6776, 0x7c10, 0x155f, 0xe5af, 0x6ed3, 0x1, 0x0);
        gbc.writeMem(0x1140, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6776);
        EXPECT(gbc.pc(), 0x1141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0248
        gbc.setState(0xbe8e, 0xbce3, 0xa600, 0xcaec, 0x350, 0xbd85, 0x1, 0x0);
        gbc.writeMem(0xbe8e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbce3);
        EXPECT(gbc.pc(), 0xbe8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8e), 0x59);
        // 59 024A
        gbc.setState(0xa687, 0xb5d4, 0xec70, 0x9c4e, 0xea71, 0x579c, 0x0, 0x1);
        gbc.writeMem(0xa687, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb5d4);
        EXPECT(gbc.pc(), 0xa688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa687), 0x59);
        // 59 024B
        gbc.setState(0x32f7, 0x1c30, 0xacc0, 0x83dd, 0x4b09, 0xbec1, 0x0, 0x0);
        gbc.writeMem(0x32f7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1c30);
        EXPECT(gbc.pc(), 0x32f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 024C
        gbc.setState(0xb0aa, 0xf06e, 0xfe0, 0xa1fc, 0xaaae, 0x90d2, 0x0, 0x1);
        gbc.writeMem(0xb0aa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0xb0ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0aa), 0x59);
        // 59 024D
        gbc.setState(0xb030, 0xaada, 0x3110, 0xa4b5, 0x85d, 0xcc07, 0x1, 0x1);
        gbc.writeMem(0xb030, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xaada);
        EXPECT(gbc.pc(), 0xb031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb030), 0x59);
        // 59 024E
        gbc.setState(0xe5fb, 0x7039, 0xca00, 0x7ca5, 0x5f49, 0x1041, 0x1, 0x0);
        gbc.writeMem(0xe5fb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7039);
        EXPECT(gbc.pc(), 0xe5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5fb), 0x59);
        // 59 024F
        gbc.setState(0x7c6e, 0xc202, 0x7bd0, 0xedae, 0x509a, 0x6178, 0x1, 0x0);
        gbc.writeMem(0x7c6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc202);
        EXPECT(gbc.pc(), 0x7c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0250
        gbc.setState(0x2340, 0x7d53, 0x2520, 0x9834, 0x2c83, 0x1e3d, 0x1, 0x0);
        gbc.writeMem(0x2340, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7d53);
        EXPECT(gbc.pc(), 0x2341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0251
        gbc.setState(0xc31d, 0xe447, 0x1000, 0x4a53, 0xd230, 0xc936, 0x0, 0x0);
        gbc.writeMem(0xc31d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe447);
        EXPECT(gbc.pc(), 0xc31e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31d), 0x59);
        // 59 0252
        gbc.setState(0x1821, 0x3a04, 0x6800, 0x391c, 0xb887, 0x811a, 0x0, 0x0);
        gbc.writeMem(0x1821, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3a04);
        EXPECT(gbc.pc(), 0x1822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0253
        gbc.setState(0x774a, 0x40bf, 0x2c10, 0xbc90, 0xfd82, 0xb6cd, 0x0, 0x1);
        gbc.writeMem(0x774a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x40bf);
        EXPECT(gbc.pc(), 0x774b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0254
        gbc.setState(0x51bf, 0xbe6f, 0x3df0, 0xdf3, 0x5471, 0x608b, 0x0, 0x0);
        gbc.writeMem(0x51bf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbe6f);
        EXPECT(gbc.pc(), 0x51c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0255
        gbc.setState(0xc88d, 0x5fc, 0xa3a0, 0xe1b0, 0xf56f, 0x86d8, 0x1, 0x0);
        gbc.writeMem(0xc88d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5fc);
        EXPECT(gbc.pc(), 0xc88e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88d), 0x59);
        // 59 0256
        gbc.setState(0xc620, 0xb0ff, 0x6e80, 0x902b, 0xcf05, 0xc3d3, 0x1, 0x0);
        gbc.writeMem(0xc620, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb0ff);
        EXPECT(gbc.pc(), 0xc621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc620), 0x59);
        // 59 0258
        gbc.setState(0x18d, 0x240d, 0x3470, 0xe053, 0xeea1, 0xd23f, 0x1, 0x0);
        gbc.writeMem(0x18d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x240d);
        EXPECT(gbc.pc(), 0x18e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0259
        gbc.setState(0xe319, 0x6f4d, 0x7b20, 0x9515, 0xbc3, 0xc50a, 0x1, 0x1);
        gbc.writeMem(0xe319, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6f4d);
        EXPECT(gbc.pc(), 0xe31a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe319), 0x59);
        // 59 025B
        gbc.setState(0xc265, 0xe4ad, 0x9b00, 0xd422, 0xd749, 0x573a, 0x1, 0x0);
        gbc.writeMem(0xc265, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe4ad);
        EXPECT(gbc.pc(), 0xc266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc265), 0x59);
        // 59 025C
        gbc.setState(0xd306, 0xd2df, 0xdb70, 0xc433, 0x7c02, 0x1348, 0x1, 0x1);
        gbc.writeMem(0xd306, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd2df);
        EXPECT(gbc.pc(), 0xd307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd306), 0x59);
        // 59 025D
        gbc.setState(0xbd27, 0x1ece, 0x9760, 0xf89a, 0xf0f4, 0x74e0, 0x0, 0x1);
        gbc.writeMem(0xbd27, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1ece);
        EXPECT(gbc.pc(), 0xbd28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd27), 0x59);
        // 59 025E
        gbc.setState(0xc86b, 0xfabd, 0xdf80, 0xaea5, 0xa152, 0xa40c, 0x1, 0x1);
        gbc.writeMem(0xc86b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfabd);
        EXPECT(gbc.pc(), 0xc86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc86b), 0x59);
        // 59 025F
        gbc.setState(0xbc2d, 0x86af, 0xd980, 0x73d9, 0x24a7, 0xdd12, 0x0, 0x1);
        gbc.writeMem(0xbc2d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x86af);
        EXPECT(gbc.pc(), 0xbc2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2d), 0x59);
        // 59 0260
        gbc.setState(0xe33f, 0x4ecb, 0x6ca0, 0x286e, 0xf4be, 0x2997, 0x0, 0x1);
        gbc.writeMem(0xe33f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4ecb);
        EXPECT(gbc.pc(), 0xe340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33f), 0x59);
        // 59 0261
        gbc.setState(0x3740, 0x9187, 0xef10, 0x120e, 0x774b, 0xbfaa, 0x0, 0x0);
        gbc.writeMem(0x3740, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9187);
        EXPECT(gbc.pc(), 0x3741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0262
        gbc.setState(0x6182, 0xcbff, 0xc820, 0x4820, 0xf212, 0x6c72, 0x1, 0x0);
        gbc.writeMem(0x6182, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcbff);
        EXPECT(gbc.pc(), 0x6183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0264
        gbc.setState(0xb79f, 0xcc86, 0xf200, 0x1db6, 0x7588, 0x3493, 0x1, 0x0);
        gbc.writeMem(0xb79f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xcc86);
        EXPECT(gbc.pc(), 0xb7a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79f), 0x59);
        // 59 0265
        gbc.setState(0xb3d1, 0x42d3, 0x73c0, 0x402a, 0x726c, 0x2567, 0x1, 0x1);
        gbc.writeMem(0xb3d1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x42d3);
        EXPECT(gbc.pc(), 0xb3d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d1), 0x59);
        // 59 0266
        gbc.setState(0xd04e, 0x38c7, 0x59f0, 0x914c, 0x40f4, 0xd71e, 0x0, 0x0);
        gbc.writeMem(0xd04e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x38c7);
        EXPECT(gbc.pc(), 0xd04f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04e), 0x59);
        // 59 0268
        gbc.setState(0xeb5e, 0xffed, 0xeaf0, 0xea26, 0x3683, 0xe0cc, 0x0, 0x1);
        gbc.writeMem(0xeb5e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xffed);
        EXPECT(gbc.pc(), 0xeb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb5e), 0x59);
        // 59 0269
        gbc.setState(0x1153, 0x7126, 0x8970, 0x4037, 0x7f80, 0xc72c, 0x0, 0x1);
        gbc.writeMem(0x1153, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7126);
        EXPECT(gbc.pc(), 0x1154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 026A
        gbc.setState(0xeb4e, 0x850f, 0xa600, 0x699d, 0xda9a, 0xc57, 0x1, 0x0);
        gbc.writeMem(0xeb4e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x850f);
        EXPECT(gbc.pc(), 0xeb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4e), 0x59);
        // 59 026B
        gbc.setState(0xbd96, 0x4bdd, 0xd60, 0x13f3, 0xc1f7, 0xb898, 0x1, 0x1);
        gbc.writeMem(0xbd96, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4bdd);
        EXPECT(gbc.pc(), 0xbd97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd96), 0x59);
        // 59 026C
        gbc.setState(0x1914, 0x6bde, 0x2360, 0x2153, 0xc47, 0xde1b, 0x1, 0x0);
        gbc.writeMem(0x1914, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6bde);
        EXPECT(gbc.pc(), 0x1915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 026D
        gbc.setState(0x9e1d, 0xbdb2, 0xced0, 0xc4b5, 0xc76e, 0x617a, 0x0, 0x0);
        gbc.writeMem(0x9e1d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbdb2);
        EXPECT(gbc.pc(), 0x9e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1d), 0x59);
        // 59 026E
        gbc.setState(0x9b62, 0x6bdd, 0x7de0, 0x1454, 0xb8e2, 0xf90f, 0x1, 0x1);
        gbc.writeMem(0x9b62, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6bdd);
        EXPECT(gbc.pc(), 0x9b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b62), 0x59);
        // 59 026F
        gbc.setState(0xda8a, 0xdf0, 0xa540, 0xa041, 0x6880, 0x972, 0x1, 0x0);
        gbc.writeMem(0xda8a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xdf0);
        EXPECT(gbc.pc(), 0xda8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8a), 0x59);
        // 59 0270
        gbc.setState(0xb2aa, 0x22a7, 0x15b0, 0x44cc, 0x2977, 0x6374, 0x1, 0x0);
        gbc.writeMem(0xb2aa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x22a7);
        EXPECT(gbc.pc(), 0xb2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0x59);
        // 59 0271
        gbc.setState(0x11b6, 0xecf3, 0x8580, 0xac69, 0xd1d2, 0x5736, 0x1, 0x1);
        gbc.writeMem(0x11b6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xecf3);
        EXPECT(gbc.pc(), 0x11b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0272
        gbc.setState(0x1d27, 0x9b10, 0x7130, 0xdfd7, 0x2c84, 0x8116, 0x1, 0x1);
        gbc.writeMem(0x1d27, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9b10);
        EXPECT(gbc.pc(), 0x1d28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0273
        gbc.setState(0xdd0f, 0xb0f0, 0xb030, 0x791b, 0x6364, 0xb675, 0x0, 0x1);
        gbc.writeMem(0xdd0f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb0f0);
        EXPECT(gbc.pc(), 0xdd10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd0f), 0x59);
        // 59 0274
        gbc.setState(0x5b6e, 0x6069, 0x4690, 0x9460, 0xb603, 0x8add, 0x0, 0x0);
        gbc.writeMem(0x5b6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6069);
        EXPECT(gbc.pc(), 0x5b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0275
        gbc.setState(0x2c50, 0x5f01, 0xf7f0, 0xbf7a, 0x8195, 0x3a66, 0x1, 0x0);
        gbc.writeMem(0x2c50, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5f01);
        EXPECT(gbc.pc(), 0x2c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0276
        gbc.setState(0xa670, 0xe6d9, 0x4ce0, 0x9c30, 0x7b45, 0x91e7, 0x0, 0x0);
        gbc.writeMem(0xa670, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe6d9);
        EXPECT(gbc.pc(), 0xa671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa670), 0x59);
        // 59 0277
        gbc.setState(0xa63f, 0x3fed, 0x38a0, 0x4b9c, 0x450a, 0x7e87, 0x0, 0x1);
        gbc.writeMem(0xa63f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x3fed);
        EXPECT(gbc.pc(), 0xa640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63f), 0x59);
        // 59 0278
        gbc.setState(0xd044, 0x6a5, 0x2770, 0x3643, 0x1879, 0x2520, 0x0, 0x0);
        gbc.writeMem(0xd044, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6a5);
        EXPECT(gbc.pc(), 0xd045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd044), 0x59);
        // 59 0279
        gbc.setState(0x9125, 0x72e9, 0x3930, 0x8d40, 0x7ca3, 0x860d, 0x1, 0x1);
        gbc.writeMem(0x9125, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x72e9);
        EXPECT(gbc.pc(), 0x9126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9125), 0x59);
        // 59 027A
        gbc.setState(0x36e9, 0xa7e1, 0x1850, 0xbcc2, 0x8462, 0x401e, 0x1, 0x1);
        gbc.writeMem(0x36e9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa7e1);
        EXPECT(gbc.pc(), 0x36ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 027B
        gbc.setState(0x7edc, 0xdace, 0x8e90, 0x95de, 0xfecb, 0x6e2a, 0x0, 0x1);
        gbc.writeMem(0x7edc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdace);
        EXPECT(gbc.pc(), 0x7edd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 027C
        gbc.setState(0x667e, 0x480f, 0xc0c0, 0x345d, 0x8c59, 0x3bba, 0x1, 0x1);
        gbc.writeMem(0x667e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x480f);
        EXPECT(gbc.pc(), 0x667f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 027D
        gbc.setState(0x5b04, 0xf096, 0x6600, 0xb1e1, 0x204, 0xf313, 0x0, 0x1);
        gbc.writeMem(0x5b04, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf096);
        EXPECT(gbc.pc(), 0x5b05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 027E
        gbc.setState(0x96fe, 0x2415, 0xf850, 0xb389, 0x843b, 0x95c5, 0x0, 0x0);
        gbc.writeMem(0x96fe, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2415);
        EXPECT(gbc.pc(), 0x96ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fe), 0x59);
        // 59 027F
        gbc.setState(0x9e6e, 0x72ad, 0x6490, 0x40cf, 0x814b, 0x5627, 0x1, 0x0);
        gbc.writeMem(0x9e6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x72ad);
        EXPECT(gbc.pc(), 0x9e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6e), 0x59);
        // 59 0280
        gbc.setState(0xeb75, 0xd31a, 0x42a0, 0x214b, 0x6065, 0xc15c, 0x0, 0x0);
        gbc.writeMem(0xeb75, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd31a);
        EXPECT(gbc.pc(), 0xeb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb75), 0x59);
        // 59 0281
        gbc.setState(0x635f, 0x181b, 0x5a00, 0x423d, 0x76d7, 0x9d7a, 0x1, 0x0);
        gbc.writeMem(0x635f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x181b);
        EXPECT(gbc.pc(), 0x6360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0282
        gbc.setState(0x78e9, 0x7c7f, 0x4630, 0x1ded, 0x50a3, 0xeff6, 0x1, 0x0);
        gbc.writeMem(0x78e9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7c7f);
        EXPECT(gbc.pc(), 0x78ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0283
        gbc.setState(0xd15e, 0xba6f, 0xa340, 0x71a3, 0x6378, 0xb6b1, 0x1, 0x1);
        gbc.writeMem(0xd15e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xba6f);
        EXPECT(gbc.pc(), 0xd15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15e), 0x59);
        // 59 0284
        gbc.setState(0x311a, 0x4573, 0xda90, 0xa76f, 0x6a67, 0x9178, 0x1, 0x1);
        gbc.writeMem(0x311a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4573);
        EXPECT(gbc.pc(), 0x311b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0285
        gbc.setState(0xef7a, 0x19a8, 0xdf70, 0x64ea, 0x3b1b, 0xbfa8, 0x1, 0x0);
        gbc.writeMem(0xef7a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x19a8);
        EXPECT(gbc.pc(), 0xef7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7a), 0x59);
        // 59 0287
        gbc.setState(0x488b, 0xf3c4, 0xee0, 0x2c76, 0x61a3, 0xa176, 0x0, 0x0);
        gbc.writeMem(0x488b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf3c4);
        EXPECT(gbc.pc(), 0x488c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0288
        gbc.setState(0x8fcc, 0xfe7, 0xbc30, 0xc868, 0x3f0d, 0xafed, 0x0, 0x1);
        gbc.writeMem(0x8fcc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfe7);
        EXPECT(gbc.pc(), 0x8fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcc), 0x59);
        // 59 0289
        gbc.setState(0xb481, 0xc6e4, 0xdfa0, 0x8853, 0xfcdc, 0x3b46, 0x1, 0x0);
        gbc.writeMem(0xb481, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc6e4);
        EXPECT(gbc.pc(), 0xb482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb481), 0x59);
        // 59 028A
        gbc.setState(0x3e61, 0xe1b, 0x63c0, 0x79db, 0xeecb, 0x2a26, 0x1, 0x0);
        gbc.writeMem(0x3e61, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe1b);
        EXPECT(gbc.pc(), 0x3e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 028B
        gbc.setState(0xeea2, 0x6390, 0x7380, 0xb021, 0x9860, 0x9e18, 0x1, 0x1);
        gbc.writeMem(0xeea2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6390);
        EXPECT(gbc.pc(), 0xeea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea2), 0x59);
        // 59 028C
        gbc.setState(0xd4df, 0x31c, 0xd3f0, 0x8d10, 0x8cba, 0x39f8, 0x0, 0x0);
        gbc.writeMem(0xd4df, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x31c);
        EXPECT(gbc.pc(), 0xd4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4df), 0x59);
        // 59 028E
        gbc.setState(0xaaf3, 0x5f23, 0x2e90, 0xea4f, 0xeda8, 0xbc2a, 0x0, 0x0);
        gbc.writeMem(0xaaf3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5f23);
        EXPECT(gbc.pc(), 0xaaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf3), 0x59);
        // 59 028F
        gbc.setState(0x23c2, 0xbc6b, 0x3460, 0x2666, 0x46b4, 0xd19c, 0x0, 0x1);
        gbc.writeMem(0x23c2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbc6b);
        EXPECT(gbc.pc(), 0x23c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0290
        gbc.setState(0x84f0, 0x6b60, 0x98e0, 0x623, 0x4d7, 0x8df0, 0x0, 0x0);
        gbc.writeMem(0x84f0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6b60);
        EXPECT(gbc.pc(), 0x84f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84f0), 0x59);
        // 59 0291
        gbc.setState(0xa205, 0x92f0, 0xa3f0, 0xd377, 0xe914, 0x2a3e, 0x1, 0x0);
        gbc.writeMem(0xa205, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x92f0);
        EXPECT(gbc.pc(), 0xa206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa205), 0x59);
        // 59 0292
        gbc.setState(0xdf4d, 0x3e62, 0x25d0, 0x101a, 0xefc5, 0x7d23, 0x0, 0x1);
        gbc.writeMem(0xdf4d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3e62);
        EXPECT(gbc.pc(), 0xdf4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf4d), 0x59);
        // 59 0293
        gbc.setState(0x99c2, 0x611d, 0xfb20, 0x154e, 0xff0d, 0xac7d, 0x0, 0x1);
        gbc.writeMem(0x99c2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x611d);
        EXPECT(gbc.pc(), 0x99c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c2), 0x59);
        // 59 0294
        gbc.setState(0xd1f2, 0x9d53, 0x28c0, 0x8c70, 0x75a3, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0xd1f2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9d53);
        EXPECT(gbc.pc(), 0xd1f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f2), 0x59);
        // 59 0295
        gbc.setState(0xc16f, 0x5b6b, 0xb1b0, 0x17ac, 0x3ac2, 0x8d64, 0x0, 0x0);
        gbc.writeMem(0xc16f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5b6b);
        EXPECT(gbc.pc(), 0xc170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc16f), 0x59);
        // 59 0296
        gbc.setState(0x82cd, 0x2d24, 0xbaa0, 0x6b91, 0x8589, 0x160b, 0x1, 0x1);
        gbc.writeMem(0x82cd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2d24);
        EXPECT(gbc.pc(), 0x82ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cd), 0x59);
        // 59 0297
        gbc.setState(0x430f, 0x9538, 0x3c00, 0x17f7, 0xc1c4, 0xa18b, 0x1, 0x1);
        gbc.writeMem(0x430f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9538);
        EXPECT(gbc.pc(), 0x4310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0298
        gbc.setState(0x2b3, 0x8ccc, 0xbc70, 0x2452, 0x3cc8, 0xd616, 0x0, 0x0);
        gbc.writeMem(0x2b3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8ccc);
        EXPECT(gbc.pc(), 0x2b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0299
        gbc.setState(0x151f, 0x8616, 0x1510, 0xf0df, 0x6202, 0xefab, 0x0, 0x0);
        gbc.writeMem(0x151f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8616);
        EXPECT(gbc.pc(), 0x1520);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 029A
        gbc.setState(0x8f37, 0xba42, 0x1ca0, 0x1144, 0xeb7d, 0x264a, 0x1, 0x0);
        gbc.writeMem(0x8f37, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xba42);
        EXPECT(gbc.pc(), 0x8f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f37), 0x59);
        // 59 029B
        gbc.setState(0x6ea, 0x1ee5, 0xc790, 0x9566, 0xb3f7, 0xe106, 0x1, 0x0);
        gbc.writeMem(0x6ea, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1ee5);
        EXPECT(gbc.pc(), 0x6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 029C
        gbc.setState(0x5d92, 0xeaae, 0x470, 0x162e, 0xb215, 0xf304, 0x0, 0x0);
        gbc.writeMem(0x5d92, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xeaae);
        EXPECT(gbc.pc(), 0x5d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 029D
        gbc.setState(0x2b4f, 0x3b18, 0x1d50, 0x1e87, 0xb6e1, 0x4766, 0x0, 0x0);
        gbc.writeMem(0x2b4f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3b18);
        EXPECT(gbc.pc(), 0x2b50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 029E
        gbc.setState(0xa406, 0xcebc, 0x7f0, 0xb8da, 0xfcec, 0xaaf8, 0x0, 0x0);
        gbc.writeMem(0xa406, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcebc);
        EXPECT(gbc.pc(), 0xa407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa406), 0x59);
        // 59 029F
        gbc.setState(0x9629, 0xcf9b, 0xb300, 0x7525, 0x91f7, 0x34ec, 0x0, 0x1);
        gbc.writeMem(0x9629, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcf9b);
        EXPECT(gbc.pc(), 0x962a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9629), 0x59);
        // 59 02A0
        gbc.setState(0x2005, 0xf38e, 0x7d30, 0xd7b5, 0x415b, 0xdacd, 0x1, 0x1);
        gbc.writeMem(0x2005, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf38e);
        EXPECT(gbc.pc(), 0x2006);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02A1
        gbc.setState(0x95db, 0x51e1, 0xe2c0, 0x6d52, 0xc70a, 0x7951, 0x1, 0x1);
        gbc.writeMem(0x95db, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x51e1);
        EXPECT(gbc.pc(), 0x95dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95db), 0x59);
        // 59 02A2
        gbc.setState(0xb698, 0x89eb, 0x6a30, 0xc9b9, 0x6e83, 0xfe0d, 0x0, 0x0);
        gbc.writeMem(0xb698, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x89eb);
        EXPECT(gbc.pc(), 0xb699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb698), 0x59);
        // 59 02A3
        gbc.setState(0x69d, 0x9a82, 0x7190, 0xcf16, 0x44fc, 0x3883, 0x1, 0x0);
        gbc.writeMem(0x69d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9a82);
        EXPECT(gbc.pc(), 0x69e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02A4
        gbc.setState(0x5c9d, 0xc84c, 0x8f50, 0xe89b, 0xe998, 0x44a4, 0x1, 0x0);
        gbc.writeMem(0x5c9d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc84c);
        EXPECT(gbc.pc(), 0x5c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02A5
        gbc.setState(0xa487, 0x2e9e, 0x1d90, 0x8841, 0x3a1f, 0xcdde, 0x1, 0x1);
        gbc.writeMem(0xa487, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2e9e);
        EXPECT(gbc.pc(), 0xa488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa487), 0x59);
        // 59 02A6
        gbc.setState(0xd0f9, 0x880f, 0x26a0, 0x7939, 0xad75, 0x6e5, 0x0, 0x0);
        gbc.writeMem(0xd0f9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x880f);
        EXPECT(gbc.pc(), 0xd0fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f9), 0x59);
        // 59 02A7
        gbc.setState(0x7e1f, 0xf83a, 0xcb80, 0x6d8a, 0xd235, 0xe5d0, 0x0, 0x1);
        gbc.writeMem(0x7e1f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf83a);
        EXPECT(gbc.pc(), 0x7e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02A8
        gbc.setState(0x6b00, 0xa046, 0x1cc0, 0x6791, 0x8b9a, 0x8985, 0x0, 0x0);
        gbc.writeMem(0x6b00, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa046);
        EXPECT(gbc.pc(), 0x6b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02A9
        gbc.setState(0x9976, 0x358b, 0xb510, 0xbf5b, 0x6fd0, 0x980d, 0x0, 0x1);
        gbc.writeMem(0x9976, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x358b);
        EXPECT(gbc.pc(), 0x9977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9976), 0x59);
        // 59 02AA
        gbc.setState(0xaba1, 0xfb4e, 0xad30, 0x6ca7, 0xf2cd, 0x5f96, 0x0, 0x0);
        gbc.writeMem(0xaba1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfb4e);
        EXPECT(gbc.pc(), 0xaba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba1), 0x59);
        // 59 02AB
        gbc.setState(0x803c, 0x993a, 0x3360, 0xac97, 0x7589, 0x6776, 0x0, 0x0);
        gbc.writeMem(0x803c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x993a);
        EXPECT(gbc.pc(), 0x803d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x803c), 0x59);
        // 59 02AC
        gbc.setState(0x549a, 0x5c35, 0xaef0, 0x3e09, 0xa39e, 0x5655, 0x1, 0x0);
        gbc.writeMem(0x549a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5c35);
        EXPECT(gbc.pc(), 0x549b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02AD
        gbc.setState(0x59e7, 0x742f, 0x6510, 0x7e7d, 0xde43, 0x7035, 0x0, 0x1);
        gbc.writeMem(0x59e7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x742f);
        EXPECT(gbc.pc(), 0x59e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02AE
        gbc.setState(0x770, 0x8339, 0x8830, 0x3386, 0x98f, 0x383a, 0x0, 0x1);
        gbc.writeMem(0x770, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8339);
        EXPECT(gbc.pc(), 0x771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02AF
        gbc.setState(0x5928, 0x8491, 0x8b10, 0x243, 0xf798, 0x36b8, 0x0, 0x1);
        gbc.writeMem(0x5928, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x8491);
        EXPECT(gbc.pc(), 0x5929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02B0
        gbc.setState(0x18ba, 0x9f72, 0x6c20, 0xf22d, 0x7827, 0xe7d2, 0x1, 0x0);
        gbc.writeMem(0x18ba, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9f72);
        EXPECT(gbc.pc(), 0x18bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02B1
        gbc.setState(0x30d6, 0x6d06, 0xd870, 0x122a, 0x5a40, 0xfee9, 0x0, 0x1);
        gbc.writeMem(0x30d6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x6d06);
        EXPECT(gbc.pc(), 0x30d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02B2
        gbc.setState(0x3ddf, 0xcf08, 0x9a70, 0x16ea, 0xd8f0, 0xefbc, 0x1, 0x1);
        gbc.writeMem(0x3ddf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xcf08);
        EXPECT(gbc.pc(), 0x3de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02B3
        gbc.setState(0x3104, 0x1c3c, 0x6090, 0x5cc0, 0xc317, 0x1b5e, 0x1, 0x1);
        gbc.writeMem(0x3104, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1c3c);
        EXPECT(gbc.pc(), 0x3105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02B4
        gbc.setState(0x9978, 0x918e, 0xe700, 0x57b2, 0xf77b, 0x1de, 0x1, 0x0);
        gbc.writeMem(0x9978, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x918e);
        EXPECT(gbc.pc(), 0x9979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9978), 0x59);
        // 59 02B5
        gbc.setState(0x1d43, 0x671c, 0x5b70, 0xe7ac, 0xb327, 0x5fb5, 0x1, 0x1);
        gbc.writeMem(0x1d43, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x671c);
        EXPECT(gbc.pc(), 0x1d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02B6
        gbc.setState(0x2b93, 0xbda5, 0xdc10, 0x6f62, 0xfcba, 0x44d, 0x1, 0x1);
        gbc.writeMem(0x2b93, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbda5);
        EXPECT(gbc.pc(), 0x2b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02B7
        gbc.setState(0xe61f, 0x2211, 0xb720, 0xc95a, 0xb05b, 0x276, 0x0, 0x0);
        gbc.writeMem(0xe61f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2211);
        EXPECT(gbc.pc(), 0xe620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe61f), 0x59);
        // 59 02B8
        gbc.setState(0xe04f, 0x58fc, 0x29e0, 0x488b, 0xb6b3, 0xe930, 0x0, 0x0);
        gbc.writeMem(0xe04f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0xe050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe04f), 0x59);
        // 59 02B9
        gbc.setState(0x670, 0xe654, 0xe770, 0xe61b, 0xa245, 0x17c0, 0x1, 0x0);
        gbc.writeMem(0x670, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe654);
        EXPECT(gbc.pc(), 0x671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02BA
        gbc.setState(0xd977, 0xb8f, 0xc3c0, 0xd7d1, 0x3c39, 0x934d, 0x1, 0x1);
        gbc.writeMem(0xd977, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb8f);
        EXPECT(gbc.pc(), 0xd978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd977), 0x59);
        // 59 02BB
        gbc.setState(0x1f0b, 0x1b26, 0xbb40, 0x605d, 0xe8b9, 0xbc1c, 0x1, 0x0);
        gbc.writeMem(0x1f0b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1b26);
        EXPECT(gbc.pc(), 0x1f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02BC
        gbc.setState(0x7d79, 0x431e, 0xc10, 0x1bf6, 0x89ee, 0xe00c, 0x0, 0x0);
        gbc.writeMem(0x7d79, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x431e);
        EXPECT(gbc.pc(), 0x7d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02BD
        gbc.setState(0x6faf, 0x7218, 0x3840, 0x8fb7, 0x44fc, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x6faf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x7218);
        EXPECT(gbc.pc(), 0x6fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02BE
        gbc.setState(0xe5eb, 0x980f, 0x140, 0xcc37, 0x9a76, 0x58c, 0x1, 0x0);
        gbc.writeMem(0xe5eb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x980f);
        EXPECT(gbc.pc(), 0xe5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5eb), 0x59);
        // 59 02BF
        gbc.setState(0xd7bd, 0x371f, 0x3a20, 0x1692, 0x1200, 0x8329, 0x0, 0x0);
        gbc.writeMem(0xd7bd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x371f);
        EXPECT(gbc.pc(), 0xd7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bd), 0x59);
        // 59 02C0
        gbc.setState(0xdaeb, 0x51f, 0xef40, 0x9db4, 0xc7cb, 0x971a, 0x1, 0x0);
        gbc.writeMem(0xdaeb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x51f);
        EXPECT(gbc.pc(), 0xdaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaeb), 0x59);
        // 59 02C1
        gbc.setState(0x8cfb, 0x1604, 0xf680, 0x1f88, 0x4128, 0xd00e, 0x1, 0x0);
        gbc.writeMem(0x8cfb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1604);
        EXPECT(gbc.pc(), 0x8cfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cfb), 0x59);
        // 59 02C2
        gbc.setState(0xaddb, 0x5f1d, 0x5a60, 0x13e8, 0xcb08, 0x56bd, 0x0, 0x1);
        gbc.writeMem(0xaddb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5f1d);
        EXPECT(gbc.pc(), 0xaddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaddb), 0x59);
        // 59 02C3
        gbc.setState(0x6259, 0xc4ec, 0x2b70, 0x9e75, 0x6c15, 0xa2ec, 0x1, 0x0);
        gbc.writeMem(0x6259, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc4ec);
        EXPECT(gbc.pc(), 0x625a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02C4
        gbc.setState(0x9ad7, 0xf67a, 0x6f0, 0x9702, 0x9b59, 0x1e26, 0x0, 0x1);
        gbc.writeMem(0x9ad7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf67a);
        EXPECT(gbc.pc(), 0x9ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad7), 0x59);
        // 59 02C5
        gbc.setState(0xce6b, 0xed22, 0xd770, 0xf53a, 0x9e1d, 0x161e, 0x0, 0x0);
        gbc.writeMem(0xce6b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xed22);
        EXPECT(gbc.pc(), 0xce6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6b), 0x59);
        // 59 02C6
        gbc.setState(0xeb73, 0xde96, 0xd750, 0xda7f, 0x9708, 0xbc71, 0x0, 0x0);
        gbc.writeMem(0xeb73, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xde96);
        EXPECT(gbc.pc(), 0xeb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb73), 0x59);
        // 59 02C7
        gbc.setState(0x1d74, 0x8309, 0x8aa0, 0x2a7b, 0x916d, 0x2abd, 0x0, 0x0);
        gbc.writeMem(0x1d74, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8309);
        EXPECT(gbc.pc(), 0x1d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02C8
        gbc.setState(0x6d26, 0x4eea, 0x1150, 0x58f6, 0x8bec, 0xa0a4, 0x1, 0x0);
        gbc.writeMem(0x6d26, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0x6d27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02C9
        gbc.setState(0x73d3, 0xf626, 0xc3d0, 0x14c7, 0x92d9, 0xfa01, 0x1, 0x1);
        gbc.writeMem(0x73d3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf626);
        EXPECT(gbc.pc(), 0x73d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02CA
        gbc.setState(0x1f0, 0x799c, 0x7bb0, 0xf1b0, 0x54cf, 0x8109, 0x1, 0x1);
        gbc.writeMem(0x1f0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x799c);
        EXPECT(gbc.pc(), 0x1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02CB
        gbc.setState(0x64d2, 0x43d1, 0xdc20, 0xa54d, 0x65f, 0xc24e, 0x1, 0x1);
        gbc.writeMem(0x64d2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x43d1);
        EXPECT(gbc.pc(), 0x64d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02CC
        gbc.setState(0xd53d, 0xfa0c, 0xaf50, 0x8ea9, 0xd91d, 0x801b, 0x1, 0x1);
        gbc.writeMem(0xd53d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfa0c);
        EXPECT(gbc.pc(), 0xd53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53d), 0x59);
        // 59 02CD
        gbc.setState(0xd1db, 0x2564, 0xde00, 0x3f04, 0xec6, 0x25d8, 0x0, 0x0);
        gbc.writeMem(0xd1db, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2564);
        EXPECT(gbc.pc(), 0xd1dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1db), 0x59);
        // 59 02CE
        gbc.setState(0x3b, 0xdb92, 0x71c0, 0xf76a, 0x78be, 0xe6bc, 0x1, 0x0);
        gbc.writeMem(0x3b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdb92);
        EXPECT(gbc.pc(), 0x3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02CF
        gbc.setState(0x89da, 0xf9a6, 0x7d70, 0x9b0a, 0x1d05, 0x127c, 0x1, 0x1);
        gbc.writeMem(0x89da, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf9a6);
        EXPECT(gbc.pc(), 0x89db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89da), 0x59);
        // 59 02D0
        gbc.setState(0x5fd7, 0x6ef2, 0x7f90, 0xbfc0, 0xa9a1, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0x5fd7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6ef2);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02D1
        gbc.setState(0xa453, 0xba82, 0x5b50, 0xe7dc, 0x9986, 0x8f2f, 0x0, 0x0);
        gbc.writeMem(0xa453, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xba82);
        EXPECT(gbc.pc(), 0xa454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa453), 0x59);
        // 59 02D2
        gbc.setState(0x25ad, 0x8128, 0x960, 0x9d7e, 0x2dad, 0x5037, 0x0, 0x0);
        gbc.writeMem(0x25ad, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x8128);
        EXPECT(gbc.pc(), 0x25ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02D3
        gbc.setState(0xcfbf, 0xde60, 0xaf90, 0x17ad, 0xe25c, 0x9e63, 0x1, 0x0);
        gbc.writeMem(0xcfbf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xde60);
        EXPECT(gbc.pc(), 0xcfc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbf), 0x59);
        // 59 02D5
        gbc.setState(0x4551, 0x8c7d, 0x3580, 0x9393, 0xbb7c, 0x6ad1, 0x1, 0x1);
        gbc.writeMem(0x4551, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8c7d);
        EXPECT(gbc.pc(), 0x4552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02D6
        gbc.setState(0xc9ea, 0x67c9, 0x3930, 0xd095, 0xfe04, 0x6a43, 0x0, 0x1);
        gbc.writeMem(0xc9ea, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x67c9);
        EXPECT(gbc.pc(), 0xc9eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ea), 0x59);
        // 59 02D7
        gbc.setState(0x5c7b, 0x8bc, 0xe2e0, 0x91b9, 0x3769, 0x524e, 0x1, 0x1);
        gbc.writeMem(0x5c7b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8bc);
        EXPECT(gbc.pc(), 0x5c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02D8
        gbc.setState(0xda96, 0x6e8f, 0x1a80, 0x720b, 0x5e2c, 0x56bc, 0x0, 0x1);
        gbc.writeMem(0xda96, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6e8f);
        EXPECT(gbc.pc(), 0xda97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda96), 0x59);
        // 59 02D9
        gbc.setState(0x4462, 0x625d, 0xe9c0, 0xf16c, 0x619a, 0xba22, 0x1, 0x1);
        gbc.writeMem(0x4462, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x625d);
        EXPECT(gbc.pc(), 0x4463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02DA
        gbc.setState(0xd767, 0x9349, 0xb660, 0x95a3, 0x1ff7, 0x2ccf, 0x0, 0x1);
        gbc.writeMem(0xd767, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9349);
        EXPECT(gbc.pc(), 0xd768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd767), 0x59);
        // 59 02DB
        gbc.setState(0x6e6e, 0x1ba3, 0xa3f0, 0x14aa, 0x53f9, 0x6b75, 0x1, 0x0);
        gbc.writeMem(0x6e6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1ba3);
        EXPECT(gbc.pc(), 0x6e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02DC
        gbc.setState(0x9669, 0xafe9, 0x7010, 0xfc5f, 0x4d55, 0x204, 0x1, 0x1);
        gbc.writeMem(0x9669, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xafe9);
        EXPECT(gbc.pc(), 0x966a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9669), 0x59);
        // 59 02DE
        gbc.setState(0x8e51, 0xa69, 0x4e80, 0xb0c5, 0x6563, 0x6645, 0x1, 0x1);
        gbc.writeMem(0x8e51, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa69);
        EXPECT(gbc.pc(), 0x8e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e51), 0x59);
        // 59 02DF
        gbc.setState(0x573e, 0x27b6, 0xfee0, 0x768, 0x533c, 0x2054, 0x1, 0x0);
        gbc.writeMem(0x573e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x27b6);
        EXPECT(gbc.pc(), 0x573f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02E0
        gbc.setState(0x757f, 0x35ed, 0xeb00, 0x6b68, 0xe7a4, 0x8665, 0x1, 0x1);
        gbc.writeMem(0x757f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x35ed);
        EXPECT(gbc.pc(), 0x7580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02E1
        gbc.setState(0xca05, 0x7eb2, 0x3400, 0x8a60, 0x829f, 0x5f60, 0x0, 0x1);
        gbc.writeMem(0xca05, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7eb2);
        EXPECT(gbc.pc(), 0xca06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca05), 0x59);
        // 59 02E2
        gbc.setState(0xe98, 0xe85, 0x6e80, 0x3931, 0xd680, 0xcc57, 0x1, 0x0);
        gbc.writeMem(0xe98, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe85);
        EXPECT(gbc.pc(), 0xe99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02E3
        gbc.setState(0x9a44, 0x1f04, 0x5920, 0x9c5b, 0x8a4d, 0x93df, 0x1, 0x1);
        gbc.writeMem(0x9a44, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1f04);
        EXPECT(gbc.pc(), 0x9a45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a44), 0x59);
        // 59 02E4
        gbc.setState(0x34eb, 0xce3e, 0xaeb0, 0x941b, 0x127, 0x6be0, 0x1, 0x1);
        gbc.writeMem(0x34eb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xce3e);
        EXPECT(gbc.pc(), 0x34ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02E5
        gbc.setState(0xa157, 0x41ce, 0xeba0, 0xc1c2, 0x58f2, 0x8f4b, 0x0, 0x1);
        gbc.writeMem(0xa157, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x41ce);
        EXPECT(gbc.pc(), 0xa158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa157), 0x59);
        // 59 02E6
        gbc.setState(0xd097, 0xc659, 0x3c20, 0xce79, 0x5ca6, 0x3037, 0x1, 0x0);
        gbc.writeMem(0xd097, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0xd098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd097), 0x59);
        // 59 02E7
        gbc.setState(0x411f, 0xe121, 0x2930, 0xe70b, 0x965e, 0xc021, 0x0, 0x0);
        gbc.writeMem(0x411f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe121);
        EXPECT(gbc.pc(), 0x4120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02E8
        gbc.setState(0x8d5e, 0x8208, 0x9330, 0x31b9, 0x8552, 0xeac9, 0x0, 0x1);
        gbc.writeMem(0x8d5e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8208);
        EXPECT(gbc.pc(), 0x8d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d5e), 0x59);
        // 59 02E9
        gbc.setState(0x6b2, 0xf88a, 0x2540, 0x5e4c, 0xeafd, 0x329a, 0x0, 0x1);
        gbc.writeMem(0x6b2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xf88a);
        EXPECT(gbc.pc(), 0x6b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02EA
        gbc.setState(0xc051, 0xf5d4, 0x9f20, 0xf826, 0xb477, 0x83b4, 0x0, 0x0);
        gbc.writeMem(0xc051, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf5d4);
        EXPECT(gbc.pc(), 0xc052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc051), 0x59);
        // 59 02EB
        gbc.setState(0xe003, 0x714f, 0xf0, 0x7e93, 0x7542, 0xd72d, 0x1, 0x1);
        gbc.writeMem(0xe003, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x714f);
        EXPECT(gbc.pc(), 0xe004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe003), 0x59);
        // 59 02EC
        gbc.setState(0xd4ae, 0xfcc8, 0xe960, 0xc556, 0xdcce, 0xe231, 0x1, 0x1);
        gbc.writeMem(0xd4ae, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfcc8);
        EXPECT(gbc.pc(), 0xd4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ae), 0x59);
        // 59 02ED
        gbc.setState(0x54a1, 0x2e, 0xcfc0, 0x14cc, 0x22f5, 0x4e1c, 0x1, 0x0);
        gbc.writeMem(0x54a1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2e);
        EXPECT(gbc.pc(), 0x54a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02EE
        gbc.setState(0xb257, 0x5a5, 0x9ea0, 0x98a7, 0x6c8f, 0x5540, 0x1, 0x0);
        gbc.writeMem(0xb257, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5a5);
        EXPECT(gbc.pc(), 0xb258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb257), 0x59);
        // 59 02F0
        gbc.setState(0x9a75, 0xdf47, 0x2210, 0xc994, 0x8d71, 0x3f5c, 0x1, 0x0);
        gbc.writeMem(0x9a75, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xdf47);
        EXPECT(gbc.pc(), 0x9a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a75), 0x59);
        // 59 02F1
        gbc.setState(0x6fa7, 0xbc6f, 0x4220, 0x1b64, 0xee16, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x6fa7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbc6f);
        EXPECT(gbc.pc(), 0x6fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02F2
        gbc.setState(0xc70d, 0xfebd, 0xbe10, 0xcb29, 0x225d, 0xdf2a, 0x1, 0x1);
        gbc.writeMem(0xc70d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfebd);
        EXPECT(gbc.pc(), 0xc70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc70d), 0x59);
        // 59 02F3
        gbc.setState(0x5c0f, 0xa34b, 0x2250, 0x49a9, 0x564, 0x31a6, 0x1, 0x0);
        gbc.writeMem(0x5c0f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa34b);
        EXPECT(gbc.pc(), 0x5c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 02F4
        gbc.setState(0xa679, 0xec92, 0xc490, 0xaa44, 0x8edb, 0x4f8, 0x1, 0x1);
        gbc.writeMem(0xa679, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xec92);
        EXPECT(gbc.pc(), 0xa67a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa679), 0x59);
        // 59 02F5
        gbc.setState(0x1dc9, 0xbc8e, 0x93a0, 0x2763, 0x1379, 0xb84c, 0x0, 0x0);
        gbc.writeMem(0x1dc9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbc8e);
        EXPECT(gbc.pc(), 0x1dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 02F6
        gbc.setState(0x5052, 0x408e, 0x380, 0x8f04, 0x766d, 0xd4, 0x0, 0x0);
        gbc.writeMem(0x5052, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x408e);
        EXPECT(gbc.pc(), 0x5053);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02F7
        gbc.setState(0x4b6f, 0x5b92, 0x3c70, 0x73d8, 0x639f, 0xfec6, 0x0, 0x1);
        gbc.writeMem(0x4b6f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5b92);
        EXPECT(gbc.pc(), 0x4b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02F8
        gbc.setState(0x4c87, 0x39f0, 0x9f80, 0xc9f4, 0x9154, 0x8895, 0x1, 0x1);
        gbc.writeMem(0x4c87, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x39f0);
        EXPECT(gbc.pc(), 0x4c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 02F9
        gbc.setState(0xd75e, 0xc166, 0x7f00, 0x7255, 0x2d72, 0xdcab, 0x0, 0x1);
        gbc.writeMem(0xd75e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc166);
        EXPECT(gbc.pc(), 0xd75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd75e), 0x59);
        // 59 02FA
        gbc.setState(0x4684, 0xba9f, 0xbc30, 0x6709, 0xd3ab, 0x8964, 0x0, 0x1);
        gbc.writeMem(0x4684, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xba9f);
        EXPECT(gbc.pc(), 0x4685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02FB
        gbc.setState(0xdbbd, 0xb958, 0xc320, 0xadfe, 0x6bd9, 0x7eb2, 0x1, 0x0);
        gbc.writeMem(0xdbbd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb958);
        EXPECT(gbc.pc(), 0xdbbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbd), 0x59);
        // 59 02FC
        gbc.setState(0xd088, 0x3065, 0x1b10, 0x8a4a, 0x7c24, 0x773d, 0x1, 0x1);
        gbc.writeMem(0xd088, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3065);
        EXPECT(gbc.pc(), 0xd089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd088), 0x59);
        // 59 02FD
        gbc.setState(0xe8b3, 0xeef, 0xc100, 0xe459, 0x9a8, 0x5880, 0x1, 0x1);
        gbc.writeMem(0xe8b3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeef);
        EXPECT(gbc.pc(), 0xe8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8b3), 0x59);
        // 59 02FE
        gbc.setState(0x7476, 0xe335, 0x830, 0x597d, 0xfb4e, 0x2336, 0x0, 0x1);
        gbc.writeMem(0x7476, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe335);
        EXPECT(gbc.pc(), 0x7477);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 02FF
        gbc.setState(0x6a04, 0xa931, 0xb110, 0x51d6, 0x6b11, 0x836d, 0x1, 0x0);
        gbc.writeMem(0x6a04, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa931);
        EXPECT(gbc.pc(), 0x6a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0300
        gbc.setState(0x339f, 0xb103, 0x4700, 0xf616, 0xa8e9, 0xceff, 0x0, 0x1);
        gbc.writeMem(0x339f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb103);
        EXPECT(gbc.pc(), 0x33a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0301
        gbc.setState(0x9468, 0xccca, 0xb660, 0xf321, 0x3b5f, 0x7637, 0x1, 0x1);
        gbc.writeMem(0x9468, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xccca);
        EXPECT(gbc.pc(), 0x9469);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9468), 0x59);
        // 59 0302
        gbc.setState(0x77fa, 0xc436, 0x9e0, 0xe34c, 0x1dd9, 0x3a09, 0x1, 0x1);
        gbc.writeMem(0x77fa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc436);
        EXPECT(gbc.pc(), 0x77fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0303
        gbc.setState(0x6b2, 0xcf1d, 0xf020, 0xfb21, 0xfe2a, 0x99bb, 0x1, 0x1);
        gbc.writeMem(0x6b2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcf1d);
        EXPECT(gbc.pc(), 0x6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0304
        gbc.setState(0x7e9b, 0x43b5, 0x51e0, 0x7e55, 0x441a, 0xf8eb, 0x1, 0x1);
        gbc.writeMem(0x7e9b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x43b5);
        EXPECT(gbc.pc(), 0x7e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0306
        gbc.setState(0xec83, 0x3457, 0xdb00, 0x5f64, 0x6f22, 0x25b5, 0x1, 0x1);
        gbc.writeMem(0xec83, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x3457);
        EXPECT(gbc.pc(), 0xec84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec83), 0x59);
        // 59 0308
        gbc.setState(0x87fc, 0x929a, 0x7d10, 0x84c0, 0x1f2a, 0xff00, 0x0, 0x0);
        gbc.writeMem(0x87fc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x929a);
        EXPECT(gbc.pc(), 0x87fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87fc), 0x59);
        // 59 0309
        gbc.setState(0xaa52, 0x8090, 0x3d70, 0x7a2a, 0x2535, 0xd362, 0x0, 0x0);
        gbc.writeMem(0xaa52, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8090);
        EXPECT(gbc.pc(), 0xaa53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa52), 0x59);
        // 59 030A
        gbc.setState(0xdb6f, 0x5c94, 0x5050, 0x6bb4, 0x51e7, 0x391e, 0x1, 0x0);
        gbc.writeMem(0xdb6f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5c94);
        EXPECT(gbc.pc(), 0xdb70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb6f), 0x59);
        // 59 030B
        gbc.setState(0x8af5, 0x332e, 0xf6e0, 0x39df, 0xed0b, 0xb713, 0x1, 0x0);
        gbc.writeMem(0x8af5, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x332e);
        EXPECT(gbc.pc(), 0x8af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af5), 0x59);
        // 59 030C
        gbc.setState(0x1a39, 0xbbfb, 0x9ba0, 0x4259, 0x927, 0x1fd8, 0x0, 0x1);
        gbc.writeMem(0x1a39, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbbfb);
        EXPECT(gbc.pc(), 0x1a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 030D
        gbc.setState(0xcec1, 0x69b4, 0xe580, 0x2bcf, 0xecae, 0x3b04, 0x1, 0x1);
        gbc.writeMem(0xcec1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x69b4);
        EXPECT(gbc.pc(), 0xcec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec1), 0x59);
        // 59 030E
        gbc.setState(0x3b7a, 0xe95b, 0x9de0, 0x7384, 0xea90, 0xe9c1, 0x1, 0x0);
        gbc.writeMem(0x3b7a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe95b);
        EXPECT(gbc.pc(), 0x3b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 030F
        gbc.setState(0xc579, 0xc6f4, 0xdd90, 0x9fe2, 0xd740, 0x4f4a, 0x1, 0x0);
        gbc.writeMem(0xc579, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc6f4);
        EXPECT(gbc.pc(), 0xc57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc579), 0x59);
        // 59 0310
        gbc.setState(0x8d1b, 0x8694, 0x890, 0x9ad4, 0x747c, 0xe0f9, 0x1, 0x0);
        gbc.writeMem(0x8d1b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8694);
        EXPECT(gbc.pc(), 0x8d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d1b), 0x59);
        // 59 0311
        gbc.setState(0x6f42, 0x18d, 0xa00, 0x761d, 0x58f2, 0x7b31, 0x1, 0x1);
        gbc.writeMem(0x6f42, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x18d);
        EXPECT(gbc.pc(), 0x6f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0312
        gbc.setState(0x5c06, 0xcb3c, 0x2a50, 0xf02a, 0x1a40, 0xbe34, 0x1, 0x1);
        gbc.writeMem(0x5c06, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcb3c);
        EXPECT(gbc.pc(), 0x5c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0313
        gbc.setState(0xb2b4, 0x526c, 0xd280, 0x46a0, 0x13b7, 0x4512, 0x1, 0x1);
        gbc.writeMem(0xb2b4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x526c);
        EXPECT(gbc.pc(), 0xb2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b4), 0x59);
        // 59 0314
        gbc.setState(0xa74c, 0x853a, 0xfad0, 0x7f8c, 0xc2cc, 0x281f, 0x0, 0x1);
        gbc.writeMem(0xa74c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x853a);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa74c), 0x59);
        // 59 0315
        gbc.setState(0x24bc, 0x55b0, 0x68e0, 0x8ab3, 0x24d7, 0x1d91, 0x1, 0x0);
        gbc.writeMem(0x24bc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x55b0);
        EXPECT(gbc.pc(), 0x24bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0316
        gbc.setState(0xcfd7, 0x1761, 0xb230, 0xe6dd, 0xa417, 0xbbde, 0x0, 0x1);
        gbc.writeMem(0xcfd7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1761);
        EXPECT(gbc.pc(), 0xcfd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfd7), 0x59);
        // 59 0317
        gbc.setState(0x7e96, 0xa10, 0xe170, 0x11a9, 0x8ffa, 0x35ea, 0x0, 0x1);
        gbc.writeMem(0x7e96, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa10);
        EXPECT(gbc.pc(), 0x7e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0318
        gbc.setState(0xaafb, 0x4d94, 0x39f0, 0xb9ec, 0x1c3d, 0x4424, 0x1, 0x0);
        gbc.writeMem(0xaafb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4d94);
        EXPECT(gbc.pc(), 0xaafc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaafb), 0x59);
        // 59 0319
        gbc.setState(0xdd00, 0xd5c1, 0xdc70, 0x934c, 0xf81, 0xf5f, 0x1, 0x0);
        gbc.writeMem(0xdd00, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd5c1);
        EXPECT(gbc.pc(), 0xdd01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd00), 0x59);
        // 59 031A
        gbc.setState(0xef4c, 0x8bc4, 0x3bd0, 0x1ca4, 0x491a, 0x98a4, 0x0, 0x0);
        gbc.writeMem(0xef4c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8bc4);
        EXPECT(gbc.pc(), 0xef4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4c), 0x59);
        // 59 031B
        gbc.setState(0xc980, 0xbfd7, 0x6430, 0xeed4, 0xadbf, 0x53fa, 0x0, 0x1);
        gbc.writeMem(0xc980, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbfd7);
        EXPECT(gbc.pc(), 0xc981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc980), 0x59);
        // 59 031C
        gbc.setState(0x2107, 0xa626, 0x11b0, 0x9f50, 0x669d, 0x1e32, 0x1, 0x0);
        gbc.writeMem(0x2107, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa626);
        EXPECT(gbc.pc(), 0x2108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 031D
        gbc.setState(0x6dd2, 0x9df0, 0x5a0, 0xfbcd, 0xcf80, 0x4ec7, 0x1, 0x1);
        gbc.writeMem(0x6dd2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9df0);
        EXPECT(gbc.pc(), 0x6dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 031E
        gbc.setState(0x8a50, 0xefd2, 0x73c0, 0xa507, 0x4222, 0xc55e, 0x0, 0x0);
        gbc.writeMem(0x8a50, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xefd2);
        EXPECT(gbc.pc(), 0x8a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a50), 0x59);
        // 59 031F
        gbc.setState(0x56e8, 0x4b8f, 0xcb10, 0x1c44, 0x42a9, 0x914, 0x1, 0x0);
        gbc.writeMem(0x56e8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4b8f);
        EXPECT(gbc.pc(), 0x56e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0320
        gbc.setState(0x6e6f, 0x7253, 0x9d40, 0x8ed0, 0x41d7, 0x883b, 0x1, 0x0);
        gbc.writeMem(0x6e6f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7253);
        EXPECT(gbc.pc(), 0x6e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0321
        gbc.setState(0xeb40, 0x926c, 0x6930, 0xa70f, 0x588d, 0x83ab, 0x1, 0x0);
        gbc.writeMem(0xeb40, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x926c);
        EXPECT(gbc.pc(), 0xeb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb40), 0x59);
        // 59 0322
        gbc.setState(0x1726, 0x5dbd, 0xc510, 0x898c, 0xc18a, 0x1fb6, 0x0, 0x1);
        gbc.writeMem(0x1726, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x5dbd);
        EXPECT(gbc.pc(), 0x1727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0323
        gbc.setState(0x24de, 0x49cf, 0x5d30, 0xd10c, 0x8432, 0xd44a, 0x0, 0x1);
        gbc.writeMem(0x24de, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x49cf);
        EXPECT(gbc.pc(), 0x24df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0324
        gbc.setState(0xd2cc, 0x8b4e, 0x5f90, 0x2871, 0xa836, 0xf41f, 0x0, 0x0);
        gbc.writeMem(0xd2cc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8b4e);
        EXPECT(gbc.pc(), 0xd2cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cc), 0x59);
        // 59 0325
        gbc.setState(0xd09f, 0xa39c, 0x2080, 0x9f31, 0xa589, 0xbe48, 0x1, 0x0);
        gbc.writeMem(0xd09f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa39c);
        EXPECT(gbc.pc(), 0xd0a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd09f), 0x59);
        // 59 0326
        gbc.setState(0x61ce, 0xd044, 0x5a70, 0x4cda, 0x2406, 0xa613, 0x0, 0x1);
        gbc.writeMem(0x61ce, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd044);
        EXPECT(gbc.pc(), 0x61cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0327
        gbc.setState(0x9257, 0x14f8, 0x1a0, 0xa988, 0x67a6, 0x9f26, 0x1, 0x1);
        gbc.writeMem(0x9257, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x14f8);
        EXPECT(gbc.pc(), 0x9258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9257), 0x59);
        // 59 0328
        gbc.setState(0xa4df, 0x6dcd, 0xd400, 0xab98, 0x21d0, 0x45bd, 0x0, 0x0);
        gbc.writeMem(0xa4df, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x6dcd);
        EXPECT(gbc.pc(), 0xa4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4df), 0x59);
        // 59 0329
        gbc.setState(0xa3dd, 0x9173, 0x3f70, 0x9c8b, 0x8c69, 0xe4ea, 0x0, 0x1);
        gbc.writeMem(0xa3dd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9173);
        EXPECT(gbc.pc(), 0xa3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3dd), 0x59);
        // 59 032A
        gbc.setState(0x307d, 0x8c84, 0xf6d0, 0xf075, 0xb014, 0x1603, 0x0, 0x0);
        gbc.writeMem(0x307d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8c84);
        EXPECT(gbc.pc(), 0x307e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 032B
        gbc.setState(0xba0e, 0x55c, 0xe420, 0x7cd1, 0x5dfb, 0x6629, 0x0, 0x1);
        gbc.writeMem(0xba0e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x55c);
        EXPECT(gbc.pc(), 0xba0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba0e), 0x59);
        // 59 032C
        gbc.setState(0x627a, 0xb317, 0x9b80, 0xfa30, 0x6d5f, 0xb8fc, 0x1, 0x0);
        gbc.writeMem(0x627a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb317);
        EXPECT(gbc.pc(), 0x627b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 032D
        gbc.setState(0x4b24, 0xff20, 0x5060, 0xaf40, 0x5ff1, 0xdf49, 0x1, 0x0);
        gbc.writeMem(0x4b24, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xff20);
        EXPECT(gbc.pc(), 0x4b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 032F
        gbc.setState(0x15f1, 0x1f92, 0x54c0, 0xa61d, 0x4a05, 0xce63, 0x1, 0x1);
        gbc.writeMem(0x15f1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1f92);
        EXPECT(gbc.pc(), 0x15f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0330
        gbc.setState(0xa89, 0xe549, 0xee30, 0x745d, 0xa87b, 0xa578, 0x1, 0x1);
        gbc.writeMem(0xa89, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe549);
        EXPECT(gbc.pc(), 0xa8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0331
        gbc.setState(0x71b2, 0x22f6, 0x4380, 0xbe9a, 0x3e6c, 0x7541, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x22f6);
        EXPECT(gbc.pc(), 0x71b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0332
        gbc.setState(0xb1cf, 0xd266, 0x99a0, 0xd113, 0x2843, 0x85f9, 0x1, 0x1);
        gbc.writeMem(0xb1cf, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd266);
        EXPECT(gbc.pc(), 0xb1d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cf), 0x59);
        // 59 0333
        gbc.setState(0xe706, 0x3716, 0x1820, 0x6645, 0x56dc, 0xb25f, 0x0, 0x1);
        gbc.writeMem(0xe706, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3716);
        EXPECT(gbc.pc(), 0xe707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe706), 0x59);
        // 59 0334
        gbc.setState(0x351b, 0xb042, 0x4740, 0x9d67, 0x44c4, 0x5da4, 0x1, 0x1);
        gbc.writeMem(0x351b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb042);
        EXPECT(gbc.pc(), 0x351c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0336
        gbc.setState(0xdc32, 0xb0cd, 0x4200, 0x5bcf, 0xc1f9, 0xb657, 0x1, 0x1);
        gbc.writeMem(0xdc32, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb0cd);
        EXPECT(gbc.pc(), 0xdc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc32), 0x59);
        // 59 0337
        gbc.setState(0xdf58, 0xcd09, 0x1660, 0x5e19, 0xd4a0, 0xcff8, 0x1, 0x1);
        gbc.writeMem(0xdf58, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcd09);
        EXPECT(gbc.pc(), 0xdf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf58), 0x59);
        // 59 0338
        gbc.setState(0x2ab0, 0xea15, 0xda10, 0xa63c, 0xf5c1, 0xe93a, 0x0, 0x0);
        gbc.writeMem(0x2ab0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xea15);
        EXPECT(gbc.pc(), 0x2ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0339
        gbc.setState(0xa41, 0x369f, 0xd4b0, 0x5125, 0xb0cf, 0x2112, 0x1, 0x1);
        gbc.writeMem(0xa41, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x369f);
        EXPECT(gbc.pc(), 0xa42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 033A
        gbc.setState(0x30e8, 0xa850, 0x8ee0, 0xe361, 0xddff, 0xe999, 0x1, 0x0);
        gbc.writeMem(0x30e8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa850);
        EXPECT(gbc.pc(), 0x30e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 033B
        gbc.setState(0xac0c, 0xa8c9, 0x1740, 0xd986, 0x5b75, 0x12c9, 0x1, 0x1);
        gbc.writeMem(0xac0c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa8c9);
        EXPECT(gbc.pc(), 0xac0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0c), 0x59);
        // 59 033C
        gbc.setState(0x8b43, 0xdda8, 0xe410, 0x1be9, 0x9c37, 0x8c91, 0x0, 0x1);
        gbc.writeMem(0x8b43, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdda8);
        EXPECT(gbc.pc(), 0x8b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b43), 0x59);
        // 59 033D
        gbc.setState(0x4497, 0x28e8, 0xb100, 0x8c45, 0x3ef9, 0xaec0, 0x1, 0x1);
        gbc.writeMem(0x4497, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x28e8);
        EXPECT(gbc.pc(), 0x4498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 033E
        gbc.setState(0x1006, 0x2881, 0xe400, 0xdf05, 0xeaaf, 0x9d65, 0x0, 0x0);
        gbc.writeMem(0x1006, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2881);
        EXPECT(gbc.pc(), 0x1007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 033F
        gbc.setState(0x9798, 0x2702, 0x2270, 0x8bc5, 0xe96d, 0x75b5, 0x1, 0x1);
        gbc.writeMem(0x9798, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2702);
        EXPECT(gbc.pc(), 0x9799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9798), 0x59);
        // 59 0340
        gbc.setState(0x71cc, 0xdade, 0x80a0, 0xc0e4, 0xfc1f, 0xf75f, 0x0, 0x1);
        gbc.writeMem(0x71cc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xdade);
        EXPECT(gbc.pc(), 0x71cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0341
        gbc.setState(0x3253, 0xba06, 0x2160, 0x8a0c, 0x9080, 0x34f0, 0x0, 0x0);
        gbc.writeMem(0x3253, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xba06);
        EXPECT(gbc.pc(), 0x3254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0342
        gbc.setState(0xe374, 0xefc3, 0xe050, 0x9c17, 0x6350, 0x14f5, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xefc3);
        EXPECT(gbc.pc(), 0xe375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe374), 0x59);
        // 59 0343
        gbc.setState(0xcf7, 0x5c14, 0x67e0, 0x77c8, 0xd445, 0x7c48, 0x0, 0x1);
        gbc.writeMem(0xcf7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x5c14);
        EXPECT(gbc.pc(), 0xcf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0345
        gbc.setState(0x28e1, 0x68cb, 0x30d0, 0x5288, 0x8061, 0xaa8b, 0x0, 0x0);
        gbc.writeMem(0x28e1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x68cb);
        EXPECT(gbc.pc(), 0x28e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0346
        gbc.setState(0xcb9b, 0xa044, 0x1330, 0xdbdc, 0xcbef, 0x959, 0x0, 0x1);
        gbc.writeMem(0xcb9b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa044);
        EXPECT(gbc.pc(), 0xcb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb9b), 0x59);
        // 59 0347
        gbc.setState(0x2b81, 0x414f, 0x37c0, 0x5a5f, 0x51a2, 0xb881, 0x1, 0x0);
        gbc.writeMem(0x2b81, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x414f);
        EXPECT(gbc.pc(), 0x2b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0348
        gbc.setState(0x15b, 0x12e8, 0x3330, 0x5ad2, 0x8bb4, 0xad35, 0x0, 0x1);
        gbc.writeMem(0x15b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x12e8);
        EXPECT(gbc.pc(), 0x15c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0349
        gbc.setState(0xb5ee, 0x722a, 0x2310, 0xaf84, 0x4db6, 0x4756, 0x1, 0x1);
        gbc.writeMem(0xb5ee, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x722a);
        EXPECT(gbc.pc(), 0xb5ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ee), 0x59);
        // 59 034A
        gbc.setState(0xad01, 0x6432, 0x4150, 0xa83c, 0xc5a3, 0x5f09, 0x0, 0x0);
        gbc.writeMem(0xad01, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6432);
        EXPECT(gbc.pc(), 0xad02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad01), 0x59);
        // 59 034B
        gbc.setState(0x940d, 0x47c6, 0x5780, 0xc3ea, 0x84c1, 0x82ec, 0x1, 0x1);
        gbc.writeMem(0x940d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x47c6);
        EXPECT(gbc.pc(), 0x940e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940d), 0x59);
        // 59 034C
        gbc.setState(0x4389, 0x5df9, 0x2570, 0x3799, 0x34b7, 0x505c, 0x0, 0x0);
        gbc.writeMem(0x4389, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5df9);
        EXPECT(gbc.pc(), 0x438a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 034D
        gbc.setState(0xbb21, 0xa80d, 0x35e0, 0x1c81, 0x1a47, 0xd457, 0x0, 0x1);
        gbc.writeMem(0xbb21, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa80d);
        EXPECT(gbc.pc(), 0xbb22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb21), 0x59);
        // 59 034E
        gbc.setState(0xd12, 0x2b31, 0x5f80, 0x3d56, 0x7b45, 0xe408, 0x1, 0x1);
        gbc.writeMem(0xd12, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2b31);
        EXPECT(gbc.pc(), 0xd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 034F
        gbc.setState(0x4c38, 0x34e2, 0x75c0, 0xb771, 0x51e5, 0xee89, 0x0, 0x0);
        gbc.writeMem(0x4c38, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x34e2);
        EXPECT(gbc.pc(), 0x4c39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0350
        gbc.setState(0x181a, 0xf7c7, 0x930, 0xc532, 0xd50d, 0x4ad4, 0x0, 0x1);
        gbc.writeMem(0x181a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xf7c7);
        EXPECT(gbc.pc(), 0x181b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0351
        gbc.setState(0x3094, 0xde4, 0x9a0, 0xe729, 0xf6b1, 0xe8f5, 0x0, 0x1);
        gbc.writeMem(0x3094, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xde4);
        EXPECT(gbc.pc(), 0x3095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0352
        gbc.setState(0xe5f7, 0xb7, 0x8600, 0xf875, 0xc786, 0x1dc2, 0x0, 0x0);
        gbc.writeMem(0xe5f7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb7);
        EXPECT(gbc.pc(), 0xe5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f7), 0x59);
        // 59 0353
        gbc.setState(0x23fa, 0x523d, 0x6f30, 0x24e6, 0x8f02, 0x2dcf, 0x1, 0x1);
        gbc.writeMem(0x23fa, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x523d);
        EXPECT(gbc.pc(), 0x23fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0354
        gbc.setState(0xf1a, 0x1526, 0x2900, 0x171d, 0x4f3e, 0x761, 0x0, 0x1);
        gbc.writeMem(0xf1a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1526);
        EXPECT(gbc.pc(), 0xf1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0355
        gbc.setState(0x8747, 0xb48c, 0xc110, 0x1ec3, 0xc651, 0xc4de, 0x1, 0x1);
        gbc.writeMem(0x8747, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb48c);
        EXPECT(gbc.pc(), 0x8748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8747), 0x59);
        // 59 0356
        gbc.setState(0xd0b3, 0x68a1, 0x9030, 0xf11d, 0x52a5, 0xc092, 0x1, 0x0);
        gbc.writeMem(0xd0b3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x68a1);
        EXPECT(gbc.pc(), 0xd0b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b3), 0x59);
        // 59 0357
        gbc.setState(0x701d, 0x74e3, 0x3630, 0x7220, 0x5ddb, 0x4230, 0x0, 0x0);
        gbc.writeMem(0x701d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x74e3);
        EXPECT(gbc.pc(), 0x701e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0358
        gbc.setState(0xaf13, 0xd788, 0x9160, 0x226b, 0xaf4b, 0xeeb0, 0x0, 0x0);
        gbc.writeMem(0xaf13, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd788);
        EXPECT(gbc.pc(), 0xaf14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf13), 0x59);
        // 59 0359
        gbc.setState(0x5135, 0xe86a, 0x51f0, 0x4e5f, 0xe9d9, 0x7e57, 0x0, 0x0);
        gbc.writeMem(0x5135, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe86a);
        EXPECT(gbc.pc(), 0x5136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 035A
        gbc.setState(0x7ff1, 0xd47c, 0x1280, 0xfc7, 0xfa82, 0x19d8, 0x0, 0x0);
        gbc.writeMem(0x7ff1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd47c);
        EXPECT(gbc.pc(), 0x7ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 035B
        gbc.setState(0xb1cb, 0x5f2b, 0x5460, 0x64ba, 0x89cd, 0x2f3, 0x1, 0x0);
        gbc.writeMem(0xb1cb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5f2b);
        EXPECT(gbc.pc(), 0xb1cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1cb), 0x59);
        // 59 035C
        gbc.setState(0x8846, 0xf1a7, 0x8070, 0x1cc7, 0xa4a7, 0xb61e, 0x0, 0x0);
        gbc.writeMem(0x8846, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf1a7);
        EXPECT(gbc.pc(), 0x8847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8846), 0x59);
        // 59 035D
        gbc.setState(0x1329, 0x7462, 0x90d0, 0x3e13, 0x1b0e, 0xbc46, 0x0, 0x0);
        gbc.writeMem(0x1329, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7462);
        EXPECT(gbc.pc(), 0x132a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 035E
        gbc.setState(0x1a72, 0x1661, 0x9460, 0xf6e4, 0x323c, 0x255, 0x0, 0x0);
        gbc.writeMem(0x1a72, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1661);
        EXPECT(gbc.pc(), 0x1a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 035F
        gbc.setState(0x2d7c, 0x1717, 0x7660, 0xa13e, 0x6933, 0x7bc6, 0x1, 0x0);
        gbc.writeMem(0x2d7c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1717);
        EXPECT(gbc.pc(), 0x2d7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0360
        gbc.setState(0x3ae1, 0x697e, 0xdd40, 0x9e, 0xa4c6, 0x1bb1, 0x0, 0x0);
        gbc.writeMem(0x3ae1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x697e);
        EXPECT(gbc.pc(), 0x3ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0361
        gbc.setState(0x3d2, 0x3d10, 0x62b0, 0x5e7e, 0xe9d5, 0xe52a, 0x0, 0x1);
        gbc.writeMem(0x3d2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3d10);
        EXPECT(gbc.pc(), 0x3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0362
        gbc.setState(0x1350, 0xcf93, 0xccf0, 0xaf6b, 0xb49c, 0x426c, 0x0, 0x0);
        gbc.writeMem(0x1350, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcf93);
        EXPECT(gbc.pc(), 0x1351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0363
        gbc.setState(0x3b15, 0xf603, 0xe8f0, 0x25c7, 0x6c7d, 0x50c, 0x0, 0x1);
        gbc.writeMem(0x3b15, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf603);
        EXPECT(gbc.pc(), 0x3b16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0364
        gbc.setState(0xf0d, 0x7dfb, 0x9810, 0xb9ff, 0x1ca8, 0x839a, 0x1, 0x0);
        gbc.writeMem(0xf0d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7dfb);
        EXPECT(gbc.pc(), 0xf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0365
        gbc.setState(0x976e, 0x5fc1, 0xfb60, 0x2233, 0xffc3, 0x1b5b, 0x1, 0x0);
        gbc.writeMem(0x976e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5fc1);
        EXPECT(gbc.pc(), 0x976f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976e), 0x59);
        // 59 0366
        gbc.setState(0xa0f1, 0xf93b, 0xa540, 0x965f, 0xb1c1, 0xd0cb, 0x1, 0x0);
        gbc.writeMem(0xa0f1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf93b);
        EXPECT(gbc.pc(), 0xa0f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f1), 0x59);
        // 59 0367
        gbc.setState(0xd151, 0xf8d8, 0x8c10, 0xacbb, 0x4814, 0xcab8, 0x1, 0x0);
        gbc.writeMem(0xd151, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf8d8);
        EXPECT(gbc.pc(), 0xd152);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd151), 0x59);
        // 59 0368
        gbc.setState(0x7f1a, 0x319e, 0x6250, 0x6f7, 0xa965, 0x2aae, 0x0, 0x0);
        gbc.writeMem(0x7f1a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x319e);
        EXPECT(gbc.pc(), 0x7f1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0369
        gbc.setState(0xe6a7, 0x43af, 0x88d0, 0xfae1, 0xe53e, 0xbec3, 0x1, 0x0);
        gbc.writeMem(0xe6a7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x43af);
        EXPECT(gbc.pc(), 0xe6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a7), 0x59);
        // 59 036A
        gbc.setState(0x91eb, 0x5776, 0xd980, 0xf88f, 0x24dc, 0x3023, 0x0, 0x1);
        gbc.writeMem(0x91eb, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5776);
        EXPECT(gbc.pc(), 0x91ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91eb), 0x59);
        // 59 036B
        gbc.setState(0xd33e, 0xe008, 0x6e60, 0x99e1, 0xdbaf, 0x3594, 0x1, 0x1);
        gbc.writeMem(0xd33e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe008);
        EXPECT(gbc.pc(), 0xd33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33e), 0x59);
        // 59 036C
        gbc.setState(0x1966, 0xd27e, 0x7110, 0x1b29, 0xda08, 0x151d, 0x0, 0x1);
        gbc.writeMem(0x1966, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd27e);
        EXPECT(gbc.pc(), 0x1967);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 036D
        gbc.setState(0xad9, 0x5790, 0xb5d0, 0x78eb, 0xd43a, 0x9f7b, 0x1, 0x0);
        gbc.writeMem(0xad9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5790);
        EXPECT(gbc.pc(), 0xada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 036E
        gbc.setState(0x20f7, 0xd0f1, 0xa8a0, 0x1e65, 0x12cc, 0x4f65, 0x1, 0x1);
        gbc.writeMem(0x20f7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd0f1);
        EXPECT(gbc.pc(), 0x20f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 036F
        gbc.setState(0xa5a8, 0xacbb, 0x3d30, 0x6146, 0x2814, 0xed02, 0x0, 0x1);
        gbc.writeMem(0xa5a8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xacbb);
        EXPECT(gbc.pc(), 0xa5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a8), 0x59);
        // 59 0370
        gbc.setState(0x4bf7, 0x7e2b, 0xfbd0, 0x85ab, 0xe246, 0x8e21, 0x0, 0x1);
        gbc.writeMem(0x4bf7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7e2b);
        EXPECT(gbc.pc(), 0x4bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0371
        gbc.setState(0x1c6f, 0x48cc, 0x2550, 0xc1a5, 0x39c8, 0xc0ed, 0x0, 0x1);
        gbc.writeMem(0x1c6f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x48cc);
        EXPECT(gbc.pc(), 0x1c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0372
        gbc.setState(0x326b, 0x2c1e, 0xd7e0, 0x3207, 0x865c, 0xe513, 0x1, 0x0);
        gbc.writeMem(0x326b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2c1e);
        EXPECT(gbc.pc(), 0x326c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0373
        gbc.setState(0x6945, 0x547a, 0x6040, 0x82ef, 0x6fd5, 0xa44c, 0x1, 0x0);
        gbc.writeMem(0x6945, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x547a);
        EXPECT(gbc.pc(), 0x6946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0375
        gbc.setState(0x183, 0xb51a, 0x6900, 0xd301, 0x59f7, 0x9f77, 0x0, 0x1);
        gbc.writeMem(0x183, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb51a);
        EXPECT(gbc.pc(), 0x184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0376
        gbc.setState(0xa244, 0x2ed4, 0xafd0, 0x3467, 0x5356, 0xda0, 0x0, 0x0);
        gbc.writeMem(0xa244, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2ed4);
        EXPECT(gbc.pc(), 0xa245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa244), 0x59);
        // 59 0378
        gbc.setState(0x2c08, 0xcdb4, 0x14e0, 0x6f6e, 0x1bb, 0xf62, 0x0, 0x1);
        gbc.writeMem(0x2c08, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcdb4);
        EXPECT(gbc.pc(), 0x2c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 0379
        gbc.setState(0x48a1, 0x189, 0xa3e0, 0x91aa, 0x9e06, 0x75ec, 0x0, 0x1);
        gbc.writeMem(0x48a1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x189);
        EXPECT(gbc.pc(), 0x48a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 037A
        gbc.setState(0x53b3, 0x2f6a, 0xa480, 0x2e58, 0x7a67, 0xe613, 0x0, 0x0);
        gbc.writeMem(0x53b3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2f6a);
        EXPECT(gbc.pc(), 0x53b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 037B
        gbc.setState(0xdad6, 0x726e, 0xbbb0, 0xc846, 0xf255, 0x2c9f, 0x0, 0x0);
        gbc.writeMem(0xdad6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x726e);
        EXPECT(gbc.pc(), 0xdad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad6), 0x59);
        // 59 037C
        gbc.setState(0x7372, 0xdac4, 0xc20, 0x8a07, 0xdf68, 0x6992, 0x0, 0x0);
        gbc.writeMem(0x7372, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdac4);
        EXPECT(gbc.pc(), 0x7373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 037D
        gbc.setState(0xeced, 0xbb0a, 0xa850, 0xf90e, 0x117c, 0xc766, 0x0, 0x0);
        gbc.writeMem(0xeced, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbb0a);
        EXPECT(gbc.pc(), 0xecee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeced), 0x59);
        // 59 037E
        gbc.setState(0xe8cd, 0x2a02, 0xd490, 0x34dd, 0x5c6d, 0x9f3b, 0x1, 0x1);
        gbc.writeMem(0xe8cd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2a02);
        EXPECT(gbc.pc(), 0xe8ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8cd), 0x59);
        // 59 037F
        gbc.setState(0x4ef7, 0xffd7, 0x4990, 0xe386, 0xe28a, 0xde3c, 0x0, 0x1);
        gbc.writeMem(0x4ef7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xffd7);
        EXPECT(gbc.pc(), 0x4ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0380
        gbc.setState(0x3ccc, 0x7145, 0xbcb0, 0xdb59, 0xb677, 0x2744, 0x0, 0x0);
        gbc.writeMem(0x3ccc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7145);
        EXPECT(gbc.pc(), 0x3ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0381
        gbc.setState(0xb73, 0xb178, 0xe7f0, 0x1b17, 0x5978, 0x6a89, 0x1, 0x0);
        gbc.writeMem(0xb73, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb178);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 0382
        gbc.setState(0xb16f, 0x5b3d, 0x3cb0, 0xea9c, 0xa8c6, 0xcb22, 0x1, 0x0);
        gbc.writeMem(0xb16f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5b3d);
        EXPECT(gbc.pc(), 0xb170);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16f), 0x59);
        // 59 0383
        gbc.setState(0x3821, 0x3c23, 0xefd0, 0x757b, 0x44ed, 0x902e, 0x1, 0x0);
        gbc.writeMem(0x3821, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3c23);
        EXPECT(gbc.pc(), 0x3822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0384
        gbc.setState(0xc35e, 0x3699, 0x25c0, 0x8fda, 0xcb21, 0x84c8, 0x0, 0x1);
        gbc.writeMem(0xc35e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3699);
        EXPECT(gbc.pc(), 0xc35f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35e), 0x59);
        // 59 0385
        gbc.setState(0xd5a, 0xf6a8, 0x3b80, 0xc82f, 0xcdf8, 0x3cee, 0x1, 0x1);
        gbc.writeMem(0xd5a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xf6a8);
        EXPECT(gbc.pc(), 0xd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0386
        gbc.setState(0x427e, 0xfc2e, 0x9d00, 0x52fd, 0x2fa8, 0xec2f, 0x1, 0x1);
        gbc.writeMem(0x427e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfc2e);
        EXPECT(gbc.pc(), 0x427f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0387
        gbc.setState(0x366a, 0x1210, 0xc590, 0x4632, 0xa5a, 0xed09, 0x0, 0x1);
        gbc.writeMem(0x366a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1210);
        EXPECT(gbc.pc(), 0x366b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 0388
        gbc.setState(0xdcd1, 0x3cd7, 0x3ea0, 0x53ba, 0x8ad3, 0x773f, 0x0, 0x1);
        gbc.writeMem(0xdcd1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x3cd7);
        EXPECT(gbc.pc(), 0xdcd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcd1), 0x59);
        // 59 0389
        gbc.setState(0x7283, 0xb103, 0x23f0, 0x8a13, 0x5b73, 0xf4db, 0x1, 0x1);
        gbc.writeMem(0x7283, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb103);
        EXPECT(gbc.pc(), 0x7284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 038A
        gbc.setState(0xc464, 0x1b4, 0x76b0, 0x5fe, 0xefbe, 0x1f0f, 0x0, 0x0);
        gbc.writeMem(0xc464, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1b4);
        EXPECT(gbc.pc(), 0xc465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc464), 0x59);
        // 59 038B
        gbc.setState(0x43f8, 0xafed, 0xad60, 0x4b32, 0x362c, 0x1594, 0x0, 0x0);
        gbc.writeMem(0x43f8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xafed);
        EXPECT(gbc.pc(), 0x43f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 038C
        gbc.setState(0x97, 0xbfed, 0x1910, 0xeaa, 0x95e8, 0x3c24, 0x0, 0x1);
        gbc.writeMem(0x97, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbfed);
        EXPECT(gbc.pc(), 0x98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 038D
        gbc.setState(0x7641, 0x6571, 0xf5f0, 0x2e90, 0xe2eb, 0x455c, 0x0, 0x0);
        gbc.writeMem(0x7641, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0x7642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 038F
        gbc.setState(0xbae8, 0xcb31, 0xa2a0, 0xd7ac, 0xcc6d, 0x2125, 0x1, 0x1);
        gbc.writeMem(0xbae8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xcb31);
        EXPECT(gbc.pc(), 0xbae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae8), 0x59);
        // 59 0390
        gbc.setState(0xbd47, 0xe8a3, 0x7c30, 0x46bf, 0x3c0f, 0x38d0, 0x0, 0x0);
        gbc.writeMem(0xbd47, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe8a3);
        EXPECT(gbc.pc(), 0xbd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd47), 0x59);
        // 59 0391
        gbc.setState(0xac86, 0xec1c, 0x9cf0, 0x69e, 0x3c77, 0x27b4, 0x1, 0x1);
        gbc.writeMem(0xac86, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xec1c);
        EXPECT(gbc.pc(), 0xac87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac86), 0x59);
        // 59 0392
        gbc.setState(0xeed0, 0xd9c2, 0xd380, 0xbdbc, 0x3c44, 0x1b03, 0x1, 0x0);
        gbc.writeMem(0xeed0, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd9c2);
        EXPECT(gbc.pc(), 0xeed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed0), 0x59);
        // 59 0393
        gbc.setState(0xe6e1, 0x1595, 0x6c20, 0xd1c8, 0x5877, 0xcf97, 0x1, 0x0);
        gbc.writeMem(0xe6e1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1595);
        EXPECT(gbc.pc(), 0xe6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e1), 0x59);
        // 59 0394
        gbc.setState(0xd362, 0xc009, 0x2950, 0x948b, 0x96aa, 0x7378, 0x0, 0x1);
        gbc.writeMem(0xd362, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc009);
        EXPECT(gbc.pc(), 0xd363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd362), 0x59);
        // 59 0395
        gbc.setState(0xbded, 0x31d3, 0x2c30, 0xdcf9, 0xa3f, 0xe2e4, 0x0, 0x0);
        gbc.writeMem(0xbded, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x31d3);
        EXPECT(gbc.pc(), 0xbdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbded), 0x59);
        // 59 0396
        gbc.setState(0xd271, 0x1bc9, 0x5fa0, 0x1f59, 0x84d1, 0x39dd, 0x1, 0x0);
        gbc.writeMem(0xd271, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1bc9);
        EXPECT(gbc.pc(), 0xd272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd271), 0x59);
        // 59 0397
        gbc.setState(0x374f, 0xbebd, 0x4c80, 0x37c0, 0xae74, 0xa002, 0x0, 0x1);
        gbc.writeMem(0x374f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbebd);
        EXPECT(gbc.pc(), 0x3750);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 0398
        gbc.setState(0xe793, 0xb298, 0x5250, 0xe29e, 0x7b87, 0x9972, 0x1, 0x1);
        gbc.writeMem(0xe793, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb298);
        EXPECT(gbc.pc(), 0xe794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe793), 0x59);
        // 59 0399
        gbc.setState(0x9185, 0xef11, 0x6b80, 0x5926, 0x8b9, 0xa39f, 0x1, 0x1);
        gbc.writeMem(0x9185, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xef11);
        EXPECT(gbc.pc(), 0x9186);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9185), 0x59);
        // 59 039A
        gbc.setState(0x6835, 0x3f6e, 0xb780, 0xee88, 0x9d9b, 0xfa95, 0x1, 0x0);
        gbc.writeMem(0x6835, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3f6e);
        EXPECT(gbc.pc(), 0x6836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 039B
        gbc.setState(0xdb4e, 0x33ea, 0x8a0, 0x5860, 0x52e6, 0xda01, 0x1, 0x1);
        gbc.writeMem(0xdb4e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x33ea);
        EXPECT(gbc.pc(), 0xdb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4e), 0x59);
        // 59 039C
        gbc.setState(0xd2ec, 0x3bcc, 0x31d0, 0xbee4, 0x6f, 0xa1a, 0x0, 0x0);
        gbc.writeMem(0xd2ec, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3bcc);
        EXPECT(gbc.pc(), 0xd2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ec), 0x59);
        // 59 039D
        gbc.setState(0x9c44, 0x8e32, 0xb430, 0x1e2a, 0x275f, 0xf741, 0x1, 0x0);
        gbc.writeMem(0x9c44, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8e32);
        EXPECT(gbc.pc(), 0x9c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c44), 0x59);
        // 59 039F
        gbc.setState(0x431, 0xdbae, 0xd850, 0x7442, 0xb823, 0xa470, 0x0, 0x1);
        gbc.writeMem(0x431, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdbae);
        EXPECT(gbc.pc(), 0x432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03A0
        gbc.setState(0xeafe, 0xed9, 0xb6e0, 0x5133, 0x7c32, 0xb988, 0x1, 0x0);
        gbc.writeMem(0xeafe, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xed9);
        EXPECT(gbc.pc(), 0xeaff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeafe), 0x59);
        // 59 03A1
        gbc.setState(0x1af8, 0x2546, 0x5860, 0xde16, 0xd404, 0xafae, 0x1, 0x0);
        gbc.writeMem(0x1af8, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2546);
        EXPECT(gbc.pc(), 0x1af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03A2
        gbc.setState(0x4b18, 0x2bb3, 0xde20, 0x4f18, 0x302b, 0x81b7, 0x0, 0x1);
        gbc.writeMem(0x4b18, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2bb3);
        EXPECT(gbc.pc(), 0x4b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03A3
        gbc.setState(0x5f2e, 0x56a, 0xd40, 0xc8c1, 0xc680, 0x21, 0x1, 0x0);
        gbc.writeMem(0x5f2e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x56a);
        EXPECT(gbc.pc(), 0x5f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03A4
        gbc.setState(0xe21a, 0x72cc, 0x1da0, 0x3ae2, 0xe4ac, 0xa419, 0x0, 0x0);
        gbc.writeMem(0xe21a, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x72cc);
        EXPECT(gbc.pc(), 0xe21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21a), 0x59);
        // 59 03A5
        gbc.setState(0xecd1, 0x38ee, 0x50, 0xf6ae, 0xe71e, 0x94a, 0x0, 0x1);
        gbc.writeMem(0xecd1, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x38ee);
        EXPECT(gbc.pc(), 0xecd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd1), 0x59);
        // 59 03A6
        gbc.setState(0x46a2, 0x966c, 0x6990, 0xe377, 0x8f42, 0xb4e9, 0x1, 0x1);
        gbc.writeMem(0x46a2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x966c);
        EXPECT(gbc.pc(), 0x46a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03A7
        gbc.setState(0xd8ad, 0xef91, 0xbd40, 0x84c6, 0x9bbd, 0x75b6, 0x1, 0x0);
        gbc.writeMem(0xd8ad, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xef91);
        EXPECT(gbc.pc(), 0xd8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ad), 0x59);
        // 59 03A8
        gbc.setState(0xa36b, 0xaf3, 0x68b0, 0xc128, 0x2927, 0xfb3b, 0x1, 0x0);
        gbc.writeMem(0xa36b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xaf3);
        EXPECT(gbc.pc(), 0xa36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa36b), 0x59);
        // 59 03A9
        gbc.setState(0xb9bd, 0x24a1, 0xdea0, 0x4679, 0xd9a1, 0x7deb, 0x1, 0x0);
        gbc.writeMem(0xb9bd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x24a1);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9bd), 0x59);
        // 59 03AA
        gbc.setState(0xbe31, 0x921a, 0xa4f0, 0xef94, 0x80d1, 0xbf5b, 0x0, 0x1);
        gbc.writeMem(0xbe31, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x921a);
        EXPECT(gbc.pc(), 0xbe32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe31), 0x59);
        // 59 03AC
        gbc.setState(0x592, 0xf61e, 0xda60, 0xb1c3, 0x3f98, 0xa6c0, 0x0, 0x0);
        gbc.writeMem(0x592, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf61e);
        EXPECT(gbc.pc(), 0x593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03AD
        gbc.setState(0x4d6, 0xc259, 0x7140, 0x2ce1, 0x1b07, 0x4240, 0x1, 0x1);
        gbc.writeMem(0x4d6, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc259);
        EXPECT(gbc.pc(), 0x4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03AE
        gbc.setState(0x957e, 0x5e51, 0x7b40, 0xf82, 0xa297, 0x796d, 0x1, 0x0);
        gbc.writeMem(0x957e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5e51);
        EXPECT(gbc.pc(), 0x957f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957e), 0x59);
        // 59 03AF
        gbc.setState(0x1703, 0xfb89, 0x15d0, 0x1421, 0x4cca, 0x68aa, 0x1, 0x0);
        gbc.writeMem(0x1703, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfb89);
        EXPECT(gbc.pc(), 0x1704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03B0
        gbc.setState(0x493c, 0xe315, 0xf320, 0xc617, 0xc48a, 0x883b, 0x1, 0x0);
        gbc.writeMem(0x493c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe315);
        EXPECT(gbc.pc(), 0x493d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03B2
        gbc.setState(0x8b3f, 0x88c7, 0x71d0, 0xcd4b, 0xa58f, 0x11f3, 0x1, 0x1);
        gbc.writeMem(0x8b3f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x88c7);
        EXPECT(gbc.pc(), 0x8b40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3f), 0x59);
        // 59 03B3
        gbc.setState(0xe685, 0xd70c, 0x88d0, 0xbb14, 0x9a95, 0x56ec, 0x1, 0x0);
        gbc.writeMem(0xe685, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd70c);
        EXPECT(gbc.pc(), 0xe686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe685), 0x59);
        // 59 03B4
        gbc.setState(0x8359, 0x159c, 0x1740, 0xe37, 0xe10, 0x1a7c, 0x1, 0x0);
        gbc.writeMem(0x8359, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x159c);
        EXPECT(gbc.pc(), 0x835a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8359), 0x59);
        // 59 03B5
        gbc.setState(0x50f2, 0x3ad, 0x6460, 0x6275, 0x36dd, 0xe399, 0x0, 0x1);
        gbc.writeMem(0x50f2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3ad);
        EXPECT(gbc.pc(), 0x50f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03B6
        gbc.setState(0x7d1b, 0x8763, 0x4890, 0xa7a9, 0x1d92, 0xb57c, 0x1, 0x0);
        gbc.writeMem(0x7d1b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8763);
        EXPECT(gbc.pc(), 0x7d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03B7
        gbc.setState(0xee96, 0x3762, 0x41b0, 0x7819, 0x1b9b, 0xf720, 0x1, 0x1);
        gbc.writeMem(0xee96, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3762);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee96), 0x59);
        // 59 03B8
        gbc.setState(0x225b, 0x8bed, 0x850, 0x570c, 0xd377, 0x2b73, 0x1, 0x1);
        gbc.writeMem(0x225b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0x225c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03B9
        gbc.setState(0x83ec, 0x4388, 0x7e90, 0x3607, 0x22ff, 0x75e5, 0x0, 0x0);
        gbc.writeMem(0x83ec, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0x83ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ec), 0x59);
        // 59 03BA
        gbc.setState(0x8715, 0xfa6a, 0xe490, 0xc5a2, 0xb96d, 0x782c, 0x1, 0x1);
        gbc.writeMem(0x8715, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfa6a);
        EXPECT(gbc.pc(), 0x8716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8715), 0x59);
        // 59 03BB
        gbc.setState(0xa234, 0xab5f, 0xc560, 0xe711, 0xdbfe, 0x40db, 0x0, 0x1);
        gbc.writeMem(0xa234, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xab5f);
        EXPECT(gbc.pc(), 0xa235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa234), 0x59);
        // 59 03BC
        gbc.setState(0x4dbd, 0x8609, 0x1e60, 0x2e86, 0x4ecf, 0xcce7, 0x0, 0x0);
        gbc.writeMem(0x4dbd, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8609);
        EXPECT(gbc.pc(), 0x4dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03BD
        gbc.setState(0xdbb9, 0xca35, 0x6b70, 0x7ed1, 0xdf66, 0x37e4, 0x1, 0x0);
        gbc.writeMem(0xdbb9, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xca35);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb9), 0x59);
        // 59 03BE
        gbc.setState(0x79c4, 0x2d89, 0x2730, 0x508b, 0xcc16, 0xda22, 0x0, 0x1);
        gbc.writeMem(0x79c4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2d89);
        EXPECT(gbc.pc(), 0x79c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 03BF
        gbc.setState(0x3410, 0xaec1, 0x57e0, 0x7457, 0xc0c0, 0x11eb, 0x1, 0x1);
        gbc.writeMem(0x3410, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xaec1);
        EXPECT(gbc.pc(), 0x3411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03C0
        gbc.setState(0xb8d3, 0x2fcb, 0xff30, 0xfc9a, 0xf376, 0x7c2b, 0x0, 0x1);
        gbc.writeMem(0xb8d3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2fcb);
        EXPECT(gbc.pc(), 0xb8d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d3), 0x59);
        // 59 03C1
        gbc.setState(0x993d, 0x9843, 0xde40, 0x8795, 0x6a17, 0x8bc4, 0x0, 0x1);
        gbc.writeMem(0x993d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9843);
        EXPECT(gbc.pc(), 0x993e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993d), 0x59);
        // 59 03C2
        gbc.setState(0x9ded, 0xd756, 0x1260, 0xc895, 0x7010, 0xff5, 0x1, 0x1);
        gbc.writeMem(0x9ded, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd756);
        EXPECT(gbc.pc(), 0x9dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ded), 0x59);
        // 59 03C3
        gbc.setState(0xb317, 0xc8c6, 0x7b60, 0xe951, 0x3b33, 0xf90d, 0x0, 0x1);
        gbc.writeMem(0xb317, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc8c6);
        EXPECT(gbc.pc(), 0xb318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb317), 0x59);
        // 59 03C4
        gbc.setState(0x2562, 0x95da, 0xcd0, 0xd898, 0x6a24, 0x7c5f, 0x0, 0x0);
        gbc.writeMem(0x2562, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x95da);
        EXPECT(gbc.pc(), 0x2563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03C5
        gbc.setState(0x14a2, 0x6c39, 0xd0a0, 0x3c17, 0xadf1, 0x371e, 0x1, 0x0);
        gbc.writeMem(0x14a2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6c39);
        EXPECT(gbc.pc(), 0x14a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03C6
        gbc.setState(0x9b64, 0x6e1c, 0xa420, 0x4a13, 0x4f23, 0x87d5, 0x0, 0x1);
        gbc.writeMem(0x9b64, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6e1c);
        EXPECT(gbc.pc(), 0x9b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b64), 0x59);
        // 59 03C9
        gbc.setState(0x70ea, 0x3fa, 0xe7f0, 0x2c15, 0x2a83, 0xd76a, 0x1, 0x0);
        gbc.writeMem(0x70ea, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3fa);
        EXPECT(gbc.pc(), 0x70eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 03CA
        gbc.setState(0x7545, 0x319d, 0x2140, 0x2e3c, 0x698b, 0xcb6b, 0x1, 0x0);
        gbc.writeMem(0x7545, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x319d);
        EXPECT(gbc.pc(), 0x7546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03CB
        gbc.setState(0x6325, 0x3b9b, 0xaee0, 0xa381, 0xd1ef, 0x8569, 0x1, 0x1);
        gbc.writeMem(0x6325, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3b9b);
        EXPECT(gbc.pc(), 0x6326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03CC
        gbc.setState(0x63c3, 0x8b21, 0xae80, 0x8bab, 0x7ee8, 0x4b35, 0x0, 0x0);
        gbc.writeMem(0x63c3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8b21);
        EXPECT(gbc.pc(), 0x63c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03CD
        gbc.setState(0x608b, 0x4dc9, 0x9760, 0xdf0d, 0xddad, 0x930b, 0x1, 0x1);
        gbc.writeMem(0x608b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4dc9);
        EXPECT(gbc.pc(), 0x608c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03CE
        gbc.setState(0x6882, 0x8f6c, 0xf6d0, 0xa1c7, 0xf94, 0x2859, 0x1, 0x1);
        gbc.writeMem(0x6882, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8f6c);
        EXPECT(gbc.pc(), 0x6883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03CF
        gbc.setState(0xa4ab, 0xfb7a, 0xe9d0, 0x3314, 0xc22a, 0xa00a, 0x1, 0x1);
        gbc.writeMem(0xa4ab, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xfb7a);
        EXPECT(gbc.pc(), 0xa4ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ab), 0x59);
        // 59 03D0
        gbc.setState(0xda2b, 0x6640, 0x1930, 0x446, 0xf4f, 0x40e3, 0x1, 0x1);
        gbc.writeMem(0xda2b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x6640);
        EXPECT(gbc.pc(), 0xda2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda2b), 0x59);
        // 59 03D1
        gbc.setState(0x2581, 0xb4d, 0x190, 0xe39b, 0x6328, 0xb571, 0x0, 0x0);
        gbc.writeMem(0x2581, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xb4d);
        EXPECT(gbc.pc(), 0x2582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03D2
        gbc.setState(0x227e, 0x98b8, 0x3850, 0xc366, 0x8af0, 0xf647, 0x1, 0x0);
        gbc.writeMem(0x227e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x98b8);
        EXPECT(gbc.pc(), 0x227f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03D3
        gbc.setState(0x5c7, 0xb0, 0xe440, 0x82ca, 0x364d, 0xea8a, 0x1, 0x1);
        gbc.writeMem(0x5c7, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb0);
        EXPECT(gbc.pc(), 0x5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03D4
        gbc.setState(0x445d, 0x6f15, 0x2c80, 0x9951, 0x8cec, 0x5675, 0x0, 0x1);
        gbc.writeMem(0x445d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6f15);
        EXPECT(gbc.pc(), 0x445e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03D5
        gbc.setState(0x753f, 0x4c93, 0x790, 0xe009, 0x7e55, 0x4f14, 0x0, 0x1);
        gbc.writeMem(0x753f, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4c93);
        EXPECT(gbc.pc(), 0x7540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03D6
        gbc.setState(0x9a4c, 0xbff2, 0x7130, 0x6c92, 0xdbd2, 0x9f3f, 0x1, 0x0);
        gbc.writeMem(0x9a4c, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbff2);
        EXPECT(gbc.pc(), 0x9a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4c), 0x59);
        // 59 03D7
        gbc.setState(0x864b, 0x6acf, 0x6450, 0x5a67, 0xbe73, 0x11c, 0x1, 0x1);
        gbc.writeMem(0x864b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6acf);
        EXPECT(gbc.pc(), 0x864c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x864b), 0x59);
        // 59 03D8
        gbc.setState(0x356d, 0x5f01, 0x2e20, 0x58dc, 0xaf1, 0x1656, 0x0, 0x0);
        gbc.writeMem(0x356d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5f01);
        EXPECT(gbc.pc(), 0x356e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03D9
        gbc.setState(0x1195, 0xef7d, 0x6bf0, 0x6542, 0xa18f, 0x1b42, 0x0, 0x0);
        gbc.writeMem(0x1195, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xef7d);
        EXPECT(gbc.pc(), 0x1196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 03DA
        gbc.setState(0x7513, 0x856c, 0x1fb0, 0x8312, 0x147f, 0xbd06, 0x1, 0x0);
        gbc.writeMem(0x7513, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x856c);
        EXPECT(gbc.pc(), 0x7514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 03DB
        gbc.setState(0x6ada, 0x6e27, 0xfc80, 0x8d7f, 0x1a7, 0xc4b9, 0x1, 0x0);
        gbc.writeMem(0x6ada, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6e27);
        EXPECT(gbc.pc(), 0x6adb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03DD
        gbc.setState(0x9436, 0xcd5a, 0x12f0, 0xbc89, 0x9704, 0xeb4, 0x1, 0x0);
        gbc.writeMem(0x9436, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xcd5a);
        EXPECT(gbc.pc(), 0x9437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9436), 0x59);
        // 59 03DE
        gbc.setState(0x6553, 0x1785, 0xcc30, 0xc4f7, 0xbac0, 0x1579, 0x1, 0x0);
        gbc.writeMem(0x6553, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1785);
        EXPECT(gbc.pc(), 0x6554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 59 03DF
        gbc.setState(0xac6e, 0xf899, 0xabb0, 0xd0c4, 0x3495, 0x5d75, 0x1, 0x0);
        gbc.writeMem(0xac6e, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf899);
        EXPECT(gbc.pc(), 0xac6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6e), 0x59);
        // 59 03E0
        gbc.setState(0x6af, 0x5a2b, 0x2e0, 0xed3f, 0x28cd, 0x2d3e, 0x0, 0x1);
        gbc.writeMem(0x6af, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5a2b);
        EXPECT(gbc.pc(), 0x6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03E1
        gbc.setState(0x8a7b, 0x4f5c, 0x51e0, 0x5b91, 0xa707, 0x7f54, 0x0, 0x1);
        gbc.writeMem(0x8a7b, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4f5c);
        EXPECT(gbc.pc(), 0x8a7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7b), 0x59);
        // 59 03E2
        gbc.setState(0x7b8d, 0xc458, 0xeb60, 0xa691, 0xa26b, 0xa4f4, 0x1, 0x1);
        gbc.writeMem(0x7b8d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc458);
        EXPECT(gbc.pc(), 0x7b8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 59 03E3
        gbc.setState(0x62d, 0x43db, 0x4a90, 0xa1a4, 0x4e5d, 0xd0a2, 0x1, 0x0);
        gbc.writeMem(0x62d, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x43db);
        EXPECT(gbc.pc(), 0x62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 59 03E4
        gbc.setState(0x8ab2, 0x530e, 0x72c0, 0x8271, 0xa30c, 0x7dd7, 0x1, 0x1);
        gbc.writeMem(0x8ab2, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x530e);
        EXPECT(gbc.pc(), 0x8ab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab2), 0x59);
        // 59 03E5
        gbc.setState(0x71d4, 0xf3c3, 0xd800, 0x9549, 0xb277, 0xd50c, 0x0, 0x1);
        gbc.writeMem(0x71d4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf3c3);
        EXPECT(gbc.pc(), 0x71d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 59 03E6
        gbc.setState(0xd3dc, 0x5764, 0x9380, 0x4ab1, 0x6837, 0x596c, 0x0, 0x1);
        gbc.writeMem(0xd3dc, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5764);
        EXPECT(gbc.pc(), 0xd3dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3dc), 0x59);
        // 59 03E7
        gbc.setState(0x4216, 0x3f1e, 0x51e0, 0x888d, 0x3b1d, 0x1e73, 0x1, 0x1);
        gbc.writeMem(0x4216, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3f1e);
        EXPECT(gbc.pc(), 0x4217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
