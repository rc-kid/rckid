    TEST(gbcemu, opcode_ac) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // AC 0000
        gbc.setState(0x238b, 0x217, 0xc900, 0xa45f, 0x2fe9, 0x4c54, 0x1, 0x0);
        gbc.writeMem(0x238b, { 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x217, gbc.sp());
        EXPECT(0x238c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0001
        gbc.setState(0xd9b1, 0xac6e, 0xde10, 0xf2ad, 0xa3fc, 0x8b4c, 0x1, 0x1);
        gbc.writeMem(0xd9b1, { 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xac6e, gbc.sp());
        EXPECT(0xd9b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd9b1));
        // AC 0002
        gbc.setState(0x8db2, 0xc5a1, 0x370, 0x8df0, 0x95b0, 0x36a1, 0x1, 0x1);
        gbc.writeMem(0x8db2, { 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc5a1, gbc.sp());
        EXPECT(0x8db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8db2));
        // AC 0003
        gbc.setState(0x4743, 0xcb7b, 0x3030, 0xe5be, 0x9a26, 0xd4cc, 0x1, 0x1);
        gbc.writeMem(0x4743, { 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcb7b, gbc.sp());
        EXPECT(0x4744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0004
        gbc.setState(0xe626, 0x535d, 0x7c40, 0xefbb, 0x927a, 0x613a, 0x1, 0x1);
        gbc.writeMem(0xe626, { 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x535d, gbc.sp());
        EXPECT(0xe627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe626));
        // AC 0005
        gbc.setState(0xb324, 0x96c, 0x5400, 0x218f, 0x48b3, 0xfd43, 0x0, 0x1);
        gbc.writeMem(0xb324, { 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x96c, gbc.sp());
        EXPECT(0xb325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb324));
        // AC 0006
        gbc.setState(0x5c11, 0xa68e, 0x5120, 0x6fa4, 0xd665, 0xcb4b, 0x1, 0x0);
        gbc.writeMem(0x5c11, { 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa68e, gbc.sp());
        EXPECT(0x5c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0007
        gbc.setState(0xd209, 0x858f, 0x28f0, 0xeb80, 0xb3ec, 0x8e98, 0x1, 0x0);
        gbc.writeMem(0xd209, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x858f, gbc.sp());
        EXPECT(0xd20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd209));
        // AC 0008
        gbc.setState(0x680b, 0x5501, 0x3850, 0x97c5, 0xea46, 0xf497, 0x1, 0x0);
        gbc.writeMem(0x680b, { 0xac });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0x680c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0009
        gbc.setState(0x3e32, 0xaac4, 0x46d0, 0xf600, 0xb152, 0x839e, 0x0, 0x0);
        gbc.writeMem(0x3e32, { 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xaac4, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 000A
        gbc.setState(0x931c, 0xb995, 0x4a90, 0x80a5, 0x287e, 0xc11, 0x0, 0x1);
        gbc.writeMem(0x931c, { 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb995, gbc.sp());
        EXPECT(0x931d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x931c));
        // AC 000B
        gbc.setState(0x9e11, 0x88fb, 0xcbb0, 0xb3fa, 0xae67, 0x66a, 0x1, 0x0);
        gbc.writeMem(0x9e11, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0x9e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9e11));
        // AC 000C
        gbc.setState(0xc274, 0xc029, 0x6780, 0xf33b, 0x3099, 0x5934, 0x1, 0x1);
        gbc.writeMem(0xc274, { 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc274));
        // AC 000D
        gbc.setState(0x217f, 0xf981, 0xc180, 0x444b, 0x1964, 0x57a1, 0x0, 0x1);
        gbc.writeMem(0x217f, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0x2180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 000E
        gbc.setState(0xea0a, 0xec17, 0xc530, 0xb35c, 0x5dd2, 0x9a5b, 0x1, 0x1);
        gbc.writeMem(0xea0a, { 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xec17, gbc.sp());
        EXPECT(0xea0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xea0a));
        // AC 0010
        gbc.setState(0x93b1, 0x2510, 0x2490, 0x1d8a, 0xe646, 0xb479, 0x0, 0x0);
        gbc.writeMem(0x93b1, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2510, gbc.sp());
        EXPECT(0x93b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x93b1));
        // AC 0011
        gbc.setState(0x954e, 0xbe76, 0xa480, 0xbff9, 0xd7c, 0xdbf5, 0x0, 0x1);
        gbc.writeMem(0x954e, { 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe76, gbc.sp());
        EXPECT(0x954f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x954e));
        // AC 0012
        gbc.setState(0xc08e, 0x60ee, 0x3090, 0xe6af, 0x1d0e, 0x18f6, 0x0, 0x1);
        gbc.writeMem(0xc08e, { 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x60ee, gbc.sp());
        EXPECT(0xc08f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc08e));
        // AC 0013
        gbc.setState(0x191e, 0xf8ec, 0x6f30, 0x696d, 0x68b5, 0x9ec8, 0x0, 0x0);
        gbc.writeMem(0x191e, { 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0x191f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0014
        gbc.setState(0x988, 0x40e1, 0xa420, 0x36da, 0x3ba7, 0x8676, 0x1, 0x1);
        gbc.writeMem(0x988, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0x989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0015
        gbc.setState(0xe1ab, 0xa88c, 0x990, 0x93f6, 0x56b5, 0x655, 0x1, 0x1);
        gbc.writeMem(0xe1ab, { 0xac });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa88c, gbc.sp());
        EXPECT(0xe1ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe1ab));
        // AC 0016
        gbc.setState(0x94ed, 0xd9f1, 0xe2d0, 0x1890, 0xb0de, 0x7868, 0x1, 0x0);
        gbc.writeMem(0x94ed, { 0xac });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd9f1, gbc.sp());
        EXPECT(0x94ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x94ed));
        // AC 0017
        gbc.setState(0xc174, 0xa1d0, 0xea60, 0xfc0d, 0x43e, 0x2302, 0x0, 0x1);
        gbc.writeMem(0xc174, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa1d0, gbc.sp());
        EXPECT(0xc175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc174));
        // AC 0018
        gbc.setState(0xd6f3, 0x9c5f, 0xd2f0, 0xc8f1, 0x963c, 0x236c, 0x1, 0x1);
        gbc.writeMem(0xd6f3, { 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9c5f, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd6f3));
        // AC 0019
        gbc.setState(0xc577, 0x1720, 0xce30, 0xb9cf, 0x3d0d, 0x318d, 0x0, 0x1);
        gbc.writeMem(0xc577, { 0xac });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1720, gbc.sp());
        EXPECT(0xc578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc577));
        // AC 001A
        gbc.setState(0x40a6, 0x3937, 0x2b60, 0xe511, 0xaf2d, 0x8908, 0x0, 0x0);
        gbc.writeMem(0x40a6, { 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3937, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 001B
        gbc.setState(0x7651, 0x4dd, 0x5dd0, 0x827, 0x7eb3, 0x24b5, 0x1, 0x0);
        gbc.writeMem(0x7651, { 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4dd, gbc.sp());
        EXPECT(0x7652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 001C
        gbc.setState(0x7ade, 0x5c6b, 0x8770, 0xae48, 0xe0eb, 0x8956, 0x1, 0x1);
        gbc.writeMem(0x7ade, { 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5c6b, gbc.sp());
        EXPECT(0x7adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 001D
        gbc.setState(0x9beb, 0x85a1, 0x7370, 0xe43f, 0xc9e1, 0xb056, 0x1, 0x1);
        gbc.writeMem(0x9beb, { 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x85a1, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9beb));
        // AC 001E
        gbc.setState(0xa453, 0x8f2b, 0xc0e0, 0x42b7, 0x7345, 0x3369, 0x1, 0x0);
        gbc.writeMem(0xa453, { 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8f2b, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa453));
        // AC 001F
        gbc.setState(0xe543, 0xe845, 0xc200, 0x65f7, 0x7c41, 0x7479, 0x1, 0x1);
        gbc.writeMem(0xe543, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe845, gbc.sp());
        EXPECT(0xe544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe543));
        // AC 0020
        gbc.setState(0x17e1, 0x4004, 0x2820, 0x87fc, 0xb260, 0xce86, 0x1, 0x0);
        gbc.writeMem(0x17e1, { 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4004, gbc.sp());
        EXPECT(0x17e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0021
        gbc.setState(0x49c5, 0x37ec, 0xe300, 0x7d6f, 0x4b2a, 0x7737, 0x1, 0x1);
        gbc.writeMem(0x49c5, { 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x37ec, gbc.sp());
        EXPECT(0x49c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0022
        gbc.setState(0x97d7, 0xe3a4, 0x9900, 0x21d7, 0x820b, 0x50de, 0x1, 0x1);
        gbc.writeMem(0x97d7, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe3a4, gbc.sp());
        EXPECT(0x97d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x97d7));
        // AC 0023
        gbc.setState(0xc06e, 0x5f14, 0x9db0, 0xba9a, 0xbff0, 0x24fe, 0x1, 0x1);
        gbc.writeMem(0xc06e, { 0xac });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5f14, gbc.sp());
        EXPECT(0xc06f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc06e));
        // AC 0024
        gbc.setState(0xd15, 0x4eee, 0x83c0, 0x3f05, 0x7175, 0xb4d2, 0x1, 0x0);
        gbc.writeMem(0xd15, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4eee, gbc.sp());
        EXPECT(0xd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0025
        gbc.setState(0x134e, 0xf25, 0x5b0, 0x907c, 0x8a28, 0xfb8f, 0x0, 0x0);
        gbc.writeMem(0x134e, { 0xac });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf25, gbc.sp());
        EXPECT(0x134f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0026
        gbc.setState(0x1d9f, 0x856, 0xd6d0, 0xb858, 0x1a29, 0x65d9, 0x1, 0x1);
        gbc.writeMem(0x1d9f, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x856, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0027
        gbc.setState(0xb7a0, 0xaa9, 0x3bd0, 0xe1cf, 0x1cc9, 0xd5a7, 0x1, 0x1);
        gbc.writeMem(0xb7a0, { 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb7a0));
        // AC 0029
        gbc.setState(0xd048, 0x11d1, 0xf830, 0x54e5, 0xa47e, 0xd962, 0x1, 0x1);
        gbc.writeMem(0xd048, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x11d1, gbc.sp());
        EXPECT(0xd049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd048));
        // AC 002A
        gbc.setState(0x1086, 0x6b9e, 0x5ef0, 0x4bc0, 0x81e0, 0xab5, 0x1, 0x0);
        gbc.writeMem(0x1086, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6b9e, gbc.sp());
        EXPECT(0x1087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 002B
        gbc.setState(0xeaba, 0xaed2, 0x3400, 0x2740, 0x165b, 0xe257, 0x1, 0x1);
        gbc.writeMem(0xeaba, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaed2, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xeaba));
        // AC 002C
        gbc.setState(0x8c52, 0x20ce, 0xdfb0, 0xe15, 0x54b9, 0xd3f3, 0x0, 0x1);
        gbc.writeMem(0x8c52, { 0xac });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x20ce, gbc.sp());
        EXPECT(0x8c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8c52));
        // AC 002D
        gbc.setState(0xe11, 0x9cb8, 0xae30, 0x7cc4, 0x4147, 0xc625, 0x0, 0x1);
        gbc.writeMem(0xe11, { 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9cb8, gbc.sp());
        EXPECT(0xe12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 002E
        gbc.setState(0x3acc, 0xaf1e, 0xe8d0, 0xec1e, 0x505a, 0x812, 0x1, 0x1);
        gbc.writeMem(0x3acc, { 0xac });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaf1e, gbc.sp());
        EXPECT(0x3acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 002F
        gbc.setState(0xadf, 0x6de6, 0x68b0, 0x78e4, 0xf3fc, 0x102b, 0x1, 0x0);
        gbc.writeMem(0xadf, { 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6de6, gbc.sp());
        EXPECT(0xae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0030
        gbc.setState(0x5a33, 0x2dba, 0x5190, 0x57b8, 0xef78, 0xdf64, 0x0, 0x1);
        gbc.writeMem(0x5a33, { 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2dba, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0031
        gbc.setState(0x32c, 0x782, 0x6cd0, 0x4f36, 0xdbff, 0xca99, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0x32d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0032
        gbc.setState(0x498, 0x65f2, 0x6690, 0xf80, 0x8082, 0x4f0f, 0x0, 0x1);
        gbc.writeMem(0x498, { 0xac });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0033
        gbc.setState(0x5f57, 0x7bae, 0x82a0, 0xd336, 0xdcf9, 0xed94, 0x1, 0x1);
        gbc.writeMem(0x5f57, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7bae, gbc.sp());
        EXPECT(0x5f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0034
        gbc.setState(0x5c22, 0x4ea6, 0xa5d0, 0xd674, 0xad48, 0xa43a, 0x1, 0x1);
        gbc.writeMem(0x5c22, { 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4ea6, gbc.sp());
        EXPECT(0x5c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0035
        gbc.setState(0x8e9c, 0x55b4, 0x2300, 0x3328, 0x6767, 0x679c, 0x1, 0x1);
        gbc.writeMem(0x8e9c, { 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x55b4, gbc.sp());
        EXPECT(0x8e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8e9c));
        // AC 0036
        gbc.setState(0x217b, 0x8192, 0x5840, 0xe87c, 0xd770, 0xcff4, 0x1, 0x1);
        gbc.writeMem(0x217b, { 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8192, gbc.sp());
        EXPECT(0x217c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0037
        gbc.setState(0x9149, 0x75f2, 0x1610, 0xfc0f, 0xb158, 0x2596, 0x1, 0x0);
        gbc.writeMem(0x9149, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x75f2, gbc.sp());
        EXPECT(0x914a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9149));
        // AC 0038
        gbc.setState(0xa163, 0x1f29, 0x3ad0, 0x6731, 0x6934, 0x36b2, 0x0, 0x0);
        gbc.writeMem(0xa163, { 0xac });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1f29, gbc.sp());
        EXPECT(0xa164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa163));
        // AC 0039
        gbc.setState(0x292, 0x639e, 0xe70, 0xded, 0x22dc, 0x835c, 0x0, 0x1);
        gbc.writeMem(0x292, { 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x639e, gbc.sp());
        EXPECT(0x293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 003A
        gbc.setState(0xc8a5, 0x29c, 0x4540, 0x3d25, 0x38b2, 0x7737, 0x1, 0x1);
        gbc.writeMem(0xc8a5, { 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x29c, gbc.sp());
        EXPECT(0xc8a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc8a5));
        // AC 003B
        gbc.setState(0x5acd, 0x477, 0x5970, 0xfa16, 0x6547, 0x7877, 0x1, 0x0);
        gbc.writeMem(0x5acd, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x477, gbc.sp());
        EXPECT(0x5ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 003C
        gbc.setState(0xc10, 0x1b61, 0xc00, 0x9674, 0xb789, 0x502e, 0x1, 0x1);
        gbc.writeMem(0xc10, { 0xac });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1b61, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 003D
        gbc.setState(0x3d8b, 0xf145, 0x7ae0, 0x482b, 0xcf8e, 0x4a7b, 0x1, 0x0);
        gbc.writeMem(0x3d8b, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf145, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 003F
        gbc.setState(0x53b5, 0x4376, 0xcb10, 0x685a, 0x818b, 0x2d37, 0x1, 0x1);
        gbc.writeMem(0x53b5, { 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4376, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0040
        gbc.setState(0xd634, 0x150f, 0x39b0, 0x4cf0, 0xaacb, 0x8440, 0x0, 0x1);
        gbc.writeMem(0xd634, { 0xac });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x150f, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd634));
        // AC 0041
        gbc.setState(0x2ed0, 0x4f28, 0x2570, 0x79c0, 0x5e7f, 0xe3f1, 0x0, 0x1);
        gbc.writeMem(0x2ed0, { 0xac });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4f28, gbc.sp());
        EXPECT(0x2ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0042
        gbc.setState(0x4ed8, 0x8bd8, 0xe370, 0x18f0, 0xf112, 0x7033, 0x1, 0x1);
        gbc.writeMem(0x4ed8, { 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8bd8, gbc.sp());
        EXPECT(0x4ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0043
        gbc.setState(0x25a5, 0x437c, 0xe500, 0x9d11, 0xf6ad, 0xaeca, 0x0, 0x0);
        gbc.writeMem(0x25a5, { 0xac });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x25a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0044
        gbc.setState(0xcf1a, 0x7849, 0xf420, 0x21c8, 0x9844, 0x7963, 0x1, 0x0);
        gbc.writeMem(0xcf1a, { 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7849, gbc.sp());
        EXPECT(0xcf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcf1a));
        // AC 0045
        gbc.setState(0xd99a, 0x613, 0x58e0, 0x9ba4, 0xce9c, 0x4b91, 0x0, 0x0);
        gbc.writeMem(0xd99a, { 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x613, gbc.sp());
        EXPECT(0xd99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd99a));
        // AC 0046
        gbc.setState(0x547a, 0x9f2c, 0x3fa0, 0xaa8, 0x412, 0x6686, 0x1, 0x0);
        gbc.writeMem(0x547a, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0x547b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0047
        gbc.setState(0x306b, 0xf64f, 0xa610, 0x6996, 0xc21f, 0xba06, 0x1, 0x0);
        gbc.writeMem(0x306b, { 0xac });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf64f, gbc.sp());
        EXPECT(0x306c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0048
        gbc.setState(0x9e65, 0xc9c5, 0xd1b0, 0xf90e, 0x7829, 0x2441, 0x0, 0x1);
        gbc.writeMem(0x9e65, { 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc9c5, gbc.sp());
        EXPECT(0x9e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9e65));
        // AC 004A
        gbc.setState(0x2e20, 0x1f5f, 0x4a40, 0xd3fa, 0x11d2, 0x42fc, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 004B
        gbc.setState(0x78a7, 0x246d, 0x5200, 0xd600, 0x5e0b, 0x27b4, 0x1, 0x0);
        gbc.writeMem(0x78a7, { 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x246d, gbc.sp());
        EXPECT(0x78a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 004C
        gbc.setState(0xd7e1, 0x6dd, 0xc600, 0xe9ce, 0x8223, 0x7100, 0x0, 0x0);
        gbc.writeMem(0xd7e1, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6dd, gbc.sp());
        EXPECT(0xd7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd7e1));
        // AC 004D
        gbc.setState(0x4e6a, 0xe1fb, 0x72d0, 0x3889, 0xfe, 0xd48f, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe1fb, gbc.sp());
        EXPECT(0x4e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 004E
        gbc.setState(0xea55, 0x771c, 0x3b50, 0x7b, 0x7bdc, 0x30fa, 0x0, 0x0);
        gbc.writeMem(0xea55, { 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x771c, gbc.sp());
        EXPECT(0xea56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xea55));
        // AC 004F
        gbc.setState(0x5df4, 0xf6e2, 0x4ec0, 0xacae, 0x4bdd, 0x94ad, 0x0, 0x1);
        gbc.writeMem(0x5df4, { 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf6e2, gbc.sp());
        EXPECT(0x5df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0050
        gbc.setState(0x7f4, 0xa695, 0x57a0, 0x9263, 0x149d, 0xaee5, 0x0, 0x1);
        gbc.writeMem(0x7f4, { 0xac });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa695, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0051
        gbc.setState(0x2912, 0x1771, 0x9410, 0x53d3, 0xf33e, 0x1fb3, 0x0, 0x1);
        gbc.writeMem(0x2912, { 0xac });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0x2913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0052
        gbc.setState(0xdb69, 0xf97, 0x3970, 0x5d8e, 0x2276, 0xe29a, 0x1, 0x0);
        gbc.writeMem(0xdb69, { 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0xdb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdb69));
        // AC 0054
        gbc.setState(0x213d, 0x3cf1, 0xdd0, 0xd1d1, 0x7797, 0xfcb0, 0x0, 0x1);
        gbc.writeMem(0x213d, { 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3cf1, gbc.sp());
        EXPECT(0x213e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0055
        gbc.setState(0x55be, 0x359a, 0x8850, 0x60aa, 0xca06, 0xc05, 0x0, 0x1);
        gbc.writeMem(0x55be, { 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x359a, gbc.sp());
        EXPECT(0x55bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0056
        gbc.setState(0x3343, 0x8067, 0x6bc0, 0x945b, 0x91bb, 0x3613, 0x1, 0x0);
        gbc.writeMem(0x3343, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8067, gbc.sp());
        EXPECT(0x3344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0057
        gbc.setState(0x29f4, 0x120e, 0x9c20, 0xd65b, 0x1f45, 0xccd0, 0x1, 0x1);
        gbc.writeMem(0x29f4, { 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x120e, gbc.sp());
        EXPECT(0x29f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0058
        gbc.setState(0x175, 0x2580, 0x65b0, 0x67a4, 0xf87f, 0xe342, 0x1, 0x0);
        gbc.writeMem(0x175, { 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2580, gbc.sp());
        EXPECT(0x176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0059
        gbc.setState(0xcc33, 0x2b09, 0x6830, 0xb576, 0x228, 0xfde6, 0x0, 0x1);
        gbc.writeMem(0xcc33, { 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0xcc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcc33));
        // AC 005A
        gbc.setState(0x1ba9, 0x1ee, 0x50c0, 0xa102, 0x24ca, 0xff06, 0x0, 0x0);
        gbc.writeMem(0x1ba9, { 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0x1baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 005B
        gbc.setState(0x621b, 0x2d9f, 0xb2c0, 0xdf63, 0xfbbc, 0x295a, 0x1, 0x1);
        gbc.writeMem(0x621b, { 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2d9f, gbc.sp());
        EXPECT(0x621c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 005C
        gbc.setState(0x2d6e, 0x3aad, 0xf9e0, 0xf5b7, 0xbf22, 0x11ee, 0x1, 0x0);
        gbc.writeMem(0x2d6e, { 0xac });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3aad, gbc.sp());
        EXPECT(0x2d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 005D
        gbc.setState(0x5016, 0xb216, 0x4490, 0xc925, 0x1207, 0x911d, 0x1, 0x0);
        gbc.writeMem(0x5016, { 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb216, gbc.sp());
        EXPECT(0x5017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 005E
        gbc.setState(0x5bf3, 0xf566, 0x1f90, 0xa90b, 0x165f, 0x8f4c, 0x1, 0x1);
        gbc.writeMem(0x5bf3, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf566, gbc.sp());
        EXPECT(0x5bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 005F
        gbc.setState(0x6d2c, 0xeaba, 0xf6e0, 0xdd0c, 0xdf72, 0x1aa8, 0x1, 0x1);
        gbc.writeMem(0x6d2c, { 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xeaba, gbc.sp());
        EXPECT(0x6d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0060
        gbc.setState(0x8719, 0x22e7, 0xc620, 0x9432, 0x159e, 0xbdb6, 0x0, 0x0);
        gbc.writeMem(0x8719, { 0xac });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x22e7, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8719));
        // AC 0061
        gbc.setState(0xfe5, 0xe1b, 0x6790, 0x96c3, 0xd879, 0x4d0c, 0x1, 0x0);
        gbc.writeMem(0xfe5, { 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe1b, gbc.sp());
        EXPECT(0xfe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0062
        gbc.setState(0x5d55, 0xdbbf, 0xdc20, 0xb622, 0x19d8, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x5d55, { 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbbf, gbc.sp());
        EXPECT(0x5d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0063
        gbc.setState(0xbdee, 0x17bd, 0xfd60, 0x6de1, 0xb5bc, 0xf8fd, 0x1, 0x0);
        gbc.writeMem(0xbdee, { 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x17bd, gbc.sp());
        EXPECT(0xbdef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbdee));
        // AC 0064
        gbc.setState(0x86ad, 0xe42d, 0x3140, 0x4395, 0x63a7, 0xda09, 0x0, 0x0);
        gbc.writeMem(0x86ad, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe42d, gbc.sp());
        EXPECT(0x86ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x86ad));
        // AC 0065
        gbc.setState(0x1dce, 0x15f1, 0x4c90, 0x656b, 0xf210, 0x34f8, 0x1, 0x0);
        gbc.writeMem(0x1dce, { 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0x1dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0066
        gbc.setState(0x7218, 0x63f2, 0xb160, 0xd473, 0x613c, 0x97c8, 0x1, 0x0);
        gbc.writeMem(0x7218, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x63f2, gbc.sp());
        EXPECT(0x7219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0067
        gbc.setState(0x67e8, 0xe45b, 0x8170, 0xbc74, 0xe09b, 0xf6c5, 0x0, 0x1);
        gbc.writeMem(0x67e8, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe45b, gbc.sp());
        EXPECT(0x67e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0068
        gbc.setState(0xd47c, 0xc7ed, 0xee00, 0x9cdd, 0xbfd3, 0x245d, 0x1, 0x0);
        gbc.writeMem(0xd47c, { 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0xd47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd47c));
        // AC 0069
        gbc.setState(0x6686, 0xb13c, 0xab10, 0xf263, 0x61db, 0x21cd, 0x1, 0x1);
        gbc.writeMem(0x6686, { 0xac });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb13c, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 006A
        gbc.setState(0x511, 0xfdf8, 0x35a0, 0xfa43, 0x928c, 0x4736, 0x0, 0x1);
        gbc.writeMem(0x511, { 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfdf8, gbc.sp());
        EXPECT(0x512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 006B
        gbc.setState(0xa64c, 0x262c, 0x73b0, 0x632, 0xe8c6, 0x491d, 0x1, 0x0);
        gbc.writeMem(0xa64c, { 0xac });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x262c, gbc.sp());
        EXPECT(0xa64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa64c));
        // AC 006C
        gbc.setState(0x9724, 0xf7f3, 0x4d10, 0xacd1, 0xa463, 0x74ab, 0x1, 0x1);
        gbc.writeMem(0x9724, { 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf7f3, gbc.sp());
        EXPECT(0x9725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9724));
        // AC 006D
        gbc.setState(0x9b34, 0x6e0e, 0x8c90, 0x992, 0x4e97, 0x62b0, 0x0, 0x1);
        gbc.writeMem(0x9b34, { 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0x9b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9b34));
        // AC 006E
        gbc.setState(0x9909, 0x5890, 0x30, 0xa92d, 0x3727, 0xfcd9, 0x0, 0x0);
        gbc.writeMem(0x9909, { 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9909));
        // AC 006F
        gbc.setState(0xb1d8, 0x78fc, 0xe70, 0xa74e, 0x577a, 0x8216, 0x1, 0x0);
        gbc.writeMem(0xb1d8, { 0xac });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x78fc, gbc.sp());
        EXPECT(0xb1d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb1d8));
        // AC 0070
        gbc.setState(0xcb3d, 0x40e1, 0x680, 0x42a, 0xbb58, 0x9b83, 0x1, 0x1);
        gbc.writeMem(0xcb3d, { 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0xcb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcb3d));
        // AC 0071
        gbc.setState(0x1ea7, 0x3cb, 0x19e0, 0xbdf4, 0xcc2f, 0xa13e, 0x1, 0x1);
        gbc.writeMem(0x1ea7, { 0xac });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x1ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0072
        gbc.setState(0x52f6, 0xd451, 0x8d0, 0x815, 0xc5ab, 0x799f, 0x0, 0x1);
        gbc.writeMem(0x52f6, { 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd451, gbc.sp());
        EXPECT(0x52f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0073
        gbc.setState(0xe3b8, 0x6ee1, 0x3470, 0x199b, 0x743b, 0x394e, 0x0, 0x0);
        gbc.writeMem(0xe3b8, { 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6ee1, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe3b8));
        // AC 0074
        gbc.setState(0xcd6d, 0x33bb, 0x53d0, 0xc742, 0x1365, 0xd5bf, 0x0, 0x0);
        gbc.writeMem(0xcd6d, { 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x33bb, gbc.sp());
        EXPECT(0xcd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcd6d));
        // AC 0075
        gbc.setState(0x8416, 0xc9d9, 0x9d40, 0xa239, 0xde4, 0x8a50, 0x1, 0x1);
        gbc.writeMem(0x8416, { 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc9d9, gbc.sp());
        EXPECT(0x8417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8416));
        // AC 0076
        gbc.setState(0xb8f5, 0x67f2, 0xcb0, 0x363, 0x30d9, 0x5e16, 0x0, 0x0);
        gbc.writeMem(0xb8f5, { 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x67f2, gbc.sp());
        EXPECT(0xb8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb8f5));
        // AC 0077
        gbc.setState(0x80ad, 0xfe6e, 0x1880, 0xe87f, 0xc2d3, 0xf3b6, 0x1, 0x0);
        gbc.writeMem(0x80ad, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xfe6e, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x80ad));
        // AC 0078
        gbc.setState(0x36d0, 0x1b10, 0x73c0, 0x61aa, 0xd2e5, 0xa798, 0x0, 0x0);
        gbc.writeMem(0x36d0, { 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1b10, gbc.sp());
        EXPECT(0x36d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0079
        gbc.setState(0x3adc, 0x903b, 0x10, 0xa001, 0x9f12, 0xcca1, 0x0, 0x0);
        gbc.writeMem(0x3adc, { 0xac });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x903b, gbc.sp());
        EXPECT(0x3add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 007A
        gbc.setState(0x6b9e, 0x7f24, 0xd50, 0xedbb, 0xcc40, 0x7cc8, 0x0, 0x1);
        gbc.writeMem(0x6b9e, { 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7f24, gbc.sp());
        EXPECT(0x6b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 007B
        gbc.setState(0x2aca, 0x118b, 0xa270, 0xdae3, 0xe9b3, 0x78d2, 0x1, 0x0);
        gbc.writeMem(0x2aca, { 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x118b, gbc.sp());
        EXPECT(0x2acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 007C
        gbc.setState(0xd3db, 0xb5df, 0x4eb0, 0xe6f8, 0xfc0d, 0xbe25, 0x0, 0x1);
        gbc.writeMem(0xd3db, { 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb5df, gbc.sp());
        EXPECT(0xd3dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd3db));
        // AC 007D
        gbc.setState(0x36ed, 0x889b, 0xb480, 0xd5e, 0x13e6, 0x8a01, 0x1, 0x0);
        gbc.writeMem(0x36ed, { 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x889b, gbc.sp());
        EXPECT(0x36ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 007E
        gbc.setState(0x2b81, 0x131f, 0x2280, 0x69e9, 0x8813, 0x5390, 0x0, 0x1);
        gbc.writeMem(0x2b81, { 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x131f, gbc.sp());
        EXPECT(0x2b82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 007F
        gbc.setState(0x78f2, 0x4832, 0x6910, 0xf8e6, 0x81b6, 0xd29e, 0x0, 0x0);
        gbc.writeMem(0x78f2, { 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4832, gbc.sp());
        EXPECT(0x78f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0080
        gbc.setState(0x27f0, 0xf7d3, 0xc7e0, 0x301d, 0x3384, 0xc318, 0x0, 0x1);
        gbc.writeMem(0x27f0, { 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf7d3, gbc.sp());
        EXPECT(0x27f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0081
        gbc.setState(0xc9, 0xdf8, 0xfd10, 0x5c43, 0xf555, 0x7c93, 0x0, 0x0);
        gbc.writeMem(0xc9, { 0xac });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdf8, gbc.sp());
        EXPECT(0xca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0082
        gbc.setState(0x609e, 0xeb2b, 0x5790, 0xb45e, 0x4ed5, 0x395e, 0x1, 0x1);
        gbc.writeMem(0x609e, { 0xac });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeb2b, gbc.sp());
        EXPECT(0x609f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0083
        gbc.setState(0x3bce, 0xff30, 0x6f20, 0x982b, 0x9638, 0xfd6f, 0x1, 0x1);
        gbc.writeMem(0x3bce, { 0xac });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xff30, gbc.sp());
        EXPECT(0x3bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0084
        gbc.setState(0xe60, 0x9041, 0x8390, 0xcd9, 0xf7e0, 0x2dcf, 0x0, 0x1);
        gbc.writeMem(0xe60, { 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9041, gbc.sp());
        EXPECT(0xe61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0085
        gbc.setState(0x499d, 0xe48f, 0xe80, 0x7428, 0xe19, 0x4a65, 0x0, 0x0);
        gbc.writeMem(0x499d, { 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe48f, gbc.sp());
        EXPECT(0x499e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0086
        gbc.setState(0xdd31, 0xd821, 0x7a30, 0xd226, 0x4f1f, 0x5f0a, 0x0, 0x1);
        gbc.writeMem(0xdd31, { 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd821, gbc.sp());
        EXPECT(0xdd32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdd31));
        // AC 0087
        gbc.setState(0xd335, 0xf560, 0x2a80, 0x4ad6, 0xf4e2, 0x6aba, 0x1, 0x0);
        gbc.writeMem(0xd335, { 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf560, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd335));
        // AC 0088
        gbc.setState(0x2148, 0xc9d2, 0xd630, 0x27ec, 0x3ae, 0x7634, 0x1, 0x1);
        gbc.writeMem(0x2148, { 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0089
        gbc.setState(0x2370, 0x8610, 0x3a30, 0x3700, 0x840c, 0x20f8, 0x0, 0x0);
        gbc.writeMem(0x2370, { 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8610, gbc.sp());
        EXPECT(0x2371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 008A
        gbc.setState(0xa8c3, 0x58a2, 0xe5a0, 0xdf76, 0xbd52, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0xa8c3, { 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0xa8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa8c3));
        // AC 008B
        gbc.setState(0x67c, 0x5c37, 0xf330, 0x7a0f, 0x8353, 0x9f57, 0x1, 0x1);
        gbc.writeMem(0x67c, { 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5c37, gbc.sp());
        EXPECT(0x67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 008C
        gbc.setState(0x4e97, 0xf456, 0x5840, 0x5c71, 0xbb5, 0x6bc6, 0x0, 0x1);
        gbc.writeMem(0x4e97, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf456, gbc.sp());
        EXPECT(0x4e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 008D
        gbc.setState(0xc9e4, 0x4fc9, 0x7d90, 0x40a0, 0xeed1, 0x5607, 0x0, 0x0);
        gbc.writeMem(0xc9e4, { 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0xc9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc9e4));
        // AC 008E
        gbc.setState(0x3b18, 0x51f9, 0xbf20, 0x499d, 0x19ef, 0xefaf, 0x0, 0x0);
        gbc.writeMem(0x3b18, { 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x51f9, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 008F
        gbc.setState(0x2f9, 0x3b47, 0x8550, 0x2298, 0xf86a, 0xd51e, 0x0, 0x1);
        gbc.writeMem(0x2f9, { 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3b47, gbc.sp());
        EXPECT(0x2fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0090
        gbc.setState(0x2e25, 0x364e, 0xfdf0, 0x171c, 0x384e, 0xf0f0, 0x1, 0x0);
        gbc.writeMem(0x2e25, { 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x364e, gbc.sp());
        EXPECT(0x2e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0091
        gbc.setState(0x8df, 0xf0e8, 0x5850, 0xd752, 0xf0b0, 0x88bf, 0x0, 0x1);
        gbc.writeMem(0x8df, { 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0x8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0092
        gbc.setState(0xab7d, 0x225, 0x9fd0, 0x8839, 0xf4c5, 0x55a3, 0x1, 0x0);
        gbc.writeMem(0xab7d, { 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x225, gbc.sp());
        EXPECT(0xab7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xab7d));
        // AC 0093
        gbc.setState(0xc846, 0xe6dd, 0x96c0, 0xcb24, 0xbf68, 0xcc19, 0x0, 0x1);
        gbc.writeMem(0xc846, { 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe6dd, gbc.sp());
        EXPECT(0xc847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc846));
        // AC 0094
        gbc.setState(0x7ebe, 0x694f, 0x6b80, 0x80ab, 0x8f6c, 0x49b3, 0x0, 0x0);
        gbc.writeMem(0x7ebe, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x694f, gbc.sp());
        EXPECT(0x7ebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0095
        gbc.setState(0xa84, 0x8938, 0xca10, 0x4e97, 0x1f40, 0x675b, 0x0, 0x1);
        gbc.writeMem(0xa84, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8938, gbc.sp());
        EXPECT(0xa85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0096
        gbc.setState(0x335d, 0xa0b6, 0xab10, 0x5fb0, 0xd61d, 0x3eb1, 0x1, 0x1);
        gbc.writeMem(0x335d, { 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0x335e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0097
        gbc.setState(0x8d1, 0xaccf, 0x41a0, 0xecb8, 0xa373, 0x86f9, 0x1, 0x1);
        gbc.writeMem(0x8d1, { 0xac });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaccf, gbc.sp());
        EXPECT(0x8d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0098
        gbc.setState(0xd429, 0x4d5e, 0x54b0, 0x3a81, 0x4cff, 0x6484, 0x1, 0x0);
        gbc.writeMem(0xd429, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4d5e, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd429));
        // AC 0099
        gbc.setState(0x7ed8, 0x73d8, 0xa570, 0xfa81, 0x3a31, 0x4943, 0x0, 0x0);
        gbc.writeMem(0x7ed8, { 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x73d8, gbc.sp());
        EXPECT(0x7ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 009A
        gbc.setState(0x7d63, 0x390, 0xe510, 0xefd1, 0x5868, 0x374f, 0x0, 0x0);
        gbc.writeMem(0x7d63, { 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0x7d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 009B
        gbc.setState(0x9667, 0xfb01, 0x6ae0, 0x99e7, 0xd36f, 0x7aa5, 0x0, 0x1);
        gbc.writeMem(0x9667, { 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfb01, gbc.sp());
        EXPECT(0x9668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9667));
        // AC 009C
        gbc.setState(0x2d3, 0xc209, 0xfdc0, 0xc771, 0xbb5c, 0x33e8, 0x0, 0x1);
        gbc.writeMem(0x2d3, { 0xac });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc209, gbc.sp());
        EXPECT(0x2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 009D
        gbc.setState(0xd512, 0xf16c, 0x6610, 0xb7c0, 0x6a7e, 0x7756, 0x0, 0x1);
        gbc.writeMem(0xd512, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf16c, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd512));
        // AC 009E
        gbc.setState(0xdbad, 0xfb95, 0xc3b0, 0xce09, 0xf02a, 0x4882, 0x0, 0x1);
        gbc.writeMem(0xdbad, { 0xac });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfb95, gbc.sp());
        EXPECT(0xdbae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdbad));
        // AC 009F
        gbc.setState(0xaa13, 0xe8e8, 0xc860, 0xcbdb, 0xfeeb, 0xc376, 0x1, 0x0);
        gbc.writeMem(0xaa13, { 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0xaa14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaa13));
        // AC 00A0
        gbc.setState(0xef7, 0xd992, 0x6030, 0xda77, 0x5066, 0x2cea, 0x0, 0x1);
        gbc.writeMem(0xef7, { 0xac });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd992, gbc.sp());
        EXPECT(0xef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00A1
        gbc.setState(0x28b4, 0x850f, 0x720, 0x669, 0x7a67, 0x2c79, 0x1, 0x0);
        gbc.writeMem(0x28b4, { 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x850f, gbc.sp());
        EXPECT(0x28b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00A2
        gbc.setState(0x5af5, 0x375b, 0xdcf0, 0x24da, 0x9edd, 0x86cd, 0x0, 0x0);
        gbc.writeMem(0x5af5, { 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x375b, gbc.sp());
        EXPECT(0x5af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00A3
        gbc.setState(0x268f, 0x7483, 0x9d70, 0xff9c, 0xa9af, 0xb904, 0x0, 0x0);
        gbc.writeMem(0x268f, { 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0x2690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00A4
        gbc.setState(0xda6, 0x4cc5, 0x6f20, 0x3cc3, 0xdac8, 0xacf0, 0x0, 0x1);
        gbc.writeMem(0xda6, { 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4cc5, gbc.sp());
        EXPECT(0xda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00A5
        gbc.setState(0xcfa6, 0x2a25, 0x40a0, 0xa4b6, 0x68b1, 0xefd7, 0x1, 0x0);
        gbc.writeMem(0xcfa6, { 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2a25, gbc.sp());
        EXPECT(0xcfa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcfa6));
        // AC 00A6
        gbc.setState(0x2d61, 0xba96, 0x5790, 0x7fff, 0x6e01, 0xba44, 0x1, 0x0);
        gbc.writeMem(0x2d61, { 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xba96, gbc.sp());
        EXPECT(0x2d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00A7
        gbc.setState(0xc6b7, 0xd736, 0x34a0, 0x7668, 0x85e7, 0xc6ec, 0x0, 0x0);
        gbc.writeMem(0xc6b7, { 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd736, gbc.sp());
        EXPECT(0xc6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc6b7));
        // AC 00A8
        gbc.setState(0xada9, 0x266c, 0xff10, 0xf2ba, 0xbd24, 0x4b9a, 0x1, 0x0);
        gbc.writeMem(0xada9, { 0xac });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x266c, gbc.sp());
        EXPECT(0xadaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xada9));
        // AC 00A9
        gbc.setState(0x929c, 0x5ad, 0xb7a0, 0x216f, 0x6fbf, 0x7869, 0x0, 0x0);
        gbc.writeMem(0x929c, { 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5ad, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x929c));
        // AC 00AA
        gbc.setState(0x4576, 0x7c13, 0x13c0, 0x62b1, 0xaabc, 0x5e56, 0x0, 0x0);
        gbc.writeMem(0x4576, { 0xac });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7c13, gbc.sp());
        EXPECT(0x4577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00AB
        gbc.setState(0x356e, 0x42fe, 0xe220, 0x71e2, 0x253b, 0x3c0b, 0x1, 0x1);
        gbc.writeMem(0x356e, { 0xac });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x42fe, gbc.sp());
        EXPECT(0x356f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00AC
        gbc.setState(0xa1ad, 0xf2fe, 0x4cb0, 0xfe22, 0xd0c5, 0x6ea5, 0x0, 0x1);
        gbc.writeMem(0xa1ad, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf2fe, gbc.sp());
        EXPECT(0xa1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa1ad));
        // AC 00AD
        gbc.setState(0x69ac, 0x44bb, 0x8d80, 0x310d, 0xfe15, 0x19b9, 0x1, 0x0);
        gbc.writeMem(0x69ac, { 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x44bb, gbc.sp());
        EXPECT(0x69ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00AE
        gbc.setState(0x47c3, 0x81d5, 0x2a80, 0xe1b5, 0x2bdf, 0xe5f4, 0x0, 0x0);
        gbc.writeMem(0x47c3, { 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x81d5, gbc.sp());
        EXPECT(0x47c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00AF
        gbc.setState(0x3ee5, 0x699b, 0x77e0, 0x24a3, 0x4e9b, 0x745b, 0x0, 0x0);
        gbc.writeMem(0x3ee5, { 0xac });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0x3ee6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B0
        gbc.setState(0x7b55, 0x5e25, 0xb0f0, 0xd31, 0xe384, 0x2077, 0x0, 0x0);
        gbc.writeMem(0x7b55, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5e25, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B1
        gbc.setState(0x4e23, 0xc9b7, 0x15e0, 0x1cdd, 0x8aaf, 0x344, 0x0, 0x0);
        gbc.writeMem(0x4e23, { 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc9b7, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B2
        gbc.setState(0xc7ac, 0x8150, 0x45f0, 0x4f97, 0xef31, 0xae41, 0x0, 0x0);
        gbc.writeMem(0xc7ac, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8150, gbc.sp());
        EXPECT(0xc7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc7ac));
        // AC 00B3
        gbc.setState(0xaffd, 0x7d53, 0xbcc0, 0xd935, 0xd351, 0x9abf, 0x1, 0x1);
        gbc.writeMem(0xaffd, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7d53, gbc.sp());
        EXPECT(0xaffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaffd));
        // AC 00B4
        gbc.setState(0x67cc, 0x559, 0x7930, 0x6b33, 0x3f03, 0x8b63, 0x0, 0x1);
        gbc.writeMem(0x67cc, { 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x559, gbc.sp());
        EXPECT(0x67cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B6
        gbc.setState(0x3345, 0xb9f6, 0xc470, 0xd631, 0xae76, 0xf963, 0x0, 0x0);
        gbc.writeMem(0x3345, { 0xac });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb9f6, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B7
        gbc.setState(0x3b1, 0x6f20, 0xd8e0, 0xcef9, 0xa015, 0x812e, 0x0, 0x0);
        gbc.writeMem(0x3b1, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6f20, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B8
        gbc.setState(0x525a, 0xa8c9, 0xa0c0, 0x24d5, 0xa69c, 0xf5bc, 0x1, 0x1);
        gbc.writeMem(0x525a, { 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x525b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00B9
        gbc.setState(0x44a7, 0xc43b, 0xb950, 0xaaac, 0x5458, 0x8045, 0x0, 0x1);
        gbc.writeMem(0x44a7, { 0xac });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0x44a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00BA
        gbc.setState(0x3b7e, 0xcbc4, 0x5830, 0x1b75, 0xbfb9, 0xc5cd, 0x0, 0x1);
        gbc.writeMem(0x3b7e, { 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcbc4, gbc.sp());
        EXPECT(0x3b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00BB
        gbc.setState(0xabe1, 0xc7b8, 0x3fb0, 0xbb03, 0x4f6d, 0x9dd7, 0x1, 0x0);
        gbc.writeMem(0xabe1, { 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc7b8, gbc.sp());
        EXPECT(0xabe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xabe1));
        // AC 00BD
        gbc.setState(0x586, 0x8629, 0x5bd0, 0xf5be, 0x5d21, 0x8628, 0x0, 0x1);
        gbc.writeMem(0x586, { 0xac });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8629, gbc.sp());
        EXPECT(0x587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00BE
        gbc.setState(0x72ef, 0xad67, 0x19d0, 0xbb75, 0x468f, 0xb31d, 0x0, 0x1);
        gbc.writeMem(0x72ef, { 0xac });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xad67, gbc.sp());
        EXPECT(0x72f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00BF
        gbc.setState(0x65e, 0xb77c, 0x5ac0, 0x82fa, 0xed1e, 0x9267, 0x1, 0x1);
        gbc.writeMem(0x65e, { 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0x65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00C1
        gbc.setState(0x6459, 0x1d24, 0x6fd0, 0xf0a4, 0x6724, 0xf957, 0x1, 0x1);
        gbc.writeMem(0x6459, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1d24, gbc.sp());
        EXPECT(0x645a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00C3
        gbc.setState(0xa675, 0xf8f8, 0x290, 0x27b9, 0x2109, 0x1ba9, 0x1, 0x0);
        gbc.writeMem(0xa675, { 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf8f8, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa675));
        // AC 00C4
        gbc.setState(0x32e1, 0x798b, 0xd280, 0xa2c9, 0xcbcb, 0xe64b, 0x1, 0x1);
        gbc.writeMem(0x32e1, { 0xac });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x798b, gbc.sp());
        EXPECT(0x32e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00C5
        gbc.setState(0x88c1, 0xf52b, 0xbba0, 0x7430, 0xd940, 0x87ae, 0x0, 0x1);
        gbc.writeMem(0x88c1, { 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0x88c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x88c1));
        // AC 00C6
        gbc.setState(0x3d06, 0x6789, 0x9410, 0x1f42, 0xb8fb, 0x14e8, 0x0, 0x1);
        gbc.writeMem(0x3d06, { 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6789, gbc.sp());
        EXPECT(0x3d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00C7
        gbc.setState(0xd8d7, 0xc89f, 0xbaa0, 0xf3e9, 0x4ff8, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0xd8d7, { 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc89f, gbc.sp());
        EXPECT(0xd8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd8d7));
        // AC 00C8
        gbc.setState(0xd563, 0xe610, 0x2070, 0x5069, 0xbe74, 0xddd7, 0x1, 0x0);
        gbc.writeMem(0xd563, { 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0xd564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd563));
        // AC 00C9
        gbc.setState(0x37c1, 0xc642, 0xdbe0, 0x73f7, 0xb966, 0x79cd, 0x1, 0x0);
        gbc.writeMem(0x37c1, { 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc642, gbc.sp());
        EXPECT(0x37c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00CA
        gbc.setState(0x7ab2, 0xb02c, 0xa570, 0x6ebe, 0xd371, 0x2c0a, 0x1, 0x0);
        gbc.writeMem(0x7ab2, { 0xac });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb02c, gbc.sp());
        EXPECT(0x7ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00CB
        gbc.setState(0x1315, 0x96cd, 0x4950, 0x2aa8, 0xf46a, 0xe0c1, 0x1, 0x1);
        gbc.writeMem(0x1315, { 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x96cd, gbc.sp());
        EXPECT(0x1316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00CC
        gbc.setState(0xed7c, 0x20ef, 0xe080, 0x6f05, 0x3c0, 0x8e4f, 0x1, 0x0);
        gbc.writeMem(0xed7c, { 0xac });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x20ef, gbc.sp());
        EXPECT(0xed7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xed7c));
        // AC 00CD
        gbc.setState(0x5d9d, 0xe766, 0xa190, 0xeda3, 0xacf4, 0xc38, 0x0, 0x1);
        gbc.writeMem(0x5d9d, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe766, gbc.sp());
        EXPECT(0x5d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00CE
        gbc.setState(0x8b41, 0x6b4e, 0x9780, 0x5b46, 0xef2f, 0x51f7, 0x0, 0x1);
        gbc.writeMem(0x8b41, { 0xac });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6b4e, gbc.sp());
        EXPECT(0x8b42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8b41));
        // AC 00CF
        gbc.setState(0xb28a, 0xbb01, 0xe430, 0x16fb, 0xeb6c, 0xadff, 0x0, 0x1);
        gbc.writeMem(0xb28a, { 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbb01, gbc.sp());
        EXPECT(0xb28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb28a));
        // AC 00D0
        gbc.setState(0xbd6b, 0x1237, 0x35c0, 0xccca, 0x35e6, 0xa613, 0x0, 0x1);
        gbc.writeMem(0xbd6b, { 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1237, gbc.sp());
        EXPECT(0xbd6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbd6b));
        // AC 00D1
        gbc.setState(0x5515, 0x7bfc, 0x6800, 0x2814, 0x856, 0x5ccf, 0x0, 0x0);
        gbc.writeMem(0x5515, { 0xac });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7bfc, gbc.sp());
        EXPECT(0x5516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00D2
        gbc.setState(0x2c0f, 0x149e, 0x6530, 0x6728, 0x2a38, 0xd62d, 0x0, 0x0);
        gbc.writeMem(0x2c0f, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x149e, gbc.sp());
        EXPECT(0x2c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00D3
        gbc.setState(0x211d, 0xe41, 0xfd00, 0x4ea6, 0x61ac, 0x8d0c, 0x1, 0x0);
        gbc.writeMem(0x211d, { 0xac });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe41, gbc.sp());
        EXPECT(0x211e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00D4
        gbc.setState(0xeb8c, 0xa3bf, 0xccd0, 0x32fc, 0xcf0f, 0x2615, 0x1, 0x0);
        gbc.writeMem(0xeb8c, { 0xac });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa3bf, gbc.sp());
        EXPECT(0xeb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xeb8c));
        // AC 00D5
        gbc.setState(0xae63, 0x92b5, 0x7750, 0xeec6, 0x247b, 0xa606, 0x0, 0x1);
        gbc.writeMem(0xae63, { 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x92b5, gbc.sp());
        EXPECT(0xae64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xae63));
        // AC 00D6
        gbc.setState(0x55b9, 0x4e33, 0xdae0, 0x604d, 0x25cd, 0x39c3, 0x0, 0x1);
        gbc.writeMem(0x55b9, { 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4e33, gbc.sp());
        EXPECT(0x55ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00D7
        gbc.setState(0x32eb, 0x2b09, 0xc810, 0x54ac, 0x55cc, 0xb518, 0x1, 0x1);
        gbc.writeMem(0x32eb, { 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2b09, gbc.sp());
        EXPECT(0x32ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00D8
        gbc.setState(0x83f0, 0x6708, 0x8c70, 0x79ce, 0x2417, 0xda71, 0x0, 0x0);
        gbc.writeMem(0x83f0, { 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6708, gbc.sp());
        EXPECT(0x83f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x83f0));
        // AC 00D9
        gbc.setState(0x771e, 0xafbc, 0xc90, 0xa7e2, 0x8b64, 0xed00, 0x0, 0x0);
        gbc.writeMem(0x771e, { 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xafbc, gbc.sp());
        EXPECT(0x771f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00DA
        gbc.setState(0xe6e7, 0xc437, 0x36f0, 0x5126, 0xb552, 0x561f, 0x0, 0x1);
        gbc.writeMem(0xe6e7, { 0xac });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc437, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe6e7));
        // AC 00DB
        gbc.setState(0x4050, 0x90ab, 0x8590, 0x61d1, 0x1243, 0x500d, 0x1, 0x1);
        gbc.writeMem(0x4050, { 0xac });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x90ab, gbc.sp());
        EXPECT(0x4051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00DC
        gbc.setState(0x4e16, 0x90c6, 0x12f0, 0xf429, 0xb518, 0x22ee, 0x0, 0x0);
        gbc.writeMem(0x4e16, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x90c6, gbc.sp());
        EXPECT(0x4e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00DD
        gbc.setState(0x8798, 0xdb6b, 0xc9f0, 0xd7a6, 0xbbff, 0x5f6d, 0x0, 0x0);
        gbc.writeMem(0x8798, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdb6b, gbc.sp());
        EXPECT(0x8799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8798));
        // AC 00DE
        gbc.setState(0xd77e, 0x38b3, 0x7840, 0x9c2f, 0x9907, 0x171e, 0x0, 0x1);
        gbc.writeMem(0xd77e, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x38b3, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd77e));
        // AC 00DF
        gbc.setState(0x81b, 0x5dc7, 0x1ae0, 0x7b29, 0xc0c1, 0x954a, 0x1, 0x1);
        gbc.writeMem(0x81b, { 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5dc7, gbc.sp());
        EXPECT(0x81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00E0
        gbc.setState(0x3f90, 0x86f1, 0x6730, 0x51c5, 0x9d83, 0x26a0, 0x1, 0x0);
        gbc.writeMem(0x3f90, { 0xac });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x86f1, gbc.sp());
        EXPECT(0x3f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00E1
        gbc.setState(0x9d15, 0x4b0b, 0x10a0, 0xa6e0, 0x4386, 0xd1e, 0x0, 0x1);
        gbc.writeMem(0x9d15, { 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4b0b, gbc.sp());
        EXPECT(0x9d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9d15));
        // AC 00E2
        gbc.setState(0x43ed, 0xf668, 0x3970, 0xc500, 0xa16c, 0x6a39, 0x0, 0x0);
        gbc.writeMem(0x43ed, { 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf668, gbc.sp());
        EXPECT(0x43ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00E3
        gbc.setState(0x7d64, 0x7a9e, 0xad10, 0xcb17, 0x9081, 0x1be4, 0x1, 0x0);
        gbc.writeMem(0x7d64, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7a9e, gbc.sp());
        EXPECT(0x7d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00E4
        gbc.setState(0xe998, 0xf0e9, 0x3290, 0xa282, 0x1d61, 0x24a1, 0x0, 0x0);
        gbc.writeMem(0xe998, { 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0xe999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe998));
        // AC 00E5
        gbc.setState(0x5d4f, 0xe4d3, 0x3810, 0xcdd0, 0xaf5b, 0xec3d, 0x0, 0x0);
        gbc.writeMem(0x5d4f, { 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe4d3, gbc.sp());
        EXPECT(0x5d50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00E6
        gbc.setState(0x6929, 0x8fe0, 0x9180, 0x682f, 0xe345, 0x1987, 0x1, 0x0);
        gbc.writeMem(0x6929, { 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8fe0, gbc.sp());
        EXPECT(0x692a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00E7
        gbc.setState(0x81f3, 0x8fb, 0x8370, 0xbc44, 0xd955, 0x513a, 0x0, 0x1);
        gbc.writeMem(0x81f3, { 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8fb, gbc.sp());
        EXPECT(0x81f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x81f3));
        // AC 00E8
        gbc.setState(0xdd02, 0x7792, 0x8c80, 0x2f67, 0xa786, 0xffc2, 0x1, 0x1);
        gbc.writeMem(0xdd02, { 0xac });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7792, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdd02));
        // AC 00E9
        gbc.setState(0x1f87, 0x53e7, 0x5ad0, 0xa363, 0x658c, 0xae2b, 0x1, 0x1);
        gbc.writeMem(0x1f87, { 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53e7, gbc.sp());
        EXPECT(0x1f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00EA
        gbc.setState(0x682b, 0x44c1, 0x5ac0, 0xd98, 0x6138, 0x441f, 0x1, 0x0);
        gbc.writeMem(0x682b, { 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x44c1, gbc.sp());
        EXPECT(0x682c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00EB
        gbc.setState(0xe45e, 0xeabf, 0xcdc0, 0x9943, 0xb912, 0x80e, 0x1, 0x1);
        gbc.writeMem(0xe45e, { 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeabf, gbc.sp());
        EXPECT(0xe45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe45e));
        // AC 00EC
        gbc.setState(0x45ca, 0xb9b3, 0x49f0, 0xc1f9, 0x2f0e, 0xae3d, 0x1, 0x1);
        gbc.writeMem(0x45ca, { 0xac });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x45cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00ED
        gbc.setState(0x65ea, 0xb8a3, 0x27f0, 0x8bf, 0x738f, 0x6bb, 0x0, 0x0);
        gbc.writeMem(0x65ea, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb8a3, gbc.sp());
        EXPECT(0x65eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00EE
        gbc.setState(0x3a2f, 0xba6d, 0xf2f0, 0x5062, 0x1313, 0x24b0, 0x1, 0x1);
        gbc.writeMem(0x3a2f, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xba6d, gbc.sp());
        EXPECT(0x3a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00EF
        gbc.setState(0x994, 0xaa3d, 0xe70, 0x93b7, 0x94a, 0x834d, 0x1, 0x1);
        gbc.writeMem(0x994, { 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaa3d, gbc.sp());
        EXPECT(0x995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F0
        gbc.setState(0x5c1a, 0xcfe3, 0x4f60, 0xaabd, 0x20ea, 0x5ff6, 0x0, 0x1);
        gbc.writeMem(0x5c1a, { 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcfe3, gbc.sp());
        EXPECT(0x5c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F1
        gbc.setState(0x9139, 0xed91, 0x4c0, 0x2fee, 0xadc3, 0xa91a, 0x1, 0x0);
        gbc.writeMem(0x9139, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xed91, gbc.sp());
        EXPECT(0x913a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9139));
        // AC 00F2
        gbc.setState(0x661e, 0xa4a5, 0xd690, 0x917a, 0x75f1, 0x69a6, 0x1, 0x0);
        gbc.writeMem(0x661e, { 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa4a5, gbc.sp());
        EXPECT(0x661f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F3
        gbc.setState(0x2cc7, 0x4650, 0xc920, 0xa583, 0x7479, 0xf374, 0x1, 0x0);
        gbc.writeMem(0x2cc7, { 0xac });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4650, gbc.sp());
        EXPECT(0x2cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F4
        gbc.setState(0x8280, 0x74d2, 0xaed0, 0xdc75, 0x4f6d, 0xbb2c, 0x0, 0x0);
        gbc.writeMem(0x8280, { 0xac });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x74d2, gbc.sp());
        EXPECT(0x8281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8280));
        // AC 00F5
        gbc.setState(0x3b83, 0x136b, 0x7b30, 0x909f, 0xd1ba, 0x3916, 0x1, 0x0);
        gbc.writeMem(0x3b83, { 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x3b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F6
        gbc.setState(0x40f2, 0xfd84, 0x4060, 0x2bc1, 0x1a69, 0x725e, 0x1, 0x1);
        gbc.writeMem(0x40f2, { 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfd84, gbc.sp());
        EXPECT(0x40f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F7
        gbc.setState(0xdeea, 0xd1e1, 0x2b00, 0x2c22, 0x12a1, 0x5abc, 0x1, 0x0);
        gbc.writeMem(0xdeea, { 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd1e1, gbc.sp());
        EXPECT(0xdeeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdeea));
        // AC 00F8
        gbc.setState(0x5b46, 0x2401, 0x4370, 0x5de1, 0x70e5, 0xf423, 0x0, 0x0);
        gbc.writeMem(0x5b46, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2401, gbc.sp());
        EXPECT(0x5b47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00F9
        gbc.setState(0xd3d5, 0x72d8, 0xdcf0, 0xb102, 0xa684, 0x8630, 0x1, 0x1);
        gbc.writeMem(0xd3d5, { 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x72d8, gbc.sp());
        EXPECT(0xd3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd3d5));
        // AC 00FA
        gbc.setState(0x549c, 0xf179, 0xef50, 0x6cb5, 0x5ed8, 0x4660, 0x0, 0x1);
        gbc.writeMem(0x549c, { 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf179, gbc.sp());
        EXPECT(0x549d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00FB
        gbc.setState(0x5268, 0x7d7d, 0xb9e0, 0xdc2b, 0xde5f, 0xe9ac, 0x1, 0x1);
        gbc.writeMem(0x5268, { 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x5269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00FC
        gbc.setState(0x593d, 0x4222, 0xc410, 0x765c, 0x7069, 0xc0bb, 0x0, 0x1);
        gbc.writeMem(0x593d, { 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4222, gbc.sp());
        EXPECT(0x593e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00FD
        gbc.setState(0x1c3b, 0xedf7, 0xd220, 0x8c67, 0xba38, 0xc306, 0x0, 0x0);
        gbc.writeMem(0x1c3b, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xedf7, gbc.sp());
        EXPECT(0x1c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 00FE
        gbc.setState(0xc8b8, 0xf56c, 0x4ab0, 0x2e27, 0x2f74, 0x1c59, 0x1, 0x1);
        gbc.writeMem(0xc8b8, { 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf56c, gbc.sp());
        EXPECT(0xc8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc8b8));
        // AC 00FF
        gbc.setState(0xecd3, 0x33ad, 0x7950, 0xe649, 0xbaff, 0x4b91, 0x1, 0x1);
        gbc.writeMem(0xecd3, { 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0xecd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xecd3));
        // AC 0100
        gbc.setState(0xb297, 0x3029, 0x28f0, 0x2a41, 0x8491, 0x170b, 0x1, 0x0);
        gbc.writeMem(0xb297, { 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0xb298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb297));
        // AC 0101
        gbc.setState(0x32a2, 0x3e6, 0xa7b0, 0xfdb6, 0xdd73, 0x5309, 0x1, 0x1);
        gbc.writeMem(0x32a2, { 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3e6, gbc.sp());
        EXPECT(0x32a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0102
        gbc.setState(0xec8, 0x9183, 0x1770, 0xa67e, 0xc158, 0xda9a, 0x1, 0x0);
        gbc.writeMem(0xec8, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9183, gbc.sp());
        EXPECT(0xec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0103
        gbc.setState(0xd28c, 0x17b4, 0x8610, 0xc2c8, 0x82a9, 0x58e8, 0x0, 0x1);
        gbc.writeMem(0xd28c, { 0xac });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x17b4, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd28c));
        // AC 0104
        gbc.setState(0xcc3d, 0x1685, 0xba80, 0xec42, 0xde4a, 0x703b, 0x1, 0x1);
        gbc.writeMem(0xcc3d, { 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1685, gbc.sp());
        EXPECT(0xcc3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcc3d));
        // AC 0105
        gbc.setState(0x2b21, 0x8626, 0xb000, 0xc0e1, 0x5181, 0xff52, 0x1, 0x0);
        gbc.writeMem(0x2b21, { 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8626, gbc.sp());
        EXPECT(0x2b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0106
        gbc.setState(0x30e7, 0x3f3, 0x61e0, 0xb09d, 0x6ade, 0xb03b, 0x1, 0x1);
        gbc.writeMem(0x30e7, { 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3f3, gbc.sp());
        EXPECT(0x30e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0107
        gbc.setState(0xc2b, 0x6b36, 0x400, 0x6fec, 0xde69, 0xc94d, 0x0, 0x1);
        gbc.writeMem(0xc2b, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6b36, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0108
        gbc.setState(0xd669, 0xc4b8, 0xd470, 0xfa40, 0xb7dd, 0x4c25, 0x0, 0x0);
        gbc.writeMem(0xd669, { 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc4b8, gbc.sp());
        EXPECT(0xd66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd669));
        // AC 0109
        gbc.setState(0x81e5, 0x29f4, 0xa4b0, 0xc67c, 0xe775, 0x17aa, 0x0, 0x1);
        gbc.writeMem(0x81e5, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x29f4, gbc.sp());
        EXPECT(0x81e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x81e5));
        // AC 010A
        gbc.setState(0xeed4, 0x809c, 0x43a0, 0x826e, 0x4747, 0xadee, 0x1, 0x1);
        gbc.writeMem(0xeed4, { 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x809c, gbc.sp());
        EXPECT(0xeed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xeed4));
        // AC 010B
        gbc.setState(0x69fd, 0x7219, 0x4aa0, 0xb7f5, 0xe094, 0x2caa, 0x1, 0x1);
        gbc.writeMem(0x69fd, { 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7219, gbc.sp());
        EXPECT(0x69fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 010C
        gbc.setState(0xceda, 0xef9f, 0x95d0, 0xaf77, 0xa66e, 0x67a8, 0x0, 0x1);
        gbc.writeMem(0xceda, { 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xef9f, gbc.sp());
        EXPECT(0xcedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xceda));
        // AC 010D
        gbc.setState(0x6447, 0x134, 0xa160, 0x5fc7, 0x8479, 0x3728, 0x0, 0x0);
        gbc.writeMem(0x6447, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x134, gbc.sp());
        EXPECT(0x6448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 010F
        gbc.setState(0x21f9, 0xf3d0, 0xf0a0, 0x9a23, 0xa7ba, 0xf904, 0x1, 0x1);
        gbc.writeMem(0x21f9, { 0xac });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf3d0, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0110
        gbc.setState(0x4fac, 0x361, 0xaf50, 0x932e, 0x5c87, 0x5848, 0x0, 0x1);
        gbc.writeMem(0x4fac, { 0xac });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x361, gbc.sp());
        EXPECT(0x4fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0111
        gbc.setState(0x4546, 0xff87, 0x9c30, 0xe9bc, 0x9e92, 0x3d30, 0x0, 0x0);
        gbc.writeMem(0x4546, { 0xac });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xff87, gbc.sp());
        EXPECT(0x4547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0112
        gbc.setState(0x1e93, 0x59c6, 0xd6b0, 0x61e3, 0x7d0, 0xee30, 0x1, 0x1);
        gbc.writeMem(0x1e93, { 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0x1e94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0113
        gbc.setState(0xcf2e, 0x8e8f, 0x41f0, 0x818e, 0xded, 0x9f4b, 0x1, 0x0);
        gbc.writeMem(0xcf2e, { 0xac });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e8f, gbc.sp());
        EXPECT(0xcf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcf2e));
        // AC 0114
        gbc.setState(0xde92, 0x109c, 0xe490, 0xc0fd, 0x5329, 0x7989, 0x1, 0x1);
        gbc.writeMem(0xde92, { 0xac });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x109c, gbc.sp());
        EXPECT(0xde93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xde92));
        // AC 0115
        gbc.setState(0xb6ca, 0x37dd, 0xe830, 0x7cef, 0x348a, 0x8bc9, 0x1, 0x1);
        gbc.writeMem(0xb6ca, { 0xac });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x37dd, gbc.sp());
        EXPECT(0xb6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb6ca));
        // AC 0116
        gbc.setState(0xb2e5, 0xf1b8, 0xa440, 0x7a35, 0x4ac6, 0x6e87, 0x0, 0x1);
        gbc.writeMem(0xb2e5, { 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf1b8, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb2e5));
        // AC 0117
        gbc.setState(0x26bb, 0x7fe4, 0xbe20, 0x9756, 0xdf1a, 0x185, 0x1, 0x0);
        gbc.writeMem(0x26bb, { 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7fe4, gbc.sp());
        EXPECT(0x26bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0118
        gbc.setState(0xb51e, 0xe4a8, 0x45b0, 0x5f67, 0xb0ab, 0x1b54, 0x0, 0x0);
        gbc.writeMem(0xb51e, { 0xac });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xb51f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb51e));
        // AC 0119
        gbc.setState(0xa2a7, 0x8608, 0x2800, 0xc41d, 0x1d9e, 0x8419, 0x0, 0x1);
        gbc.writeMem(0xa2a7, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa2a7));
        // AC 011A
        gbc.setState(0x2a1d, 0x684c, 0xe900, 0x639c, 0x414, 0x785, 0x0, 0x0);
        gbc.writeMem(0x2a1d, { 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x684c, gbc.sp());
        EXPECT(0x2a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 011B
        gbc.setState(0x5371, 0xe6c3, 0x3ba0, 0x58e9, 0x57b6, 0xe4e, 0x0, 0x1);
        gbc.writeMem(0x5371, { 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe6c3, gbc.sp());
        EXPECT(0x5372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 011C
        gbc.setState(0xd0eb, 0xca7a, 0x620, 0x772b, 0xfeae, 0xfa6c, 0x0, 0x0);
        gbc.writeMem(0xd0eb, { 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xca7a, gbc.sp());
        EXPECT(0xd0ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd0eb));
        // AC 011D
        gbc.setState(0xa98d, 0x3f6b, 0x7250, 0xa571, 0x16b1, 0x2e01, 0x0, 0x1);
        gbc.writeMem(0xa98d, { 0xac });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3f6b, gbc.sp());
        EXPECT(0xa98e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa98d));
        // AC 011E
        gbc.setState(0x876, 0x50df, 0x9060, 0x1d6, 0xbe7c, 0x1fe5, 0x0, 0x1);
        gbc.writeMem(0x876, { 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x50df, gbc.sp());
        EXPECT(0x877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 011F
        gbc.setState(0x2a89, 0xf4c3, 0xae00, 0xe2c5, 0xbafd, 0x8d27, 0x1, 0x1);
        gbc.writeMem(0x2a89, { 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf4c3, gbc.sp());
        EXPECT(0x2a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0120
        gbc.setState(0xc67a, 0x1f24, 0x4580, 0x7b78, 0x2d8c, 0x1896, 0x0, 0x0);
        gbc.writeMem(0xc67a, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1f24, gbc.sp());
        EXPECT(0xc67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc67a));
        // AC 0121
        gbc.setState(0x107b, 0x898, 0x26f0, 0xc5e4, 0xcf34, 0x247a, 0x0, 0x0);
        gbc.writeMem(0x107b, { 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x898, gbc.sp());
        EXPECT(0x107c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0122
        gbc.setState(0x5f69, 0x1ac9, 0x56c0, 0x42e7, 0x7701, 0x6410, 0x1, 0x0);
        gbc.writeMem(0x5f69, { 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1ac9, gbc.sp());
        EXPECT(0x5f6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0123
        gbc.setState(0xb7b9, 0x7290, 0xe5c0, 0xdc7e, 0xd42c, 0xb2dc, 0x1, 0x1);
        gbc.writeMem(0xb7b9, { 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7290, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb7b9));
        // AC 0124
        gbc.setState(0x4ccb, 0xe6f7, 0xb8c0, 0x440f, 0xd1a7, 0x5562, 0x0, 0x0);
        gbc.writeMem(0x4ccb, { 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0x4ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0125
        gbc.setState(0x5b04, 0xb50c, 0x4920, 0x58b9, 0xf17c, 0xf0bd, 0x1, 0x1);
        gbc.writeMem(0x5b04, { 0xac });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb50c, gbc.sp());
        EXPECT(0x5b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0126
        gbc.setState(0xe70e, 0xa65a, 0xc840, 0xdf3c, 0xccf5, 0x72df, 0x0, 0x0);
        gbc.writeMem(0xe70e, { 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa65a, gbc.sp());
        EXPECT(0xe70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe70e));
        // AC 0127
        gbc.setState(0xa26c, 0x7332, 0xe790, 0x410c, 0x36a6, 0x3940, 0x1, 0x0);
        gbc.writeMem(0xa26c, { 0xac });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7332, gbc.sp());
        EXPECT(0xa26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa26c));
        // AC 0128
        gbc.setState(0xdc21, 0xb393, 0xb960, 0x6d6a, 0x32ed, 0x4a39, 0x0, 0x1);
        gbc.writeMem(0xdc21, { 0xac });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb393, gbc.sp());
        EXPECT(0xdc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdc21));
        // AC 0129
        gbc.setState(0x997b, 0x3ccf, 0x7440, 0xde70, 0x4ed9, 0x43c4, 0x0, 0x1);
        gbc.writeMem(0x997b, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3ccf, gbc.sp());
        EXPECT(0x997c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x997b));
        // AC 012A
        gbc.setState(0x6ff3, 0x3f1d, 0x2d20, 0xae67, 0x3897, 0x67cf, 0x1, 0x0);
        gbc.writeMem(0x6ff3, { 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3f1d, gbc.sp());
        EXPECT(0x6ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 012B
        gbc.setState(0x3401, 0x74a4, 0xff0, 0xe708, 0xfd2f, 0x2471, 0x1, 0x0);
        gbc.writeMem(0x3401, { 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x74a4, gbc.sp());
        EXPECT(0x3402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 012C
        gbc.setState(0xcdfc, 0xe35a, 0x4f80, 0x13db, 0xff94, 0x4e4f, 0x0, 0x0);
        gbc.writeMem(0xcdfc, { 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe35a, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcdfc));
        // AC 012D
        gbc.setState(0xa3, 0x4fd, 0xdae0, 0x5de3, 0x468d, 0xd9bf, 0x0, 0x0);
        gbc.writeMem(0xa3, { 0xac });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4fd, gbc.sp());
        EXPECT(0xa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 012E
        gbc.setState(0xc6d7, 0x417f, 0x2fa0, 0x60d5, 0xa308, 0x1811, 0x1, 0x1);
        gbc.writeMem(0xc6d7, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0xc6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc6d7));
        // AC 012F
        gbc.setState(0xaa5a, 0x634d, 0x9f40, 0x7a15, 0xba76, 0xcdf9, 0x0, 0x1);
        gbc.writeMem(0xaa5a, { 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x634d, gbc.sp());
        EXPECT(0xaa5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaa5a));
        // AC 0130
        gbc.setState(0xc5de, 0xcc72, 0xc2e0, 0x1a5d, 0x56f4, 0x6fc, 0x0, 0x1);
        gbc.writeMem(0xc5de, { 0xac });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcc72, gbc.sp());
        EXPECT(0xc5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc5de));
        // AC 0131
        gbc.setState(0x7902, 0xcaac, 0x4bb0, 0xa363, 0xa5c4, 0xf5f, 0x0, 0x1);
        gbc.writeMem(0x7902, { 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0x7903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0133
        gbc.setState(0x525d, 0x1765, 0xfe90, 0xd3fe, 0x5d3b, 0xa353, 0x1, 0x1);
        gbc.writeMem(0x525d, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1765, gbc.sp());
        EXPECT(0x525e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0134
        gbc.setState(0xe3f4, 0x8996, 0xa410, 0xa33e, 0x19a4, 0xdf61, 0x1, 0x0);
        gbc.writeMem(0xe3f4, { 0xac });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8996, gbc.sp());
        EXPECT(0xe3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe3f4));
        // AC 0135
        gbc.setState(0x5c6d, 0xe900, 0x83c0, 0x453b, 0x40b5, 0x93f9, 0x0, 0x0);
        gbc.writeMem(0x5c6d, { 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe900, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0136
        gbc.setState(0xb13, 0x8b53, 0xe8e0, 0x7504, 0x92b2, 0x456f, 0x1, 0x1);
        gbc.writeMem(0xb13, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0xb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0137
        gbc.setState(0x5bbf, 0x64e5, 0x5fa0, 0x7e4b, 0x4e74, 0x7e49, 0x1, 0x0);
        gbc.writeMem(0x5bbf, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x64e5, gbc.sp());
        EXPECT(0x5bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0138
        gbc.setState(0xa767, 0x438e, 0x94d0, 0xc3b5, 0xa6b1, 0x12b6, 0x0, 0x1);
        gbc.writeMem(0xa767, { 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x438e, gbc.sp());
        EXPECT(0xa768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa767));
        // AC 0139
        gbc.setState(0xb4e4, 0x9ae1, 0x310, 0xcafd, 0xf03c, 0x9cc5, 0x0, 0x1);
        gbc.writeMem(0xb4e4, { 0xac });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0xb4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb4e4));
        // AC 013A
        gbc.setState(0x4e9a, 0x2169, 0x9210, 0x37f8, 0x9441, 0xeb8f, 0x0, 0x0);
        gbc.writeMem(0x4e9a, { 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0x4e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 013B
        gbc.setState(0x73e4, 0x9db8, 0xc090, 0x6e7d, 0x3ea9, 0x575f, 0x1, 0x1);
        gbc.writeMem(0x73e4, { 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9db8, gbc.sp());
        EXPECT(0x73e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 013C
        gbc.setState(0xb2b, 0xacf2, 0x29a0, 0xed82, 0x8dae, 0x5bf1, 0x0, 0x0);
        gbc.writeMem(0xb2b, { 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xacf2, gbc.sp());
        EXPECT(0xb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 013D
        gbc.setState(0x5f95, 0x46ae, 0xf5a0, 0x6b33, 0x2e56, 0xa45d, 0x0, 0x0);
        gbc.writeMem(0x5f95, { 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x46ae, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 013E
        gbc.setState(0x2828, 0xf2b9, 0xad40, 0x808e, 0x8f91, 0xe852, 0x0, 0x1);
        gbc.writeMem(0x2828, { 0xac });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf2b9, gbc.sp());
        EXPECT(0x2829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 013F
        gbc.setState(0xbd46, 0x2bc8, 0x9ff0, 0xa3d3, 0x4c36, 0xf5b0, 0x0, 0x1);
        gbc.writeMem(0xbd46, { 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2bc8, gbc.sp());
        EXPECT(0xbd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbd46));
        // AC 0140
        gbc.setState(0xecac, 0x980d, 0xa040, 0x7616, 0x5e8d, 0xc962, 0x1, 0x1);
        gbc.writeMem(0xecac, { 0xac });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x980d, gbc.sp());
        EXPECT(0xecad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xecac));
        // AC 0141
        gbc.setState(0x41fd, 0xa8d5, 0xb710, 0x3d8, 0xc7ed, 0x3474, 0x0, 0x1);
        gbc.writeMem(0x41fd, { 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa8d5, gbc.sp());
        EXPECT(0x41fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0142
        gbc.setState(0xa9df, 0xcd0c, 0x4800, 0xa4ae, 0x28cb, 0x4d6c, 0x1, 0x0);
        gbc.writeMem(0xa9df, { 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcd0c, gbc.sp());
        EXPECT(0xa9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa9df));
        // AC 0144
        gbc.setState(0x77d6, 0x6af9, 0x3b70, 0xb636, 0x8b8d, 0x5c14, 0x1, 0x1);
        gbc.writeMem(0x77d6, { 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6af9, gbc.sp());
        EXPECT(0x77d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0145
        gbc.setState(0xa581, 0x15b1, 0xae10, 0x1992, 0x3e6d, 0xcdcb, 0x0, 0x0);
        gbc.writeMem(0xa581, { 0xac });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x15b1, gbc.sp());
        EXPECT(0xa582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa581));
        // AC 0146
        gbc.setState(0xcdf5, 0x9e66, 0x9670, 0xb902, 0xda79, 0xf9ad, 0x0, 0x1);
        gbc.writeMem(0xcdf5, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9e66, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcdf5));
        // AC 0147
        gbc.setState(0x22c8, 0xd211, 0x6d0, 0x4777, 0xcb92, 0x4595, 0x1, 0x1);
        gbc.writeMem(0x22c8, { 0xac });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd211, gbc.sp());
        EXPECT(0x22c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0148
        gbc.setState(0xb139, 0x7abb, 0xc570, 0x67c3, 0x1cc, 0x45f4, 0x1, 0x1);
        gbc.writeMem(0xb139, { 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7abb, gbc.sp());
        EXPECT(0xb13a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb139));
        // AC 0149
        gbc.setState(0x2aa2, 0xacfc, 0x1730, 0x1e9b, 0x371c, 0x407d, 0x1, 0x0);
        gbc.writeMem(0x2aa2, { 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xacfc, gbc.sp());
        EXPECT(0x2aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 014A
        gbc.setState(0x253c, 0xbe2e, 0xc870, 0x4211, 0xa06d, 0x8af7, 0x0, 0x0);
        gbc.writeMem(0x253c, { 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbe2e, gbc.sp());
        EXPECT(0x253d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 014B
        gbc.setState(0x8ae0, 0xb8ab, 0xe430, 0x949d, 0xc1de, 0x6666, 0x1, 0x0);
        gbc.writeMem(0x8ae0, { 0xac });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb8ab, gbc.sp());
        EXPECT(0x8ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8ae0));
        // AC 014C
        gbc.setState(0x3026, 0x26de, 0xb780, 0x1d1f, 0xb7b2, 0xe496, 0x0, 0x1);
        gbc.writeMem(0x3026, { 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x26de, gbc.sp());
        EXPECT(0x3027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 014D
        gbc.setState(0xa70e, 0xf421, 0x2f00, 0x8b4e, 0xcf12, 0x478d, 0x0, 0x0);
        gbc.writeMem(0xa70e, { 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf421, gbc.sp());
        EXPECT(0xa70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa70e));
        // AC 014E
        gbc.setState(0x8885, 0x2133, 0x2be0, 0xbc81, 0x9855, 0x9d5d, 0x0, 0x0);
        gbc.writeMem(0x8885, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2133, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8885));
        // AC 014F
        gbc.setState(0x798e, 0x3402, 0x3fc0, 0x4e60, 0x699, 0x98b8, 0x1, 0x1);
        gbc.writeMem(0x798e, { 0xac });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x3402, gbc.sp());
        EXPECT(0x798f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0150
        gbc.setState(0x3c31, 0xf5a6, 0xe0, 0x42a4, 0xbed9, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0x3c31, { 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf5a6, gbc.sp());
        EXPECT(0x3c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0151
        gbc.setState(0xd149, 0xb260, 0x2520, 0xd3b4, 0xbc83, 0x73c0, 0x1, 0x1);
        gbc.writeMem(0xd149, { 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb260, gbc.sp());
        EXPECT(0xd14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd149));
        // AC 0152
        gbc.setState(0x8048, 0xaa49, 0x7980, 0xb6e, 0x8b, 0xb9e7, 0x0, 0x0);
        gbc.writeMem(0x8048, { 0xac });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xaa49, gbc.sp());
        EXPECT(0x8049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8048));
        // AC 0153
        gbc.setState(0x843c, 0x7fb0, 0x8070, 0xf256, 0xae87, 0xda2f, 0x1, 0x0);
        gbc.writeMem(0x843c, { 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7fb0, gbc.sp());
        EXPECT(0x843d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x843c));
        // AC 0155
        gbc.setState(0x7dfa, 0x1a51, 0xeed0, 0x3553, 0xe822, 0xce06, 0x0, 0x1);
        gbc.writeMem(0x7dfa, { 0xac });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1a51, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0156
        gbc.setState(0x35b4, 0x51c, 0xc4d0, 0x5055, 0x2702, 0xd6d1, 0x1, 0x0);
        gbc.writeMem(0x35b4, { 0xac });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x51c, gbc.sp());
        EXPECT(0x35b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0157
        gbc.setState(0x1e1c, 0xe8ba, 0x1590, 0x5cd5, 0xf2dc, 0xbb00, 0x1, 0x0);
        gbc.writeMem(0x1e1c, { 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe8ba, gbc.sp());
        EXPECT(0x1e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0158
        gbc.setState(0x546, 0xba67, 0x1890, 0xcad9, 0xb413, 0x284a, 0x0, 0x0);
        gbc.writeMem(0x546, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xba67, gbc.sp());
        EXPECT(0x547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 015A
        gbc.setState(0x1f68, 0x6489, 0xf20, 0x474a, 0x862d, 0xc2fd, 0x1, 0x1);
        gbc.writeMem(0x1f68, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6489, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 015B
        gbc.setState(0x4a73, 0x79b7, 0xb780, 0x5ced, 0xc93b, 0x632a, 0x1, 0x1);
        gbc.writeMem(0x4a73, { 0xac });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x79b7, gbc.sp());
        EXPECT(0x4a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 015C
        gbc.setState(0xe19c, 0x45ba, 0xb060, 0x7591, 0x161a, 0x4023, 0x0, 0x0);
        gbc.writeMem(0xe19c, { 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x45ba, gbc.sp());
        EXPECT(0xe19d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe19c));
        // AC 015D
        gbc.setState(0x738e, 0x5df1, 0x7af0, 0x786f, 0x1077, 0xf42a, 0x1, 0x1);
        gbc.writeMem(0x738e, { 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5df1, gbc.sp());
        EXPECT(0x738f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 015E
        gbc.setState(0x7da7, 0x98e1, 0x9310, 0xf7e5, 0x4ea3, 0xcbde, 0x1, 0x0);
        gbc.writeMem(0x7da7, { 0xac });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x98e1, gbc.sp());
        EXPECT(0x7da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 015F
        gbc.setState(0x5af4, 0x8c13, 0x2740, 0xf472, 0x10a1, 0x75dd, 0x0, 0x1);
        gbc.writeMem(0x5af4, { 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8c13, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0160
        gbc.setState(0x9bb9, 0xa5bc, 0xf000, 0x67d9, 0xeadb, 0x3179, 0x1, 0x0);
        gbc.writeMem(0x9bb9, { 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa5bc, gbc.sp());
        EXPECT(0x9bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9bb9));
        // AC 0161
        gbc.setState(0x3c97, 0x4ac, 0x2f40, 0xb78e, 0x9a67, 0x22af, 0x1, 0x0);
        gbc.writeMem(0x3c97, { 0xac });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4ac, gbc.sp());
        EXPECT(0x3c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0162
        gbc.setState(0xd607, 0xa2e9, 0x75e0, 0x2478, 0x49f0, 0x455f, 0x0, 0x1);
        gbc.writeMem(0xd607, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa2e9, gbc.sp());
        EXPECT(0xd608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd607));
        // AC 0163
        gbc.setState(0x8f3, 0x4f84, 0x2db0, 0x72d5, 0x5090, 0x236c, 0x0, 0x1);
        gbc.writeMem(0x8f3, { 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4f84, gbc.sp());
        EXPECT(0x8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0164
        gbc.setState(0x59ed, 0x2080, 0x5680, 0x585f, 0x79bd, 0x8b86, 0x0, 0x0);
        gbc.writeMem(0x59ed, { 0xac });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2080, gbc.sp());
        EXPECT(0x59ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0165
        gbc.setState(0x1d3b, 0xc5e, 0xa7d0, 0x33a4, 0x6c75, 0x14de, 0x1, 0x0);
        gbc.writeMem(0x1d3b, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc5e, gbc.sp());
        EXPECT(0x1d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0166
        gbc.setState(0x79c4, 0x4707, 0x22c0, 0x44c8, 0x90e7, 0x647b, 0x1, 0x0);
        gbc.writeMem(0x79c4, { 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4707, gbc.sp());
        EXPECT(0x79c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0167
        gbc.setState(0x155, 0x8743, 0xd6a0, 0x1968, 0x4388, 0xeddd, 0x1, 0x0);
        gbc.writeMem(0x155, { 0xac });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8743, gbc.sp());
        EXPECT(0x156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0168
        gbc.setState(0x746c, 0x791c, 0x47d0, 0xee81, 0xa7a4, 0xe3f4, 0x1, 0x1);
        gbc.writeMem(0x746c, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x791c, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0169
        gbc.setState(0x1b75, 0x2b52, 0x24e0, 0xb7d3, 0x5f90, 0x35bb, 0x1, 0x0);
        gbc.writeMem(0x1b75, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2b52, gbc.sp());
        EXPECT(0x1b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 016A
        gbc.setState(0x9756, 0x46b5, 0xa960, 0x9fb8, 0x1607, 0x2a2a, 0x1, 0x1);
        gbc.writeMem(0x9756, { 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x46b5, gbc.sp());
        EXPECT(0x9757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9756));
        // AC 016B
        gbc.setState(0x3319, 0xda54, 0x5b70, 0x92e0, 0xb182, 0x632a, 0x0, 0x0);
        gbc.writeMem(0x3319, { 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xda54, gbc.sp());
        EXPECT(0x331a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 016C
        gbc.setState(0x7fbe, 0x2a73, 0x5fa0, 0x5bd6, 0x4d85, 0xf3c2, 0x1, 0x1);
        gbc.writeMem(0x7fbe, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2a73, gbc.sp());
        EXPECT(0x7fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 016D
        gbc.setState(0xe483, 0x6d73, 0xac30, 0xc5b8, 0x5ad8, 0x3cba, 0x0, 0x0);
        gbc.writeMem(0xe483, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6d73, gbc.sp());
        EXPECT(0xe484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe483));
        // AC 016E
        gbc.setState(0xb289, 0xe4c3, 0x34c0, 0xfc84, 0x65ad, 0xc944, 0x0, 0x1);
        gbc.writeMem(0xb289, { 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0xb28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb289));
        // AC 016F
        gbc.setState(0xa558, 0x59c8, 0x6a40, 0xa606, 0x962e, 0xed71, 0x0, 0x1);
        gbc.writeMem(0xa558, { 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x59c8, gbc.sp());
        EXPECT(0xa559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa558));
        // AC 0170
        gbc.setState(0xd332, 0x9809, 0x64b0, 0x634f, 0x4eeb, 0xc976, 0x0, 0x0);
        gbc.writeMem(0xd332, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9809, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd332));
        // AC 0171
        gbc.setState(0xa6d7, 0xd645, 0x9ba0, 0x5120, 0xd16d, 0x8faa, 0x1, 0x1);
        gbc.writeMem(0xa6d7, { 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd645, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa6d7));
        // AC 0172
        gbc.setState(0xc5d1, 0xc27, 0x8c00, 0x1240, 0x3c52, 0x2961, 0x0, 0x1);
        gbc.writeMem(0xc5d1, { 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc27, gbc.sp());
        EXPECT(0xc5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc5d1));
        // AC 0173
        gbc.setState(0x2b35, 0x52b1, 0xb930, 0x64b5, 0x811e, 0x8abb, 0x0, 0x1);
        gbc.writeMem(0x2b35, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x52b1, gbc.sp());
        EXPECT(0x2b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0174
        gbc.setState(0xa61b, 0x3a60, 0x9010, 0x5401, 0x29d1, 0x3ece, 0x0, 0x0);
        gbc.writeMem(0xa61b, { 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa61b));
        // AC 0175
        gbc.setState(0xde05, 0xa15c, 0xfb40, 0x1bb9, 0xcca0, 0xaae, 0x1, 0x0);
        gbc.writeMem(0xde05, { 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa15c, gbc.sp());
        EXPECT(0xde06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xde05));
        // AC 0176
        gbc.setState(0x736a, 0x468, 0xda30, 0x3baa, 0x4509, 0x7032, 0x0, 0x0);
        gbc.writeMem(0x736a, { 0xac });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x468, gbc.sp());
        EXPECT(0x736b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0177
        gbc.setState(0x12a6, 0xdf04, 0x1000, 0x29ab, 0x1197, 0x31aa, 0x1, 0x0);
        gbc.writeMem(0x12a6, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdf04, gbc.sp());
        EXPECT(0x12a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0178
        gbc.setState(0xa287, 0xe5c3, 0x2e00, 0x1b37, 0x11fd, 0x824b, 0x0, 0x0);
        gbc.writeMem(0xa287, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0xa288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa287));
        // AC 0179
        gbc.setState(0xceb3, 0x306, 0x3e40, 0xb30f, 0x2353, 0x4980, 0x0, 0x0);
        gbc.writeMem(0xceb3, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x306, gbc.sp());
        EXPECT(0xceb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xceb3));
        // AC 017A
        gbc.setState(0x270c, 0x8809, 0x8600, 0xf865, 0x5a2f, 0x9ad1, 0x1, 0x1);
        gbc.writeMem(0x270c, { 0xac });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0x270d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 017B
        gbc.setState(0x8f9d, 0xd263, 0xe190, 0x70c3, 0xb27d, 0x2a80, 0x1, 0x0);
        gbc.writeMem(0x8f9d, { 0xac });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd263, gbc.sp());
        EXPECT(0x8f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8f9d));
        // AC 017C
        gbc.setState(0xa36a, 0x2931, 0x5660, 0xf433, 0x38a5, 0x3e60, 0x1, 0x0);
        gbc.writeMem(0xa36a, { 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2931, gbc.sp());
        EXPECT(0xa36b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa36a));
        // AC 017D
        gbc.setState(0xa37d, 0x8214, 0x5e80, 0x5e7c, 0x7458, 0x1e4c, 0x1, 0x1);
        gbc.writeMem(0xa37d, { 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8214, gbc.sp());
        EXPECT(0xa37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa37d));
        // AC 017F
        gbc.setState(0xe25a, 0x9b22, 0x47f0, 0x4da1, 0x8d1, 0xad3, 0x1, 0x0);
        gbc.writeMem(0xe25a, { 0xac });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9b22, gbc.sp());
        EXPECT(0xe25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe25a));
        // AC 0180
        gbc.setState(0x11a0, 0x8e45, 0x96d0, 0xcf1a, 0xb2a9, 0x9147, 0x0, 0x0);
        gbc.writeMem(0x11a0, { 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8e45, gbc.sp());
        EXPECT(0x11a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0182
        gbc.setState(0xa183, 0x9aaa, 0x9070, 0xe23e, 0xa4e7, 0x4747, 0x0, 0x1);
        gbc.writeMem(0xa183, { 0xac });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9aaa, gbc.sp());
        EXPECT(0xa184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa183));
        // AC 0183
        gbc.setState(0xb317, 0x282f, 0x4b50, 0xb44, 0xe16f, 0xd415, 0x1, 0x1);
        gbc.writeMem(0xb317, { 0xac });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x282f, gbc.sp());
        EXPECT(0xb318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb317));
        // AC 0184
        gbc.setState(0x75a, 0xbec0, 0x4550, 0x1ac5, 0x64ee, 0x78ba, 0x1, 0x1);
        gbc.writeMem(0x75a, { 0xac });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbec0, gbc.sp());
        EXPECT(0x75b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0185
        gbc.setState(0x5e8, 0x4a05, 0x2860, 0x4f07, 0x33bf, 0x5b1, 0x0, 0x0);
        gbc.writeMem(0x5e8, { 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4a05, gbc.sp());
        EXPECT(0x5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0186
        gbc.setState(0x6377, 0x131e, 0x29d0, 0xf6db, 0xd2ff, 0xddde, 0x0, 0x0);
        gbc.writeMem(0x6377, { 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x131e, gbc.sp());
        EXPECT(0x6378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0187
        gbc.setState(0xd9d6, 0xc07a, 0xcf40, 0xa6d, 0x54a1, 0x9295, 0x0, 0x0);
        gbc.writeMem(0xd9d6, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc07a, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd9d6));
        // AC 0188
        gbc.setState(0xc448, 0xaecc, 0x93e0, 0xd607, 0x71b3, 0x459b, 0x0, 0x1);
        gbc.writeMem(0xc448, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaecc, gbc.sp());
        EXPECT(0xc449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc448));
        // AC 0189
        gbc.setState(0x186b, 0x5fe0, 0xb8e0, 0xbee5, 0x4412, 0xfc54, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5fe0, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 018A
        gbc.setState(0x9efa, 0xdb3b, 0xba00, 0xcdba, 0x8664, 0x1ca0, 0x0, 0x1);
        gbc.writeMem(0x9efa, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdb3b, gbc.sp());
        EXPECT(0x9efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9efa));
        // AC 018B
        gbc.setState(0x2514, 0x7b5a, 0xdaa0, 0x516a, 0x9461, 0x7ea5, 0x1, 0x1);
        gbc.writeMem(0x2514, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 018C
        gbc.setState(0x6db5, 0x4734, 0x82b0, 0x102b, 0xda1d, 0xb5e8, 0x0, 0x0);
        gbc.writeMem(0x6db5, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 018D
        gbc.setState(0x75bf, 0xc60d, 0x150, 0x87bd, 0x5c2, 0x196e, 0x1, 0x1);
        gbc.writeMem(0x75bf, { 0xac });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc60d, gbc.sp());
        EXPECT(0x75c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 018E
        gbc.setState(0xd33c, 0x24ad, 0xf990, 0x7a77, 0x4640, 0xddc5, 0x1, 0x1);
        gbc.writeMem(0xd33c, { 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x24ad, gbc.sp());
        EXPECT(0xd33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd33c));
        // AC 0190
        gbc.setState(0xd674, 0x3193, 0x74d0, 0x5f1b, 0x1a36, 0x47de, 0x0, 0x0);
        gbc.writeMem(0xd674, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3193, gbc.sp());
        EXPECT(0xd675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd674));
        // AC 0191
        gbc.setState(0xd5bf, 0x7542, 0xf180, 0x9dea, 0x23ef, 0xb08f, 0x1, 0x1);
        gbc.writeMem(0xd5bf, { 0xac });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7542, gbc.sp());
        EXPECT(0xd5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd5bf));
        // AC 0192
        gbc.setState(0x49d, 0x2bbb, 0xf110, 0xa366, 0x40de, 0x8522, 0x1, 0x0);
        gbc.writeMem(0x49d, { 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2bbb, gbc.sp());
        EXPECT(0x49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0193
        gbc.setState(0x3587, 0x6ebc, 0x8c70, 0xab2a, 0x7392, 0x69b2, 0x0, 0x1);
        gbc.writeMem(0x3587, { 0xac });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6ebc, gbc.sp());
        EXPECT(0x3588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0194
        gbc.setState(0xa6d7, 0x5b09, 0xa830, 0xf2f5, 0x6d75, 0x8464, 0x1, 0x1);
        gbc.writeMem(0xa6d7, { 0xac });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5b09, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa6d7));
        // AC 0196
        gbc.setState(0xb1ca, 0x442c, 0xb5d0, 0x131b, 0x6013, 0xf59, 0x0, 0x1);
        gbc.writeMem(0xb1ca, { 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0xb1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb1ca));
        // AC 0197
        gbc.setState(0xa030, 0xb7db, 0x52c0, 0x8d1f, 0x5f48, 0xa643, 0x0, 0x0);
        gbc.writeMem(0xa030, { 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb7db, gbc.sp());
        EXPECT(0xa031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa030));
        // AC 0198
        gbc.setState(0x4299, 0x74a1, 0x8650, 0xd248, 0xdfc, 0x2165, 0x1, 0x1);
        gbc.writeMem(0x4299, { 0xac });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x429a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0199
        gbc.setState(0xb6c8, 0xb8be, 0x8130, 0x38bd, 0xffa4, 0xed25, 0x0, 0x1);
        gbc.writeMem(0xb6c8, { 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb8be, gbc.sp());
        EXPECT(0xb6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb6c8));
        // AC 019A
        gbc.setState(0x3588, 0xcf83, 0x1830, 0xb217, 0x6b6d, 0x486d, 0x0, 0x0);
        gbc.writeMem(0x3588, { 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcf83, gbc.sp());
        EXPECT(0x3589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 019B
        gbc.setState(0xdb8, 0x5a2e, 0x9890, 0xcfba, 0x6c9d, 0x4ecc, 0x1, 0x0);
        gbc.writeMem(0xdb8, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5a2e, gbc.sp());
        EXPECT(0xdb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 019C
        gbc.setState(0x6e8c, 0x84c4, 0x4980, 0x6f34, 0x2d1d, 0xe997, 0x0, 0x1);
        gbc.writeMem(0x6e8c, { 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x84c4, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 019D
        gbc.setState(0x90bf, 0x86ad, 0x9070, 0xa7e4, 0x28c2, 0xd81f, 0x1, 0x1);
        gbc.writeMem(0x90bf, { 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x86ad, gbc.sp());
        EXPECT(0x90c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x90bf));
        // AC 019E
        gbc.setState(0x34ee, 0x350f, 0xb870, 0x1e9b, 0x219d, 0x8f2f, 0x0, 0x0);
        gbc.writeMem(0x34ee, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x350f, gbc.sp());
        EXPECT(0x34ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 019F
        gbc.setState(0x1d56, 0xfcc, 0xcb50, 0x90d9, 0xdb15, 0xf74f, 0x1, 0x0);
        gbc.writeMem(0x1d56, { 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0x1d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A0
        gbc.setState(0x4c72, 0x7da5, 0x9cf0, 0xf979, 0x6f8d, 0x2365, 0x1, 0x0);
        gbc.writeMem(0x4c72, { 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A1
        gbc.setState(0x68c7, 0xb82f, 0x7830, 0xfc0a, 0x31b8, 0x4025, 0x0, 0x1);
        gbc.writeMem(0x68c7, { 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb82f, gbc.sp());
        EXPECT(0x68c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A2
        gbc.setState(0x48ec, 0xa086, 0x6530, 0x8213, 0x8c38, 0x1d45, 0x1, 0x1);
        gbc.writeMem(0x48ec, { 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa086, gbc.sp());
        EXPECT(0x48ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A3
        gbc.setState(0xb4d3, 0x1a32, 0xde50, 0x861b, 0xfcc3, 0x1302, 0x0, 0x0);
        gbc.writeMem(0xb4d3, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1a32, gbc.sp());
        EXPECT(0xb4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb4d3));
        // AC 01A4
        gbc.setState(0x2902, 0x49b8, 0x8310, 0x291a, 0x51f2, 0x4948, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xac });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x49b8, gbc.sp());
        EXPECT(0x2903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A5
        gbc.setState(0x160d, 0x6fc, 0xaa90, 0x1281, 0xe71c, 0xf3d4, 0x1, 0x0);
        gbc.writeMem(0x160d, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6fc, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A6
        gbc.setState(0xe095, 0x4bb4, 0x70a0, 0xeda4, 0xb85, 0xc8b9, 0x1, 0x0);
        gbc.writeMem(0xe095, { 0xac });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4bb4, gbc.sp());
        EXPECT(0xe096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe095));
        // AC 01A7
        gbc.setState(0x3670, 0xbd51, 0xd290, 0xf3ab, 0xe93, 0x8dff, 0x0, 0x1);
        gbc.writeMem(0x3670, { 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbd51, gbc.sp());
        EXPECT(0x3671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A8
        gbc.setState(0x28a1, 0xf0e1, 0x3e70, 0x6e68, 0xfdaa, 0x9319, 0x0, 0x1);
        gbc.writeMem(0x28a1, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf0e1, gbc.sp());
        EXPECT(0x28a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01A9
        gbc.setState(0xb30c, 0x39e6, 0xc440, 0xee9, 0x49e2, 0x6300, 0x1, 0x1);
        gbc.writeMem(0xb30c, { 0xac });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0xb30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb30c));
        // AC 01AA
        gbc.setState(0xcb90, 0xe373, 0xcb30, 0x1022, 0xc9a0, 0x99e, 0x1, 0x1);
        gbc.writeMem(0xcb90, { 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe373, gbc.sp());
        EXPECT(0xcb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcb90));
        // AC 01AB
        gbc.setState(0x9416, 0x1ed8, 0x1310, 0xfc3a, 0xaa3f, 0xc166, 0x1, 0x0);
        gbc.writeMem(0x9416, { 0xac });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1ed8, gbc.sp());
        EXPECT(0x9417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9416));
        // AC 01AC
        gbc.setState(0x8654, 0x7c10, 0x5280, 0xe90f, 0x7de2, 0x74e6, 0x0, 0x0);
        gbc.writeMem(0x8654, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7c10, gbc.sp());
        EXPECT(0x8655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8654));
        // AC 01AE
        gbc.setState(0x6ec9, 0xcbb0, 0xa920, 0x51d, 0x4088, 0x69ba, 0x1, 0x1);
        gbc.writeMem(0x6ec9, { 0xac });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcbb0, gbc.sp());
        EXPECT(0x6eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01AF
        gbc.setState(0x29e6, 0x11c9, 0x9450, 0x2810, 0xa161, 0xa726, 0x1, 0x1);
        gbc.writeMem(0x29e6, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x11c9, gbc.sp());
        EXPECT(0x29e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B0
        gbc.setState(0xe787, 0x349e, 0x7010, 0x7a66, 0xf68a, 0xd472, 0x0, 0x0);
        gbc.writeMem(0xe787, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0xe788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe787));
        // AC 01B1
        gbc.setState(0x13b2, 0x84b6, 0x3f10, 0x6f99, 0xe280, 0xf6c0, 0x1, 0x1);
        gbc.writeMem(0x13b2, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0x13b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B2
        gbc.setState(0x9823, 0xcdbe, 0x6a20, 0x487d, 0xd758, 0x2cbe, 0x0, 0x0);
        gbc.writeMem(0x9823, { 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0x9824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9823));
        // AC 01B3
        gbc.setState(0x3123, 0xd324, 0xadc0, 0x70fc, 0x54c9, 0x1f92, 0x0, 0x1);
        gbc.writeMem(0x3123, { 0xac });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd324, gbc.sp());
        EXPECT(0x3124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B4
        gbc.setState(0x72e1, 0xcc12, 0x8150, 0x89a6, 0x9bd2, 0x5aa0, 0x1, 0x0);
        gbc.writeMem(0x72e1, { 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B5
        gbc.setState(0x76f4, 0x5958, 0xc960, 0x2eca, 0xb23f, 0xf1cf, 0x0, 0x1);
        gbc.writeMem(0x76f4, { 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5958, gbc.sp());
        EXPECT(0x76f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B6
        gbc.setState(0x6448, 0xefe5, 0xe320, 0xc235, 0x8452, 0xd088, 0x0, 0x1);
        gbc.writeMem(0x6448, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xefe5, gbc.sp());
        EXPECT(0x6449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B7
        gbc.setState(0x199f, 0xf82d, 0xb0e0, 0x907e, 0xc49d, 0xa008, 0x1, 0x0);
        gbc.writeMem(0x199f, { 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf82d, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01B8
        gbc.setState(0xb60d, 0xecd9, 0x940, 0xb7cc, 0x8db7, 0x7076, 0x1, 0x0);
        gbc.writeMem(0xb60d, { 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xecd9, gbc.sp());
        EXPECT(0xb60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb60d));
        // AC 01B9
        gbc.setState(0xab2c, 0x5171, 0xeba0, 0xae99, 0x30a6, 0x1643, 0x1, 0x1);
        gbc.writeMem(0xab2c, { 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5171, gbc.sp());
        EXPECT(0xab2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xab2c));
        // AC 01BA
        gbc.setState(0x15ab, 0xa424, 0x6da0, 0xcba3, 0xa102, 0x7b1c, 0x1, 0x1);
        gbc.writeMem(0x15ab, { 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa424, gbc.sp());
        EXPECT(0x15ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01BB
        gbc.setState(0x780a, 0x55da, 0x3160, 0x84c4, 0xfa1e, 0x36a4, 0x0, 0x1);
        gbc.writeMem(0x780a, { 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x55da, gbc.sp());
        EXPECT(0x780b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01BC
        gbc.setState(0x97e5, 0x4170, 0x4450, 0xad5b, 0x286d, 0xa812, 0x0, 0x0);
        gbc.writeMem(0x97e5, { 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4170, gbc.sp());
        EXPECT(0x97e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x97e5));
        // AC 01BD
        gbc.setState(0x2b8e, 0xc3e6, 0xe380, 0x13d, 0x24b, 0x7fa, 0x1, 0x1);
        gbc.writeMem(0x2b8e, { 0xac });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc3e6, gbc.sp());
        EXPECT(0x2b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01BE
        gbc.setState(0x302c, 0x1437, 0xb280, 0x3dab, 0xc42e, 0xac79, 0x0, 0x0);
        gbc.writeMem(0x302c, { 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1437, gbc.sp());
        EXPECT(0x302d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01BF
        gbc.setState(0xc1f9, 0xb88e, 0x96b0, 0x41f5, 0x61eb, 0x33d3, 0x1, 0x0);
        gbc.writeMem(0xc1f9, { 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb88e, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc1f9));
        // AC 01C1
        gbc.setState(0x8a61, 0xf4d3, 0xcb60, 0x6e3, 0x31b1, 0x53e2, 0x1, 0x0);
        gbc.writeMem(0x8a61, { 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf4d3, gbc.sp());
        EXPECT(0x8a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8a61));
        // AC 01C2
        gbc.setState(0x3d99, 0x8041, 0xa6d0, 0xe2bd, 0x1b68, 0xe134, 0x1, 0x0);
        gbc.writeMem(0x3d99, { 0xac });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0x3d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01C3
        gbc.setState(0xa3e8, 0x7b3, 0x88d0, 0xacc2, 0x8521, 0xcad6, 0x1, 0x0);
        gbc.writeMem(0xa3e8, { 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7b3, gbc.sp());
        EXPECT(0xa3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa3e8));
        // AC 01C4
        gbc.setState(0xbbca, 0x25cf, 0xe480, 0x76a0, 0x2b5a, 0xfa3, 0x0, 0x0);
        gbc.writeMem(0xbbca, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x25cf, gbc.sp());
        EXPECT(0xbbcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbbca));
        // AC 01C5
        gbc.setState(0x550c, 0x881e, 0x4eb0, 0xc18, 0x229b, 0x8056, 0x0, 0x1);
        gbc.writeMem(0x550c, { 0xac });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x881e, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01C6
        gbc.setState(0x19a5, 0x2b66, 0x9d90, 0x8efd, 0x3f25, 0x2ab8, 0x0, 0x0);
        gbc.writeMem(0x19a5, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2b66, gbc.sp());
        EXPECT(0x19a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01C7
        gbc.setState(0x8038, 0xbaf7, 0xb6e0, 0x4b05, 0x659b, 0x8d32, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xac });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x8039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8038));
        // AC 01C8
        gbc.setState(0xb543, 0xa13c, 0x2560, 0x18a0, 0x3d7e, 0x77e7, 0x1, 0x0);
        gbc.writeMem(0xb543, { 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa13c, gbc.sp());
        EXPECT(0xb544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb543));
        // AC 01C9
        gbc.setState(0xcb13, 0x1c35, 0x3350, 0xc26c, 0x3435, 0xca1a, 0x1, 0x1);
        gbc.writeMem(0xcb13, { 0xac });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1c35, gbc.sp());
        EXPECT(0xcb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcb13));
        // AC 01CA
        gbc.setState(0x8675, 0x7e4e, 0x3da0, 0x6ddf, 0xa9cc, 0x26ef, 0x0, 0x0);
        gbc.writeMem(0x8675, { 0xac });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7e4e, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8675));
        // AC 01CB
        gbc.setState(0x9060, 0x9ee, 0xab30, 0x5709, 0x8ecb, 0x26dd, 0x0, 0x0);
        gbc.writeMem(0x9060, { 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9ee, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9060));
        // AC 01CC
        gbc.setState(0x83cb, 0xbc15, 0x10, 0xfdfa, 0x35ec, 0x68a, 0x0, 0x1);
        gbc.writeMem(0x83cb, { 0xac });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x83cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x83cb));
        // AC 01CD
        gbc.setState(0xede5, 0x8123, 0xc800, 0x8437, 0xfb83, 0x9c23, 0x0, 0x1);
        gbc.writeMem(0xede5, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8123, gbc.sp());
        EXPECT(0xede6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xede5));
        // AC 01CF
        gbc.setState(0x75d, 0xd059, 0x9190, 0x9144, 0x8d8a, 0xc0ec, 0x0, 0x1);
        gbc.writeMem(0x75d, { 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01D0
        gbc.setState(0xd48f, 0xaaf4, 0x2700, 0xd33, 0x2cfd, 0xeb00, 0x0, 0x1);
        gbc.writeMem(0xd48f, { 0xac });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaaf4, gbc.sp());
        EXPECT(0xd490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd48f));
        // AC 01D1
        gbc.setState(0x866a, 0x8a96, 0xeca0, 0xc0ec, 0x5adc, 0x4086, 0x1, 0x0);
        gbc.writeMem(0x866a, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8a96, gbc.sp());
        EXPECT(0x866b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x866a));
        // AC 01D2
        gbc.setState(0x3875, 0xe8d9, 0x9ff0, 0x9b32, 0x4fd5, 0x1ff0, 0x1, 0x1);
        gbc.writeMem(0x3875, { 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe8d9, gbc.sp());
        EXPECT(0x3876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01D3
        gbc.setState(0x1d00, 0x3bdd, 0xeed0, 0xe71d, 0x5292, 0x38f9, 0x1, 0x0);
        gbc.writeMem(0x1d00, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3bdd, gbc.sp());
        EXPECT(0x1d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01D4
        gbc.setState(0x8bd0, 0x19a7, 0xc150, 0xb100, 0x48e8, 0x65e5, 0x0, 0x1);
        gbc.writeMem(0x8bd0, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x19a7, gbc.sp());
        EXPECT(0x8bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8bd0));
        // AC 01D5
        gbc.setState(0xbcb9, 0x7f99, 0x95d0, 0x11e2, 0xbfb, 0x3d42, 0x0, 0x0);
        gbc.writeMem(0xbcb9, { 0xac });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7f99, gbc.sp());
        EXPECT(0xbcba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbcb9));
        // AC 01D6
        gbc.setState(0x6d88, 0xf535, 0xd330, 0x2fd1, 0xfd6d, 0x43bf, 0x0, 0x0);
        gbc.writeMem(0x6d88, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf535, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01D7
        gbc.setState(0xdc1b, 0xbb4e, 0x5b0, 0x8ef6, 0x5b6, 0xca49, 0x0, 0x0);
        gbc.writeMem(0xdc1b, { 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbb4e, gbc.sp());
        EXPECT(0xdc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdc1b));
        // AC 01D8
        gbc.setState(0x654d, 0x342d, 0x7490, 0xb485, 0xe3f2, 0xecb6, 0x0, 0x0);
        gbc.writeMem(0x654d, { 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0x654e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01D9
        gbc.setState(0x57fa, 0x2c1e, 0xe7f0, 0x25f3, 0x1217, 0x12ec, 0x1, 0x1);
        gbc.writeMem(0x57fa, { 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2c1e, gbc.sp());
        EXPECT(0x57fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01DA
        gbc.setState(0x6028, 0xad7a, 0x35b0, 0xc9d2, 0x3dad, 0x9aa6, 0x0, 0x1);
        gbc.writeMem(0x6028, { 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xad7a, gbc.sp());
        EXPECT(0x6029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01DB
        gbc.setState(0x6d36, 0x83eb, 0x7540, 0x23ae, 0x7050, 0x2dc8, 0x1, 0x0);
        gbc.writeMem(0x6d36, { 0xac });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x83eb, gbc.sp());
        EXPECT(0x6d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01DC
        gbc.setState(0x5fb2, 0x88e7, 0x51c0, 0x203d, 0x2b8c, 0xca5c, 0x0, 0x0);
        gbc.writeMem(0x5fb2, { 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x88e7, gbc.sp());
        EXPECT(0x5fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01DD
        gbc.setState(0x33cb, 0x626, 0x13d0, 0xb348, 0xd294, 0xd68f, 0x1, 0x1);
        gbc.writeMem(0x33cb, { 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x626, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01DE
        gbc.setState(0x5faa, 0x43c1, 0x28a0, 0xa5a0, 0x1260, 0x6a6, 0x1, 0x0);
        gbc.writeMem(0x5faa, { 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x43c1, gbc.sp());
        EXPECT(0x5fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01DF
        gbc.setState(0x4171, 0xcedf, 0x48f0, 0x8895, 0xb434, 0x4394, 0x1, 0x0);
        gbc.writeMem(0x4171, { 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0x4172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01E0
        gbc.setState(0x2514, 0xe4b5, 0xef0, 0x6bca, 0x901, 0xb840, 0x0, 0x1);
        gbc.writeMem(0x2514, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe4b5, gbc.sp());
        EXPECT(0x2515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01E1
        gbc.setState(0xe4b9, 0x611e, 0xa50, 0x3fbe, 0xa532, 0x283d, 0x0, 0x1);
        gbc.writeMem(0xe4b9, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x611e, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe4b9));
        // AC 01E2
        gbc.setState(0x7015, 0xbc15, 0xf9c0, 0xa072, 0xbb30, 0x479d, 0x1, 0x0);
        gbc.writeMem(0x7015, { 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x7016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01E3
        gbc.setState(0x4196, 0xbc57, 0x3a90, 0xbe0a, 0xe05a, 0x934b, 0x1, 0x0);
        gbc.writeMem(0x4196, { 0xac });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbc57, gbc.sp());
        EXPECT(0x4197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01E4
        gbc.setState(0xe6b0, 0xc6d9, 0x9d10, 0x557f, 0x816e, 0xc45a, 0x0, 0x1);
        gbc.writeMem(0xe6b0, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc6d9, gbc.sp());
        EXPECT(0xe6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe6b0));
        // AC 01E5
        gbc.setState(0x7a0b, 0x3a4c, 0x3af0, 0xae7, 0xfdb3, 0x4d95, 0x0, 0x1);
        gbc.writeMem(0x7a0b, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3a4c, gbc.sp());
        EXPECT(0x7a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01E6
        gbc.setState(0x2c7a, 0xd7a4, 0x6dc0, 0x64, 0xf979, 0x3ff7, 0x1, 0x0);
        gbc.writeMem(0x2c7a, { 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd7a4, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01E7
        gbc.setState(0xdacb, 0x3446, 0xefb0, 0x2353, 0xd1c9, 0xf64b, 0x0, 0x1);
        gbc.writeMem(0xdacb, { 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3446, gbc.sp());
        EXPECT(0xdacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdacb));
        // AC 01E8
        gbc.setState(0x81a7, 0xd65, 0x5b0, 0x3a32, 0xe772, 0xfed8, 0x0, 0x0);
        gbc.writeMem(0x81a7, { 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd65, gbc.sp());
        EXPECT(0x81a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x81a7));
        // AC 01EA
        gbc.setState(0x30d8, 0xb483, 0x9660, 0xaf91, 0xfe40, 0xccbd, 0x0, 0x1);
        gbc.writeMem(0x30d8, { 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb483, gbc.sp());
        EXPECT(0x30d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01EB
        gbc.setState(0x402e, 0xe2b, 0x79e0, 0xe3bc, 0xc87a, 0xb18d, 0x1, 0x1);
        gbc.writeMem(0x402e, { 0xac });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe2b, gbc.sp());
        EXPECT(0x402f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01ED
        gbc.setState(0xd493, 0x2bd9, 0xfba0, 0xdde1, 0x1420, 0x8913, 0x1, 0x1);
        gbc.writeMem(0xd493, { 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2bd9, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd493));
        // AC 01EE
        gbc.setState(0xde5a, 0xb28a, 0x19b0, 0x60e5, 0xa076, 0xf2e5, 0x0, 0x0);
        gbc.writeMem(0xde5a, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb28a, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xde5a));
        // AC 01EF
        gbc.setState(0xa11f, 0xdd49, 0x4680, 0xa30c, 0x1dc8, 0x3b30, 0x0, 0x0);
        gbc.writeMem(0xa11f, { 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xdd49, gbc.sp());
        EXPECT(0xa120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa11f));
        // AC 01F0
        gbc.setState(0x20ed, 0x94aa, 0xc4b0, 0xd435, 0x3b80, 0xbdfc, 0x0, 0x1);
        gbc.writeMem(0x20ed, { 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x94aa, gbc.sp());
        EXPECT(0x20ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01F1
        gbc.setState(0x8bc0, 0x9d79, 0x3750, 0x8204, 0xdb40, 0x7759, 0x0, 0x1);
        gbc.writeMem(0x8bc0, { 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9d79, gbc.sp());
        EXPECT(0x8bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8bc0));
        // AC 01F2
        gbc.setState(0xb0e4, 0x98e5, 0x27d0, 0x8c6, 0x1317, 0xb3ea, 0x1, 0x1);
        gbc.writeMem(0xb0e4, { 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x98e5, gbc.sp());
        EXPECT(0xb0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb0e4));
        // AC 01F3
        gbc.setState(0xb696, 0x1592, 0x47a0, 0x451c, 0xa7b9, 0xc010, 0x1, 0x1);
        gbc.writeMem(0xb696, { 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1592, gbc.sp());
        EXPECT(0xb697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb696));
        // AC 01F4
        gbc.setState(0xb710, 0xa5f1, 0xd450, 0x32da, 0xa736, 0xb9c1, 0x1, 0x1);
        gbc.writeMem(0xb710, { 0xac });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa5f1, gbc.sp());
        EXPECT(0xb711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb710));
        // AC 01F5
        gbc.setState(0x8aa7, 0x3020, 0x4cc0, 0xfc85, 0x7d53, 0xead7, 0x1, 0x1);
        gbc.writeMem(0x8aa7, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3020, gbc.sp());
        EXPECT(0x8aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8aa7));
        // AC 01F6
        gbc.setState(0x3b4a, 0x9467, 0xa9a0, 0x79da, 0x16a8, 0xc6d5, 0x0, 0x1);
        gbc.writeMem(0x3b4a, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x3b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01F7
        gbc.setState(0xceaa, 0x192c, 0x5a50, 0xba77, 0x9e68, 0xd68a, 0x0, 0x1);
        gbc.writeMem(0xceaa, { 0xac });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xceaa));
        // AC 01F8
        gbc.setState(0xb87c, 0xe97d, 0xca80, 0xf5af, 0x55ad, 0x4b39, 0x1, 0x1);
        gbc.writeMem(0xb87c, { 0xac });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe97d, gbc.sp());
        EXPECT(0xb87d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb87c));
        // AC 01F9
        gbc.setState(0xdc09, 0x88b9, 0xeda0, 0xd12b, 0xf37a, 0x9100, 0x1, 0x0);
        gbc.writeMem(0xdc09, { 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x88b9, gbc.sp());
        EXPECT(0xdc0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdc09));
        // AC 01FA
        gbc.setState(0x7199, 0xd28d, 0x94e0, 0xf4dc, 0x53b0, 0x9726, 0x1, 0x0);
        gbc.writeMem(0x7199, { 0xac });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0x719a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01FB
        gbc.setState(0x2145, 0x1689, 0x8db0, 0x3762, 0xbc52, 0xb89, 0x1, 0x1);
        gbc.writeMem(0x2145, { 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1689, gbc.sp());
        EXPECT(0x2146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01FC
        gbc.setState(0xac4a, 0xb95a, 0x4ae0, 0xfa0c, 0xe5fb, 0x834b, 0x1, 0x1);
        gbc.writeMem(0xac4a, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0xac4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xac4a));
        // AC 01FD
        gbc.setState(0x7780, 0x3020, 0x4110, 0x2a47, 0x7a58, 0x1a4d, 0x0, 0x0);
        gbc.writeMem(0x7780, { 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3020, gbc.sp());
        EXPECT(0x7781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01FE
        gbc.setState(0x43fd, 0x89d9, 0x5270, 0x8ee3, 0xeea5, 0xc4d3, 0x1, 0x1);
        gbc.writeMem(0x43fd, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x89d9, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 01FF
        gbc.setState(0xd441, 0x2dd5, 0xad10, 0x6e3f, 0x4c90, 0xa8ce, 0x0, 0x0);
        gbc.writeMem(0xd441, { 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2dd5, gbc.sp());
        EXPECT(0xd442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd441));
        // AC 0200
        gbc.setState(0x21d6, 0x934f, 0x69d0, 0x659a, 0xf74f, 0x26c6, 0x0, 0x0);
        gbc.writeMem(0x21d6, { 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x934f, gbc.sp());
        EXPECT(0x21d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0201
        gbc.setState(0xbbb, 0xa571, 0x6720, 0x8878, 0x2cab, 0x1b14, 0x0, 0x0);
        gbc.writeMem(0xbbb, { 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa571, gbc.sp());
        EXPECT(0xbbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0202
        gbc.setState(0x2f6f, 0x4c35, 0x8c20, 0x9c9, 0x75f1, 0x454e, 0x1, 0x0);
        gbc.writeMem(0x2f6f, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4c35, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0203
        gbc.setState(0xa69e, 0xea6c, 0x2680, 0xa4dc, 0x2c9c, 0x3aae, 0x1, 0x0);
        gbc.writeMem(0xa69e, { 0xac });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xea6c, gbc.sp());
        EXPECT(0xa69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa69e));
        // AC 0204
        gbc.setState(0x464b, 0x98cc, 0xa0b0, 0xa56f, 0x519e, 0xe054, 0x1, 0x1);
        gbc.writeMem(0x464b, { 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x98cc, gbc.sp());
        EXPECT(0x464c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0205
        gbc.setState(0xbe5e, 0x20e9, 0x9440, 0x52b6, 0xdb62, 0x2b04, 0x0, 0x0);
        gbc.writeMem(0xbe5e, { 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x20e9, gbc.sp());
        EXPECT(0xbe5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbe5e));
        // AC 0206
        gbc.setState(0xec7f, 0x2e6a, 0xc390, 0xeedb, 0xfba9, 0x6ea7, 0x1, 0x0);
        gbc.writeMem(0xec7f, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2e6a, gbc.sp());
        EXPECT(0xec80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xec7f));
        // AC 0208
        gbc.setState(0x64cc, 0x7117, 0xb890, 0x7de1, 0xd4ca, 0xcbdf, 0x0, 0x1);
        gbc.writeMem(0x64cc, { 0xac });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0x64cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0209
        gbc.setState(0xacfd, 0xe794, 0x3b00, 0x4e0e, 0x1c46, 0xce0d, 0x0, 0x1);
        gbc.writeMem(0xacfd, { 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe794, gbc.sp());
        EXPECT(0xacfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xacfd));
        // AC 020A
        gbc.setState(0x13c9, 0x465c, 0x7c20, 0x6f87, 0xbb54, 0x303, 0x1, 0x0);
        gbc.writeMem(0x13c9, { 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x13ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 020B
        gbc.setState(0xdf4a, 0x6520, 0x9bb0, 0x279b, 0x1d99, 0xb0d2, 0x1, 0x0);
        gbc.writeMem(0xdf4a, { 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0xdf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdf4a));
        // AC 020C
        gbc.setState(0x144e, 0x18c, 0x3270, 0x9ee8, 0xcae0, 0x8382, 0x0, 0x1);
        gbc.writeMem(0x144e, { 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x18c, gbc.sp());
        EXPECT(0x144f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 020E
        gbc.setState(0xbb06, 0x2244, 0xafe0, 0x705c, 0xddd6, 0xb8fc, 0x0, 0x1);
        gbc.writeMem(0xbb06, { 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0xbb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbb06));
        // AC 020F
        gbc.setState(0xe8a6, 0xd2, 0xb190, 0xd415, 0x95b2, 0xdd1e, 0x1, 0x1);
        gbc.writeMem(0xe8a6, { 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd2, gbc.sp());
        EXPECT(0xe8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe8a6));
        // AC 0210
        gbc.setState(0x8466, 0x8d1c, 0x8200, 0x8f34, 0x508d, 0x4212, 0x0, 0x1);
        gbc.writeMem(0x8466, { 0xac });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8d1c, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8466));
        // AC 0211
        gbc.setState(0x2543, 0xd74a, 0xfe70, 0xc52a, 0xc856, 0xa96b, 0x0, 0x0);
        gbc.writeMem(0x2543, { 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd74a, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0212
        gbc.setState(0x4954, 0x4241, 0x7140, 0x600e, 0x688b, 0x12e9, 0x0, 0x1);
        gbc.writeMem(0x4954, { 0xac });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0x4955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0213
        gbc.setState(0x1cdc, 0x740c, 0x310, 0x58b5, 0x182a, 0xb43a, 0x1, 0x1);
        gbc.writeMem(0x1cdc, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x740c, gbc.sp());
        EXPECT(0x1cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0214
        gbc.setState(0x6ef3, 0xd171, 0x2b40, 0x86d4, 0xe3ae, 0x10b5, 0x0, 0x0);
        gbc.writeMem(0x6ef3, { 0xac });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd171, gbc.sp());
        EXPECT(0x6ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0215
        gbc.setState(0x50ac, 0xe290, 0x1af0, 0x933e, 0x54c9, 0x58c2, 0x1, 0x0);
        gbc.writeMem(0x50ac, { 0xac });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe290, gbc.sp());
        EXPECT(0x50ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0216
        gbc.setState(0x469f, 0x6a07, 0xaff0, 0xa6da, 0x98a9, 0x5e40, 0x0, 0x0);
        gbc.writeMem(0x469f, { 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6a07, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0217
        gbc.setState(0x8fe8, 0xfdee, 0x5bb0, 0x2dab, 0x98b6, 0x4f6d, 0x1, 0x1);
        gbc.writeMem(0x8fe8, { 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfdee, gbc.sp());
        EXPECT(0x8fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8fe8));
        // AC 0219
        gbc.setState(0x6cfa, 0x5470, 0xc400, 0xe6be, 0x229e, 0x60f5, 0x0, 0x0);
        gbc.writeMem(0x6cfa, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5470, gbc.sp());
        EXPECT(0x6cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 021A
        gbc.setState(0x273b, 0x5ad7, 0x6ef0, 0x87f5, 0xc6b8, 0x4b70, 0x1, 0x1);
        gbc.writeMem(0x273b, { 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5ad7, gbc.sp());
        EXPECT(0x273c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 021B
        gbc.setState(0xbb56, 0xb6d9, 0xa1f0, 0x7c1c, 0xa83, 0x17fb, 0x0, 0x0);
        gbc.writeMem(0xbb56, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb6d9, gbc.sp());
        EXPECT(0xbb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbb56));
        // AC 021C
        gbc.setState(0x3ae8, 0x4169, 0x10a0, 0x1b5a, 0xb434, 0x8e9f, 0x1, 0x1);
        gbc.writeMem(0x3ae8, { 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 021D
        gbc.setState(0xa210, 0x75ca, 0xbdc0, 0x196b, 0xbaf5, 0xb271, 0x0, 0x1);
        gbc.writeMem(0xa210, { 0xac });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0xa211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa210));
        // AC 021E
        gbc.setState(0xbe1f, 0xeb3e, 0x4d30, 0xd3f8, 0xf549, 0xa205, 0x1, 0x1);
        gbc.writeMem(0xbe1f, { 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeb3e, gbc.sp());
        EXPECT(0xbe20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbe1f));
        // AC 0220
        gbc.setState(0x5b0f, 0x8638, 0x9130, 0xb20b, 0x72c4, 0xd582, 0x1, 0x0);
        gbc.writeMem(0x5b0f, { 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0x5b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0221
        gbc.setState(0xbb13, 0x7b3c, 0x3d30, 0xb745, 0xfc88, 0x9b81, 0x1, 0x1);
        gbc.writeMem(0xbb13, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7b3c, gbc.sp());
        EXPECT(0xbb14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbb13));
        // AC 0222
        gbc.setState(0x5d9b, 0x4eaf, 0x76c0, 0xc793, 0x28bf, 0x38d2, 0x1, 0x1);
        gbc.writeMem(0x5d9b, { 0xac });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0x5d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0223
        gbc.setState(0xc49d, 0xabf7, 0xcd70, 0xbf34, 0xc07d, 0xdbd0, 0x1, 0x1);
        gbc.writeMem(0xc49d, { 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xabf7, gbc.sp());
        EXPECT(0xc49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc49d));
        // AC 0224
        gbc.setState(0xba8c, 0x67f4, 0x3690, 0x9461, 0x7484, 0x8149, 0x1, 0x0);
        gbc.writeMem(0xba8c, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x67f4, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xba8c));
        // AC 0225
        gbc.setState(0x51d, 0xc314, 0x9310, 0x27a7, 0xaa83, 0x6373, 0x0, 0x0);
        gbc.writeMem(0x51d, { 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc314, gbc.sp());
        EXPECT(0x51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0226
        gbc.setState(0x410e, 0xbb7e, 0x2ac0, 0xa746, 0x337e, 0xbe98, 0x0, 0x1);
        gbc.writeMem(0x410e, { 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xbb7e, gbc.sp());
        EXPECT(0x410f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0227
        gbc.setState(0xe26a, 0x873, 0x4000, 0xbab, 0x34d4, 0xa1c5, 0x1, 0x0);
        gbc.writeMem(0xe26a, { 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x873, gbc.sp());
        EXPECT(0xe26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe26a));
        // AC 0228
        gbc.setState(0x4125, 0x2f46, 0x5c60, 0xf94a, 0x6180, 0x6c3c, 0x0, 0x0);
        gbc.writeMem(0x4125, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2f46, gbc.sp());
        EXPECT(0x4126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 022A
        gbc.setState(0xaadc, 0xc631, 0xa4a0, 0x7362, 0x34b, 0xb668, 0x0, 0x0);
        gbc.writeMem(0xaadc, { 0xac });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc631, gbc.sp());
        EXPECT(0xaadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaadc));
        // AC 022B
        gbc.setState(0x5191, 0x922a, 0x70e0, 0xd353, 0xd7fe, 0xc8a0, 0x0, 0x1);
        gbc.writeMem(0x5191, { 0xac });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x922a, gbc.sp());
        EXPECT(0x5192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 022C
        gbc.setState(0x19a7, 0xa54d, 0xb0a0, 0x5ef8, 0xd03b, 0x480d, 0x0, 0x0);
        gbc.writeMem(0x19a7, { 0xac });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa54d, gbc.sp());
        EXPECT(0x19a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 022D
        gbc.setState(0xcac3, 0xd6b7, 0x54e0, 0xca3, 0x9353, 0xfbca, 0x0, 0x0);
        gbc.writeMem(0xcac3, { 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd6b7, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcac3));
        // AC 022E
        gbc.setState(0x516b, 0xe8ff, 0xeb90, 0xd821, 0x22da, 0xebbc, 0x0, 0x1);
        gbc.writeMem(0x516b, { 0xac });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe8ff, gbc.sp());
        EXPECT(0x516c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 022F
        gbc.setState(0x100c, 0x1207, 0xf0e0, 0x9b7a, 0x151, 0x5562, 0x0, 0x0);
        gbc.writeMem(0x100c, { 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1207, gbc.sp());
        EXPECT(0x100d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0230
        gbc.setState(0xdb08, 0xae47, 0xaa50, 0xbefb, 0x8f69, 0xe356, 0x0, 0x1);
        gbc.writeMem(0xdb08, { 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xae47, gbc.sp());
        EXPECT(0xdb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdb08));
        // AC 0231
        gbc.setState(0x3d4e, 0x7dac, 0x3b60, 0x3054, 0x786f, 0x5bc2, 0x0, 0x0);
        gbc.writeMem(0x3d4e, { 0xac });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7dac, gbc.sp());
        EXPECT(0x3d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0232
        gbc.setState(0xc15c, 0x3400, 0x7e00, 0x2b47, 0x937d, 0xb73, 0x1, 0x0);
        gbc.writeMem(0xc15c, { 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3400, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc15c));
        // AC 0233
        gbc.setState(0x58d8, 0xc71b, 0xa8d0, 0x73cb, 0xcecb, 0x6fe6, 0x1, 0x0);
        gbc.writeMem(0x58d8, { 0xac });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0x58d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0234
        gbc.setState(0xca0a, 0xf6b, 0xc800, 0xee47, 0xe7d4, 0x568, 0x1, 0x0);
        gbc.writeMem(0xca0a, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf6b, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xca0a));
        // AC 0235
        gbc.setState(0x26fb, 0x978b, 0x9c70, 0xfef1, 0x80a3, 0x563, 0x0, 0x0);
        gbc.writeMem(0x26fb, { 0xac });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0x26fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0236
        gbc.setState(0xef95, 0xa3b9, 0x64a0, 0x65bf, 0x71e1, 0x3527, 0x1, 0x0);
        gbc.writeMem(0xef95, { 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa3b9, gbc.sp());
        EXPECT(0xef96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xef95));
        // AC 0237
        gbc.setState(0xa213, 0x3198, 0x74b0, 0x7d3d, 0x678, 0x1c40, 0x0, 0x1);
        gbc.writeMem(0xa213, { 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3198, gbc.sp());
        EXPECT(0xa214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa213));
        // AC 0238
        gbc.setState(0x230b, 0x996f, 0x47d0, 0xd046, 0xfcc0, 0x2241, 0x1, 0x1);
        gbc.writeMem(0x230b, { 0xac });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0x230c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0239
        gbc.setState(0xd21d, 0xf5df, 0xceb0, 0xda1f, 0x40a6, 0xebe0, 0x0, 0x1);
        gbc.writeMem(0xd21d, { 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf5df, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd21d));
        // AC 023A
        gbc.setState(0xdb4a, 0x3a49, 0xa2e0, 0xd68f, 0x31ba, 0x8c2e, 0x1, 0x0);
        gbc.writeMem(0xdb4a, { 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3a49, gbc.sp());
        EXPECT(0xdb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdb4a));
        // AC 023B
        gbc.setState(0xeab4, 0x593b, 0x3990, 0xf38f, 0x2dee, 0xaf1f, 0x0, 0x0);
        gbc.writeMem(0xeab4, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x593b, gbc.sp());
        EXPECT(0xeab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xeab4));
        // AC 023C
        gbc.setState(0x3ae, 0x9d32, 0x9790, 0x25ee, 0x2285, 0x4b6f, 0x1, 0x1);
        gbc.writeMem(0x3ae, { 0xac });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9d32, gbc.sp());
        EXPECT(0x3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 023D
        gbc.setState(0xe58b, 0x264a, 0x6120, 0xc762, 0xb82f, 0xa8db, 0x0, 0x0);
        gbc.writeMem(0xe58b, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x264a, gbc.sp());
        EXPECT(0xe58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe58b));
        // AC 023E
        gbc.setState(0x9ccd, 0x2750, 0x5160, 0xa033, 0x85bb, 0xe28, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2750, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9ccd));
        // AC 023F
        gbc.setState(0x6c96, 0xf21, 0x4870, 0x2191, 0x66db, 0xbc6d, 0x0, 0x0);
        gbc.writeMem(0x6c96, { 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf21, gbc.sp());
        EXPECT(0x6c97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0240
        gbc.setState(0x5590, 0x79bd, 0xdd30, 0xef2f, 0x7bbf, 0xf3a6, 0x1, 0x0);
        gbc.writeMem(0x5590, { 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x79bd, gbc.sp());
        EXPECT(0x5591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0241
        gbc.setState(0x46f0, 0x806b, 0xbad0, 0xa6e5, 0x5d26, 0xca13, 0x1, 0x0);
        gbc.writeMem(0x46f0, { 0xac });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0x46f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0242
        gbc.setState(0xa306, 0x9d2a, 0xd490, 0x7801, 0x39d1, 0xb073, 0x0, 0x1);
        gbc.writeMem(0xa306, { 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0xa307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa306));
        // AC 0243
        gbc.setState(0x25ea, 0x6b14, 0xf6f0, 0xcdf1, 0x1b8e, 0x53fa, 0x1, 0x0);
        gbc.writeMem(0x25ea, { 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6b14, gbc.sp());
        EXPECT(0x25eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0244
        gbc.setState(0x9190, 0x4852, 0x3380, 0x6cb2, 0xa288, 0x2539, 0x0, 0x0);
        gbc.writeMem(0x9190, { 0xac });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4852, gbc.sp());
        EXPECT(0x9191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9190));
        // AC 0245
        gbc.setState(0x852, 0xaa85, 0xf020, 0xf8a5, 0x6232, 0x1676, 0x0, 0x1);
        gbc.writeMem(0x852, { 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaa85, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0246
        gbc.setState(0x436d, 0x39a8, 0xeb80, 0x89a, 0x1557, 0x433b, 0x1, 0x1);
        gbc.writeMem(0x436d, { 0xac });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x39a8, gbc.sp());
        EXPECT(0x436e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0247
        gbc.setState(0x90eb, 0xe254, 0x6bd0, 0xe061, 0xcbcc, 0x9e04, 0x0, 0x0);
        gbc.writeMem(0x90eb, { 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe254, gbc.sp());
        EXPECT(0x90ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x90eb));
        // AC 0248
        gbc.setState(0xdb3b, 0xbc2b, 0x4d70, 0x840f, 0x6100, 0xe90a, 0x1, 0x1);
        gbc.writeMem(0xdb3b, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdb3b));
        // AC 0249
        gbc.setState(0xbff6, 0x2bc9, 0xf420, 0xee9b, 0x93a2, 0xe59b, 0x1, 0x0);
        gbc.writeMem(0xbff6, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2bc9, gbc.sp());
        EXPECT(0xbff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbff6));
        // AC 024A
        gbc.setState(0xddd0, 0xa159, 0xd900, 0x15dd, 0xfb6d, 0x7c30, 0x1, 0x1);
        gbc.writeMem(0xddd0, { 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa159, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xddd0));
        // AC 024C
        gbc.setState(0xbf2f, 0xbf1, 0x5370, 0x6411, 0xbf91, 0x1ae9, 0x0, 0x0);
        gbc.writeMem(0xbf2f, { 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbf1, gbc.sp());
        EXPECT(0xbf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbf2f));
        // AC 024E
        gbc.setState(0x233, 0xc705, 0x7880, 0x7666, 0xc794, 0x2a91, 0x0, 0x0);
        gbc.writeMem(0x233, { 0xac });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc705, gbc.sp());
        EXPECT(0x234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 024F
        gbc.setState(0x398f, 0xb53e, 0x4ba0, 0x779c, 0x8ec7, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0x398f, { 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb53e, gbc.sp());
        EXPECT(0x3990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0250
        gbc.setState(0xcc54, 0x234c, 0xb520, 0x9ba, 0x7302, 0xf163, 0x1, 0x0);
        gbc.writeMem(0xcc54, { 0xac });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x234c, gbc.sp());
        EXPECT(0xcc55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcc54));
        // AC 0251
        gbc.setState(0x6f53, 0xf1da, 0x1360, 0x1af, 0x4b1a, 0xb22b, 0x0, 0x1);
        gbc.writeMem(0x6f53, { 0xac });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0x6f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0252
        gbc.setState(0xd60b, 0xdaf8, 0xaee0, 0xd1d9, 0x91a, 0x9036, 0x0, 0x1);
        gbc.writeMem(0xd60b, { 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdaf8, gbc.sp());
        EXPECT(0xd60c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd60b));
        // AC 0253
        gbc.setState(0x46e6, 0xe7cc, 0x5df0, 0x4b28, 0x7019, 0x4980, 0x1, 0x0);
        gbc.writeMem(0x46e6, { 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0x46e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0254
        gbc.setState(0x6201, 0x723c, 0x3390, 0xa4ad, 0xe6c5, 0x203d, 0x1, 0x0);
        gbc.writeMem(0x6201, { 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x723c, gbc.sp());
        EXPECT(0x6202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0255
        gbc.setState(0x3cf8, 0x1cc6, 0xeae0, 0x9a8f, 0x1c4b, 0x9539, 0x1, 0x0);
        gbc.writeMem(0x3cf8, { 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1cc6, gbc.sp());
        EXPECT(0x3cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0256
        gbc.setState(0x10d, 0xab6e, 0x3500, 0x9563, 0xe3fa, 0x75e, 0x0, 0x1);
        gbc.writeMem(0x10d, { 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xab6e, gbc.sp());
        EXPECT(0x10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0257
        gbc.setState(0x5cf8, 0x1860, 0xe020, 0x124c, 0xf3e8, 0x7669, 0x1, 0x0);
        gbc.writeMem(0x5cf8, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1860, gbc.sp());
        EXPECT(0x5cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0258
        gbc.setState(0x646b, 0xce0f, 0x6060, 0x25a4, 0x21f5, 0x39fc, 0x0, 0x1);
        gbc.writeMem(0x646b, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x646c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0259
        gbc.setState(0xac5c, 0x8427, 0xd530, 0xf067, 0x558a, 0x401e, 0x0, 0x1);
        gbc.writeMem(0xac5c, { 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0xac5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xac5c));
        // AC 025A
        gbc.setState(0x64a3, 0x4e6a, 0x7b30, 0x318, 0xac07, 0x7cb2, 0x0, 0x0);
        gbc.writeMem(0x64a3, { 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 025B
        gbc.setState(0xbb5f, 0x6b08, 0x35d0, 0xb72c, 0x4eb5, 0x41aa, 0x1, 0x1);
        gbc.writeMem(0xbb5f, { 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0xbb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbb5f));
        // AC 025C
        gbc.setState(0xbcab, 0x472, 0x2090, 0xc07f, 0x4784, 0xf58, 0x0, 0x1);
        gbc.writeMem(0xbcab, { 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x472, gbc.sp());
        EXPECT(0xbcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbcab));
        // AC 025D
        gbc.setState(0xce94, 0x6bb6, 0x3b90, 0xb86d, 0x10db, 0xb74, 0x0, 0x0);
        gbc.writeMem(0xce94, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6bb6, gbc.sp());
        EXPECT(0xce95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xce94));
        // AC 025F
        gbc.setState(0x6caa, 0x326f, 0x7a40, 0xe125, 0xc07b, 0x3357, 0x1, 0x1);
        gbc.writeMem(0x6caa, { 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x326f, gbc.sp());
        EXPECT(0x6cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0261
        gbc.setState(0xc2c2, 0xd96a, 0x5ce0, 0xf0b3, 0xcfa9, 0x4d6f, 0x1, 0x1);
        gbc.writeMem(0xc2c2, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0xc2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc2c2));
        // AC 0262
        gbc.setState(0x7d09, 0xec74, 0x7060, 0x1f25, 0x6bff, 0x3056, 0x1, 0x0);
        gbc.writeMem(0x7d09, { 0xac });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xec74, gbc.sp());
        EXPECT(0x7d0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0264
        gbc.setState(0x6254, 0x13c3, 0x230, 0x4a9, 0xed17, 0x3ffa, 0x1, 0x1);
        gbc.writeMem(0x6254, { 0xac });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x13c3, gbc.sp());
        EXPECT(0x6255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0265
        gbc.setState(0xc50, 0x6be7, 0xd4b0, 0xe2ee, 0x90d0, 0x117f, 0x1, 0x0);
        gbc.writeMem(0xc50, { 0xac });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6be7, gbc.sp());
        EXPECT(0xc51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0266
        gbc.setState(0x3795, 0xc40c, 0xb9d0, 0x76c1, 0x88c1, 0x983b, 0x1, 0x1);
        gbc.writeMem(0x3795, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0x3796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0267
        gbc.setState(0xc42f, 0x4f8a, 0xc470, 0x96ce, 0xaf55, 0x8dd2, 0x0, 0x1);
        gbc.writeMem(0xc42f, { 0xac });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4f8a, gbc.sp());
        EXPECT(0xc430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc42f));
        // AC 0268
        gbc.setState(0xe0a5, 0xf482, 0x4b00, 0xb6cd, 0x6327, 0xa4a1, 0x0, 0x0);
        gbc.writeMem(0xe0a5, { 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf482, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe0a5));
        // AC 0269
        gbc.setState(0x7a29, 0xf41e, 0xa840, 0x1606, 0x195b, 0xe22f, 0x0, 0x1);
        gbc.writeMem(0x7a29, { 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf41e, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 026A
        gbc.setState(0xbd78, 0x7a9b, 0xc090, 0x203c, 0x7801, 0x3432, 0x0, 0x0);
        gbc.writeMem(0xbd78, { 0xac });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7a9b, gbc.sp());
        EXPECT(0xbd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbd78));
        // AC 026B
        gbc.setState(0xd715, 0xd6a5, 0xff00, 0x204, 0x1f32, 0xf9f4, 0x0, 0x0);
        gbc.writeMem(0xd715, { 0xac });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd6a5, gbc.sp());
        EXPECT(0xd716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd715));
        // AC 026C
        gbc.setState(0xe8d7, 0x21db, 0x1ff0, 0xf44c, 0xd3e9, 0x6a2, 0x0, 0x1);
        gbc.writeMem(0xe8d7, { 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x21db, gbc.sp());
        EXPECT(0xe8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe8d7));
        // AC 026D
        gbc.setState(0x6dac, 0xaa63, 0xff20, 0x41b2, 0x3e46, 0x614e, 0x1, 0x0);
        gbc.writeMem(0x6dac, { 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaa63, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 026E
        gbc.setState(0x1cd9, 0x4d67, 0x2150, 0x308d, 0x1755, 0xab46, 0x1, 0x0);
        gbc.writeMem(0x1cd9, { 0xac });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0x1cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 026F
        gbc.setState(0xaec4, 0x679d, 0x75d0, 0xacfa, 0xf6ef, 0x9ee1, 0x0, 0x0);
        gbc.writeMem(0xaec4, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x679d, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaec4));
        // AC 0270
        gbc.setState(0xc28f, 0x90a8, 0x7a10, 0xe7ec, 0xd6b1, 0xf090, 0x0, 0x0);
        gbc.writeMem(0xc28f, { 0xac });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x90a8, gbc.sp());
        EXPECT(0xc290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc28f));
        // AC 0271
        gbc.setState(0x94bc, 0xf1ed, 0xe7e0, 0x2b27, 0xab8f, 0x56a1, 0x1, 0x1);
        gbc.writeMem(0x94bc, { 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf1ed, gbc.sp());
        EXPECT(0x94bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x94bc));
        // AC 0272
        gbc.setState(0x7800, 0x9da3, 0xeec0, 0x21d0, 0x44fd, 0x3d6, 0x1, 0x0);
        gbc.writeMem(0x7800, { 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9da3, gbc.sp());
        EXPECT(0x7801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0273
        gbc.setState(0xef0f, 0xe3d8, 0xadf0, 0x9fd0, 0x94f8, 0xc2bf, 0x0, 0x0);
        gbc.writeMem(0xef0f, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe3d8, gbc.sp());
        EXPECT(0xef10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xef0f));
        // AC 0275
        gbc.setState(0xa3a3, 0xc70, 0x5c10, 0x7b9a, 0x6f0b, 0x8ab6, 0x0, 0x0);
        gbc.writeMem(0xa3a3, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc70, gbc.sp());
        EXPECT(0xa3a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa3a3));
        // AC 0276
        gbc.setState(0x86f8, 0x674b, 0x5090, 0xd10d, 0xf2b0, 0x2d4b, 0x1, 0x0);
        gbc.writeMem(0x86f8, { 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x674b, gbc.sp());
        EXPECT(0x86f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x86f8));
        // AC 0277
        gbc.setState(0x75ec, 0xc88d, 0x7140, 0xa55a, 0xbc1e, 0x191, 0x0, 0x1);
        gbc.writeMem(0x75ec, { 0xac });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc88d, gbc.sp());
        EXPECT(0x75ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0278
        gbc.setState(0xb36d, 0x2034, 0xcf80, 0x65fd, 0xb92d, 0xe570, 0x0, 0x0);
        gbc.writeMem(0xb36d, { 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2034, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb36d));
        // AC 0279
        gbc.setState(0x4725, 0x5064, 0xd630, 0x6c8e, 0xa2aa, 0x4883, 0x1, 0x1);
        gbc.writeMem(0x4725, { 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5064, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 027A
        gbc.setState(0xa171, 0xf524, 0x6bf0, 0x184f, 0x22e2, 0x726e, 0x1, 0x1);
        gbc.writeMem(0xa171, { 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0xa172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa171));
        // AC 027B
        gbc.setState(0x7229, 0x4eec, 0xd080, 0x7b8c, 0xe6a4, 0x5e6f, 0x0, 0x0);
        gbc.writeMem(0x7229, { 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0x722a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 027D
        gbc.setState(0xc5c3, 0x4502, 0x9220, 0x46da, 0x31f2, 0x9618, 0x0, 0x1);
        gbc.writeMem(0xc5c3, { 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4502, gbc.sp());
        EXPECT(0xc5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc5c3));
        // AC 027E
        gbc.setState(0xa4fa, 0x136a, 0x9190, 0xe4c5, 0x53eb, 0xb90b, 0x1, 0x1);
        gbc.writeMem(0xa4fa, { 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x136a, gbc.sp());
        EXPECT(0xa4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa4fa));
        // AC 027F
        gbc.setState(0x2ef7, 0xe38e, 0x9a50, 0x2f27, 0x7098, 0x1852, 0x0, 0x1);
        gbc.writeMem(0x2ef7, { 0xac });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe38e, gbc.sp());
        EXPECT(0x2ef8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0280
        gbc.setState(0x756c, 0x6a22, 0xf220, 0xcc2c, 0x5c2c, 0x9001, 0x1, 0x1);
        gbc.writeMem(0x756c, { 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6a22, gbc.sp());
        EXPECT(0x756d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0281
        gbc.setState(0x4701, 0x100e, 0xa6f0, 0xf86c, 0x551a, 0xd9d1, 0x0, 0x1);
        gbc.writeMem(0x4701, { 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x100e, gbc.sp());
        EXPECT(0x4702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0282
        gbc.setState(0x23af, 0x848c, 0xbcb0, 0x3ce2, 0xa630, 0x2dc4, 0x1, 0x0);
        gbc.writeMem(0x23af, { 0xac });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x848c, gbc.sp());
        EXPECT(0x23b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0283
        gbc.setState(0x651a, 0xb70a, 0x9940, 0x5704, 0x2b26, 0xaf4e, 0x0, 0x1);
        gbc.writeMem(0x651a, { 0xac });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb70a, gbc.sp());
        EXPECT(0x651b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0284
        gbc.setState(0x9887, 0x182a, 0x4480, 0xe126, 0x2a57, 0x3339, 0x1, 0x1);
        gbc.writeMem(0x9887, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x182a, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9887));
        // AC 0285
        gbc.setState(0x7908, 0xffa, 0xa120, 0x68db, 0x34fb, 0x4310, 0x1, 0x0);
        gbc.writeMem(0x7908, { 0xac });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xffa, gbc.sp());
        EXPECT(0x7909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0286
        gbc.setState(0x8470, 0xbbc2, 0xe570, 0x541f, 0x13f0, 0x6df4, 0x1, 0x1);
        gbc.writeMem(0x8470, { 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0x8471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8470));
        // AC 0287
        gbc.setState(0x7147, 0x2fda, 0x70a0, 0x5ba7, 0xfa56, 0xb13c, 0x1, 0x0);
        gbc.writeMem(0x7147, { 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0x7148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0288
        gbc.setState(0x46e7, 0xb570, 0x48c0, 0x2ffd, 0x5190, 0x1002, 0x0, 0x0);
        gbc.writeMem(0x46e7, { 0xac });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb570, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0289
        gbc.setState(0xaada, 0x2bce, 0xc560, 0xc37e, 0xb231, 0x6e0e, 0x1, 0x0);
        gbc.writeMem(0xaada, { 0xac });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2bce, gbc.sp());
        EXPECT(0xaadb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaada));
        // AC 028A
        gbc.setState(0x50cb, 0xaecc, 0xc930, 0xf6b7, 0xa7d9, 0xc6a6, 0x1, 0x1);
        gbc.writeMem(0x50cb, { 0xac });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaecc, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 028B
        gbc.setState(0xde54, 0x57d6, 0xa690, 0xd8b0, 0x37b8, 0x77b0, 0x0, 0x1);
        gbc.writeMem(0xde54, { 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x57d6, gbc.sp());
        EXPECT(0xde55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xde54));
        // AC 028C
        gbc.setState(0xb88e, 0x937c, 0x4d10, 0x2168, 0x21b4, 0xf542, 0x0, 0x1);
        gbc.writeMem(0xb88e, { 0xac });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x937c, gbc.sp());
        EXPECT(0xb88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb88e));
        // AC 028D
        gbc.setState(0xd23a, 0x4f30, 0x87a0, 0xde15, 0x31da, 0x5be, 0x0, 0x1);
        gbc.writeMem(0xd23a, { 0xac });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4f30, gbc.sp());
        EXPECT(0xd23b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd23a));
        // AC 028E
        gbc.setState(0x99a2, 0x203e, 0x32c0, 0xee7d, 0x987f, 0xcdc1, 0x0, 0x1);
        gbc.writeMem(0x99a2, { 0xac });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0x99a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x99a2));
        // AC 028F
        gbc.setState(0x4f48, 0x8647, 0x9040, 0x1e93, 0x934c, 0x6688, 0x1, 0x1);
        gbc.writeMem(0x4f48, { 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0x4f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0290
        gbc.setState(0xce59, 0xe5f4, 0x70e0, 0x7f17, 0xfaac, 0xdd7f, 0x1, 0x0);
        gbc.writeMem(0xce59, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe5f4, gbc.sp());
        EXPECT(0xce5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xce59));
        // AC 0291
        gbc.setState(0x1191, 0x4003, 0x46c0, 0xa536, 0x12d7, 0x5ba6, 0x1, 0x1);
        gbc.writeMem(0x1191, { 0xac });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4003, gbc.sp());
        EXPECT(0x1192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0292
        gbc.setState(0xdd63, 0x16f0, 0x50f0, 0xda7f, 0xd4f, 0x4ae0, 0x1, 0x1);
        gbc.writeMem(0xdd63, { 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x16f0, gbc.sp());
        EXPECT(0xdd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdd63));
        // AC 0293
        gbc.setState(0xc1b1, 0x4fd6, 0xe490, 0xda4e, 0xd0c4, 0x1e13, 0x1, 0x1);
        gbc.writeMem(0xc1b1, { 0xac });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4fd6, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc1b1));
        // AC 0294
        gbc.setState(0xea48, 0xd364, 0x1d10, 0xe69f, 0xc070, 0xad76, 0x1, 0x0);
        gbc.writeMem(0xea48, { 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd364, gbc.sp());
        EXPECT(0xea49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xea48));
        // AC 0295
        gbc.setState(0x11d2, 0x4036, 0xde60, 0x5e7d, 0xf64f, 0xab35, 0x1, 0x0);
        gbc.writeMem(0x11d2, { 0xac });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4036, gbc.sp());
        EXPECT(0x11d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0296
        gbc.setState(0xac4c, 0x1e9a, 0xe4a0, 0xd406, 0x127, 0x4cd1, 0x1, 0x1);
        gbc.writeMem(0xac4c, { 0xac });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1e9a, gbc.sp());
        EXPECT(0xac4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xac4c));
        // AC 0297
        gbc.setState(0xa43c, 0x287e, 0x5ab0, 0xecb6, 0x39fe, 0x8035, 0x1, 0x0);
        gbc.writeMem(0xa43c, { 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x287e, gbc.sp());
        EXPECT(0xa43d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa43c));
        // AC 0299
        gbc.setState(0xa793, 0x9072, 0x110, 0x319f, 0x45d0, 0xe7fb, 0x1, 0x0);
        gbc.writeMem(0xa793, { 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0xa794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa793));
        // AC 029A
        gbc.setState(0xb780, 0x1115, 0x2a0, 0x4492, 0x204b, 0xfc4b, 0x1, 0x1);
        gbc.writeMem(0xb780, { 0xac });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1115, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb780));
        // AC 029B
        gbc.setState(0x2389, 0xe929, 0x94b0, 0xa3a2, 0xb768, 0x6d5f, 0x0, 0x1);
        gbc.writeMem(0x2389, { 0xac });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe929, gbc.sp());
        EXPECT(0x238a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 029C
        gbc.setState(0xcd43, 0x5964, 0xa5e0, 0xcf2d, 0xbb16, 0x50af, 0x1, 0x0);
        gbc.writeMem(0xcd43, { 0xac });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5964, gbc.sp());
        EXPECT(0xcd44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcd43));
        // AC 029D
        gbc.setState(0x998a, 0x9ae4, 0x91f0, 0x6d9c, 0xb6e2, 0xaa24, 0x0, 0x0);
        gbc.writeMem(0x998a, { 0xac });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9ae4, gbc.sp());
        EXPECT(0x998b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x998a));
        // AC 029E
        gbc.setState(0x3865, 0x2f69, 0xb430, 0xd2db, 0x1ebc, 0x30c9, 0x0, 0x1);
        gbc.writeMem(0x3865, { 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2f69, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 029F
        gbc.setState(0x5035, 0x203f, 0x81b0, 0x7c5a, 0xa00b, 0xc954, 0x1, 0x0);
        gbc.writeMem(0x5035, { 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x203f, gbc.sp());
        EXPECT(0x5036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02A0
        gbc.setState(0xda29, 0x15b, 0x1c00, 0xf7af, 0x15c3, 0x3e00, 0x0, 0x1);
        gbc.writeMem(0xda29, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x15b, gbc.sp());
        EXPECT(0xda2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xda29));
        // AC 02A1
        gbc.setState(0x8a7f, 0x8607, 0xd6c0, 0xa1e4, 0x5c3b, 0x6ba6, 0x1, 0x0);
        gbc.writeMem(0x8a7f, { 0xac });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8607, gbc.sp());
        EXPECT(0x8a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8a7f));
        // AC 02A2
        gbc.setState(0x2f6b, 0xf545, 0xd730, 0xc83f, 0x5acf, 0xf6e1, 0x1, 0x1);
        gbc.writeMem(0x2f6b, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf545, gbc.sp());
        EXPECT(0x2f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02A3
        gbc.setState(0x5917, 0xe57a, 0xe280, 0x2e08, 0xf6cb, 0xcd4e, 0x0, 0x0);
        gbc.writeMem(0x5917, { 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe57a, gbc.sp());
        EXPECT(0x5918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02A4
        gbc.setState(0x71e3, 0xfc72, 0xd9a0, 0x83f0, 0x5853, 0x5d00, 0x1, 0x0);
        gbc.writeMem(0x71e3, { 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfc72, gbc.sp());
        EXPECT(0x71e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02A5
        gbc.setState(0x6812, 0xa00, 0x22d0, 0x4335, 0x1510, 0x82c2, 0x1, 0x0);
        gbc.writeMem(0x6812, { 0xac });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa00, gbc.sp());
        EXPECT(0x6813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02A6
        gbc.setState(0xb288, 0xddf2, 0xe0a0, 0xcbef, 0x7f3c, 0x27da, 0x1, 0x1);
        gbc.writeMem(0xb288, { 0xac });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xddf2, gbc.sp());
        EXPECT(0xb289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb288));
        // AC 02A7
        gbc.setState(0xbc16, 0x7966, 0x8130, 0x5e09, 0xa3b1, 0x77b8, 0x1, 0x1);
        gbc.writeMem(0xbc16, { 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0xbc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbc16));
        // AC 02A8
        gbc.setState(0x39ed, 0x36bc, 0xc300, 0x6132, 0x18f0, 0x9868, 0x1, 0x1);
        gbc.writeMem(0x39ed, { 0xac });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x36bc, gbc.sp());
        EXPECT(0x39ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02A9
        gbc.setState(0xdc6, 0x7861, 0xa050, 0xfeda, 0xad9, 0x91da, 0x1, 0x1);
        gbc.writeMem(0xdc6, { 0xac });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0xdc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02AA
        gbc.setState(0x5cba, 0x30ef, 0xb510, 0x1c3d, 0x533c, 0xbb6c, 0x0, 0x1);
        gbc.writeMem(0x5cba, { 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0x5cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02AB
        gbc.setState(0x193b, 0x7e0f, 0x25d0, 0xca0b, 0x7d5c, 0x5a85, 0x1, 0x1);
        gbc.writeMem(0x193b, { 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7e0f, gbc.sp());
        EXPECT(0x193c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02AC
        gbc.setState(0x510, 0x6759, 0x63b0, 0x3ca, 0xa9de, 0x506, 0x1, 0x0);
        gbc.writeMem(0x510, { 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6759, gbc.sp());
        EXPECT(0x511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02AD
        gbc.setState(0xd18d, 0xa2d1, 0x830, 0x8771, 0x8582, 0x90b7, 0x1, 0x1);
        gbc.writeMem(0xd18d, { 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa2d1, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd18d));
        // AC 02AE
        gbc.setState(0xd93c, 0x2d3a, 0x9410, 0x3bb6, 0x6b7a, 0x29bb, 0x0, 0x0);
        gbc.writeMem(0xd93c, { 0xac });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2d3a, gbc.sp());
        EXPECT(0xd93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd93c));
        // AC 02B0
        gbc.setState(0x66f, 0xedcb, 0x6aa0, 0x79cf, 0xd7c6, 0xe916, 0x0, 0x1);
        gbc.writeMem(0x66f, { 0xac });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xedcb, gbc.sp());
        EXPECT(0x670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B1
        gbc.setState(0x1758, 0xf6c7, 0xd3d0, 0x22da, 0xe0f9, 0xa4f7, 0x0, 0x1);
        gbc.writeMem(0x1758, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf6c7, gbc.sp());
        EXPECT(0x1759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B2
        gbc.setState(0x2c4c, 0x1a6f, 0x3370, 0x685b, 0x8a3b, 0x168c, 0x1, 0x1);
        gbc.writeMem(0x2c4c, { 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1a6f, gbc.sp());
        EXPECT(0x2c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B3
        gbc.setState(0x7070, 0x7661, 0x9530, 0x3cf7, 0x3082, 0x630, 0x1, 0x1);
        gbc.writeMem(0x7070, { 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7661, gbc.sp());
        EXPECT(0x7071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B4
        gbc.setState(0x3387, 0x5a5c, 0x9120, 0x5450, 0x2985, 0xe549, 0x0, 0x1);
        gbc.writeMem(0x3387, { 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5a5c, gbc.sp());
        EXPECT(0x3388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B5
        gbc.setState(0x138e, 0xd397, 0xe7d0, 0x2f35, 0xae54, 0x4273, 0x1, 0x0);
        gbc.writeMem(0x138e, { 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd397, gbc.sp());
        EXPECT(0x138f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B6
        gbc.setState(0x4f5f, 0x53af, 0xba10, 0xbc7d, 0x1d2b, 0x41b1, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x53af, gbc.sp());
        EXPECT(0x4f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02B7
        gbc.setState(0x89ea, 0xe883, 0xa680, 0xad9e, 0xc92b, 0xa3cf, 0x1, 0x1);
        gbc.writeMem(0x89ea, { 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe883, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x89ea));
        // AC 02B8
        gbc.setState(0x8d17, 0xcce0, 0xd980, 0xe63b, 0x7f8c, 0xaeaf, 0x1, 0x1);
        gbc.writeMem(0x8d17, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcce0, gbc.sp());
        EXPECT(0x8d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8d17));
        // AC 02B9
        gbc.setState(0x75b9, 0xd663, 0x8d70, 0x5715, 0x1adb, 0x8433, 0x0, 0x0);
        gbc.writeMem(0x75b9, { 0xac });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd663, gbc.sp());
        EXPECT(0x75ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02BA
        gbc.setState(0x3a2d, 0xe076, 0xbee0, 0xb9ae, 0x30b5, 0x2698, 0x1, 0x0);
        gbc.writeMem(0x3a2d, { 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe076, gbc.sp());
        EXPECT(0x3a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02BB
        gbc.setState(0x867a, 0x4441, 0xb30, 0x1d30, 0xb3a7, 0xb82b, 0x0, 0x1);
        gbc.writeMem(0x867a, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4441, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x867a));
        // AC 02BC
        gbc.setState(0xd5b0, 0x5753, 0xf6c0, 0x2e1f, 0x3c74, 0x97ce, 0x0, 0x0);
        gbc.writeMem(0xd5b0, { 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5753, gbc.sp());
        EXPECT(0xd5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd5b0));
        // AC 02BD
        gbc.setState(0x2161, 0x4b60, 0x9600, 0xb430, 0xff85, 0x94e0, 0x1, 0x1);
        gbc.writeMem(0x2161, { 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b60, gbc.sp());
        EXPECT(0x2162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02BE
        gbc.setState(0xb97, 0xc905, 0xcfb0, 0x1d65, 0xb78f, 0x4d8e, 0x1, 0x1);
        gbc.writeMem(0xb97, { 0xac });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0xb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02BF
        gbc.setState(0xae5d, 0xb5a1, 0x3810, 0xa41, 0x1350, 0xeb02, 0x1, 0x1);
        gbc.writeMem(0xae5d, { 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb5a1, gbc.sp());
        EXPECT(0xae5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xae5d));
        // AC 02C0
        gbc.setState(0x4afd, 0xd101, 0x1740, 0x61b2, 0x8b3c, 0x690, 0x1, 0x1);
        gbc.writeMem(0x4afd, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd101, gbc.sp());
        EXPECT(0x4afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02C1
        gbc.setState(0xcea9, 0x8305, 0x820, 0x9e95, 0xe1ab, 0x5ed6, 0x0, 0x0);
        gbc.writeMem(0xcea9, { 0xac });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8305, gbc.sp());
        EXPECT(0xceaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcea9));
        // AC 02C2
        gbc.setState(0x5f34, 0xf6d9, 0xb370, 0xf63a, 0x64e4, 0x71a0, 0x1, 0x1);
        gbc.writeMem(0x5f34, { 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0x5f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02C3
        gbc.setState(0x5d68, 0x9a8, 0xdbb0, 0x8405, 0x6d29, 0xca07, 0x0, 0x0);
        gbc.writeMem(0x5d68, { 0xac });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9a8, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02C4
        gbc.setState(0x31e9, 0xeab4, 0x860, 0x14df, 0x27a3, 0x2e78, 0x1, 0x1);
        gbc.writeMem(0x31e9, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0x31ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02C5
        gbc.setState(0x8688, 0x8568, 0xd580, 0x1fdc, 0x979b, 0xed6f, 0x1, 0x0);
        gbc.writeMem(0x8688, { 0xac });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8568, gbc.sp());
        EXPECT(0x8689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8688));
        // AC 02C6
        gbc.setState(0x5cc4, 0x2af2, 0x8ba0, 0x5c2b, 0x4d5d, 0xe71a, 0x1, 0x1);
        gbc.writeMem(0x5cc4, { 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2af2, gbc.sp());
        EXPECT(0x5cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02C7
        gbc.setState(0xa4e8, 0x2111, 0x4450, 0xa216, 0xd6a2, 0x5a5f, 0x0, 0x1);
        gbc.writeMem(0xa4e8, { 0xac });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2111, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa4e8));
        // AC 02C8
        gbc.setState(0xb8ca, 0xfe8, 0xf9d0, 0xf9e2, 0x629f, 0x91bc, 0x1, 0x0);
        gbc.writeMem(0xb8ca, { 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfe8, gbc.sp());
        EXPECT(0xb8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb8ca));
        // AC 02C9
        gbc.setState(0xae9e, 0x77ab, 0x1150, 0x34d2, 0x19d4, 0x22be, 0x1, 0x1);
        gbc.writeMem(0xae9e, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x77ab, gbc.sp());
        EXPECT(0xae9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xae9e));
        // AC 02CA
        gbc.setState(0xde7, 0x2de1, 0xe1b0, 0x1264, 0x36fd, 0x8e62, 0x1, 0x1);
        gbc.writeMem(0xde7, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0xde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02CB
        gbc.setState(0xb5ff, 0xa9c0, 0xc170, 0xd2a6, 0x955b, 0xbf0a, 0x1, 0x0);
        gbc.writeMem(0xb5ff, { 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa9c0, gbc.sp());
        EXPECT(0xb600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb5ff));
        // AC 02CC
        gbc.setState(0x6c61, 0xce82, 0x480, 0x854, 0xe215, 0xcbec, 0x0, 0x1);
        gbc.writeMem(0x6c61, { 0xac });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xce82, gbc.sp());
        EXPECT(0x6c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02CD
        gbc.setState(0x33a8, 0x9716, 0x9b80, 0xc493, 0x8d8d, 0x7570, 0x1, 0x1);
        gbc.writeMem(0x33a8, { 0xac });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9716, gbc.sp());
        EXPECT(0x33a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02CE
        gbc.setState(0xc58e, 0xd12a, 0xaa10, 0xaa2a, 0x31ce, 0xc881, 0x1, 0x0);
        gbc.writeMem(0xc58e, { 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd12a, gbc.sp());
        EXPECT(0xc58f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc58e));
        // AC 02CF
        gbc.setState(0x1a80, 0xe798, 0x8750, 0xc1f9, 0xfb0e, 0xb3ca, 0x0, 0x0);
        gbc.writeMem(0x1a80, { 0xac });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe798, gbc.sp());
        EXPECT(0x1a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02D1
        gbc.setState(0x51f4, 0xc80f, 0xf600, 0x81a4, 0xf542, 0x1a10, 0x1, 0x0);
        gbc.writeMem(0x51f4, { 0xac });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc80f, gbc.sp());
        EXPECT(0x51f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02D2
        gbc.setState(0x945a, 0x3d26, 0x7420, 0x1500, 0x4b43, 0xd713, 0x0, 0x0);
        gbc.writeMem(0x945a, { 0xac });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3d26, gbc.sp());
        EXPECT(0x945b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x945a));
        // AC 02D3
        gbc.setState(0x93ef, 0x7802, 0x1d10, 0x5588, 0xca63, 0xcd38, 0x0, 0x0);
        gbc.writeMem(0x93ef, { 0xac });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7802, gbc.sp());
        EXPECT(0x93f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x93ef));
        // AC 02D4
        gbc.setState(0xb72f, 0x1391, 0x4330, 0xa7d2, 0x48, 0xeef6, 0x0, 0x1);
        gbc.writeMem(0xb72f, { 0xac });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1391, gbc.sp());
        EXPECT(0xb730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb72f));
        // AC 02D5
        gbc.setState(0x50fc, 0xbe14, 0x5c20, 0xd0d7, 0x1e91, 0xdaf5, 0x0, 0x1);
        gbc.writeMem(0x50fc, { 0xac });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbe14, gbc.sp());
        EXPECT(0x50fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02D6
        gbc.setState(0x344f, 0x5bef, 0x6670, 0xfe23, 0x2c6b, 0x2ba4, 0x0, 0x1);
        gbc.writeMem(0x344f, { 0xac });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5bef, gbc.sp());
        EXPECT(0x3450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02D7
        gbc.setState(0xb337, 0xeb27, 0xdfb0, 0xab96, 0xcfef, 0x50f1, 0x1, 0x0);
        gbc.writeMem(0xb337, { 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeb27, gbc.sp());
        EXPECT(0xb338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb337));
        // AC 02D8
        gbc.setState(0x68e4, 0x4f0b, 0x63f0, 0x4456, 0xc245, 0x1d22, 0x0, 0x1);
        gbc.writeMem(0x68e4, { 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4f0b, gbc.sp());
        EXPECT(0x68e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02D9
        gbc.setState(0x2225, 0xc5eb, 0xb9f0, 0xb980, 0x6e3b, 0xcd0c, 0x0, 0x0);
        gbc.writeMem(0x2225, { 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0x2226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02DB
        gbc.setState(0x6c10, 0xb196, 0xf980, 0xb6b8, 0x8db8, 0xb6b0, 0x0, 0x1);
        gbc.writeMem(0x6c10, { 0xac });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb196, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02DC
        gbc.setState(0x885e, 0x5c2d, 0xe180, 0xbb9c, 0x2a27, 0xb60f, 0x1, 0x0);
        gbc.writeMem(0x885e, { 0xac });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x885e));
        // AC 02DD
        gbc.setState(0x14c6, 0xf348, 0x4c50, 0x178f, 0x4ec7, 0xffda, 0x0, 0x1);
        gbc.writeMem(0x14c6, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0x14c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02DE
        gbc.setState(0x41b6, 0xebb7, 0x3b10, 0x7993, 0xbabd, 0xcbda, 0x1, 0x0);
        gbc.writeMem(0x41b6, { 0xac });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xebb7, gbc.sp());
        EXPECT(0x41b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02DF
        gbc.setState(0x7e8, 0x88c7, 0xf40, 0xdfe2, 0xd157, 0x61f2, 0x1, 0x1);
        gbc.writeMem(0x7e8, { 0xac });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x88c7, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02E0
        gbc.setState(0xe000, 0x2af9, 0xe020, 0x964e, 0x9405, 0x44f8, 0x0, 0x0);
        gbc.writeMem(0xe000, { 0xac });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2af9, gbc.sp());
        EXPECT(0xe001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe000));
        // AC 02E1
        gbc.setState(0x46c2, 0xb519, 0x4cd0, 0x490b, 0xf82d, 0xd95f, 0x1, 0x0);
        gbc.writeMem(0x46c2, { 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb519, gbc.sp());
        EXPECT(0x46c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02E2
        gbc.setState(0x9a9f, 0x8e5e, 0x8210, 0xdcfc, 0x2040, 0xeba2, 0x1, 0x0);
        gbc.writeMem(0x9a9f, { 0xac });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e5e, gbc.sp());
        EXPECT(0x9aa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9a9f));
        // AC 02E3
        gbc.setState(0xb904, 0x6e41, 0x2e00, 0x2eff, 0x2a5d, 0x9db3, 0x0, 0x0);
        gbc.writeMem(0xb904, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6e41, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb904));
        // AC 02E4
        gbc.setState(0xbe00, 0xbe3f, 0x3f90, 0xfaa2, 0x1d28, 0xbb44, 0x1, 0x0);
        gbc.writeMem(0xbe00, { 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbe3f, gbc.sp());
        EXPECT(0xbe01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbe00));
        // AC 02E5
        gbc.setState(0xee83, 0x57ca, 0x5270, 0xfeaf, 0x195, 0xe1ae, 0x1, 0x1);
        gbc.writeMem(0xee83, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x57ca, gbc.sp());
        EXPECT(0xee84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xee83));
        // AC 02E6
        gbc.setState(0x1988, 0xb038, 0xdd50, 0x2231, 0xcfa3, 0xd6d4, 0x0, 0x1);
        gbc.writeMem(0x1988, { 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb038, gbc.sp());
        EXPECT(0x1989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02E7
        gbc.setState(0xab5e, 0x78a8, 0xc2c0, 0x525d, 0xbb5e, 0x4671, 0x0, 0x1);
        gbc.writeMem(0xab5e, { 0xac });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x78a8, gbc.sp());
        EXPECT(0xab5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xab5e));
        // AC 02E8
        gbc.setState(0x8c03, 0xd43f, 0xfcd0, 0x732b, 0x8e42, 0xa131, 0x1, 0x1);
        gbc.writeMem(0x8c03, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0x8c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8c03));
        // AC 02E9
        gbc.setState(0xaebf, 0x718c, 0xf970, 0x3953, 0xcc47, 0x1ad7, 0x0, 0x1);
        gbc.writeMem(0xaebf, { 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x718c, gbc.sp());
        EXPECT(0xaec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaebf));
        // AC 02EA
        gbc.setState(0xe13f, 0xf8fb, 0x9150, 0xcc2e, 0x762a, 0xfbe7, 0x1, 0x1);
        gbc.writeMem(0xe13f, { 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf8fb, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe13f));
        // AC 02EB
        gbc.setState(0x240c, 0x77bb, 0x2bb0, 0x1b15, 0x910d, 0x888c, 0x1, 0x1);
        gbc.writeMem(0x240c, { 0xac });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x77bb, gbc.sp());
        EXPECT(0x240d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02EC
        gbc.setState(0x560, 0x3364, 0xce80, 0xd8e4, 0xee3d, 0x185a, 0x1, 0x0);
        gbc.writeMem(0x560, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3364, gbc.sp());
        EXPECT(0x561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02ED
        gbc.setState(0x6aca, 0x1406, 0x17d0, 0xc6d9, 0x71f4, 0x1192, 0x1, 0x0);
        gbc.writeMem(0x6aca, { 0xac });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1406, gbc.sp());
        EXPECT(0x6acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02EE
        gbc.setState(0xb4e, 0xf632, 0x4920, 0xbc12, 0x8a03, 0xf9cb, 0x0, 0x1);
        gbc.writeMem(0xb4e, { 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf632, gbc.sp());
        EXPECT(0xb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02EF
        gbc.setState(0xd4b7, 0x63bf, 0xb3b0, 0x2244, 0x1265, 0xe77e, 0x0, 0x1);
        gbc.writeMem(0xd4b7, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x63bf, gbc.sp());
        EXPECT(0xd4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd4b7));
        // AC 02F0
        gbc.setState(0x5a85, 0x2914, 0xc020, 0xed2d, 0x7deb, 0x3d79, 0x0, 0x0);
        gbc.writeMem(0x5a85, { 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0x5a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02F1
        gbc.setState(0x1db3, 0x5232, 0x2500, 0xf911, 0x7796, 0x5c61, 0x1, 0x0);
        gbc.writeMem(0x1db3, { 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0x1db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02F2
        gbc.setState(0xce46, 0xb8d2, 0xd770, 0x9cc1, 0x71f1, 0x525b, 0x0, 0x1);
        gbc.writeMem(0xce46, { 0xac });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb8d2, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xce46));
        // AC 02F3
        gbc.setState(0x271d, 0x8805, 0xdd40, 0x4fce, 0x346e, 0xe1f, 0x1, 0x1);
        gbc.writeMem(0x271d, { 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8805, gbc.sp());
        EXPECT(0x271e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02F4
        gbc.setState(0xd6bd, 0x3319, 0x2520, 0xfac0, 0xda15, 0x135, 0x1, 0x0);
        gbc.writeMem(0xd6bd, { 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd6bd));
        // AC 02F5
        gbc.setState(0xb47a, 0xd3a1, 0x50e0, 0xd0c5, 0x619b, 0x3f94, 0x0, 0x0);
        gbc.writeMem(0xb47a, { 0xac });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb47a));
        // AC 02F6
        gbc.setState(0x707a, 0x55ae, 0x71b0, 0x57f8, 0xa9d4, 0x8d5, 0x1, 0x0);
        gbc.writeMem(0x707a, { 0xac });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x55ae, gbc.sp());
        EXPECT(0x707b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02F7
        gbc.setState(0xa193, 0xa840, 0x2b10, 0x5123, 0x8b68, 0xbf08, 0x0, 0x1);
        gbc.writeMem(0xa193, { 0xac });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0xa194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa193));
        // AC 02F8
        gbc.setState(0xbe82, 0xda37, 0x90c0, 0xf0e5, 0x8ab0, 0x4e4f, 0x0, 0x1);
        gbc.writeMem(0xbe82, { 0xac });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0xbe83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbe82));
        // AC 02F9
        gbc.setState(0x5e14, 0x4348, 0x8440, 0x5d2d, 0x5673, 0xaf3b, 0x0, 0x1);
        gbc.writeMem(0x5e14, { 0xac });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4348, gbc.sp());
        EXPECT(0x5e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02FA
        gbc.setState(0x4d7, 0x559e, 0xf6f0, 0x3bf0, 0x5e2, 0x4c65, 0x0, 0x0);
        gbc.writeMem(0x4d7, { 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x559e, gbc.sp());
        EXPECT(0x4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02FB
        gbc.setState(0x60a1, 0x92c8, 0xbeb0, 0xe32, 0xb583, 0x5887, 0x1, 0x0);
        gbc.writeMem(0x60a1, { 0xac });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x92c8, gbc.sp());
        EXPECT(0x60a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02FD
        gbc.setState(0x4569, 0xa9f4, 0xbaf0, 0xfe09, 0xc8e4, 0xe377, 0x1, 0x0);
        gbc.writeMem(0x4569, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa9f4, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 02FE
        gbc.setState(0xed08, 0xb7cf, 0xecc0, 0xaa17, 0x40a6, 0x337e, 0x1, 0x0);
        gbc.writeMem(0xed08, { 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb7cf, gbc.sp());
        EXPECT(0xed09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xed08));
        // AC 02FF
        gbc.setState(0x3ae0, 0x7901, 0x3de0, 0x5bef, 0xa561, 0xd77f, 0x1, 0x1);
        gbc.writeMem(0x3ae0, { 0xac });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7901, gbc.sp());
        EXPECT(0x3ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0300
        gbc.setState(0xbd2d, 0x275d, 0xe9c0, 0x6ee3, 0xc907, 0xbc7a, 0x1, 0x0);
        gbc.writeMem(0xbd2d, { 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x275d, gbc.sp());
        EXPECT(0xbd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbd2d));
        // AC 0301
        gbc.setState(0x4191, 0xb014, 0xa0e0, 0x65f7, 0x8b44, 0x1261, 0x0, 0x1);
        gbc.writeMem(0x4191, { 0xac });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb014, gbc.sp());
        EXPECT(0x4192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0302
        gbc.setState(0x4f05, 0xdbc7, 0x43e0, 0x2338, 0x87f1, 0x3793, 0x1, 0x0);
        gbc.writeMem(0x4f05, { 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0x4f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0303
        gbc.setState(0x106c, 0xd9ca, 0x9b70, 0x5086, 0x8c4, 0xbd18, 0x1, 0x1);
        gbc.writeMem(0x106c, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0x106d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0304
        gbc.setState(0x811, 0x1832, 0xb520, 0x768d, 0x6ef, 0x4c92, 0x1, 0x1);
        gbc.writeMem(0x811, { 0xac });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0305
        gbc.setState(0x5924, 0x9487, 0x9940, 0xd876, 0x7d59, 0x17d5, 0x0, 0x0);
        gbc.writeMem(0x5924, { 0xac });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9487, gbc.sp());
        EXPECT(0x5925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0306
        gbc.setState(0x915, 0x517e, 0xaf90, 0x7626, 0x2b35, 0x4433, 0x1, 0x1);
        gbc.writeMem(0x915, { 0xac });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0x916, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0307
        gbc.setState(0xa9ed, 0xb4c4, 0xf8a0, 0x1d28, 0x7acf, 0xa96d, 0x0, 0x0);
        gbc.writeMem(0xa9ed, { 0xac });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa9ed));
        // AC 0308
        gbc.setState(0x2ca7, 0x846, 0xe000, 0x49fa, 0xf550, 0x73d7, 0x0, 0x0);
        gbc.writeMem(0x2ca7, { 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0309
        gbc.setState(0x8754, 0xda66, 0x3010, 0xcfe1, 0x2ce1, 0xc1d4, 0x1, 0x1);
        gbc.writeMem(0x8754, { 0xac });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda66, gbc.sp());
        EXPECT(0x8755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8754));
        // AC 030A
        gbc.setState(0x4d5a, 0x2d8e, 0x8c20, 0x5411, 0xb199, 0x13c7, 0x0, 0x1);
        gbc.writeMem(0x4d5a, { 0xac });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2d8e, gbc.sp());
        EXPECT(0x4d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 030B
        gbc.setState(0x3e5a, 0xe836, 0x8ec0, 0x98ea, 0x334a, 0x1559, 0x1, 0x1);
        gbc.writeMem(0x3e5a, { 0xac });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe836, gbc.sp());
        EXPECT(0x3e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 030C
        gbc.setState(0x3322, 0xb553, 0xf910, 0xc34e, 0x3de0, 0xd5f5, 0x0, 0x1);
        gbc.writeMem(0x3322, { 0xac });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb553, gbc.sp());
        EXPECT(0x3323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 030D
        gbc.setState(0x5d8a, 0x5834, 0x9df0, 0x15c3, 0x8fac, 0x23ad, 0x0, 0x1);
        gbc.writeMem(0x5d8a, { 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5834, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 030E
        gbc.setState(0x8ee7, 0x6d34, 0x3120, 0x47e1, 0x2a91, 0x12d4, 0x1, 0x0);
        gbc.writeMem(0x8ee7, { 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6d34, gbc.sp());
        EXPECT(0x8ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8ee7));
        // AC 030F
        gbc.setState(0x88a4, 0x9546, 0xe380, 0x4363, 0x6a30, 0xfa59, 0x0, 0x0);
        gbc.writeMem(0x88a4, { 0xac });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9546, gbc.sp());
        EXPECT(0x88a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x88a4));
        // AC 0310
        gbc.setState(0x4b4, 0x5b24, 0x7580, 0xc2fa, 0x822, 0x2fca, 0x1, 0x1);
        gbc.writeMem(0x4b4, { 0xac });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0x4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0311
        gbc.setState(0x266a, 0x2fe4, 0xe1c0, 0x9465, 0x6f41, 0x74e3, 0x0, 0x1);
        gbc.writeMem(0x266a, { 0xac });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2fe4, gbc.sp());
        EXPECT(0x266b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0312
        gbc.setState(0xe0a7, 0x2e42, 0x5330, 0xa2a5, 0x9972, 0x7263, 0x1, 0x0);
        gbc.writeMem(0xe0a7, { 0xac });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2e42, gbc.sp());
        EXPECT(0xe0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe0a7));
        // AC 0313
        gbc.setState(0xc6cb, 0xa5e0, 0x4760, 0x6aa4, 0xe7aa, 0x380f, 0x1, 0x0);
        gbc.writeMem(0xc6cb, { 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0xc6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc6cb));
        // AC 0314
        gbc.setState(0xd4e8, 0x5958, 0xc10, 0x418e, 0x1f08, 0xede, 0x0, 0x1);
        gbc.writeMem(0xd4e8, { 0xac });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5958, gbc.sp());
        EXPECT(0xd4e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd4e8));
        // AC 0315
        gbc.setState(0xa4af, 0x957, 0xb170, 0xabda, 0x4b6e, 0x86ce, 0x0, 0x0);
        gbc.writeMem(0xa4af, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x957, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa4af));
        // AC 0316
        gbc.setState(0xd6a9, 0x5caf, 0x9450, 0xb702, 0x63b3, 0x2eda, 0x0, 0x0);
        gbc.writeMem(0xd6a9, { 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5caf, gbc.sp());
        EXPECT(0xd6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd6a9));
        // AC 0317
        gbc.setState(0xe24c, 0xacb4, 0xe440, 0x72c8, 0xfe09, 0x54f7, 0x1, 0x0);
        gbc.writeMem(0xe24c, { 0xac });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xacb4, gbc.sp());
        EXPECT(0xe24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe24c));
        // AC 0318
        gbc.setState(0xc585, 0x1524, 0xc9c0, 0x546f, 0x3523, 0xbba4, 0x0, 0x1);
        gbc.writeMem(0xc585, { 0xac });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc585));
        // AC 0319
        gbc.setState(0x2f9b, 0x48c3, 0x1200, 0x74a8, 0x9835, 0xfde7, 0x1, 0x1);
        gbc.writeMem(0x2f9b, { 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x48c3, gbc.sp());
        EXPECT(0x2f9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 031A
        gbc.setState(0x141e, 0x7e0e, 0xbd20, 0x9590, 0x6267, 0xe89, 0x1, 0x0);
        gbc.writeMem(0x141e, { 0xac });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7e0e, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 031B
        gbc.setState(0xb54, 0x983e, 0xe410, 0xc32, 0xe8e8, 0x7405, 0x0, 0x1);
        gbc.writeMem(0xb54, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x983e, gbc.sp());
        EXPECT(0xb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 031C
        gbc.setState(0xe3e9, 0xf449, 0x6fb0, 0xbcfa, 0x6d35, 0x3b85, 0x0, 0x0);
        gbc.writeMem(0xe3e9, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0xe3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe3e9));
        // AC 031D
        gbc.setState(0xdde5, 0x70ea, 0x7a30, 0x1a4d, 0xc073, 0x3c89, 0x0, 0x0);
        gbc.writeMem(0xdde5, { 0xac });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x70ea, gbc.sp());
        EXPECT(0xdde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdde5));
        // AC 031E
        gbc.setState(0xbfb, 0xddbb, 0xa930, 0x403c, 0x77a6, 0xbc1f, 0x1, 0x1);
        gbc.writeMem(0xbfb, { 0xac });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xddbb, gbc.sp());
        EXPECT(0xbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 031F
        gbc.setState(0xba17, 0x96f1, 0xd190, 0x6154, 0xee4d, 0xb9cb, 0x1, 0x1);
        gbc.writeMem(0xba17, { 0xac });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x96f1, gbc.sp());
        EXPECT(0xba18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xba17));
        // AC 0320
        gbc.setState(0xcea5, 0x3ae3, 0xf4f0, 0x24c9, 0x6fd0, 0x9364, 0x0, 0x1);
        gbc.writeMem(0xcea5, { 0xac });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3ae3, gbc.sp());
        EXPECT(0xcea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcea5));
        // AC 0321
        gbc.setState(0x3c03, 0x6c4, 0x78b0, 0xde94, 0xdf7a, 0x8338, 0x0, 0x0);
        gbc.writeMem(0x3c03, { 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6c4, gbc.sp());
        EXPECT(0x3c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0322
        gbc.setState(0xe687, 0xe012, 0xb4e0, 0x59af, 0x1c21, 0x3557, 0x1, 0x0);
        gbc.writeMem(0xe687, { 0xac });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe012, gbc.sp());
        EXPECT(0xe688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe687));
        // AC 0323
        gbc.setState(0xdf31, 0x8a26, 0x6280, 0x8fea, 0x3a99, 0xb88b, 0x1, 0x1);
        gbc.writeMem(0xdf31, { 0xac });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xdf31));
        // AC 0324
        gbc.setState(0xa121, 0x1a0, 0x5a0, 0x3eb8, 0x5b04, 0xed4, 0x1, 0x0);
        gbc.writeMem(0xa121, { 0xac });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1a0, gbc.sp());
        EXPECT(0xa122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa121));
        // AC 0325
        gbc.setState(0xe9bf, 0x189d, 0x31b0, 0xe704, 0xc194, 0xd082, 0x1, 0x1);
        gbc.writeMem(0xe9bf, { 0xac });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x189d, gbc.sp());
        EXPECT(0xe9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe9bf));
        // AC 0326
        gbc.setState(0x4e73, 0xced0, 0x6380, 0xe10e, 0x74a8, 0x1e32, 0x1, 0x1);
        gbc.writeMem(0x4e73, { 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xced0, gbc.sp());
        EXPECT(0x4e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0327
        gbc.setState(0x4fec, 0xdde2, 0x5330, 0xb91c, 0xca1b, 0x64ab, 0x0, 0x0);
        gbc.writeMem(0x4fec, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0328
        gbc.setState(0xae12, 0x58c8, 0x3b60, 0xab00, 0x2926, 0x4a21, 0x1, 0x1);
        gbc.writeMem(0xae12, { 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0xae13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xae12));
        // AC 0329
        gbc.setState(0x823, 0x673, 0x6bf0, 0xa0ef, 0x5b60, 0x5e4c, 0x1, 0x0);
        gbc.writeMem(0x823, { 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0x824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 032A
        gbc.setState(0x1cad, 0x74ee, 0x6dd0, 0xaeb1, 0x8a9b, 0xfe41, 0x0, 0x0);
        gbc.writeMem(0x1cad, { 0xac });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x1cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 032B
        gbc.setState(0x47d6, 0x3a1b, 0xf970, 0x848a, 0x8a11, 0x16a1, 0x0, 0x1);
        gbc.writeMem(0x47d6, { 0xac });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3a1b, gbc.sp());
        EXPECT(0x47d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 032C
        gbc.setState(0x5338, 0x33dd, 0x92a0, 0xd9d3, 0x588f, 0xf387, 0x0, 0x1);
        gbc.writeMem(0x5338, { 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x33dd, gbc.sp());
        EXPECT(0x5339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 032D
        gbc.setState(0x46a5, 0x589a, 0x27f0, 0x1874, 0xc4d3, 0x35e, 0x0, 0x0);
        gbc.writeMem(0x46a5, { 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x589a, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 032E
        gbc.setState(0x6358, 0x5539, 0x1b80, 0x6c16, 0xdf6f, 0x374, 0x0, 0x0);
        gbc.writeMem(0x6358, { 0xac });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5539, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 032F
        gbc.setState(0xca6f, 0x8df4, 0x35f0, 0xd209, 0xc897, 0xb2e2, 0x0, 0x0);
        gbc.writeMem(0xca6f, { 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8df4, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xca6f));
        // AC 0330
        gbc.setState(0x38eb, 0x4394, 0x5030, 0xc816, 0x9eb, 0xc01c, 0x0, 0x1);
        gbc.writeMem(0x38eb, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4394, gbc.sp());
        EXPECT(0x38ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0331
        gbc.setState(0xc24, 0x2606, 0xda60, 0x5a19, 0x8f0d, 0x6c02, 0x0, 0x1);
        gbc.writeMem(0xc24, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2606, gbc.sp());
        EXPECT(0xc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0332
        gbc.setState(0xb641, 0x49ff, 0xce40, 0x5b3b, 0x8da1, 0xf98a, 0x1, 0x0);
        gbc.writeMem(0xb641, { 0xac });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0xb642, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb641));
        // AC 0334
        gbc.setState(0x733, 0x271a, 0xf3a0, 0xd800, 0x6b7f, 0xc9a, 0x1, 0x1);
        gbc.writeMem(0x733, { 0xac });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x271a, gbc.sp());
        EXPECT(0x734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0335
        gbc.setState(0x2f55, 0xc975, 0xd110, 0xf25c, 0x9865, 0x6589, 0x0, 0x0);
        gbc.writeMem(0x2f55, { 0xac });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc975, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0336
        gbc.setState(0x8675, 0xd8f5, 0x4f30, 0x2634, 0x94f2, 0x104a, 0x1, 0x1);
        gbc.writeMem(0x8675, { 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd8f5, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8675));
        // AC 0337
        gbc.setState(0xd174, 0xbe79, 0x9670, 0x2196, 0xa29b, 0x274d, 0x0, 0x0);
        gbc.writeMem(0xd174, { 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbe79, gbc.sp());
        EXPECT(0xd175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd174));
        // AC 0338
        gbc.setState(0x288c, 0x5867, 0x3800, 0xb74, 0xaee7, 0x4ec8, 0x1, 0x0);
        gbc.writeMem(0x288c, { 0xac });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5867, gbc.sp());
        EXPECT(0x288d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0339
        gbc.setState(0x37e, 0x31fa, 0x5d10, 0x4758, 0x8388, 0x827d, 0x1, 0x1);
        gbc.writeMem(0x37e, { 0xac });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0x37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 033A
        gbc.setState(0xba7c, 0xd97a, 0x9d10, 0xcf91, 0x4333, 0xe102, 0x1, 0x0);
        gbc.writeMem(0xba7c, { 0xac });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd97a, gbc.sp());
        EXPECT(0xba7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xba7c));
        // AC 033B
        gbc.setState(0x8111, 0x3db4, 0x6d40, 0x3f63, 0x6b37, 0x6203, 0x1, 0x0);
        gbc.writeMem(0x8111, { 0xac });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3db4, gbc.sp());
        EXPECT(0x8112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8111));
        // AC 033C
        gbc.setState(0xfe, 0xc1c7, 0xd770, 0x8b0b, 0x596d, 0xa6a1, 0x0, 0x0);
        gbc.writeMem(0xfe, { 0xac });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc1c7, gbc.sp());
        EXPECT(0xff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 033D
        gbc.setState(0xa199, 0xfa24, 0xee20, 0x463b, 0x1f3d, 0x3df7, 0x0, 0x0);
        gbc.writeMem(0xa199, { 0xac });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfa24, gbc.sp());
        EXPECT(0xa19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa199));
        // AC 033E
        gbc.setState(0x9ffd, 0xb298, 0x7a0, 0x896d, 0x88e6, 0x6b51, 0x0, 0x1);
        gbc.writeMem(0x9ffd, { 0xac });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0x9ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9ffd));
        // AC 033F
        gbc.setState(0x8c9c, 0x2548, 0x5040, 0x9cab, 0x16ae, 0x7027, 0x1, 0x0);
        gbc.writeMem(0x8c9c, { 0xac });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2548, gbc.sp());
        EXPECT(0x8c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8c9c));
        // AC 0341
        gbc.setState(0xdba, 0x8e30, 0x7c90, 0x644d, 0xc1af, 0x462a, 0x0, 0x0);
        gbc.writeMem(0xdba, { 0xac });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8e30, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0342
        gbc.setState(0xa772, 0x52f1, 0x2120, 0x2907, 0x65d5, 0xdd2b, 0x1, 0x1);
        gbc.writeMem(0xa772, { 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x52f1, gbc.sp());
        EXPECT(0xa773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa772));
        // AC 0343
        gbc.setState(0x593, 0xbaa2, 0x9450, 0xd2d1, 0x310b, 0x5740, 0x0, 0x1);
        gbc.writeMem(0x593, { 0xac });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbaa2, gbc.sp());
        EXPECT(0x594, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0344
        gbc.setState(0x9b57, 0xfeb9, 0x9680, 0x4ac2, 0xdcc2, 0x1a37, 0x0, 0x0);
        gbc.writeMem(0x9b57, { 0xac });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfeb9, gbc.sp());
        EXPECT(0x9b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9b57));
        // AC 0345
        gbc.setState(0xbd33, 0x27bb, 0xfb70, 0xb433, 0x7742, 0xcb08, 0x1, 0x0);
        gbc.writeMem(0xbd33, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x27bb, gbc.sp());
        EXPECT(0xbd34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbd33));
        // AC 0346
        gbc.setState(0x22cc, 0xba39, 0x5210, 0x7e22, 0x2791, 0x6006, 0x0, 0x1);
        gbc.writeMem(0x22cc, { 0xac });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xba39, gbc.sp());
        EXPECT(0x22cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0347
        gbc.setState(0xb892, 0x85e5, 0x77b0, 0xc2ff, 0x7aab, 0xe78e, 0x0, 0x1);
        gbc.writeMem(0xb892, { 0xac });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x85e5, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb892));
        // AC 0348
        gbc.setState(0x81d0, 0x2ded, 0xb240, 0xa6a1, 0xcc40, 0x9fdf, 0x1, 0x1);
        gbc.writeMem(0x81d0, { 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0x81d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x81d0));
        // AC 0349
        gbc.setState(0xbd48, 0x87e3, 0x40c0, 0x8369, 0x6c3f, 0xfce7, 0x0, 0x0);
        gbc.writeMem(0xbd48, { 0xac });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0xbd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbd48));
        // AC 034A
        gbc.setState(0x82, 0x981b, 0x55e0, 0xc86a, 0x615b, 0xb2c0, 0x1, 0x1);
        gbc.writeMem(0x82, { 0xac });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0x83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 034B
        gbc.setState(0xe644, 0xbfab, 0x6e70, 0x9c72, 0x1f23, 0xd193, 0x1, 0x0);
        gbc.writeMem(0xe644, { 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe644));
        // AC 034C
        gbc.setState(0x143b, 0x8f67, 0x9140, 0x5b72, 0xfb2a, 0x4733, 0x0, 0x0);
        gbc.writeMem(0x143b, { 0xac });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0x143c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 034D
        gbc.setState(0x5453, 0xd9af, 0x7280, 0xe829, 0xb735, 0xfa0c, 0x0, 0x0);
        gbc.writeMem(0x5453, { 0xac });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd9af, gbc.sp());
        EXPECT(0x5454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 034E
        gbc.setState(0x4a70, 0x608, 0x960, 0xf2f0, 0xcef9, 0xf131, 0x0, 0x0);
        gbc.writeMem(0x4a70, { 0xac });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0x4a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 034F
        gbc.setState(0x1f6e, 0x7562, 0xf5e0, 0xbca0, 0x96f6, 0x6dd6, 0x0, 0x0);
        gbc.writeMem(0x1f6e, { 0xac });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7562, gbc.sp());
        EXPECT(0x1f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0350
        gbc.setState(0x5e51, 0xb445, 0x4880, 0xa1e7, 0x8574, 0x3053, 0x1, 0x0);
        gbc.writeMem(0x5e51, { 0xac });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0x5e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0351
        gbc.setState(0x9, 0xe270, 0x5b90, 0x9009, 0x7513, 0xe230, 0x1, 0x1);
        gbc.writeMem(0x9, { 0xac });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe270, gbc.sp());
        EXPECT(0xa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0352
        gbc.setState(0x1122, 0x832f, 0xd590, 0x4d97, 0xd86f, 0x2fa8, 0x1, 0x0);
        gbc.writeMem(0x1122, { 0xac });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x832f, gbc.sp());
        EXPECT(0x1123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0353
        gbc.setState(0x69d0, 0xe9c7, 0xdf50, 0x39d0, 0xa3f5, 0xf2c5, 0x1, 0x0);
        gbc.writeMem(0x69d0, { 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe9c7, gbc.sp());
        EXPECT(0x69d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0354
        gbc.setState(0x62b1, 0xb3f3, 0x6a80, 0x91f5, 0xf07d, 0xf663, 0x0, 0x1);
        gbc.writeMem(0x62b1, { 0xac });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb3f3, gbc.sp());
        EXPECT(0x62b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0356
        gbc.setState(0xc32b, 0xb41c, 0x6960, 0x9af5, 0x3988, 0xbe84, 0x0, 0x0);
        gbc.writeMem(0xc32b, { 0xac });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb41c, gbc.sp());
        EXPECT(0xc32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc32b));
        // AC 0357
        gbc.setState(0x66a7, 0x9a6b, 0x73b0, 0x36d2, 0xacd0, 0x39a7, 0x0, 0x1);
        gbc.writeMem(0x66a7, { 0xac });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9a6b, gbc.sp());
        EXPECT(0x66a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0358
        gbc.setState(0x66f3, 0xb573, 0x2290, 0x6601, 0x6827, 0xfbe4, 0x0, 0x1);
        gbc.writeMem(0x66f3, { 0xac });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb573, gbc.sp());
        EXPECT(0x66f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0359
        gbc.setState(0x471, 0xac6, 0x4140, 0xaec6, 0x7efa, 0x6b2e, 0x0, 0x1);
        gbc.writeMem(0x471, { 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac6, gbc.sp());
        EXPECT(0x472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 035A
        gbc.setState(0x23ef, 0xa8af, 0x7630, 0x16b9, 0xcde1, 0x5960, 0x0, 0x0);
        gbc.writeMem(0x23ef, { 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa8af, gbc.sp());
        EXPECT(0x23f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 035B
        gbc.setState(0x4762, 0x7a31, 0x6f40, 0xe4f0, 0x34a6, 0x65ff, 0x1, 0x0);
        gbc.writeMem(0x4762, { 0xac });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7a31, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 035C
        gbc.setState(0x5823, 0x9e03, 0xb5c0, 0x1b94, 0x42ff, 0x6ecb, 0x0, 0x1);
        gbc.writeMem(0x5823, { 0xac });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9e03, gbc.sp());
        EXPECT(0x5824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 035D
        gbc.setState(0xa2bf, 0x66b, 0x3060, 0xc2a1, 0x3823, 0x699a, 0x0, 0x1);
        gbc.writeMem(0xa2bf, { 0xac });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x66b, gbc.sp());
        EXPECT(0xa2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa2bf));
        // AC 035E
        gbc.setState(0x6e13, 0xfb19, 0xf8a0, 0x1f0a, 0x7c6a, 0x85ec, 0x0, 0x1);
        gbc.writeMem(0x6e13, { 0xac });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfb19, gbc.sp());
        EXPECT(0x6e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0360
        gbc.setState(0xd2c, 0x2796, 0x6f0, 0x8ca6, 0x5223, 0x23cc, 0x1, 0x0);
        gbc.writeMem(0xd2c, { 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2796, gbc.sp());
        EXPECT(0xd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0361
        gbc.setState(0x9944, 0xfd6d, 0x4d40, 0x33a3, 0xbde, 0x4a20, 0x1, 0x0);
        gbc.writeMem(0x9944, { 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfd6d, gbc.sp());
        EXPECT(0x9945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9944));
        // AC 0362
        gbc.setState(0x1491, 0x7633, 0x5c60, 0x7466, 0xdd4c, 0x7f84, 0x1, 0x0);
        gbc.writeMem(0x1491, { 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7633, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0363
        gbc.setState(0xba2c, 0x8981, 0x7f0, 0xebfc, 0x8079, 0x38eb, 0x0, 0x0);
        gbc.writeMem(0xba2c, { 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8981, gbc.sp());
        EXPECT(0xba2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xba2c));
        // AC 0364
        gbc.setState(0x83f5, 0x55f4, 0xa520, 0xf77f, 0x5469, 0x722f, 0x1, 0x1);
        gbc.writeMem(0x83f5, { 0xac });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x55f4, gbc.sp());
        EXPECT(0x83f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x83f5));
        // AC 0365
        gbc.setState(0x1793, 0x151f, 0xe7d0, 0xcc4e, 0x3644, 0xefcc, 0x1, 0x1);
        gbc.writeMem(0x1793, { 0xac });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x151f, gbc.sp());
        EXPECT(0x1794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0366
        gbc.setState(0x189a, 0xbc7b, 0xa310, 0xe273, 0xc715, 0x812b, 0x0, 0x0);
        gbc.writeMem(0x189a, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbc7b, gbc.sp());
        EXPECT(0x189b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0367
        gbc.setState(0x65c3, 0x5f2d, 0x920, 0x99f7, 0x2a0f, 0x9fa7, 0x0, 0x0);
        gbc.writeMem(0x65c3, { 0xac });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5f2d, gbc.sp());
        EXPECT(0x65c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 036A
        gbc.setState(0x9ec3, 0x65e7, 0x6660, 0x5ad4, 0xe9c8, 0xe90f, 0x1, 0x0);
        gbc.writeMem(0x9ec3, { 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0x9ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9ec3));
        // AC 036B
        gbc.setState(0x7bf5, 0xe7f5, 0xf1e0, 0x8126, 0xa3c9, 0xc284, 0x1, 0x0);
        gbc.writeMem(0x7bf5, { 0xac });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe7f5, gbc.sp());
        EXPECT(0x7bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 036C
        gbc.setState(0x85bc, 0xb777, 0x9170, 0x3111, 0x48ea, 0x923b, 0x1, 0x1);
        gbc.writeMem(0x85bc, { 0xac });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb777, gbc.sp());
        EXPECT(0x85bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x85bc));
        // AC 036D
        gbc.setState(0x1290, 0x502e, 0x7c40, 0xfb52, 0x1a3b, 0x2c7d, 0x1, 0x0);
        gbc.writeMem(0x1290, { 0xac });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x502e, gbc.sp());
        EXPECT(0x1291, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 036E
        gbc.setState(0x4ded, 0x604a, 0xb610, 0x59df, 0xc793, 0xbc16, 0x1, 0x0);
        gbc.writeMem(0x4ded, { 0xac });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x604a, gbc.sp());
        EXPECT(0x4dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 036F
        gbc.setState(0x9b8, 0x6903, 0xf7a0, 0x7dc, 0x43e2, 0x91ab, 0x1, 0x1);
        gbc.writeMem(0x9b8, { 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6903, gbc.sp());
        EXPECT(0x9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0370
        gbc.setState(0xaa36, 0xabf9, 0xd050, 0x977b, 0x1b2d, 0x3d09, 0x0, 0x1);
        gbc.writeMem(0xaa36, { 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xabf9, gbc.sp());
        EXPECT(0xaa37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaa36));
        // AC 0371
        gbc.setState(0xc2, 0x1e42, 0x5e0, 0xee6e, 0x487a, 0x6734, 0x0, 0x1);
        gbc.writeMem(0xc2, { 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1e42, gbc.sp());
        EXPECT(0xc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0372
        gbc.setState(0x6fa6, 0xacc, 0x2610, 0x85e8, 0x65f6, 0xeb1f, 0x0, 0x0);
        gbc.writeMem(0x6fa6, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xacc, gbc.sp());
        EXPECT(0x6fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0373
        gbc.setState(0xd15d, 0xea28, 0xb500, 0xa25e, 0xc79c, 0xb156, 0x0, 0x0);
        gbc.writeMem(0xd15d, { 0xac });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0xd15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd15d));
        // AC 0374
        gbc.setState(0x2c4, 0xce70, 0x6d80, 0x527d, 0x9d89, 0xd670, 0x1, 0x0);
        gbc.writeMem(0x2c4, { 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xce70, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0375
        gbc.setState(0x4094, 0x32e8, 0xcfd0, 0xefdd, 0x9b, 0x9ba1, 0x0, 0x1);
        gbc.writeMem(0x4094, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x32e8, gbc.sp());
        EXPECT(0x4095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0376
        gbc.setState(0x8087, 0xf0ba, 0x2c20, 0x2cde, 0x481f, 0x3b5c, 0x0, 0x0);
        gbc.writeMem(0x8087, { 0xac });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf0ba, gbc.sp());
        EXPECT(0x8088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8087));
        // AC 0377
        gbc.setState(0xb9d7, 0x14ba, 0xdcc0, 0x80de, 0xde97, 0x4254, 0x0, 0x0);
        gbc.writeMem(0xb9d7, { 0xac });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x14ba, gbc.sp());
        EXPECT(0xb9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb9d7));
        // AC 0378
        gbc.setState(0xa5b0, 0x549f, 0xf040, 0x5cc8, 0x76ad, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0xa5b0, { 0xac });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x549f, gbc.sp());
        EXPECT(0xa5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa5b0));
        // AC 0379
        gbc.setState(0xe695, 0xc788, 0xffd0, 0x1c3e, 0xe59c, 0x3d86, 0x1, 0x0);
        gbc.writeMem(0xe695, { 0xac });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc788, gbc.sp());
        EXPECT(0xe696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe695));
        // AC 037A
        gbc.setState(0x30a6, 0x287a, 0xabb0, 0xf1c8, 0x33f8, 0xe821, 0x1, 0x1);
        gbc.writeMem(0x30a6, { 0xac });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x287a, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 037B
        gbc.setState(0xa880, 0x3661, 0xa520, 0x9e08, 0x1610, 0x7b5d, 0x1, 0x0);
        gbc.writeMem(0xa880, { 0xac });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3661, gbc.sp());
        EXPECT(0xa881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa880));
        // AC 037C
        gbc.setState(0xa209, 0xf70d, 0xdcb0, 0x1c23, 0xa311, 0xccda, 0x1, 0x1);
        gbc.writeMem(0xa209, { 0xac });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf70d, gbc.sp());
        EXPECT(0xa20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa209));
        // AC 037D
        gbc.setState(0xe889, 0x2850, 0x59d0, 0x5d32, 0xad97, 0x5f93, 0x1, 0x1);
        gbc.writeMem(0xe889, { 0xac });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2850, gbc.sp());
        EXPECT(0xe88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe889));
        // AC 037E
        gbc.setState(0x4dde, 0xe4db, 0x94e0, 0x92b, 0x96d8, 0x2d94, 0x1, 0x0);
        gbc.writeMem(0x4dde, { 0xac });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe4db, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 037F
        gbc.setState(0x4407, 0x8cb0, 0x6fc0, 0x310, 0x7d9b, 0x50f3, 0x0, 0x1);
        gbc.writeMem(0x4407, { 0xac });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8cb0, gbc.sp());
        EXPECT(0x4408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0380
        gbc.setState(0xafb9, 0x5dfb, 0xaf20, 0xe70, 0x3787, 0x80cc, 0x0, 0x1);
        gbc.writeMem(0xafb9, { 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5dfb, gbc.sp());
        EXPECT(0xafba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xafb9));
        // AC 0381
        gbc.setState(0x7d8e, 0xb365, 0xc3d0, 0x8e67, 0x17c4, 0x4e64, 0x0, 0x1);
        gbc.writeMem(0x7d8e, { 0xac });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0x7d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0382
        gbc.setState(0x935b, 0xe1e6, 0x38a0, 0x1dac, 0x962c, 0x15ce, 0x1, 0x1);
        gbc.writeMem(0x935b, { 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe1e6, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x935b));
        // AC 0383
        gbc.setState(0xb43f, 0x3e34, 0x7870, 0x91a0, 0xd1b0, 0x5b4d, 0x1, 0x1);
        gbc.writeMem(0xb43f, { 0xac });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3e34, gbc.sp());
        EXPECT(0xb440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb43f));
        // AC 0384
        gbc.setState(0x952d, 0x1060, 0x2780, 0x6d20, 0xb01, 0x45ee, 0x1, 0x1);
        gbc.writeMem(0x952d, { 0xac });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1060, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x952d));
        // AC 0385
        gbc.setState(0x4f3a, 0xdee0, 0x3db0, 0x74e6, 0x2381, 0xcf3a, 0x1, 0x1);
        gbc.writeMem(0x4f3a, { 0xac });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdee0, gbc.sp());
        EXPECT(0x4f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0388
        gbc.setState(0xbc17, 0xc8e1, 0x2920, 0xc8a8, 0x8cf3, 0x74d7, 0x1, 0x1);
        gbc.writeMem(0xbc17, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc8e1, gbc.sp());
        EXPECT(0xbc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbc17));
        // AC 0389
        gbc.setState(0x21f0, 0x24df, 0x47c0, 0x796f, 0xc37e, 0x6869, 0x1, 0x0);
        gbc.writeMem(0x21f0, { 0xac });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x24df, gbc.sp());
        EXPECT(0x21f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 038A
        gbc.setState(0x9803, 0xe3e6, 0x8fe0, 0x72ff, 0x9e47, 0x4f9, 0x1, 0x1);
        gbc.writeMem(0x9803, { 0xac });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe3e6, gbc.sp());
        EXPECT(0x9804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9803));
        // AC 038C
        gbc.setState(0xaa13, 0x5109, 0xa5f0, 0x4f94, 0xdce6, 0x635a, 0x0, 0x1);
        gbc.writeMem(0xaa13, { 0xac });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5109, gbc.sp());
        EXPECT(0xaa14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xaa13));
        // AC 038D
        gbc.setState(0xde1b, 0xcbd2, 0x3020, 0x832b, 0xb21, 0xa785, 0x0, 0x0);
        gbc.writeMem(0xde1b, { 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0xde1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xde1b));
        // AC 038E
        gbc.setState(0x694c, 0xdd4f, 0xddd0, 0x2970, 0x16a3, 0x6cc4, 0x0, 0x0);
        gbc.writeMem(0x694c, { 0xac });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdd4f, gbc.sp());
        EXPECT(0x694d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 038F
        gbc.setState(0xc522, 0x249a, 0x9880, 0xa843, 0xf8dc, 0x26d7, 0x1, 0x0);
        gbc.writeMem(0xc522, { 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc522));
        // AC 0390
        gbc.setState(0x127, 0x5b2, 0x97b0, 0xff2f, 0x74b0, 0x1769, 0x1, 0x0);
        gbc.writeMem(0x127, { 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5b2, gbc.sp());
        EXPECT(0x128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0391
        gbc.setState(0x984, 0xc903, 0x2170, 0x3232, 0xc194, 0x4c84, 0x1, 0x1);
        gbc.writeMem(0x984, { 0xac });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0x985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0392
        gbc.setState(0xae70, 0x3fa4, 0xbf50, 0xd650, 0x7420, 0x102c, 0x1, 0x0);
        gbc.writeMem(0xae70, { 0xac });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3fa4, gbc.sp());
        EXPECT(0xae71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xae70));
        // AC 0393
        gbc.setState(0x237e, 0xe29b, 0x1da0, 0x73b3, 0xd75c, 0x7b62, 0x0, 0x0);
        gbc.writeMem(0x237e, { 0xac });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe29b, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0394
        gbc.setState(0x18fa, 0xf6ec, 0xb540, 0xa2b, 0xa01c, 0x78dd, 0x1, 0x0);
        gbc.writeMem(0x18fa, { 0xac });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf6ec, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0395
        gbc.setState(0x4cf0, 0x44de, 0x8040, 0xcfc7, 0x399d, 0x76da, 0x0, 0x1);
        gbc.writeMem(0x4cf0, { 0xac });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x44de, gbc.sp());
        EXPECT(0x4cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0396
        gbc.setState(0x6a0b, 0x14f0, 0xe9f0, 0xd329, 0x814e, 0x53b5, 0x0, 0x1);
        gbc.writeMem(0x6a0b, { 0xac });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x14f0, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0397
        gbc.setState(0x60e1, 0x7254, 0x8fe0, 0xc44a, 0x6131, 0x726e, 0x0, 0x0);
        gbc.writeMem(0x60e1, { 0xac });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7254, gbc.sp());
        EXPECT(0x60e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0398
        gbc.setState(0x67c6, 0xf257, 0xfb00, 0xcb77, 0x6449, 0xb328, 0x0, 0x1);
        gbc.writeMem(0x67c6, { 0xac });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf257, gbc.sp());
        EXPECT(0x67c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 0399
        gbc.setState(0xbfcc, 0xfde2, 0x7fa0, 0xcd2a, 0x2be3, 0x701a, 0x0, 0x1);
        gbc.writeMem(0xbfcc, { 0xac });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfde2, gbc.sp());
        EXPECT(0xbfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbfcc));
        // AC 039A
        gbc.setState(0x7acb, 0xc0c6, 0xb960, 0xec80, 0xd99, 0xd3a1, 0x0, 0x1);
        gbc.writeMem(0x7acb, { 0xac });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc0c6, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 039B
        gbc.setState(0x1e95, 0x9086, 0xb250, 0xddec, 0xe4ff, 0x5fda, 0x0, 0x0);
        gbc.writeMem(0x1e95, { 0xac });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9086, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 039C
        gbc.setState(0xe8f5, 0x7764, 0x6f70, 0xe93b, 0xb7bb, 0x3bcc, 0x0, 0x0);
        gbc.writeMem(0xe8f5, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7764, gbc.sp());
        EXPECT(0xe8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe8f5));
        // AC 039D
        gbc.setState(0x29aa, 0x1bdf, 0x3d20, 0xc496, 0xff8d, 0x13fc, 0x0, 0x1);
        gbc.writeMem(0x29aa, { 0xac });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1bdf, gbc.sp());
        EXPECT(0x29ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 039E
        gbc.setState(0xe523, 0xda27, 0xcb60, 0x5ba4, 0x464, 0x4984, 0x0, 0x0);
        gbc.writeMem(0xe523, { 0xac });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xda27, gbc.sp());
        EXPECT(0xe524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe523));
        // AC 039F
        gbc.setState(0x8011, 0x30a9, 0x9660, 0x457d, 0xdec6, 0x20dc, 0x1, 0x1);
        gbc.writeMem(0x8011, { 0xac });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x30a9, gbc.sp());
        EXPECT(0x8012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8011));
        // AC 03A0
        gbc.setState(0x55b0, 0x4f69, 0xaa80, 0xf62b, 0xc45d, 0x49a8, 0x0, 0x1);
        gbc.writeMem(0x55b0, { 0xac });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0x55b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03A1
        gbc.setState(0x8602, 0xded4, 0x8a40, 0x7246, 0x1e68, 0x907d, 0x0, 0x0);
        gbc.writeMem(0x8602, { 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0x8603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8602));
        // AC 03A2
        gbc.setState(0x104e, 0x9eb3, 0xabd0, 0x55a2, 0xf50e, 0x83f, 0x1, 0x0);
        gbc.writeMem(0x104e, { 0xac });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9eb3, gbc.sp());
        EXPECT(0x104f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03A3
        gbc.setState(0x6b6b, 0x1453, 0x76d0, 0x38df, 0x35, 0x65c0, 0x1, 0x1);
        gbc.writeMem(0x6b6b, { 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1453, gbc.sp());
        EXPECT(0x6b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03A4
        gbc.setState(0x841a, 0x3346, 0xe340, 0x902f, 0xf49f, 0xb640, 0x0, 0x1);
        gbc.writeMem(0x841a, { 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3346, gbc.sp());
        EXPECT(0x841b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x841a));
        // AC 03A5
        gbc.setState(0xbc78, 0x4ca8, 0x9550, 0xacdf, 0x84fd, 0x2af5, 0x1, 0x1);
        gbc.writeMem(0xbc78, { 0xac });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4ca8, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xbc78));
        // AC 03A6
        gbc.setState(0xc796, 0x5cde, 0xdf30, 0xeff, 0xd474, 0x7d23, 0x1, 0x1);
        gbc.writeMem(0xc796, { 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0xc797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc796));
        // AC 03A8
        gbc.setState(0xb1a1, 0xd0fe, 0x16e0, 0x884d, 0xe2b2, 0x6545, 0x1, 0x1);
        gbc.writeMem(0xb1a1, { 0xac });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0xb1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb1a1));
        // AC 03A9
        gbc.setState(0x3f87, 0xc1ad, 0x9530, 0x669e, 0x4bb0, 0xbdd9, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc1ad, gbc.sp());
        EXPECT(0x3f88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03AA
        gbc.setState(0x1c97, 0x18f9, 0xa100, 0x9712, 0xd610, 0xa6ba, 0x1, 0x0);
        gbc.writeMem(0x1c97, { 0xac });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x18f9, gbc.sp());
        EXPECT(0x1c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03AB
        gbc.setState(0x4ace, 0xac45, 0x6230, 0xb58e, 0x4aad, 0x3f99, 0x1, 0x1);
        gbc.writeMem(0x4ace, { 0xac });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xac45, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03AC
        gbc.setState(0x6c5b, 0x3dd7, 0xb8a0, 0xc4f, 0x8dc3, 0xebc0, 0x0, 0x0);
        gbc.writeMem(0x6c5b, { 0xac });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3dd7, gbc.sp());
        EXPECT(0x6c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03AD
        gbc.setState(0xd2a0, 0x5675, 0xdfe0, 0x530d, 0x2e47, 0x7970, 0x0, 0x0);
        gbc.writeMem(0xd2a0, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0xd2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd2a0));
        // AC 03AE
        gbc.setState(0x3a90, 0x13b1, 0xa1b0, 0xc59c, 0xe898, 0xc8c7, 0x0, 0x1);
        gbc.writeMem(0x3a90, { 0xac });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x13b1, gbc.sp());
        EXPECT(0x3a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03AF
        gbc.setState(0x51ca, 0x64d1, 0x2e20, 0xcd6f, 0xc240, 0x4f5f, 0x0, 0x0);
        gbc.writeMem(0x51ca, { 0xac });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x64d1, gbc.sp());
        EXPECT(0x51cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03B0
        gbc.setState(0x875d, 0x7ac3, 0xd7f0, 0x74a2, 0xfba0, 0x602a, 0x0, 0x0);
        gbc.writeMem(0x875d, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7ac3, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x875d));
        // AC 03B1
        gbc.setState(0x4fec, 0x3aea, 0xb8a0, 0x8c62, 0xa25c, 0x169b, 0x1, 0x0);
        gbc.writeMem(0x4fec, { 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3aea, gbc.sp());
        EXPECT(0x4fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03B2
        gbc.setState(0xc541, 0x7955, 0xcea0, 0xe245, 0x7113, 0x9aeb, 0x0, 0x1);
        gbc.writeMem(0xc541, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7955, gbc.sp());
        EXPECT(0xc542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc541));
        // AC 03B3
        gbc.setState(0x2e85, 0x4934, 0x1920, 0xcf60, 0x8711, 0x99f4, 0x1, 0x1);
        gbc.writeMem(0x2e85, { 0xac });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4934, gbc.sp());
        EXPECT(0x2e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03B4
        gbc.setState(0x8f9a, 0x25a7, 0xc120, 0xa547, 0x295b, 0xe57d, 0x1, 0x1);
        gbc.writeMem(0x8f9a, { 0xac });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x25a7, gbc.sp());
        EXPECT(0x8f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8f9a));
        // AC 03B5
        gbc.setState(0x1b5e, 0xe4ca, 0xb4e0, 0xd3e4, 0xd50f, 0x3ba7, 0x1, 0x1);
        gbc.writeMem(0x1b5e, { 0xac });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe4ca, gbc.sp());
        EXPECT(0x1b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03B6
        gbc.setState(0xab1f, 0x7a8f, 0xbc10, 0xc1cd, 0xe2cf, 0x1a0b, 0x0, 0x0);
        gbc.writeMem(0xab1f, { 0xac });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7a8f, gbc.sp());
        EXPECT(0xab20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xab1f));
        // AC 03B7
        gbc.setState(0x7c39, 0x2664, 0xeaa0, 0xec9b, 0x2e54, 0xf63b, 0x0, 0x1);
        gbc.writeMem(0x7c39, { 0xac });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x7c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03B8
        gbc.setState(0x21f8, 0x64c4, 0xc330, 0x95c2, 0xd017, 0x54fd, 0x0, 0x1);
        gbc.writeMem(0x21f8, { 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x64c4, gbc.sp());
        EXPECT(0x21f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03B9
        gbc.setState(0x769b, 0xd72e, 0xd020, 0x5e63, 0xb0, 0xf56d, 0x1, 0x1);
        gbc.writeMem(0x769b, { 0xac });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd72e, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03BA
        gbc.setState(0x16b0, 0x3a02, 0x6340, 0x275f, 0xed17, 0x36f1, 0x1, 0x0);
        gbc.writeMem(0x16b0, { 0xac });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3a02, gbc.sp());
        EXPECT(0x16b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03BB
        gbc.setState(0x8d42, 0x685e, 0x7790, 0xc683, 0xfa1d, 0x5fe6, 0x1, 0x1);
        gbc.writeMem(0x8d42, { 0xac });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x685e, gbc.sp());
        EXPECT(0x8d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8d42));
        // AC 03BC
        gbc.setState(0x590f, 0xf65, 0x92d0, 0x7e6b, 0xc2e7, 0x297c, 0x0, 0x1);
        gbc.writeMem(0x590f, { 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0x5910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03BD
        gbc.setState(0x80a5, 0xe5a1, 0x1f50, 0x27c8, 0xd8e6, 0x7b19, 0x1, 0x0);
        gbc.writeMem(0x80a5, { 0xac });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe5a1, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x80a5));
        // AC 03BE
        gbc.setState(0x96c8, 0xa972, 0x96b0, 0xc2b4, 0xbdad, 0x1d23, 0x1, 0x1);
        gbc.writeMem(0x96c8, { 0xac });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa972, gbc.sp());
        EXPECT(0x96c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x96c8));
        // AC 03BF
        gbc.setState(0xa13a, 0x206e, 0xe480, 0xeca8, 0xb87, 0x352b, 0x0, 0x1);
        gbc.writeMem(0xa13a, { 0xac });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x206e, gbc.sp());
        EXPECT(0xa13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa13a));
        // AC 03C0
        gbc.setState(0x1d1a, 0x7a5, 0x3980, 0x8bc6, 0x78e6, 0x5c2f, 0x0, 0x1);
        gbc.writeMem(0x1d1a, { 0xac });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7a5, gbc.sp());
        EXPECT(0x1d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03C1
        gbc.setState(0xa8d0, 0x524a, 0x5480, 0x3050, 0x16ab, 0x201f, 0x1, 0x0);
        gbc.writeMem(0xa8d0, { 0xac });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x524a, gbc.sp());
        EXPECT(0xa8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa8d0));
        // AC 03C2
        gbc.setState(0x3f12, 0x90c9, 0x35d0, 0x5f03, 0x840a, 0x9b56, 0x1, 0x1);
        gbc.writeMem(0x3f12, { 0xac });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x90c9, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03C3
        gbc.setState(0x9743, 0xcd51, 0x5130, 0x6741, 0xd60a, 0x712d, 0x1, 0x1);
        gbc.writeMem(0x9743, { 0xac });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x9743));
        // AC 03C4
        gbc.setState(0x8c9b, 0x871d, 0x4de0, 0xa8bb, 0x5eba, 0x672b, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0xac });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x871d, gbc.sp());
        EXPECT(0x8c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8c9b));
        // AC 03C5
        gbc.setState(0x8be, 0x6e33, 0xa720, 0xd5ce, 0xd23f, 0xbdb0, 0x0, 0x1);
        gbc.writeMem(0x8be, { 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6e33, gbc.sp());
        EXPECT(0x8bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03C6
        gbc.setState(0x8603, 0x661, 0x5fe0, 0x3ab8, 0x5747, 0x248d, 0x0, 0x0);
        gbc.writeMem(0x8603, { 0xac });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x661, gbc.sp());
        EXPECT(0x8604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8603));
        // AC 03C7
        gbc.setState(0x4ca5, 0x3732, 0x2c00, 0x408c, 0x2fdb, 0x10e9, 0x0, 0x1);
        gbc.writeMem(0x4ca5, { 0xac });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0x4ca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03C8
        gbc.setState(0x3aed, 0x8ceb, 0x71a0, 0x261f, 0x823d, 0x96f6, 0x0, 0x0);
        gbc.writeMem(0x3aed, { 0xac });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8ceb, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03CA
        gbc.setState(0x8169, 0x6719, 0x1d80, 0x4d69, 0xd0c7, 0x3be4, 0x0, 0x1);
        gbc.writeMem(0x8169, { 0xac });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0x816a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8169));
        // AC 03CB
        gbc.setState(0xa3bf, 0xe062, 0x3af0, 0x2020, 0x46fb, 0x3435, 0x1, 0x0);
        gbc.writeMem(0xa3bf, { 0xac });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe062, gbc.sp());
        EXPECT(0xa3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa3bf));
        // AC 03CC
        gbc.setState(0xa54d, 0xfdf1, 0x67a0, 0x9cbb, 0x3e96, 0x4af8, 0x0, 0x1);
        gbc.writeMem(0xa54d, { 0xac });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfdf1, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xa54d));
        // AC 03CD
        gbc.setState(0x8243, 0x51ed, 0xeae0, 0xbffb, 0x9614, 0xaff1, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xac });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x51ed, gbc.sp());
        EXPECT(0x8244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8243));
        // AC 03CE
        gbc.setState(0xe5fc, 0xd2dc, 0xd3e0, 0xc30a, 0x3d04, 0xd22d, 0x0, 0x0);
        gbc.writeMem(0xe5fc, { 0xac });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd2dc, gbc.sp());
        EXPECT(0xe5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe5fc));
        // AC 03CF
        gbc.setState(0x2af0, 0xd4c3, 0xd140, 0x29da, 0x2b1f, 0x6689, 0x1, 0x0);
        gbc.writeMem(0x2af0, { 0xac });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd4c3, gbc.sp());
        EXPECT(0x2af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03D0
        gbc.setState(0xc6a8, 0x3e12, 0xeff0, 0x878b, 0x81eb, 0xc3e6, 0x0, 0x0);
        gbc.writeMem(0xc6a8, { 0xac });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3e12, gbc.sp());
        EXPECT(0xc6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc6a8));
        // AC 03D1
        gbc.setState(0xe899, 0x8362, 0xde20, 0x758d, 0xfd81, 0xf995, 0x1, 0x1);
        gbc.writeMem(0xe899, { 0xac });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8362, gbc.sp());
        EXPECT(0xe89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe899));
        // AC 03D2
        gbc.setState(0xe17b, 0x55e1, 0x9be0, 0x972f, 0x4dcf, 0x819d, 0x1, 0x0);
        gbc.writeMem(0xe17b, { 0xac });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x55e1, gbc.sp());
        EXPECT(0xe17c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe17b));
        // AC 03D3
        gbc.setState(0x4d11, 0x4e0b, 0xc710, 0x13e3, 0x58df, 0xb9de, 0x1, 0x1);
        gbc.writeMem(0x4d11, { 0xac });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0x4d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03D4
        gbc.setState(0x5765, 0xeaa, 0xa0f0, 0xe968, 0x71c4, 0xb45e, 0x0, 0x1);
        gbc.writeMem(0x5765, { 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0x5766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03D5
        gbc.setState(0x1f18, 0x1d85, 0xe300, 0x2958, 0x7787, 0x5d8a, 0x0, 0x1);
        gbc.writeMem(0x1f18, { 0xac });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1d85, gbc.sp());
        EXPECT(0x1f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03D6
        gbc.setState(0x970b, 0xde48, 0x3320, 0x66d8, 0x919a, 0xf25c, 0x0, 0x1);
        gbc.writeMem(0x970b, { 0xac });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xde48, gbc.sp());
        EXPECT(0x970c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x970b));
        // AC 03D7
        gbc.setState(0x2d1d, 0x18bb, 0x88b0, 0x1fba, 0xd442, 0x33e8, 0x1, 0x0);
        gbc.writeMem(0x2d1d, { 0xac });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x18bb, gbc.sp());
        EXPECT(0x2d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03D8
        gbc.setState(0x70a0, 0xb1e2, 0xf270, 0x5b7f, 0x27a9, 0xb3d4, 0x1, 0x0);
        gbc.writeMem(0x70a0, { 0xac });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb1e2, gbc.sp());
        EXPECT(0x70a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03D9
        gbc.setState(0x129, 0xe3ff, 0xc730, 0xd020, 0xe008, 0xb04a, 0x1, 0x0);
        gbc.writeMem(0x129, { 0xac });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe3ff, gbc.sp());
        EXPECT(0x12a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03DA
        gbc.setState(0xd5dc, 0x51f, 0x4250, 0x358d, 0x86e8, 0x29fe, 0x1, 0x1);
        gbc.writeMem(0xd5dc, { 0xac });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x51f, gbc.sp());
        EXPECT(0xd5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xd5dc));
        // AC 03DB
        gbc.setState(0x1fae, 0xd48d, 0x74f0, 0xbc3e, 0x299e, 0xd7c1, 0x0, 0x1);
        gbc.writeMem(0x1fae, { 0xac });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd48d, gbc.sp());
        EXPECT(0x1faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03DC
        gbc.setState(0x7237, 0x681f, 0xe390, 0xa8ea, 0x996f, 0xd31d, 0x0, 0x1);
        gbc.writeMem(0x7237, { 0xac });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x681f, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03DD
        gbc.setState(0xeb45, 0x29a, 0xade0, 0xf1a0, 0x39e1, 0x3a47, 0x1, 0x0);
        gbc.writeMem(0xeb45, { 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x29a, gbc.sp());
        EXPECT(0xeb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xeb45));
        // AC 03DE
        gbc.setState(0xe647, 0xdac7, 0xde90, 0xcc6f, 0x55a1, 0x227f, 0x0, 0x1);
        gbc.writeMem(0xe647, { 0xac });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdac7, gbc.sp());
        EXPECT(0xe648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe647));
        // AC 03DF
        gbc.setState(0x981f, 0xf7f3, 0xaec0, 0x5a79, 0x8631, 0x9b26, 0x0, 0x1);
        gbc.writeMem(0x981f, { 0xac });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf7f3, gbc.sp());
        EXPECT(0x9820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x981f));
        // AC 03E0
        gbc.setState(0x2888, 0x86dd, 0xdbb0, 0x444, 0x26ae, 0x8f4f, 0x1, 0x1);
        gbc.writeMem(0x2888, { 0xac });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x86dd, gbc.sp());
        EXPECT(0x2889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03E1
        gbc.setState(0x4931, 0x6ad1, 0xfa00, 0x4e67, 0x2b73, 0x104, 0x1, 0x0);
        gbc.writeMem(0x4931, { 0xac });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6ad1, gbc.sp());
        EXPECT(0x4932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03E2
        gbc.setState(0xc16f, 0xe3b1, 0xaf40, 0xf5a, 0xee7d, 0xeeb, 0x1, 0x0);
        gbc.writeMem(0xc16f, { 0xac });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe3b1, gbc.sp());
        EXPECT(0xc170, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc16f));
        // AC 03E3
        gbc.setState(0xc72f, 0xc4f2, 0x1d60, 0x85d5, 0x67d7, 0x184f, 0x0, 0x0);
        gbc.writeMem(0xc72f, { 0xac });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc4f2, gbc.sp());
        EXPECT(0xc730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc72f));
        // AC 03E4
        gbc.setState(0x13b7, 0x8569, 0xada0, 0x4b71, 0x8090, 0x5a8c, 0x0, 0x0);
        gbc.writeMem(0x13b7, { 0xac });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8569, gbc.sp());
        EXPECT(0x13b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03E5
        gbc.setState(0x6b5d, 0xe3de, 0xfb90, 0xbd6f, 0xc6f5, 0xef09, 0x0, 0x1);
        gbc.writeMem(0x6b5d, { 0xac });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe3de, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // AC 03E6
        gbc.setState(0xb1fc, 0xbe12, 0x56d0, 0x5f3c, 0x7d22, 0x7495, 0x0, 0x0);
        gbc.writeMem(0xb1fc, { 0xac });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe12, gbc.sp());
        EXPECT(0xb1fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xb1fc));
        // AC 03E7
        gbc.setState(0x4223, 0x2d2c, 0x4c90, 0x1ab9, 0xae70, 0x2f50, 0x0, 0x1);
        gbc.writeMem(0x4223, { 0xac });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2d2c, gbc.sp());
        EXPECT(0x4224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
