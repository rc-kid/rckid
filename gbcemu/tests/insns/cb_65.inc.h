    TEST(gbcemu, opcode_cb_65) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 65 0000
        gbc.setState(0x4886, 0xa557, 0x960, 0xfad2, 0xa7d2, 0xc466, 0x0, 0x0);
        gbc.writeMem(0x4886, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa557);
        EXPECT(gbc.pc(), 0x4888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0001
        gbc.setState(0xa18c, 0x3bd9, 0x8320, 0x230d, 0xb7c8, 0xe6cb, 0x0, 0x0);
        gbc.writeMem(0xa18c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x3bd9);
        EXPECT(gbc.pc(), 0xa18e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18c), 0xcb);
        EXPECT(gbc.readMem(0xa18d), 0x65);
        // CB 65 0002
        gbc.setState(0x4d58, 0x4371, 0xdea0, 0x8853, 0xfa73, 0xaa57, 0x1, 0x1);
        gbc.writeMem(0x4d58, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4371);
        EXPECT(gbc.pc(), 0x4d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0003
        gbc.setState(0xd12d, 0x7ff7, 0x1b90, 0xf174, 0x2248, 0x79a4, 0x0, 0x0);
        gbc.writeMem(0xd12d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7ff7);
        EXPECT(gbc.pc(), 0xd12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12d), 0xcb);
        EXPECT(gbc.readMem(0xd12e), 0x65);
        // CB 65 0004
        gbc.setState(0x5283, 0xd98d, 0x1940, 0xdb80, 0xf8f, 0xaa62, 0x1, 0x0);
        gbc.writeMem(0x5283, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd98d);
        EXPECT(gbc.pc(), 0x5285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0005
        gbc.setState(0xedd5, 0x7a1f, 0x5810, 0x92a2, 0xd8d0, 0x58e7, 0x0, 0x1);
        gbc.writeMem(0xedd5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7a1f);
        EXPECT(gbc.pc(), 0xedd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd5), 0xcb);
        EXPECT(gbc.readMem(0xedd6), 0x65);
        // CB 65 0006
        gbc.setState(0xd177, 0xfd64, 0xe010, 0xcd27, 0xc818, 0x28dc, 0x1, 0x0);
        gbc.writeMem(0xd177, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfd64);
        EXPECT(gbc.pc(), 0xd179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd177), 0xcb);
        EXPECT(gbc.readMem(0xd178), 0x65);
        // CB 65 0007
        gbc.setState(0x6b6f, 0x46e2, 0xc440, 0x836a, 0x9ccd, 0xd8ae, 0x0, 0x1);
        gbc.writeMem(0x6b6f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x46e2);
        EXPECT(gbc.pc(), 0x6b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0009
        gbc.setState(0xc4e1, 0x615c, 0x2c00, 0x61d, 0x6120, 0x351b, 0x0, 0x0);
        gbc.writeMem(0xc4e1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x615c);
        EXPECT(gbc.pc(), 0xc4e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e1), 0xcb);
        EXPECT(gbc.readMem(0xc4e2), 0x65);
        // CB 65 000A
        gbc.setState(0xb862, 0x329b, 0xbe90, 0xb876, 0xa68f, 0xb962, 0x0, 0x1);
        gbc.writeMem(0xb862, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x329b);
        EXPECT(gbc.pc(), 0xb864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb862), 0xcb);
        EXPECT(gbc.readMem(0xb863), 0x65);
        // CB 65 000B
        gbc.setState(0x4437, 0xcf76, 0x7b50, 0x3fb8, 0x6925, 0xe533, 0x0, 0x1);
        gbc.writeMem(0x4437, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcf76);
        EXPECT(gbc.pc(), 0x4439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 000C
        gbc.setState(0x42cc, 0x1206, 0xd800, 0x7b90, 0xe03, 0x8442, 0x1, 0x0);
        gbc.writeMem(0x42cc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1206);
        EXPECT(gbc.pc(), 0x42ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 000E
        gbc.setState(0x9819, 0x593, 0x30c0, 0x3501, 0x3693, 0x743c, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x593);
        EXPECT(gbc.pc(), 0x981b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9819), 0xcb);
        EXPECT(gbc.readMem(0x981a), 0x65);
        // CB 65 000F
        gbc.setState(0x230e, 0x3d0c, 0xef10, 0x3c8b, 0xfbe, 0x322a, 0x1, 0x1);
        gbc.writeMem(0x230e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x3d0c);
        EXPECT(gbc.pc(), 0x2310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0010
        gbc.setState(0xa05e, 0xeaa4, 0x3bc0, 0x275f, 0x874d, 0xe552, 0x0, 0x1);
        gbc.writeMem(0xa05e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xeaa4);
        EXPECT(gbc.pc(), 0xa060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05e), 0xcb);
        EXPECT(gbc.readMem(0xa05f), 0x65);
        // CB 65 0011
        gbc.setState(0x42d5, 0xb779, 0x3720, 0x4bd8, 0x9302, 0x35b7, 0x0, 0x1);
        gbc.writeMem(0x42d5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0x42d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0012
        gbc.setState(0xc38c, 0x3221, 0xe3c0, 0xf12c, 0x86, 0xdf75, 0x0, 0x0);
        gbc.writeMem(0xc38c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3221);
        EXPECT(gbc.pc(), 0xc38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc38c), 0xcb);
        EXPECT(gbc.readMem(0xc38d), 0x65);
        // CB 65 0013
        gbc.setState(0x936b, 0x810d, 0x80b0, 0xc91e, 0x98a3, 0xada8, 0x1, 0x0);
        gbc.writeMem(0x936b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0x936d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x936b), 0xcb);
        EXPECT(gbc.readMem(0x936c), 0x65);
        // CB 65 0014
        gbc.setState(0x9b1f, 0x6a82, 0x7b0, 0x49b3, 0xcc4f, 0xfb03, 0x0, 0x1);
        gbc.writeMem(0x9b1f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6a82);
        EXPECT(gbc.pc(), 0x9b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1f), 0xcb);
        EXPECT(gbc.readMem(0x9b20), 0x65);
        // CB 65 0015
        gbc.setState(0x14b5, 0xb86b, 0xac00, 0x5eb6, 0x2a37, 0x8ea1, 0x0, 0x0);
        gbc.writeMem(0x14b5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb86b);
        EXPECT(gbc.pc(), 0x14b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0016
        gbc.setState(0xcfdd, 0x6b98, 0x960, 0x48aa, 0x56e3, 0xb917, 0x0, 0x0);
        gbc.writeMem(0xcfdd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6b98);
        EXPECT(gbc.pc(), 0xcfdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfdd), 0xcb);
        EXPECT(gbc.readMem(0xcfde), 0x65);
        // CB 65 0017
        gbc.setState(0x8a31, 0x4c91, 0xcb10, 0x174, 0xa771, 0xb00b, 0x0, 0x0);
        gbc.writeMem(0x8a31, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4c91);
        EXPECT(gbc.pc(), 0x8a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a31), 0xcb);
        EXPECT(gbc.readMem(0x8a32), 0x65);
        // CB 65 0018
        gbc.setState(0xd2, 0x9279, 0xc7a0, 0x53da, 0x7940, 0x5d83, 0x0, 0x1);
        gbc.writeMem(0xd2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9279);
        EXPECT(gbc.pc(), 0xd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0019
        gbc.setState(0x6ae, 0x466e, 0x33c0, 0x3f2, 0xad57, 0xd72f, 0x0, 0x1);
        gbc.writeMem(0x6ae, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x466e);
        EXPECT(gbc.pc(), 0x6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 001A
        gbc.setState(0x6f40, 0xd92e, 0x6a00, 0xada5, 0xd2d0, 0x42eb, 0x0, 0x0);
        gbc.writeMem(0x6f40, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd92e);
        EXPECT(gbc.pc(), 0x6f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 001C
        gbc.setState(0x7340, 0x4ca4, 0xb300, 0x4d66, 0xa7bb, 0xeae6, 0x1, 0x0);
        gbc.writeMem(0x7340, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4ca4);
        EXPECT(gbc.pc(), 0x7342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 001D
        gbc.setState(0x5386, 0x776b, 0x65f0, 0xce3c, 0x4257, 0x3e94, 0x0, 0x0);
        gbc.writeMem(0x5386, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x776b);
        EXPECT(gbc.pc(), 0x5388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 001F
        gbc.setState(0x238c, 0xbc41, 0x3b00, 0x8992, 0xeffb, 0x33a1, 0x1, 0x1);
        gbc.writeMem(0x238c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbc41);
        EXPECT(gbc.pc(), 0x238e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0020
        gbc.setState(0x6aa4, 0x5a8f, 0x1b80, 0x1b8d, 0x7b11, 0x47d7, 0x1, 0x0);
        gbc.writeMem(0x6aa4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5a8f);
        EXPECT(gbc.pc(), 0x6aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0021
        gbc.setState(0x93fd, 0x5f0b, 0xff0, 0xd55d, 0x3d9, 0xc498, 0x0, 0x0);
        gbc.writeMem(0x93fd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5f0b);
        EXPECT(gbc.pc(), 0x93ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93fd), 0xcb);
        EXPECT(gbc.readMem(0x93fe), 0x65);
        // CB 65 0022
        gbc.setState(0xa8a0, 0x33cf, 0x7040, 0xa904, 0x3daa, 0x9c06, 0x1, 0x0);
        gbc.writeMem(0xa8a0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x33cf);
        EXPECT(gbc.pc(), 0xa8a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a0), 0xcb);
        EXPECT(gbc.readMem(0xa8a1), 0x65);
        // CB 65 0023
        gbc.setState(0xc1a7, 0xfe44, 0xb920, 0x4495, 0x4806, 0xbf20, 0x0, 0x0);
        gbc.writeMem(0xc1a7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfe44);
        EXPECT(gbc.pc(), 0xc1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a7), 0xcb);
        EXPECT(gbc.readMem(0xc1a8), 0x65);
        // CB 65 0024
        gbc.setState(0xd522, 0xb9bb, 0x3100, 0x7040, 0x1e5f, 0x6ec9, 0x0, 0x1);
        gbc.writeMem(0xd522, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb9bb);
        EXPECT(gbc.pc(), 0xd524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd522), 0xcb);
        EXPECT(gbc.readMem(0xd523), 0x65);
        // CB 65 0025
        gbc.setState(0x4602, 0xbd29, 0x9bb0, 0x851c, 0x9ac6, 0x715d, 0x0, 0x0);
        gbc.writeMem(0x4602, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbd29);
        EXPECT(gbc.pc(), 0x4604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0026
        gbc.setState(0x180b, 0x1787, 0x64e0, 0xb784, 0xe786, 0xda53, 0x0, 0x1);
        gbc.writeMem(0x180b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1787);
        EXPECT(gbc.pc(), 0x180d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0027
        gbc.setState(0xa7c8, 0x397d, 0x8c0, 0x990f, 0x2908, 0x8fa8, 0x0, 0x0);
        gbc.writeMem(0xa7c8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x397d);
        EXPECT(gbc.pc(), 0xa7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c8), 0xcb);
        EXPECT(gbc.readMem(0xa7c9), 0x65);
        // CB 65 0028
        gbc.setState(0xcfad, 0x55e6, 0xa8f0, 0x9f70, 0x719f, 0x1ad9, 0x1, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x55e6);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0x65);
        // CB 65 0029
        gbc.setState(0x3109, 0x97b, 0xb2b0, 0xae68, 0x962d, 0xd18d, 0x0, 0x1);
        gbc.writeMem(0x3109, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x97b);
        EXPECT(gbc.pc(), 0x310b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 002A
        gbc.setState(0x5533, 0xa38e, 0xe990, 0x53e7, 0xc2de, 0x47e5, 0x0, 0x1);
        gbc.writeMem(0x5533, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa38e);
        EXPECT(gbc.pc(), 0x5535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 002B
        gbc.setState(0x12f7, 0x6d01, 0x8ce0, 0x9d0d, 0xe3ed, 0x4b36, 0x1, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6d01);
        EXPECT(gbc.pc(), 0x12f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 002C
        gbc.setState(0xbf05, 0xd4c7, 0x130, 0x9520, 0x4ad2, 0x9255, 0x0, 0x1);
        gbc.writeMem(0xbf05, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd4c7);
        EXPECT(gbc.pc(), 0xbf07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf05), 0xcb);
        EXPECT(gbc.readMem(0xbf06), 0x65);
        // CB 65 002D
        gbc.setState(0xccfb, 0xd819, 0x3c0, 0x9044, 0xf453, 0x5044, 0x1, 0x0);
        gbc.writeMem(0xccfb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd819);
        EXPECT(gbc.pc(), 0xccfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccfb), 0xcb);
        EXPECT(gbc.readMem(0xccfc), 0x65);
        // CB 65 002E
        gbc.setState(0xeac6, 0x6514, 0x46c0, 0xc083, 0x88f1, 0x4642, 0x1, 0x0);
        gbc.writeMem(0xeac6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x6514);
        EXPECT(gbc.pc(), 0xeac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac6), 0xcb);
        EXPECT(gbc.readMem(0xeac7), 0x65);
        // CB 65 002F
        gbc.setState(0x799c, 0x4694, 0xc1e0, 0xe069, 0xbdfa, 0x516, 0x1, 0x1);
        gbc.writeMem(0x799c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4694);
        EXPECT(gbc.pc(), 0x799e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0030
        gbc.setState(0x4670, 0x4c76, 0x33e0, 0x11eb, 0xbf0b, 0xcadd, 0x0, 0x1);
        gbc.writeMem(0x4670, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4c76);
        EXPECT(gbc.pc(), 0x4672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0033
        gbc.setState(0x630b, 0x14cb, 0xcd00, 0x2a49, 0xfbee, 0xe8c4, 0x0, 0x1);
        gbc.writeMem(0x630b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x14cb);
        EXPECT(gbc.pc(), 0x630d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0034
        gbc.setState(0x6eeb, 0xf82b, 0x58b0, 0x5659, 0xdb64, 0xd92c, 0x1, 0x0);
        gbc.writeMem(0x6eeb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf82b);
        EXPECT(gbc.pc(), 0x6eed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0036
        gbc.setState(0x85dd, 0x6492, 0xf430, 0xddba, 0x3099, 0xdfd1, 0x0, 0x0);
        gbc.writeMem(0x85dd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6492);
        EXPECT(gbc.pc(), 0x85df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85dd), 0xcb);
        EXPECT(gbc.readMem(0x85de), 0x65);
        // CB 65 0037
        gbc.setState(0x543b, 0xd808, 0xbd70, 0x9089, 0x79f7, 0xfff1, 0x0, 0x0);
        gbc.writeMem(0x543b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd808);
        EXPECT(gbc.pc(), 0x543d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0038
        gbc.setState(0x15f3, 0x81b8, 0x2e0, 0x4d77, 0x65d1, 0xc142, 0x1, 0x1);
        gbc.writeMem(0x15f3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x81b8);
        EXPECT(gbc.pc(), 0x15f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0039
        gbc.setState(0x8f2e, 0xa0b2, 0x9550, 0x7300, 0xad01, 0xf65c, 0x0, 0x0);
        gbc.writeMem(0x8f2e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa0b2);
        EXPECT(gbc.pc(), 0x8f30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f2e), 0xcb);
        EXPECT(gbc.readMem(0x8f2f), 0x65);
        // CB 65 003A
        gbc.setState(0xcc74, 0x9942, 0xf580, 0x8993, 0xc022, 0x45dc, 0x0, 0x0);
        gbc.writeMem(0xcc74, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9942);
        EXPECT(gbc.pc(), 0xcc76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc74), 0xcb);
        EXPECT(gbc.readMem(0xcc75), 0x65);
        // CB 65 003B
        gbc.setState(0x3894, 0x2fa0, 0x2a0, 0x6d92, 0x1552, 0x8935, 0x1, 0x1);
        gbc.writeMem(0x3894, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2fa0);
        EXPECT(gbc.pc(), 0x3896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 003C
        gbc.setState(0x58ae, 0xa20d, 0xaa10, 0xc524, 0x9557, 0x651c, 0x1, 0x0);
        gbc.writeMem(0x58ae, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa20d);
        EXPECT(gbc.pc(), 0x58b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 003D
        gbc.setState(0xcacd, 0xc0de, 0x2150, 0xf7e6, 0xa9a3, 0xc9e2, 0x1, 0x0);
        gbc.writeMem(0xcacd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc0de);
        EXPECT(gbc.pc(), 0xcacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcacd), 0xcb);
        EXPECT(gbc.readMem(0xcace), 0x65);
        // CB 65 003E
        gbc.setState(0xeebc, 0xaa85, 0xb5e0, 0xcf9a, 0xac64, 0x6d46, 0x1, 0x1);
        gbc.writeMem(0xeebc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaa85);
        EXPECT(gbc.pc(), 0xeebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeebc), 0xcb);
        EXPECT(gbc.readMem(0xeebd), 0x65);
        // CB 65 003F
        gbc.setState(0x54bf, 0xd6f, 0xbef0, 0x2ef0, 0x9c68, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0x54bf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd6f);
        EXPECT(gbc.pc(), 0x54c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0040
        gbc.setState(0xa34e, 0x7482, 0xf9c0, 0xa742, 0x7adc, 0x3a2f, 0x1, 0x0);
        gbc.writeMem(0xa34e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7482);
        EXPECT(gbc.pc(), 0xa350);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34e), 0xcb);
        EXPECT(gbc.readMem(0xa34f), 0x65);
        // CB 65 0041
        gbc.setState(0x4d2e, 0x4d74, 0x7fa0, 0xd877, 0x2438, 0x8146, 0x0, 0x0);
        gbc.writeMem(0x4d2e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4d74);
        EXPECT(gbc.pc(), 0x4d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0042
        gbc.setState(0xb204, 0x7ab7, 0x48c0, 0xe768, 0xc282, 0x6d8c, 0x1, 0x1);
        gbc.writeMem(0xb204, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7ab7);
        EXPECT(gbc.pc(), 0xb206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb204), 0xcb);
        EXPECT(gbc.readMem(0xb205), 0x65);
        // CB 65 0043
        gbc.setState(0x1168, 0x8a60, 0xf540, 0x5ae8, 0xb10, 0xeea0, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8a60);
        EXPECT(gbc.pc(), 0x116a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0045
        gbc.setState(0xab18, 0xeef0, 0xc9e0, 0x328a, 0xc7dd, 0xa016, 0x0, 0x0);
        gbc.writeMem(0xab18, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xeef0);
        EXPECT(gbc.pc(), 0xab1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab18), 0xcb);
        EXPECT(gbc.readMem(0xab19), 0x65);
        // CB 65 0046
        gbc.setState(0xdeb5, 0x66c9, 0xf780, 0x7d45, 0xff6d, 0x110c, 0x1, 0x0);
        gbc.writeMem(0xdeb5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x66c9);
        EXPECT(gbc.pc(), 0xdeb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb5), 0xcb);
        EXPECT(gbc.readMem(0xdeb6), 0x65);
        // CB 65 0047
        gbc.setState(0x5341, 0xe71d, 0x29b0, 0xbd10, 0x2eac, 0xda9f, 0x0, 0x0);
        gbc.writeMem(0x5341, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe71d);
        EXPECT(gbc.pc(), 0x5343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0048
        gbc.setState(0xe2d9, 0x1572, 0x8010, 0x6239, 0xe96a, 0xc7aa, 0x0, 0x0);
        gbc.writeMem(0xe2d9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1572);
        EXPECT(gbc.pc(), 0xe2db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d9), 0xcb);
        EXPECT(gbc.readMem(0xe2da), 0x65);
        // CB 65 0049
        gbc.setState(0x1db6, 0xf2b1, 0x46f0, 0x87ab, 0x8386, 0x5074, 0x1, 0x1);
        gbc.writeMem(0x1db6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf2b1);
        EXPECT(gbc.pc(), 0x1db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 004A
        gbc.setState(0x3d9d, 0x7a5c, 0x8340, 0x7168, 0x310a, 0xaafb, 0x0, 0x0);
        gbc.writeMem(0x3d9d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7a5c);
        EXPECT(gbc.pc(), 0x3d9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 004B
        gbc.setState(0x286c, 0xad8a, 0x1da0, 0xb788, 0x4fc6, 0xd804, 0x0, 0x0);
        gbc.writeMem(0x286c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xad8a);
        EXPECT(gbc.pc(), 0x286e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 004C
        gbc.setState(0x484b, 0x63fb, 0x4410, 0xefdf, 0x26a7, 0x641c, 0x1, 0x0);
        gbc.writeMem(0x484b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x63fb);
        EXPECT(gbc.pc(), 0x484d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 004D
        gbc.setState(0x3225, 0xf1de, 0x2f80, 0xc937, 0x882b, 0x129c, 0x1, 0x1);
        gbc.writeMem(0x3225, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf1de);
        EXPECT(gbc.pc(), 0x3227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 004E
        gbc.setState(0x841a, 0x7fe9, 0xd3a0, 0xa705, 0x8f51, 0x974c, 0x0, 0x0);
        gbc.writeMem(0x841a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7fe9);
        EXPECT(gbc.pc(), 0x841c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841a), 0xcb);
        EXPECT(gbc.readMem(0x841b), 0x65);
        // CB 65 004F
        gbc.setState(0x24bb, 0xfbd3, 0xf30, 0x3195, 0xf7b, 0x3b1f, 0x0, 0x0);
        gbc.writeMem(0x24bb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfbd3);
        EXPECT(gbc.pc(), 0x24bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0050
        gbc.setState(0xcbdc, 0xa3e, 0x6d20, 0xf378, 0xae3a, 0xfb20, 0x0, 0x1);
        gbc.writeMem(0xcbdc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa3e);
        EXPECT(gbc.pc(), 0xcbde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbdc), 0xcb);
        EXPECT(gbc.readMem(0xcbdd), 0x65);
        // CB 65 0051
        gbc.setState(0x6aaa, 0xd459, 0xf330, 0x477e, 0x4a5c, 0xadb5, 0x0, 0x0);
        gbc.writeMem(0x6aaa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xd459);
        EXPECT(gbc.pc(), 0x6aac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0052
        gbc.setState(0x4739, 0x6e1, 0xdb00, 0xb330, 0x3620, 0x3f8b, 0x0, 0x1);
        gbc.writeMem(0x4739, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6e1);
        EXPECT(gbc.pc(), 0x473b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0053
        gbc.setState(0xb666, 0xbcde, 0x97b0, 0xc009, 0x882, 0x69e7, 0x0, 0x0);
        gbc.writeMem(0xb666, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xbcde);
        EXPECT(gbc.pc(), 0xb668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb666), 0xcb);
        EXPECT(gbc.readMem(0xb667), 0x65);
        // CB 65 0054
        gbc.setState(0x6892, 0x85e3, 0xedc0, 0xea58, 0x1a16, 0xf51d, 0x0, 0x1);
        gbc.writeMem(0x6892, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x85e3);
        EXPECT(gbc.pc(), 0x6894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0055
        gbc.setState(0x71c9, 0x790c, 0x7f50, 0x2c30, 0xb927, 0x1032, 0x1, 0x0);
        gbc.writeMem(0x71c9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x790c);
        EXPECT(gbc.pc(), 0x71cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0056
        gbc.setState(0xc117, 0x1a38, 0xd130, 0x67a5, 0x29e6, 0x81ea, 0x0, 0x1);
        gbc.writeMem(0xc117, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1a38);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc117), 0xcb);
        EXPECT(gbc.readMem(0xc118), 0x65);
        // CB 65 0057
        gbc.setState(0x73d2, 0x705d, 0x6270, 0x759d, 0x6df6, 0xc8dd, 0x1, 0x1);
        gbc.writeMem(0x73d2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x705d);
        EXPECT(gbc.pc(), 0x73d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0058
        gbc.setState(0x5751, 0x31dd, 0x980, 0xb803, 0x22c9, 0xbc7c, 0x1, 0x0);
        gbc.writeMem(0x5751, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x31dd);
        EXPECT(gbc.pc(), 0x5753);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0059
        gbc.setState(0x4da9, 0xd6f8, 0xb6a0, 0x7d44, 0xd48c, 0xdf46, 0x0, 0x0);
        gbc.writeMem(0x4da9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd6f8);
        EXPECT(gbc.pc(), 0x4dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 005A
        gbc.setState(0x9541, 0x9c7a, 0x8750, 0x6801, 0xc6b6, 0x96c7, 0x1, 0x1);
        gbc.writeMem(0x9541, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9c7a);
        EXPECT(gbc.pc(), 0x9543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9541), 0xcb);
        EXPECT(gbc.readMem(0x9542), 0x65);
        // CB 65 005B
        gbc.setState(0xba7, 0x4f55, 0xe070, 0x4d94, 0xed7b, 0x93e, 0x1, 0x1);
        gbc.writeMem(0xba7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4f55);
        EXPECT(gbc.pc(), 0xba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 005C
        gbc.setState(0xb0af, 0xf5fb, 0x7c0, 0x14fe, 0x8bb4, 0xfa0, 0x0, 0x0);
        gbc.writeMem(0xb0af, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf5fb);
        EXPECT(gbc.pc(), 0xb0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0af), 0xcb);
        EXPECT(gbc.readMem(0xb0b0), 0x65);
        // CB 65 005D
        gbc.setState(0x2ac1, 0x976e, 0xbf20, 0xd891, 0xd80d, 0x9f4c, 0x0, 0x0);
        gbc.writeMem(0x2ac1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x976e);
        EXPECT(gbc.pc(), 0x2ac3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 005E
        gbc.setState(0xbe14, 0xb811, 0x4a20, 0x9aa1, 0x5561, 0x4d79, 0x0, 0x1);
        gbc.writeMem(0xbe14, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb811);
        EXPECT(gbc.pc(), 0xbe16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe14), 0xcb);
        EXPECT(gbc.readMem(0xbe15), 0x65);
        // CB 65 005F
        gbc.setState(0x5137, 0x5565, 0xe8f0, 0x4d26, 0x5fb9, 0x319f, 0x0, 0x1);
        gbc.writeMem(0x5137, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5565);
        EXPECT(gbc.pc(), 0x5139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0060
        gbc.setState(0xcad0, 0x135b, 0x8c10, 0x87f8, 0x4967, 0x7f53, 0x1, 0x0);
        gbc.writeMem(0xcad0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x135b);
        EXPECT(gbc.pc(), 0xcad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcad0), 0xcb);
        EXPECT(gbc.readMem(0xcad1), 0x65);
        // CB 65 0061
        gbc.setState(0x4b4b, 0xc25d, 0xf760, 0x2113, 0x69a8, 0xa750, 0x0, 0x1);
        gbc.writeMem(0x4b4b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc25d);
        EXPECT(gbc.pc(), 0x4b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0062
        gbc.setState(0x5e55, 0x36e, 0x9610, 0x2bb9, 0x6af7, 0xb6fb, 0x0, 0x1);
        gbc.writeMem(0x5e55, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x36e);
        EXPECT(gbc.pc(), 0x5e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0063
        gbc.setState(0x5c5e, 0x4781, 0x670, 0xe0b5, 0xdf80, 0x25f0, 0x1, 0x1);
        gbc.writeMem(0x5c5e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4781);
        EXPECT(gbc.pc(), 0x5c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0064
        gbc.setState(0xc038, 0x3709, 0x1c80, 0x5be6, 0x36ab, 0xf9c, 0x1, 0x1);
        gbc.writeMem(0xc038, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3709);
        EXPECT(gbc.pc(), 0xc03a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc038), 0xcb);
        EXPECT(gbc.readMem(0xc039), 0x65);
        // CB 65 0065
        gbc.setState(0x3f1, 0xadd2, 0x2750, 0x28fe, 0x789e, 0x6b9b, 0x1, 0x1);
        gbc.writeMem(0x3f1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xadd2);
        EXPECT(gbc.pc(), 0x3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0066
        gbc.setState(0x687e, 0x732, 0x3550, 0xf440, 0x17c4, 0xde54, 0x0, 0x1);
        gbc.writeMem(0x687e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x732);
        EXPECT(gbc.pc(), 0x6880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0067
        gbc.setState(0x61fc, 0x384b, 0x3b80, 0xe4a6, 0x33ef, 0x4564, 0x0, 0x0);
        gbc.writeMem(0x61fc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x384b);
        EXPECT(gbc.pc(), 0x61fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0068
        gbc.setState(0x442c, 0xd644, 0xa700, 0x8dae, 0x5b4f, 0x30b3, 0x1, 0x0);
        gbc.writeMem(0x442c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd644);
        EXPECT(gbc.pc(), 0x442e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0069
        gbc.setState(0x2bf7, 0x6e0, 0xe460, 0x56a7, 0x9e28, 0x980d, 0x1, 0x1);
        gbc.writeMem(0x2bf7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6e0);
        EXPECT(gbc.pc(), 0x2bf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 006A
        gbc.setState(0x7301, 0xb54f, 0x3290, 0x8b7b, 0x6283, 0x7a4d, 0x0, 0x0);
        gbc.writeMem(0x7301, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb54f);
        EXPECT(gbc.pc(), 0x7303);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 006B
        gbc.setState(0x7f79, 0x28c7, 0x98f0, 0xf8d3, 0x7083, 0xc27d, 0x0, 0x1);
        gbc.writeMem(0x7f79, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x28c7);
        EXPECT(gbc.pc(), 0x7f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 006C
        gbc.setState(0xe076, 0xca0a, 0xbb80, 0xd6eb, 0xd4ef, 0x125c, 0x0, 0x0);
        gbc.writeMem(0xe076, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xca0a);
        EXPECT(gbc.pc(), 0xe078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe076), 0xcb);
        EXPECT(gbc.readMem(0xe077), 0x65);
        // CB 65 006D
        gbc.setState(0x6782, 0x30ba, 0xd600, 0xed0a, 0x18aa, 0x64b3, 0x1, 0x1);
        gbc.writeMem(0x6782, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x6784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 006E
        gbc.setState(0x5545, 0x498d, 0x6d90, 0xfa3d, 0x84b3, 0x2ddd, 0x0, 0x0);
        gbc.writeMem(0x5545, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x498d);
        EXPECT(gbc.pc(), 0x5547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 006F
        gbc.setState(0x5a81, 0x829, 0xe450, 0x2d9, 0xcdf6, 0xd00b, 0x0, 0x1);
        gbc.writeMem(0x5a81, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x829);
        EXPECT(gbc.pc(), 0x5a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0070
        gbc.setState(0x1c8, 0xadd2, 0xe7c0, 0x87, 0xfda0, 0x9d25, 0x0, 0x0);
        gbc.writeMem(0x1c8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xadd2);
        EXPECT(gbc.pc(), 0x1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0071
        gbc.setState(0x7d1d, 0x9898, 0xc80, 0x84cb, 0x9757, 0xf00e, 0x1, 0x0);
        gbc.writeMem(0x7d1d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9898);
        EXPECT(gbc.pc(), 0x7d1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0072
        gbc.setState(0x236f, 0x3889, 0x4270, 0x660f, 0x8e4, 0x4328, 0x1, 0x1);
        gbc.writeMem(0x236f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3889);
        EXPECT(gbc.pc(), 0x2371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0073
        gbc.setState(0x385e, 0x798c, 0x6f90, 0x5ddb, 0x51a0, 0xcf6e, 0x0, 0x1);
        gbc.writeMem(0x385e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x798c);
        EXPECT(gbc.pc(), 0x3860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0074
        gbc.setState(0x1313, 0x753, 0xdd60, 0x378b, 0x2fb6, 0xa6eb, 0x1, 0x1);
        gbc.writeMem(0x1313, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x753);
        EXPECT(gbc.pc(), 0x1315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0075
        gbc.setState(0xde2e, 0xa2df, 0x1dd0, 0x2cba, 0xf514, 0x3cae, 0x1, 0x1);
        gbc.writeMem(0xde2e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa2df);
        EXPECT(gbc.pc(), 0xde30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2e), 0xcb);
        EXPECT(gbc.readMem(0xde2f), 0x65);
        // CB 65 0076
        gbc.setState(0x935f, 0x821d, 0x5f20, 0xda72, 0x3ba, 0xb8c3, 0x1, 0x1);
        gbc.writeMem(0x935f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x821d);
        EXPECT(gbc.pc(), 0x9361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935f), 0xcb);
        EXPECT(gbc.readMem(0x9360), 0x65);
        // CB 65 0077
        gbc.setState(0x54fa, 0xfe82, 0x1000, 0xd3f1, 0x869c, 0x8206, 0x0, 0x1);
        gbc.writeMem(0x54fa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfe82);
        EXPECT(gbc.pc(), 0x54fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0078
        gbc.setState(0x6405, 0xce59, 0x2e40, 0x4176, 0xc0e3, 0xbbdd, 0x1, 0x0);
        gbc.writeMem(0x6405, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xce59);
        EXPECT(gbc.pc(), 0x6407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0079
        gbc.setState(0xd19b, 0x2a05, 0x68e0, 0x6fb5, 0x9faa, 0xc449, 0x0, 0x0);
        gbc.writeMem(0xd19b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2a05);
        EXPECT(gbc.pc(), 0xd19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd19b), 0xcb);
        EXPECT(gbc.readMem(0xd19c), 0x65);
        // CB 65 007A
        gbc.setState(0x4d40, 0x5a76, 0x1a70, 0x51df, 0x63da, 0xf3c3, 0x0, 0x0);
        gbc.writeMem(0x4d40, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5a76);
        EXPECT(gbc.pc(), 0x4d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 007B
        gbc.setState(0x5837, 0x8e, 0x9cb0, 0xdaf5, 0x9d4b, 0xf82d, 0x1, 0x1);
        gbc.writeMem(0x5837, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8e);
        EXPECT(gbc.pc(), 0x5839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 007C
        gbc.setState(0xbd8a, 0x357b, 0x1640, 0xcccb, 0xf430, 0x50ae, 0x1, 0x1);
        gbc.writeMem(0xbd8a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x357b);
        EXPECT(gbc.pc(), 0xbd8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd8a), 0xcb);
        EXPECT(gbc.readMem(0xbd8b), 0x65);
        // CB 65 007E
        gbc.setState(0xc5c3, 0x5c5, 0xdb30, 0x76ce, 0xf15e, 0xb3bc, 0x1, 0x1);
        gbc.writeMem(0xc5c3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5c5);
        EXPECT(gbc.pc(), 0xc5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c3), 0xcb);
        EXPECT(gbc.readMem(0xc5c4), 0x65);
        // CB 65 007F
        gbc.setState(0x24f6, 0xba3a, 0xa270, 0x75e5, 0x35d5, 0x134d, 0x0, 0x1);
        gbc.writeMem(0x24f6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0x24f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0080
        gbc.setState(0xa2a5, 0xb226, 0x2090, 0x81fb, 0xb4bf, 0x9b4c, 0x1, 0x1);
        gbc.writeMem(0xa2a5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb226);
        EXPECT(gbc.pc(), 0xa2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a5), 0xcb);
        EXPECT(gbc.readMem(0xa2a6), 0x65);
        // CB 65 0081
        gbc.setState(0x43e8, 0xe106, 0xd4c0, 0xd089, 0x942b, 0xf89c, 0x1, 0x0);
        gbc.writeMem(0x43e8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe106);
        EXPECT(gbc.pc(), 0x43ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0082
        gbc.setState(0x5449, 0x587e, 0xb40, 0xf50c, 0xf55e, 0xff5d, 0x1, 0x1);
        gbc.writeMem(0x5449, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x587e);
        EXPECT(gbc.pc(), 0x544b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0083
        gbc.setState(0x19da, 0xf763, 0xd2f0, 0x6b81, 0x232a, 0x3862, 0x1, 0x1);
        gbc.writeMem(0x19da, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf763);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0084
        gbc.setState(0x8b95, 0xc066, 0xcfb0, 0xf308, 0x880b, 0x8cfc, 0x0, 0x1);
        gbc.writeMem(0x8b95, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc066);
        EXPECT(gbc.pc(), 0x8b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b95), 0xcb);
        EXPECT(gbc.readMem(0x8b96), 0x65);
        // CB 65 0085
        gbc.setState(0x8701, 0x34d8, 0xb610, 0x3fbd, 0xcc01, 0x1978, 0x0, 0x0);
        gbc.writeMem(0x8701, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x34d8);
        EXPECT(gbc.pc(), 0x8703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8701), 0xcb);
        EXPECT(gbc.readMem(0x8702), 0x65);
        // CB 65 0087
        gbc.setState(0x4916, 0x9563, 0x3560, 0x1f8, 0xecc1, 0x2536, 0x1, 0x1);
        gbc.writeMem(0x4916, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9563);
        EXPECT(gbc.pc(), 0x4918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0088
        gbc.setState(0x9ad6, 0xa83d, 0xf4f0, 0xc923, 0x8227, 0xdd39, 0x0, 0x1);
        gbc.writeMem(0x9ad6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa83d);
        EXPECT(gbc.pc(), 0x9ad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad6), 0xcb);
        EXPECT(gbc.readMem(0x9ad7), 0x65);
        // CB 65 0089
        gbc.setState(0x26, 0x3622, 0xabf0, 0x3b1f, 0xe7d8, 0x2177, 0x1, 0x1);
        gbc.writeMem(0x26, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x3622);
        EXPECT(gbc.pc(), 0x28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 008A
        gbc.setState(0xf84, 0x8e3e, 0x840, 0xd58c, 0xc923, 0xeb30, 0x1, 0x1);
        gbc.writeMem(0xf84, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x8e3e);
        EXPECT(gbc.pc(), 0xf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 008B
        gbc.setState(0x7e9c, 0xc7ed, 0x2050, 0x7351, 0x9e0, 0xf60c, 0x1, 0x1);
        gbc.writeMem(0x7e9c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc7ed);
        EXPECT(gbc.pc(), 0x7e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 008C
        gbc.setState(0x1812, 0x9c3c, 0xe710, 0x9ebb, 0x5629, 0xe16b, 0x1, 0x1);
        gbc.writeMem(0x1812, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9c3c);
        EXPECT(gbc.pc(), 0x1814);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 008E
        gbc.setState(0xe648, 0x2a5, 0x9b10, 0x8ab9, 0x9e18, 0x2c7a, 0x0, 0x0);
        gbc.writeMem(0xe648, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2a5);
        EXPECT(gbc.pc(), 0xe64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe648), 0xcb);
        EXPECT(gbc.readMem(0xe649), 0x65);
        // CB 65 008F
        gbc.setState(0xae71, 0xcbc7, 0x8380, 0x6c71, 0x967, 0x485e, 0x0, 0x0);
        gbc.writeMem(0xae71, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcbc7);
        EXPECT(gbc.pc(), 0xae73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae71), 0xcb);
        EXPECT(gbc.readMem(0xae72), 0x65);
        // CB 65 0090
        gbc.setState(0xec3c, 0xf269, 0xc910, 0xd643, 0x69ab, 0x62b4, 0x0, 0x1);
        gbc.writeMem(0xec3c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf269);
        EXPECT(gbc.pc(), 0xec3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3c), 0xcb);
        EXPECT(gbc.readMem(0xec3d), 0x65);
        // CB 65 0091
        gbc.setState(0x9563, 0x6360, 0xda00, 0xce43, 0x5493, 0x40c8, 0x0, 0x0);
        gbc.writeMem(0x9563, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6360);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9563), 0xcb);
        EXPECT(gbc.readMem(0x9564), 0x65);
        // CB 65 0092
        gbc.setState(0xbc9c, 0xb129, 0x95a0, 0x4677, 0x9e55, 0xe24, 0x0, 0x0);
        gbc.writeMem(0xbc9c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb129);
        EXPECT(gbc.pc(), 0xbc9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9c), 0xcb);
        EXPECT(gbc.readMem(0xbc9d), 0x65);
        // CB 65 0093
        gbc.setState(0x2a96, 0x1f06, 0x3450, 0x9aa2, 0x90e6, 0x5f24, 0x0, 0x0);
        gbc.writeMem(0x2a96, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1f06);
        EXPECT(gbc.pc(), 0x2a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0094
        gbc.setState(0xbbcd, 0xa49c, 0xa3c0, 0xb7e2, 0xacbc, 0x44b5, 0x0, 0x1);
        gbc.writeMem(0xbbcd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa49c);
        EXPECT(gbc.pc(), 0xbbcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbcd), 0xcb);
        EXPECT(gbc.readMem(0xbbce), 0x65);
        // CB 65 0095
        gbc.setState(0xd7d, 0xcdcf, 0x6ea0, 0x7cc3, 0xba40, 0xfd10, 0x1, 0x0);
        gbc.writeMem(0xd7d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xcdcf);
        EXPECT(gbc.pc(), 0xd7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0096
        gbc.setState(0x1298, 0x8d41, 0xdc90, 0x2abb, 0xfec3, 0x4a2b, 0x0, 0x1);
        gbc.writeMem(0x1298, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8d41);
        EXPECT(gbc.pc(), 0x129a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0097
        gbc.setState(0x6758, 0x268a, 0x2380, 0x2e84, 0x69c3, 0xce0b, 0x1, 0x1);
        gbc.writeMem(0x6758, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x268a);
        EXPECT(gbc.pc(), 0x675a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0098
        gbc.setState(0x1b54, 0xcfe2, 0x800, 0x5f81, 0xd0a4, 0x3740, 0x0, 0x1);
        gbc.writeMem(0x1b54, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcfe2);
        EXPECT(gbc.pc(), 0x1b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0099
        gbc.setState(0x6a51, 0x1836, 0x390, 0xabd, 0x43ab, 0xe965, 0x0, 0x0);
        gbc.writeMem(0x6a51, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x6a53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 009A
        gbc.setState(0xa864, 0xee9c, 0xe150, 0x1143, 0x2f9f, 0x2cad, 0x0, 0x1);
        gbc.writeMem(0xa864, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xee9c);
        EXPECT(gbc.pc(), 0xa866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa864), 0xcb);
        EXPECT(gbc.readMem(0xa865), 0x65);
        // CB 65 009B
        gbc.setState(0x4af2, 0x5124, 0xfb90, 0x7c3c, 0xff7d, 0x5d0c, 0x1, 0x1);
        gbc.writeMem(0x4af2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5124);
        EXPECT(gbc.pc(), 0x4af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 009C
        gbc.setState(0x45d7, 0xc0ea, 0x2dd0, 0x2735, 0x35ac, 0x5d4b, 0x0, 0x1);
        gbc.writeMem(0x45d7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc0ea);
        EXPECT(gbc.pc(), 0x45d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 009D
        gbc.setState(0x6c42, 0x436e, 0xb950, 0xa18e, 0xa03, 0xe8f8, 0x1, 0x1);
        gbc.writeMem(0x6c42, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x436e);
        EXPECT(gbc.pc(), 0x6c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 009E
        gbc.setState(0xbd70, 0x6803, 0xb680, 0x1dd9, 0xe5b6, 0x750b, 0x1, 0x1);
        gbc.writeMem(0xbd70, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6803);
        EXPECT(gbc.pc(), 0xbd72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd70), 0xcb);
        EXPECT(gbc.readMem(0xbd71), 0x65);
        // CB 65 009F
        gbc.setState(0x1f6b, 0xe264, 0x4d70, 0x642d, 0xd353, 0x2ce, 0x1, 0x0);
        gbc.writeMem(0x1f6b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe264);
        EXPECT(gbc.pc(), 0x1f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00A0
        gbc.setState(0x188c, 0x2b38, 0x7d00, 0xcc40, 0xc84, 0xf924, 0x1, 0x0);
        gbc.writeMem(0x188c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2b38);
        EXPECT(gbc.pc(), 0x188e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00A2
        gbc.setState(0x6506, 0x7560, 0xc640, 0x3c7c, 0x5a05, 0x7c6e, 0x0, 0x1);
        gbc.writeMem(0x6506, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7560);
        EXPECT(gbc.pc(), 0x6508);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00A3
        gbc.setState(0x98a4, 0x48ae, 0xe040, 0x40df, 0x61, 0x4429, 0x1, 0x1);
        gbc.writeMem(0x98a4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x48ae);
        EXPECT(gbc.pc(), 0x98a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a4), 0xcb);
        EXPECT(gbc.readMem(0x98a5), 0x65);
        // CB 65 00A4
        gbc.setState(0xb1ee, 0x7e06, 0x1a40, 0x6b07, 0x1419, 0xac3b, 0x1, 0x1);
        gbc.writeMem(0xb1ee, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7e06);
        EXPECT(gbc.pc(), 0xb1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ee), 0xcb);
        EXPECT(gbc.readMem(0xb1ef), 0x65);
        // CB 65 00A5
        gbc.setState(0xbbec, 0x3b0a, 0x75b0, 0x7f3b, 0xaa9d, 0x845d, 0x0, 0x0);
        gbc.writeMem(0xbbec, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3b0a);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbec), 0xcb);
        EXPECT(gbc.readMem(0xbbed), 0x65);
        // CB 65 00A6
        gbc.setState(0xd822, 0xfe15, 0xf340, 0x6f19, 0x459b, 0x9f40, 0x0, 0x0);
        gbc.writeMem(0xd822, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfe15);
        EXPECT(gbc.pc(), 0xd824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd822), 0xcb);
        EXPECT(gbc.readMem(0xd823), 0x65);
        // CB 65 00A7
        gbc.setState(0x4ed3, 0xcb3f, 0x6cc0, 0x72a4, 0xac46, 0x8777, 0x0, 0x0);
        gbc.writeMem(0x4ed3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcb3f);
        EXPECT(gbc.pc(), 0x4ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00A8
        gbc.setState(0xa018, 0xd7d3, 0x5e00, 0x156b, 0x94b0, 0x6fa4, 0x1, 0x1);
        gbc.writeMem(0xa018, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd7d3);
        EXPECT(gbc.pc(), 0xa01a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa018), 0xcb);
        EXPECT(gbc.readMem(0xa019), 0x65);
        // CB 65 00A9
        gbc.setState(0x44d7, 0x92e3, 0x330, 0x1d61, 0xc119, 0xb020, 0x0, 0x0);
        gbc.writeMem(0x44d7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x92e3);
        EXPECT(gbc.pc(), 0x44d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00AA
        gbc.setState(0x39b, 0xdfe3, 0xa90, 0x8d39, 0xa906, 0xf679, 0x0, 0x0);
        gbc.writeMem(0x39b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdfe3);
        EXPECT(gbc.pc(), 0x39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00AC
        gbc.setState(0x6502, 0x6fa3, 0x8260, 0xa85e, 0x8d79, 0x68f9, 0x1, 0x1);
        gbc.writeMem(0x6502, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6fa3);
        EXPECT(gbc.pc(), 0x6504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00AD
        gbc.setState(0x4877, 0xf70a, 0xd860, 0xfe4a, 0x1741, 0xfa22, 0x0, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf70a);
        EXPECT(gbc.pc(), 0x4879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00AE
        gbc.setState(0xeba4, 0xe545, 0xeb30, 0x8b30, 0xd1c3, 0x237c, 0x0, 0x1);
        gbc.writeMem(0xeba4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe545);
        EXPECT(gbc.pc(), 0xeba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba4), 0xcb);
        EXPECT(gbc.readMem(0xeba5), 0x65);
        // CB 65 00AF
        gbc.setState(0xce20, 0x5c02, 0x5de0, 0x6a1b, 0x98ef, 0x9458, 0x0, 0x1);
        gbc.writeMem(0xce20, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5c02);
        EXPECT(gbc.pc(), 0xce22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce20), 0xcb);
        EXPECT(gbc.readMem(0xce21), 0x65);
        // CB 65 00B0
        gbc.setState(0x39b5, 0xd933, 0xf180, 0x3742, 0xc34, 0x86ee, 0x1, 0x0);
        gbc.writeMem(0x39b5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd933);
        EXPECT(gbc.pc(), 0x39b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00B1
        gbc.setState(0x6775, 0x178e, 0xf150, 0xaf12, 0xdbd0, 0xd561, 0x1, 0x0);
        gbc.writeMem(0x6775, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x178e);
        EXPECT(gbc.pc(), 0x6777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00B2
        gbc.setState(0x4792, 0xaf49, 0x5ac0, 0x317f, 0xc74d, 0xd07a, 0x0, 0x0);
        gbc.writeMem(0x4792, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xaf49);
        EXPECT(gbc.pc(), 0x4794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00B3
        gbc.setState(0x9bb6, 0xfa43, 0xc790, 0xed0a, 0xb267, 0x5507, 0x0, 0x1);
        gbc.writeMem(0x9bb6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfa43);
        EXPECT(gbc.pc(), 0x9bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb6), 0xcb);
        EXPECT(gbc.readMem(0x9bb7), 0x65);
        // CB 65 00B4
        gbc.setState(0xb90c, 0xf7d1, 0xea80, 0xe323, 0x9270, 0xe697, 0x0, 0x0);
        gbc.writeMem(0xb90c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf7d1);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90c), 0xcb);
        EXPECT(gbc.readMem(0xb90d), 0x65);
        // CB 65 00B5
        gbc.setState(0xe6fc, 0xe525, 0xd4b0, 0x57e7, 0xf9aa, 0xce3f, 0x1, 0x1);
        gbc.writeMem(0xe6fc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe525);
        EXPECT(gbc.pc(), 0xe6fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6fc), 0xcb);
        EXPECT(gbc.readMem(0xe6fd), 0x65);
        // CB 65 00B7
        gbc.setState(0xab59, 0x7539, 0x98e0, 0x88f1, 0xa89, 0x2f80, 0x0, 0x0);
        gbc.writeMem(0xab59, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7539);
        EXPECT(gbc.pc(), 0xab5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab59), 0xcb);
        EXPECT(gbc.readMem(0xab5a), 0x65);
        // CB 65 00B8
        gbc.setState(0x529, 0xc471, 0x5990, 0xd77f, 0x8ee2, 0x34c2, 0x0, 0x0);
        gbc.writeMem(0x529, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc471);
        EXPECT(gbc.pc(), 0x52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00B9
        gbc.setState(0xacb1, 0xf306, 0x6a80, 0x9088, 0x9513, 0x17f9, 0x0, 0x1);
        gbc.writeMem(0xacb1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf306);
        EXPECT(gbc.pc(), 0xacb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacb1), 0xcb);
        EXPECT(gbc.readMem(0xacb2), 0x65);
        // CB 65 00BA
        gbc.setState(0xbcf8, 0xc668, 0x26a0, 0x6c95, 0xc10c, 0x8e7b, 0x1, 0x0);
        gbc.writeMem(0xbcf8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc668);
        EXPECT(gbc.pc(), 0xbcfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf8), 0xcb);
        EXPECT(gbc.readMem(0xbcf9), 0x65);
        // CB 65 00BB
        gbc.setState(0x7843, 0xba77, 0xd380, 0x8cb5, 0x67e9, 0xe991, 0x1, 0x0);
        gbc.writeMem(0x7843, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xba77);
        EXPECT(gbc.pc(), 0x7845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00BC
        gbc.setState(0xd3af, 0x9627, 0xc830, 0x5ff9, 0x5abe, 0x9838, 0x0, 0x0);
        gbc.writeMem(0xd3af, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9627);
        EXPECT(gbc.pc(), 0xd3b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3af), 0xcb);
        EXPECT(gbc.readMem(0xd3b0), 0x65);
        // CB 65 00BD
        gbc.setState(0xe628, 0x1814, 0x7e20, 0x7949, 0x706c, 0x61dd, 0x0, 0x0);
        gbc.writeMem(0xe628, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1814);
        EXPECT(gbc.pc(), 0xe62a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe628), 0xcb);
        EXPECT(gbc.readMem(0xe629), 0x65);
        // CB 65 00BE
        gbc.setState(0xb5ab, 0x1a3c, 0xf8d0, 0x3f8c, 0x84a1, 0xf2f1, 0x1, 0x0);
        gbc.writeMem(0xb5ab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1a3c);
        EXPECT(gbc.pc(), 0xb5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ab), 0xcb);
        EXPECT(gbc.readMem(0xb5ac), 0x65);
        // CB 65 00BF
        gbc.setState(0xdf02, 0x7f18, 0x2d50, 0x9d87, 0x5171, 0x3cbd, 0x0, 0x0);
        gbc.writeMem(0xdf02, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7f18);
        EXPECT(gbc.pc(), 0xdf04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf02), 0xcb);
        EXPECT(gbc.readMem(0xdf03), 0x65);
        // CB 65 00C0
        gbc.setState(0x797e, 0x1af7, 0xcc10, 0x2b0b, 0xbfef, 0xecba, 0x1, 0x1);
        gbc.writeMem(0x797e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1af7);
        EXPECT(gbc.pc(), 0x7980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00C2
        gbc.setState(0x97f4, 0x3507, 0xbcd0, 0x788, 0xd444, 0x196b, 0x1, 0x0);
        gbc.writeMem(0x97f4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3507);
        EXPECT(gbc.pc(), 0x97f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f4), 0xcb);
        EXPECT(gbc.readMem(0x97f5), 0x65);
        // CB 65 00C3
        gbc.setState(0xa962, 0x93de, 0xba10, 0x792a, 0x57d9, 0x2950, 0x1, 0x1);
        gbc.writeMem(0xa962, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x93de);
        EXPECT(gbc.pc(), 0xa964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa962), 0xcb);
        EXPECT(gbc.readMem(0xa963), 0x65);
        // CB 65 00C4
        gbc.setState(0xa1f8, 0x2480, 0x99d0, 0x81d2, 0xf353, 0xaf5d, 0x0, 0x0);
        gbc.writeMem(0xa1f8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2480);
        EXPECT(gbc.pc(), 0xa1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f8), 0xcb);
        EXPECT(gbc.readMem(0xa1f9), 0x65);
        // CB 65 00C5
        gbc.setState(0x8a25, 0x3181, 0xb660, 0xa8fc, 0x618f, 0x3e50, 0x1, 0x1);
        gbc.writeMem(0x8a25, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3181);
        EXPECT(gbc.pc(), 0x8a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a25), 0xcb);
        EXPECT(gbc.readMem(0x8a26), 0x65);
        // CB 65 00C6
        gbc.setState(0xa09c, 0xa182, 0x59f0, 0x6008, 0xf393, 0x6262, 0x1, 0x0);
        gbc.writeMem(0xa09c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09c), 0xcb);
        EXPECT(gbc.readMem(0xa09d), 0x65);
        // CB 65 00C7
        gbc.setState(0x4f2d, 0xd367, 0x89f0, 0x47c9, 0x8ebc, 0xd677, 0x0, 0x0);
        gbc.writeMem(0x4f2d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd367);
        EXPECT(gbc.pc(), 0x4f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00C8
        gbc.setState(0xca5, 0x4e51, 0x55b0, 0x57a9, 0xf274, 0x16be, 0x1, 0x1);
        gbc.writeMem(0xca5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4e51);
        EXPECT(gbc.pc(), 0xca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00C9
        gbc.setState(0x69d2, 0x6009, 0x8440, 0x1013, 0x566, 0xf707, 0x1, 0x1);
        gbc.writeMem(0x69d2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6009);
        EXPECT(gbc.pc(), 0x69d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00CA
        gbc.setState(0xcbad, 0xc848, 0x58f0, 0x1120, 0xc1b6, 0xe03, 0x0, 0x1);
        gbc.writeMem(0xcbad, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc848);
        EXPECT(gbc.pc(), 0xcbaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbad), 0xcb);
        EXPECT(gbc.readMem(0xcbae), 0x65);
        // CB 65 00CB
        gbc.setState(0x93f1, 0x4268, 0xefc0, 0xd509, 0xbcd5, 0x4b1f, 0x0, 0x1);
        gbc.writeMem(0x93f1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4268);
        EXPECT(gbc.pc(), 0x93f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f1), 0xcb);
        EXPECT(gbc.readMem(0x93f2), 0x65);
        // CB 65 00CC
        gbc.setState(0xbeb, 0xb467, 0x25d0, 0xb97e, 0x8639, 0xc76c, 0x1, 0x1);
        gbc.writeMem(0xbeb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0xbed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00CD
        gbc.setState(0xa2d3, 0x6f5b, 0xbd10, 0xbcc8, 0x6258, 0x39d8, 0x0, 0x1);
        gbc.writeMem(0xa2d3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6f5b);
        EXPECT(gbc.pc(), 0xa2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d3), 0xcb);
        EXPECT(gbc.readMem(0xa2d4), 0x65);
        // CB 65 00CF
        gbc.setState(0x4d7f, 0x8d2b, 0x7460, 0x6ee4, 0x54a1, 0x209e, 0x0, 0x1);
        gbc.writeMem(0x4d7f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8d2b);
        EXPECT(gbc.pc(), 0x4d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00D0
        gbc.setState(0x5dd6, 0x71f2, 0xbdb0, 0xbb5b, 0xe2d2, 0x783d, 0x0, 0x1);
        gbc.writeMem(0x5dd6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x71f2);
        EXPECT(gbc.pc(), 0x5dd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00D1
        gbc.setState(0xd1c9, 0x80b, 0x64b0, 0x6159, 0xc02, 0xe216, 0x1, 0x0);
        gbc.writeMem(0xd1c9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x80b);
        EXPECT(gbc.pc(), 0xd1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1c9), 0xcb);
        EXPECT(gbc.readMem(0xd1ca), 0x65);
        // CB 65 00D2
        gbc.setState(0x5e29, 0xa050, 0x5ae0, 0xf4af, 0x5324, 0x689c, 0x1, 0x0);
        gbc.writeMem(0x5e29, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa050);
        EXPECT(gbc.pc(), 0x5e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00D3
        gbc.setState(0x45fe, 0x5e03, 0xc40, 0x8216, 0xe01a, 0x2eb, 0x0, 0x1);
        gbc.writeMem(0x45fe, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5e03);
        EXPECT(gbc.pc(), 0x4600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00D4
        gbc.setState(0x5b1a, 0x8846, 0x4e70, 0x1371, 0x97, 0xf325, 0x1, 0x1);
        gbc.writeMem(0x5b1a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8846);
        EXPECT(gbc.pc(), 0x5b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00D5
        gbc.setState(0x9b3b, 0xdcac, 0xf0b0, 0x2658, 0xbba7, 0x4ed4, 0x0, 0x0);
        gbc.writeMem(0x9b3b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdcac);
        EXPECT(gbc.pc(), 0x9b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b3b), 0xcb);
        EXPECT(gbc.readMem(0x9b3c), 0x65);
        // CB 65 00D6
        gbc.setState(0x6e11, 0x814c, 0x860, 0x81d5, 0x849, 0x15a, 0x1, 0x1);
        gbc.writeMem(0x6e11, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x814c);
        EXPECT(gbc.pc(), 0x6e13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00D7
        gbc.setState(0x8c68, 0x2ae6, 0x3a60, 0xf87f, 0xb025, 0x825b, 0x1, 0x0);
        gbc.writeMem(0x8c68, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2ae6);
        EXPECT(gbc.pc(), 0x8c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c68), 0xcb);
        EXPECT(gbc.readMem(0x8c69), 0x65);
        // CB 65 00D8
        gbc.setState(0x35f7, 0xe85d, 0x8f90, 0xb3fb, 0xf5e4, 0xb558, 0x0, 0x0);
        gbc.writeMem(0x35f7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe85d);
        EXPECT(gbc.pc(), 0x35f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00D9
        gbc.setState(0xd721, 0x3d5b, 0xea30, 0xb136, 0xf973, 0xd898, 0x1, 0x1);
        gbc.writeMem(0xd721, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3d5b);
        EXPECT(gbc.pc(), 0xd723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd721), 0xcb);
        EXPECT(gbc.readMem(0xd722), 0x65);
        // CB 65 00DA
        gbc.setState(0xc297, 0x3cf7, 0x79c0, 0x1b53, 0x54e8, 0x3f82, 0x0, 0x0);
        gbc.writeMem(0xc297, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3cf7);
        EXPECT(gbc.pc(), 0xc299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc297), 0xcb);
        EXPECT(gbc.readMem(0xc298), 0x65);
        // CB 65 00DB
        gbc.setState(0x6f1a, 0x3fe3, 0x8790, 0x255d, 0x71b0, 0xeeba, 0x1, 0x0);
        gbc.writeMem(0x6f1a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3fe3);
        EXPECT(gbc.pc(), 0x6f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00DD
        gbc.setState(0x527e, 0x5096, 0x8880, 0xb672, 0x489c, 0x537e, 0x1, 0x1);
        gbc.writeMem(0x527e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5096);
        EXPECT(gbc.pc(), 0x5280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00DE
        gbc.setState(0x7a53, 0x6c72, 0xd800, 0x3fc7, 0xbb50, 0xc48d, 0x1, 0x1);
        gbc.writeMem(0x7a53, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6c72);
        EXPECT(gbc.pc(), 0x7a55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00DF
        gbc.setState(0x58eb, 0x3c11, 0xa120, 0x2f56, 0xfc2a, 0x1b8f, 0x0, 0x1);
        gbc.writeMem(0x58eb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3c11);
        EXPECT(gbc.pc(), 0x58ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00E0
        gbc.setState(0x1647, 0x6db2, 0x30, 0x560b, 0xdbf6, 0x7d8a, 0x0, 0x0);
        gbc.writeMem(0x1647, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6db2);
        EXPECT(gbc.pc(), 0x1649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00E1
        gbc.setState(0x63d2, 0xadff, 0x6330, 0x98ea, 0x4337, 0x53a8, 0x1, 0x1);
        gbc.writeMem(0x63d2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xadff);
        EXPECT(gbc.pc(), 0x63d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00E2
        gbc.setState(0xd75e, 0x5468, 0x31f0, 0x75fa, 0xe9cc, 0x36b0, 0x1, 0x1);
        gbc.writeMem(0xd75e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5468);
        EXPECT(gbc.pc(), 0xd760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75e), 0xcb);
        EXPECT(gbc.readMem(0xd75f), 0x65);
        // CB 65 00E3
        gbc.setState(0xeba, 0x9e85, 0x4460, 0xf930, 0xad68, 0xb127, 0x0, 0x1);
        gbc.writeMem(0xeba, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9e85);
        EXPECT(gbc.pc(), 0xebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00E4
        gbc.setState(0xdb56, 0x5349, 0xa6f0, 0x7b1c, 0x371d, 0x980c, 0x0, 0x0);
        gbc.writeMem(0xdb56, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5349);
        EXPECT(gbc.pc(), 0xdb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb56), 0xcb);
        EXPECT(gbc.readMem(0xdb57), 0x65);
        // CB 65 00E5
        gbc.setState(0x255f, 0xe3e, 0xbf80, 0xe68e, 0xbcde, 0xaae1, 0x0, 0x0);
        gbc.writeMem(0x255f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe3e);
        EXPECT(gbc.pc(), 0x2561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00E6
        gbc.setState(0x2ac3, 0xa3b0, 0x25b0, 0x494f, 0x9f47, 0xdcd8, 0x0, 0x0);
        gbc.writeMem(0x2ac3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa3b0);
        EXPECT(gbc.pc(), 0x2ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00E7
        gbc.setState(0xdb03, 0x3e25, 0x1de0, 0xa4e7, 0x67dc, 0x5c2f, 0x0, 0x0);
        gbc.writeMem(0xdb03, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3e25);
        EXPECT(gbc.pc(), 0xdb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb03), 0xcb);
        EXPECT(gbc.readMem(0xdb04), 0x65);
        // CB 65 00E8
        gbc.setState(0x8612, 0x1190, 0x4f10, 0xd448, 0xd4c3, 0x1fe9, 0x1, 0x0);
        gbc.writeMem(0x8612, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1190);
        EXPECT(gbc.pc(), 0x8614);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8612), 0xcb);
        EXPECT(gbc.readMem(0x8613), 0x65);
        // CB 65 00E9
        gbc.setState(0x63c0, 0x274f, 0x140, 0x7af6, 0x76df, 0xd18, 0x1, 0x0);
        gbc.writeMem(0x63c0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x274f);
        EXPECT(gbc.pc(), 0x63c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 00EA
        gbc.setState(0x9272, 0x1ab4, 0x24e0, 0x64c8, 0xdfe4, 0x2959, 0x1, 0x1);
        gbc.writeMem(0x9272, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1ab4);
        EXPECT(gbc.pc(), 0x9274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9272), 0xcb);
        EXPECT(gbc.readMem(0x9273), 0x65);
        // CB 65 00EB
        gbc.setState(0xaaf9, 0x5010, 0x7010, 0x7589, 0x3f1, 0x30be, 0x0, 0x0);
        gbc.writeMem(0xaaf9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5010);
        EXPECT(gbc.pc(), 0xaafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf9), 0xcb);
        EXPECT(gbc.readMem(0xaafa), 0x65);
        // CB 65 00EC
        gbc.setState(0xd1c9, 0xfed8, 0xdc60, 0x72bc, 0x6b30, 0x6797, 0x1, 0x0);
        gbc.writeMem(0xd1c9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfed8);
        EXPECT(gbc.pc(), 0xd1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c9), 0xcb);
        EXPECT(gbc.readMem(0xd1ca), 0x65);
        // CB 65 00ED
        gbc.setState(0x55da, 0x36f5, 0x6fd0, 0xb520, 0xeec3, 0x3621, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x36f5);
        EXPECT(gbc.pc(), 0x55dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00EE
        gbc.setState(0x2d5a, 0xc89b, 0x3ef0, 0x5035, 0xad3a, 0xb353, 0x0, 0x1);
        gbc.writeMem(0x2d5a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc89b);
        EXPECT(gbc.pc(), 0x2d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00EF
        gbc.setState(0x41ce, 0x3f6e, 0xd270, 0x710f, 0xef37, 0x89d4, 0x0, 0x1);
        gbc.writeMem(0x41ce, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3f6e);
        EXPECT(gbc.pc(), 0x41d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00F0
        gbc.setState(0xcc5c, 0x85fb, 0x85a0, 0x55a1, 0x885a, 0x5d0, 0x0, 0x0);
        gbc.writeMem(0xcc5c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x85fb);
        EXPECT(gbc.pc(), 0xcc5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5c), 0xcb);
        EXPECT(gbc.readMem(0xcc5d), 0x65);
        // CB 65 00F1
        gbc.setState(0x9324, 0xe051, 0xc720, 0x6815, 0x49b6, 0xab36, 0x1, 0x0);
        gbc.writeMem(0x9324, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe051);
        EXPECT(gbc.pc(), 0x9326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9324), 0xcb);
        EXPECT(gbc.readMem(0x9325), 0x65);
        // CB 65 00F2
        gbc.setState(0xe118, 0x6f7c, 0xeac0, 0x7091, 0xb6d3, 0xc4b9, 0x0, 0x1);
        gbc.writeMem(0xe118, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6f7c);
        EXPECT(gbc.pc(), 0xe11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe118), 0xcb);
        EXPECT(gbc.readMem(0xe119), 0x65);
        // CB 65 00F3
        gbc.setState(0x31be, 0xcd94, 0x4770, 0x5b05, 0xd451, 0x4c24, 0x0, 0x1);
        gbc.writeMem(0x31be, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcd94);
        EXPECT(gbc.pc(), 0x31c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00F4
        gbc.setState(0xce1a, 0xedf1, 0x9720, 0xd5b9, 0xb215, 0xa6b2, 0x1, 0x0);
        gbc.writeMem(0xce1a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xedf1);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1a), 0xcb);
        EXPECT(gbc.readMem(0xce1b), 0x65);
        // CB 65 00F5
        gbc.setState(0xd25b, 0xa344, 0x4270, 0xd398, 0x6cae, 0xf7a4, 0x0, 0x1);
        gbc.writeMem(0xd25b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa344);
        EXPECT(gbc.pc(), 0xd25d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd25b), 0xcb);
        EXPECT(gbc.readMem(0xd25c), 0x65);
        // CB 65 00F6
        gbc.setState(0xef1c, 0x4983, 0xfc40, 0x368c, 0x7893, 0x8a0e, 0x1, 0x1);
        gbc.writeMem(0xef1c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4983);
        EXPECT(gbc.pc(), 0xef1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1c), 0xcb);
        EXPECT(gbc.readMem(0xef1d), 0x65);
        // CB 65 00F7
        gbc.setState(0xae15, 0x6927, 0x340, 0x4ade, 0x1957, 0xa96d, 0x1, 0x0);
        gbc.writeMem(0xae15, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6927);
        EXPECT(gbc.pc(), 0xae17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae15), 0xcb);
        EXPECT(gbc.readMem(0xae16), 0x65);
        // CB 65 00F8
        gbc.setState(0x9f07, 0xb5d, 0x6ed0, 0x2e60, 0x21b2, 0xcb5b, 0x0, 0x1);
        gbc.writeMem(0x9f07, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb5d);
        EXPECT(gbc.pc(), 0x9f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f07), 0xcb);
        EXPECT(gbc.readMem(0x9f08), 0x65);
        // CB 65 00F9
        gbc.setState(0x64f, 0x5ffc, 0x70b0, 0xaf1a, 0x2d3c, 0xda6d, 0x0, 0x0);
        gbc.writeMem(0x64f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5ffc);
        EXPECT(gbc.pc(), 0x651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00FA
        gbc.setState(0x6cf4, 0xdae8, 0x35f0, 0xf891, 0x5fca, 0x7d90, 0x0, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdae8);
        EXPECT(gbc.pc(), 0x6cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00FB
        gbc.setState(0x3008, 0x9876, 0x4270, 0x4961, 0xb048, 0xddf1, 0x1, 0x0);
        gbc.writeMem(0x3008, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9876);
        EXPECT(gbc.pc(), 0x300a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00FC
        gbc.setState(0xc42c, 0x5d26, 0x9300, 0x8223, 0x7789, 0x381b, 0x1, 0x0);
        gbc.writeMem(0xc42c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5d26);
        EXPECT(gbc.pc(), 0xc42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42c), 0xcb);
        EXPECT(gbc.readMem(0xc42d), 0x65);
        // CB 65 00FD
        gbc.setState(0x3247, 0x185, 0xd7b0, 0xa980, 0x59ad, 0xac39, 0x0, 0x1);
        gbc.writeMem(0x3247, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x185);
        EXPECT(gbc.pc(), 0x3249);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 00FF
        gbc.setState(0x4db8, 0x6df3, 0xc7b0, 0x6236, 0xeff1, 0x857b, 0x1, 0x1);
        gbc.writeMem(0x4db8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6df3);
        EXPECT(gbc.pc(), 0x4dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0100
        gbc.setState(0x2cab, 0x1fe8, 0xa000, 0x1c03, 0x838c, 0xb992, 0x0, 0x1);
        gbc.writeMem(0x2cab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1fe8);
        EXPECT(gbc.pc(), 0x2cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0101
        gbc.setState(0x4fe5, 0x5b09, 0x9670, 0xb106, 0x9b00, 0x7f73, 0x1, 0x0);
        gbc.writeMem(0x4fe5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5b09);
        EXPECT(gbc.pc(), 0x4fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0102
        gbc.setState(0x94aa, 0x304a, 0x81b0, 0xaa15, 0xf970, 0x7004, 0x0, 0x1);
        gbc.writeMem(0x94aa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x304a);
        EXPECT(gbc.pc(), 0x94ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94aa), 0xcb);
        EXPECT(gbc.readMem(0x94ab), 0x65);
        // CB 65 0103
        gbc.setState(0x103f, 0xc06c, 0x8940, 0x1d7, 0x9e6f, 0xe879, 0x1, 0x0);
        gbc.writeMem(0x103f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc06c);
        EXPECT(gbc.pc(), 0x1041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0104
        gbc.setState(0x5744, 0xa1a6, 0xc160, 0x9ebe, 0x677b, 0xf573, 0x1, 0x0);
        gbc.writeMem(0x5744, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa1a6);
        EXPECT(gbc.pc(), 0x5746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0105
        gbc.setState(0xef25, 0xa5cd, 0x5010, 0xca30, 0x5ca, 0x7b14, 0x1, 0x1);
        gbc.writeMem(0xef25, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa5cd);
        EXPECT(gbc.pc(), 0xef27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef25), 0xcb);
        EXPECT(gbc.readMem(0xef26), 0x65);
        // CB 65 0106
        gbc.setState(0x5736, 0x4328, 0x15e0, 0x1fe2, 0xfd94, 0x4eac, 0x1, 0x1);
        gbc.writeMem(0x5736, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x4328);
        EXPECT(gbc.pc(), 0x5738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0107
        gbc.setState(0xc442, 0xf01b, 0xd00, 0xf97e, 0x985f, 0x7deb, 0x0, 0x1);
        gbc.writeMem(0xc442, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf01b);
        EXPECT(gbc.pc(), 0xc444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc442), 0xcb);
        EXPECT(gbc.readMem(0xc443), 0x65);
        // CB 65 010A
        gbc.setState(0xb5f6, 0xdb41, 0x1c90, 0xe6dd, 0xfac0, 0xc4d9, 0x0, 0x1);
        gbc.writeMem(0xb5f6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdb41);
        EXPECT(gbc.pc(), 0xb5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f6), 0xcb);
        EXPECT(gbc.readMem(0xb5f7), 0x65);
        // CB 65 010B
        gbc.setState(0xb24, 0x5318, 0x6cb0, 0x1f2f, 0xde53, 0x4ac5, 0x0, 0x0);
        gbc.writeMem(0xb24, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5318);
        EXPECT(gbc.pc(), 0xb26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 010C
        gbc.setState(0xc469, 0x82cc, 0x2c20, 0xadaa, 0x83c2, 0x98b5, 0x1, 0x1);
        gbc.writeMem(0xc469, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x82cc);
        EXPECT(gbc.pc(), 0xc46b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc469), 0xcb);
        EXPECT(gbc.readMem(0xc46a), 0x65);
        // CB 65 010D
        gbc.setState(0xed42, 0x3c01, 0x230, 0x8bc9, 0xa815, 0xec5d, 0x0, 0x1);
        gbc.writeMem(0xed42, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3c01);
        EXPECT(gbc.pc(), 0xed44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed42), 0xcb);
        EXPECT(gbc.readMem(0xed43), 0x65);
        // CB 65 010E
        gbc.setState(0x6d7e, 0x37d7, 0x58a0, 0xe5a6, 0xaed6, 0x74b2, 0x1, 0x1);
        gbc.writeMem(0x6d7e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x37d7);
        EXPECT(gbc.pc(), 0x6d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 010F
        gbc.setState(0x2956, 0xa04f, 0xb30, 0x3285, 0x2913, 0x5035, 0x0, 0x0);
        gbc.writeMem(0x2956, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa04f);
        EXPECT(gbc.pc(), 0x2958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0110
        gbc.setState(0xc288, 0xaaf2, 0xe370, 0x8c45, 0x1496, 0xdcef, 0x0, 0x0);
        gbc.writeMem(0xc288, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xaaf2);
        EXPECT(gbc.pc(), 0xc28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc288), 0xcb);
        EXPECT(gbc.readMem(0xc289), 0x65);
        // CB 65 0111
        gbc.setState(0x374, 0xd6fb, 0x69a0, 0x6d06, 0x79ec, 0x8a9a, 0x1, 0x0);
        gbc.writeMem(0x374, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd6fb);
        EXPECT(gbc.pc(), 0x376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0112
        gbc.setState(0xccf1, 0xf5f3, 0x9140, 0xdb04, 0xd64c, 0x1a5b, 0x1, 0x1);
        gbc.writeMem(0xccf1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf5f3);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf1), 0xcb);
        EXPECT(gbc.readMem(0xccf2), 0x65);
        // CB 65 0114
        gbc.setState(0x8b99, 0x7564, 0xc1f0, 0xd4f0, 0xbed, 0xc616, 0x0, 0x1);
        gbc.writeMem(0x8b99, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x7564);
        EXPECT(gbc.pc(), 0x8b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b99), 0xcb);
        EXPECT(gbc.readMem(0x8b9a), 0x65);
        // CB 65 0115
        gbc.setState(0x7984, 0xfb20, 0x460, 0x2c8a, 0xddf4, 0x701e, 0x1, 0x1);
        gbc.writeMem(0x7984, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfb20);
        EXPECT(gbc.pc(), 0x7986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0116
        gbc.setState(0x578, 0x6710, 0x9ca0, 0x361, 0xb2f7, 0xe7d6, 0x0, 0x0);
        gbc.writeMem(0x578, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6710);
        EXPECT(gbc.pc(), 0x57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0117
        gbc.setState(0x56e5, 0x1d9, 0x880, 0xd245, 0xa6a6, 0x827c, 0x1, 0x0);
        gbc.writeMem(0x56e5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1d9);
        EXPECT(gbc.pc(), 0x56e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0118
        gbc.setState(0xb660, 0x84, 0xa130, 0xe539, 0x3967, 0x9cf9, 0x1, 0x0);
        gbc.writeMem(0xb660, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x84);
        EXPECT(gbc.pc(), 0xb662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb660), 0xcb);
        EXPECT(gbc.readMem(0xb661), 0x65);
        // CB 65 011A
        gbc.setState(0x373a, 0xc94f, 0xd200, 0xd678, 0x3182, 0xc3a6, 0x1, 0x1);
        gbc.writeMem(0x373a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc94f);
        EXPECT(gbc.pc(), 0x373c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 011B
        gbc.setState(0x72cb, 0x37c0, 0xc430, 0x923, 0xe18, 0x9aa, 0x0, 0x0);
        gbc.writeMem(0x72cb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x37c0);
        EXPECT(gbc.pc(), 0x72cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 011C
        gbc.setState(0x57d9, 0x71c2, 0x3320, 0x3c2d, 0xabfd, 0x466b, 0x0, 0x1);
        gbc.writeMem(0x57d9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x71c2);
        EXPECT(gbc.pc(), 0x57db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 011D
        gbc.setState(0xc5d2, 0x529e, 0xc1e0, 0x15d9, 0x5433, 0x6c82, 0x1, 0x0);
        gbc.writeMem(0xc5d2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x529e);
        EXPECT(gbc.pc(), 0xc5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d2), 0xcb);
        EXPECT(gbc.readMem(0xc5d3), 0x65);
        // CB 65 011E
        gbc.setState(0xc085, 0xcd0, 0x36d0, 0x2f7e, 0xb43d, 0xcca1, 0x1, 0x0);
        gbc.writeMem(0xc085, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xcd0);
        EXPECT(gbc.pc(), 0xc087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc085), 0xcb);
        EXPECT(gbc.readMem(0xc086), 0x65);
        // CB 65 011F
        gbc.setState(0xa521, 0x1e39, 0xd7d0, 0x1cf8, 0x3bd8, 0xe783, 0x1, 0x0);
        gbc.writeMem(0xa521, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1e39);
        EXPECT(gbc.pc(), 0xa523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa521), 0xcb);
        EXPECT(gbc.readMem(0xa522), 0x65);
        // CB 65 0120
        gbc.setState(0xdcc4, 0x6b0c, 0xe2d0, 0xc759, 0x30e6, 0xc543, 0x1, 0x1);
        gbc.writeMem(0xdcc4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6b0c);
        EXPECT(gbc.pc(), 0xdcc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc4), 0xcb);
        EXPECT(gbc.readMem(0xdcc5), 0x65);
        // CB 65 0121
        gbc.setState(0xa5bf, 0x42aa, 0x1520, 0xf774, 0x453, 0x5225, 0x0, 0x0);
        gbc.writeMem(0xa5bf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x42aa);
        EXPECT(gbc.pc(), 0xa5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bf), 0xcb);
        EXPECT(gbc.readMem(0xa5c0), 0x65);
        // CB 65 0122
        gbc.setState(0x24d, 0x17d4, 0xdc60, 0x960d, 0x9629, 0x7258, 0x1, 0x0);
        gbc.writeMem(0x24d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x17d4);
        EXPECT(gbc.pc(), 0x24f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0123
        gbc.setState(0x7ab2, 0xa556, 0xf820, 0x1f7c, 0x790, 0x35d7, 0x0, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa556);
        EXPECT(gbc.pc(), 0x7ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0124
        gbc.setState(0xb04b, 0x4843, 0x4d00, 0x4814, 0x7855, 0x3651, 0x0, 0x0);
        gbc.writeMem(0xb04b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4843);
        EXPECT(gbc.pc(), 0xb04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04b), 0xcb);
        EXPECT(gbc.readMem(0xb04c), 0x65);
        // CB 65 0125
        gbc.setState(0xb2bb, 0x3a91, 0x3950, 0x760d, 0x84bc, 0x7c00, 0x0, 0x1);
        gbc.writeMem(0xb2bb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3a91);
        EXPECT(gbc.pc(), 0xb2bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2bb), 0xcb);
        EXPECT(gbc.readMem(0xb2bc), 0x65);
        // CB 65 0126
        gbc.setState(0xd1a8, 0xda4b, 0xd270, 0x319d, 0x6fca, 0x9bc8, 0x1, 0x0);
        gbc.writeMem(0xd1a8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xda4b);
        EXPECT(gbc.pc(), 0xd1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1a8), 0xcb);
        EXPECT(gbc.readMem(0xd1a9), 0x65);
        // CB 65 0127
        gbc.setState(0x6776, 0x9bcf, 0x43f0, 0x830f, 0xa125, 0x6224, 0x0, 0x0);
        gbc.writeMem(0x6776, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9bcf);
        EXPECT(gbc.pc(), 0x6778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0128
        gbc.setState(0xc5fe, 0xc80f, 0xe900, 0xba9d, 0xc1fe, 0xeffb, 0x0, 0x0);
        gbc.writeMem(0xc5fe, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc80f);
        EXPECT(gbc.pc(), 0xc600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5fe), 0xcb);
        EXPECT(gbc.readMem(0xc5ff), 0x65);
        // CB 65 0129
        gbc.setState(0x4d6f, 0x6433, 0x9750, 0x4d50, 0x171f, 0x8d88, 0x1, 0x1);
        gbc.writeMem(0x4d6f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6433);
        EXPECT(gbc.pc(), 0x4d71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 012A
        gbc.setState(0x4c06, 0x8e55, 0xe9a0, 0xb58f, 0x691d, 0x22c5, 0x1, 0x0);
        gbc.writeMem(0x4c06, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8e55);
        EXPECT(gbc.pc(), 0x4c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 012B
        gbc.setState(0x3b55, 0xe90c, 0xf250, 0x3245, 0xe2ff, 0x3d40, 0x0, 0x1);
        gbc.writeMem(0x3b55, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe90c);
        EXPECT(gbc.pc(), 0x3b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 012C
        gbc.setState(0xb269, 0xc1a1, 0x2550, 0xc5fe, 0xb1c6, 0x8cdc, 0x1, 0x0);
        gbc.writeMem(0xb269, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc1a1);
        EXPECT(gbc.pc(), 0xb26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb269), 0xcb);
        EXPECT(gbc.readMem(0xb26a), 0x65);
        // CB 65 012D
        gbc.setState(0x52d9, 0x3076, 0x7530, 0xc7ce, 0x6374, 0xe608, 0x1, 0x0);
        gbc.writeMem(0x52d9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3076);
        EXPECT(gbc.pc(), 0x52db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 012E
        gbc.setState(0x7d56, 0x971a, 0x4120, 0x88d4, 0xcbf7, 0x923a, 0x0, 0x1);
        gbc.writeMem(0x7d56, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x971a);
        EXPECT(gbc.pc(), 0x7d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 012F
        gbc.setState(0x5f03, 0xd302, 0xd5c0, 0x364, 0x21c2, 0x63f4, 0x0, 0x1);
        gbc.writeMem(0x5f03, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd302);
        EXPECT(gbc.pc(), 0x5f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0130
        gbc.setState(0x1457, 0x6af1, 0xa0, 0xad08, 0xe7a4, 0x395b, 0x0, 0x0);
        gbc.writeMem(0x1457, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6af1);
        EXPECT(gbc.pc(), 0x1459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0132
        gbc.setState(0x3709, 0x35b2, 0xf580, 0xd2f9, 0xacc6, 0xcc9, 0x0, 0x1);
        gbc.writeMem(0x3709, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x35b2);
        EXPECT(gbc.pc(), 0x370b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0133
        gbc.setState(0x58f6, 0xbb74, 0xb340, 0xf177, 0x8075, 0x7d48, 0x1, 0x1);
        gbc.writeMem(0x58f6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbb74);
        EXPECT(gbc.pc(), 0x58f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0134
        gbc.setState(0xd603, 0xd197, 0x3040, 0xdb30, 0xef51, 0xf9b8, 0x1, 0x0);
        gbc.writeMem(0xd603, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd197);
        EXPECT(gbc.pc(), 0xd605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd603), 0xcb);
        EXPECT(gbc.readMem(0xd604), 0x65);
        // CB 65 0135
        gbc.setState(0xbfb7, 0x2044, 0x4c0, 0x169e, 0x3bb5, 0x8f24, 0x0, 0x1);
        gbc.writeMem(0xbfb7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2044);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb7), 0xcb);
        EXPECT(gbc.readMem(0xbfb8), 0x65);
        // CB 65 0136
        gbc.setState(0x139e, 0x76aa, 0x4a10, 0x4e9b, 0x8956, 0x20ac, 0x0, 0x1);
        gbc.writeMem(0x139e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x76aa);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0137
        gbc.setState(0x32a8, 0x803f, 0xccc0, 0x8cbb, 0x93af, 0x295f, 0x1, 0x1);
        gbc.writeMem(0x32a8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x803f);
        EXPECT(gbc.pc(), 0x32aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0138
        gbc.setState(0xb783, 0x2726, 0xa050, 0x3572, 0x1580, 0x6064, 0x1, 0x0);
        gbc.writeMem(0xb783, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2726);
        EXPECT(gbc.pc(), 0xb785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb783), 0xcb);
        EXPECT(gbc.readMem(0xb784), 0x65);
        // CB 65 0139
        gbc.setState(0xa97d, 0x382e, 0xe1d0, 0x394d, 0x7671, 0xc791, 0x1, 0x1);
        gbc.writeMem(0xa97d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x382e);
        EXPECT(gbc.pc(), 0xa97f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97d), 0xcb);
        EXPECT(gbc.readMem(0xa97e), 0x65);
        // CB 65 013A
        gbc.setState(0xa342, 0xd060, 0x3ee0, 0x682e, 0x83d2, 0x1eaf, 0x0, 0x1);
        gbc.writeMem(0xa342, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd060);
        EXPECT(gbc.pc(), 0xa344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa342), 0xcb);
        EXPECT(gbc.readMem(0xa343), 0x65);
        // CB 65 013B
        gbc.setState(0xbcc2, 0xee81, 0xa580, 0x9a31, 0xc245, 0x5379, 0x1, 0x0);
        gbc.writeMem(0xbcc2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0xbcc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc2), 0xcb);
        EXPECT(gbc.readMem(0xbcc3), 0x65);
        // CB 65 013C
        gbc.setState(0xc97f, 0xcced, 0x8620, 0x13b, 0xd124, 0xbe02, 0x0, 0x0);
        gbc.writeMem(0xc97f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcced);
        EXPECT(gbc.pc(), 0xc981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97f), 0xcb);
        EXPECT(gbc.readMem(0xc980), 0x65);
        // CB 65 013D
        gbc.setState(0x82dd, 0x511f, 0x7fe0, 0x1610, 0x8cf1, 0x789b, 0x1, 0x1);
        gbc.writeMem(0x82dd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x511f);
        EXPECT(gbc.pc(), 0x82df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82dd), 0xcb);
        EXPECT(gbc.readMem(0x82de), 0x65);
        // CB 65 013E
        gbc.setState(0x7669, 0xd1cc, 0xfb00, 0xad1f, 0x2495, 0xb1fe, 0x1, 0x1);
        gbc.writeMem(0x7669, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd1cc);
        EXPECT(gbc.pc(), 0x766b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 013F
        gbc.setState(0x2563, 0x6c97, 0x4ed0, 0x3814, 0x248d, 0xf278, 0x0, 0x1);
        gbc.writeMem(0x2563, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6c97);
        EXPECT(gbc.pc(), 0x2565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0140
        gbc.setState(0xac7e, 0x61f6, 0x160, 0x5a9b, 0x5bc2, 0x3ae4, 0x1, 0x0);
        gbc.writeMem(0xac7e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x61f6);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7e), 0xcb);
        EXPECT(gbc.readMem(0xac7f), 0x65);
        // CB 65 0141
        gbc.setState(0xac2b, 0x62b4, 0x8510, 0xbf5d, 0xaee5, 0x77bc, 0x1, 0x1);
        gbc.writeMem(0xac2b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x62b4);
        EXPECT(gbc.pc(), 0xac2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac2b), 0xcb);
        EXPECT(gbc.readMem(0xac2c), 0x65);
        // CB 65 0142
        gbc.setState(0xc8c8, 0xedac, 0x2820, 0x8447, 0xe8eb, 0x2363, 0x1, 0x1);
        gbc.writeMem(0xc8c8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xedac);
        EXPECT(gbc.pc(), 0xc8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c8), 0xcb);
        EXPECT(gbc.readMem(0xc8c9), 0x65);
        // CB 65 0143
        gbc.setState(0xcd2c, 0xe770, 0xeeb0, 0x72f, 0xbf47, 0xfd21, 0x1, 0x1);
        gbc.writeMem(0xcd2c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe770);
        EXPECT(gbc.pc(), 0xcd2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd2c), 0xcb);
        EXPECT(gbc.readMem(0xcd2d), 0x65);
        // CB 65 0144
        gbc.setState(0x101c, 0x8103, 0xd880, 0x20, 0x2eae, 0x2dbe, 0x1, 0x0);
        gbc.writeMem(0x101c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8103);
        EXPECT(gbc.pc(), 0x101e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0145
        gbc.setState(0x723e, 0x51ef, 0x4b60, 0x4af0, 0x15c3, 0xe105, 0x0, 0x1);
        gbc.writeMem(0x723e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x51ef);
        EXPECT(gbc.pc(), 0x7240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0146
        gbc.setState(0x46a8, 0x18f3, 0xf610, 0x111, 0xb63d, 0x5824, 0x0, 0x1);
        gbc.writeMem(0x46a8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x18f3);
        EXPECT(gbc.pc(), 0x46aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0147
        gbc.setState(0x61ac, 0x473, 0xbcb0, 0xdc4, 0x75bf, 0x58ff, 0x1, 0x1);
        gbc.writeMem(0x61ac, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x473);
        EXPECT(gbc.pc(), 0x61ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0148
        gbc.setState(0xca99, 0x8f81, 0x98e0, 0x750, 0x93b4, 0x5a76, 0x0, 0x0);
        gbc.writeMem(0xca99, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8f81);
        EXPECT(gbc.pc(), 0xca9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca99), 0xcb);
        EXPECT(gbc.readMem(0xca9a), 0x65);
        // CB 65 0149
        gbc.setState(0x17c9, 0xc40d, 0x65a0, 0x7704, 0xd53f, 0xed, 0x1, 0x0);
        gbc.writeMem(0x17c9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc40d);
        EXPECT(gbc.pc(), 0x17cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 014A
        gbc.setState(0x5752, 0x9a31, 0x6df0, 0xff98, 0xd229, 0x20bd, 0x1, 0x1);
        gbc.writeMem(0x5752, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9a31);
        EXPECT(gbc.pc(), 0x5754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 014B
        gbc.setState(0xac26, 0xec29, 0x5a80, 0xedb1, 0x16bc, 0x335e, 0x1, 0x0);
        gbc.writeMem(0xac26, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xec29);
        EXPECT(gbc.pc(), 0xac28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac26), 0xcb);
        EXPECT(gbc.readMem(0xac27), 0x65);
        // CB 65 014C
        gbc.setState(0x4deb, 0xde9, 0x88f0, 0xe09e, 0x1ccf, 0xfeac, 0x1, 0x1);
        gbc.writeMem(0x4deb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xde9);
        EXPECT(gbc.pc(), 0x4ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 014D
        gbc.setState(0x6482, 0x7583, 0xa150, 0xb84b, 0xaf8d, 0x94d0, 0x1, 0x1);
        gbc.writeMem(0x6482, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7583);
        EXPECT(gbc.pc(), 0x6484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 014E
        gbc.setState(0xc409, 0x8c12, 0x5ec0, 0xfb35, 0x4497, 0xb0ae, 0x0, 0x1);
        gbc.writeMem(0xc409, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8c12);
        EXPECT(gbc.pc(), 0xc40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc409), 0xcb);
        EXPECT(gbc.readMem(0xc40a), 0x65);
        // CB 65 014F
        gbc.setState(0x6209, 0x90f9, 0x2980, 0x5c3c, 0x572, 0x175b, 0x1, 0x1);
        gbc.writeMem(0x6209, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x90f9);
        EXPECT(gbc.pc(), 0x620b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0150
        gbc.setState(0xe330, 0x6f65, 0x2d20, 0xab45, 0x3ba1, 0xd81c, 0x1, 0x1);
        gbc.writeMem(0xe330, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6f65);
        EXPECT(gbc.pc(), 0xe332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe330), 0xcb);
        EXPECT(gbc.readMem(0xe331), 0x65);
        // CB 65 0151
        gbc.setState(0x22ee, 0xbfd2, 0x9b0, 0x508f, 0x3275, 0xd814, 0x1, 0x1);
        gbc.writeMem(0x22ee, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xbfd2);
        EXPECT(gbc.pc(), 0x22f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0152
        gbc.setState(0xd988, 0x62d4, 0x4570, 0x1ad9, 0x4143, 0x9ce2, 0x0, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x62d4);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0x65);
        // CB 65 0153
        gbc.setState(0x4417, 0xdcf1, 0x5af0, 0xfadb, 0xd366, 0x808b, 0x1, 0x0);
        gbc.writeMem(0x4417, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdcf1);
        EXPECT(gbc.pc(), 0x4419);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0154
        gbc.setState(0x681e, 0x81ca, 0x8150, 0x95b3, 0x624a, 0xb549, 0x1, 0x0);
        gbc.writeMem(0x681e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x81ca);
        EXPECT(gbc.pc(), 0x6820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0155
        gbc.setState(0x9e1, 0x89b4, 0x2400, 0x83f2, 0x40dd, 0xcd02, 0x1, 0x1);
        gbc.writeMem(0x9e1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x89b4);
        EXPECT(gbc.pc(), 0x9e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0156
        gbc.setState(0xa433, 0x8d99, 0x7f20, 0xc771, 0xf38e, 0x7a08, 0x0, 0x0);
        gbc.writeMem(0xa433, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8d99);
        EXPECT(gbc.pc(), 0xa435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa433), 0xcb);
        EXPECT(gbc.readMem(0xa434), 0x65);
        // CB 65 0157
        gbc.setState(0x7b3b, 0xf9c5, 0xfaf0, 0xf96c, 0x8b48, 0x7c46, 0x0, 0x0);
        gbc.writeMem(0x7b3b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf9c5);
        EXPECT(gbc.pc(), 0x7b3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0158
        gbc.setState(0x38e8, 0xe0f8, 0x2810, 0x62ce, 0xdcd4, 0x300c, 0x0, 0x1);
        gbc.writeMem(0x38e8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe0f8);
        EXPECT(gbc.pc(), 0x38ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0159
        gbc.setState(0x3c94, 0xa719, 0x6040, 0x682e, 0x1014, 0x138c, 0x1, 0x0);
        gbc.writeMem(0x3c94, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa719);
        EXPECT(gbc.pc(), 0x3c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 015A
        gbc.setState(0x9bf6, 0x1026, 0x7300, 0xee5a, 0x186, 0x1545, 0x1, 0x0);
        gbc.writeMem(0x9bf6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1026);
        EXPECT(gbc.pc(), 0x9bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0xcb);
        EXPECT(gbc.readMem(0x9bf7), 0x65);
        // CB 65 015B
        gbc.setState(0x5290, 0xc94d, 0xe460, 0x648d, 0x858f, 0x2d78, 0x1, 0x1);
        gbc.writeMem(0x5290, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc94d);
        EXPECT(gbc.pc(), 0x5292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 015C
        gbc.setState(0x3c59, 0x5a4d, 0xfac0, 0x8c29, 0x3d99, 0x6490, 0x1, 0x1);
        gbc.writeMem(0x3c59, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5a4d);
        EXPECT(gbc.pc(), 0x3c5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 015D
        gbc.setState(0xca04, 0xabe, 0x9c20, 0xead1, 0x96d3, 0x7810, 0x0, 0x0);
        gbc.writeMem(0xca04, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xabe);
        EXPECT(gbc.pc(), 0xca06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca04), 0xcb);
        EXPECT(gbc.readMem(0xca05), 0x65);
        // CB 65 015E
        gbc.setState(0x1d20, 0xfd44, 0x4500, 0x3522, 0xd32b, 0x222d, 0x1, 0x1);
        gbc.writeMem(0x1d20, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfd44);
        EXPECT(gbc.pc(), 0x1d22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 015F
        gbc.setState(0x50d4, 0x8bc3, 0x8d0, 0xa09f, 0x155b, 0xe947, 0x1, 0x1);
        gbc.writeMem(0x50d4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8bc3);
        EXPECT(gbc.pc(), 0x50d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0160
        gbc.setState(0x1afa, 0xf408, 0xc920, 0x2aea, 0xa5c1, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0x1afa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf408);
        EXPECT(gbc.pc(), 0x1afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0161
        gbc.setState(0x94cc, 0xb8b4, 0x2490, 0x2ef1, 0x2284, 0xdf6f, 0x0, 0x1);
        gbc.writeMem(0x94cc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb8b4);
        EXPECT(gbc.pc(), 0x94ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cc), 0xcb);
        EXPECT(gbc.readMem(0x94cd), 0x65);
        // CB 65 0162
        gbc.setState(0xeca7, 0xb359, 0x8e60, 0xc8d7, 0x37a3, 0x869e, 0x1, 0x1);
        gbc.writeMem(0xeca7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0xeca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca7), 0xcb);
        EXPECT(gbc.readMem(0xeca8), 0x65);
        // CB 65 0164
        gbc.setState(0xdaa2, 0x7fe4, 0xa180, 0x8d42, 0x8b8f, 0x530e, 0x1, 0x0);
        gbc.writeMem(0xdaa2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7fe4);
        EXPECT(gbc.pc(), 0xdaa4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa2), 0xcb);
        EXPECT(gbc.readMem(0xdaa3), 0x65);
        // CB 65 0165
        gbc.setState(0x5e26, 0x7726, 0x5230, 0x1e6, 0x7b82, 0x96bc, 0x1, 0x1);
        gbc.writeMem(0x5e26, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7726);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0166
        gbc.setState(0x6570, 0x4ead, 0x4b70, 0x3dd7, 0xe3c7, 0xe349, 0x0, 0x1);
        gbc.writeMem(0x6570, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4ead);
        EXPECT(gbc.pc(), 0x6572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0167
        gbc.setState(0x5dc1, 0x73b7, 0xfc70, 0x43bd, 0x3a8b, 0xa77d, 0x1, 0x1);
        gbc.writeMem(0x5dc1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x73b7);
        EXPECT(gbc.pc(), 0x5dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0168
        gbc.setState(0xca8f, 0x46f7, 0xe820, 0xbe20, 0x71a0, 0x14f4, 0x1, 0x0);
        gbc.writeMem(0xca8f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x46f7);
        EXPECT(gbc.pc(), 0xca91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8f), 0xcb);
        EXPECT(gbc.readMem(0xca90), 0x65);
        // CB 65 0169
        gbc.setState(0xb26b, 0x1000, 0x3a10, 0x442b, 0x4dad, 0xd889, 0x1, 0x1);
        gbc.writeMem(0xb26b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1000);
        EXPECT(gbc.pc(), 0xb26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26b), 0xcb);
        EXPECT(gbc.readMem(0xb26c), 0x65);
        // CB 65 016A
        gbc.setState(0xa117, 0x971f, 0xf4e0, 0x8cd9, 0x2dff, 0x5718, 0x0, 0x0);
        gbc.writeMem(0xa117, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x971f);
        EXPECT(gbc.pc(), 0xa119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa117), 0xcb);
        EXPECT(gbc.readMem(0xa118), 0x65);
        // CB 65 016B
        gbc.setState(0x7129, 0xe86f, 0xcce0, 0x5835, 0x2f53, 0xcf02, 0x0, 0x1);
        gbc.writeMem(0x7129, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe86f);
        EXPECT(gbc.pc(), 0x712b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 016C
        gbc.setState(0x494d, 0x6f3c, 0xbc20, 0xbbc4, 0x1ba7, 0x3307, 0x0, 0x0);
        gbc.writeMem(0x494d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6f3c);
        EXPECT(gbc.pc(), 0x494f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 016D
        gbc.setState(0x247b, 0xd225, 0x6220, 0xb3b9, 0x1bef, 0x8594, 0x1, 0x1);
        gbc.writeMem(0x247b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd225);
        EXPECT(gbc.pc(), 0x247d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 016E
        gbc.setState(0x3355, 0x2d4c, 0xcd70, 0x1539, 0x606, 0x3d6e, 0x1, 0x0);
        gbc.writeMem(0x3355, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x2d4c);
        EXPECT(gbc.pc(), 0x3357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 016F
        gbc.setState(0xe2cb, 0x7b18, 0x3cb0, 0x5667, 0xdb12, 0x7274, 0x1, 0x0);
        gbc.writeMem(0xe2cb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7b18);
        EXPECT(gbc.pc(), 0xe2cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2cb), 0xcb);
        EXPECT(gbc.readMem(0xe2cc), 0x65);
        // CB 65 0170
        gbc.setState(0x636e, 0xf96f, 0xdac0, 0xec66, 0x4f1c, 0xbd0f, 0x1, 0x1);
        gbc.writeMem(0x636e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf96f);
        EXPECT(gbc.pc(), 0x6370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0171
        gbc.setState(0x2fc2, 0x96d2, 0xee30, 0x7ee4, 0xfc85, 0x1461, 0x1, 0x0);
        gbc.writeMem(0x2fc2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x96d2);
        EXPECT(gbc.pc(), 0x2fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0172
        gbc.setState(0xd1b8, 0xa269, 0xf8f0, 0x5722, 0x1478, 0xdba5, 0x0, 0x1);
        gbc.writeMem(0xd1b8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa269);
        EXPECT(gbc.pc(), 0xd1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b8), 0xcb);
        EXPECT(gbc.readMem(0xd1b9), 0x65);
        // CB 65 0173
        gbc.setState(0xdeab, 0x952a, 0x7bd0, 0x2711, 0x31a3, 0x25d, 0x0, 0x1);
        gbc.writeMem(0xdeab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x952a);
        EXPECT(gbc.pc(), 0xdead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeab), 0xcb);
        EXPECT(gbc.readMem(0xdeac), 0x65);
        // CB 65 0174
        gbc.setState(0xcf1f, 0x164f, 0x3a90, 0xe88d, 0xd449, 0x4cc4, 0x1, 0x0);
        gbc.writeMem(0xcf1f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x164f);
        EXPECT(gbc.pc(), 0xcf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1f), 0xcb);
        EXPECT(gbc.readMem(0xcf20), 0x65);
        // CB 65 0175
        gbc.setState(0x3940, 0x8c53, 0x6c10, 0x8323, 0x4f81, 0x6d5f, 0x0, 0x1);
        gbc.writeMem(0x3940, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8c53);
        EXPECT(gbc.pc(), 0x3942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0176
        gbc.setState(0xe5e8, 0x9242, 0xae40, 0x564a, 0xc1a9, 0x5cd0, 0x1, 0x1);
        gbc.writeMem(0xe5e8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9242);
        EXPECT(gbc.pc(), 0xe5ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e8), 0xcb);
        EXPECT(gbc.readMem(0xe5e9), 0x65);
        // CB 65 0177
        gbc.setState(0x5c06, 0x3a8a, 0x3850, 0x58c8, 0xd098, 0xfb54, 0x1, 0x1);
        gbc.writeMem(0x5c06, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3a8a);
        EXPECT(gbc.pc(), 0x5c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0178
        gbc.setState(0x477d, 0xc497, 0xab70, 0xd6d2, 0x380d, 0x54fa, 0x0, 0x0);
        gbc.writeMem(0x477d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc497);
        EXPECT(gbc.pc(), 0x477f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0179
        gbc.setState(0xc5cc, 0xa033, 0xbc70, 0x9f45, 0x19d, 0xd821, 0x0, 0x0);
        gbc.writeMem(0xc5cc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa033);
        EXPECT(gbc.pc(), 0xc5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5cc), 0xcb);
        EXPECT(gbc.readMem(0xc5cd), 0x65);
        // CB 65 017A
        gbc.setState(0x2156, 0x44b9, 0x41a0, 0xb263, 0xf462, 0x9afe, 0x1, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x44b9);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 017B
        gbc.setState(0xaba2, 0xe091, 0xbfe0, 0x1964, 0xfa55, 0xaaf6, 0x1, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe091);
        EXPECT(gbc.pc(), 0xaba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaba2), 0xcb);
        EXPECT(gbc.readMem(0xaba3), 0x65);
        // CB 65 017C
        gbc.setState(0xaf3, 0xb4a8, 0x9ba0, 0x280e, 0x3e47, 0x229e, 0x1, 0x0);
        gbc.writeMem(0xaf3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb4a8);
        EXPECT(gbc.pc(), 0xaf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 017D
        gbc.setState(0x235c, 0x942f, 0xf1c0, 0xe681, 0x6b40, 0x24aa, 0x0, 0x1);
        gbc.writeMem(0x235c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x942f);
        EXPECT(gbc.pc(), 0x235e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 017E
        gbc.setState(0x1a1, 0x3c95, 0xa1e0, 0xc583, 0x6273, 0x76d, 0x1, 0x1);
        gbc.writeMem(0x1a1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3c95);
        EXPECT(gbc.pc(), 0x1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 017F
        gbc.setState(0x69eb, 0xd19d, 0xe550, 0xe0b2, 0x6181, 0x7c14, 0x1, 0x0);
        gbc.writeMem(0x69eb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd19d);
        EXPECT(gbc.pc(), 0x69ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0180
        gbc.setState(0xa258, 0x4638, 0xf1b0, 0x71ea, 0xc3a8, 0x178e, 0x0, 0x0);
        gbc.writeMem(0xa258, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4638);
        EXPECT(gbc.pc(), 0xa25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa258), 0xcb);
        EXPECT(gbc.readMem(0xa259), 0x65);
        // CB 65 0181
        gbc.setState(0x92d4, 0x2829, 0xe0a0, 0x8086, 0xbb19, 0x7c12, 0x1, 0x0);
        gbc.writeMem(0x92d4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x2829);
        EXPECT(gbc.pc(), 0x92d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d4), 0xcb);
        EXPECT(gbc.readMem(0x92d5), 0x65);
        // CB 65 0182
        gbc.setState(0x8b83, 0xe77b, 0x3420, 0x7183, 0xcdfc, 0xff9b, 0x1, 0x1);
        gbc.writeMem(0x8b83, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe77b);
        EXPECT(gbc.pc(), 0x8b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b83), 0xcb);
        EXPECT(gbc.readMem(0x8b84), 0x65);
        // CB 65 0183
        gbc.setState(0x57ab, 0x5e3c, 0x1b80, 0x60ab, 0xc0bc, 0x9cc1, 0x0, 0x1);
        gbc.writeMem(0x57ab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5e3c);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0184
        gbc.setState(0x73e4, 0x9761, 0xea0, 0x73bd, 0xe5d, 0x76e6, 0x0, 0x0);
        gbc.writeMem(0x73e4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9761);
        EXPECT(gbc.pc(), 0x73e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0185
        gbc.setState(0xcce1, 0x2ed6, 0x74e0, 0x91f7, 0xd0e0, 0xc00, 0x0, 0x1);
        gbc.writeMem(0xcce1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2ed6);
        EXPECT(gbc.pc(), 0xcce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce1), 0xcb);
        EXPECT(gbc.readMem(0xcce2), 0x65);
        // CB 65 0186
        gbc.setState(0xdd7c, 0x4cc5, 0x7910, 0xa45c, 0x8887, 0xa954, 0x1, 0x0);
        gbc.writeMem(0xdd7c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4cc5);
        EXPECT(gbc.pc(), 0xdd7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd7c), 0xcb);
        EXPECT(gbc.readMem(0xdd7d), 0x65);
        // CB 65 0188
        gbc.setState(0x80f7, 0x19c0, 0x5f50, 0xd886, 0x5bc7, 0xb3a9, 0x1, 0x1);
        gbc.writeMem(0x80f7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x19c0);
        EXPECT(gbc.pc(), 0x80f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f7), 0xcb);
        EXPECT(gbc.readMem(0x80f8), 0x65);
        // CB 65 0189
        gbc.setState(0x32db, 0x567a, 0x8e20, 0xd384, 0x2282, 0x21de, 0x0, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x567a);
        EXPECT(gbc.pc(), 0x32dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 018A
        gbc.setState(0xe9a8, 0x6038, 0x6700, 0xa86b, 0x9acd, 0x69d2, 0x1, 0x0);
        gbc.writeMem(0xe9a8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6038);
        EXPECT(gbc.pc(), 0xe9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a8), 0xcb);
        EXPECT(gbc.readMem(0xe9a9), 0x65);
        // CB 65 018B
        gbc.setState(0xa572, 0x5996, 0xac50, 0xf9f4, 0x9ee1, 0x5708, 0x0, 0x0);
        gbc.writeMem(0xa572, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5996);
        EXPECT(gbc.pc(), 0xa574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa572), 0xcb);
        EXPECT(gbc.readMem(0xa573), 0x65);
        // CB 65 018C
        gbc.setState(0xcf84, 0xe369, 0x69c0, 0xfcdf, 0x2937, 0xaef0, 0x1, 0x1);
        gbc.writeMem(0xcf84, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe369);
        EXPECT(gbc.pc(), 0xcf86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf84), 0xcb);
        EXPECT(gbc.readMem(0xcf85), 0x65);
        // CB 65 018D
        gbc.setState(0x706c, 0x578, 0xe6c0, 0x9366, 0xecb9, 0x5ec, 0x1, 0x1);
        gbc.writeMem(0x706c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x578);
        EXPECT(gbc.pc(), 0x706e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 018E
        gbc.setState(0x457d, 0x8e79, 0x4370, 0x7197, 0x1f7f, 0x3f65, 0x1, 0x0);
        gbc.writeMem(0x457d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8e79);
        EXPECT(gbc.pc(), 0x457f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 018F
        gbc.setState(0x92d0, 0x766c, 0x1010, 0x3d0d, 0x3b87, 0xebd2, 0x0, 0x0);
        gbc.writeMem(0x92d0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x766c);
        EXPECT(gbc.pc(), 0x92d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d0), 0xcb);
        EXPECT(gbc.readMem(0x92d1), 0x65);
        // CB 65 0190
        gbc.setState(0x338b, 0x9ecd, 0x4870, 0xc23a, 0x67e7, 0x3fae, 0x1, 0x0);
        gbc.writeMem(0x338b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9ecd);
        EXPECT(gbc.pc(), 0x338d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0191
        gbc.setState(0xae2a, 0x9405, 0xa020, 0x9963, 0x4644, 0xf13, 0x1, 0x1);
        gbc.writeMem(0xae2a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9405);
        EXPECT(gbc.pc(), 0xae2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae2a), 0xcb);
        EXPECT(gbc.readMem(0xae2b), 0x65);
        // CB 65 0192
        gbc.setState(0x802, 0xad9, 0x7580, 0x5fe6, 0x1c93, 0x6460, 0x0, 0x0);
        gbc.writeMem(0x802, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xad9);
        EXPECT(gbc.pc(), 0x804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0193
        gbc.setState(0xa996, 0x8f17, 0x8f90, 0x62d9, 0x44f0, 0xb26d, 0x0, 0x0);
        gbc.writeMem(0xa996, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8f17);
        EXPECT(gbc.pc(), 0xa998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa996), 0xcb);
        EXPECT(gbc.readMem(0xa997), 0x65);
        // CB 65 0194
        gbc.setState(0x174b, 0x2e83, 0xa790, 0xf4cb, 0x3026, 0xbca5, 0x0, 0x1);
        gbc.writeMem(0x174b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2e83);
        EXPECT(gbc.pc(), 0x174d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0195
        gbc.setState(0x1d4d, 0x4467, 0x5160, 0x57e5, 0x8ba5, 0x6ba7, 0x1, 0x1);
        gbc.writeMem(0x1d4d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4467);
        EXPECT(gbc.pc(), 0x1d4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0196
        gbc.setState(0xc31, 0x273a, 0x23e0, 0xda03, 0x3226, 0xdfd5, 0x0, 0x0);
        gbc.writeMem(0xc31, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x273a);
        EXPECT(gbc.pc(), 0xc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0197
        gbc.setState(0x371a, 0xd899, 0x7480, 0xcfb8, 0x875d, 0x70ef, 0x1, 0x0);
        gbc.writeMem(0x371a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xd899);
        EXPECT(gbc.pc(), 0x371c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0198
        gbc.setState(0x7f57, 0x561c, 0x6a40, 0x6024, 0x62ec, 0xdcc2, 0x1, 0x1);
        gbc.writeMem(0x7f57, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x561c);
        EXPECT(gbc.pc(), 0x7f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0199
        gbc.setState(0x7527, 0x2080, 0x3360, 0x216, 0x99d6, 0x8714, 0x0, 0x1);
        gbc.writeMem(0x7527, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2080);
        EXPECT(gbc.pc(), 0x7529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 019A
        gbc.setState(0xc43f, 0x2967, 0xe20, 0xd9fb, 0x49ed, 0x19b6, 0x0, 0x0);
        gbc.writeMem(0xc43f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2967);
        EXPECT(gbc.pc(), 0xc441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43f), 0xcb);
        EXPECT(gbc.readMem(0xc440), 0x65);
        // CB 65 019B
        gbc.setState(0xb53b, 0xe0f, 0x82f0, 0x7a9c, 0x78a1, 0x17e6, 0x0, 0x0);
        gbc.writeMem(0xb53b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe0f);
        EXPECT(gbc.pc(), 0xb53d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb53b), 0xcb);
        EXPECT(gbc.readMem(0xb53c), 0x65);
        // CB 65 019C
        gbc.setState(0xcc6, 0x1788, 0x8040, 0x5c5f, 0x1965, 0x18a4, 0x1, 0x0);
        gbc.writeMem(0xcc6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1788);
        EXPECT(gbc.pc(), 0xcc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 019D
        gbc.setState(0x1018, 0xd165, 0x3b0, 0x2bc4, 0x8a71, 0x9959, 0x0, 0x1);
        gbc.writeMem(0x1018, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd165);
        EXPECT(gbc.pc(), 0x101a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 019E
        gbc.setState(0x3d0e, 0xa69a, 0xb060, 0xf8fb, 0xd598, 0x32f5, 0x1, 0x1);
        gbc.writeMem(0x3d0e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa69a);
        EXPECT(gbc.pc(), 0x3d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 019F
        gbc.setState(0xccf7, 0xecde, 0x240, 0x6dba, 0xa053, 0x8432, 0x0, 0x0);
        gbc.writeMem(0xccf7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xecde);
        EXPECT(gbc.pc(), 0xccf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf7), 0xcb);
        EXPECT(gbc.readMem(0xccf8), 0x65);
        // CB 65 01A0
        gbc.setState(0x24d9, 0x1138, 0xa5d0, 0x8786, 0xd565, 0xacd, 0x1, 0x1);
        gbc.writeMem(0x24d9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1138);
        EXPECT(gbc.pc(), 0x24db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01A2
        gbc.setState(0x3d33, 0xf48e, 0x72b0, 0x96b4, 0xa2b9, 0x145c, 0x0, 0x1);
        gbc.writeMem(0x3d33, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf48e);
        EXPECT(gbc.pc(), 0x3d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01A3
        gbc.setState(0x2621, 0x93c8, 0xa3d0, 0x71b2, 0x2dbb, 0x25c3, 0x1, 0x0);
        gbc.writeMem(0x2621, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x93c8);
        EXPECT(gbc.pc(), 0x2623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01A4
        gbc.setState(0x6107, 0x9a33, 0xa120, 0x1e67, 0xba25, 0xe939, 0x1, 0x0);
        gbc.writeMem(0x6107, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9a33);
        EXPECT(gbc.pc(), 0x6109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01A5
        gbc.setState(0x3b97, 0x92c4, 0xe5c0, 0xe702, 0x31d1, 0xfb4d, 0x0, 0x1);
        gbc.writeMem(0x3b97, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x92c4);
        EXPECT(gbc.pc(), 0x3b99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01A6
        gbc.setState(0xafd0, 0x8086, 0x9500, 0x44ea, 0xb411, 0xfea4, 0x1, 0x0);
        gbc.writeMem(0xafd0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8086);
        EXPECT(gbc.pc(), 0xafd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd0), 0xcb);
        EXPECT(gbc.readMem(0xafd1), 0x65);
        // CB 65 01A7
        gbc.setState(0x1f26, 0x2726, 0x23e0, 0x8034, 0x18ce, 0xa6d8, 0x1, 0x0);
        gbc.writeMem(0x1f26, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2726);
        EXPECT(gbc.pc(), 0x1f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01A8
        gbc.setState(0xd6df, 0xc0d3, 0x87d0, 0xc75b, 0x5707, 0xf9ab, 0x0, 0x0);
        gbc.writeMem(0xd6df, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc0d3);
        EXPECT(gbc.pc(), 0xd6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6df), 0xcb);
        EXPECT(gbc.readMem(0xd6e0), 0x65);
        // CB 65 01A9
        gbc.setState(0xd2d3, 0x4126, 0x65a0, 0x8127, 0x4942, 0x3bf3, 0x0, 0x1);
        gbc.writeMem(0xd2d3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x4126);
        EXPECT(gbc.pc(), 0xd2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d3), 0xcb);
        EXPECT(gbc.readMem(0xd2d4), 0x65);
        // CB 65 01AA
        gbc.setState(0xea45, 0xcb73, 0xcc20, 0x6ac3, 0xc3e3, 0x6499, 0x1, 0x0);
        gbc.writeMem(0xea45, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xcb73);
        EXPECT(gbc.pc(), 0xea47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea45), 0xcb);
        EXPECT(gbc.readMem(0xea46), 0x65);
        // CB 65 01AC
        gbc.setState(0xbc2d, 0x63d3, 0xb960, 0x50bd, 0x7226, 0x812c, 0x0, 0x0);
        gbc.writeMem(0xbc2d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x63d3);
        EXPECT(gbc.pc(), 0xbc2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc2d), 0xcb);
        EXPECT(gbc.readMem(0xbc2e), 0x65);
        // CB 65 01AD
        gbc.setState(0x652, 0x1269, 0x90e0, 0x86c5, 0x91ac, 0xca02, 0x1, 0x0);
        gbc.writeMem(0x652, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1269);
        EXPECT(gbc.pc(), 0x654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01AE
        gbc.setState(0xa7d1, 0x3c5b, 0xd10, 0x492d, 0x3098, 0x7840, 0x0, 0x1);
        gbc.writeMem(0xa7d1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3c5b);
        EXPECT(gbc.pc(), 0xa7d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d1), 0xcb);
        EXPECT(gbc.readMem(0xa7d2), 0x65);
        // CB 65 01AF
        gbc.setState(0xae63, 0xab9c, 0xbda0, 0x8235, 0x2983, 0x1b91, 0x0, 0x1);
        gbc.writeMem(0xae63, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xab9c);
        EXPECT(gbc.pc(), 0xae65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae63), 0xcb);
        EXPECT(gbc.readMem(0xae64), 0x65);
        // CB 65 01B0
        gbc.setState(0x3bd1, 0x69ef, 0xe770, 0x983e, 0x8b92, 0xcfdb, 0x0, 0x1);
        gbc.writeMem(0x3bd1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x69ef);
        EXPECT(gbc.pc(), 0x3bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01B1
        gbc.setState(0xd0f1, 0x7194, 0xda20, 0xeb80, 0x7a88, 0xe37a, 0x0, 0x0);
        gbc.writeMem(0xd0f1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7194);
        EXPECT(gbc.pc(), 0xd0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f1), 0xcb);
        EXPECT(gbc.readMem(0xd0f2), 0x65);
        // CB 65 01B2
        gbc.setState(0x3fa, 0x356d, 0x3a90, 0xffa6, 0xe0ab, 0x2dca, 0x0, 0x1);
        gbc.writeMem(0x3fa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x356d);
        EXPECT(gbc.pc(), 0x3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01B3
        gbc.setState(0xa039, 0xcc3, 0xcaa0, 0xe460, 0x343f, 0xf17a, 0x0, 0x1);
        gbc.writeMem(0xa039, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcc3);
        EXPECT(gbc.pc(), 0xa03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa039), 0xcb);
        EXPECT(gbc.readMem(0xa03a), 0x65);
        // CB 65 01B4
        gbc.setState(0xc38, 0xe5e0, 0xaf70, 0xc979, 0x4e2e, 0x2321, 0x1, 0x0);
        gbc.writeMem(0xc38, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe5e0);
        EXPECT(gbc.pc(), 0xc3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01B5
        gbc.setState(0x5840, 0x3ff9, 0x6ed0, 0xfa0c, 0x9aaf, 0xd845, 0x0, 0x1);
        gbc.writeMem(0x5840, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3ff9);
        EXPECT(gbc.pc(), 0x5842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01B6
        gbc.setState(0x87c6, 0x5ce, 0xfa70, 0x454f, 0x66d1, 0x2bff, 0x1, 0x0);
        gbc.writeMem(0x87c6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5ce);
        EXPECT(gbc.pc(), 0x87c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c6), 0xcb);
        EXPECT(gbc.readMem(0x87c7), 0x65);
        // CB 65 01B7
        gbc.setState(0x4768, 0x13e1, 0x5ab0, 0x4cf2, 0x5d19, 0x17c3, 0x1, 0x0);
        gbc.writeMem(0x4768, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x13e1);
        EXPECT(gbc.pc(), 0x476a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01B8
        gbc.setState(0xd608, 0xa643, 0x9480, 0xc3cd, 0xb7b9, 0x54dc, 0x1, 0x1);
        gbc.writeMem(0xd608, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa643);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd608), 0xcb);
        EXPECT(gbc.readMem(0xd609), 0x65);
        // CB 65 01B9
        gbc.setState(0x7aeb, 0xc77b, 0x9920, 0xa11d, 0xc96, 0x100a, 0x1, 0x0);
        gbc.writeMem(0x7aeb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc77b);
        EXPECT(gbc.pc(), 0x7aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01BA
        gbc.setState(0xbc12, 0x22d9, 0x4480, 0x5dce, 0xeea9, 0xce49, 0x0, 0x0);
        gbc.writeMem(0xbc12, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x22d9);
        EXPECT(gbc.pc(), 0xbc14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc12), 0xcb);
        EXPECT(gbc.readMem(0xbc13), 0x65);
        // CB 65 01BB
        gbc.setState(0xcf52, 0x46e7, 0x680, 0x10a1, 0xcb33, 0x743f, 0x1, 0x0);
        gbc.writeMem(0xcf52, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x46e7);
        EXPECT(gbc.pc(), 0xcf54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf52), 0xcb);
        EXPECT(gbc.readMem(0xcf53), 0x65);
        // CB 65 01BC
        gbc.setState(0x35cb, 0x331f, 0x8da0, 0x6c9, 0x51d3, 0xb3a9, 0x1, 0x1);
        gbc.writeMem(0x35cb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x331f);
        EXPECT(gbc.pc(), 0x35cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01BD
        gbc.setState(0x1d86, 0xa978, 0x5190, 0x3cac, 0xafa4, 0x27be, 0x1, 0x1);
        gbc.writeMem(0x1d86, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa978);
        EXPECT(gbc.pc(), 0x1d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01BE
        gbc.setState(0x78bf, 0x37f2, 0x8880, 0x3d48, 0xb4c3, 0xe8c0, 0x1, 0x0);
        gbc.writeMem(0x78bf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x37f2);
        EXPECT(gbc.pc(), 0x78c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01BF
        gbc.setState(0x9043, 0x9b20, 0x26e0, 0x150b, 0x5709, 0x4452, 0x0, 0x1);
        gbc.writeMem(0x9043, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9b20);
        EXPECT(gbc.pc(), 0x9045);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9043), 0xcb);
        EXPECT(gbc.readMem(0x9044), 0x65);
        // CB 65 01C0
        gbc.setState(0xe91a, 0x29fe, 0x6680, 0x5245, 0xa09d, 0x642b, 0x0, 0x0);
        gbc.writeMem(0xe91a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x29fe);
        EXPECT(gbc.pc(), 0xe91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe91a), 0xcb);
        EXPECT(gbc.readMem(0xe91b), 0x65);
        // CB 65 01C1
        gbc.setState(0x4667, 0x6e48, 0x2780, 0xf5ae, 0x574c, 0x3df1, 0x1, 0x1);
        gbc.writeMem(0x4667, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6e48);
        EXPECT(gbc.pc(), 0x4669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01C2
        gbc.setState(0xc36a, 0x6497, 0x1c0, 0x847c, 0xc2d0, 0x6708, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0xc36c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36a), 0xcb);
        EXPECT(gbc.readMem(0xc36b), 0x65);
        // CB 65 01C3
        gbc.setState(0x137f, 0x7e71, 0xa1b0, 0xf1f4, 0xbb24, 0xcef3, 0x1, 0x1);
        gbc.writeMem(0x137f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7e71);
        EXPECT(gbc.pc(), 0x1381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01C4
        gbc.setState(0x7066, 0x3250, 0xf400, 0x6cdd, 0x5c38, 0x47e5, 0x0, 0x1);
        gbc.writeMem(0x7066, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3250);
        EXPECT(gbc.pc(), 0x7068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01C5
        gbc.setState(0xc42e, 0x17d7, 0x2fe0, 0xe354, 0x8d37, 0xad93, 0x1, 0x0);
        gbc.writeMem(0xc42e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x17d7);
        EXPECT(gbc.pc(), 0xc430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42e), 0xcb);
        EXPECT(gbc.readMem(0xc42f), 0x65);
        // CB 65 01C6
        gbc.setState(0x8948, 0xb1ab, 0x3c60, 0xd082, 0x10c1, 0x8edc, 0x0, 0x1);
        gbc.writeMem(0x8948, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb1ab);
        EXPECT(gbc.pc(), 0x894a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8948), 0xcb);
        EXPECT(gbc.readMem(0x8949), 0x65);
        // CB 65 01C7
        gbc.setState(0xa41e, 0x29b, 0xbd70, 0xd915, 0xf6de, 0x1c44, 0x1, 0x1);
        gbc.writeMem(0xa41e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x29b);
        EXPECT(gbc.pc(), 0xa420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41e), 0xcb);
        EXPECT(gbc.readMem(0xa41f), 0x65);
        // CB 65 01C8
        gbc.setState(0x7835, 0x5894, 0xbd90, 0x80b3, 0x66c1, 0xbd81, 0x0, 0x1);
        gbc.writeMem(0x7835, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5894);
        EXPECT(gbc.pc(), 0x7837);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01C9
        gbc.setState(0xb12d, 0x594d, 0x9550, 0x5fa4, 0x690f, 0x931d, 0x0, 0x0);
        gbc.writeMem(0xb12d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x594d);
        EXPECT(gbc.pc(), 0xb12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb12d), 0xcb);
        EXPECT(gbc.readMem(0xb12e), 0x65);
        // CB 65 01CA
        gbc.setState(0x9484, 0xa0a, 0x59e0, 0xf8f0, 0x871c, 0xf5b3, 0x1, 0x0);
        gbc.writeMem(0x9484, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa0a);
        EXPECT(gbc.pc(), 0x9486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9484), 0xcb);
        EXPECT(gbc.readMem(0x9485), 0x65);
        // CB 65 01CB
        gbc.setState(0x333d, 0x7a60, 0x70e0, 0xd6a7, 0xc285, 0x2643, 0x0, 0x1);
        gbc.writeMem(0x333d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7a60);
        EXPECT(gbc.pc(), 0x333f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01CC
        gbc.setState(0x5666, 0x1e8b, 0x7350, 0x9f58, 0xf0b1, 0x99d7, 0x0, 0x0);
        gbc.writeMem(0x5666, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1e8b);
        EXPECT(gbc.pc(), 0x5668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01CD
        gbc.setState(0x1e8e, 0x6cd8, 0x3ad0, 0x3b63, 0xea94, 0x6b6d, 0x0, 0x1);
        gbc.writeMem(0x1e8e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6cd8);
        EXPECT(gbc.pc(), 0x1e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01CE
        gbc.setState(0x49a5, 0xb2c3, 0x92d0, 0x20d7, 0x8d1, 0x94e3, 0x0, 0x1);
        gbc.writeMem(0x49a5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb2c3);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01CF
        gbc.setState(0x8288, 0x6cc7, 0xae30, 0x3c86, 0x4741, 0xac3a, 0x1, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6cc7);
        EXPECT(gbc.pc(), 0x828a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8288), 0xcb);
        EXPECT(gbc.readMem(0x8289), 0x65);
        // CB 65 01D0
        gbc.setState(0x6103, 0x5168, 0x9f0, 0xff07, 0xed08, 0x7b47, 0x0, 0x1);
        gbc.writeMem(0x6103, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0x6105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01D1
        gbc.setState(0xc908, 0x9a22, 0xd210, 0xccf3, 0xd3fb, 0xee37, 0x0, 0x0);
        gbc.writeMem(0xc908, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9a22);
        EXPECT(gbc.pc(), 0xc90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc908), 0xcb);
        EXPECT(gbc.readMem(0xc909), 0x65);
        // CB 65 01D2
        gbc.setState(0x7bd6, 0xc3f1, 0x38a0, 0xc40f, 0x38ce, 0x94f8, 0x0, 0x1);
        gbc.writeMem(0x7bd6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xc3f1);
        EXPECT(gbc.pc(), 0x7bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01D3
        gbc.setState(0x7dc1, 0xc191, 0xc620, 0x35a3, 0x66a9, 0xe4c4, 0x0, 0x0);
        gbc.writeMem(0x7dc1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc191);
        EXPECT(gbc.pc(), 0x7dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01D4
        gbc.setState(0xdb84, 0xcdc4, 0x1c40, 0xf44f, 0x200e, 0xa7e0, 0x0, 0x0);
        gbc.writeMem(0xdb84, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcdc4);
        EXPECT(gbc.pc(), 0xdb86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb84), 0xcb);
        EXPECT(gbc.readMem(0xdb85), 0x65);
        // CB 65 01D5
        gbc.setState(0x542, 0x49fb, 0xf4e0, 0xf960, 0x7363, 0xf642, 0x0, 0x1);
        gbc.writeMem(0x542, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x49fb);
        EXPECT(gbc.pc(), 0x544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01D6
        gbc.setState(0x1ae, 0xb790, 0x48b0, 0x7238, 0x141c, 0xd4ba, 0x1, 0x1);
        gbc.writeMem(0x1ae, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb790);
        EXPECT(gbc.pc(), 0x1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01D7
        gbc.setState(0x4b03, 0x95e7, 0xda50, 0xaec6, 0x9025, 0xef17, 0x1, 0x1);
        gbc.writeMem(0x4b03, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0x4b05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01D8
        gbc.setState(0xe861, 0x95fa, 0xf480, 0x3c89, 0x401a, 0x5c1f, 0x0, 0x1);
        gbc.writeMem(0xe861, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x95fa);
        EXPECT(gbc.pc(), 0xe863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe861), 0xcb);
        EXPECT(gbc.readMem(0xe862), 0x65);
        // CB 65 01D9
        gbc.setState(0xbf2c, 0xb58, 0xb600, 0x855d, 0x9b1e, 0xe5de, 0x0, 0x0);
        gbc.writeMem(0xbf2c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb58);
        EXPECT(gbc.pc(), 0xbf2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf2c), 0xcb);
        EXPECT(gbc.readMem(0xbf2d), 0x65);
        // CB 65 01DA
        gbc.setState(0x9cce, 0xf411, 0x5f30, 0x1384, 0x1fa6, 0x3ea3, 0x1, 0x0);
        gbc.writeMem(0x9cce, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf411);
        EXPECT(gbc.pc(), 0x9cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cce), 0xcb);
        EXPECT(gbc.readMem(0x9ccf), 0x65);
        // CB 65 01DB
        gbc.setState(0xe914, 0x8ad5, 0x6440, 0x3c1f, 0x5f0c, 0x4416, 0x1, 0x1);
        gbc.writeMem(0xe914, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8ad5);
        EXPECT(gbc.pc(), 0xe916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe914), 0xcb);
        EXPECT(gbc.readMem(0xe915), 0x65);
        // CB 65 01DC
        gbc.setState(0x5b86, 0xf12e, 0x38b0, 0x4149, 0x930a, 0xb0e2, 0x1, 0x0);
        gbc.writeMem(0x5b86, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf12e);
        EXPECT(gbc.pc(), 0x5b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01DD
        gbc.setState(0x6c4b, 0x4e5a, 0xd8e0, 0xd642, 0x9f6c, 0x21cb, 0x0, 0x0);
        gbc.writeMem(0x6c4b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4e5a);
        EXPECT(gbc.pc(), 0x6c4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01E0
        gbc.setState(0x974a, 0x5ec7, 0xd8b0, 0x9136, 0xf178, 0x87e2, 0x1, 0x0);
        gbc.writeMem(0x974a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5ec7);
        EXPECT(gbc.pc(), 0x974c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974a), 0xcb);
        EXPECT(gbc.readMem(0x974b), 0x65);
        // CB 65 01E1
        gbc.setState(0x3b22, 0x9f1b, 0xed10, 0x96f1, 0xf608, 0xbf57, 0x0, 0x1);
        gbc.writeMem(0x3b22, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9f1b);
        EXPECT(gbc.pc(), 0x3b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01E3
        gbc.setState(0xcfbf, 0xf9bb, 0x180, 0xecec, 0x5caf, 0x5d1c, 0x0, 0x0);
        gbc.writeMem(0xcfbf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf9bb);
        EXPECT(gbc.pc(), 0xcfc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbf), 0xcb);
        EXPECT(gbc.readMem(0xcfc0), 0x65);
        // CB 65 01E4
        gbc.setState(0xcc4a, 0xc100, 0x6180, 0xfd9f, 0x7a42, 0xdcc3, 0x0, 0x1);
        gbc.writeMem(0xcc4a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc100);
        EXPECT(gbc.pc(), 0xcc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4a), 0xcb);
        EXPECT(gbc.readMem(0xcc4b), 0x65);
        // CB 65 01E5
        gbc.setState(0xa817, 0x9744, 0xdd00, 0x869e, 0xd1a, 0x2dcf, 0x1, 0x1);
        gbc.writeMem(0xa817, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x9744);
        EXPECT(gbc.pc(), 0xa819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa817), 0xcb);
        EXPECT(gbc.readMem(0xa818), 0x65);
        // CB 65 01E6
        gbc.setState(0xc2a3, 0xfc5e, 0x9980, 0x8327, 0xdf1e, 0x8ef8, 0x0, 0x1);
        gbc.writeMem(0xc2a3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfc5e);
        EXPECT(gbc.pc(), 0xc2a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a3), 0xcb);
        EXPECT(gbc.readMem(0xc2a4), 0x65);
        // CB 65 01E7
        gbc.setState(0xc01, 0x8356, 0xf1d0, 0x22d7, 0x1ce5, 0xe585, 0x0, 0x0);
        gbc.writeMem(0xc01, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8356);
        EXPECT(gbc.pc(), 0xc03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01E8
        gbc.setState(0x1301, 0x412d, 0xa170, 0xed36, 0xed03, 0xfffb, 0x1, 0x0);
        gbc.writeMem(0x1301, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x412d);
        EXPECT(gbc.pc(), 0x1303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01E9
        gbc.setState(0x77f5, 0x464b, 0xa70, 0x1a51, 0xf7df, 0xaf33, 0x0, 0x1);
        gbc.writeMem(0x77f5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x464b);
        EXPECT(gbc.pc(), 0x77f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01EA
        gbc.setState(0xdd1a, 0x4496, 0xb3d0, 0x165b, 0x1cdb, 0xc031, 0x1, 0x0);
        gbc.writeMem(0xdd1a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4496);
        EXPECT(gbc.pc(), 0xdd1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1a), 0xcb);
        EXPECT(gbc.readMem(0xdd1b), 0x65);
        // CB 65 01EB
        gbc.setState(0xa38f, 0x3e82, 0x7340, 0xece6, 0x859b, 0x61f1, 0x0, 0x0);
        gbc.writeMem(0xa38f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3e82);
        EXPECT(gbc.pc(), 0xa391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38f), 0xcb);
        EXPECT(gbc.readMem(0xa390), 0x65);
        // CB 65 01EC
        gbc.setState(0xb64d, 0x267, 0x4320, 0x4b00, 0x6506, 0xfc68, 0x0, 0x0);
        gbc.writeMem(0xb64d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x267);
        EXPECT(gbc.pc(), 0xb64f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb64d), 0xcb);
        EXPECT(gbc.readMem(0xb64e), 0x65);
        // CB 65 01ED
        gbc.setState(0x76c8, 0xf38d, 0x88e0, 0x127d, 0x6c25, 0x3ce2, 0x1, 0x0);
        gbc.writeMem(0x76c8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf38d);
        EXPECT(gbc.pc(), 0x76ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01EE
        gbc.setState(0xeaaa, 0x81e9, 0x7110, 0x6450, 0xa74a, 0x3277, 0x1, 0x0);
        gbc.writeMem(0xeaaa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x81e9);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaa), 0xcb);
        EXPECT(gbc.readMem(0xeaab), 0x65);
        // CB 65 01F0
        gbc.setState(0xe4b9, 0x1871, 0x6780, 0xc5ba, 0xf974, 0xbca2, 0x0, 0x1);
        gbc.writeMem(0xe4b9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1871);
        EXPECT(gbc.pc(), 0xe4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4b9), 0xcb);
        EXPECT(gbc.readMem(0xe4ba), 0x65);
        // CB 65 01F1
        gbc.setState(0x75d8, 0x6230, 0xa800, 0x4ef3, 0x88c6, 0x5ca8, 0x1, 0x1);
        gbc.writeMem(0x75d8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6230);
        EXPECT(gbc.pc(), 0x75da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01F2
        gbc.setState(0x7ce8, 0xd2f1, 0x1830, 0x59ae, 0xa0a5, 0x2369, 0x1, 0x1);
        gbc.writeMem(0x7ce8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd2f1);
        EXPECT(gbc.pc(), 0x7cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01F3
        gbc.setState(0x406f, 0xc302, 0x3a00, 0xa656, 0x55a7, 0x3a1d, 0x1, 0x0);
        gbc.writeMem(0x406f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc302);
        EXPECT(gbc.pc(), 0x4071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01F4
        gbc.setState(0x2464, 0x608f, 0xcfb0, 0xbd9c, 0x26bd, 0x8c7b, 0x1, 0x0);
        gbc.writeMem(0x2464, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x608f);
        EXPECT(gbc.pc(), 0x2466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01F6
        gbc.setState(0x827a, 0xf4c2, 0x2800, 0xbeef, 0x9b26, 0x5e0d, 0x0, 0x0);
        gbc.writeMem(0x827a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf4c2);
        EXPECT(gbc.pc(), 0x827c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x827a), 0xcb);
        EXPECT(gbc.readMem(0x827b), 0x65);
        // CB 65 01F7
        gbc.setState(0x3c44, 0x30db, 0x30b0, 0xb2fa, 0x2f1, 0xd17e, 0x1, 0x0);
        gbc.writeMem(0x3c44, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x30db);
        EXPECT(gbc.pc(), 0x3c46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 01F8
        gbc.setState(0xc388, 0x28d4, 0x6450, 0x6fba, 0xc54f, 0xf552, 0x0, 0x1);
        gbc.writeMem(0xc388, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x28d4);
        EXPECT(gbc.pc(), 0xc38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc388), 0xcb);
        EXPECT(gbc.readMem(0xc389), 0x65);
        // CB 65 01F9
        gbc.setState(0x9914, 0x4c8b, 0x4fd0, 0x1dba, 0x7e3f, 0xcd9a, 0x1, 0x1);
        gbc.writeMem(0x9914, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4c8b);
        EXPECT(gbc.pc(), 0x9916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9914), 0xcb);
        EXPECT(gbc.readMem(0x9915), 0x65);
        // CB 65 01FA
        gbc.setState(0xcf4c, 0x9808, 0x41e0, 0xe19a, 0x97e4, 0x4291, 0x0, 0x0);
        gbc.writeMem(0xcf4c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0xcf4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4c), 0xcb);
        EXPECT(gbc.readMem(0xcf4d), 0x65);
        // CB 65 01FB
        gbc.setState(0x48ec, 0x7c98, 0x6e80, 0x1a93, 0xb671, 0x2c41, 0x1, 0x0);
        gbc.writeMem(0x48ec, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7c98);
        EXPECT(gbc.pc(), 0x48ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01FD
        gbc.setState(0x9c2a, 0x6e5f, 0x89c0, 0x2902, 0xf1b8, 0x8a, 0x0, 0x1);
        gbc.writeMem(0x9c2a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6e5f);
        EXPECT(gbc.pc(), 0x9c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c2a), 0xcb);
        EXPECT(gbc.readMem(0x9c2b), 0x65);
        // CB 65 01FE
        gbc.setState(0x633d, 0xef5c, 0x2b80, 0x65b0, 0x16f5, 0xab5b, 0x1, 0x0);
        gbc.writeMem(0x633d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xef5c);
        EXPECT(gbc.pc(), 0x633f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 01FF
        gbc.setState(0x445c, 0xf480, 0x5ce0, 0x8d05, 0x4973, 0x397, 0x0, 0x0);
        gbc.writeMem(0x445c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf480);
        EXPECT(gbc.pc(), 0x445e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0200
        gbc.setState(0x90ba, 0x9d4f, 0x6d0, 0xcb5e, 0xbc93, 0x1551, 0x0, 0x1);
        gbc.writeMem(0x90ba, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9d4f);
        EXPECT(gbc.pc(), 0x90bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ba), 0xcb);
        EXPECT(gbc.readMem(0x90bb), 0x65);
        // CB 65 0201
        gbc.setState(0xa868, 0xb0f5, 0xb000, 0x3c0f, 0xc987, 0xf0b1, 0x0, 0x1);
        gbc.writeMem(0xa868, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0xa86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa868), 0xcb);
        EXPECT(gbc.readMem(0xa869), 0x65);
        // CB 65 0202
        gbc.setState(0x6784, 0xfe31, 0xc900, 0xd36b, 0x752, 0xd3a3, 0x0, 0x0);
        gbc.writeMem(0x6784, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfe31);
        EXPECT(gbc.pc(), 0x6786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0203
        gbc.setState(0x559a, 0x933b, 0xb870, 0xec1d, 0xe190, 0x4fa2, 0x0, 0x0);
        gbc.writeMem(0x559a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x933b);
        EXPECT(gbc.pc(), 0x559c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0204
        gbc.setState(0x8af2, 0x8438, 0xb070, 0xa61f, 0xa36a, 0x49ff, 0x1, 0x1);
        gbc.writeMem(0x8af2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8438);
        EXPECT(gbc.pc(), 0x8af4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af2), 0xcb);
        EXPECT(gbc.readMem(0x8af3), 0x65);
        // CB 65 0205
        gbc.setState(0x8b7, 0x1cd8, 0x1860, 0x7f2, 0xaff0, 0xad49, 0x1, 0x0);
        gbc.writeMem(0x8b7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1cd8);
        EXPECT(gbc.pc(), 0x8b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0206
        gbc.setState(0x4c00, 0xc089, 0x6020, 0xbfc, 0x6896, 0x9918, 0x1, 0x1);
        gbc.writeMem(0x4c00, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc089);
        EXPECT(gbc.pc(), 0x4c02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0207
        gbc.setState(0x8a4f, 0x402d, 0x8790, 0xd6a2, 0x2f4f, 0x622c, 0x0, 0x1);
        gbc.writeMem(0x8a4f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x402d);
        EXPECT(gbc.pc(), 0x8a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4f), 0xcb);
        EXPECT(gbc.readMem(0x8a50), 0x65);
        // CB 65 0208
        gbc.setState(0x38d, 0xb2d9, 0x42a0, 0xd881, 0x86b2, 0x1946, 0x1, 0x0);
        gbc.writeMem(0x38d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb2d9);
        EXPECT(gbc.pc(), 0x38f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0209
        gbc.setState(0xc338, 0xe174, 0x6e80, 0x3bef, 0xcbd6, 0x7a7f, 0x1, 0x1);
        gbc.writeMem(0xc338, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe174);
        EXPECT(gbc.pc(), 0xc33a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc338), 0xcb);
        EXPECT(gbc.readMem(0xc339), 0x65);
        // CB 65 020A
        gbc.setState(0x92d5, 0xeea6, 0x7150, 0xf332, 0xbcba, 0xb36f, 0x0, 0x0);
        gbc.writeMem(0x92d5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xeea6);
        EXPECT(gbc.pc(), 0x92d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d5), 0xcb);
        EXPECT(gbc.readMem(0x92d6), 0x65);
        // CB 65 020B
        gbc.setState(0x735e, 0x3ebc, 0xd0f0, 0xd9e1, 0xb634, 0xe316, 0x1, 0x1);
        gbc.writeMem(0x735e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3ebc);
        EXPECT(gbc.pc(), 0x7360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 020C
        gbc.setState(0xe821, 0x4be1, 0x6550, 0x6fa4, 0x6f82, 0x2184, 0x0, 0x1);
        gbc.writeMem(0xe821, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4be1);
        EXPECT(gbc.pc(), 0xe823);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe821), 0xcb);
        EXPECT(gbc.readMem(0xe822), 0x65);
        // CB 65 020D
        gbc.setState(0xe713, 0x771a, 0x4740, 0x5cee, 0x58a9, 0x8e35, 0x1, 0x0);
        gbc.writeMem(0xe713, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x771a);
        EXPECT(gbc.pc(), 0xe715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe713), 0xcb);
        EXPECT(gbc.readMem(0xe714), 0x65);
        // CB 65 020E
        gbc.setState(0x8223, 0xa4b3, 0xa70, 0x8dc5, 0xa4ce, 0xbfbf, 0x1, 0x0);
        gbc.writeMem(0x8223, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa4b3);
        EXPECT(gbc.pc(), 0x8225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8223), 0xcb);
        EXPECT(gbc.readMem(0x8224), 0x65);
        // CB 65 020F
        gbc.setState(0x697f, 0xf30b, 0x5140, 0x3833, 0x9cb5, 0xe189, 0x1, 0x0);
        gbc.writeMem(0x697f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf30b);
        EXPECT(gbc.pc(), 0x6981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0210
        gbc.setState(0x1556, 0xcffa, 0x3e10, 0x70f, 0x5f87, 0xc580, 0x0, 0x1);
        gbc.writeMem(0x1556, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcffa);
        EXPECT(gbc.pc(), 0x1558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0211
        gbc.setState(0x5242, 0xe375, 0x60f0, 0xe581, 0x1fb1, 0x50bb, 0x1, 0x0);
        gbc.writeMem(0x5242, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe375);
        EXPECT(gbc.pc(), 0x5244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0212
        gbc.setState(0xc48f, 0x3786, 0xf120, 0x4062, 0x5550, 0xef35, 0x1, 0x0);
        gbc.writeMem(0xc48f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3786);
        EXPECT(gbc.pc(), 0xc491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc48f), 0xcb);
        EXPECT(gbc.readMem(0xc490), 0x65);
        // CB 65 0213
        gbc.setState(0xc943, 0x78ab, 0xc6b0, 0xe6f5, 0xa96f, 0xed34, 0x0, 0x0);
        gbc.writeMem(0xc943, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x78ab);
        EXPECT(gbc.pc(), 0xc945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc943), 0xcb);
        EXPECT(gbc.readMem(0xc944), 0x65);
        // CB 65 0214
        gbc.setState(0x7f96, 0x216c, 0x3450, 0xa83b, 0x875d, 0xccf6, 0x1, 0x1);
        gbc.writeMem(0x7f96, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x216c);
        EXPECT(gbc.pc(), 0x7f98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0215
        gbc.setState(0x568c, 0x8195, 0x53f0, 0x8d20, 0x4ff9, 0x5660, 0x1, 0x0);
        gbc.writeMem(0x568c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8195);
        EXPECT(gbc.pc(), 0x568e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0216
        gbc.setState(0x8cee, 0xca61, 0xfa40, 0x696b, 0x507d, 0x3d1f, 0x1, 0x1);
        gbc.writeMem(0x8cee, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xca61);
        EXPECT(gbc.pc(), 0x8cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cee), 0xcb);
        EXPECT(gbc.readMem(0x8cef), 0x65);
        // CB 65 0217
        gbc.setState(0x5345, 0x92e5, 0xd450, 0x5bd1, 0x2928, 0x6630, 0x0, 0x0);
        gbc.writeMem(0x5345, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x92e5);
        EXPECT(gbc.pc(), 0x5347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0218
        gbc.setState(0x2da4, 0x2812, 0x880, 0xc408, 0xcef3, 0x8c76, 0x0, 0x0);
        gbc.writeMem(0x2da4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2812);
        EXPECT(gbc.pc(), 0x2da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0219
        gbc.setState(0x36dc, 0x1dad, 0x18f0, 0x8204, 0x2e20, 0xbfec, 0x0, 0x1);
        gbc.writeMem(0x36dc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1dad);
        EXPECT(gbc.pc(), 0x36de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 021A
        gbc.setState(0x6e23, 0xad2b, 0xf2b0, 0x9ca3, 0xcb2, 0x45de, 0x0, 0x0);
        gbc.writeMem(0x6e23, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xad2b);
        EXPECT(gbc.pc(), 0x6e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 021B
        gbc.setState(0xd979, 0xada, 0xa100, 0x339e, 0xcad1, 0xa0a6, 0x1, 0x1);
        gbc.writeMem(0xd979, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xada);
        EXPECT(gbc.pc(), 0xd97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd979), 0xcb);
        EXPECT(gbc.readMem(0xd97a), 0x65);
        // CB 65 021C
        gbc.setState(0x4a7d, 0xffe, 0xe840, 0xaeb3, 0x5a47, 0x640b, 0x0, 0x1);
        gbc.writeMem(0x4a7d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xffe);
        EXPECT(gbc.pc(), 0x4a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 021D
        gbc.setState(0xe6e7, 0xd10a, 0x94d0, 0x4e07, 0x83bb, 0x8bff, 0x1, 0x0);
        gbc.writeMem(0xe6e7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd10a);
        EXPECT(gbc.pc(), 0xe6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e7), 0xcb);
        EXPECT(gbc.readMem(0xe6e8), 0x65);
        // CB 65 021E
        gbc.setState(0xaa30, 0x1569, 0xe9d0, 0xf4ae, 0x1dd0, 0x21e, 0x0, 0x1);
        gbc.writeMem(0xaa30, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1569);
        EXPECT(gbc.pc(), 0xaa32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa30), 0xcb);
        EXPECT(gbc.readMem(0xaa31), 0x65);
        // CB 65 021F
        gbc.setState(0x1f67, 0x34b7, 0xf1f0, 0x5683, 0x71b9, 0x7c15, 0x0, 0x0);
        gbc.writeMem(0x1f67, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x34b7);
        EXPECT(gbc.pc(), 0x1f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0220
        gbc.setState(0x394a, 0x4864, 0x4c60, 0x3496, 0x67f6, 0x7f4f, 0x0, 0x1);
        gbc.writeMem(0x394a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4864);
        EXPECT(gbc.pc(), 0x394c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0221
        gbc.setState(0x302a, 0xb3b3, 0x5bb0, 0x697a, 0x2c8c, 0xd806, 0x0, 0x1);
        gbc.writeMem(0x302a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb3b3);
        EXPECT(gbc.pc(), 0x302c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0222
        gbc.setState(0xb880, 0x4db4, 0xa310, 0x34c1, 0x6b54, 0xc852, 0x0, 0x1);
        gbc.writeMem(0xb880, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4db4);
        EXPECT(gbc.pc(), 0xb882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb880), 0xcb);
        EXPECT(gbc.readMem(0xb881), 0x65);
        // CB 65 0223
        gbc.setState(0x6824, 0x6c6a, 0x80b0, 0x8dac, 0xf1b8, 0x32fd, 0x0, 0x0);
        gbc.writeMem(0x6824, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6c6a);
        EXPECT(gbc.pc(), 0x6826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0224
        gbc.setState(0x4f61, 0x9cb3, 0xe640, 0xc466, 0xbd3e, 0x667b, 0x0, 0x0);
        gbc.writeMem(0x4f61, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9cb3);
        EXPECT(gbc.pc(), 0x4f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0225
        gbc.setState(0x1272, 0x389b, 0x91a0, 0xedcb, 0x2163, 0xb27, 0x0, 0x1);
        gbc.writeMem(0x1272, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x389b);
        EXPECT(gbc.pc(), 0x1274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0226
        gbc.setState(0x6430, 0x12e9, 0xde00, 0xae6a, 0x52d4, 0x2da1, 0x1, 0x0);
        gbc.writeMem(0x6430, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x12e9);
        EXPECT(gbc.pc(), 0x6432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0227
        gbc.setState(0x8da3, 0xbf57, 0x9900, 0x9708, 0x8f58, 0xd2fd, 0x1, 0x1);
        gbc.writeMem(0x8da3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbf57);
        EXPECT(gbc.pc(), 0x8da5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8da3), 0xcb);
        EXPECT(gbc.readMem(0x8da4), 0x65);
        // CB 65 0228
        gbc.setState(0xc1e, 0x2950, 0xeea0, 0xea2e, 0xf3b5, 0x1a92, 0x0, 0x1);
        gbc.writeMem(0xc1e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2950);
        EXPECT(gbc.pc(), 0xc20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0229
        gbc.setState(0x1162, 0xd97f, 0xc600, 0x1879, 0x994c, 0xb165, 0x0, 0x1);
        gbc.writeMem(0x1162, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xd97f);
        EXPECT(gbc.pc(), 0x1164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 022A
        gbc.setState(0x8068, 0x109e, 0x4930, 0x8a80, 0x6a8d, 0x2e46, 0x0, 0x0);
        gbc.writeMem(0x8068, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x109e);
        EXPECT(gbc.pc(), 0x806a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8068), 0xcb);
        EXPECT(gbc.readMem(0x8069), 0x65);
        // CB 65 022B
        gbc.setState(0xca8c, 0x52ad, 0xd650, 0x28d3, 0x11a0, 0x1ae, 0x1, 0x1);
        gbc.writeMem(0xca8c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x52ad);
        EXPECT(gbc.pc(), 0xca8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8c), 0xcb);
        EXPECT(gbc.readMem(0xca8d), 0x65);
        // CB 65 022C
        gbc.setState(0x9bf8, 0x6104, 0x56b0, 0x6e82, 0xdca1, 0xd54b, 0x0, 0x0);
        gbc.writeMem(0x9bf8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6104);
        EXPECT(gbc.pc(), 0x9bfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf8), 0xcb);
        EXPECT(gbc.readMem(0x9bf9), 0x65);
        // CB 65 022D
        gbc.setState(0x650e, 0x5f59, 0x6200, 0xc184, 0xe511, 0xa507, 0x0, 0x0);
        gbc.writeMem(0x650e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5f59);
        EXPECT(gbc.pc(), 0x6510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 022F
        gbc.setState(0x693a, 0x3081, 0x4a00, 0xee18, 0xf164, 0xa96e, 0x1, 0x1);
        gbc.writeMem(0x693a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3081);
        EXPECT(gbc.pc(), 0x693c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0230
        gbc.setState(0xbd3d, 0xab08, 0x72d0, 0x2272, 0xbb56, 0x7ba9, 0x0, 0x1);
        gbc.writeMem(0xbd3d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xab08);
        EXPECT(gbc.pc(), 0xbd3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3d), 0xcb);
        EXPECT(gbc.readMem(0xbd3e), 0x65);
        // CB 65 0232
        gbc.setState(0x9870, 0x7552, 0xdfc0, 0x88fc, 0xf860, 0x4dd0, 0x0, 0x0);
        gbc.writeMem(0x9870, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7552);
        EXPECT(gbc.pc(), 0x9872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9870), 0xcb);
        EXPECT(gbc.readMem(0x9871), 0x65);
        // CB 65 0233
        gbc.setState(0xb696, 0x48db, 0x6870, 0xb610, 0x4d77, 0x82c, 0x0, 0x0);
        gbc.writeMem(0xb696, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x48db);
        EXPECT(gbc.pc(), 0xb698);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb696), 0xcb);
        EXPECT(gbc.readMem(0xb697), 0x65);
        // CB 65 0234
        gbc.setState(0x774b, 0x949f, 0xfcd0, 0x4fb, 0xb83d, 0xa75c, 0x1, 0x0);
        gbc.writeMem(0x774b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x949f);
        EXPECT(gbc.pc(), 0x774d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0236
        gbc.setState(0x1ece, 0xb76d, 0xa70, 0xfe09, 0x13fd, 0x1913, 0x0, 0x0);
        gbc.writeMem(0x1ece, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb76d);
        EXPECT(gbc.pc(), 0x1ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0237
        gbc.setState(0x9944, 0x9a9d, 0xb700, 0x9b4c, 0xc5ab, 0x5390, 0x1, 0x1);
        gbc.writeMem(0x9944, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9a9d);
        EXPECT(gbc.pc(), 0x9946);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9944), 0xcb);
        EXPECT(gbc.readMem(0x9945), 0x65);
        // CB 65 0238
        gbc.setState(0xdec, 0x22e4, 0x8730, 0xf579, 0xfd79, 0x4515, 0x0, 0x1);
        gbc.writeMem(0xdec, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x22e4);
        EXPECT(gbc.pc(), 0xdee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0239
        gbc.setState(0x45bc, 0x5651, 0x3a70, 0xcee0, 0x4e1f, 0xd8, 0x0, 0x1);
        gbc.writeMem(0x45bc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5651);
        EXPECT(gbc.pc(), 0x45be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 023A
        gbc.setState(0x825c, 0x4b41, 0xcb80, 0xbbf1, 0xd9f4, 0x339b, 0x0, 0x0);
        gbc.writeMem(0x825c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4b41);
        EXPECT(gbc.pc(), 0x825e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x825c), 0xcb);
        EXPECT(gbc.readMem(0x825d), 0x65);
        // CB 65 023B
        gbc.setState(0xd7b5, 0x802b, 0x9a70, 0x4ac4, 0xcb50, 0x2a57, 0x0, 0x0);
        gbc.writeMem(0xd7b5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x802b);
        EXPECT(gbc.pc(), 0xd7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b5), 0xcb);
        EXPECT(gbc.readMem(0xd7b6), 0x65);
        // CB 65 023C
        gbc.setState(0xa99e, 0x2244, 0x40, 0x42cf, 0x1593, 0xa25f, 0x1, 0x0);
        gbc.writeMem(0xa99e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2244);
        EXPECT(gbc.pc(), 0xa9a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99e), 0xcb);
        EXPECT(gbc.readMem(0xa99f), 0x65);
        // CB 65 023D
        gbc.setState(0xc7d8, 0xb9f4, 0xc520, 0x60d, 0xc418, 0x280, 0x1, 0x1);
        gbc.writeMem(0xc7d8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb9f4);
        EXPECT(gbc.pc(), 0xc7da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d8), 0xcb);
        EXPECT(gbc.readMem(0xc7d9), 0x65);
        // CB 65 023E
        gbc.setState(0x1641, 0xd4f3, 0x2a20, 0x2532, 0x2cbf, 0xb3ba, 0x1, 0x0);
        gbc.writeMem(0x1641, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd4f3);
        EXPECT(gbc.pc(), 0x1643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 023F
        gbc.setState(0x51c1, 0x1a3, 0x5320, 0xa657, 0xbd6c, 0xbd63, 0x1, 0x0);
        gbc.writeMem(0x51c1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1a3);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0240
        gbc.setState(0x4f34, 0x9abb, 0x1610, 0x9713, 0xfbef, 0x6627, 0x1, 0x0);
        gbc.writeMem(0x4f34, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9abb);
        EXPECT(gbc.pc(), 0x4f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0241
        gbc.setState(0x6733, 0xa177, 0xad90, 0xec4b, 0xaea5, 0x2c21, 0x0, 0x0);
        gbc.writeMem(0x6733, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa177);
        EXPECT(gbc.pc(), 0x6735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0243
        gbc.setState(0xe48c, 0xf9e, 0x1dd0, 0xc675, 0xc2b2, 0xe02, 0x0, 0x0);
        gbc.writeMem(0xe48c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf9e);
        EXPECT(gbc.pc(), 0xe48e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48c), 0xcb);
        EXPECT(gbc.readMem(0xe48d), 0x65);
        // CB 65 0244
        gbc.setState(0xb9cc, 0x130, 0xc900, 0x6627, 0xbc6f, 0x4f83, 0x0, 0x0);
        gbc.writeMem(0xb9cc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x130);
        EXPECT(gbc.pc(), 0xb9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cc), 0xcb);
        EXPECT(gbc.readMem(0xb9cd), 0x65);
        // CB 65 0245
        gbc.setState(0x2e63, 0x8492, 0x6920, 0x8608, 0x76c, 0x72ba, 0x1, 0x1);
        gbc.writeMem(0x2e63, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8492);
        EXPECT(gbc.pc(), 0x2e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0246
        gbc.setState(0x1b96, 0xfd, 0x1400, 0x47a9, 0xd6a9, 0xce0c, 0x1, 0x0);
        gbc.writeMem(0x1b96, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xfd);
        EXPECT(gbc.pc(), 0x1b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0247
        gbc.setState(0xa64f, 0x9e9f, 0x6bd0, 0x8b2d, 0x6a96, 0x4a53, 0x0, 0x0);
        gbc.writeMem(0xa64f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9e9f);
        EXPECT(gbc.pc(), 0xa651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa64f), 0xcb);
        EXPECT(gbc.readMem(0xa650), 0x65);
        // CB 65 0248
        gbc.setState(0x4bb, 0x4992, 0x4bd0, 0xc307, 0x9d26, 0xb08b, 0x0, 0x0);
        gbc.writeMem(0x4bb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4992);
        EXPECT(gbc.pc(), 0x4bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0249
        gbc.setState(0xede1, 0x6ae, 0xaae0, 0x6f8e, 0x9a3a, 0x7691, 0x1, 0x0);
        gbc.writeMem(0xede1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6ae);
        EXPECT(gbc.pc(), 0xede3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede1), 0xcb);
        EXPECT(gbc.readMem(0xede2), 0x65);
        // CB 65 024A
        gbc.setState(0x8c0f, 0x31c6, 0x4ee0, 0x25de, 0xdf16, 0xa02c, 0x0, 0x1);
        gbc.writeMem(0x8c0f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x31c6);
        EXPECT(gbc.pc(), 0x8c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0f), 0xcb);
        EXPECT(gbc.readMem(0x8c10), 0x65);
        // CB 65 024B
        gbc.setState(0x9b69, 0xe649, 0x3b0, 0x865e, 0x6126, 0xef97, 0x1, 0x1);
        gbc.writeMem(0x9b69, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe649);
        EXPECT(gbc.pc(), 0x9b6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b69), 0xcb);
        EXPECT(gbc.readMem(0x9b6a), 0x65);
        // CB 65 024D
        gbc.setState(0x9421, 0xc57, 0x4b20, 0x6366, 0xec1e, 0x7719, 0x1, 0x1);
        gbc.writeMem(0x9421, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc57);
        EXPECT(gbc.pc(), 0x9423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9421), 0xcb);
        EXPECT(gbc.readMem(0x9422), 0x65);
        // CB 65 024E
        gbc.setState(0x944e, 0x12c1, 0x4dd0, 0x3990, 0xd867, 0x91da, 0x0, 0x0);
        gbc.writeMem(0x944e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x12c1);
        EXPECT(gbc.pc(), 0x9450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944e), 0xcb);
        EXPECT(gbc.readMem(0x944f), 0x65);
        // CB 65 024F
        gbc.setState(0x4d66, 0x96fa, 0x8ef0, 0x3f87, 0xfb29, 0xb927, 0x0, 0x1);
        gbc.writeMem(0x4d66, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x96fa);
        EXPECT(gbc.pc(), 0x4d68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0250
        gbc.setState(0x7496, 0x6f2c, 0x6460, 0xf80b, 0xf472, 0xdf73, 0x1, 0x0);
        gbc.writeMem(0x7496, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6f2c);
        EXPECT(gbc.pc(), 0x7498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0251
        gbc.setState(0x452, 0x9875, 0xdd50, 0x3d1a, 0x7643, 0xf3ac, 0x1, 0x0);
        gbc.writeMem(0x452, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9875);
        EXPECT(gbc.pc(), 0x454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0252
        gbc.setState(0xc5d7, 0x470d, 0x5420, 0x1960, 0x200f, 0x76e3, 0x1, 0x1);
        gbc.writeMem(0xc5d7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x470d);
        EXPECT(gbc.pc(), 0xc5d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d7), 0xcb);
        EXPECT(gbc.readMem(0xc5d8), 0x65);
        // CB 65 0253
        gbc.setState(0xb9bc, 0x47f2, 0x4550, 0x9551, 0x77d3, 0x1060, 0x1, 0x0);
        gbc.writeMem(0xb9bc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x47f2);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bc), 0xcb);
        EXPECT(gbc.readMem(0xb9bd), 0x65);
        // CB 65 0254
        gbc.setState(0x2f4, 0x4747, 0xa90, 0x7856, 0xd03f, 0xd108, 0x0, 0x1);
        gbc.writeMem(0x2f4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4747);
        EXPECT(gbc.pc(), 0x2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0255
        gbc.setState(0x478d, 0x1a5a, 0xfab0, 0x52ad, 0xa7df, 0xecc9, 0x1, 0x1);
        gbc.writeMem(0x478d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1a5a);
        EXPECT(gbc.pc(), 0x478f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0256
        gbc.setState(0x3f1e, 0xca80, 0x9d40, 0x42ed, 0x67d7, 0xf1a3, 0x1, 0x0);
        gbc.writeMem(0x3f1e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xca80);
        EXPECT(gbc.pc(), 0x3f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0257
        gbc.setState(0x88d8, 0x9257, 0xb420, 0x475c, 0x9fad, 0x177e, 0x1, 0x0);
        gbc.writeMem(0x88d8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9257);
        EXPECT(gbc.pc(), 0x88da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d8), 0xcb);
        EXPECT(gbc.readMem(0x88d9), 0x65);
        // CB 65 0258
        gbc.setState(0x9740, 0x72f0, 0x7da0, 0x14ab, 0xed63, 0x8193, 0x1, 0x1);
        gbc.writeMem(0x9740, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x72f0);
        EXPECT(gbc.pc(), 0x9742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9740), 0xcb);
        EXPECT(gbc.readMem(0x9741), 0x65);
        // CB 65 025A
        gbc.setState(0xa57f, 0x4c6e, 0x60, 0x64c4, 0x36b8, 0x45b3, 0x1, 0x0);
        gbc.writeMem(0xa57f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4c6e);
        EXPECT(gbc.pc(), 0xa581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa57f), 0xcb);
        EXPECT(gbc.readMem(0xa580), 0x65);
        // CB 65 025B
        gbc.setState(0xa494, 0xd01, 0x5ef0, 0xe99f, 0x63ae, 0xab31, 0x0, 0x1);
        gbc.writeMem(0xa494, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd01);
        EXPECT(gbc.pc(), 0xa496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa494), 0xcb);
        EXPECT(gbc.readMem(0xa495), 0x65);
        // CB 65 025C
        gbc.setState(0x56af, 0x4b4f, 0xbd70, 0x1285, 0x1a25, 0x766e, 0x1, 0x0);
        gbc.writeMem(0x56af, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4b4f);
        EXPECT(gbc.pc(), 0x56b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 025D
        gbc.setState(0x7bdd, 0x129c, 0x5270, 0x3027, 0x6f34, 0x913e, 0x0, 0x0);
        gbc.writeMem(0x7bdd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x129c);
        EXPECT(gbc.pc(), 0x7bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 025E
        gbc.setState(0x5196, 0x5558, 0x7410, 0xdc3a, 0x4ead, 0x193e, 0x1, 0x0);
        gbc.writeMem(0x5196, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5558);
        EXPECT(gbc.pc(), 0x5198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 025F
        gbc.setState(0xd917, 0x526, 0x4220, 0x65ea, 0x20c1, 0xe8f5, 0x0, 0x1);
        gbc.writeMem(0xd917, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x526);
        EXPECT(gbc.pc(), 0xd919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd917), 0xcb);
        EXPECT(gbc.readMem(0xd918), 0x65);
        // CB 65 0260
        gbc.setState(0x4550, 0x3d6b, 0x2b80, 0xf27b, 0x2a05, 0x4dfc, 0x1, 0x1);
        gbc.writeMem(0x4550, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3d6b);
        EXPECT(gbc.pc(), 0x4552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0261
        gbc.setState(0x81a, 0xf9fd, 0x5090, 0x5a8f, 0x6225, 0xcf24, 0x1, 0x1);
        gbc.writeMem(0x81a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf9fd);
        EXPECT(gbc.pc(), 0x81c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0262
        gbc.setState(0xcc1a, 0xf88, 0xd4f0, 0xb682, 0xb3, 0x1a9c, 0x1, 0x0);
        gbc.writeMem(0xcc1a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf88);
        EXPECT(gbc.pc(), 0xcc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1a), 0xcb);
        EXPECT(gbc.readMem(0xcc1b), 0x65);
        // CB 65 0263
        gbc.setState(0x3f4d, 0x8f5a, 0x5190, 0xd830, 0x554b, 0x6abe, 0x0, 0x1);
        gbc.writeMem(0x3f4d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8f5a);
        EXPECT(gbc.pc(), 0x3f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0264
        gbc.setState(0x3c15, 0x1d53, 0x4130, 0xe4f1, 0x12aa, 0x31a0, 0x1, 0x1);
        gbc.writeMem(0x3c15, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1d53);
        EXPECT(gbc.pc(), 0x3c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0265
        gbc.setState(0x37e4, 0x61f3, 0x4ea0, 0x6e97, 0x59b6, 0x4c0b, 0x0, 0x1);
        gbc.writeMem(0x37e4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x61f3);
        EXPECT(gbc.pc(), 0x37e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0266
        gbc.setState(0x6f9a, 0x7d97, 0x92c0, 0x1b08, 0x5c31, 0x341e, 0x1, 0x1);
        gbc.writeMem(0x6f9a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7d97);
        EXPECT(gbc.pc(), 0x6f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0267
        gbc.setState(0x7a, 0x8558, 0x6850, 0xa254, 0x4041, 0x8a6, 0x1, 0x1);
        gbc.writeMem(0x7a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8558);
        EXPECT(gbc.pc(), 0x7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0268
        gbc.setState(0x3aa1, 0x663, 0x760, 0xbfdc, 0xac9f, 0x1ebb, 0x1, 0x0);
        gbc.writeMem(0x3aa1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x663);
        EXPECT(gbc.pc(), 0x3aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0269
        gbc.setState(0xe921, 0x23c2, 0x70, 0x2db0, 0x2fcf, 0x202b, 0x1, 0x1);
        gbc.writeMem(0xe921, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x23c2);
        EXPECT(gbc.pc(), 0xe923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe921), 0xcb);
        EXPECT(gbc.readMem(0xe922), 0x65);
        // CB 65 026A
        gbc.setState(0xc00d, 0x9cf1, 0xe350, 0x1a99, 0x3825, 0x5564, 0x0, 0x0);
        gbc.writeMem(0xc00d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9cf1);
        EXPECT(gbc.pc(), 0xc00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc00d), 0xcb);
        EXPECT(gbc.readMem(0xc00e), 0x65);
        // CB 65 026B
        gbc.setState(0x6c4, 0x4136, 0xfd40, 0x4692, 0x8d6e, 0x1451, 0x0, 0x0);
        gbc.writeMem(0x6c4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x4136);
        EXPECT(gbc.pc(), 0x6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 026C
        gbc.setState(0xe93d, 0x30f0, 0x93e0, 0xb940, 0xec18, 0xdac7, 0x1, 0x1);
        gbc.writeMem(0xe93d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x30f0);
        EXPECT(gbc.pc(), 0xe93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93d), 0xcb);
        EXPECT(gbc.readMem(0xe93e), 0x65);
        // CB 65 026D
        gbc.setState(0x8ff1, 0x5f22, 0xad10, 0x24f9, 0xded8, 0xfd82, 0x1, 0x1);
        gbc.writeMem(0x8ff1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5f22);
        EXPECT(gbc.pc(), 0x8ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ff1), 0xcb);
        EXPECT(gbc.readMem(0x8ff2), 0x65);
        // CB 65 026E
        gbc.setState(0x8caa, 0x5cfd, 0xd320, 0x1792, 0xda31, 0x760e, 0x0, 0x1);
        gbc.writeMem(0x8caa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5cfd);
        EXPECT(gbc.pc(), 0x8cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8caa), 0xcb);
        EXPECT(gbc.readMem(0x8cab), 0x65);
        // CB 65 026F
        gbc.setState(0x2912, 0x5fe, 0x37f0, 0xb667, 0xc909, 0x48e2, 0x1, 0x0);
        gbc.writeMem(0x2912, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5fe);
        EXPECT(gbc.pc(), 0x2914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0270
        gbc.setState(0xa98e, 0x677c, 0xcca0, 0xb08c, 0xfe91, 0xb1b, 0x0, 0x0);
        gbc.writeMem(0xa98e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x677c);
        EXPECT(gbc.pc(), 0xa990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98e), 0xcb);
        EXPECT(gbc.readMem(0xa98f), 0x65);
        // CB 65 0271
        gbc.setState(0x5877, 0x7c24, 0xa30, 0x7236, 0x695b, 0xbce5, 0x1, 0x1);
        gbc.writeMem(0x5877, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7c24);
        EXPECT(gbc.pc(), 0x5879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0272
        gbc.setState(0xdce9, 0x3be8, 0x68e0, 0x59e6, 0x14ab, 0xdd00, 0x1, 0x1);
        gbc.writeMem(0xdce9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3be8);
        EXPECT(gbc.pc(), 0xdceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce9), 0xcb);
        EXPECT(gbc.readMem(0xdcea), 0x65);
        // CB 65 0273
        gbc.setState(0xee2f, 0x9bea, 0xf800, 0xd57c, 0xb5eb, 0x4696, 0x0, 0x0);
        gbc.writeMem(0xee2f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9bea);
        EXPECT(gbc.pc(), 0xee31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee2f), 0xcb);
        EXPECT(gbc.readMem(0xee30), 0x65);
        // CB 65 0274
        gbc.setState(0x28c, 0xc76b, 0xbd60, 0x48d, 0xc65, 0x668a, 0x1, 0x1);
        gbc.writeMem(0x28c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc76b);
        EXPECT(gbc.pc(), 0x28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0275
        gbc.setState(0x9214, 0xaf15, 0xbc60, 0x5699, 0xafad, 0xcabd, 0x1, 0x1);
        gbc.writeMem(0x9214, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xaf15);
        EXPECT(gbc.pc(), 0x9216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9214), 0xcb);
        EXPECT(gbc.readMem(0x9215), 0x65);
        // CB 65 0276
        gbc.setState(0x3971, 0xdda5, 0xacd0, 0x9490, 0x2f26, 0x5d7, 0x1, 0x1);
        gbc.writeMem(0x3971, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdda5);
        EXPECT(gbc.pc(), 0x3973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0278
        gbc.setState(0x1972, 0xda27, 0x8700, 0xd509, 0x5793, 0xe44f, 0x0, 0x0);
        gbc.writeMem(0x1972, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xda27);
        EXPECT(gbc.pc(), 0x1974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0279
        gbc.setState(0x7645, 0x9e0, 0x8160, 0x6963, 0x271b, 0x1c10, 0x1, 0x0);
        gbc.writeMem(0x7645, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9e0);
        EXPECT(gbc.pc(), 0x7647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 027A
        gbc.setState(0xeb97, 0x2b2, 0x1880, 0x8911, 0x4826, 0x433, 0x1, 0x1);
        gbc.writeMem(0xeb97, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2b2);
        EXPECT(gbc.pc(), 0xeb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb97), 0xcb);
        EXPECT(gbc.readMem(0xeb98), 0x65);
        // CB 65 027B
        gbc.setState(0x86a4, 0x1271, 0xf6c0, 0xbd48, 0xb078, 0xa5fc, 0x1, 0x1);
        gbc.writeMem(0x86a4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1271);
        EXPECT(gbc.pc(), 0x86a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a4), 0xcb);
        EXPECT(gbc.readMem(0x86a5), 0x65);
        // CB 65 027C
        gbc.setState(0x4771, 0x55e8, 0xbac0, 0xb3de, 0x1747, 0x61d7, 0x1, 0x1);
        gbc.writeMem(0x4771, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x55e8);
        EXPECT(gbc.pc(), 0x4773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 027D
        gbc.setState(0x3970, 0x833e, 0x11c0, 0x9916, 0x9ab0, 0x31c9, 0x0, 0x1);
        gbc.writeMem(0x3970, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x833e);
        EXPECT(gbc.pc(), 0x3972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 027E
        gbc.setState(0x830e, 0x2012, 0xb3b0, 0xcab4, 0x3c64, 0x5c71, 0x0, 0x0);
        gbc.writeMem(0x830e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2012);
        EXPECT(gbc.pc(), 0x8310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830e), 0xcb);
        EXPECT(gbc.readMem(0x830f), 0x65);
        // CB 65 027F
        gbc.setState(0x983d, 0x9b51, 0x9bd0, 0xaa71, 0x31ae, 0xaab0, 0x1, 0x1);
        gbc.writeMem(0x983d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9b51);
        EXPECT(gbc.pc(), 0x983f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983d), 0xcb);
        EXPECT(gbc.readMem(0x983e), 0x65);
        // CB 65 0280
        gbc.setState(0x6666, 0xc6d8, 0x1040, 0xc0bc, 0xc808, 0x6ad, 0x1, 0x1);
        gbc.writeMem(0x6666, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc6d8);
        EXPECT(gbc.pc(), 0x6668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0281
        gbc.setState(0x39de, 0x6d10, 0x9fa0, 0x5ce, 0x1684, 0x5190, 0x1, 0x0);
        gbc.writeMem(0x39de, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6d10);
        EXPECT(gbc.pc(), 0x39e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0282
        gbc.setState(0x83aa, 0x1e2a, 0xbc70, 0xccbf, 0x6e9, 0xd034, 0x1, 0x0);
        gbc.writeMem(0x83aa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1e2a);
        EXPECT(gbc.pc(), 0x83ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83aa), 0xcb);
        EXPECT(gbc.readMem(0x83ab), 0x65);
        // CB 65 0283
        gbc.setState(0x8e2e, 0x942e, 0x1360, 0xd18, 0xb0df, 0xe5b8, 0x1, 0x0);
        gbc.writeMem(0x8e2e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x942e);
        EXPECT(gbc.pc(), 0x8e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e2e), 0xcb);
        EXPECT(gbc.readMem(0x8e2f), 0x65);
        // CB 65 0284
        gbc.setState(0x4407, 0x92c9, 0x9230, 0x5f76, 0x77ce, 0x41f5, 0x1, 0x0);
        gbc.writeMem(0x4407, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x92c9);
        EXPECT(gbc.pc(), 0x4409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0285
        gbc.setState(0xc2e7, 0xec2b, 0x42a0, 0xeb70, 0xf6e6, 0x74cc, 0x1, 0x1);
        gbc.writeMem(0xc2e7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xec2b);
        EXPECT(gbc.pc(), 0xc2e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2e7), 0xcb);
        EXPECT(gbc.readMem(0xc2e8), 0x65);
        // CB 65 0286
        gbc.setState(0xa437, 0xcc9c, 0x9d80, 0x2c96, 0xd052, 0x2d92, 0x0, 0x1);
        gbc.writeMem(0xa437, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcc9c);
        EXPECT(gbc.pc(), 0xa439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa437), 0xcb);
        EXPECT(gbc.readMem(0xa438), 0x65);
        // CB 65 0287
        gbc.setState(0x3a4a, 0xfd62, 0x6920, 0xb23, 0x55c3, 0xac05, 0x0, 0x1);
        gbc.writeMem(0x3a4a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfd62);
        EXPECT(gbc.pc(), 0x3a4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0288
        gbc.setState(0x7417, 0x9195, 0xa8c0, 0x5e9a, 0x92f4, 0x4c88, 0x0, 0x0);
        gbc.writeMem(0x7417, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9195);
        EXPECT(gbc.pc(), 0x7419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0289
        gbc.setState(0x8cdd, 0x6eec, 0x68e0, 0x4490, 0xea4c, 0x17a6, 0x0, 0x1);
        gbc.writeMem(0x8cdd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6eec);
        EXPECT(gbc.pc(), 0x8cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cdd), 0xcb);
        EXPECT(gbc.readMem(0x8cde), 0x65);
        // CB 65 028A
        gbc.setState(0xb287, 0x78d2, 0x3cc0, 0x82ea, 0x7ca7, 0x28de, 0x0, 0x0);
        gbc.writeMem(0xb287, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x78d2);
        EXPECT(gbc.pc(), 0xb289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb287), 0xcb);
        EXPECT(gbc.readMem(0xb288), 0x65);
        // CB 65 028B
        gbc.setState(0x1cc, 0xe1b4, 0x16a0, 0x6060, 0xf026, 0xfa91, 0x1, 0x1);
        gbc.writeMem(0x1cc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe1b4);
        EXPECT(gbc.pc(), 0x1ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 028C
        gbc.setState(0xc352, 0xa0b8, 0x2bf0, 0xde1a, 0x3919, 0xdb80, 0x0, 0x0);
        gbc.writeMem(0xc352, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa0b8);
        EXPECT(gbc.pc(), 0xc354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc352), 0xcb);
        EXPECT(gbc.readMem(0xc353), 0x65);
        // CB 65 028D
        gbc.setState(0x9f71, 0xea21, 0x98c0, 0x989a, 0xf8ed, 0xbf, 0x0, 0x0);
        gbc.writeMem(0x9f71, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xea21);
        EXPECT(gbc.pc(), 0x9f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f71), 0xcb);
        EXPECT(gbc.readMem(0x9f72), 0x65);
        // CB 65 028F
        gbc.setState(0xb43, 0xad7d, 0xcf30, 0xeeb4, 0x4b41, 0xa5a8, 0x0, 0x0);
        gbc.writeMem(0xb43, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xad7d);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0290
        gbc.setState(0xd030, 0xe9c6, 0xf10, 0x12ec, 0x7c64, 0xecf6, 0x1, 0x1);
        gbc.writeMem(0xd030, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe9c6);
        EXPECT(gbc.pc(), 0xd032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd030), 0xcb);
        EXPECT(gbc.readMem(0xd031), 0x65);
        // CB 65 0291
        gbc.setState(0x4958, 0x86e9, 0x9a70, 0xfc74, 0xa279, 0x94d7, 0x1, 0x0);
        gbc.writeMem(0x4958, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x86e9);
        EXPECT(gbc.pc(), 0x495a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0292
        gbc.setState(0xc6ea, 0xd2d5, 0x690, 0xea6b, 0x46ba, 0xbd84, 0x1, 0x1);
        gbc.writeMem(0xc6ea, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd2d5);
        EXPECT(gbc.pc(), 0xc6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ea), 0xcb);
        EXPECT(gbc.readMem(0xc6eb), 0x65);
        // CB 65 0293
        gbc.setState(0x171e, 0xfa4, 0xb440, 0x35e0, 0xfe59, 0x3e9a, 0x0, 0x0);
        gbc.writeMem(0x171e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfa4);
        EXPECT(gbc.pc(), 0x1720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0294
        gbc.setState(0x1ea3, 0x7356, 0xfba0, 0x4454, 0x7e15, 0x3dd8, 0x0, 0x1);
        gbc.writeMem(0x1ea3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7356);
        EXPECT(gbc.pc(), 0x1ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0295
        gbc.setState(0x4dda, 0xab60, 0x5ff0, 0xf02b, 0x6ed0, 0x52d6, 0x0, 0x0);
        gbc.writeMem(0x4dda, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xab60);
        EXPECT(gbc.pc(), 0x4ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0296
        gbc.setState(0x6017, 0x4ad7, 0xb900, 0x527, 0xc473, 0x41a9, 0x1, 0x0);
        gbc.writeMem(0x6017, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4ad7);
        EXPECT(gbc.pc(), 0x6019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0297
        gbc.setState(0x56fe, 0x6638, 0x91c0, 0x2cf7, 0xe5cb, 0x7375, 0x1, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6638);
        EXPECT(gbc.pc(), 0x5700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0298
        gbc.setState(0x196e, 0xe15e, 0x2a80, 0x444c, 0x3f18, 0x99be, 0x1, 0x0);
        gbc.writeMem(0x196e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe15e);
        EXPECT(gbc.pc(), 0x1970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0299
        gbc.setState(0x6fcb, 0xd8e3, 0x7d90, 0x2947, 0x8888, 0xd91c, 0x0, 0x1);
        gbc.writeMem(0x6fcb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd8e3);
        EXPECT(gbc.pc(), 0x6fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 029B
        gbc.setState(0xe81b, 0x9517, 0x9140, 0x268c, 0xacfd, 0xc1ba, 0x0, 0x1);
        gbc.writeMem(0xe81b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9517);
        EXPECT(gbc.pc(), 0xe81d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81b), 0xcb);
        EXPECT(gbc.readMem(0xe81c), 0x65);
        // CB 65 029C
        gbc.setState(0xc245, 0xb4b, 0x8cb0, 0x54da, 0xfc9e, 0x9bb5, 0x0, 0x1);
        gbc.writeMem(0xc245, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb4b);
        EXPECT(gbc.pc(), 0xc247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc245), 0xcb);
        EXPECT(gbc.readMem(0xc246), 0x65);
        // CB 65 029D
        gbc.setState(0x4bb9, 0x7a32, 0xc150, 0xb851, 0xe181, 0x26a1, 0x0, 0x0);
        gbc.writeMem(0x4bb9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7a32);
        EXPECT(gbc.pc(), 0x4bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 029E
        gbc.setState(0x971d, 0x9162, 0xe440, 0x1b4f, 0xe424, 0x94d7, 0x0, 0x0);
        gbc.writeMem(0x971d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9162);
        EXPECT(gbc.pc(), 0x971f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x971d), 0xcb);
        EXPECT(gbc.readMem(0x971e), 0x65);
        // CB 65 029F
        gbc.setState(0x5c7b, 0x7b6a, 0xaed0, 0x6d0c, 0x3e93, 0x46be, 0x0, 0x1);
        gbc.writeMem(0x5c7b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7b6a);
        EXPECT(gbc.pc(), 0x5c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02A0
        gbc.setState(0xad8, 0x6b39, 0x2780, 0x3807, 0x5a6c, 0x66f5, 0x1, 0x1);
        gbc.writeMem(0xad8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6b39);
        EXPECT(gbc.pc(), 0xada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02A1
        gbc.setState(0x4eb, 0x3e2a, 0x5900, 0x33e3, 0xea77, 0xbeea, 0x1, 0x0);
        gbc.writeMem(0x4eb, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3e2a);
        EXPECT(gbc.pc(), 0x4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02A2
        gbc.setState(0x6d10, 0x9e23, 0x3820, 0x84b1, 0x2625, 0xc8d0, 0x1, 0x0);
        gbc.writeMem(0x6d10, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9e23);
        EXPECT(gbc.pc(), 0x6d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02A3
        gbc.setState(0x75db, 0x8c41, 0x54d0, 0x4d24, 0xac86, 0xb35f, 0x0, 0x1);
        gbc.writeMem(0x75db, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8c41);
        EXPECT(gbc.pc(), 0x75dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02A4
        gbc.setState(0x93e7, 0x7fd0, 0xeca0, 0xa129, 0xb322, 0x9844, 0x0, 0x1);
        gbc.writeMem(0x93e7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7fd0);
        EXPECT(gbc.pc(), 0x93e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93e7), 0xcb);
        EXPECT(gbc.readMem(0x93e8), 0x65);
        // CB 65 02A5
        gbc.setState(0x321f, 0x4005, 0xded0, 0xc391, 0x186a, 0x68ab, 0x1, 0x1);
        gbc.writeMem(0x321f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4005);
        EXPECT(gbc.pc(), 0x3221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02A6
        gbc.setState(0xd336, 0x6740, 0xdfb0, 0xbba0, 0x7f13, 0x2981, 0x1, 0x1);
        gbc.writeMem(0xd336, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6740);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd336), 0xcb);
        EXPECT(gbc.readMem(0xd337), 0x65);
        // CB 65 02A7
        gbc.setState(0x6d02, 0x79e6, 0x9f00, 0x340f, 0x5d27, 0x85b4, 0x1, 0x0);
        gbc.writeMem(0x6d02, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x79e6);
        EXPECT(gbc.pc(), 0x6d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02A8
        gbc.setState(0xc76f, 0x78e5, 0xe340, 0xcb66, 0xed41, 0xd633, 0x1, 0x0);
        gbc.writeMem(0xc76f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x78e5);
        EXPECT(gbc.pc(), 0xc771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76f), 0xcb);
        EXPECT(gbc.readMem(0xc770), 0x65);
        // CB 65 02A9
        gbc.setState(0xd789, 0x57c8, 0x1fd0, 0xd73d, 0xd3f0, 0x97c2, 0x0, 0x0);
        gbc.writeMem(0xd789, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x57c8);
        EXPECT(gbc.pc(), 0xd78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd789), 0xcb);
        EXPECT(gbc.readMem(0xd78a), 0x65);
        // CB 65 02AA
        gbc.setState(0x1273, 0x7101, 0xc8f0, 0x2622, 0x8819, 0x7a2c, 0x0, 0x1);
        gbc.writeMem(0x1273, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7101);
        EXPECT(gbc.pc(), 0x1275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02AB
        gbc.setState(0x38b, 0x49be, 0xa2a0, 0xb8b5, 0x3169, 0x9475, 0x1, 0x1);
        gbc.writeMem(0x38b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x49be);
        EXPECT(gbc.pc(), 0x38d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02AC
        gbc.setState(0x913f, 0x2a77, 0xc5b0, 0x1b2b, 0x3a46, 0x4441, 0x1, 0x1);
        gbc.writeMem(0x913f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2a77);
        EXPECT(gbc.pc(), 0x9141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x913f), 0xcb);
        EXPECT(gbc.readMem(0x9140), 0x65);
        // CB 65 02AD
        gbc.setState(0x55c2, 0x9b45, 0xd5d0, 0x5cb2, 0x53a1, 0x6b19, 0x0, 0x0);
        gbc.writeMem(0x55c2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9b45);
        EXPECT(gbc.pc(), 0x55c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02AE
        gbc.setState(0x3e10, 0x18d7, 0x7640, 0x1753, 0xbf3d, 0x85b6, 0x1, 0x0);
        gbc.writeMem(0x3e10, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x18d7);
        EXPECT(gbc.pc(), 0x3e12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02AF
        gbc.setState(0x8190, 0xdaf6, 0x3620, 0xb465, 0x843a, 0xd9f2, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xdaf6);
        EXPECT(gbc.pc(), 0x8192);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8190), 0xcb);
        EXPECT(gbc.readMem(0x8191), 0x65);
        // CB 65 02B0
        gbc.setState(0xb04, 0x1103, 0xb2e0, 0x796f, 0x6b69, 0x772e, 0x0, 0x1);
        gbc.writeMem(0xb04, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1103);
        EXPECT(gbc.pc(), 0xb06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02B2
        gbc.setState(0x7bce, 0x2d18, 0x72c0, 0xfcc3, 0x8c14, 0x6425, 0x1, 0x0);
        gbc.writeMem(0x7bce, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2d18);
        EXPECT(gbc.pc(), 0x7bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02B3
        gbc.setState(0xc586, 0x7d05, 0x8a00, 0xa138, 0xd76b, 0xfee6, 0x0, 0x1);
        gbc.writeMem(0xc586, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7d05);
        EXPECT(gbc.pc(), 0xc588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc586), 0xcb);
        EXPECT(gbc.readMem(0xc587), 0x65);
        // CB 65 02B4
        gbc.setState(0xc7a6, 0xfc18, 0xf010, 0x5a15, 0x4410, 0x5c61, 0x1, 0x0);
        gbc.writeMem(0xc7a6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xfc18);
        EXPECT(gbc.pc(), 0xc7a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a6), 0xcb);
        EXPECT(gbc.readMem(0xc7a7), 0x65);
        // CB 65 02B5
        gbc.setState(0x5b9b, 0x134d, 0x4d80, 0x30f7, 0xc11d, 0x9c99, 0x0, 0x1);
        gbc.writeMem(0x5b9b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x134d);
        EXPECT(gbc.pc(), 0x5b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02B6
        gbc.setState(0x435f, 0x176a, 0xe10, 0xae17, 0x6bbc, 0xb8f6, 0x0, 0x0);
        gbc.writeMem(0x435f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x176a);
        EXPECT(gbc.pc(), 0x4361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02B7
        gbc.setState(0xc81b, 0xb7a7, 0x370, 0x7ce0, 0x232, 0xae7b, 0x0, 0x1);
        gbc.writeMem(0xc81b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb7a7);
        EXPECT(gbc.pc(), 0xc81d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81b), 0xcb);
        EXPECT(gbc.readMem(0xc81c), 0x65);
        // CB 65 02B8
        gbc.setState(0xda9, 0xbacc, 0x49b0, 0xf7c9, 0xe237, 0x8fe3, 0x0, 0x0);
        gbc.writeMem(0xda9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbacc);
        EXPECT(gbc.pc(), 0xdab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02B9
        gbc.setState(0x9eba, 0x2f7b, 0xafd0, 0xe8ab, 0x2370, 0x542d, 0x0, 0x1);
        gbc.writeMem(0x9eba, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2f7b);
        EXPECT(gbc.pc(), 0x9ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eba), 0xcb);
        EXPECT(gbc.readMem(0x9ebb), 0x65);
        // CB 65 02BA
        gbc.setState(0xd8d7, 0xcc62, 0x1c40, 0x5ab9, 0x7501, 0xe732, 0x1, 0x0);
        gbc.writeMem(0xd8d7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xcc62);
        EXPECT(gbc.pc(), 0xd8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d7), 0xcb);
        EXPECT(gbc.readMem(0xd8d8), 0x65);
        // CB 65 02BB
        gbc.setState(0x8921, 0x350a, 0xeae0, 0xca07, 0x3729, 0x8f55, 0x1, 0x0);
        gbc.writeMem(0x8921, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x350a);
        EXPECT(gbc.pc(), 0x8923);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8921), 0xcb);
        EXPECT(gbc.readMem(0x8922), 0x65);
        // CB 65 02BC
        gbc.setState(0xebd9, 0xee6e, 0xcce0, 0xdcdc, 0x409e, 0xdf17, 0x0, 0x0);
        gbc.writeMem(0xebd9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xee6e);
        EXPECT(gbc.pc(), 0xebdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd9), 0xcb);
        EXPECT(gbc.readMem(0xebda), 0x65);
        // CB 65 02BD
        gbc.setState(0x448c, 0x3c5d, 0x2bb0, 0xd078, 0x94f5, 0x27e4, 0x1, 0x0);
        gbc.writeMem(0x448c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3c5d);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02BE
        gbc.setState(0x978b, 0x663b, 0xc0, 0x83e8, 0x6d5, 0x7be1, 0x1, 0x0);
        gbc.writeMem(0x978b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x663b);
        EXPECT(gbc.pc(), 0x978d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978b), 0xcb);
        EXPECT(gbc.readMem(0x978c), 0x65);
        // CB 65 02BF
        gbc.setState(0x3326, 0x5a78, 0x40e0, 0x1836, 0xf332, 0xb4dc, 0x1, 0x1);
        gbc.writeMem(0x3326, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5a78);
        EXPECT(gbc.pc(), 0x3328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02C0
        gbc.setState(0x18d9, 0x2c5c, 0x28e0, 0x6eb0, 0x75bb, 0xb3, 0x1, 0x1);
        gbc.writeMem(0x18d9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2c5c);
        EXPECT(gbc.pc(), 0x18db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02C1
        gbc.setState(0xe9a2, 0xb7ed, 0xa270, 0xef31, 0xf8e9, 0x21b3, 0x0, 0x0);
        gbc.writeMem(0xe9a2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb7ed);
        EXPECT(gbc.pc(), 0xe9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a2), 0xcb);
        EXPECT(gbc.readMem(0xe9a3), 0x65);
        // CB 65 02C2
        gbc.setState(0xedc8, 0x277e, 0x52d0, 0xe3d8, 0x8b24, 0xc88d, 0x1, 0x0);
        gbc.writeMem(0xedc8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x277e);
        EXPECT(gbc.pc(), 0xedca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedc8), 0xcb);
        EXPECT(gbc.readMem(0xedc9), 0x65);
        // CB 65 02C3
        gbc.setState(0x8a13, 0x9725, 0x77e0, 0x9393, 0xdcd1, 0x29b0, 0x1, 0x1);
        gbc.writeMem(0x8a13, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9725);
        EXPECT(gbc.pc(), 0x8a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a13), 0xcb);
        EXPECT(gbc.readMem(0x8a14), 0x65);
        // CB 65 02C4
        gbc.setState(0xe7c8, 0xf2d6, 0xe710, 0x604b, 0x17d, 0xaf55, 0x0, 0x1);
        gbc.writeMem(0xe7c8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf2d6);
        EXPECT(gbc.pc(), 0xe7ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c8), 0xcb);
        EXPECT(gbc.readMem(0xe7c9), 0x65);
        // CB 65 02C5
        gbc.setState(0xac89, 0x58c9, 0x63b0, 0xe482, 0xe03e, 0x7314, 0x0, 0x1);
        gbc.writeMem(0xac89, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x58c9);
        EXPECT(gbc.pc(), 0xac8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac89), 0xcb);
        EXPECT(gbc.readMem(0xac8a), 0x65);
        // CB 65 02C6
        gbc.setState(0xed98, 0x3bd3, 0x8770, 0xa8a2, 0x6c43, 0x5084, 0x0, 0x1);
        gbc.writeMem(0xed98, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3bd3);
        EXPECT(gbc.pc(), 0xed9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed98), 0xcb);
        EXPECT(gbc.readMem(0xed99), 0x65);
        // CB 65 02C7
        gbc.setState(0xe3bd, 0xe69, 0xb080, 0x63f9, 0xac8, 0x52bc, 0x1, 0x0);
        gbc.writeMem(0xe3bd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe69);
        EXPECT(gbc.pc(), 0xe3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3bd), 0xcb);
        EXPECT(gbc.readMem(0xe3be), 0x65);
        // CB 65 02C8
        gbc.setState(0x5c92, 0x2fc6, 0x4e90, 0x4e0d, 0x937d, 0xdbc2, 0x0, 0x0);
        gbc.writeMem(0x5c92, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x2fc6);
        EXPECT(gbc.pc(), 0x5c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02CA
        gbc.setState(0xe258, 0xff05, 0xce50, 0x294, 0x6ca7, 0x9d9d, 0x0, 0x1);
        gbc.writeMem(0xe258, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xff05);
        EXPECT(gbc.pc(), 0xe25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe258), 0xcb);
        EXPECT(gbc.readMem(0xe259), 0x65);
        // CB 65 02CB
        gbc.setState(0xd0b3, 0xc6b4, 0xb820, 0xb5e6, 0x4098, 0xf898, 0x0, 0x0);
        gbc.writeMem(0xd0b3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc6b4);
        EXPECT(gbc.pc(), 0xd0b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b3), 0xcb);
        EXPECT(gbc.readMem(0xd0b4), 0x65);
        // CB 65 02CC
        gbc.setState(0x5175, 0x6395, 0x63b0, 0xd167, 0x13e5, 0x487b, 0x1, 0x1);
        gbc.writeMem(0x5175, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6395);
        EXPECT(gbc.pc(), 0x5177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02CD
        gbc.setState(0x32ae, 0xb07e, 0xcc20, 0x80dc, 0xa5b6, 0x69fd, 0x1, 0x1);
        gbc.writeMem(0x32ae, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb07e);
        EXPECT(gbc.pc(), 0x32b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02CE
        gbc.setState(0xc1b9, 0x35eb, 0x7eb0, 0xf029, 0x3418, 0xf7d5, 0x1, 0x0);
        gbc.writeMem(0xc1b9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x35eb);
        EXPECT(gbc.pc(), 0xc1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b9), 0xcb);
        EXPECT(gbc.readMem(0xc1ba), 0x65);
        // CB 65 02CF
        gbc.setState(0xf4, 0x2dcd, 0x7600, 0xc6eb, 0x1e0a, 0x188e, 0x1, 0x1);
        gbc.writeMem(0xf4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2dcd);
        EXPECT(gbc.pc(), 0xf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02D0
        gbc.setState(0x9185, 0x6fb9, 0x1090, 0x359d, 0x2159, 0x388, 0x1, 0x0);
        gbc.writeMem(0x9185, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6fb9);
        EXPECT(gbc.pc(), 0x9187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9185), 0xcb);
        EXPECT(gbc.readMem(0x9186), 0x65);
        // CB 65 02D1
        gbc.setState(0x661d, 0xfeba, 0x8830, 0x447f, 0x6c72, 0xee9f, 0x0, 0x1);
        gbc.writeMem(0x661d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xfeba);
        EXPECT(gbc.pc(), 0x661f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02D2
        gbc.setState(0xa4e9, 0xb8f4, 0xe6b0, 0xac46, 0x5bd9, 0x1ad2, 0x1, 0x1);
        gbc.writeMem(0xa4e9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb8f4);
        EXPECT(gbc.pc(), 0xa4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e9), 0xcb);
        EXPECT(gbc.readMem(0xa4ea), 0x65);
        // CB 65 02D3
        gbc.setState(0xa714, 0x8f07, 0x7250, 0x8de2, 0xf744, 0xc617, 0x0, 0x0);
        gbc.writeMem(0xa714, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8f07);
        EXPECT(gbc.pc(), 0xa716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa714), 0xcb);
        EXPECT(gbc.readMem(0xa715), 0x65);
        // CB 65 02D4
        gbc.setState(0xa5e9, 0xd522, 0x1510, 0x38bd, 0xb91, 0xc710, 0x1, 0x0);
        gbc.writeMem(0xa5e9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd522);
        EXPECT(gbc.pc(), 0xa5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e9), 0xcb);
        EXPECT(gbc.readMem(0xa5ea), 0x65);
        // CB 65 02D5
        gbc.setState(0xb325, 0xf19e, 0xf3d0, 0x81a7, 0xa040, 0x3d6c, 0x1, 0x1);
        gbc.writeMem(0xb325, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf19e);
        EXPECT(gbc.pc(), 0xb327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb325), 0xcb);
        EXPECT(gbc.readMem(0xb326), 0x65);
        // CB 65 02D6
        gbc.setState(0xcc39, 0x5100, 0x5e00, 0xca39, 0xd5c5, 0xdad3, 0x0, 0x0);
        gbc.writeMem(0xcc39, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0xcc3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc39), 0xcb);
        EXPECT(gbc.readMem(0xcc3a), 0x65);
        // CB 65 02D7
        gbc.setState(0xc8cc, 0x2f2c, 0x4f50, 0x1f4d, 0x147d, 0x1904, 0x1, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2f2c);
        EXPECT(gbc.pc(), 0xc8ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cc), 0xcb);
        EXPECT(gbc.readMem(0xc8cd), 0x65);
        // CB 65 02D8
        gbc.setState(0x2f67, 0x2907, 0x3770, 0xb44a, 0x63d6, 0xbcf4, 0x0, 0x0);
        gbc.writeMem(0x2f67, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2907);
        EXPECT(gbc.pc(), 0x2f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02D9
        gbc.setState(0x3f85, 0x26e2, 0x5710, 0xe7e6, 0xc79e, 0xa393, 0x0, 0x0);
        gbc.writeMem(0x3f85, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x26e2);
        EXPECT(gbc.pc(), 0x3f87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02DA
        gbc.setState(0x842f, 0x7c9c, 0x7020, 0xbc03, 0xa3e5, 0xef0d, 0x0, 0x1);
        gbc.writeMem(0x842f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7c9c);
        EXPECT(gbc.pc(), 0x8431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x842f), 0xcb);
        EXPECT(gbc.readMem(0x8430), 0x65);
        // CB 65 02DB
        gbc.setState(0x8a17, 0x3201, 0x9e90, 0x7117, 0xbbb9, 0xf8b7, 0x0, 0x1);
        gbc.writeMem(0x8a17, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3201);
        EXPECT(gbc.pc(), 0x8a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a17), 0xcb);
        EXPECT(gbc.readMem(0x8a18), 0x65);
        // CB 65 02DC
        gbc.setState(0x910e, 0x8cc7, 0xf4d0, 0x64ce, 0xff20, 0x7f87, 0x0, 0x1);
        gbc.writeMem(0x910e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8cc7);
        EXPECT(gbc.pc(), 0x9110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910e), 0xcb);
        EXPECT(gbc.readMem(0x910f), 0x65);
        // CB 65 02DD
        gbc.setState(0x4000, 0x4a2b, 0x1be0, 0x9780, 0x143b, 0xa715, 0x1, 0x0);
        gbc.writeMem(0x4000, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4a2b);
        EXPECT(gbc.pc(), 0x4002);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02DE
        gbc.setState(0x7c07, 0x5f56, 0x65e0, 0xcc67, 0x7fca, 0xba47, 0x1, 0x0);
        gbc.writeMem(0x7c07, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5f56);
        EXPECT(gbc.pc(), 0x7c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02DF
        gbc.setState(0xb354, 0xdcac, 0xeb70, 0x484d, 0x1fc8, 0xadb8, 0x1, 0x1);
        gbc.writeMem(0xb354, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdcac);
        EXPECT(gbc.pc(), 0xb356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb354), 0xcb);
        EXPECT(gbc.readMem(0xb355), 0x65);
        // CB 65 02E0
        gbc.setState(0x37a9, 0x3ad9, 0xd010, 0x83c8, 0x6f7, 0x4e66, 0x1, 0x1);
        gbc.writeMem(0x37a9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3ad9);
        EXPECT(gbc.pc(), 0x37ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02E1
        gbc.setState(0x8435, 0x5eb5, 0xa9b0, 0x8d9b, 0x573a, 0x80e0, 0x0, 0x1);
        gbc.writeMem(0x8435, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5eb5);
        EXPECT(gbc.pc(), 0x8437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8435), 0xcb);
        EXPECT(gbc.readMem(0x8436), 0x65);
        // CB 65 02E2
        gbc.setState(0xcc2a, 0x21cb, 0x8a50, 0xd08d, 0x4a5e, 0xa706, 0x1, 0x1);
        gbc.writeMem(0xcc2a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x21cb);
        EXPECT(gbc.pc(), 0xcc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc2a), 0xcb);
        EXPECT(gbc.readMem(0xcc2b), 0x65);
        // CB 65 02E3
        gbc.setState(0x7b33, 0xf1, 0x9530, 0xa7d9, 0x470c, 0x7a4f, 0x1, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf1);
        EXPECT(gbc.pc(), 0x7b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02E4
        gbc.setState(0x8e9, 0xd710, 0x20d0, 0x40c, 0x8ffc, 0xff6e, 0x1, 0x0);
        gbc.writeMem(0x8e9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd710);
        EXPECT(gbc.pc(), 0x8eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02E5
        gbc.setState(0x5101, 0x624a, 0x1830, 0xfeef, 0x79da, 0xb525, 0x0, 0x1);
        gbc.writeMem(0x5101, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x624a);
        EXPECT(gbc.pc(), 0x5103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02E6
        gbc.setState(0x880, 0x4c9b, 0xcac0, 0x4762, 0x3255, 0xdb4b, 0x1, 0x0);
        gbc.writeMem(0x880, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4c9b);
        EXPECT(gbc.pc(), 0x882);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02E7
        gbc.setState(0xc00d, 0x8886, 0x39e0, 0x5d05, 0x519b, 0x87f8, 0x0, 0x0);
        gbc.writeMem(0xc00d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8886);
        EXPECT(gbc.pc(), 0xc00f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc00d), 0xcb);
        EXPECT(gbc.readMem(0xc00e), 0x65);
        // CB 65 02E8
        gbc.setState(0x7186, 0xdb37, 0xe940, 0x960a, 0x9745, 0x5fbd, 0x1, 0x1);
        gbc.writeMem(0x7186, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdb37);
        EXPECT(gbc.pc(), 0x7188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02E9
        gbc.setState(0xe049, 0x12d2, 0x990, 0xfcae, 0x9d41, 0xc1b7, 0x1, 0x1);
        gbc.writeMem(0xe049, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x12d2);
        EXPECT(gbc.pc(), 0xe04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe049), 0xcb);
        EXPECT(gbc.readMem(0xe04a), 0x65);
        // CB 65 02EA
        gbc.setState(0x87c9, 0x664d, 0x3d20, 0x9397, 0xe36d, 0xde7e, 0x1, 0x1);
        gbc.writeMem(0x87c9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x664d);
        EXPECT(gbc.pc(), 0x87cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87c9), 0xcb);
        EXPECT(gbc.readMem(0x87ca), 0x65);
        // CB 65 02EB
        gbc.setState(0xa939, 0x538a, 0x9550, 0xcc74, 0xb037, 0x1bcb, 0x1, 0x0);
        gbc.writeMem(0xa939, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x538a);
        EXPECT(gbc.pc(), 0xa93b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa939), 0xcb);
        EXPECT(gbc.readMem(0xa93a), 0x65);
        // CB 65 02EC
        gbc.setState(0xd674, 0xe508, 0x2210, 0xf08, 0x1ac8, 0x5c49, 0x1, 0x1);
        gbc.writeMem(0xd674, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe508);
        EXPECT(gbc.pc(), 0xd676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd674), 0xcb);
        EXPECT(gbc.readMem(0xd675), 0x65);
        // CB 65 02ED
        gbc.setState(0x7c22, 0x886f, 0xfe90, 0xb720, 0x3c63, 0x3a00, 0x0, 0x0);
        gbc.writeMem(0x7c22, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x886f);
        EXPECT(gbc.pc(), 0x7c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02EE
        gbc.setState(0x3430, 0x3dae, 0xdb40, 0x4549, 0x26fc, 0x4af7, 0x1, 0x1);
        gbc.writeMem(0x3430, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3dae);
        EXPECT(gbc.pc(), 0x3432);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 02EF
        gbc.setState(0xb235, 0xb246, 0xb650, 0x4a9e, 0xc2d0, 0x58f8, 0x0, 0x0);
        gbc.writeMem(0xb235, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb246);
        EXPECT(gbc.pc(), 0xb237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb235), 0xcb);
        EXPECT(gbc.readMem(0xb236), 0x65);
        // CB 65 02F1
        gbc.setState(0xd42c, 0xe403, 0x6be0, 0x4498, 0x519e, 0x6f5b, 0x1, 0x0);
        gbc.writeMem(0xd42c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe403);
        EXPECT(gbc.pc(), 0xd42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42c), 0xcb);
        EXPECT(gbc.readMem(0xd42d), 0x65);
        // CB 65 02F2
        gbc.setState(0xa7b4, 0x75c7, 0xc30, 0xb360, 0xb74, 0xc6d9, 0x1, 0x0);
        gbc.writeMem(0xa7b4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x75c7);
        EXPECT(gbc.pc(), 0xa7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b4), 0xcb);
        EXPECT(gbc.readMem(0xa7b5), 0x65);
        // CB 65 02F3
        gbc.setState(0x3, 0x68c0, 0xda90, 0x276f, 0x6d26, 0xa4fc, 0x1, 0x0);
        gbc.writeMem(0x3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x68c0);
        EXPECT(gbc.pc(), 0x5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02F4
        gbc.setState(0xc11d, 0x9a4a, 0xf0, 0x7b4f, 0x55b9, 0x7d4, 0x1, 0x1);
        gbc.writeMem(0xc11d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9a4a);
        EXPECT(gbc.pc(), 0xc11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11d), 0xcb);
        EXPECT(gbc.readMem(0xc11e), 0x65);
        // CB 65 02F5
        gbc.setState(0x64b4, 0x6a66, 0x80b0, 0xb69c, 0xfe36, 0x3f73, 0x1, 0x0);
        gbc.writeMem(0x64b4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6a66);
        EXPECT(gbc.pc(), 0x64b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02F6
        gbc.setState(0xab4, 0x4294, 0x3910, 0xdaa, 0xfb25, 0x2c46, 0x0, 0x0);
        gbc.writeMem(0xab4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4294);
        EXPECT(gbc.pc(), 0xab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02F7
        gbc.setState(0x8df4, 0xefd7, 0x29f0, 0x7f66, 0xe6e4, 0x64a7, 0x0, 0x1);
        gbc.writeMem(0x8df4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xefd7);
        EXPECT(gbc.pc(), 0x8df6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8df4), 0xcb);
        EXPECT(gbc.readMem(0x8df5), 0x65);
        // CB 65 02F9
        gbc.setState(0x83e1, 0x5a78, 0x3500, 0x8651, 0x3366, 0x2575, 0x1, 0x0);
        gbc.writeMem(0x83e1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5a78);
        EXPECT(gbc.pc(), 0x83e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e1), 0xcb);
        EXPECT(gbc.readMem(0x83e2), 0x65);
        // CB 65 02FA
        gbc.setState(0x6a38, 0xce86, 0xfdf0, 0x241a, 0x3346, 0x17c8, 0x1, 0x1);
        gbc.writeMem(0x6a38, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xce86);
        EXPECT(gbc.pc(), 0x6a3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02FB
        gbc.setState(0x5077, 0xf4ef, 0xf310, 0x8e0e, 0x7c52, 0xc8e5, 0x0, 0x0);
        gbc.writeMem(0x5077, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf4ef);
        EXPECT(gbc.pc(), 0x5079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 02FD
        gbc.setState(0x97f8, 0xf53d, 0x3a10, 0xa64b, 0xebc8, 0x5c6f, 0x1, 0x0);
        gbc.writeMem(0x97f8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf53d);
        EXPECT(gbc.pc(), 0x97fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f8), 0xcb);
        EXPECT(gbc.readMem(0x97f9), 0x65);
        // CB 65 02FE
        gbc.setState(0x8bf9, 0xd0e1, 0x1e20, 0xdc4, 0x974b, 0x6f7d, 0x0, 0x0);
        gbc.writeMem(0x8bf9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd0e1);
        EXPECT(gbc.pc(), 0x8bfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf9), 0xcb);
        EXPECT(gbc.readMem(0x8bfa), 0x65);
        // CB 65 02FF
        gbc.setState(0xa3ab, 0x5593, 0xe1c0, 0x24e4, 0xd7be, 0xc268, 0x1, 0x0);
        gbc.writeMem(0xa3ab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5593);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3ab), 0xcb);
        EXPECT(gbc.readMem(0xa3ac), 0x65);
        // CB 65 0300
        gbc.setState(0xcaea, 0x5073, 0xc680, 0x9466, 0x4c96, 0xa3f2, 0x0, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5073);
        EXPECT(gbc.pc(), 0xcaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaea), 0xcb);
        EXPECT(gbc.readMem(0xcaeb), 0x65);
        // CB 65 0301
        gbc.setState(0x69a5, 0x955c, 0x3620, 0x999, 0x6f4d, 0xb818, 0x0, 0x0);
        gbc.writeMem(0x69a5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x955c);
        EXPECT(gbc.pc(), 0x69a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0302
        gbc.setState(0x81ce, 0xc551, 0x9280, 0xf53e, 0x5fca, 0x7f7e, 0x0, 0x1);
        gbc.writeMem(0x81ce, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc551);
        EXPECT(gbc.pc(), 0x81d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ce), 0xcb);
        EXPECT(gbc.readMem(0x81cf), 0x65);
        // CB 65 0303
        gbc.setState(0xef44, 0xf5ed, 0x7d90, 0xa10, 0x2689, 0x7667, 0x0, 0x0);
        gbc.writeMem(0xef44, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf5ed);
        EXPECT(gbc.pc(), 0xef46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef44), 0xcb);
        EXPECT(gbc.readMem(0xef45), 0x65);
        // CB 65 0304
        gbc.setState(0x7507, 0xf03c, 0x8130, 0x31d3, 0x17d4, 0xb486, 0x0, 0x1);
        gbc.writeMem(0x7507, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf03c);
        EXPECT(gbc.pc(), 0x7509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0305
        gbc.setState(0xd045, 0x6c22, 0x8340, 0x2ed9, 0x5980, 0x87ab, 0x0, 0x1);
        gbc.writeMem(0xd045, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6c22);
        EXPECT(gbc.pc(), 0xd047);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd045), 0xcb);
        EXPECT(gbc.readMem(0xd046), 0x65);
        // CB 65 0306
        gbc.setState(0x8501, 0x215a, 0xe4c0, 0x6263, 0x204d, 0x7282, 0x1, 0x0);
        gbc.writeMem(0x8501, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x215a);
        EXPECT(gbc.pc(), 0x8503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8501), 0xcb);
        EXPECT(gbc.readMem(0x8502), 0x65);
        // CB 65 0307
        gbc.setState(0xb456, 0xd53e, 0x8680, 0xd4fd, 0x6cb2, 0xe6cd, 0x1, 0x1);
        gbc.writeMem(0xb456, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd53e);
        EXPECT(gbc.pc(), 0xb458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb456), 0xcb);
        EXPECT(gbc.readMem(0xb457), 0x65);
        // CB 65 0308
        gbc.setState(0xfe2, 0xebc3, 0x1100, 0x9b1, 0x5095, 0x2e7d, 0x1, 0x1);
        gbc.writeMem(0xfe2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xebc3);
        EXPECT(gbc.pc(), 0xfe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0309
        gbc.setState(0x28f9, 0xf11d, 0x2000, 0x3f45, 0xf220, 0xf32a, 0x0, 0x1);
        gbc.writeMem(0x28f9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf11d);
        EXPECT(gbc.pc(), 0x28fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 030A
        gbc.setState(0x78fc, 0x6041, 0xfac0, 0x5bc6, 0xbcde, 0x2cb1, 0x1, 0x0);
        gbc.writeMem(0x78fc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6041);
        EXPECT(gbc.pc(), 0x78fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 030B
        gbc.setState(0xa0b7, 0xec25, 0x20, 0x6a16, 0xa27c, 0x884a, 0x0, 0x0);
        gbc.writeMem(0xa0b7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xec25);
        EXPECT(gbc.pc(), 0xa0b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b7), 0xcb);
        EXPECT(gbc.readMem(0xa0b8), 0x65);
        // CB 65 030C
        gbc.setState(0x2133, 0x5e6f, 0xde90, 0xc628, 0xcc5b, 0x1b2a, 0x1, 0x0);
        gbc.writeMem(0x2133, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5e6f);
        EXPECT(gbc.pc(), 0x2135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 030E
        gbc.setState(0x4dc4, 0x3863, 0x9bd0, 0xd71, 0x58bc, 0x92d5, 0x1, 0x0);
        gbc.writeMem(0x4dc4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3863);
        EXPECT(gbc.pc(), 0x4dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 030F
        gbc.setState(0x20dd, 0x2473, 0xab60, 0xcdcc, 0x889f, 0xf53c, 0x1, 0x1);
        gbc.writeMem(0x20dd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2473);
        EXPECT(gbc.pc(), 0x20df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0310
        gbc.setState(0x43db, 0x7de, 0x23a0, 0xf10a, 0x194b, 0xa684, 0x0, 0x1);
        gbc.writeMem(0x43db, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7de);
        EXPECT(gbc.pc(), 0x43dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0311
        gbc.setState(0xa2e2, 0x163a, 0x3a70, 0x5e48, 0xe632, 0x9a0b, 0x0, 0x1);
        gbc.writeMem(0xa2e2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x163a);
        EXPECT(gbc.pc(), 0xa2e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e2), 0xcb);
        EXPECT(gbc.readMem(0xa2e3), 0x65);
        // CB 65 0312
        gbc.setState(0x823d, 0xc496, 0x2110, 0xb936, 0x7ab9, 0xf0bd, 0x1, 0x1);
        gbc.writeMem(0x823d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc496);
        EXPECT(gbc.pc(), 0x823f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823d), 0xcb);
        EXPECT(gbc.readMem(0x823e), 0x65);
        // CB 65 0313
        gbc.setState(0x5cbf, 0x35d9, 0x9530, 0x5a68, 0xf00, 0x2344, 0x0, 0x1);
        gbc.writeMem(0x5cbf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x35d9);
        EXPECT(gbc.pc(), 0x5cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0314
        gbc.setState(0xfbc, 0xfa7f, 0x78c0, 0x70ca, 0xfdbb, 0x9c3c, 0x1, 0x0);
        gbc.writeMem(0xfbc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfa7f);
        EXPECT(gbc.pc(), 0xfbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0315
        gbc.setState(0x7344, 0x1d8, 0xfa00, 0x1827, 0xb71b, 0xabd8, 0x0, 0x1);
        gbc.writeMem(0x7344, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1d8);
        EXPECT(gbc.pc(), 0x7346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0316
        gbc.setState(0xb8dc, 0xa46a, 0xdfc0, 0x72da, 0x390b, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0xb8dc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa46a);
        EXPECT(gbc.pc(), 0xb8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dc), 0xcb);
        EXPECT(gbc.readMem(0xb8dd), 0x65);
        // CB 65 0317
        gbc.setState(0xe68f, 0x81ff, 0x1610, 0xadca, 0xe679, 0x700b, 0x0, 0x0);
        gbc.writeMem(0xe68f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x81ff);
        EXPECT(gbc.pc(), 0xe691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68f), 0xcb);
        EXPECT(gbc.readMem(0xe690), 0x65);
        // CB 65 0318
        gbc.setState(0x5879, 0x5d64, 0x45a0, 0xb7fe, 0x2b4d, 0x568c, 0x0, 0x1);
        gbc.writeMem(0x5879, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x5d64);
        EXPECT(gbc.pc(), 0x587b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0319
        gbc.setState(0x3131, 0xe485, 0xec90, 0x80ca, 0x81bc, 0xe347, 0x1, 0x1);
        gbc.writeMem(0x3131, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe485);
        EXPECT(gbc.pc(), 0x3133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 031A
        gbc.setState(0x2f39, 0x34b, 0x6440, 0xe590, 0x60eb, 0x553, 0x1, 0x1);
        gbc.writeMem(0x2f39, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x34b);
        EXPECT(gbc.pc(), 0x2f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 031B
        gbc.setState(0x8b7f, 0x3b8c, 0xde10, 0x76ce, 0xaadf, 0xb445, 0x0, 0x1);
        gbc.writeMem(0x8b7f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3b8c);
        EXPECT(gbc.pc(), 0x8b81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7f), 0xcb);
        EXPECT(gbc.readMem(0x8b80), 0x65);
        // CB 65 031C
        gbc.setState(0x49c4, 0x1a10, 0x46e0, 0x840c, 0xb644, 0x4e0, 0x1, 0x0);
        gbc.writeMem(0x49c4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1a10);
        EXPECT(gbc.pc(), 0x49c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 031D
        gbc.setState(0x519d, 0x89b1, 0x8890, 0xc2, 0x8254, 0x4df9, 0x1, 0x1);
        gbc.writeMem(0x519d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x89b1);
        EXPECT(gbc.pc(), 0x519f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 031E
        gbc.setState(0xb618, 0xd995, 0x3c90, 0x3966, 0xa0bf, 0xd61d, 0x1, 0x0);
        gbc.writeMem(0xb618, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd995);
        EXPECT(gbc.pc(), 0xb61a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb618), 0xcb);
        EXPECT(gbc.readMem(0xb619), 0x65);
        // CB 65 031F
        gbc.setState(0xcf93, 0xf872, 0x60d0, 0x7fbb, 0xdb5d, 0x4633, 0x0, 0x1);
        gbc.writeMem(0xcf93, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf872);
        EXPECT(gbc.pc(), 0xcf95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf93), 0xcb);
        EXPECT(gbc.readMem(0xcf94), 0x65);
        // CB 65 0320
        gbc.setState(0x67ea, 0x86ac, 0x84e0, 0xaab4, 0x5ca6, 0x13ad, 0x1, 0x1);
        gbc.writeMem(0x67ea, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x86ac);
        EXPECT(gbc.pc(), 0x67ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0321
        gbc.setState(0x72e6, 0x96a8, 0x6210, 0x4888, 0x6d4, 0xdbf5, 0x0, 0x0);
        gbc.writeMem(0x72e6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x96a8);
        EXPECT(gbc.pc(), 0x72e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0322
        gbc.setState(0xd397, 0x96c2, 0xed20, 0xc9ab, 0x84e2, 0x4cb2, 0x0, 0x0);
        gbc.writeMem(0xd397, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x96c2);
        EXPECT(gbc.pc(), 0xd399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd397), 0xcb);
        EXPECT(gbc.readMem(0xd398), 0x65);
        // CB 65 0323
        gbc.setState(0x490c, 0xbaf0, 0x75c0, 0x4218, 0xbc20, 0x49bd, 0x1, 0x0);
        gbc.writeMem(0x490c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbaf0);
        EXPECT(gbc.pc(), 0x490e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0324
        gbc.setState(0x18d7, 0x8cfe, 0xc680, 0xf23, 0x138b, 0xfb52, 0x1, 0x1);
        gbc.writeMem(0x18d7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8cfe);
        EXPECT(gbc.pc(), 0x18d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0325
        gbc.setState(0x6e5b, 0xc549, 0x7290, 0x6f7f, 0xc767, 0x76e1, 0x1, 0x0);
        gbc.writeMem(0x6e5b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc549);
        EXPECT(gbc.pc(), 0x6e5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0326
        gbc.setState(0x1591, 0x32cb, 0x99f0, 0x5e69, 0x546d, 0x326e, 0x1, 0x1);
        gbc.writeMem(0x1591, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x32cb);
        EXPECT(gbc.pc(), 0x1593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0327
        gbc.setState(0x4ae, 0x7b1, 0x28e0, 0x76c0, 0x3d6f, 0x4383, 0x0, 0x1);
        gbc.writeMem(0x4ae, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7b1);
        EXPECT(gbc.pc(), 0x4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0328
        gbc.setState(0xc3, 0xa25a, 0xc360, 0xfb43, 0xabbf, 0x6a28, 0x0, 0x1);
        gbc.writeMem(0xc3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa25a);
        EXPECT(gbc.pc(), 0xc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0329
        gbc.setState(0xe62c, 0x57db, 0x9e70, 0x4d9c, 0x48a3, 0xf1b8, 0x0, 0x0);
        gbc.writeMem(0xe62c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x57db);
        EXPECT(gbc.pc(), 0xe62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62c), 0xcb);
        EXPECT(gbc.readMem(0xe62d), 0x65);
        // CB 65 032A
        gbc.setState(0xeb27, 0x7134, 0xb2c0, 0x7757, 0xc72, 0x77ac, 0x0, 0x0);
        gbc.writeMem(0xeb27, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7134);
        EXPECT(gbc.pc(), 0xeb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb27), 0xcb);
        EXPECT(gbc.readMem(0xeb28), 0x65);
        // CB 65 032B
        gbc.setState(0xeda9, 0xea9e, 0x8040, 0xbdf0, 0xd5a4, 0xb468, 0x0, 0x0);
        gbc.writeMem(0xeda9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xea9e);
        EXPECT(gbc.pc(), 0xedab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda9), 0xcb);
        EXPECT(gbc.readMem(0xedaa), 0x65);
        // CB 65 032C
        gbc.setState(0x705f, 0xe635, 0x3b70, 0xe2c0, 0xabd0, 0xd653, 0x0, 0x1);
        gbc.writeMem(0x705f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe635);
        EXPECT(gbc.pc(), 0x7061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 032D
        gbc.setState(0xca60, 0xd2fc, 0x21a0, 0x9558, 0xbfdf, 0x4eae, 0x1, 0x0);
        gbc.writeMem(0xca60, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd2fc);
        EXPECT(gbc.pc(), 0xca62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca60), 0xcb);
        EXPECT(gbc.readMem(0xca61), 0x65);
        // CB 65 032E
        gbc.setState(0xb1d7, 0x3f1c, 0xb80, 0xef28, 0x6968, 0x3e7a, 0x1, 0x1);
        gbc.writeMem(0xb1d7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3f1c);
        EXPECT(gbc.pc(), 0xb1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d7), 0xcb);
        EXPECT(gbc.readMem(0xb1d8), 0x65);
        // CB 65 032F
        gbc.setState(0x9647, 0x531b, 0x77e0, 0x68d8, 0x5f5a, 0x5453, 0x0, 0x1);
        gbc.writeMem(0x9647, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x531b);
        EXPECT(gbc.pc(), 0x9649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9647), 0xcb);
        EXPECT(gbc.readMem(0x9648), 0x65);
        // CB 65 0330
        gbc.setState(0x127c, 0x9939, 0x75a0, 0x7c8f, 0xdcb7, 0xa246, 0x0, 0x1);
        gbc.writeMem(0x127c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9939);
        EXPECT(gbc.pc(), 0x127e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0331
        gbc.setState(0x9d07, 0xf011, 0x2130, 0xb27e, 0x31b7, 0x7b29, 0x0, 0x1);
        gbc.writeMem(0x9d07, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf011);
        EXPECT(gbc.pc(), 0x9d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d07), 0xcb);
        EXPECT(gbc.readMem(0x9d08), 0x65);
        // CB 65 0332
        gbc.setState(0xb05a, 0x8144, 0x4a50, 0x4322, 0xa5c4, 0x520d, 0x1, 0x0);
        gbc.writeMem(0xb05a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8144);
        EXPECT(gbc.pc(), 0xb05c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb05a), 0xcb);
        EXPECT(gbc.readMem(0xb05b), 0x65);
        // CB 65 0333
        gbc.setState(0x4836, 0x14bd, 0xb2a0, 0xc8cd, 0xd199, 0x82e0, 0x1, 0x1);
        gbc.writeMem(0x4836, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x14bd);
        EXPECT(gbc.pc(), 0x4838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0334
        gbc.setState(0x4ad7, 0x6315, 0x2ac0, 0xd7b8, 0x8112, 0x8d80, 0x1, 0x0);
        gbc.writeMem(0x4ad7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6315);
        EXPECT(gbc.pc(), 0x4ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0335
        gbc.setState(0xd7b7, 0xbe84, 0x4ef0, 0xb55b, 0xb65e, 0xcd9a, 0x1, 0x0);
        gbc.writeMem(0xd7b7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbe84);
        EXPECT(gbc.pc(), 0xd7b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b7), 0xcb);
        EXPECT(gbc.readMem(0xd7b8), 0x65);
        // CB 65 0336
        gbc.setState(0x1b17, 0x5290, 0x3f20, 0xb9f8, 0xbbe2, 0x839e, 0x1, 0x1);
        gbc.writeMem(0x1b17, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x5290);
        EXPECT(gbc.pc(), 0x1b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0337
        gbc.setState(0x7c0c, 0x5133, 0xea70, 0x12eb, 0x1ff3, 0x9de6, 0x0, 0x1);
        gbc.writeMem(0x7c0c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5133);
        EXPECT(gbc.pc(), 0x7c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0338
        gbc.setState(0x1586, 0xefdf, 0x54c0, 0xacff, 0xc247, 0x3aa1, 0x0, 0x0);
        gbc.writeMem(0x1586, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xefdf);
        EXPECT(gbc.pc(), 0x1588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0339
        gbc.setState(0xdee8, 0x3c08, 0x8660, 0xddd7, 0x3784, 0x2f1d, 0x1, 0x1);
        gbc.writeMem(0xdee8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3c08);
        EXPECT(gbc.pc(), 0xdeea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee8), 0xcb);
        EXPECT(gbc.readMem(0xdee9), 0x65);
        // CB 65 033A
        gbc.setState(0xc989, 0x7e68, 0x4fd0, 0xac0d, 0x1b16, 0x7a30, 0x0, 0x0);
        gbc.writeMem(0xc989, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7e68);
        EXPECT(gbc.pc(), 0xc98b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc989), 0xcb);
        EXPECT(gbc.readMem(0xc98a), 0x65);
        // CB 65 033B
        gbc.setState(0x2362, 0xe0db, 0x4370, 0x45b8, 0xaf11, 0xdf8, 0x0, 0x0);
        gbc.writeMem(0x2362, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe0db);
        EXPECT(gbc.pc(), 0x2364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 033C
        gbc.setState(0x8e5d, 0x9399, 0x93c0, 0xe751, 0xa4bf, 0x3a76, 0x1, 0x0);
        gbc.writeMem(0x8e5d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9399);
        EXPECT(gbc.pc(), 0x8e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e5d), 0xcb);
        EXPECT(gbc.readMem(0x8e5e), 0x65);
        // CB 65 033D
        gbc.setState(0x6f26, 0xfb90, 0x83e0, 0xbee8, 0xff93, 0x63ae, 0x1, 0x1);
        gbc.writeMem(0x6f26, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xfb90);
        EXPECT(gbc.pc(), 0x6f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 033E
        gbc.setState(0x2503, 0x4458, 0x9170, 0xaf57, 0xa271, 0xf82c, 0x1, 0x1);
        gbc.writeMem(0x2503, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4458);
        EXPECT(gbc.pc(), 0x2505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 033F
        gbc.setState(0x2f10, 0x32d7, 0x96a0, 0x7137, 0xff03, 0x916f, 0x1, 0x1);
        gbc.writeMem(0x2f10, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x32d7);
        EXPECT(gbc.pc(), 0x2f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0340
        gbc.setState(0xe83e, 0xc4cf, 0x48a0, 0xac7, 0xe370, 0x5d7e, 0x1, 0x0);
        gbc.writeMem(0xe83e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc4cf);
        EXPECT(gbc.pc(), 0xe840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83e), 0xcb);
        EXPECT(gbc.readMem(0xe83f), 0x65);
        // CB 65 0342
        gbc.setState(0x79ae, 0xc5d, 0x2310, 0x7e6e, 0xb3b, 0x2e43, 0x1, 0x1);
        gbc.writeMem(0x79ae, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc5d);
        EXPECT(gbc.pc(), 0x79b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0343
        gbc.setState(0x7a25, 0xd286, 0xb1f0, 0x3a61, 0xe9af, 0xfdf9, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd286);
        EXPECT(gbc.pc(), 0x7a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0344
        gbc.setState(0x8106, 0x60f0, 0x6ec0, 0xdc8b, 0xc3e8, 0xe57b, 0x0, 0x0);
        gbc.writeMem(0x8106, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x60f0);
        EXPECT(gbc.pc(), 0x8108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8106), 0xcb);
        EXPECT(gbc.readMem(0x8107), 0x65);
        // CB 65 0345
        gbc.setState(0x44b1, 0xba42, 0x4980, 0x1caf, 0x716a, 0x95d0, 0x0, 0x1);
        gbc.writeMem(0x44b1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xba42);
        EXPECT(gbc.pc(), 0x44b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0346
        gbc.setState(0xe096, 0x1a82, 0x10a0, 0xb91f, 0x35d, 0xf4ff, 0x0, 0x1);
        gbc.writeMem(0xe096, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1a82);
        EXPECT(gbc.pc(), 0xe098);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe096), 0xcb);
        EXPECT(gbc.readMem(0xe097), 0x65);
        // CB 65 0347
        gbc.setState(0xb037, 0x71d3, 0x9d80, 0x679a, 0x2172, 0x9c6b, 0x0, 0x1);
        gbc.writeMem(0xb037, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x71d3);
        EXPECT(gbc.pc(), 0xb039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb037), 0xcb);
        EXPECT(gbc.readMem(0xb038), 0x65);
        // CB 65 0348
        gbc.setState(0xebd1, 0x22c6, 0x2bd0, 0xf216, 0x647b, 0x2fb6, 0x1, 0x0);
        gbc.writeMem(0xebd1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x22c6);
        EXPECT(gbc.pc(), 0xebd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebd1), 0xcb);
        EXPECT(gbc.readMem(0xebd2), 0x65);
        // CB 65 0349
        gbc.setState(0xcd3c, 0x5363, 0xefd0, 0x11dd, 0x581f, 0x9796, 0x1, 0x0);
        gbc.writeMem(0xcd3c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5363);
        EXPECT(gbc.pc(), 0xcd3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd3c), 0xcb);
        EXPECT(gbc.readMem(0xcd3d), 0x65);
        // CB 65 034B
        gbc.setState(0xbc7a, 0xe8a5, 0x7640, 0x6c2e, 0xec70, 0xe06b, 0x0, 0x1);
        gbc.writeMem(0xbc7a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe8a5);
        EXPECT(gbc.pc(), 0xbc7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7a), 0xcb);
        EXPECT(gbc.readMem(0xbc7b), 0x65);
        // CB 65 034C
        gbc.setState(0x6286, 0xcffa, 0x9d70, 0x8e23, 0xc560, 0x16aa, 0x0, 0x1);
        gbc.writeMem(0x6286, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcffa);
        EXPECT(gbc.pc(), 0x6288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 034D
        gbc.setState(0x9e5f, 0x94c5, 0x2150, 0x7d9d, 0x4565, 0x364, 0x0, 0x1);
        gbc.writeMem(0x9e5f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0x9e61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5f), 0xcb);
        EXPECT(gbc.readMem(0x9e60), 0x65);
        // CB 65 034F
        gbc.setState(0x6145, 0xefae, 0x6480, 0xe94b, 0xa8e9, 0x818c, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xefae);
        EXPECT(gbc.pc(), 0x6147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0350
        gbc.setState(0xb653, 0x4e3d, 0xb30, 0x7c7d, 0x2bd6, 0xbddd, 0x0, 0x0);
        gbc.writeMem(0xb653, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4e3d);
        EXPECT(gbc.pc(), 0xb655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb653), 0xcb);
        EXPECT(gbc.readMem(0xb654), 0x65);
        // CB 65 0351
        gbc.setState(0xc6a5, 0xa49, 0xa220, 0x2812, 0xb233, 0xe03, 0x0, 0x1);
        gbc.writeMem(0xc6a5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa49);
        EXPECT(gbc.pc(), 0xc6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6a5), 0xcb);
        EXPECT(gbc.readMem(0xc6a6), 0x65);
        // CB 65 0352
        gbc.setState(0xaba9, 0xb09e, 0xc830, 0xa513, 0x2136, 0xd1c9, 0x1, 0x1);
        gbc.writeMem(0xaba9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb09e);
        EXPECT(gbc.pc(), 0xabab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba9), 0xcb);
        EXPECT(gbc.readMem(0xabaa), 0x65);
        // CB 65 0353
        gbc.setState(0xd03d, 0xbeb, 0x93b0, 0x8b0f, 0xb6f3, 0xd141, 0x1, 0x0);
        gbc.writeMem(0xd03d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbeb);
        EXPECT(gbc.pc(), 0xd03f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd03d), 0xcb);
        EXPECT(gbc.readMem(0xd03e), 0x65);
        // CB 65 0355
        gbc.setState(0x5baf, 0xf8aa, 0x20, 0x8bfa, 0xf1a5, 0x66a9, 0x1, 0x0);
        gbc.writeMem(0x5baf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf8aa);
        EXPECT(gbc.pc(), 0x5bb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0356
        gbc.setState(0xa7d, 0x69f3, 0x3960, 0x2546, 0x6883, 0xf20, 0x1, 0x1);
        gbc.writeMem(0xa7d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x69f3);
        EXPECT(gbc.pc(), 0xa7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0357
        gbc.setState(0xaf2a, 0xc360, 0x63f0, 0x40a8, 0x42d7, 0x3ecd, 0x1, 0x0);
        gbc.writeMem(0xaf2a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc360);
        EXPECT(gbc.pc(), 0xaf2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf2a), 0xcb);
        EXPECT(gbc.readMem(0xaf2b), 0x65);
        // CB 65 0358
        gbc.setState(0xbeba, 0xa132, 0xaca0, 0x11cf, 0xc51d, 0xfe2c, 0x1, 0x1);
        gbc.writeMem(0xbeba, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa132);
        EXPECT(gbc.pc(), 0xbebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeba), 0xcb);
        EXPECT(gbc.readMem(0xbebb), 0x65);
        // CB 65 0359
        gbc.setState(0x3e7c, 0x77ae, 0x4080, 0xb452, 0xa8c8, 0x13d, 0x1, 0x1);
        gbc.writeMem(0x3e7c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x77ae);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 035A
        gbc.setState(0xacf8, 0xdf4, 0x4a30, 0xc425, 0xf1fd, 0x5258, 0x1, 0x0);
        gbc.writeMem(0xacf8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdf4);
        EXPECT(gbc.pc(), 0xacfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf8), 0xcb);
        EXPECT(gbc.readMem(0xacf9), 0x65);
        // CB 65 035B
        gbc.setState(0x72a8, 0x320d, 0xa6e0, 0xda01, 0x80f, 0x6369, 0x0, 0x0);
        gbc.writeMem(0x72a8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x320d);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 035C
        gbc.setState(0x2916, 0x6ee4, 0x1520, 0x4df9, 0x5596, 0xb9b4, 0x0, 0x1);
        gbc.writeMem(0x2916, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6ee4);
        EXPECT(gbc.pc(), 0x2918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 035D
        gbc.setState(0x30b8, 0xa6d5, 0x9200, 0x32aa, 0x1477, 0xe20c, 0x0, 0x0);
        gbc.writeMem(0x30b8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa6d5);
        EXPECT(gbc.pc(), 0x30ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 035E
        gbc.setState(0xc44f, 0xc4e7, 0x6530, 0x525a, 0xb7c1, 0xf967, 0x0, 0x0);
        gbc.writeMem(0xc44f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc4e7);
        EXPECT(gbc.pc(), 0xc451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc44f), 0xcb);
        EXPECT(gbc.readMem(0xc450), 0x65);
        // CB 65 035F
        gbc.setState(0x1a92, 0xc2a2, 0x15a0, 0xce91, 0xf432, 0xcc75, 0x0, 0x0);
        gbc.writeMem(0x1a92, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc2a2);
        EXPECT(gbc.pc(), 0x1a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0360
        gbc.setState(0xbc66, 0x2f7d, 0x2dc0, 0xb2b6, 0x9d6, 0x1d1d, 0x1, 0x0);
        gbc.writeMem(0xbc66, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2f7d);
        EXPECT(gbc.pc(), 0xbc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc66), 0xcb);
        EXPECT(gbc.readMem(0xbc67), 0x65);
        // CB 65 0361
        gbc.setState(0x31cd, 0x9737, 0x8860, 0x6c35, 0xbecc, 0x838b, 0x0, 0x0);
        gbc.writeMem(0x31cd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9737);
        EXPECT(gbc.pc(), 0x31cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0362
        gbc.setState(0xa21, 0xb77e, 0xc020, 0xce6b, 0xfb08, 0x6aed, 0x0, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb77e);
        EXPECT(gbc.pc(), 0xa23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0363
        gbc.setState(0xef69, 0x276a, 0x1d60, 0xcc28, 0x1ac2, 0xc14, 0x0, 0x1);
        gbc.writeMem(0xef69, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x276a);
        EXPECT(gbc.pc(), 0xef6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef69), 0xcb);
        EXPECT(gbc.readMem(0xef6a), 0x65);
        // CB 65 0364
        gbc.setState(0x6499, 0x9dad, 0x3610, 0xbba1, 0xd1f2, 0xfd4b, 0x1, 0x0);
        gbc.writeMem(0x6499, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9dad);
        EXPECT(gbc.pc(), 0x649b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0365
        gbc.setState(0xb96e, 0x61dd, 0xb1d0, 0x23c8, 0x95d7, 0x193f, 0x0, 0x1);
        gbc.writeMem(0xb96e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x61dd);
        EXPECT(gbc.pc(), 0xb970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb96e), 0xcb);
        EXPECT(gbc.readMem(0xb96f), 0x65);
        // CB 65 0366
        gbc.setState(0x71ed, 0xa37, 0x5330, 0x572a, 0x6b36, 0xe373, 0x1, 0x1);
        gbc.writeMem(0x71ed, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa37);
        EXPECT(gbc.pc(), 0x71ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0367
        gbc.setState(0xc89b, 0x155b, 0xa8a0, 0xd407, 0xa404, 0x646c, 0x1, 0x0);
        gbc.writeMem(0xc89b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x155b);
        EXPECT(gbc.pc(), 0xc89d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc89b), 0xcb);
        EXPECT(gbc.readMem(0xc89c), 0x65);
        // CB 65 0368
        gbc.setState(0x883e, 0x8c3e, 0xd660, 0xf6b0, 0x6c8c, 0xe1ef, 0x0, 0x0);
        gbc.writeMem(0x883e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0x8840);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x883e), 0xcb);
        EXPECT(gbc.readMem(0x883f), 0x65);
        // CB 65 0369
        gbc.setState(0x805a, 0xc37f, 0x3f60, 0x97d1, 0x3163, 0xf536, 0x1, 0x1);
        gbc.writeMem(0x805a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc37f);
        EXPECT(gbc.pc(), 0x805c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x805a), 0xcb);
        EXPECT(gbc.readMem(0x805b), 0x65);
        // CB 65 036A
        gbc.setState(0xacc8, 0xc148, 0x3e80, 0x1420, 0x897d, 0x122e, 0x1, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xc148);
        EXPECT(gbc.pc(), 0xacca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc8), 0xcb);
        EXPECT(gbc.readMem(0xacc9), 0x65);
        // CB 65 036B
        gbc.setState(0xad7, 0x9688, 0x7d20, 0x53d2, 0x9014, 0x9b2f, 0x0, 0x1);
        gbc.writeMem(0xad7, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9688);
        EXPECT(gbc.pc(), 0xad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 036C
        gbc.setState(0x2057, 0xd6fa, 0x9030, 0x64d9, 0xaf8d, 0x6ed4, 0x1, 0x0);
        gbc.writeMem(0x2057, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd6fa);
        EXPECT(gbc.pc(), 0x2059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 036D
        gbc.setState(0xcc1c, 0xe5b3, 0xbc40, 0x189a, 0x6bd3, 0x9b67, 0x0, 0x1);
        gbc.writeMem(0xcc1c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe5b3);
        EXPECT(gbc.pc(), 0xcc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc1c), 0xcb);
        EXPECT(gbc.readMem(0xcc1d), 0x65);
        // CB 65 036E
        gbc.setState(0x787d, 0xcc8f, 0xfe60, 0x9e39, 0x5082, 0x3329, 0x1, 0x1);
        gbc.writeMem(0x787d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcc8f);
        EXPECT(gbc.pc(), 0x787f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 036F
        gbc.setState(0x5668, 0xac8a, 0x3050, 0x4ea8, 0x3e3d, 0x1b95, 0x0, 0x0);
        gbc.writeMem(0x5668, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xac8a);
        EXPECT(gbc.pc(), 0x566a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0370
        gbc.setState(0x8a5f, 0x1f9a, 0xb6d0, 0x692b, 0x1a9b, 0x8435, 0x1, 0x1);
        gbc.writeMem(0x8a5f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1f9a);
        EXPECT(gbc.pc(), 0x8a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5f), 0xcb);
        EXPECT(gbc.readMem(0x8a60), 0x65);
        // CB 65 0371
        gbc.setState(0x1dce, 0x6096, 0xa260, 0x1d67, 0x8372, 0xd665, 0x1, 0x0);
        gbc.writeMem(0x1dce, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6096);
        EXPECT(gbc.pc(), 0x1dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0372
        gbc.setState(0xb837, 0xbc30, 0xe580, 0x39b2, 0x11, 0x5c88, 0x1, 0x1);
        gbc.writeMem(0xb837, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbc30);
        EXPECT(gbc.pc(), 0xb839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb837), 0xcb);
        EXPECT(gbc.readMem(0xb838), 0x65);
        // CB 65 0374
        gbc.setState(0x20bd, 0x9129, 0xe150, 0x165a, 0x39f6, 0xb17d, 0x1, 0x1);
        gbc.writeMem(0x20bd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9129);
        EXPECT(gbc.pc(), 0x20bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0375
        gbc.setState(0xa4da, 0xfa19, 0xf340, 0xba62, 0xfd4, 0xc002, 0x1, 0x1);
        gbc.writeMem(0xa4da, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0xa4dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4da), 0xcb);
        EXPECT(gbc.readMem(0xa4db), 0x65);
        // CB 65 0376
        gbc.setState(0x1e7f, 0x809, 0xd430, 0x601f, 0x7bec, 0xb26c, 0x1, 0x0);
        gbc.writeMem(0x1e7f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x809);
        EXPECT(gbc.pc(), 0x1e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0377
        gbc.setState(0xcff5, 0xf74d, 0xd590, 0x3abc, 0xcb1b, 0x7bc0, 0x1, 0x1);
        gbc.writeMem(0xcff5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xf74d);
        EXPECT(gbc.pc(), 0xcff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff5), 0xcb);
        EXPECT(gbc.readMem(0xcff6), 0x65);
        // CB 65 0378
        gbc.setState(0x83f, 0x4424, 0xcf0, 0x5095, 0x1a6e, 0xff18, 0x0, 0x1);
        gbc.writeMem(0x83f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4424);
        EXPECT(gbc.pc(), 0x841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0379
        gbc.setState(0xe203, 0x7404, 0xc530, 0xa45d, 0xc2db, 0x7ec3, 0x1, 0x0);
        gbc.writeMem(0xe203, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7404);
        EXPECT(gbc.pc(), 0xe205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe203), 0xcb);
        EXPECT(gbc.readMem(0xe204), 0x65);
        // CB 65 037A
        gbc.setState(0xd41d, 0xb038, 0xe0b0, 0x433a, 0x5861, 0xd3e2, 0x0, 0x0);
        gbc.writeMem(0xd41d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb038);
        EXPECT(gbc.pc(), 0xd41f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd41d), 0xcb);
        EXPECT(gbc.readMem(0xd41e), 0x65);
        // CB 65 037B
        gbc.setState(0x4076, 0x258b, 0x1440, 0xe658, 0xec0c, 0xf0cb, 0x1, 0x1);
        gbc.writeMem(0x4076, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x258b);
        EXPECT(gbc.pc(), 0x4078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 037C
        gbc.setState(0x5a0b, 0xcd0, 0xfb60, 0x3769, 0x4853, 0x9d7b, 0x0, 0x1);
        gbc.writeMem(0x5a0b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcd0);
        EXPECT(gbc.pc(), 0x5a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 037D
        gbc.setState(0x7672, 0x3ff5, 0xcc00, 0xf547, 0xae85, 0x4d83, 0x0, 0x1);
        gbc.writeMem(0x7672, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3ff5);
        EXPECT(gbc.pc(), 0x7674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 037E
        gbc.setState(0xe78b, 0x47b0, 0xb9e0, 0x4135, 0x582a, 0x6028, 0x0, 0x0);
        gbc.writeMem(0xe78b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x47b0);
        EXPECT(gbc.pc(), 0xe78d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78b), 0xcb);
        EXPECT(gbc.readMem(0xe78c), 0x65);
        // CB 65 037F
        gbc.setState(0xe8ec, 0xce2c, 0x4ac0, 0x7521, 0x9994, 0x85e6, 0x0, 0x0);
        gbc.writeMem(0xe8ec, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xce2c);
        EXPECT(gbc.pc(), 0xe8ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ec), 0xcb);
        EXPECT(gbc.readMem(0xe8ed), 0x65);
        // CB 65 0380
        gbc.setState(0x8b27, 0xd598, 0x5c0, 0xc177, 0x81c5, 0x140a, 0x0, 0x1);
        gbc.writeMem(0x8b27, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd598);
        EXPECT(gbc.pc(), 0x8b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b27), 0xcb);
        EXPECT(gbc.readMem(0x8b28), 0x65);
        // CB 65 0381
        gbc.setState(0x9ab, 0x41a5, 0xd330, 0x5ac, 0x7270, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0x9ab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x41a5);
        EXPECT(gbc.pc(), 0x9ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0382
        gbc.setState(0xad6a, 0xb9ca, 0xae50, 0x7150, 0x1966, 0xa304, 0x0, 0x1);
        gbc.writeMem(0xad6a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb9ca);
        EXPECT(gbc.pc(), 0xad6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6a), 0xcb);
        EXPECT(gbc.readMem(0xad6b), 0x65);
        // CB 65 0383
        gbc.setState(0x7d76, 0x5cc6, 0x8830, 0x6e16, 0xa81e, 0x33af, 0x0, 0x0);
        gbc.writeMem(0x7d76, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5cc6);
        EXPECT(gbc.pc(), 0x7d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0384
        gbc.setState(0x6faf, 0xde00, 0x88c0, 0x9634, 0x5672, 0x6fa6, 0x0, 0x1);
        gbc.writeMem(0x6faf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xde00);
        EXPECT(gbc.pc(), 0x6fb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0385
        gbc.setState(0x3cc0, 0x3210, 0xbf0, 0xe81d, 0xf27b, 0x893c, 0x1, 0x1);
        gbc.writeMem(0x3cc0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3210);
        EXPECT(gbc.pc(), 0x3cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0386
        gbc.setState(0xaf3a, 0xf16, 0xedc0, 0x8303, 0x9e40, 0xaf5a, 0x0, 0x0);
        gbc.writeMem(0xaf3a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf16);
        EXPECT(gbc.pc(), 0xaf3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3a), 0xcb);
        EXPECT(gbc.readMem(0xaf3b), 0x65);
        // CB 65 0387
        gbc.setState(0x533, 0x7748, 0x7610, 0xf74b, 0xf1b2, 0xc2f6, 0x0, 0x0);
        gbc.writeMem(0x533, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7748);
        EXPECT(gbc.pc(), 0x535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0388
        gbc.setState(0x48e3, 0x39bc, 0x8d50, 0x7fc0, 0x3e9d, 0xa765, 0x0, 0x0);
        gbc.writeMem(0x48e3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x39bc);
        EXPECT(gbc.pc(), 0x48e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0389
        gbc.setState(0xa5d1, 0x1236, 0xc180, 0xba85, 0x274e, 0x3f15, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1236);
        EXPECT(gbc.pc(), 0xa5d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d1), 0xcb);
        EXPECT(gbc.readMem(0xa5d2), 0x65);
        // CB 65 038A
        gbc.setState(0x7f94, 0x6ee0, 0x6a80, 0xe62, 0x3d60, 0xc4e0, 0x0, 0x0);
        gbc.writeMem(0x7f94, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6ee0);
        EXPECT(gbc.pc(), 0x7f96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 038B
        gbc.setState(0xb90d, 0x56a, 0x7310, 0xe972, 0xd272, 0x5d88, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x56a);
        EXPECT(gbc.pc(), 0xb90f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90d), 0xcb);
        EXPECT(gbc.readMem(0xb90e), 0x65);
        // CB 65 038C
        gbc.setState(0x68a6, 0x9fef, 0x67d0, 0x44db, 0x5308, 0x2f79, 0x1, 0x1);
        gbc.writeMem(0x68a6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9fef);
        EXPECT(gbc.pc(), 0x68a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 038E
        gbc.setState(0x1e98, 0xd29c, 0x31b0, 0xcca5, 0x6458, 0xce7c, 0x1, 0x0);
        gbc.writeMem(0x1e98, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd29c);
        EXPECT(gbc.pc(), 0x1e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 038F
        gbc.setState(0xc57d, 0x367d, 0xe300, 0xc2f9, 0xe4b8, 0xbb76, 0x1, 0x0);
        gbc.writeMem(0xc57d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x367d);
        EXPECT(gbc.pc(), 0xc57f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc57d), 0xcb);
        EXPECT(gbc.readMem(0xc57e), 0x65);
        // CB 65 0390
        gbc.setState(0x9ce3, 0x94dd, 0x3e70, 0xe762, 0x3790, 0x845f, 0x1, 0x1);
        gbc.writeMem(0x9ce3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x94dd);
        EXPECT(gbc.pc(), 0x9ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce3), 0xcb);
        EXPECT(gbc.readMem(0x9ce4), 0x65);
        // CB 65 0391
        gbc.setState(0x545d, 0x5a18, 0x4f80, 0x3fec, 0xae8e, 0xd8c1, 0x1, 0x1);
        gbc.writeMem(0x545d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5a18);
        EXPECT(gbc.pc(), 0x545f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 0392
        gbc.setState(0xcd89, 0x35f8, 0xf2b0, 0x24cd, 0x1f0d, 0x3c6a, 0x1, 0x0);
        gbc.writeMem(0xcd89, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x35f8);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd89), 0xcb);
        EXPECT(gbc.readMem(0xcd8a), 0x65);
        // CB 65 0393
        gbc.setState(0xe0ec, 0x8387, 0xde00, 0x4bed, 0x2aa1, 0x5875, 0x1, 0x0);
        gbc.writeMem(0xe0ec, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8387);
        EXPECT(gbc.pc(), 0xe0ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ec), 0xcb);
        EXPECT(gbc.readMem(0xe0ed), 0x65);
        // CB 65 0394
        gbc.setState(0xec2, 0xc507, 0xf2f0, 0x5d15, 0x4b90, 0x1ed9, 0x0, 0x0);
        gbc.writeMem(0xec2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc507);
        EXPECT(gbc.pc(), 0xec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 0395
        gbc.setState(0xc82b, 0xf95, 0x320, 0x7160, 0x8e96, 0x9c30, 0x1, 0x1);
        gbc.writeMem(0xc82b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xf95);
        EXPECT(gbc.pc(), 0xc82d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc82b), 0xcb);
        EXPECT(gbc.readMem(0xc82c), 0x65);
        // CB 65 0396
        gbc.setState(0xb1f4, 0xe0cb, 0x9200, 0x6b3d, 0xbd5e, 0x9292, 0x0, 0x0);
        gbc.writeMem(0xb1f4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe0cb);
        EXPECT(gbc.pc(), 0xb1f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f4), 0xcb);
        EXPECT(gbc.readMem(0xb1f5), 0x65);
        // CB 65 0397
        gbc.setState(0xcaf1, 0xaecd, 0x8060, 0x917b, 0x1fee, 0x2588, 0x0, 0x1);
        gbc.writeMem(0xcaf1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaecd);
        EXPECT(gbc.pc(), 0xcaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf1), 0xcb);
        EXPECT(gbc.readMem(0xcaf2), 0x65);
        // CB 65 0399
        gbc.setState(0x87ab, 0x16ca, 0x1a70, 0x2c9b, 0xff9a, 0x2004, 0x0, 0x0);
        gbc.writeMem(0x87ab, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x16ca);
        EXPECT(gbc.pc(), 0x87ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ab), 0xcb);
        EXPECT(gbc.readMem(0x87ac), 0x65);
        // CB 65 039A
        gbc.setState(0x78dc, 0xf87, 0xdec0, 0xece9, 0x3192, 0x7e03, 0x0, 0x0);
        gbc.writeMem(0x78dc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xf87);
        EXPECT(gbc.pc(), 0x78de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 039B
        gbc.setState(0x9f55, 0x3215, 0xdf0, 0xfaa9, 0x290d, 0xcee6, 0x0, 0x0);
        gbc.writeMem(0x9f55, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3215);
        EXPECT(gbc.pc(), 0x9f57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f55), 0xcb);
        EXPECT(gbc.readMem(0x9f56), 0x65);
        // CB 65 039C
        gbc.setState(0x77cd, 0xee49, 0x2fc0, 0x5da1, 0x492e, 0x6509, 0x1, 0x1);
        gbc.writeMem(0x77cd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xee49);
        EXPECT(gbc.pc(), 0x77cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 039D
        gbc.setState(0x5dc, 0xbb59, 0x2870, 0x71f1, 0xfacb, 0xdce6, 0x1, 0x0);
        gbc.writeMem(0x5dc, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0x5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 039E
        gbc.setState(0x9755, 0xf0ef, 0xcef0, 0xb329, 0x5d00, 0x931e, 0x0, 0x0);
        gbc.writeMem(0x9755, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf0ef);
        EXPECT(gbc.pc(), 0x9757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9755), 0xcb);
        EXPECT(gbc.readMem(0x9756), 0x65);
        // CB 65 039F
        gbc.setState(0xe062, 0xe754, 0xbc20, 0x9447, 0x1ee9, 0x4e65, 0x0, 0x1);
        gbc.writeMem(0xe062, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe754);
        EXPECT(gbc.pc(), 0xe064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe062), 0xcb);
        EXPECT(gbc.readMem(0xe063), 0x65);
        // CB 65 03A0
        gbc.setState(0xe274, 0xadad, 0xb950, 0xfc4a, 0xe31b, 0x55c1, 0x0, 0x0);
        gbc.writeMem(0xe274, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xadad);
        EXPECT(gbc.pc(), 0xe276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe274), 0xcb);
        EXPECT(gbc.readMem(0xe275), 0x65);
        // CB 65 03A1
        gbc.setState(0x9a88, 0x2dfe, 0x6c50, 0xc7b8, 0x6ee8, 0x15a, 0x1, 0x1);
        gbc.writeMem(0x9a88, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x2dfe);
        EXPECT(gbc.pc(), 0x9a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a88), 0xcb);
        EXPECT(gbc.readMem(0x9a89), 0x65);
        // CB 65 03A2
        gbc.setState(0x4cb6, 0xe836, 0x3dc0, 0xcabb, 0xfeb1, 0xdf3e, 0x1, 0x1);
        gbc.writeMem(0x4cb6, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe836);
        EXPECT(gbc.pc(), 0x4cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03A3
        gbc.setState(0x539c, 0x2052, 0xa3c0, 0x454c, 0xb21e, 0x6150, 0x0, 0x0);
        gbc.writeMem(0x539c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2052);
        EXPECT(gbc.pc(), 0x539e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03A4
        gbc.setState(0x776c, 0xd4db, 0xf2b0, 0xdd83, 0x5630, 0x2090, 0x0, 0x1);
        gbc.writeMem(0x776c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd4db);
        EXPECT(gbc.pc(), 0x776e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03A5
        gbc.setState(0x2977, 0xf135, 0xdc80, 0xc133, 0x3362, 0x5268, 0x0, 0x0);
        gbc.writeMem(0x2977, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf135);
        EXPECT(gbc.pc(), 0x2979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03A6
        gbc.setState(0x4e22, 0xe7e3, 0x7f00, 0xf8dc, 0x8676, 0x8fa4, 0x1, 0x1);
        gbc.writeMem(0x4e22, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe7e3);
        EXPECT(gbc.pc(), 0x4e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03A7
        gbc.setState(0x3454, 0x312c, 0x5290, 0x76c1, 0x9661, 0x581d, 0x0, 0x1);
        gbc.writeMem(0x3454, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x312c);
        EXPECT(gbc.pc(), 0x3456);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03A8
        gbc.setState(0x5a89, 0x892c, 0xe210, 0x124b, 0x3c4b, 0x279b, 0x0, 0x1);
        gbc.writeMem(0x5a89, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x892c);
        EXPECT(gbc.pc(), 0x5a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03A9
        gbc.setState(0x4b55, 0xb2af, 0x7e90, 0xc515, 0x5fcc, 0x6a94, 0x0, 0x1);
        gbc.writeMem(0x4b55, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb2af);
        EXPECT(gbc.pc(), 0x4b57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03AA
        gbc.setState(0xd322, 0xf10a, 0x2480, 0x73d7, 0x6d35, 0xa866, 0x0, 0x0);
        gbc.writeMem(0xd322, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf10a);
        EXPECT(gbc.pc(), 0xd324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd322), 0xcb);
        EXPECT(gbc.readMem(0xd323), 0x65);
        // CB 65 03AB
        gbc.setState(0x2714, 0x1704, 0xf5b0, 0xa59d, 0x6080, 0x31d, 0x1, 0x0);
        gbc.writeMem(0x2714, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1704);
        EXPECT(gbc.pc(), 0x2716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03AD
        gbc.setState(0x9534, 0xab50, 0x16d0, 0x1710, 0x2607, 0xf755, 0x1, 0x0);
        gbc.writeMem(0x9534, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xab50);
        EXPECT(gbc.pc(), 0x9536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9534), 0xcb);
        EXPECT(gbc.readMem(0x9535), 0x65);
        // CB 65 03AE
        gbc.setState(0x6ccd, 0xa756, 0x1d00, 0x3493, 0xa20d, 0x5b3d, 0x0, 0x1);
        gbc.writeMem(0x6ccd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa756);
        EXPECT(gbc.pc(), 0x6ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03AF
        gbc.setState(0x1b13, 0x7025, 0xdc30, 0xf320, 0xa6a2, 0xe54a, 0x0, 0x0);
        gbc.writeMem(0x1b13, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7025);
        EXPECT(gbc.pc(), 0x1b15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03B0
        gbc.setState(0x5e8, 0x928a, 0xb7a0, 0xa443, 0x660d, 0xc36b, 0x0, 0x0);
        gbc.writeMem(0x5e8, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x928a);
        EXPECT(gbc.pc(), 0x5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03B1
        gbc.setState(0x78ff, 0xa57f, 0x5180, 0xf2ea, 0x35f0, 0x1d53, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa57f);
        EXPECT(gbc.pc(), 0x7901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03B2
        gbc.setState(0xc0aa, 0x5972, 0xdfc0, 0x3611, 0xefeb, 0x41b7, 0x0, 0x1);
        gbc.writeMem(0xc0aa, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5972);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0aa), 0xcb);
        EXPECT(gbc.readMem(0xc0ab), 0x65);
        // CB 65 03B3
        gbc.setState(0x4578, 0x6109, 0x2fd0, 0x3611, 0x82dc, 0xb250, 0x1, 0x0);
        gbc.writeMem(0x4578, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6109);
        EXPECT(gbc.pc(), 0x457a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03B4
        gbc.setState(0x7ec3, 0xb4b7, 0xc6d0, 0x46ff, 0x409d, 0x4e5b, 0x1, 0x1);
        gbc.writeMem(0x7ec3, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb4b7);
        EXPECT(gbc.pc(), 0x7ec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03B5
        gbc.setState(0x719a, 0x1c3a, 0xb520, 0x2cb9, 0x98a, 0xc023, 0x0, 0x0);
        gbc.writeMem(0x719a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1c3a);
        EXPECT(gbc.pc(), 0x719c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03B6
        gbc.setState(0xc451, 0xa67e, 0x630, 0x1562, 0x78c8, 0xc2b9, 0x0, 0x1);
        gbc.writeMem(0xc451, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa67e);
        EXPECT(gbc.pc(), 0xc453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc451), 0xcb);
        EXPECT(gbc.readMem(0xc452), 0x65);
        // CB 65 03B7
        gbc.setState(0xc581, 0x3101, 0xdc40, 0xd344, 0xaaa1, 0x546b, 0x0, 0x1);
        gbc.writeMem(0xc581, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3101);
        EXPECT(gbc.pc(), 0xc583);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc581), 0xcb);
        EXPECT(gbc.readMem(0xc582), 0x65);
        // CB 65 03B8
        gbc.setState(0x2e13, 0x4af9, 0xf0, 0x457c, 0xb73f, 0x55b1, 0x1, 0x1);
        gbc.writeMem(0x2e13, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4af9);
        EXPECT(gbc.pc(), 0x2e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03B9
        gbc.setState(0x8198, 0xc633, 0x3f00, 0x7010, 0x6037, 0x28ed, 0x0, 0x0);
        gbc.writeMem(0x8198, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc633);
        EXPECT(gbc.pc(), 0x819a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8198), 0xcb);
        EXPECT(gbc.readMem(0x8199), 0x65);
        // CB 65 03BA
        gbc.setState(0x7968, 0x8280, 0xfe90, 0xf0b9, 0xe05a, 0x5fa0, 0x1, 0x0);
        gbc.writeMem(0x7968, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8280);
        EXPECT(gbc.pc(), 0x796a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03BB
        gbc.setState(0xd2f0, 0x9698, 0x37f0, 0xdb71, 0x3b02, 0x4f32, 0x1, 0x0);
        gbc.writeMem(0xd2f0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9698);
        EXPECT(gbc.pc(), 0xd2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f0), 0xcb);
        EXPECT(gbc.readMem(0xd2f1), 0x65);
        // CB 65 03BC
        gbc.setState(0xafe1, 0xf8e3, 0x2a0, 0x4b0e, 0x3907, 0xd16c, 0x1, 0x1);
        gbc.writeMem(0xafe1, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf8e3);
        EXPECT(gbc.pc(), 0xafe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe1), 0xcb);
        EXPECT(gbc.readMem(0xafe2), 0x65);
        // CB 65 03BD
        gbc.setState(0xc88d, 0x210f, 0xda80, 0x40ff, 0x7590, 0x518c, 0x0, 0x1);
        gbc.writeMem(0xc88d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x210f);
        EXPECT(gbc.pc(), 0xc88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc88d), 0xcb);
        EXPECT(gbc.readMem(0xc88e), 0x65);
        // CB 65 03BF
        gbc.setState(0x29dd, 0xa924, 0xf4d0, 0xfb82, 0x22f6, 0xa25a, 0x0, 0x1);
        gbc.writeMem(0x29dd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa924);
        EXPECT(gbc.pc(), 0x29df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03C0
        gbc.setState(0x3f2c, 0x2513, 0x2290, 0x45d9, 0xba09, 0x4552, 0x0, 0x0);
        gbc.writeMem(0x3f2c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2513);
        EXPECT(gbc.pc(), 0x3f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03C1
        gbc.setState(0x18be, 0xc424, 0x6cd0, 0x2fe2, 0x6ebf, 0x583e, 0x1, 0x0);
        gbc.writeMem(0x18be, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0x18c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03C2
        gbc.setState(0xd140, 0x6cd5, 0x8b30, 0x527b, 0x8f71, 0xb046, 0x0, 0x0);
        gbc.writeMem(0xd140, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6cd5);
        EXPECT(gbc.pc(), 0xd142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd140), 0xcb);
        EXPECT(gbc.readMem(0xd141), 0x65);
        // CB 65 03C3
        gbc.setState(0xcd9a, 0x8ec2, 0x7ac0, 0xf67c, 0xa120, 0x8db7, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8ec2);
        EXPECT(gbc.pc(), 0xcd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9a), 0xcb);
        EXPECT(gbc.readMem(0xcd9b), 0x65);
        // CB 65 03C4
        gbc.setState(0x42e4, 0xca32, 0x3840, 0xaeeb, 0x581, 0x6613, 0x0, 0x1);
        gbc.writeMem(0x42e4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xca32);
        EXPECT(gbc.pc(), 0x42e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03C5
        gbc.setState(0xd213, 0x97d5, 0x5ce0, 0x741b, 0x387b, 0x3718, 0x1, 0x0);
        gbc.writeMem(0xd213, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x97d5);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd213), 0xcb);
        EXPECT(gbc.readMem(0xd214), 0x65);
        // CB 65 03C6
        gbc.setState(0x5de4, 0x3afb, 0x2390, 0x8fae, 0x65bd, 0x4924, 0x1, 0x0);
        gbc.writeMem(0x5de4, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3afb);
        EXPECT(gbc.pc(), 0x5de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03C7
        gbc.setState(0xd195, 0x9505, 0xca30, 0x77d0, 0x52ae, 0xbea0, 0x0, 0x0);
        gbc.writeMem(0xd195, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9505);
        EXPECT(gbc.pc(), 0xd197);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd195), 0xcb);
        EXPECT(gbc.readMem(0xd196), 0x65);
        // CB 65 03C8
        gbc.setState(0xaa84, 0xb964, 0x32b0, 0x302b, 0x22b3, 0x1318, 0x0, 0x0);
        gbc.writeMem(0xaa84, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb964);
        EXPECT(gbc.pc(), 0xaa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa84), 0xcb);
        EXPECT(gbc.readMem(0xaa85), 0x65);
        // CB 65 03C9
        gbc.setState(0xbdfd, 0x133d, 0x5460, 0xc4a2, 0x5fb, 0x8e8, 0x0, 0x1);
        gbc.writeMem(0xbdfd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x133d);
        EXPECT(gbc.pc(), 0xbdff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdfd), 0xcb);
        EXPECT(gbc.readMem(0xbdfe), 0x65);
        // CB 65 03CB
        gbc.setState(0xd757, 0xc9d4, 0x32c0, 0xc604, 0x8937, 0x36d1, 0x0, 0x0);
        gbc.writeMem(0xd757, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc9d4);
        EXPECT(gbc.pc(), 0xd759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd757), 0xcb);
        EXPECT(gbc.readMem(0xd758), 0x65);
        // CB 65 03CC
        gbc.setState(0xd84e, 0x9d90, 0x6ba0, 0x72bd, 0x864, 0x5554, 0x0, 0x0);
        gbc.writeMem(0xd84e, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9d90);
        EXPECT(gbc.pc(), 0xd850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd84e), 0xcb);
        EXPECT(gbc.readMem(0xd84f), 0x65);
        // CB 65 03CD
        gbc.setState(0x111d, 0xe48d, 0xd9b0, 0xc7be, 0x2dc8, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0x111d, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe48d);
        EXPECT(gbc.pc(), 0x111f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03CE
        gbc.setState(0x94d2, 0xd23c, 0x4e50, 0xfd1c, 0xc292, 0x3adc, 0x1, 0x0);
        gbc.writeMem(0x94d2, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd23c);
        EXPECT(gbc.pc(), 0x94d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d2), 0xcb);
        EXPECT(gbc.readMem(0x94d3), 0x65);
        // CB 65 03CF
        gbc.setState(0xb75c, 0xe090, 0x3f10, 0x2161, 0x648c, 0x61b2, 0x1, 0x0);
        gbc.writeMem(0xb75c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe090);
        EXPECT(gbc.pc(), 0xb75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75c), 0xcb);
        EXPECT(gbc.readMem(0xb75d), 0x65);
        // CB 65 03D0
        gbc.setState(0xcbc9, 0x290b, 0x96a0, 0xa747, 0xeebb, 0x680, 0x1, 0x1);
        gbc.writeMem(0xcbc9, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x290b);
        EXPECT(gbc.pc(), 0xcbcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc9), 0xcb);
        EXPECT(gbc.readMem(0xcbca), 0x65);
        // CB 65 03D1
        gbc.setState(0x4953, 0xb8e4, 0x6c60, 0xe354, 0xbb4e, 0x74bf, 0x1, 0x1);
        gbc.writeMem(0x4953, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb8e4);
        EXPECT(gbc.pc(), 0x4955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03D2
        gbc.setState(0x1731, 0xa566, 0x5dd0, 0x6485, 0x7a14, 0x7d73, 0x1, 0x1);
        gbc.writeMem(0x1731, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa566);
        EXPECT(gbc.pc(), 0x1733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03D3
        gbc.setState(0xb775, 0x295, 0xca30, 0xdfa8, 0x461d, 0x4eca, 0x1, 0x1);
        gbc.writeMem(0xb775, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x295);
        EXPECT(gbc.pc(), 0xb777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb775), 0xcb);
        EXPECT(gbc.readMem(0xb776), 0x65);
        // CB 65 03D4
        gbc.setState(0x59f5, 0x4e, 0x6a50, 0x850f, 0x4066, 0xb200, 0x1, 0x1);
        gbc.writeMem(0x59f5, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4e);
        EXPECT(gbc.pc(), 0x59f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03D5
        gbc.setState(0x54cf, 0xf08c, 0xdcf0, 0x7ae6, 0xa29b, 0xb639, 0x0, 0x1);
        gbc.writeMem(0x54cf, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf08c);
        EXPECT(gbc.pc(), 0x54d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03D6
        gbc.setState(0x181f, 0x8fb0, 0xd2f0, 0xf65a, 0x4420, 0x550c, 0x1, 0x1);
        gbc.writeMem(0x181f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x8fb0);
        EXPECT(gbc.pc(), 0x1821);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03D7
        gbc.setState(0x5083, 0xf81f, 0x8980, 0xd464, 0xe58c, 0xfdc5, 0x0, 0x1);
        gbc.writeMem(0x5083, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf81f);
        EXPECT(gbc.pc(), 0x5085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03D8
        gbc.setState(0x9e93, 0x42fe, 0xdb00, 0x440f, 0x8ab9, 0x3de5, 0x0, 0x1);
        gbc.writeMem(0x9e93, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x42fe);
        EXPECT(gbc.pc(), 0x9e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e93), 0xcb);
        EXPECT(gbc.readMem(0x9e94), 0x65);
        // CB 65 03D9
        gbc.setState(0xb849, 0x47b1, 0x58a0, 0x8a45, 0x28ab, 0x9dfa, 0x1, 0x0);
        gbc.writeMem(0xb849, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x47b1);
        EXPECT(gbc.pc(), 0xb84b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb849), 0xcb);
        EXPECT(gbc.readMem(0xb84a), 0x65);
        // CB 65 03DA
        gbc.setState(0x58e0, 0xc239, 0xf3c0, 0x1345, 0x2ed8, 0xb099, 0x0, 0x1);
        gbc.writeMem(0x58e0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc239);
        EXPECT(gbc.pc(), 0x58e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03DB
        gbc.setState(0xd67f, 0xf6a3, 0xabe0, 0x7bb0, 0xbd04, 0xda11, 0x1, 0x1);
        gbc.writeMem(0xd67f, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf6a3);
        EXPECT(gbc.pc(), 0xd681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd67f), 0xcb);
        EXPECT(gbc.readMem(0xd680), 0x65);
        // CB 65 03DC
        gbc.setState(0x49af, 0x9fe4, 0x8f30, 0x6c81, 0x1448, 0xc56e, 0x0, 0x0);
        gbc.writeMem(0x49af, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9fe4);
        EXPECT(gbc.pc(), 0x49b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 65 03DD
        gbc.setState(0xbbd, 0xc76f, 0x4620, 0x8186, 0x42cf, 0xfbc8, 0x0, 0x0);
        gbc.writeMem(0xbbd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc76f);
        EXPECT(gbc.pc(), 0xbbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03DE
        gbc.setState(0x64cd, 0x73e6, 0xf1c0, 0x1a2, 0xaea, 0xd374, 0x0, 0x0);
        gbc.writeMem(0x64cd, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x73e6);
        EXPECT(gbc.pc(), 0x64cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03DF
        gbc.setState(0xe1ba, 0xebad, 0x3790, 0x414a, 0x52ee, 0xf8ab, 0x0, 0x0);
        gbc.writeMem(0xe1ba, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xebad);
        EXPECT(gbc.pc(), 0xe1bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ba), 0xcb);
        EXPECT(gbc.readMem(0xe1bb), 0x65);
        // CB 65 03E1
        gbc.setState(0xdd70, 0x562f, 0xc650, 0x6a31, 0x1d3, 0x7adf, 0x1, 0x0);
        gbc.writeMem(0xdd70, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x562f);
        EXPECT(gbc.pc(), 0xdd72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd70), 0xcb);
        EXPECT(gbc.readMem(0xdd71), 0x65);
        // CB 65 03E2
        gbc.setState(0x8874, 0xd573, 0xdc0, 0x1914, 0xc47c, 0xa507, 0x0, 0x0);
        gbc.writeMem(0x8874, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd573);
        EXPECT(gbc.pc(), 0x8876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8874), 0xcb);
        EXPECT(gbc.readMem(0x8875), 0x65);
        // CB 65 03E3
        gbc.setState(0x276c, 0xcf90, 0x7100, 0x1e61, 0x57ab, 0x83a3, 0x0, 0x0);
        gbc.writeMem(0x276c, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcf90);
        EXPECT(gbc.pc(), 0x276e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03E4
        gbc.setState(0xc3f0, 0x141b, 0x2250, 0x785e, 0xef59, 0xf250, 0x1, 0x0);
        gbc.writeMem(0xc3f0, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x141b);
        EXPECT(gbc.pc(), 0xc3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f0), 0xcb);
        EXPECT(gbc.readMem(0xc3f1), 0x65);
        // CB 65 03E5
        gbc.setState(0x7d0b, 0xc475, 0x52e0, 0x50e3, 0x134, 0x9df2, 0x1, 0x1);
        gbc.writeMem(0x7d0b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc475);
        EXPECT(gbc.pc(), 0x7d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 65 03E6
        gbc.setState(0x940b, 0x67ef, 0x27e0, 0xf1f, 0x1c2d, 0x732c, 0x0, 0x1);
        gbc.writeMem(0x940b, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0x940d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940b), 0xcb);
        EXPECT(gbc.readMem(0x940c), 0x65);
        // CB 65 03E7
        gbc.setState(0x6f11, 0xe9ae, 0xc540, 0xd2d7, 0xed71, 0x6d3d, 0x0, 0x0);
        gbc.writeMem(0x6f11, { 0xcb, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe9ae);
        EXPECT(gbc.pc(), 0x6f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
