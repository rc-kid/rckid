#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_ba)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_ba) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // BA 0000
        gbc.setState(0x9a4, 0xc80b, 0x9cf0, 0xdbe4, 0xa178, 0x2268, 0x0, 0x1);
        gbc.writeMem(0x9a4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc80b);
        EXPECT(gbc.pc(), 0x9a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0001
        gbc.setState(0x1d3b, 0x906e, 0x37b0, 0x315b, 0xe208, 0x71c6, 0x0, 0x0);
        gbc.writeMem(0x1d3b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x906e);
        EXPECT(gbc.pc(), 0x1d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0002
        gbc.setState(0xaa3d, 0x4d50, 0xe040, 0x9540, 0x6873, 0x6f0b, 0x1, 0x1);
        gbc.writeMem(0xaa3d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4d50);
        EXPECT(gbc.pc(), 0xaa3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa3d), 0xba);
        // BA 0003
        gbc.setState(0xd3c0, 0x8b3d, 0x3900, 0x50d3, 0xc313, 0x45a8, 0x1, 0x1);
        gbc.writeMem(0xd3c0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8b3d);
        EXPECT(gbc.pc(), 0xd3c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3c0), 0xba);
        // BA 0004
        gbc.setState(0xd369, 0xffa8, 0xdfe0, 0x2365, 0x507b, 0x14e5, 0x0, 0x1);
        gbc.writeMem(0xd369, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xffa8);
        EXPECT(gbc.pc(), 0xd36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd369), 0xba);
        // BA 0005
        gbc.setState(0x781a, 0xd4b9, 0xea30, 0x644d, 0x39b2, 0xd0bf, 0x1, 0x1);
        gbc.writeMem(0x781a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd4b9);
        EXPECT(gbc.pc(), 0x781b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0006
        gbc.setState(0xb010, 0xf1e9, 0x9080, 0x25c8, 0x81d7, 0x6f69, 0x0, 0x1);
        gbc.writeMem(0xb010, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf1e9);
        EXPECT(gbc.pc(), 0xb011);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb010), 0xba);
        // BA 0007
        gbc.setState(0xe375, 0xaaec, 0x41e0, 0xc1e9, 0x49c1, 0x6233, 0x0, 0x1);
        gbc.writeMem(0xe375, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xaaec);
        EXPECT(gbc.pc(), 0xe376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe375), 0xba);
        // BA 0008
        gbc.setState(0xb4eb, 0xd7f5, 0x2df0, 0x8028, 0x9728, 0xf1c2, 0x0, 0x0);
        gbc.writeMem(0xb4eb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0xb4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4eb), 0xba);
        // BA 0009
        gbc.setState(0x83a, 0x9a2f, 0xff50, 0x2c65, 0x2103, 0xef4e, 0x1, 0x1);
        gbc.writeMem(0x83a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9a2f);
        EXPECT(gbc.pc(), 0x83b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 000A
        gbc.setState(0xaab4, 0xf120, 0xf1c0, 0x3637, 0xcbe1, 0x90cc, 0x1, 0x0);
        gbc.writeMem(0xaab4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf120);
        EXPECT(gbc.pc(), 0xaab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab4), 0xba);
        // BA 000B
        gbc.setState(0x4422, 0xcba8, 0x7810, 0x3ea4, 0xfa76, 0x5e57, 0x1, 0x0);
        gbc.writeMem(0x4422, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcba8);
        EXPECT(gbc.pc(), 0x4423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 000C
        gbc.setState(0xb610, 0x3521, 0x5380, 0x9ff3, 0x3952, 0x71fd, 0x0, 0x0);
        gbc.writeMem(0xb610, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3521);
        EXPECT(gbc.pc(), 0xb611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb610), 0xba);
        // BA 000D
        gbc.setState(0xcb38, 0xeb24, 0xfbb0, 0xfb07, 0x3bd7, 0x9d9c, 0x1, 0x0);
        gbc.writeMem(0xcb38, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xeb24);
        EXPECT(gbc.pc(), 0xcb39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb38), 0xba);
        // BA 000E
        gbc.setState(0x97e9, 0xc422, 0xda50, 0x20aa, 0x4edd, 0x36e3, 0x0, 0x1);
        gbc.writeMem(0x97e9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc422);
        EXPECT(gbc.pc(), 0x97ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97e9), 0xba);
        // BA 000F
        gbc.setState(0xa392, 0xd957, 0xcb60, 0xcde9, 0x45b9, 0x3768, 0x0, 0x0);
        gbc.writeMem(0xa392, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd957);
        EXPECT(gbc.pc(), 0xa393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa392), 0xba);
        // BA 0010
        gbc.setState(0x8b3d, 0x65a0, 0xca70, 0x80d2, 0xa3b5, 0x6f12, 0x0, 0x0);
        gbc.writeMem(0x8b3d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x65a0);
        EXPECT(gbc.pc(), 0x8b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3d), 0xba);
        // BA 0011
        gbc.setState(0xbdf3, 0xdd66, 0xcfc0, 0xb839, 0xcd6d, 0xf02a, 0x0, 0x0);
        gbc.writeMem(0xbdf3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdd66);
        EXPECT(gbc.pc(), 0xbdf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdf3), 0xba);
        // BA 0012
        gbc.setState(0x8210, 0xc48a, 0xa9e0, 0xc7ce, 0x85ac, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x8210, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc48a);
        EXPECT(gbc.pc(), 0x8211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8210), 0xba);
        // BA 0013
        gbc.setState(0x1935, 0x451b, 0xd950, 0x38d6, 0xb8f3, 0x6ddd, 0x1, 0x0);
        gbc.writeMem(0x1935, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x451b);
        EXPECT(gbc.pc(), 0x1936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0014
        gbc.setState(0x798d, 0xb776, 0x8e00, 0xecce, 0x4e37, 0xe257, 0x0, 0x1);
        gbc.writeMem(0x798d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb776);
        EXPECT(gbc.pc(), 0x798e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0015
        gbc.setState(0xe42f, 0x1829, 0x2640, 0x8307, 0xe10c, 0x8bf4, 0x0, 0x1);
        gbc.writeMem(0xe42f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1829);
        EXPECT(gbc.pc(), 0xe430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe42f), 0xba);
        // BA 0016
        gbc.setState(0x87d7, 0x7b3e, 0x54c0, 0x6ffc, 0x5c23, 0x1fe9, 0x0, 0x1);
        gbc.writeMem(0x87d7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7b3e);
        EXPECT(gbc.pc(), 0x87d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d7), 0xba);
        // BA 0017
        gbc.setState(0x11f1, 0xf521, 0xefb0, 0x26ef, 0xc8fc, 0x9095, 0x0, 0x0);
        gbc.writeMem(0x11f1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf521);
        EXPECT(gbc.pc(), 0x11f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0018
        gbc.setState(0xdfbd, 0x408, 0x7ca0, 0x54d9, 0x6a3b, 0xd7b8, 0x1, 0x0);
        gbc.writeMem(0xdfbd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x408);
        EXPECT(gbc.pc(), 0xdfbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfbd), 0xba);
        // BA 0019
        gbc.setState(0x42e0, 0xc8d6, 0x95a0, 0xd8c4, 0x7a8b, 0xe85e, 0x1, 0x1);
        gbc.writeMem(0x42e0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc8d6);
        EXPECT(gbc.pc(), 0x42e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 001A
        gbc.setState(0x3dc1, 0x1195, 0x2570, 0x9e41, 0xcc50, 0xaca9, 0x1, 0x1);
        gbc.writeMem(0x3dc1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1195);
        EXPECT(gbc.pc(), 0x3dc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 001B
        gbc.setState(0xd9f4, 0x6199, 0x39e0, 0xb3a7, 0x1526, 0x9daf, 0x1, 0x0);
        gbc.writeMem(0xd9f4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6199);
        EXPECT(gbc.pc(), 0xd9f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f4), 0xba);
        // BA 001C
        gbc.setState(0x32cf, 0x2854, 0x7be0, 0x47dd, 0x8e95, 0x1689, 0x0, 0x0);
        gbc.writeMem(0x32cf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2854);
        EXPECT(gbc.pc(), 0x32d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 001D
        gbc.setState(0xa1a5, 0x8a94, 0x5610, 0xb7ce, 0xe897, 0x2995, 0x1, 0x1);
        gbc.writeMem(0xa1a5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8a94);
        EXPECT(gbc.pc(), 0xa1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a5), 0xba);
        // BA 001E
        gbc.setState(0xe192, 0x96a4, 0x69d0, 0xf606, 0x87cb, 0xdab2, 0x1, 0x0);
        gbc.writeMem(0xe192, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x96a4);
        EXPECT(gbc.pc(), 0xe193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe192), 0xba);
        // BA 001F
        gbc.setState(0xe78b, 0xdc03, 0x8bd0, 0x8475, 0x1fd0, 0x216f, 0x1, 0x1);
        gbc.writeMem(0xe78b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdc03);
        EXPECT(gbc.pc(), 0xe78c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe78b), 0xba);
        // BA 0020
        gbc.setState(0x1865, 0xf0ec, 0x2b20, 0x6fc4, 0x6274, 0x176f, 0x0, 0x1);
        gbc.writeMem(0x1865, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf0ec);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0021
        gbc.setState(0xae89, 0x6d71, 0x1800, 0xfc8e, 0x8273, 0x156a, 0x1, 0x0);
        gbc.writeMem(0xae89, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6d71);
        EXPECT(gbc.pc(), 0xae8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae89), 0xba);
        // BA 0022
        gbc.setState(0x1eea, 0x5511, 0x2880, 0xe6bd, 0x2816, 0xb3cc, 0x1, 0x1);
        gbc.writeMem(0x1eea, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5511);
        EXPECT(gbc.pc(), 0x1eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0023
        gbc.setState(0xe4f7, 0x9667, 0xb1e0, 0xbfcb, 0xd13e, 0xc8c8, 0x1, 0x1);
        gbc.writeMem(0xe4f7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9667);
        EXPECT(gbc.pc(), 0xe4f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f7), 0xba);
        // BA 0025
        gbc.setState(0x7f82, 0x3108, 0xff90, 0x8cf7, 0xd383, 0x124e, 0x0, 0x1);
        gbc.writeMem(0x7f82, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3108);
        EXPECT(gbc.pc(), 0x7f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0026
        gbc.setState(0xa524, 0xf040, 0xde10, 0xd845, 0x21d6, 0x2ed7, 0x1, 0x0);
        gbc.writeMem(0xa524, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf040);
        EXPECT(gbc.pc(), 0xa525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa524), 0xba);
        // BA 0027
        gbc.setState(0x4696, 0x49f1, 0x5c40, 0x7851, 0xb281, 0xd79e, 0x1, 0x1);
        gbc.writeMem(0x4696, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x49f1);
        EXPECT(gbc.pc(), 0x4697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0028
        gbc.setState(0x547a, 0xc48c, 0x5ae0, 0x9c90, 0x18da, 0xfd23, 0x0, 0x1);
        gbc.writeMem(0x547a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc48c);
        EXPECT(gbc.pc(), 0x547b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0029
        gbc.setState(0x12b5, 0x2e89, 0xe080, 0x9c7c, 0x8b15, 0x5c61, 0x1, 0x1);
        gbc.writeMem(0x12b5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2e89);
        EXPECT(gbc.pc(), 0x12b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 002A
        gbc.setState(0xacb0, 0x5896, 0x7ae0, 0x6907, 0xeb02, 0x800f, 0x1, 0x1);
        gbc.writeMem(0xacb0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5896);
        EXPECT(gbc.pc(), 0xacb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb0), 0xba);
        // BA 002B
        gbc.setState(0xdbf0, 0xdd4f, 0x30c0, 0x5bdf, 0xd848, 0xa642, 0x0, 0x1);
        gbc.writeMem(0xdbf0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdd4f);
        EXPECT(gbc.pc(), 0xdbf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf0), 0xba);
        // BA 002C
        gbc.setState(0xa954, 0x329c, 0x1e0, 0xb450, 0xffed, 0x9438, 0x1, 0x0);
        gbc.writeMem(0xa954, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x329c);
        EXPECT(gbc.pc(), 0xa955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa954), 0xba);
        // BA 002D
        gbc.setState(0x7d32, 0x8f11, 0x3240, 0x6c1d, 0x8d00, 0xdef2, 0x0, 0x0);
        gbc.writeMem(0x7d32, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x8f11);
        EXPECT(gbc.pc(), 0x7d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 002E
        gbc.setState(0xb725, 0xf244, 0x9090, 0xf2c9, 0xdfb2, 0x4eeb, 0x0, 0x1);
        gbc.writeMem(0xb725, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf244);
        EXPECT(gbc.pc(), 0xb726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb725), 0xba);
        // BA 002F
        gbc.setState(0x5ac5, 0x4ac9, 0xd680, 0xc919, 0x2e01, 0xc427, 0x1, 0x0);
        gbc.writeMem(0x5ac5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4ac9);
        EXPECT(gbc.pc(), 0x5ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0030
        gbc.setState(0x624d, 0xb4e3, 0xe5e0, 0x5ea6, 0xa430, 0x1956, 0x0, 0x1);
        gbc.writeMem(0x624d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb4e3);
        EXPECT(gbc.pc(), 0x624e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0031
        gbc.setState(0x969, 0x239a, 0xb3a0, 0xc69c, 0xf9a0, 0x2f3c, 0x1, 0x1);
        gbc.writeMem(0x969, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x239a);
        EXPECT(gbc.pc(), 0x96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0032
        gbc.setState(0x6a5b, 0x245c, 0x6ae0, 0xb9e3, 0x3952, 0xb580, 0x1, 0x1);
        gbc.writeMem(0x6a5b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x245c);
        EXPECT(gbc.pc(), 0x6a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0033
        gbc.setState(0x95bb, 0xc8e0, 0x7370, 0xb567, 0xdb1a, 0xf4a, 0x1, 0x1);
        gbc.writeMem(0x95bb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc8e0);
        EXPECT(gbc.pc(), 0x95bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95bb), 0xba);
        // BA 0034
        gbc.setState(0x63e4, 0x71ba, 0x2590, 0xd46e, 0x671c, 0x8dff, 0x0, 0x1);
        gbc.writeMem(0x63e4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x71ba);
        EXPECT(gbc.pc(), 0x63e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0035
        gbc.setState(0x2361, 0x1821, 0x5390, 0xd455, 0xdbe2, 0x4d25, 0x1, 0x1);
        gbc.writeMem(0x2361, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1821);
        EXPECT(gbc.pc(), 0x2362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0036
        gbc.setState(0xb2eb, 0x817a, 0xa60, 0x714b, 0x4a9a, 0x9be1, 0x1, 0x1);
        gbc.writeMem(0xb2eb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x817a);
        EXPECT(gbc.pc(), 0xb2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2eb), 0xba);
        // BA 0038
        gbc.setState(0x1271, 0xe489, 0xbb20, 0x8029, 0x3ae9, 0x280, 0x0, 0x0);
        gbc.writeMem(0x1271, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe489);
        EXPECT(gbc.pc(), 0x1272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0039
        gbc.setState(0x163b, 0x9482, 0x7f40, 0xdad5, 0x7c51, 0xe4bd, 0x0, 0x0);
        gbc.writeMem(0x163b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9482);
        EXPECT(gbc.pc(), 0x163c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 003A
        gbc.setState(0xed1b, 0x4e7c, 0xde70, 0xf442, 0x500, 0x7aae, 0x1, 0x1);
        gbc.writeMem(0xed1b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x4e7c);
        EXPECT(gbc.pc(), 0xed1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1b), 0xba);
        // BA 003C
        gbc.setState(0xbc73, 0x6ae3, 0x86a0, 0x8015, 0xf407, 0x98b3, 0x1, 0x0);
        gbc.writeMem(0xbc73, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6ae3);
        EXPECT(gbc.pc(), 0xbc74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc73), 0xba);
        // BA 003D
        gbc.setState(0x2bb9, 0xb4d6, 0x2b30, 0xe847, 0xdb81, 0x13a0, 0x0, 0x1);
        gbc.writeMem(0x2bb9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb4d6);
        EXPECT(gbc.pc(), 0x2bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 003E
        gbc.setState(0x752d, 0x158a, 0x4fd0, 0x6c42, 0xba4, 0x2d6b, 0x1, 0x1);
        gbc.writeMem(0x752d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x158a);
        EXPECT(gbc.pc(), 0x752e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 003F
        gbc.setState(0xdf0c, 0x76fc, 0xb390, 0x4828, 0xc111, 0xf517, 0x0, 0x0);
        gbc.writeMem(0xdf0c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x76fc);
        EXPECT(gbc.pc(), 0xdf0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0c), 0xba);
        // BA 0040
        gbc.setState(0xb9e7, 0xe885, 0xde0, 0xc9b3, 0x72ea, 0x742a, 0x1, 0x0);
        gbc.writeMem(0xb9e7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe885);
        EXPECT(gbc.pc(), 0xb9e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9e7), 0xba);
        // BA 0041
        gbc.setState(0x2197, 0xa5aa, 0xe610, 0x5bd4, 0x3a1a, 0xda9c, 0x0, 0x1);
        gbc.writeMem(0x2197, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa5aa);
        EXPECT(gbc.pc(), 0x2198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0042
        gbc.setState(0xc0c, 0x5f9e, 0x9350, 0xb1ff, 0x80d6, 0x3953, 0x1, 0x1);
        gbc.writeMem(0xc0c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5f9e);
        EXPECT(gbc.pc(), 0xc0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0043
        gbc.setState(0xbb9b, 0xcb8a, 0x7c40, 0xd51f, 0x5fe9, 0x396c, 0x0, 0x0);
        gbc.writeMem(0xbb9b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcb8a);
        EXPECT(gbc.pc(), 0xbb9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb9b), 0xba);
        // BA 0044
        gbc.setState(0x1c6a, 0x944d, 0xc7e0, 0xb944, 0xe871, 0xae57, 0x0, 0x1);
        gbc.writeMem(0x1c6a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x944d);
        EXPECT(gbc.pc(), 0x1c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0045
        gbc.setState(0xa7b6, 0xf019, 0x62e0, 0x6f7d, 0xfbe2, 0x324f, 0x0, 0x0);
        gbc.writeMem(0xa7b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf019);
        EXPECT(gbc.pc(), 0xa7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b6), 0xba);
        // BA 0046
        gbc.setState(0x4160, 0xb8a1, 0x99d0, 0x470c, 0xaa4c, 0x4592, 0x1, 0x1);
        gbc.writeMem(0x4160, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb8a1);
        EXPECT(gbc.pc(), 0x4161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0047
        gbc.setState(0xdee2, 0xb07d, 0x8720, 0x1d60, 0xea2d, 0x6920, 0x0, 0x1);
        gbc.writeMem(0xdee2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb07d);
        EXPECT(gbc.pc(), 0xdee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee2), 0xba);
        // BA 0048
        gbc.setState(0xe52, 0xf4ba, 0x88e0, 0xf9f6, 0x9f9, 0xd9cf, 0x0, 0x1);
        gbc.writeMem(0xe52, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf4ba);
        EXPECT(gbc.pc(), 0xe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0049
        gbc.setState(0x12a6, 0xf37e, 0xca10, 0x5b1f, 0x29c5, 0xc30b, 0x1, 0x1);
        gbc.writeMem(0x12a6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf37e);
        EXPECT(gbc.pc(), 0x12a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 004A
        gbc.setState(0xfc9, 0xd55a, 0x7420, 0x90cc, 0x1d0c, 0xa427, 0x1, 0x0);
        gbc.writeMem(0xfc9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd55a);
        EXPECT(gbc.pc(), 0xfca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 004B
        gbc.setState(0xb6a0, 0xaf5d, 0xee90, 0x1b77, 0xc43e, 0x395c, 0x1, 0x1);
        gbc.writeMem(0xb6a0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaf5d);
        EXPECT(gbc.pc(), 0xb6a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6a0), 0xba);
        // BA 004C
        gbc.setState(0xbf43, 0x2008, 0xbc00, 0xa317, 0xe18a, 0xd92d, 0x1, 0x1);
        gbc.writeMem(0xbf43, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2008);
        EXPECT(gbc.pc(), 0xbf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf43), 0xba);
        // BA 004D
        gbc.setState(0xb84, 0xeff2, 0xfb30, 0x7ff2, 0xb4cd, 0x675, 0x1, 0x1);
        gbc.writeMem(0xb84, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xeff2);
        EXPECT(gbc.pc(), 0xb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 004E
        gbc.setState(0x89cd, 0x1e75, 0x5520, 0x1f17, 0x473b, 0x886d, 0x0, 0x0);
        gbc.writeMem(0x89cd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1e75);
        EXPECT(gbc.pc(), 0x89ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cd), 0xba);
        // BA 004F
        gbc.setState(0xbd06, 0x8cee, 0x94f0, 0x8b2b, 0x3544, 0x4f24, 0x1, 0x1);
        gbc.writeMem(0xbd06, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8cee);
        EXPECT(gbc.pc(), 0xbd07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd06), 0xba);
        // BA 0050
        gbc.setState(0x9cbd, 0x1545, 0xe3d0, 0x90a2, 0xcde2, 0xbdea, 0x1, 0x1);
        gbc.writeMem(0x9cbd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1545);
        EXPECT(gbc.pc(), 0x9cbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cbd), 0xba);
        // BA 0051
        gbc.setState(0xeeb9, 0x63d7, 0x9620, 0x2533, 0xad50, 0xc247, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x63d7);
        EXPECT(gbc.pc(), 0xeeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeb9), 0xba);
        // BA 0052
        gbc.setState(0xa653, 0x246f, 0x7120, 0xf6e6, 0xdb34, 0xcf80, 0x0, 0x0);
        gbc.writeMem(0xa653, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x246f);
        EXPECT(gbc.pc(), 0xa654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa653), 0xba);
        // BA 0054
        gbc.setState(0x2684, 0x5f76, 0x3c40, 0x5853, 0xb8bc, 0x4b85, 0x1, 0x1);
        gbc.writeMem(0x2684, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5f76);
        EXPECT(gbc.pc(), 0x2685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0056
        gbc.setState(0xac0d, 0xe419, 0x8e20, 0x68c9, 0xbf38, 0xc7a1, 0x1, 0x1);
        gbc.writeMem(0xac0d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe419);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0d), 0xba);
        // BA 0057
        gbc.setState(0x4f48, 0xa26b, 0xd80, 0xe6c, 0x9db5, 0xb081, 0x0, 0x0);
        gbc.writeMem(0x4f48, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa26b);
        EXPECT(gbc.pc(), 0x4f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0059
        gbc.setState(0x8e40, 0x2bba, 0x4700, 0x4185, 0x76d0, 0x7e78, 0x0, 0x1);
        gbc.writeMem(0x8e40, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2bba);
        EXPECT(gbc.pc(), 0x8e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e40), 0xba);
        // BA 005A
        gbc.setState(0xe027, 0x7c6f, 0x43d0, 0xbfb7, 0x8679, 0x13f0, 0x0, 0x0);
        gbc.writeMem(0xe027, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7c6f);
        EXPECT(gbc.pc(), 0xe028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe027), 0xba);
        // BA 005B
        gbc.setState(0x3293, 0xbcae, 0xcb80, 0xf2ca, 0xdcd3, 0x5f8, 0x0, 0x0);
        gbc.writeMem(0x3293, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbcae);
        EXPECT(gbc.pc(), 0x3294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 005C
        gbc.setState(0x3a5e, 0x246d, 0x7360, 0x8d80, 0x80b5, 0xc8c9, 0x0, 0x1);
        gbc.writeMem(0x3a5e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x246d);
        EXPECT(gbc.pc(), 0x3a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 005D
        gbc.setState(0x746b, 0x1062, 0x7470, 0xcaa, 0xb5c, 0xd321, 0x1, 0x1);
        gbc.writeMem(0x746b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1062);
        EXPECT(gbc.pc(), 0x746c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 005E
        gbc.setState(0x640c, 0x25bb, 0xd470, 0x2dc0, 0xcff3, 0x5a74, 0x0, 0x1);
        gbc.writeMem(0x640c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x25bb);
        EXPECT(gbc.pc(), 0x640d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 005F
        gbc.setState(0x424, 0x31b7, 0xdf60, 0x5713, 0xde4, 0x23fd, 0x0, 0x0);
        gbc.writeMem(0x424, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x31b7);
        EXPECT(gbc.pc(), 0x425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0060
        gbc.setState(0x2827, 0xf7ef, 0xc1e0, 0x7061, 0xa840, 0x3be6, 0x0, 0x0);
        gbc.writeMem(0x2827, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf7ef);
        EXPECT(gbc.pc(), 0x2828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0061
        gbc.setState(0x887, 0xbc33, 0x50d0, 0x2a43, 0x3258, 0x3a1, 0x0, 0x1);
        gbc.writeMem(0x887, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbc33);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0062
        gbc.setState(0xd678, 0x1dd5, 0x3940, 0x5b1a, 0xb374, 0xda5d, 0x1, 0x1);
        gbc.writeMem(0xd678, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1dd5);
        EXPECT(gbc.pc(), 0xd679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd678), 0xba);
        // BA 0063
        gbc.setState(0x26e5, 0x32f6, 0xcba0, 0x9339, 0x8db9, 0xbba4, 0x0, 0x1);
        gbc.writeMem(0x26e5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x32f6);
        EXPECT(gbc.pc(), 0x26e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0064
        gbc.setState(0x16b7, 0x83, 0xa7a0, 0x848b, 0x4b0e, 0x4397, 0x0, 0x0);
        gbc.writeMem(0x16b7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x83);
        EXPECT(gbc.pc(), 0x16b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0065
        gbc.setState(0xadfc, 0x7a7e, 0x6f0, 0xe3b, 0x152, 0x5633, 0x0, 0x1);
        gbc.writeMem(0xadfc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7a7e);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfc), 0xba);
        // BA 0066
        gbc.setState(0x5a47, 0x5656, 0xc820, 0x39b5, 0x9bb9, 0xea65, 0x1, 0x0);
        gbc.writeMem(0x5a47, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5656);
        EXPECT(gbc.pc(), 0x5a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0067
        gbc.setState(0x4997, 0xfed8, 0xdae0, 0x56f1, 0x24f5, 0x7bcd, 0x0, 0x1);
        gbc.writeMem(0x4997, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfed8);
        EXPECT(gbc.pc(), 0x4998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0068
        gbc.setState(0xab4c, 0x331d, 0x2310, 0x500e, 0xc422, 0x3481, 0x1, 0x0);
        gbc.writeMem(0xab4c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x331d);
        EXPECT(gbc.pc(), 0xab4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab4c), 0xba);
        // BA 006A
        gbc.setState(0xa4c, 0x5c39, 0xb1f0, 0x75a5, 0x4641, 0x8a45, 0x1, 0x0);
        gbc.writeMem(0xa4c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5c39);
        EXPECT(gbc.pc(), 0xa4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 006B
        gbc.setState(0x6d72, 0x476d, 0x2400, 0x7315, 0xac66, 0xda52, 0x0, 0x0);
        gbc.writeMem(0x6d72, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x476d);
        EXPECT(gbc.pc(), 0x6d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 006C
        gbc.setState(0xd078, 0x8443, 0x1d60, 0xd1d, 0x2034, 0x3325, 0x0, 0x0);
        gbc.writeMem(0xd078, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8443);
        EXPECT(gbc.pc(), 0xd079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd078), 0xba);
        // BA 006D
        gbc.setState(0x45ed, 0xde3d, 0x28b0, 0x7270, 0x2a31, 0x1778, 0x1, 0x1);
        gbc.writeMem(0x45ed, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xde3d);
        EXPECT(gbc.pc(), 0x45ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 006E
        gbc.setState(0x759, 0x5d74, 0xdfe0, 0x3b5, 0x3221, 0xdcc4, 0x1, 0x0);
        gbc.writeMem(0x759, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5d74);
        EXPECT(gbc.pc(), 0x75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 006F
        gbc.setState(0x3638, 0xc4d2, 0x96e0, 0x247, 0x9281, 0x4a6d, 0x0, 0x0);
        gbc.writeMem(0x3638, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc4d2);
        EXPECT(gbc.pc(), 0x3639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0070
        gbc.setState(0xe3d7, 0xd8f4, 0xdda0, 0x42be, 0xd66a, 0xc772, 0x0, 0x0);
        gbc.writeMem(0xe3d7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd8f4);
        EXPECT(gbc.pc(), 0xe3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d7), 0xba);
        // BA 0071
        gbc.setState(0xe57, 0x38b7, 0x86a0, 0xce67, 0x4147, 0xcc1a, 0x0, 0x0);
        gbc.writeMem(0xe57, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x38b7);
        EXPECT(gbc.pc(), 0xe58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0072
        gbc.setState(0xc518, 0x8307, 0xb70, 0xf5ab, 0xaaad, 0xd8fe, 0x0, 0x1);
        gbc.writeMem(0xc518, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x8307);
        EXPECT(gbc.pc(), 0xc519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc518), 0xba);
        // BA 0073
        gbc.setState(0xba03, 0x98fd, 0xc2a0, 0xfe6d, 0x2096, 0xeea7, 0x1, 0x1);
        gbc.writeMem(0xba03, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x98fd);
        EXPECT(gbc.pc(), 0xba04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba03), 0xba);
        // BA 0074
        gbc.setState(0x2ed8, 0xac85, 0x6700, 0xba91, 0xdd15, 0xf289, 0x0, 0x1);
        gbc.writeMem(0x2ed8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xac85);
        EXPECT(gbc.pc(), 0x2ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0075
        gbc.setState(0xa030, 0x8968, 0xc2d0, 0x4266, 0x542e, 0x16f4, 0x0, 0x0);
        gbc.writeMem(0xa030, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8968);
        EXPECT(gbc.pc(), 0xa031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa030), 0xba);
        // BA 0076
        gbc.setState(0x29eb, 0x1260, 0x5220, 0xce86, 0xfaf6, 0x4dae, 0x1, 0x1);
        gbc.writeMem(0x29eb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1260);
        EXPECT(gbc.pc(), 0x29ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0077
        gbc.setState(0x66e6, 0x6676, 0x1ba0, 0xfdc1, 0xf9a3, 0x839b, 0x0, 0x0);
        gbc.writeMem(0x66e6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6676);
        EXPECT(gbc.pc(), 0x66e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0078
        gbc.setState(0x654f, 0x3249, 0x9f20, 0x44e9, 0xce18, 0x85d8, 0x1, 0x1);
        gbc.writeMem(0x654f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3249);
        EXPECT(gbc.pc(), 0x6550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0079
        gbc.setState(0xbce1, 0xc729, 0x1370, 0x855b, 0x1355, 0x63a7, 0x1, 0x0);
        gbc.writeMem(0xbce1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc729);
        EXPECT(gbc.pc(), 0xbce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce1), 0xba);
        // BA 007A
        gbc.setState(0xe260, 0x4d6d, 0xcdf0, 0xf425, 0x8462, 0xedfd, 0x0, 0x1);
        gbc.writeMem(0xe260, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4d6d);
        EXPECT(gbc.pc(), 0xe261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe260), 0xba);
        // BA 007D
        gbc.setState(0x5079, 0x5bd, 0x1820, 0x8d72, 0x3fdf, 0xf870, 0x1, 0x1);
        gbc.writeMem(0x5079, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5bd);
        EXPECT(gbc.pc(), 0x507a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 007E
        gbc.setState(0x399e, 0xe384, 0xdd00, 0x402c, 0x1c0b, 0xdfbe, 0x0, 0x0);
        gbc.writeMem(0x399e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe384);
        EXPECT(gbc.pc(), 0x399f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 007F
        gbc.setState(0xed1, 0x404d, 0xd2b0, 0xdd0b, 0xf21, 0xdfb5, 0x0, 0x0);
        gbc.writeMem(0xed1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x404d);
        EXPECT(gbc.pc(), 0xed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0080
        gbc.setState(0x6eef, 0x57c3, 0xdc40, 0xa074, 0x4158, 0x1e37, 0x0, 0x0);
        gbc.writeMem(0x6eef, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x57c3);
        EXPECT(gbc.pc(), 0x6ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0081
        gbc.setState(0x7158, 0x7486, 0xd0d0, 0x7a90, 0x7ef2, 0xa9d8, 0x0, 0x0);
        gbc.writeMem(0x7158, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7486);
        EXPECT(gbc.pc(), 0x7159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0082
        gbc.setState(0xc5b3, 0xb1b, 0x3530, 0x995e, 0x17bf, 0xb23, 0x1, 0x1);
        gbc.writeMem(0xc5b3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb1b);
        EXPECT(gbc.pc(), 0xc5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b3), 0xba);
        // BA 0083
        gbc.setState(0x8df1, 0xa8f3, 0xf8f0, 0xf70b, 0x70ee, 0x1ccd, 0x1, 0x1);
        gbc.writeMem(0x8df1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa8f3);
        EXPECT(gbc.pc(), 0x8df2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8df1), 0xba);
        // BA 0084
        gbc.setState(0xa8f8, 0x5985, 0x670, 0x7c7, 0x83fe, 0xb8dc, 0x0, 0x1);
        gbc.writeMem(0xa8f8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5985);
        EXPECT(gbc.pc(), 0xa8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f8), 0xba);
        // BA 0085
        gbc.setState(0x420, 0x8c3e, 0x1bb0, 0x5cb1, 0x31e9, 0x4fc2, 0x1, 0x0);
        gbc.writeMem(0x420, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8c3e);
        EXPECT(gbc.pc(), 0x421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0086
        gbc.setState(0xc0f2, 0x3baf, 0xd440, 0x4616, 0xf547, 0x1b34, 0x0, 0x0);
        gbc.writeMem(0xc0f2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0xc0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f2), 0xba);
        // BA 0087
        gbc.setState(0x469c, 0x2ced, 0x4600, 0xa51a, 0xb798, 0xba90, 0x1, 0x0);
        gbc.writeMem(0x469c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2ced);
        EXPECT(gbc.pc(), 0x469d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0088
        gbc.setState(0x6ca5, 0xbdf0, 0x4650, 0xf097, 0xb773, 0xbed3, 0x1, 0x1);
        gbc.writeMem(0x6ca5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0x6ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0089
        gbc.setState(0x57b0, 0x5a04, 0x1010, 0x1ed5, 0x1608, 0x851c, 0x1, 0x0);
        gbc.writeMem(0x57b0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5a04);
        EXPECT(gbc.pc(), 0x57b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 008A
        gbc.setState(0x4802, 0x7e14, 0xdef0, 0xa8a, 0xfda0, 0xd2e, 0x1, 0x0);
        gbc.writeMem(0x4802, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7e14);
        EXPECT(gbc.pc(), 0x4803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 008B
        gbc.setState(0x567f, 0x4ff7, 0xb070, 0x3bb8, 0xa495, 0xf6b6, 0x1, 0x0);
        gbc.writeMem(0x567f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4ff7);
        EXPECT(gbc.pc(), 0x5680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 008C
        gbc.setState(0x37e, 0x9891, 0xece0, 0xcbc9, 0x5dbe, 0xe5e8, 0x0, 0x0);
        gbc.writeMem(0x37e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9891);
        EXPECT(gbc.pc(), 0x37f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 008D
        gbc.setState(0x4670, 0xf5f1, 0x9af0, 0xfd32, 0xd042, 0x6c7, 0x1, 0x1);
        gbc.writeMem(0x4670, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf5f1);
        EXPECT(gbc.pc(), 0x4671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 008E
        gbc.setState(0x2b1d, 0x779a, 0x6e50, 0x862a, 0x22da, 0xd560, 0x1, 0x1);
        gbc.writeMem(0x2b1d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x779a);
        EXPECT(gbc.pc(), 0x2b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 008F
        gbc.setState(0xbf22, 0x3324, 0x7ef0, 0x1375, 0xf836, 0x57c9, 0x0, 0x0);
        gbc.writeMem(0xbf22, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3324);
        EXPECT(gbc.pc(), 0xbf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf22), 0xba);
        // BA 0090
        gbc.setState(0xfe2, 0x44d4, 0x9ac0, 0x4156, 0xd3da, 0xfb24, 0x0, 0x0);
        gbc.writeMem(0xfe2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x44d4);
        EXPECT(gbc.pc(), 0xfe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0091
        gbc.setState(0x9582, 0xa908, 0x9600, 0x708a, 0x1de1, 0x284b, 0x1, 0x1);
        gbc.writeMem(0x9582, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa908);
        EXPECT(gbc.pc(), 0x9583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9582), 0xba);
        // BA 0092
        gbc.setState(0x683f, 0x7478, 0x2ed0, 0x2c29, 0x6032, 0x2a54, 0x1, 0x0);
        gbc.writeMem(0x683f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7478);
        EXPECT(gbc.pc(), 0x6840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0093
        gbc.setState(0xe42e, 0x7b09, 0xd570, 0xac28, 0x41f7, 0xa21b, 0x1, 0x0);
        gbc.writeMem(0xe42e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7b09);
        EXPECT(gbc.pc(), 0xe42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42e), 0xba);
        // BA 0094
        gbc.setState(0x7f5e, 0x9348, 0x7ef0, 0xe6c9, 0xec77, 0x7a51, 0x0, 0x1);
        gbc.writeMem(0x7f5e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9348);
        EXPECT(gbc.pc(), 0x7f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0095
        gbc.setState(0x65f5, 0x558c, 0x9900, 0xf0f8, 0x8eaa, 0xf76d, 0x0, 0x0);
        gbc.writeMem(0x65f5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x558c);
        EXPECT(gbc.pc(), 0x65f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0096
        gbc.setState(0xcbef, 0xb758, 0x7ce0, 0xdc89, 0xd5da, 0x59da, 0x0, 0x0);
        gbc.writeMem(0xcbef, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb758);
        EXPECT(gbc.pc(), 0xcbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbef), 0xba);
        // BA 0097
        gbc.setState(0x817e, 0xc591, 0xaf50, 0x51d1, 0xf0f1, 0x814a, 0x1, 0x1);
        gbc.writeMem(0x817e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc591);
        EXPECT(gbc.pc(), 0x817f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817e), 0xba);
        // BA 0098
        gbc.setState(0x1ec0, 0x2603, 0xf450, 0xeff, 0x7ea8, 0x4192, 0x1, 0x1);
        gbc.writeMem(0x1ec0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2603);
        EXPECT(gbc.pc(), 0x1ec1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0099
        gbc.setState(0xecfd, 0xe703, 0xef90, 0x33c0, 0x95d0, 0x8c2c, 0x0, 0x0);
        gbc.writeMem(0xecfd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe703);
        EXPECT(gbc.pc(), 0xecfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfd), 0xba);
        // BA 009A
        gbc.setState(0x578, 0x3c47, 0x34f0, 0xdf10, 0xf40b, 0xb47a, 0x0, 0x0);
        gbc.writeMem(0x578, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3c47);
        EXPECT(gbc.pc(), 0x579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 009B
        gbc.setState(0x2117, 0x2cc3, 0x6ac0, 0xaece, 0xcc91, 0xd766, 0x1, 0x0);
        gbc.writeMem(0x2117, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2cc3);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 009C
        gbc.setState(0xe872, 0xec8c, 0x9d80, 0xa436, 0x1bc8, 0x1904, 0x1, 0x0);
        gbc.writeMem(0xe872, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xec8c);
        EXPECT(gbc.pc(), 0xe873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe872), 0xba);
        // BA 009D
        gbc.setState(0x92da, 0x28d, 0x96a0, 0xc9cf, 0xc85c, 0x502f, 0x1, 0x1);
        gbc.writeMem(0x92da, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x28d);
        EXPECT(gbc.pc(), 0x92db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92da), 0xba);
        // BA 009E
        gbc.setState(0xbf91, 0xd42d, 0xfcc0, 0x780, 0x45e7, 0x40f1, 0x0, 0x0);
        gbc.writeMem(0xbf91, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd42d);
        EXPECT(gbc.pc(), 0xbf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf91), 0xba);
        // BA 009F
        gbc.setState(0x6677, 0xeaf8, 0x2160, 0xf75e, 0xfe6e, 0x4aa0, 0x1, 0x0);
        gbc.writeMem(0x6677, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xeaf8);
        EXPECT(gbc.pc(), 0x6678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00A0
        gbc.setState(0xd80, 0xb042, 0x3070, 0x4cda, 0x8df2, 0xc79, 0x0, 0x0);
        gbc.writeMem(0xd80, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb042);
        EXPECT(gbc.pc(), 0xd81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00A1
        gbc.setState(0xaad3, 0x9a8f, 0x8890, 0x145, 0xf11e, 0xa651, 0x1, 0x0);
        gbc.writeMem(0xaad3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9a8f);
        EXPECT(gbc.pc(), 0xaad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad3), 0xba);
        // BA 00A2
        gbc.setState(0x818d, 0x5d95, 0xbad0, 0x8d13, 0x7b80, 0xc4a8, 0x1, 0x0);
        gbc.writeMem(0x818d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5d95);
        EXPECT(gbc.pc(), 0x818e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x818d), 0xba);
        // BA 00A3
        gbc.setState(0x799, 0xeff4, 0x5ed0, 0xf381, 0x45c6, 0x827b, 0x0, 0x0);
        gbc.writeMem(0x799, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeff4);
        EXPECT(gbc.pc(), 0x79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00A4
        gbc.setState(0x9e72, 0x62c4, 0xafb0, 0x3cf3, 0x52f7, 0x538e, 0x0, 0x1);
        gbc.writeMem(0x9e72, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x62c4);
        EXPECT(gbc.pc(), 0x9e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e72), 0xba);
        // BA 00A6
        gbc.setState(0x12c, 0x6128, 0x6a20, 0x5fac, 0xab92, 0x3ca5, 0x1, 0x0);
        gbc.writeMem(0x12c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6128);
        EXPECT(gbc.pc(), 0x12d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00A7
        gbc.setState(0x4899, 0x6ed9, 0x59a0, 0xa7f9, 0x4e66, 0xc615, 0x1, 0x1);
        gbc.writeMem(0x4899, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6ed9);
        EXPECT(gbc.pc(), 0x489a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00A8
        gbc.setState(0x3d4b, 0x4009, 0xf100, 0x8788, 0x7f31, 0x5163, 0x1, 0x1);
        gbc.writeMem(0x3d4b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4009);
        EXPECT(gbc.pc(), 0x3d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00A9
        gbc.setState(0x6e47, 0x385, 0x9940, 0x7614, 0xd3e8, 0x5ee, 0x1, 0x0);
        gbc.writeMem(0x6e47, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x385);
        EXPECT(gbc.pc(), 0x6e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00AA
        gbc.setState(0xac8b, 0x3ff4, 0xae0, 0x921d, 0xa407, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0xac8b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3ff4);
        EXPECT(gbc.pc(), 0xac8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8b), 0xba);
        // BA 00AC
        gbc.setState(0x1a16, 0x83a8, 0xc8e0, 0x5d6d, 0xb54d, 0x8d76, 0x0, 0x1);
        gbc.writeMem(0x1a16, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x83a8);
        EXPECT(gbc.pc(), 0x1a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00AD
        gbc.setState(0x1213, 0xd7e6, 0x8c10, 0x314a, 0x234b, 0x27e5, 0x0, 0x1);
        gbc.writeMem(0x1213, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xd7e6);
        EXPECT(gbc.pc(), 0x1214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00AE
        gbc.setState(0x14, 0x67fa, 0x7e0, 0xf7b5, 0x101b, 0x3a, 0x0, 0x1);
        gbc.writeMem(0x14, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x67fa);
        EXPECT(gbc.pc(), 0x15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00AF
        gbc.setState(0xcb72, 0x7df0, 0xaaf0, 0xdd61, 0x166d, 0xf5f6, 0x1, 0x0);
        gbc.writeMem(0xcb72, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7df0);
        EXPECT(gbc.pc(), 0xcb73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb72), 0xba);
        // BA 00B0
        gbc.setState(0x6143, 0x1c0a, 0x2d90, 0x35b7, 0x210a, 0xee11, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x1c0a);
        EXPECT(gbc.pc(), 0x6144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00B1
        gbc.setState(0x3fe4, 0x57f3, 0x9ae0, 0x428c, 0xba5d, 0xcfc8, 0x0, 0x0);
        gbc.writeMem(0x3fe4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x57f3);
        EXPECT(gbc.pc(), 0x3fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00B2
        gbc.setState(0x5e8a, 0x1834, 0x85d0, 0x7aee, 0x9dad, 0x8c18, 0x1, 0x0);
        gbc.writeMem(0x5e8a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1834);
        EXPECT(gbc.pc(), 0x5e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00B3
        gbc.setState(0x124d, 0x4119, 0x7cc0, 0x549a, 0x12d7, 0x8e68, 0x1, 0x1);
        gbc.writeMem(0x124d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4119);
        EXPECT(gbc.pc(), 0x124e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00B4
        gbc.setState(0x576, 0x5ee7, 0x33c0, 0x5c51, 0x4292, 0x9274, 0x0, 0x1);
        gbc.writeMem(0x576, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5ee7);
        EXPECT(gbc.pc(), 0x577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00B5
        gbc.setState(0x5d9, 0x77b4, 0x6e20, 0x1548, 0x7d4e, 0xc74c, 0x0, 0x0);
        gbc.writeMem(0x5d9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0x5da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00B6
        gbc.setState(0x331c, 0x3030, 0xafd0, 0xe675, 0xff11, 0x5169, 0x1, 0x1);
        gbc.writeMem(0x331c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3030);
        EXPECT(gbc.pc(), 0x331d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00B7
        gbc.setState(0x96cd, 0xfa19, 0xaae0, 0xddec, 0xeb11, 0x76a5, 0x0, 0x1);
        gbc.writeMem(0x96cd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0x96ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96cd), 0xba);
        // BA 00B8
        gbc.setState(0x551d, 0xf26c, 0xafe0, 0x7fbb, 0xfc86, 0xf2d3, 0x1, 0x1);
        gbc.writeMem(0x551d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf26c);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00B9
        gbc.setState(0x5832, 0xd901, 0xa4b0, 0x1282, 0x205f, 0x81cf, 0x0, 0x0);
        gbc.writeMem(0x5832, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd901);
        EXPECT(gbc.pc(), 0x5833);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00BA
        gbc.setState(0x37b7, 0xc4fc, 0x4a90, 0xba2e, 0x3c1c, 0xaec8, 0x1, 0x1);
        gbc.writeMem(0x37b7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc4fc);
        EXPECT(gbc.pc(), 0x37b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00BB
        gbc.setState(0x9529, 0xcdbb, 0xe370, 0x7912, 0xb7bb, 0xbca3, 0x0, 0x0);
        gbc.writeMem(0x9529, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcdbb);
        EXPECT(gbc.pc(), 0x952a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9529), 0xba);
        // BA 00BC
        gbc.setState(0xc25b, 0x48a0, 0x8070, 0x489, 0x6edc, 0x8394, 0x1, 0x0);
        gbc.writeMem(0xc25b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x48a0);
        EXPECT(gbc.pc(), 0xc25c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc25b), 0xba);
        // BA 00BD
        gbc.setState(0x502f, 0x3731, 0x6bf0, 0xdd07, 0x4dc8, 0x30db, 0x0, 0x0);
        gbc.writeMem(0x502f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3731);
        EXPECT(gbc.pc(), 0x5030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00BE
        gbc.setState(0xdf6, 0x3cc5, 0xf9a0, 0x3845, 0x99a4, 0xc899, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3cc5);
        EXPECT(gbc.pc(), 0xdf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00C1
        gbc.setState(0xb839, 0xbdad, 0xac00, 0x6ff3, 0x5473, 0xd6a2, 0x0, 0x1);
        gbc.writeMem(0xb839, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbdad);
        EXPECT(gbc.pc(), 0xb83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb839), 0xba);
        // BA 00C2
        gbc.setState(0x3b14, 0xb478, 0xee90, 0x1b40, 0xa7e, 0x45fd, 0x1, 0x1);
        gbc.writeMem(0x3b14, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb478);
        EXPECT(gbc.pc(), 0x3b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00C3
        gbc.setState(0x3f7e, 0xdc72, 0x6670, 0x587a, 0x8a93, 0x2afd, 0x1, 0x1);
        gbc.writeMem(0x3f7e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdc72);
        EXPECT(gbc.pc(), 0x3f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00C4
        gbc.setState(0x83a8, 0x6edd, 0xd620, 0x29b5, 0xca96, 0xae25, 0x1, 0x0);
        gbc.writeMem(0x83a8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6edd);
        EXPECT(gbc.pc(), 0x83a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a8), 0xba);
        // BA 00C5
        gbc.setState(0x4767, 0xae09, 0xf680, 0x2255, 0x8a71, 0x1dce, 0x0, 0x0);
        gbc.writeMem(0x4767, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xae09);
        EXPECT(gbc.pc(), 0x4768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00C6
        gbc.setState(0xde15, 0x9893, 0x5b50, 0x9e1, 0x1bde, 0x3c2c, 0x0, 0x1);
        gbc.writeMem(0xde15, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9893);
        EXPECT(gbc.pc(), 0xde16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde15), 0xba);
        // BA 00C7
        gbc.setState(0x297b, 0x8ad4, 0x31d0, 0x627e, 0x7e67, 0x6fbc, 0x1, 0x1);
        gbc.writeMem(0x297b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8ad4);
        EXPECT(gbc.pc(), 0x297c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00C8
        gbc.setState(0x5a5e, 0xc470, 0xb00, 0xef36, 0xffda, 0x647b, 0x0, 0x0);
        gbc.writeMem(0x5a5e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc470);
        EXPECT(gbc.pc(), 0x5a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00C9
        gbc.setState(0x3cc9, 0xce64, 0x6e10, 0x831d, 0x204d, 0x9d6, 0x1, 0x1);
        gbc.writeMem(0x3cc9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xce64);
        EXPECT(gbc.pc(), 0x3cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00CA
        gbc.setState(0x4013, 0x3a81, 0xafd0, 0x6a8e, 0x7be4, 0x7569, 0x1, 0x1);
        gbc.writeMem(0x4013, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3a81);
        EXPECT(gbc.pc(), 0x4014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00CB
        gbc.setState(0xa98b, 0xc7cd, 0xc000, 0x7d92, 0xbe34, 0x2482, 0x1, 0x1);
        gbc.writeMem(0xa98b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc7cd);
        EXPECT(gbc.pc(), 0xa98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa98b), 0xba);
        // BA 00CC
        gbc.setState(0xb63, 0xe8e1, 0x30b0, 0x8d05, 0x3caf, 0x22fb, 0x1, 0x0);
        gbc.writeMem(0xb63, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe8e1);
        EXPECT(gbc.pc(), 0xb64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00CD
        gbc.setState(0xcb01, 0xc19c, 0xe3b0, 0x82ae, 0xa5e2, 0x8807, 0x1, 0x1);
        gbc.writeMem(0xcb01, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc19c);
        EXPECT(gbc.pc(), 0xcb02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb01), 0xba);
        // BA 00CE
        gbc.setState(0xe86b, 0xbb18, 0x70c0, 0x5281, 0x96b6, 0xb3cf, 0x1, 0x0);
        gbc.writeMem(0xe86b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xbb18);
        EXPECT(gbc.pc(), 0xe86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86b), 0xba);
        // BA 00CF
        gbc.setState(0x454e, 0xdf39, 0xea00, 0x2b50, 0x1b7d, 0x3888, 0x0, 0x1);
        gbc.writeMem(0x454e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdf39);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00D1
        gbc.setState(0xc5c8, 0x6e00, 0xfcd0, 0x23d1, 0xf352, 0x5a4c, 0x0, 0x0);
        gbc.writeMem(0xc5c8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6e00);
        EXPECT(gbc.pc(), 0xc5c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5c8), 0xba);
        // BA 00D2
        gbc.setState(0x8c2, 0x61ef, 0x4a50, 0xece2, 0xd93d, 0xb72f, 0x1, 0x1);
        gbc.writeMem(0x8c2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x61ef);
        EXPECT(gbc.pc(), 0x8c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00D3
        gbc.setState(0x7a3f, 0x913d, 0x3710, 0x6042, 0x6f93, 0x381b, 0x1, 0x0);
        gbc.writeMem(0x7a3f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x913d);
        EXPECT(gbc.pc(), 0x7a40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00D6
        gbc.setState(0xdbad, 0x85af, 0x71f0, 0x39d4, 0x5ef3, 0xa880, 0x1, 0x1);
        gbc.writeMem(0xdbad, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x85af);
        EXPECT(gbc.pc(), 0xdbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbad), 0xba);
        // BA 00D7
        gbc.setState(0xa920, 0x34eb, 0x8000, 0xb72d, 0xad20, 0x3369, 0x0, 0x0);
        gbc.writeMem(0xa920, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x34eb);
        EXPECT(gbc.pc(), 0xa921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa920), 0xba);
        // BA 00D8
        gbc.setState(0x8225, 0xa40d, 0x95e0, 0x1dc7, 0x1077, 0x50d5, 0x0, 0x0);
        gbc.writeMem(0x8225, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa40d);
        EXPECT(gbc.pc(), 0x8226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8225), 0xba);
        // BA 00D9
        gbc.setState(0x8cb, 0x669f, 0xdcd0, 0x8e57, 0xec70, 0xd506, 0x1, 0x1);
        gbc.writeMem(0x8cb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x669f);
        EXPECT(gbc.pc(), 0x8cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00DA
        gbc.setState(0x7de6, 0xe99b, 0xea20, 0x9ce0, 0xe2f7, 0x9840, 0x1, 0x1);
        gbc.writeMem(0x7de6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe99b);
        EXPECT(gbc.pc(), 0x7de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00DB
        gbc.setState(0x40ee, 0x1a2d, 0x5bc0, 0x4ef, 0x576e, 0xb559, 0x0, 0x0);
        gbc.writeMem(0x40ee, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1a2d);
        EXPECT(gbc.pc(), 0x40ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00DC
        gbc.setState(0x96a5, 0xb241, 0xdf70, 0xec70, 0x3ec5, 0xdeb6, 0x0, 0x0);
        gbc.writeMem(0x96a5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb241);
        EXPECT(gbc.pc(), 0x96a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a5), 0xba);
        // BA 00DD
        gbc.setState(0x2c55, 0x2918, 0x10b0, 0x878c, 0xcc6f, 0xd55f, 0x0, 0x0);
        gbc.writeMem(0x2c55, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2918);
        EXPECT(gbc.pc(), 0x2c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00DF
        gbc.setState(0xef13, 0xbb0e, 0xb4f0, 0x529, 0xb084, 0x49bf, 0x0, 0x1);
        gbc.writeMem(0xef13, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbb0e);
        EXPECT(gbc.pc(), 0xef14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef13), 0xba);
        // BA 00E0
        gbc.setState(0xd90b, 0xe3e3, 0x9a10, 0xeb60, 0xf74e, 0x698d, 0x1, 0x1);
        gbc.writeMem(0xd90b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe3e3);
        EXPECT(gbc.pc(), 0xd90c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90b), 0xba);
        // BA 00E1
        gbc.setState(0x2f81, 0xe59d, 0xd020, 0x31f2, 0x68d6, 0xa0a2, 0x1, 0x1);
        gbc.writeMem(0x2f81, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe59d);
        EXPECT(gbc.pc(), 0x2f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00E2
        gbc.setState(0xae1d, 0x1ea5, 0xbf10, 0x767c, 0x589, 0x91ca, 0x1, 0x1);
        gbc.writeMem(0xae1d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1ea5);
        EXPECT(gbc.pc(), 0xae1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1d), 0xba);
        // BA 00E3
        gbc.setState(0x456, 0x2444, 0xcba0, 0x525a, 0xd13f, 0xa9d3, 0x1, 0x0);
        gbc.writeMem(0x456, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2444);
        EXPECT(gbc.pc(), 0x457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00E4
        gbc.setState(0x134f, 0x9118, 0x9090, 0x1b04, 0x4321, 0xe186, 0x0, 0x0);
        gbc.writeMem(0x134f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9118);
        EXPECT(gbc.pc(), 0x1350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00E5
        gbc.setState(0x82e2, 0xe32d, 0xe200, 0xefdb, 0x58f5, 0xa719, 0x1, 0x1);
        gbc.writeMem(0x82e2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe32d);
        EXPECT(gbc.pc(), 0x82e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e2), 0xba);
        // BA 00E6
        gbc.setState(0x422f, 0x527e, 0xdad0, 0x909a, 0x9a3d, 0xf86e, 0x0, 0x0);
        gbc.writeMem(0x422f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x527e);
        EXPECT(gbc.pc(), 0x4230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00E7
        gbc.setState(0x7ce5, 0x92d9, 0x7140, 0x119c, 0xaae5, 0x79aa, 0x0, 0x1);
        gbc.writeMem(0x7ce5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x92d9);
        EXPECT(gbc.pc(), 0x7ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00E8
        gbc.setState(0xc2eb, 0xae91, 0xc550, 0xcf41, 0xae89, 0x2560, 0x1, 0x1);
        gbc.writeMem(0xc2eb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xae91);
        EXPECT(gbc.pc(), 0xc2ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2eb), 0xba);
        // BA 00E9
        gbc.setState(0x15a, 0x7885, 0xc900, 0x2b57, 0x86a8, 0x2272, 0x0, 0x0);
        gbc.writeMem(0x15a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7885);
        EXPECT(gbc.pc(), 0x15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00EA
        gbc.setState(0x7e2f, 0xdfad, 0x7d90, 0x568c, 0x41ae, 0xbe8e, 0x1, 0x0);
        gbc.writeMem(0x7e2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdfad);
        EXPECT(gbc.pc(), 0x7e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00EB
        gbc.setState(0x3026, 0x270c, 0x5a40, 0x851b, 0x4d0a, 0x4035, 0x1, 0x1);
        gbc.writeMem(0x3026, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x270c);
        EXPECT(gbc.pc(), 0x3027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00EC
        gbc.setState(0xa932, 0xc6e, 0x8010, 0xb23e, 0xa026, 0x69f9, 0x0, 0x1);
        gbc.writeMem(0xa932, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc6e);
        EXPECT(gbc.pc(), 0xa933);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa932), 0xba);
        // BA 00ED
        gbc.setState(0x70fe, 0x974b, 0xc430, 0x14c3, 0xa2d7, 0xb219, 0x0, 0x0);
        gbc.writeMem(0x70fe, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x974b);
        EXPECT(gbc.pc(), 0x70ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00EE
        gbc.setState(0x341b, 0x90b0, 0x71e0, 0x7bc3, 0xaa3e, 0xe2f1, 0x1, 0x1);
        gbc.writeMem(0x341b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x90b0);
        EXPECT(gbc.pc(), 0x341c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00F0
        gbc.setState(0x27c3, 0x1844, 0x8b40, 0x6cc4, 0xea21, 0x5740, 0x1, 0x0);
        gbc.writeMem(0x27c3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1844);
        EXPECT(gbc.pc(), 0x27c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00F1
        gbc.setState(0x5748, 0x3244, 0xaa60, 0x3208, 0x816d, 0xb644, 0x0, 0x0);
        gbc.writeMem(0x5748, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3244);
        EXPECT(gbc.pc(), 0x5749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 00F2
        gbc.setState(0x5eb6, 0x703d, 0xf1f0, 0x863b, 0x2f2, 0x4a40, 0x0, 0x1);
        gbc.writeMem(0x5eb6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x703d);
        EXPECT(gbc.pc(), 0x5eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00F3
        gbc.setState(0x38ce, 0x726, 0x1f0, 0xc5b, 0xdc7a, 0x8aa, 0x0, 0x1);
        gbc.writeMem(0x38ce, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x726);
        EXPECT(gbc.pc(), 0x38cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00F4
        gbc.setState(0x616f, 0xb67, 0x68b0, 0xd323, 0x8d43, 0x17dc, 0x0, 0x0);
        gbc.writeMem(0x616f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb67);
        EXPECT(gbc.pc(), 0x6170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00F5
        gbc.setState(0x8b81, 0xf8a, 0xa680, 0xdcc7, 0x14e7, 0x2e5e, 0x1, 0x0);
        gbc.writeMem(0x8b81, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf8a);
        EXPECT(gbc.pc(), 0x8b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b81), 0xba);
        // BA 00F6
        gbc.setState(0x8ba0, 0xf4d1, 0x6d00, 0xc52b, 0xbdb, 0x87ea, 0x1, 0x0);
        gbc.writeMem(0x8ba0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf4d1);
        EXPECT(gbc.pc(), 0x8ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ba0), 0xba);
        // BA 00F7
        gbc.setState(0x3a5d, 0x8ec5, 0xcee0, 0x20db, 0x9f69, 0x323, 0x1, 0x1);
        gbc.writeMem(0x3a5d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8ec5);
        EXPECT(gbc.pc(), 0x3a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 00F8
        gbc.setState(0x8dc1, 0x7d5a, 0x4dd0, 0x9c34, 0xc7cc, 0xe1ec, 0x0, 0x1);
        gbc.writeMem(0x8dc1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7d5a);
        EXPECT(gbc.pc(), 0x8dc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc1), 0xba);
        // BA 00F9
        gbc.setState(0x1902, 0x96a1, 0x8ed0, 0xcf3, 0x9576, 0x1c44, 0x1, 0x1);
        gbc.writeMem(0x1902, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x96a1);
        EXPECT(gbc.pc(), 0x1903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00FA
        gbc.setState(0x7ef7, 0x451e, 0x7e30, 0x7194, 0x9e83, 0x1427, 0x0, 0x0);
        gbc.writeMem(0x7ef7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x451e);
        EXPECT(gbc.pc(), 0x7ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00FB
        gbc.setState(0x2dc6, 0xc633, 0x89f0, 0x6665, 0xc160, 0xb112, 0x0, 0x0);
        gbc.writeMem(0x2dc6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc633);
        EXPECT(gbc.pc(), 0x2dc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00FC
        gbc.setState(0x1949, 0xf242, 0x2c00, 0xb8a0, 0xd024, 0x463e, 0x0, 0x1);
        gbc.writeMem(0x1949, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf242);
        EXPECT(gbc.pc(), 0x194a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 00FD
        gbc.setState(0x1365, 0x676d, 0x9020, 0x9734, 0x9ba7, 0x66c8, 0x0, 0x1);
        gbc.writeMem(0x1365, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x676d);
        EXPECT(gbc.pc(), 0x1366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00FE
        gbc.setState(0x15bc, 0x80, 0x61e0, 0x3289, 0x7419, 0x62b4, 0x0, 0x1);
        gbc.writeMem(0x15bc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x80);
        EXPECT(gbc.pc(), 0x15bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 00FF
        gbc.setState(0x6c76, 0x648a, 0x6a50, 0x2f80, 0x9eb5, 0x3434, 0x1, 0x1);
        gbc.writeMem(0x6c76, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x648a);
        EXPECT(gbc.pc(), 0x6c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0100
        gbc.setState(0x2a2d, 0xbf97, 0xa610, 0xe934, 0xb886, 0x699d, 0x0, 0x1);
        gbc.writeMem(0x2a2d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xbf97);
        EXPECT(gbc.pc(), 0x2a2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0101
        gbc.setState(0x983d, 0xf28f, 0xfbb0, 0x346d, 0x37c1, 0x6ee4, 0x0, 0x0);
        gbc.writeMem(0x983d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf28f);
        EXPECT(gbc.pc(), 0x983e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x983d), 0xba);
        // BA 0102
        gbc.setState(0xaadd, 0x613e, 0xb90, 0x6ebf, 0xab2b, 0xfca4, 0x0, 0x1);
        gbc.writeMem(0xaadd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x613e);
        EXPECT(gbc.pc(), 0xaade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaadd), 0xba);
        // BA 0103
        gbc.setState(0xc45f, 0x24dd, 0xc460, 0xccd, 0xfe8, 0x9386, 0x0, 0x1);
        gbc.writeMem(0xc45f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x24dd);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45f), 0xba);
        // BA 0104
        gbc.setState(0x7282, 0x7ebc, 0x2280, 0xf194, 0x28a0, 0x9e1e, 0x0, 0x0);
        gbc.writeMem(0x7282, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7ebc);
        EXPECT(gbc.pc(), 0x7283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0105
        gbc.setState(0xba7e, 0xab03, 0xcff0, 0x2b82, 0x176f, 0x78ca, 0x0, 0x0);
        gbc.writeMem(0xba7e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xab03);
        EXPECT(gbc.pc(), 0xba7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba7e), 0xba);
        // BA 0106
        gbc.setState(0x1ad8, 0x6e69, 0x8430, 0xffeb, 0x9ff8, 0x5978, 0x0, 0x1);
        gbc.writeMem(0x1ad8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6e69);
        EXPECT(gbc.pc(), 0x1ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0107
        gbc.setState(0x5878, 0x49a0, 0x6670, 0xe1e5, 0xa04, 0x174, 0x0, 0x0);
        gbc.writeMem(0x5878, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x49a0);
        EXPECT(gbc.pc(), 0x5879);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0108
        gbc.setState(0x29ef, 0xd7ff, 0x5580, 0xa7bd, 0x3d46, 0xde08, 0x0, 0x0);
        gbc.writeMem(0x29ef, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd7ff);
        EXPECT(gbc.pc(), 0x29f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0109
        gbc.setState(0x2cb5, 0x91b9, 0xd920, 0xd0dc, 0xaf7f, 0xf582, 0x0, 0x0);
        gbc.writeMem(0x2cb5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x91b9);
        EXPECT(gbc.pc(), 0x2cb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 010A
        gbc.setState(0xcbda, 0xdb97, 0x1370, 0x925b, 0x10bb, 0x7271, 0x1, 0x1);
        gbc.writeMem(0xcbda, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdb97);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbda), 0xba);
        // BA 010C
        gbc.setState(0xb5fa, 0xde54, 0xe3c0, 0x2d0, 0x4fa8, 0x632e, 0x0, 0x1);
        gbc.writeMem(0xb5fa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xde54);
        EXPECT(gbc.pc(), 0xb5fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fa), 0xba);
        // BA 010D
        gbc.setState(0xad4d, 0xfe0d, 0x6150, 0x97fe, 0x5a59, 0xbde1, 0x0, 0x0);
        gbc.writeMem(0xad4d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe0d);
        EXPECT(gbc.pc(), 0xad4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4d), 0xba);
        // BA 010E
        gbc.setState(0x58a9, 0xd96, 0xdad0, 0xeea8, 0x8265, 0x163f, 0x0, 0x1);
        gbc.writeMem(0x58a9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd96);
        EXPECT(gbc.pc(), 0x58aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 010F
        gbc.setState(0x860, 0x458, 0x5200, 0x528f, 0xb18d, 0xd16f, 0x1, 0x1);
        gbc.writeMem(0x860, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x458);
        EXPECT(gbc.pc(), 0x861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0110
        gbc.setState(0x4a66, 0x16ec, 0xd360, 0x28f0, 0xf611, 0x1e98, 0x1, 0x1);
        gbc.writeMem(0x4a66, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x16ec);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0111
        gbc.setState(0xea79, 0x16b2, 0xebf0, 0x7084, 0xa61b, 0x68a0, 0x1, 0x0);
        gbc.writeMem(0xea79, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x16b2);
        EXPECT(gbc.pc(), 0xea7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea79), 0xba);
        // BA 0112
        gbc.setState(0x33a1, 0xe4ab, 0x3760, 0x5547, 0x3c5a, 0x4024, 0x0, 0x1);
        gbc.writeMem(0x33a1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe4ab);
        EXPECT(gbc.pc(), 0x33a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0113
        gbc.setState(0x2366, 0xb680, 0xe250, 0xba30, 0xfe1, 0x5e6, 0x0, 0x1);
        gbc.writeMem(0x2366, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb680);
        EXPECT(gbc.pc(), 0x2367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0114
        gbc.setState(0xbdef, 0x7a28, 0xf240, 0xe349, 0x9a6, 0x8091, 0x1, 0x1);
        gbc.writeMem(0xbdef, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7a28);
        EXPECT(gbc.pc(), 0xbdf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdef), 0xba);
        // BA 0115
        gbc.setState(0x4e2a, 0xec48, 0x5130, 0x354, 0x4829, 0x570b, 0x1, 0x0);
        gbc.writeMem(0x4e2a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xec48);
        EXPECT(gbc.pc(), 0x4e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0116
        gbc.setState(0xb4ab, 0xfafb, 0xa080, 0x57b, 0x3911, 0xe5d, 0x0, 0x0);
        gbc.writeMem(0xb4ab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xfafb);
        EXPECT(gbc.pc(), 0xb4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ab), 0xba);
        // BA 0117
        gbc.setState(0xc0fd, 0xfcd1, 0x870, 0xad74, 0x47ba, 0x5f09, 0x0, 0x1);
        gbc.writeMem(0xc0fd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xfcd1);
        EXPECT(gbc.pc(), 0xc0fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fd), 0xba);
        // BA 0118
        gbc.setState(0x8abd, 0x299e, 0x73d0, 0x12e6, 0xdd1f, 0xad6e, 0x0, 0x0);
        gbc.writeMem(0x8abd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x299e);
        EXPECT(gbc.pc(), 0x8abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8abd), 0xba);
        // BA 0119
        gbc.setState(0xab83, 0x30ab, 0x4b80, 0x1546, 0xbfd, 0x3a26, 0x0, 0x0);
        gbc.writeMem(0xab83, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x30ab);
        EXPECT(gbc.pc(), 0xab84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab83), 0xba);
        // BA 011A
        gbc.setState(0x2b72, 0x3560, 0x27e0, 0xd3a9, 0x1607, 0xf75c, 0x1, 0x1);
        gbc.writeMem(0x2b72, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3560);
        EXPECT(gbc.pc(), 0x2b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 011B
        gbc.setState(0x9e14, 0x29a7, 0xdef0, 0xe77c, 0x51e0, 0xa43b, 0x1, 0x1);
        gbc.writeMem(0x9e14, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x29a7);
        EXPECT(gbc.pc(), 0x9e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e14), 0xba);
        // BA 011C
        gbc.setState(0x38d8, 0x8379, 0xd360, 0x1597, 0x63e6, 0xa858, 0x0, 0x0);
        gbc.writeMem(0x38d8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8379);
        EXPECT(gbc.pc(), 0x38d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 011D
        gbc.setState(0x87a, 0x63f3, 0xf490, 0x16e4, 0xb12, 0xa20, 0x0, 0x1);
        gbc.writeMem(0x87a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x63f3);
        EXPECT(gbc.pc(), 0x87b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 011E
        gbc.setState(0x4d57, 0x5a49, 0x4320, 0x848a, 0x23, 0x5242, 0x0, 0x1);
        gbc.writeMem(0x4d57, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5a49);
        EXPECT(gbc.pc(), 0x4d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 011F
        gbc.setState(0x8ea2, 0x70e8, 0xd2d0, 0xe53e, 0xfc44, 0x8e60, 0x1, 0x1);
        gbc.writeMem(0x8ea2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x70e8);
        EXPECT(gbc.pc(), 0x8ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea2), 0xba);
        // BA 0121
        gbc.setState(0x7620, 0x1a3b, 0xf80, 0x26d0, 0xb9d4, 0xe46a, 0x0, 0x1);
        gbc.writeMem(0x7620, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1a3b);
        EXPECT(gbc.pc(), 0x7621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0122
        gbc.setState(0x79fb, 0x69fb, 0xfa60, 0x1a93, 0x62bd, 0x4742, 0x1, 0x1);
        gbc.writeMem(0x79fb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x69fb);
        EXPECT(gbc.pc(), 0x79fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0123
        gbc.setState(0x9079, 0x2cbe, 0x9910, 0xe6e, 0x8982, 0xa323, 0x1, 0x1);
        gbc.writeMem(0x9079, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2cbe);
        EXPECT(gbc.pc(), 0x907a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9079), 0xba);
        // BA 0124
        gbc.setState(0x6ee, 0xc1e9, 0x5440, 0xe974, 0xf146, 0xc35f, 0x0, 0x0);
        gbc.writeMem(0x6ee, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc1e9);
        EXPECT(gbc.pc(), 0x6ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0125
        gbc.setState(0x4f47, 0xac66, 0xde10, 0xbe49, 0xb707, 0x2d2a, 0x0, 0x1);
        gbc.writeMem(0x4f47, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0x4f48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0126
        gbc.setState(0x52f6, 0x16c7, 0x44d0, 0x263e, 0xfe15, 0xbc9f, 0x0, 0x1);
        gbc.writeMem(0x52f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x16c7);
        EXPECT(gbc.pc(), 0x52f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0127
        gbc.setState(0xb1a5, 0xdfd2, 0xd280, 0xb378, 0xe8c, 0x2a50, 0x1, 0x1);
        gbc.writeMem(0xb1a5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdfd2);
        EXPECT(gbc.pc(), 0xb1a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a5), 0xba);
        // BA 0128
        gbc.setState(0x7875, 0x4245, 0x2120, 0x8d58, 0xccad, 0xc6be, 0x0, 0x1);
        gbc.writeMem(0x7875, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4245);
        EXPECT(gbc.pc(), 0x7876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0129
        gbc.setState(0xc2e6, 0x621a, 0x4c00, 0xdd40, 0x5f0d, 0xf353, 0x0, 0x1);
        gbc.writeMem(0xc2e6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x621a);
        EXPECT(gbc.pc(), 0xc2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e6), 0xba);
        // BA 012A
        gbc.setState(0x20a, 0x9077, 0xb740, 0x1b8a, 0x94e7, 0x8d3e, 0x1, 0x1);
        gbc.writeMem(0x20a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9077);
        EXPECT(gbc.pc(), 0x20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 012B
        gbc.setState(0x675c, 0xb598, 0x4850, 0x416f, 0xf1dd, 0xf23d, 0x0, 0x0);
        gbc.writeMem(0x675c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb598);
        EXPECT(gbc.pc(), 0x675d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 012C
        gbc.setState(0xe276, 0x3d43, 0xec40, 0x4040, 0x97f7, 0x572e, 0x1, 0x0);
        gbc.writeMem(0xe276, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3d43);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe276), 0xba);
        // BA 012D
        gbc.setState(0x2c90, 0xa950, 0x59f0, 0x5c1f, 0x12e4, 0x8917, 0x0, 0x0);
        gbc.writeMem(0x2c90, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa950);
        EXPECT(gbc.pc(), 0x2c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 012E
        gbc.setState(0x744c, 0x97a4, 0x8db0, 0x8847, 0xacdc, 0x53f4, 0x0, 0x0);
        gbc.writeMem(0x744c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x97a4);
        EXPECT(gbc.pc(), 0x744d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0130
        gbc.setState(0x9fe9, 0x1e3d, 0x6080, 0x4fe7, 0xedc1, 0x51a2, 0x0, 0x0);
        gbc.writeMem(0x9fe9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1e3d);
        EXPECT(gbc.pc(), 0x9fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe9), 0xba);
        // BA 0131
        gbc.setState(0x5e25, 0x1876, 0xcc50, 0x1f71, 0xef0d, 0x22f9, 0x1, 0x0);
        gbc.writeMem(0x5e25, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1876);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0132
        gbc.setState(0xdb13, 0x4d4c, 0xdd90, 0xbc18, 0xd1f7, 0x9eab, 0x1, 0x1);
        gbc.writeMem(0xdb13, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4d4c);
        EXPECT(gbc.pc(), 0xdb14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb13), 0xba);
        // BA 0133
        gbc.setState(0xccd7, 0xc28, 0xf230, 0x68a5, 0x1cf7, 0x91dd, 0x0, 0x0);
        gbc.writeMem(0xccd7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc28);
        EXPECT(gbc.pc(), 0xccd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd7), 0xba);
        // BA 0134
        gbc.setState(0x6950, 0xe340, 0xf50, 0x850c, 0x6c28, 0x8792, 0x1, 0x0);
        gbc.writeMem(0x6950, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe340);
        EXPECT(gbc.pc(), 0x6951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0135
        gbc.setState(0x8589, 0x3462, 0x4db0, 0xc4f7, 0xa125, 0x8932, 0x0, 0x1);
        gbc.writeMem(0x8589, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3462);
        EXPECT(gbc.pc(), 0x858a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8589), 0xba);
        // BA 0136
        gbc.setState(0xe60, 0xcc4a, 0x6a00, 0xe243, 0x37d3, 0x466d, 0x1, 0x1);
        gbc.writeMem(0xe60, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcc4a);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0137
        gbc.setState(0xa6c7, 0xd1a0, 0xce00, 0xc119, 0xbe53, 0x88d, 0x1, 0x0);
        gbc.writeMem(0xa6c7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xd1a0);
        EXPECT(gbc.pc(), 0xa6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c7), 0xba);
        // BA 0138
        gbc.setState(0xc631, 0xdfc5, 0x5e80, 0x2ea3, 0xb5c9, 0x9055, 0x1, 0x1);
        gbc.writeMem(0xc631, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xdfc5);
        EXPECT(gbc.pc(), 0xc632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc631), 0xba);
        // BA 0139
        gbc.setState(0x16e4, 0x221b, 0x51f0, 0xfed6, 0xeaba, 0xdb1d, 0x0, 0x1);
        gbc.writeMem(0x16e4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x221b);
        EXPECT(gbc.pc(), 0x16e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 013A
        gbc.setState(0x32ed, 0xe829, 0x4750, 0x4b5e, 0x5e17, 0xe912, 0x1, 0x0);
        gbc.writeMem(0x32ed, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe829);
        EXPECT(gbc.pc(), 0x32ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 013B
        gbc.setState(0x893b, 0x4359, 0x8190, 0x653d, 0x300f, 0xfd9d, 0x0, 0x1);
        gbc.writeMem(0x893b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4359);
        EXPECT(gbc.pc(), 0x893c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x893b), 0xba);
        // BA 013C
        gbc.setState(0x547d, 0xe83b, 0xff60, 0xc2f1, 0x7ac8, 0x908f, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe83b);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 013D
        gbc.setState(0xea49, 0x88cb, 0xb6c0, 0xc8be, 0x4ac8, 0xec45, 0x0, 0x0);
        gbc.writeMem(0xea49, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x88cb);
        EXPECT(gbc.pc(), 0xea4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea49), 0xba);
        // BA 013E
        gbc.setState(0xdc6b, 0x3abe, 0xf370, 0x6129, 0x9b85, 0xc331, 0x1, 0x0);
        gbc.writeMem(0xdc6b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3abe);
        EXPECT(gbc.pc(), 0xdc6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc6b), 0xba);
        // BA 013F
        gbc.setState(0x4e39, 0x3888, 0x3080, 0x62ed, 0xb010, 0x4ee7, 0x0, 0x1);
        gbc.writeMem(0x4e39, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3888);
        EXPECT(gbc.pc(), 0x4e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0141
        gbc.setState(0x5a2f, 0xee9d, 0x6aa0, 0x6d1, 0x5119, 0x270e, 0x0, 0x0);
        gbc.writeMem(0x5a2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xee9d);
        EXPECT(gbc.pc(), 0x5a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0142
        gbc.setState(0x2c8b, 0x92e1, 0xe290, 0x9fc8, 0xace9, 0x4de6, 0x0, 0x0);
        gbc.writeMem(0x2c8b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x2c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0143
        gbc.setState(0xddf7, 0x3b49, 0x37e0, 0x8401, 0x11c7, 0x4681, 0x1, 0x1);
        gbc.writeMem(0xddf7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3b49);
        EXPECT(gbc.pc(), 0xddf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf7), 0xba);
        // BA 0144
        gbc.setState(0xb629, 0x8699, 0xd3b0, 0xdf7, 0x3a69, 0xb8dc, 0x1, 0x1);
        gbc.writeMem(0xb629, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8699);
        EXPECT(gbc.pc(), 0xb62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb629), 0xba);
        // BA 0145
        gbc.setState(0x5d97, 0x847d, 0xd220, 0x95db, 0x87e2, 0xf26e, 0x1, 0x1);
        gbc.writeMem(0x5d97, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x847d);
        EXPECT(gbc.pc(), 0x5d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0146
        gbc.setState(0x292b, 0xa813, 0x6080, 0x3dec, 0x6867, 0xb77a, 0x1, 0x0);
        gbc.writeMem(0x292b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa813);
        EXPECT(gbc.pc(), 0x292c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0147
        gbc.setState(0x4cee, 0xde68, 0x2d80, 0x1217, 0x2e16, 0xcb8f, 0x1, 0x0);
        gbc.writeMem(0x4cee, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xde68);
        EXPECT(gbc.pc(), 0x4cef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0148
        gbc.setState(0x9d40, 0x666a, 0xd850, 0xaf82, 0x848e, 0x63fe, 0x1, 0x1);
        gbc.writeMem(0x9d40, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x666a);
        EXPECT(gbc.pc(), 0x9d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d40), 0xba);
        // BA 0149
        gbc.setState(0xe269, 0x8813, 0xf400, 0xb341, 0x1fca, 0xebe8, 0x1, 0x1);
        gbc.writeMem(0xe269, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8813);
        EXPECT(gbc.pc(), 0xe26a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe269), 0xba);
        // BA 014A
        gbc.setState(0xcf31, 0x4941, 0x5e40, 0x3ea4, 0x765a, 0xbe96, 0x1, 0x0);
        gbc.writeMem(0xcf31, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4941);
        EXPECT(gbc.pc(), 0xcf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf31), 0xba);
        // BA 014B
        gbc.setState(0x2fd1, 0x959d, 0x15c0, 0x1cb, 0xa02f, 0x3501, 0x0, 0x0);
        gbc.writeMem(0x2fd1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x959d);
        EXPECT(gbc.pc(), 0x2fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 014C
        gbc.setState(0x39c, 0x7f60, 0x2620, 0xc46b, 0x2249, 0x43f7, 0x0, 0x0);
        gbc.writeMem(0x39c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7f60);
        EXPECT(gbc.pc(), 0x39d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 014D
        gbc.setState(0xbb3, 0xc694, 0x7fe0, 0x89b2, 0x318b, 0x5d4e, 0x0, 0x1);
        gbc.writeMem(0xbb3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc694);
        EXPECT(gbc.pc(), 0xbb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 014E
        gbc.setState(0x89c4, 0x6115, 0xe6a0, 0x16b4, 0x88b7, 0xf9a6, 0x0, 0x1);
        gbc.writeMem(0x89c4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6115);
        EXPECT(gbc.pc(), 0x89c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c4), 0xba);
        // BA 014F
        gbc.setState(0xb827, 0xddfb, 0xb050, 0x73f3, 0x2777, 0x1117, 0x0, 0x0);
        gbc.writeMem(0xb827, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xddfb);
        EXPECT(gbc.pc(), 0xb828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb827), 0xba);
        // BA 0150
        gbc.setState(0x1907, 0x80be, 0xc2f0, 0x9f81, 0x1677, 0xf03f, 0x1, 0x1);
        gbc.writeMem(0x1907, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x80be);
        EXPECT(gbc.pc(), 0x1908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0151
        gbc.setState(0xec72, 0x618c, 0xc090, 0x4bf2, 0x1126, 0x877, 0x0, 0x0);
        gbc.writeMem(0xec72, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x618c);
        EXPECT(gbc.pc(), 0xec73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec72), 0xba);
        // BA 0152
        gbc.setState(0x2f00, 0x2725, 0x52f0, 0xc755, 0x9734, 0x8844, 0x1, 0x0);
        gbc.writeMem(0x2f00, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2725);
        EXPECT(gbc.pc(), 0x2f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0153
        gbc.setState(0x12e0, 0x5c6d, 0xdd30, 0x7eea, 0x8913, 0x2539, 0x1, 0x1);
        gbc.writeMem(0x12e0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5c6d);
        EXPECT(gbc.pc(), 0x12e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0154
        gbc.setState(0x439f, 0x204f, 0x9070, 0xcd6d, 0xa32, 0x63a, 0x1, 0x1);
        gbc.writeMem(0x439f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x204f);
        EXPECT(gbc.pc(), 0x43a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0156
        gbc.setState(0x3d3b, 0x2d8d, 0x8ae0, 0x1ed2, 0x6ed3, 0x5da, 0x1, 0x1);
        gbc.writeMem(0x3d3b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2d8d);
        EXPECT(gbc.pc(), 0x3d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0157
        gbc.setState(0xa152, 0x4214, 0xd1c0, 0xfe7b, 0xa301, 0x1324, 0x1, 0x0);
        gbc.writeMem(0xa152, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x4214);
        EXPECT(gbc.pc(), 0xa153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa152), 0xba);
        // BA 0158
        gbc.setState(0x13f8, 0xc29e, 0xe9d0, 0x1c37, 0xa583, 0x3207, 0x1, 0x1);
        gbc.writeMem(0x13f8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc29e);
        EXPECT(gbc.pc(), 0x13f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0159
        gbc.setState(0xa7b2, 0x6931, 0x1da0, 0x3639, 0x7907, 0xa672, 0x0, 0x1);
        gbc.writeMem(0xa7b2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6931);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b2), 0xba);
        // BA 015A
        gbc.setState(0xc84e, 0xb835, 0xf860, 0x84d9, 0xa13f, 0x294e, 0x0, 0x0);
        gbc.writeMem(0xc84e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb835);
        EXPECT(gbc.pc(), 0xc84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc84e), 0xba);
        // BA 015B
        gbc.setState(0x7142, 0xb467, 0xead0, 0xe5c6, 0x2bcd, 0xe578, 0x1, 0x1);
        gbc.writeMem(0x7142, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0x7143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 015C
        gbc.setState(0x764c, 0x6cb, 0x8fa0, 0x38cf, 0xa959, 0x7f1b, 0x0, 0x1);
        gbc.writeMem(0x764c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6cb);
        EXPECT(gbc.pc(), 0x764d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 015D
        gbc.setState(0x4695, 0xecfe, 0xef70, 0x6b2c, 0x68f1, 0x9d9d, 0x0, 0x1);
        gbc.writeMem(0x4695, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xecfe);
        EXPECT(gbc.pc(), 0x4696);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 015E
        gbc.setState(0x745d, 0xcd4e, 0x4d30, 0x7509, 0xb2e3, 0xbf2a, 0x1, 0x0);
        gbc.writeMem(0x745d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcd4e);
        EXPECT(gbc.pc(), 0x745e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 015F
        gbc.setState(0x5b8a, 0xb204, 0x41f0, 0x653c, 0x81bc, 0x6117, 0x0, 0x1);
        gbc.writeMem(0x5b8a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb204);
        EXPECT(gbc.pc(), 0x5b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0160
        gbc.setState(0x2038, 0xd028, 0xf300, 0xae3f, 0xa85b, 0x9638, 0x1, 0x1);
        gbc.writeMem(0x2038, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd028);
        EXPECT(gbc.pc(), 0x2039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0161
        gbc.setState(0xd0ad, 0x29c2, 0x500, 0xfb9, 0xb047, 0x93c2, 0x0, 0x1);
        gbc.writeMem(0xd0ad, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x29c2);
        EXPECT(gbc.pc(), 0xd0ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ad), 0xba);
        // BA 0162
        gbc.setState(0x4fdd, 0x4e4d, 0xaa00, 0xcd9e, 0x9a6d, 0x4ba, 0x1, 0x1);
        gbc.writeMem(0x4fdd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4e4d);
        EXPECT(gbc.pc(), 0x4fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0163
        gbc.setState(0x1a30, 0xf5b1, 0x6a70, 0x9c30, 0x9722, 0x174f, 0x0, 0x0);
        gbc.writeMem(0x1a30, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf5b1);
        EXPECT(gbc.pc(), 0x1a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0164
        gbc.setState(0xced8, 0xfb11, 0x65e0, 0x3528, 0xaefe, 0x9a8, 0x0, 0x1);
        gbc.writeMem(0xced8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfb11);
        EXPECT(gbc.pc(), 0xced9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xced8), 0xba);
        // BA 0165
        gbc.setState(0x87d4, 0xb4a3, 0x8090, 0xa143, 0xbe63, 0x6640, 0x0, 0x1);
        gbc.writeMem(0x87d4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb4a3);
        EXPECT(gbc.pc(), 0x87d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87d4), 0xba);
        // BA 0166
        gbc.setState(0xec06, 0x7615, 0x34c0, 0x5901, 0xbbe7, 0x4576, 0x0, 0x1);
        gbc.writeMem(0xec06, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7615);
        EXPECT(gbc.pc(), 0xec07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec06), 0xba);
        // BA 0167
        gbc.setState(0x8b57, 0xab8, 0x4970, 0xf4b1, 0x8ef4, 0xda29, 0x1, 0x1);
        gbc.writeMem(0x8b57, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xab8);
        EXPECT(gbc.pc(), 0x8b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b57), 0xba);
        // BA 0168
        gbc.setState(0x7e6e, 0xe3b7, 0xca50, 0x9c49, 0x9578, 0xa8c5, 0x0, 0x1);
        gbc.writeMem(0x7e6e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe3b7);
        EXPECT(gbc.pc(), 0x7e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0169
        gbc.setState(0x1e64, 0xbdfa, 0xab30, 0xf168, 0xa250, 0xbe62, 0x1, 0x1);
        gbc.writeMem(0x1e64, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbdfa);
        EXPECT(gbc.pc(), 0x1e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 016A
        gbc.setState(0x7bdc, 0x1434, 0xa6a0, 0x730a, 0x9485, 0x4dde, 0x0, 0x0);
        gbc.writeMem(0x7bdc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1434);
        EXPECT(gbc.pc(), 0x7bdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 016B
        gbc.setState(0xaa34, 0x8057, 0x52a0, 0xa91d, 0x1fb3, 0xd544, 0x0, 0x0);
        gbc.writeMem(0xaa34, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8057);
        EXPECT(gbc.pc(), 0xaa35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa34), 0xba);
        // BA 016D
        gbc.setState(0xdeca, 0xb73d, 0xa840, 0x7aa0, 0xdd6e, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0xdeca, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb73d);
        EXPECT(gbc.pc(), 0xdecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeca), 0xba);
        // BA 016E
        gbc.setState(0x5722, 0x15bd, 0x83f0, 0x30f8, 0x3fe9, 0x4fd4, 0x1, 0x1);
        gbc.writeMem(0x5722, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x15bd);
        EXPECT(gbc.pc(), 0x5723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 016F
        gbc.setState(0xd492, 0x563d, 0xcf70, 0x6b46, 0x7cf5, 0xc182, 0x0, 0x0);
        gbc.writeMem(0xd492, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x563d);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd492), 0xba);
        // BA 0170
        gbc.setState(0xd0d1, 0xb4da, 0x6dd0, 0xc681, 0xd8d3, 0x8565, 0x1, 0x1);
        gbc.writeMem(0xd0d1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb4da);
        EXPECT(gbc.pc(), 0xd0d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d1), 0xba);
        // BA 0171
        gbc.setState(0xed08, 0x85db, 0xa40, 0xaf4e, 0x29dd, 0x287e, 0x1, 0x0);
        gbc.writeMem(0xed08, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x85db);
        EXPECT(gbc.pc(), 0xed09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed08), 0xba);
        // BA 0172
        gbc.setState(0xad72, 0xa4a7, 0x5ef0, 0x4015, 0xa8bb, 0x7d85, 0x1, 0x1);
        gbc.writeMem(0xad72, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa4a7);
        EXPECT(gbc.pc(), 0xad73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad72), 0xba);
        // BA 0173
        gbc.setState(0x5cd5, 0x1a30, 0x8ed0, 0x9bb5, 0xba71, 0x62be, 0x0, 0x1);
        gbc.writeMem(0x5cd5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1a30);
        EXPECT(gbc.pc(), 0x5cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0174
        gbc.setState(0x1cb8, 0x9307, 0x16d0, 0xe343, 0x2ff4, 0xec12, 0x0, 0x1);
        gbc.writeMem(0x1cb8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9307);
        EXPECT(gbc.pc(), 0x1cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0175
        gbc.setState(0x1299, 0x7d5d, 0x4e40, 0x16c8, 0x1526, 0x881, 0x1, 0x0);
        gbc.writeMem(0x1299, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7d5d);
        EXPECT(gbc.pc(), 0x129a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0176
        gbc.setState(0x1e5c, 0xbb8e, 0xf9b0, 0xb89b, 0x9dc6, 0x4931, 0x1, 0x1);
        gbc.writeMem(0x1e5c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbb8e);
        EXPECT(gbc.pc(), 0x1e5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0177
        gbc.setState(0x8ec2, 0xbd04, 0xd6b0, 0x83da, 0x3463, 0x91e5, 0x1, 0x0);
        gbc.writeMem(0x8ec2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbd04);
        EXPECT(gbc.pc(), 0x8ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec2), 0xba);
        // BA 0178
        gbc.setState(0xed14, 0x355e, 0x7440, 0x3e80, 0xda94, 0xfba6, 0x1, 0x0);
        gbc.writeMem(0xed14, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x355e);
        EXPECT(gbc.pc(), 0xed15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed14), 0xba);
        // BA 0179
        gbc.setState(0x9c20, 0x5885, 0x96a0, 0x8f4, 0x6110, 0x5cce, 0x1, 0x1);
        gbc.writeMem(0x9c20, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5885);
        EXPECT(gbc.pc(), 0x9c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c20), 0xba);
        // BA 017A
        gbc.setState(0x175a, 0xa4c1, 0x1d10, 0x2310, 0xdf8e, 0xf9e4, 0x0, 0x0);
        gbc.writeMem(0x175a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa4c1);
        EXPECT(gbc.pc(), 0x175b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 017B
        gbc.setState(0xbda3, 0xa42b, 0xf6e0, 0x48b4, 0x63cc, 0x457a, 0x1, 0x0);
        gbc.writeMem(0xbda3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa42b);
        EXPECT(gbc.pc(), 0xbda4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda3), 0xba);
        // BA 017C
        gbc.setState(0x61a2, 0xeca8, 0x6d80, 0x3560, 0xfc8b, 0xb4c8, 0x1, 0x1);
        gbc.writeMem(0x61a2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xeca8);
        EXPECT(gbc.pc(), 0x61a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 017D
        gbc.setState(0x5469, 0x8e75, 0x9190, 0x9cd5, 0xde5d, 0xbaa5, 0x0, 0x0);
        gbc.writeMem(0x5469, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8e75);
        EXPECT(gbc.pc(), 0x546a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 017E
        gbc.setState(0x7e3d, 0xa81a, 0x9320, 0x793d, 0xb852, 0x1eaa, 0x0, 0x0);
        gbc.writeMem(0x7e3d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa81a);
        EXPECT(gbc.pc(), 0x7e3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 017F
        gbc.setState(0x96a9, 0xbb9e, 0xabd0, 0xc724, 0xf1d8, 0x630a, 0x0, 0x0);
        gbc.writeMem(0x96a9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbb9e);
        EXPECT(gbc.pc(), 0x96aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a9), 0xba);
        // BA 0180
        gbc.setState(0x366d, 0x8aa3, 0xde90, 0x2678, 0xcca6, 0x9a06, 0x0, 0x1);
        gbc.writeMem(0x366d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8aa3);
        EXPECT(gbc.pc(), 0x366e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0181
        gbc.setState(0x4bbc, 0xa4bb, 0xf990, 0x5e8c, 0xf77c, 0xd810, 0x0, 0x1);
        gbc.writeMem(0x4bbc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa4bb);
        EXPECT(gbc.pc(), 0x4bbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0182
        gbc.setState(0x5c89, 0xb8a0, 0x2390, 0xc271, 0xa2e2, 0x6254, 0x1, 0x1);
        gbc.writeMem(0x5c89, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb8a0);
        EXPECT(gbc.pc(), 0x5c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0183
        gbc.setState(0x24bb, 0xcd1a, 0xd040, 0xcd69, 0x193e, 0x5172, 0x0, 0x0);
        gbc.writeMem(0x24bb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcd1a);
        EXPECT(gbc.pc(), 0x24bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0184
        gbc.setState(0xa823, 0xba2a, 0x9330, 0x424a, 0x8f11, 0x56e3, 0x1, 0x1);
        gbc.writeMem(0xa823, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xba2a);
        EXPECT(gbc.pc(), 0xa824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa823), 0xba);
        // BA 0185
        gbc.setState(0xde76, 0xfcef, 0xba60, 0xd3c, 0x3ce3, 0x3213, 0x0, 0x1);
        gbc.writeMem(0xde76, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfcef);
        EXPECT(gbc.pc(), 0xde77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde76), 0xba);
        // BA 0186
        gbc.setState(0x501e, 0xce99, 0x47c0, 0x9a1b, 0x8320, 0x682, 0x1, 0x0);
        gbc.writeMem(0x501e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xce99);
        EXPECT(gbc.pc(), 0x501f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0187
        gbc.setState(0xdfab, 0xbb79, 0x7da0, 0xdb6d, 0x80be, 0x5d3e, 0x1, 0x1);
        gbc.writeMem(0xdfab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbb79);
        EXPECT(gbc.pc(), 0xdfac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfab), 0xba);
        // BA 0188
        gbc.setState(0xd98, 0x1c55, 0x6460, 0xbdb4, 0x1ea8, 0x8712, 0x1, 0x0);
        gbc.writeMem(0xd98, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0xd99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0189
        gbc.setState(0xcbce, 0xc8a7, 0xe650, 0x7c42, 0x6dc9, 0x8921, 0x1, 0x0);
        gbc.writeMem(0xcbce, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc8a7);
        EXPECT(gbc.pc(), 0xcbcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbce), 0xba);
        // BA 018A
        gbc.setState(0xa8c0, 0x152e, 0x91d0, 0x9c97, 0x9bf6, 0xed37, 0x1, 0x0);
        gbc.writeMem(0xa8c0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0xa8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c0), 0xba);
        // BA 018B
        gbc.setState(0x4900, 0xb931, 0xcfe0, 0x82de, 0x4ede, 0x8ec, 0x0, 0x1);
        gbc.writeMem(0x4900, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb931);
        EXPECT(gbc.pc(), 0x4901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 018C
        gbc.setState(0x9677, 0x3af2, 0xe410, 0x27d4, 0x6bb9, 0x1dca, 0x0, 0x1);
        gbc.writeMem(0x9677, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3af2);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9677), 0xba);
        // BA 018D
        gbc.setState(0x6ea7, 0x1874, 0xbc00, 0x9b7c, 0xf35f, 0xfd40, 0x1, 0x0);
        gbc.writeMem(0x6ea7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1874);
        EXPECT(gbc.pc(), 0x6ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 018E
        gbc.setState(0xb182, 0xb5e4, 0x9270, 0x8180, 0xc0f2, 0x337f, 0x0, 0x1);
        gbc.writeMem(0xb182, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb5e4);
        EXPECT(gbc.pc(), 0xb183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb182), 0xba);
        // BA 018F
        gbc.setState(0xa261, 0xaba3, 0x7d30, 0xd5f1, 0x755e, 0x2fb8, 0x1, 0x1);
        gbc.writeMem(0xa261, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xaba3);
        EXPECT(gbc.pc(), 0xa262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa261), 0xba);
        // BA 0190
        gbc.setState(0x47f6, 0x5218, 0x21b0, 0x61ab, 0x9544, 0x50f4, 0x0, 0x1);
        gbc.writeMem(0x47f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5218);
        EXPECT(gbc.pc(), 0x47f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0191
        gbc.setState(0xd67f, 0xa6ee, 0xe380, 0x5f5a, 0x2d3c, 0x8eb1, 0x1, 0x0);
        gbc.writeMem(0xd67f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa6ee);
        EXPECT(gbc.pc(), 0xd680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd67f), 0xba);
        // BA 0192
        gbc.setState(0x8bdb, 0xf680, 0xab60, 0x7f6c, 0x2b57, 0x84ec, 0x1, 0x1);
        gbc.writeMem(0x8bdb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xf680);
        EXPECT(gbc.pc(), 0x8bdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdb), 0xba);
        // BA 0193
        gbc.setState(0x6c3, 0x1a7a, 0x3ba0, 0x3fa0, 0xec03, 0x98d, 0x0, 0x0);
        gbc.writeMem(0x6c3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1a7a);
        EXPECT(gbc.pc(), 0x6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0194
        gbc.setState(0x27fe, 0x67dc, 0x7330, 0x152d, 0xc832, 0x9af6, 0x1, 0x1);
        gbc.writeMem(0x27fe, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x67dc);
        EXPECT(gbc.pc(), 0x27ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0195
        gbc.setState(0x5848, 0xefd5, 0xbc10, 0x2dad, 0xf5ee, 0x1c6a, 0x0, 0x1);
        gbc.writeMem(0x5848, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xefd5);
        EXPECT(gbc.pc(), 0x5849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0196
        gbc.setState(0x18a1, 0xd3ff, 0x1800, 0xdc5, 0x7190, 0xdf4f, 0x1, 0x1);
        gbc.writeMem(0x18a1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd3ff);
        EXPECT(gbc.pc(), 0x18a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0197
        gbc.setState(0x4b28, 0x910a, 0xea60, 0xce30, 0xf9d7, 0xb4fb, 0x0, 0x1);
        gbc.writeMem(0x4b28, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x910a);
        EXPECT(gbc.pc(), 0x4b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0198
        gbc.setState(0x734d, 0x672d, 0x2760, 0x1e9c, 0xb694, 0xd8cb, 0x1, 0x0);
        gbc.writeMem(0x734d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x672d);
        EXPECT(gbc.pc(), 0x734e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0199
        gbc.setState(0x653c, 0xb1d3, 0xdaf0, 0x147f, 0xa9f5, 0x9c5, 0x0, 0x0);
        gbc.writeMem(0x653c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb1d3);
        EXPECT(gbc.pc(), 0x653d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 019A
        gbc.setState(0xe902, 0xdef2, 0xff10, 0xd427, 0xc6f2, 0xd3dc, 0x1, 0x0);
        gbc.writeMem(0xe902, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdef2);
        EXPECT(gbc.pc(), 0xe903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe902), 0xba);
        // BA 019B
        gbc.setState(0xbc8d, 0xbab, 0x6850, 0x5a33, 0x7da6, 0x7b44, 0x1, 0x1);
        gbc.writeMem(0xbc8d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbab);
        EXPECT(gbc.pc(), 0xbc8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8d), 0xba);
        // BA 019C
        gbc.setState(0x693a, 0xa65c, 0x1f0, 0x4bb6, 0x8dda, 0x4844, 0x0, 0x1);
        gbc.writeMem(0x693a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa65c);
        EXPECT(gbc.pc(), 0x693b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 019D
        gbc.setState(0xa65c, 0xe9d1, 0x80c0, 0xa876, 0x4485, 0xba30, 0x1, 0x0);
        gbc.writeMem(0xa65c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe9d1);
        EXPECT(gbc.pc(), 0xa65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa65c), 0xba);
        // BA 019E
        gbc.setState(0xf89, 0x62af, 0x9aa0, 0xfd99, 0xbb86, 0xf4b0, 0x0, 0x1);
        gbc.writeMem(0xf89, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x62af);
        EXPECT(gbc.pc(), 0xf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 019F
        gbc.setState(0xc529, 0xbe3d, 0x3f50, 0xb995, 0x19c5, 0x6f, 0x0, 0x1);
        gbc.writeMem(0xc529, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbe3d);
        EXPECT(gbc.pc(), 0xc52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc529), 0xba);
        // BA 01A1
        gbc.setState(0x1f13, 0xf98c, 0xa270, 0xfabe, 0x852d, 0x76dc, 0x0, 0x1);
        gbc.writeMem(0x1f13, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf98c);
        EXPECT(gbc.pc(), 0x1f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01A2
        gbc.setState(0x817d, 0x20c8, 0x2f70, 0x1786, 0x2cad, 0x971d, 0x1, 0x0);
        gbc.writeMem(0x817d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x20c8);
        EXPECT(gbc.pc(), 0x817e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817d), 0xba);
        // BA 01A3
        gbc.setState(0xa677, 0xdbcc, 0xdf30, 0x419b, 0x18ec, 0x3b57, 0x0, 0x0);
        gbc.writeMem(0xa677, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdbcc);
        EXPECT(gbc.pc(), 0xa678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa677), 0xba);
        // BA 01A4
        gbc.setState(0x12cf, 0x968, 0x9380, 0x9d2a, 0x252d, 0xe7fb, 0x0, 0x0);
        gbc.writeMem(0x12cf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x968);
        EXPECT(gbc.pc(), 0x12d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01A5
        gbc.setState(0x86bd, 0x1d0b, 0xc310, 0x707f, 0xcb61, 0x7e07, 0x0, 0x0);
        gbc.writeMem(0x86bd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1d0b);
        EXPECT(gbc.pc(), 0x86be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86bd), 0xba);
        // BA 01A6
        gbc.setState(0x63ec, 0x6019, 0x3820, 0xac11, 0x421a, 0x7d03, 0x1, 0x1);
        gbc.writeMem(0x63ec, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6019);
        EXPECT(gbc.pc(), 0x63ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01A7
        gbc.setState(0xc8f3, 0x7a08, 0xaf20, 0xe1d5, 0x29c9, 0x68bd, 0x1, 0x1);
        gbc.writeMem(0xc8f3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7a08);
        EXPECT(gbc.pc(), 0xc8f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f3), 0xba);
        // BA 01A8
        gbc.setState(0x2c4e, 0x9598, 0x1f20, 0x942c, 0x2b3c, 0xb910, 0x1, 0x1);
        gbc.writeMem(0x2c4e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9598);
        EXPECT(gbc.pc(), 0x2c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01A9
        gbc.setState(0xaa4, 0xe68d, 0x7e40, 0xcb00, 0x76dd, 0xa704, 0x1, 0x1);
        gbc.writeMem(0xaa4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe68d);
        EXPECT(gbc.pc(), 0xaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01AA
        gbc.setState(0x38fb, 0xd5, 0xfbc0, 0x62f5, 0x4fa1, 0xcbb9, 0x0, 0x0);
        gbc.writeMem(0x38fb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0x38fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01AB
        gbc.setState(0x44ac, 0x4124, 0xf410, 0x7cae, 0xea8d, 0x2016, 0x0, 0x0);
        gbc.writeMem(0x44ac, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4124);
        EXPECT(gbc.pc(), 0x44ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01AC
        gbc.setState(0x271d, 0x6b80, 0xb1d0, 0xc264, 0x7a08, 0x92e6, 0x1, 0x0);
        gbc.writeMem(0x271d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6b80);
        EXPECT(gbc.pc(), 0x271e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01AD
        gbc.setState(0x8e48, 0xa6b0, 0xac20, 0xbbaa, 0x1986, 0x9fb8, 0x0, 0x0);
        gbc.writeMem(0x8e48, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa6b0);
        EXPECT(gbc.pc(), 0x8e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e48), 0xba);
        // BA 01B0
        gbc.setState(0x37ca, 0xeafa, 0x150, 0x16cf, 0x8114, 0x956d, 0x1, 0x1);
        gbc.writeMem(0x37ca, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xeafa);
        EXPECT(gbc.pc(), 0x37cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01B1
        gbc.setState(0x3ab6, 0x7be4, 0x1440, 0x81dd, 0x4e81, 0xb0b0, 0x1, 0x1);
        gbc.writeMem(0x3ab6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7be4);
        EXPECT(gbc.pc(), 0x3ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01B2
        gbc.setState(0x3db0, 0xd3a5, 0x7e80, 0x3241, 0x468b, 0x7b64, 0x0, 0x0);
        gbc.writeMem(0x3db0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd3a5);
        EXPECT(gbc.pc(), 0x3db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01B3
        gbc.setState(0xd874, 0x6073, 0xfa00, 0x53b6, 0xd6b3, 0xefbc, 0x1, 0x0);
        gbc.writeMem(0xd874, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6073);
        EXPECT(gbc.pc(), 0xd875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd874), 0xba);
        // BA 01B4
        gbc.setState(0x2c22, 0xb2c, 0xd3d0, 0x12fe, 0x6cc2, 0x6f20, 0x1, 0x1);
        gbc.writeMem(0x2c22, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb2c);
        EXPECT(gbc.pc(), 0x2c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01B5
        gbc.setState(0x3bfd, 0xcc3f, 0x8480, 0xce4c, 0xc246, 0xff92, 0x0, 0x1);
        gbc.writeMem(0x3bfd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcc3f);
        EXPECT(gbc.pc(), 0x3bfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01B6
        gbc.setState(0xa014, 0xa5c1, 0x2c0, 0xe8b7, 0x3708, 0x3e87, 0x1, 0x1);
        gbc.writeMem(0xa014, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa5c1);
        EXPECT(gbc.pc(), 0xa015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa014), 0xba);
        // BA 01B7
        gbc.setState(0xa121, 0x95f4, 0xc1c0, 0x2cef, 0x3e42, 0xda35, 0x1, 0x1);
        gbc.writeMem(0xa121, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x95f4);
        EXPECT(gbc.pc(), 0xa122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa121), 0xba);
        // BA 01B8
        gbc.setState(0x5d9d, 0xe9f2, 0xf0e0, 0xfd21, 0x76e3, 0xc449, 0x0, 0x0);
        gbc.writeMem(0x5d9d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe9f2);
        EXPECT(gbc.pc(), 0x5d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01B9
        gbc.setState(0x3705, 0x1ce4, 0x4050, 0xe287, 0xc39a, 0xcf6f, 0x0, 0x0);
        gbc.writeMem(0x3705, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1ce4);
        EXPECT(gbc.pc(), 0x3706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01BA
        gbc.setState(0xd4d0, 0x80a2, 0x9ce0, 0x2f0a, 0x900e, 0x38d, 0x1, 0x1);
        gbc.writeMem(0xd4d0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x80a2);
        EXPECT(gbc.pc(), 0xd4d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d0), 0xba);
        // BA 01BB
        gbc.setState(0x64f3, 0xd56e, 0xb6b0, 0xc748, 0x4b79, 0x5720, 0x1, 0x1);
        gbc.writeMem(0x64f3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd56e);
        EXPECT(gbc.pc(), 0x64f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01BC
        gbc.setState(0x3716, 0xa0ae, 0xf340, 0x3041, 0x4346, 0x7d21, 0x0, 0x0);
        gbc.writeMem(0x3716, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa0ae);
        EXPECT(gbc.pc(), 0x3717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01BD
        gbc.setState(0x2278, 0xef8e, 0x8e70, 0x33dc, 0x5fcb, 0xbbcc, 0x0, 0x0);
        gbc.writeMem(0x2278, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xef8e);
        EXPECT(gbc.pc(), 0x2279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01BE
        gbc.setState(0x5b20, 0xacdc, 0xd810, 0x4737, 0x6347, 0x4403, 0x0, 0x1);
        gbc.writeMem(0x5b20, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xacdc);
        EXPECT(gbc.pc(), 0x5b21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01BF
        gbc.setState(0xe82b, 0xa5e1, 0xf7d0, 0xc239, 0x4912, 0x5d6f, 0x1, 0x1);
        gbc.writeMem(0xe82b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa5e1);
        EXPECT(gbc.pc(), 0xe82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82b), 0xba);
        // BA 01C0
        gbc.setState(0x5e5b, 0x3ce6, 0x57d0, 0x80e, 0xb8f7, 0xc418, 0x1, 0x0);
        gbc.writeMem(0x5e5b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3ce6);
        EXPECT(gbc.pc(), 0x5e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01C1
        gbc.setState(0x5f2f, 0xd0d2, 0x47e0, 0x95de, 0x267b, 0x263c, 0x1, 0x0);
        gbc.writeMem(0x5f2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd0d2);
        EXPECT(gbc.pc(), 0x5f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01C2
        gbc.setState(0x1f43, 0x683a, 0x83f0, 0x2555, 0xd9ca, 0xb758, 0x1, 0x1);
        gbc.writeMem(0x1f43, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x683a);
        EXPECT(gbc.pc(), 0x1f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01C3
        gbc.setState(0x6d7b, 0x1418, 0xe0c0, 0xb477, 0xdb02, 0xcdc1, 0x0, 0x0);
        gbc.writeMem(0x6d7b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1418);
        EXPECT(gbc.pc(), 0x6d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01C4
        gbc.setState(0x2c50, 0xa6c3, 0xb250, 0x2d7f, 0xaa71, 0xe0ef, 0x1, 0x0);
        gbc.writeMem(0x2c50, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa6c3);
        EXPECT(gbc.pc(), 0x2c51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01C5
        gbc.setState(0xa53a, 0xe584, 0x3000, 0x54ce, 0x1d20, 0x6960, 0x0, 0x1);
        gbc.writeMem(0xa53a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe584);
        EXPECT(gbc.pc(), 0xa53b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53a), 0xba);
        // BA 01C6
        gbc.setState(0xeac4, 0xdaba, 0xf3b0, 0xfe51, 0x679d, 0xa823, 0x0, 0x1);
        gbc.writeMem(0xeac4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdaba);
        EXPECT(gbc.pc(), 0xeac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac4), 0xba);
        // BA 01C7
        gbc.setState(0x3535, 0xf0e1, 0x61b0, 0xb471, 0x72be, 0xaec1, 0x1, 0x0);
        gbc.writeMem(0x3535, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf0e1);
        EXPECT(gbc.pc(), 0x3536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01C8
        gbc.setState(0x12d7, 0xfe4, 0x4900, 0xcb96, 0x56cb, 0xd45, 0x1, 0x1);
        gbc.writeMem(0x12d7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfe4);
        EXPECT(gbc.pc(), 0x12d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01C9
        gbc.setState(0xec14, 0x50bb, 0x7a20, 0xf714, 0xf241, 0x4368, 0x0, 0x1);
        gbc.writeMem(0xec14, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x50bb);
        EXPECT(gbc.pc(), 0xec15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec14), 0xba);
        // BA 01CA
        gbc.setState(0x6112, 0xdab0, 0x9c0, 0xc7df, 0x6581, 0xa11e, 0x0, 0x1);
        gbc.writeMem(0x6112, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdab0);
        EXPECT(gbc.pc(), 0x6113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01CB
        gbc.setState(0x8f8c, 0xa8ec, 0xded0, 0x2f60, 0x6f28, 0x41ce, 0x1, 0x0);
        gbc.writeMem(0x8f8c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa8ec);
        EXPECT(gbc.pc(), 0x8f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f8c), 0xba);
        // BA 01CC
        gbc.setState(0x4c7b, 0x3c5f, 0xa10, 0xdc6, 0x25d, 0x4349, 0x1, 0x1);
        gbc.writeMem(0x4c7b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3c5f);
        EXPECT(gbc.pc(), 0x4c7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01CD
        gbc.setState(0x5098, 0x33d8, 0x32a0, 0x6732, 0xbfc8, 0xa35, 0x1, 0x1);
        gbc.writeMem(0x5098, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x33d8);
        EXPECT(gbc.pc(), 0x5099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01CE
        gbc.setState(0x9140, 0xacea, 0xe30, 0x27bd, 0x533e, 0x6098, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xacea);
        EXPECT(gbc.pc(), 0x9141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9140), 0xba);
        // BA 01CF
        gbc.setState(0xd2c2, 0xbc70, 0xa090, 0xc7d1, 0xdc0a, 0x60bb, 0x0, 0x1);
        gbc.writeMem(0xd2c2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbc70);
        EXPECT(gbc.pc(), 0xd2c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c2), 0xba);
        // BA 01D0
        gbc.setState(0xbd0b, 0xe386, 0x90a0, 0xa21f, 0xb0d2, 0xb941, 0x1, 0x0);
        gbc.writeMem(0xbd0b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe386);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0b), 0xba);
        // BA 01D1
        gbc.setState(0x4004, 0xe4f5, 0x3b60, 0x71eb, 0x8260, 0x2c55, 0x0, 0x0);
        gbc.writeMem(0x4004, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe4f5);
        EXPECT(gbc.pc(), 0x4005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01D2
        gbc.setState(0x342a, 0xc519, 0x1e20, 0xe738, 0x9fc, 0x72c0, 0x0, 0x1);
        gbc.writeMem(0x342a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x342b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01D3
        gbc.setState(0xa593, 0xf2f0, 0x18f0, 0x81ea, 0x44d, 0x90f4, 0x0, 0x0);
        gbc.writeMem(0xa593, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf2f0);
        EXPECT(gbc.pc(), 0xa594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa593), 0xba);
        // BA 01D4
        gbc.setState(0x98c6, 0x8284, 0x4800, 0xdcd8, 0x58d2, 0x6b6c, 0x0, 0x1);
        gbc.writeMem(0x98c6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8284);
        EXPECT(gbc.pc(), 0x98c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c6), 0xba);
        // BA 01D5
        gbc.setState(0x3667, 0x2796, 0xadc0, 0xce8c, 0xbe25, 0x5055, 0x0, 0x0);
        gbc.writeMem(0x3667, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2796);
        EXPECT(gbc.pc(), 0x3668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01D6
        gbc.setState(0x1e16, 0xffc7, 0x84c0, 0x2925, 0xde15, 0xd086, 0x1, 0x1);
        gbc.writeMem(0x1e16, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xffc7);
        EXPECT(gbc.pc(), 0x1e17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01D8
        gbc.setState(0xe606, 0xfed5, 0x5f0, 0xe204, 0x9c05, 0x1d83, 0x0, 0x0);
        gbc.writeMem(0xe606, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfed5);
        EXPECT(gbc.pc(), 0xe607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe606), 0xba);
        // BA 01D9
        gbc.setState(0xeba7, 0x9f4c, 0x7b10, 0xb5ea, 0x21f5, 0xdf01, 0x0, 0x1);
        gbc.writeMem(0xeba7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9f4c);
        EXPECT(gbc.pc(), 0xeba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba7), 0xba);
        // BA 01DA
        gbc.setState(0xb7ca, 0xa3f9, 0x12a0, 0x42d2, 0x271a, 0x29d6, 0x1, 0x0);
        gbc.writeMem(0xb7ca, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa3f9);
        EXPECT(gbc.pc(), 0xb7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ca), 0xba);
        // BA 01DB
        gbc.setState(0x12e1, 0x17f7, 0x3850, 0xac17, 0x268e, 0x5f09, 0x1, 0x0);
        gbc.writeMem(0x12e1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x12e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01DC
        gbc.setState(0x43f1, 0xb9e3, 0xeac0, 0x92e0, 0xcb74, 0xb6e1, 0x0, 0x0);
        gbc.writeMem(0x43f1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb9e3);
        EXPECT(gbc.pc(), 0x43f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01DD
        gbc.setState(0x96ea, 0x3d73, 0xe2c0, 0xd566, 0x1f48, 0x6c76, 0x1, 0x0);
        gbc.writeMem(0x96ea, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3d73);
        EXPECT(gbc.pc(), 0x96eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ea), 0xba);
        // BA 01DE
        gbc.setState(0xc7ca, 0x7ed7, 0xa540, 0x64c0, 0xa3c7, 0xc84, 0x1, 0x1);
        gbc.writeMem(0xc7ca, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7ed7);
        EXPECT(gbc.pc(), 0xc7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ca), 0xba);
        // BA 01DF
        gbc.setState(0xdd83, 0xd0c5, 0x3c40, 0xf7c7, 0x8ed3, 0x30a9, 0x0, 0x0);
        gbc.writeMem(0xdd83, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd0c5);
        EXPECT(gbc.pc(), 0xdd84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd83), 0xba);
        // BA 01E0
        gbc.setState(0xb4ab, 0x4c92, 0xd800, 0xf3ea, 0x288, 0x39a1, 0x0, 0x1);
        gbc.writeMem(0xb4ab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4c92);
        EXPECT(gbc.pc(), 0xb4ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4ab), 0xba);
        // BA 01E1
        gbc.setState(0x7a63, 0x65b0, 0x6c20, 0x891e, 0xd924, 0x4151, 0x0, 0x1);
        gbc.writeMem(0x7a63, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x65b0);
        EXPECT(gbc.pc(), 0x7a64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01E2
        gbc.setState(0x6bb2, 0xbb59, 0x8bd0, 0x6742, 0xda43, 0xded3, 0x0, 0x0);
        gbc.writeMem(0x6bb2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbb59);
        EXPECT(gbc.pc(), 0x6bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01E3
        gbc.setState(0x662e, 0x8bba, 0x1880, 0xbd04, 0x47cf, 0x224f, 0x0, 0x1);
        gbc.writeMem(0x662e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8bba);
        EXPECT(gbc.pc(), 0x662f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01E5
        gbc.setState(0x8003, 0x908d, 0xa870, 0x82b5, 0x5a46, 0x939b, 0x1, 0x1);
        gbc.writeMem(0x8003, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x908d);
        EXPECT(gbc.pc(), 0x8004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8003), 0xba);
        // BA 01E6
        gbc.setState(0xc77, 0xf06e, 0xcb50, 0x8d9b, 0x9f4d, 0x173f, 0x1, 0x0);
        gbc.writeMem(0xc77, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf06e);
        EXPECT(gbc.pc(), 0xc78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01E7
        gbc.setState(0xc4b7, 0xcbe1, 0xb890, 0xcb41, 0xf43f, 0x5be9, 0x0, 0x1);
        gbc.writeMem(0xc4b7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcbe1);
        EXPECT(gbc.pc(), 0xc4b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b7), 0xba);
        // BA 01E8
        gbc.setState(0xb16, 0xbea6, 0x6c90, 0x48de, 0x7e9f, 0xd70c, 0x1, 0x0);
        gbc.writeMem(0xb16, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xbea6);
        EXPECT(gbc.pc(), 0xb17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01E9
        gbc.setState(0x5187, 0x88e, 0xe90, 0x4266, 0xf0ed, 0x189f, 0x0, 0x0);
        gbc.writeMem(0x5187, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x88e);
        EXPECT(gbc.pc(), 0x5188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01EB
        gbc.setState(0xacc8, 0x5173, 0x49b0, 0xd788, 0xac77, 0xcba6, 0x1, 0x1);
        gbc.writeMem(0xacc8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5173);
        EXPECT(gbc.pc(), 0xacc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc8), 0xba);
        // BA 01EC
        gbc.setState(0xdddb, 0x7059, 0xb1d0, 0x8d3b, 0xd6e, 0x82f2, 0x1, 0x1);
        gbc.writeMem(0xdddb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7059);
        EXPECT(gbc.pc(), 0xdddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddb), 0xba);
        // BA 01ED
        gbc.setState(0x207f, 0x872d, 0x6ff0, 0x2806, 0x6a26, 0x5c53, 0x0, 0x1);
        gbc.writeMem(0x207f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x872d);
        EXPECT(gbc.pc(), 0x2080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 01EE
        gbc.setState(0x7ec7, 0xe924, 0x9c0, 0x93d8, 0x83b8, 0x175c, 0x0, 0x0);
        gbc.writeMem(0x7ec7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe924);
        EXPECT(gbc.pc(), 0x7ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01EF
        gbc.setState(0xe1da, 0x68a, 0xa520, 0x8403, 0x22be, 0xf775, 0x1, 0x0);
        gbc.writeMem(0xe1da, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x68a);
        EXPECT(gbc.pc(), 0xe1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1da), 0xba);
        // BA 01F0
        gbc.setState(0x75f9, 0x5caf, 0x2380, 0xe222, 0x2b37, 0x34c9, 0x1, 0x0);
        gbc.writeMem(0x75f9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5caf);
        EXPECT(gbc.pc(), 0x75fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01F1
        gbc.setState(0x1fda, 0x2b36, 0xa650, 0xfed4, 0xed8d, 0x2357, 0x0, 0x1);
        gbc.writeMem(0x1fda, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x2b36);
        EXPECT(gbc.pc(), 0x1fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 01F2
        gbc.setState(0x68b6, 0xb67d, 0xf830, 0x7a4a, 0x1c0d, 0x1f5a, 0x1, 0x0);
        gbc.writeMem(0x68b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb67d);
        EXPECT(gbc.pc(), 0x68b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01F3
        gbc.setState(0x5e62, 0xf70f, 0x7b20, 0x5282, 0x9194, 0xdd24, 0x0, 0x1);
        gbc.writeMem(0x5e62, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf70f);
        EXPECT(gbc.pc(), 0x5e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01F4
        gbc.setState(0xae70, 0x452c, 0xa310, 0x2ce0, 0x96e9, 0xc181, 0x1, 0x1);
        gbc.writeMem(0xae70, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x452c);
        EXPECT(gbc.pc(), 0xae71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae70), 0xba);
        // BA 01F5
        gbc.setState(0x8acf, 0xd504, 0x27a0, 0x40e6, 0x6122, 0x976e, 0x1, 0x0);
        gbc.writeMem(0x8acf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd504);
        EXPECT(gbc.pc(), 0x8ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8acf), 0xba);
        // BA 01F6
        gbc.setState(0xd9fe, 0x777, 0x9960, 0x73a7, 0xcc0f, 0x609b, 0x0, 0x0);
        gbc.writeMem(0xd9fe, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x777);
        EXPECT(gbc.pc(), 0xd9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fe), 0xba);
        // BA 01F7
        gbc.setState(0xa31, 0x59d, 0x2e00, 0x185e, 0x86c0, 0x9976, 0x1, 0x1);
        gbc.writeMem(0xa31, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x59d);
        EXPECT(gbc.pc(), 0xa32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01F8
        gbc.setState(0x43b4, 0xeefa, 0xc1b0, 0x4c66, 0xea6, 0x14a3, 0x1, 0x1);
        gbc.writeMem(0x43b4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xeefa);
        EXPECT(gbc.pc(), 0x43b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01F9
        gbc.setState(0x7694, 0xd761, 0x4ee0, 0x7f78, 0xd627, 0xf648, 0x0, 0x0);
        gbc.writeMem(0x7694, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd761);
        EXPECT(gbc.pc(), 0x7695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01FA
        gbc.setState(0x4607, 0x98a4, 0xd660, 0x1a3e, 0x8e93, 0x9a97, 0x1, 0x1);
        gbc.writeMem(0x4607, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x98a4);
        EXPECT(gbc.pc(), 0x4608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 01FB
        gbc.setState(0x8914, 0x1c0a, 0x8db0, 0x3d81, 0xe1e3, 0x459, 0x1, 0x0);
        gbc.writeMem(0x8914, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1c0a);
        EXPECT(gbc.pc(), 0x8915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8914), 0xba);
        // BA 01FC
        gbc.setState(0x29bc, 0x69c3, 0x5a30, 0x101, 0xb089, 0x9f3b, 0x0, 0x0);
        gbc.writeMem(0x29bc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x69c3);
        EXPECT(gbc.pc(), 0x29bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01FD
        gbc.setState(0x71b1, 0x320b, 0xcc40, 0xf908, 0xf8df, 0x7cca, 0x0, 0x0);
        gbc.writeMem(0x71b1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x320b);
        EXPECT(gbc.pc(), 0x71b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 01FE
        gbc.setState(0xc05c, 0xbae0, 0xf4b0, 0xf05d, 0xbbda, 0x8904, 0x1, 0x0);
        gbc.writeMem(0xc05c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbae0);
        EXPECT(gbc.pc(), 0xc05d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05c), 0xba);
        // BA 01FF
        gbc.setState(0xc26b, 0xf438, 0x5600, 0x4957, 0xb681, 0xe4be, 0x0, 0x1);
        gbc.writeMem(0xc26b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf438);
        EXPECT(gbc.pc(), 0xc26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc26b), 0xba);
        // BA 0200
        gbc.setState(0xdbca, 0x4782, 0x55c0, 0x490b, 0x19fd, 0x5c4f, 0x0, 0x1);
        gbc.writeMem(0xdbca, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4782);
        EXPECT(gbc.pc(), 0xdbcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbca), 0xba);
        // BA 0201
        gbc.setState(0x8ee0, 0x93ef, 0xcd70, 0x4004, 0x6d80, 0x410e, 0x1, 0x0);
        gbc.writeMem(0x8ee0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x93ef);
        EXPECT(gbc.pc(), 0x8ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee0), 0xba);
        // BA 0202
        gbc.setState(0x2b74, 0x7b8, 0x21e0, 0xb6c9, 0xdde2, 0xac51, 0x0, 0x0);
        gbc.writeMem(0x2b74, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7b8);
        EXPECT(gbc.pc(), 0x2b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0203
        gbc.setState(0x526b, 0xdbdd, 0xafd0, 0xc27c, 0x976f, 0xa8cd, 0x0, 0x1);
        gbc.writeMem(0x526b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdbdd);
        EXPECT(gbc.pc(), 0x526c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0204
        gbc.setState(0x5939, 0x9e8f, 0x69d0, 0x6889, 0x83d, 0x7c7a, 0x0, 0x1);
        gbc.writeMem(0x5939, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9e8f);
        EXPECT(gbc.pc(), 0x593a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0205
        gbc.setState(0x146, 0x3fcb, 0x4f60, 0xd56b, 0xfa46, 0xed4f, 0x1, 0x1);
        gbc.writeMem(0x146, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3fcb);
        EXPECT(gbc.pc(), 0x147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0206
        gbc.setState(0x738c, 0x2fb4, 0xe70, 0xc802, 0x32f2, 0x5b27, 0x0, 0x1);
        gbc.writeMem(0x738c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2fb4);
        EXPECT(gbc.pc(), 0x738d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0208
        gbc.setState(0x4e68, 0x1c09, 0x5400, 0xdc4c, 0x1d84, 0x6068, 0x1, 0x1);
        gbc.writeMem(0x4e68, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1c09);
        EXPECT(gbc.pc(), 0x4e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0209
        gbc.setState(0x5960, 0xe7ce, 0xe740, 0xc711, 0x7b70, 0xb391, 0x1, 0x1);
        gbc.writeMem(0x5960, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe7ce);
        EXPECT(gbc.pc(), 0x5961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 020A
        gbc.setState(0x3812, 0x9d4a, 0xe40, 0x8792, 0xe0ac, 0xfe46, 0x0, 0x0);
        gbc.writeMem(0x3812, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9d4a);
        EXPECT(gbc.pc(), 0x3813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 020B
        gbc.setState(0xe2, 0xc770, 0x4b50, 0x4bd0, 0xed42, 0x7405, 0x0, 0x1);
        gbc.writeMem(0xe2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc770);
        EXPECT(gbc.pc(), 0xe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 020C
        gbc.setState(0x62b2, 0x926e, 0x93e0, 0x9577, 0x438b, 0x7a54, 0x1, 0x1);
        gbc.writeMem(0x62b2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x926e);
        EXPECT(gbc.pc(), 0x62b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 020D
        gbc.setState(0xe17e, 0x4ae2, 0xc060, 0x5b03, 0xb752, 0xee33, 0x0, 0x1);
        gbc.writeMem(0xe17e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4ae2);
        EXPECT(gbc.pc(), 0xe17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe17e), 0xba);
        // BA 020E
        gbc.setState(0x69d7, 0xcfaa, 0xb740, 0xd44b, 0xe02c, 0x1e91, 0x1, 0x0);
        gbc.writeMem(0x69d7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcfaa);
        EXPECT(gbc.pc(), 0x69d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 020F
        gbc.setState(0x6530, 0x2d27, 0xb0e0, 0x96f, 0x1239, 0x4a3b, 0x1, 0x1);
        gbc.writeMem(0x6530, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2d27);
        EXPECT(gbc.pc(), 0x6531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0210
        gbc.setState(0xea81, 0xcc5e, 0x4f40, 0x220, 0xf63c, 0x9d52, 0x0, 0x0);
        gbc.writeMem(0xea81, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xcc5e);
        EXPECT(gbc.pc(), 0xea82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea81), 0xba);
        // BA 0211
        gbc.setState(0xcb1b, 0x6163, 0x81a0, 0x166a, 0x3620, 0x828e, 0x1, 0x1);
        gbc.writeMem(0xcb1b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6163);
        EXPECT(gbc.pc(), 0xcb1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1b), 0xba);
        // BA 0212
        gbc.setState(0x7a36, 0xaeac, 0xd310, 0x221a, 0x1898, 0xf4f6, 0x1, 0x1);
        gbc.writeMem(0x7a36, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xaeac);
        EXPECT(gbc.pc(), 0x7a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0214
        gbc.setState(0x9c12, 0x339d, 0x9420, 0x7fdb, 0x4d6, 0x5b73, 0x0, 0x0);
        gbc.writeMem(0x9c12, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x339d);
        EXPECT(gbc.pc(), 0x9c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c12), 0xba);
        // BA 0215
        gbc.setState(0xeea1, 0x3a34, 0xec70, 0x8cae, 0xe3f1, 0xfd63, 0x1, 0x1);
        gbc.writeMem(0xeea1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3a34);
        EXPECT(gbc.pc(), 0xeea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeea1), 0xba);
        // BA 0216
        gbc.setState(0x4810, 0x81b8, 0xfb80, 0x4feb, 0x1727, 0xaa41, 0x0, 0x1);
        gbc.writeMem(0x4810, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x81b8);
        EXPECT(gbc.pc(), 0x4811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0217
        gbc.setState(0xe523, 0x576e, 0x26b0, 0x260c, 0x55e2, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0xe523, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x576e);
        EXPECT(gbc.pc(), 0xe524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe523), 0xba);
        // BA 0218
        gbc.setState(0x4993, 0x4955, 0x88f0, 0x8eb5, 0x7369, 0xa019, 0x1, 0x1);
        gbc.writeMem(0x4993, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4955);
        EXPECT(gbc.pc(), 0x4994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0219
        gbc.setState(0x4424, 0x4c3a, 0xa4d0, 0x98ee, 0x4b5c, 0x3aca, 0x0, 0x0);
        gbc.writeMem(0x4424, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4c3a);
        EXPECT(gbc.pc(), 0x4425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 021A
        gbc.setState(0xdd2f, 0x9da0, 0xcf60, 0xf614, 0x5205, 0xc405, 0x0, 0x1);
        gbc.writeMem(0xdd2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9da0);
        EXPECT(gbc.pc(), 0xdd30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd2f), 0xba);
        // BA 021C
        gbc.setState(0x94fa, 0x5f57, 0x6ca0, 0x5af4, 0x637e, 0x3c6c, 0x0, 0x0);
        gbc.writeMem(0x94fa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5f57);
        EXPECT(gbc.pc(), 0x94fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fa), 0xba);
        // BA 021D
        gbc.setState(0x1cea, 0x2656, 0xdcd0, 0xf2a, 0xd11e, 0x6328, 0x1, 0x0);
        gbc.writeMem(0x1cea, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2656);
        EXPECT(gbc.pc(), 0x1ceb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 021E
        gbc.setState(0xbd38, 0xb50d, 0x6ef0, 0x650, 0x42ab, 0x1264, 0x0, 0x0);
        gbc.writeMem(0xbd38, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb50d);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd38), 0xba);
        // BA 021F
        gbc.setState(0x754a, 0x1968, 0x3210, 0xef44, 0x241b, 0xf5cf, 0x1, 0x1);
        gbc.writeMem(0x754a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1968);
        EXPECT(gbc.pc(), 0x754b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0220
        gbc.setState(0x57d, 0xfe69, 0x8bf0, 0xabed, 0x71b1, 0xcb65, 0x1, 0x0);
        gbc.writeMem(0x57d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xfe69);
        EXPECT(gbc.pc(), 0x57e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0221
        gbc.setState(0x4919, 0x57c4, 0xf2f0, 0x2209, 0xd144, 0x35d6, 0x1, 0x0);
        gbc.writeMem(0x4919, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x57c4);
        EXPECT(gbc.pc(), 0x491a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0222
        gbc.setState(0x6800, 0xa048, 0xa960, 0x5be7, 0xd7b, 0x8078, 0x1, 0x1);
        gbc.writeMem(0x6800, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa048);
        EXPECT(gbc.pc(), 0x6801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0223
        gbc.setState(0x30e5, 0xaaf3, 0x4cd0, 0x263, 0xa3f, 0x6276, 0x0, 0x1);
        gbc.writeMem(0x30e5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xaaf3);
        EXPECT(gbc.pc(), 0x30e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0224
        gbc.setState(0xeb7e, 0x2a0f, 0xbd60, 0x32b2, 0x6e80, 0xfd43, 0x1, 0x0);
        gbc.writeMem(0xeb7e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2a0f);
        EXPECT(gbc.pc(), 0xeb7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb7e), 0xba);
        // BA 0225
        gbc.setState(0x37d6, 0x8be8, 0x89c0, 0xd7b5, 0xfad0, 0x1b9a, 0x0, 0x0);
        gbc.writeMem(0x37d6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8be8);
        EXPECT(gbc.pc(), 0x37d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0226
        gbc.setState(0x1084, 0xb4cf, 0x5ed0, 0x8975, 0xcfdc, 0x1d5b, 0x0, 0x0);
        gbc.writeMem(0x1084, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb4cf);
        EXPECT(gbc.pc(), 0x1085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0227
        gbc.setState(0x6f2f, 0xff12, 0xa990, 0xa252, 0xa53b, 0x88f3, 0x0, 0x0);
        gbc.writeMem(0x6f2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xff12);
        EXPECT(gbc.pc(), 0x6f30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0228
        gbc.setState(0x3827, 0x8f78, 0x85e0, 0x323a, 0x799a, 0x954d, 0x0, 0x0);
        gbc.writeMem(0x3827, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8f78);
        EXPECT(gbc.pc(), 0x3828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0229
        gbc.setState(0x32dd, 0x5c21, 0xce80, 0x4a06, 0xcd10, 0xaa6f, 0x0, 0x1);
        gbc.writeMem(0x32dd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5c21);
        EXPECT(gbc.pc(), 0x32de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 022A
        gbc.setState(0xc7d6, 0x43b4, 0xbd60, 0x7ec2, 0x6d7f, 0x71ea, 0x1, 0x0);
        gbc.writeMem(0xc7d6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x43b4);
        EXPECT(gbc.pc(), 0xc7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d6), 0xba);
        // BA 022C
        gbc.setState(0x161, 0x4cea, 0x3a30, 0x810a, 0x5eaa, 0x14a5, 0x1, 0x1);
        gbc.writeMem(0x161, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4cea);
        EXPECT(gbc.pc(), 0x162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 022D
        gbc.setState(0x8bc5, 0x3ff8, 0xd4c0, 0x6d4d, 0xe4e7, 0xf7d1, 0x1, 0x1);
        gbc.writeMem(0x8bc5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3ff8);
        EXPECT(gbc.pc(), 0x8bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bc5), 0xba);
        // BA 022E
        gbc.setState(0xb83a, 0x824f, 0x4690, 0x98cf, 0x3b94, 0xd64d, 0x0, 0x1);
        gbc.writeMem(0xb83a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x824f);
        EXPECT(gbc.pc(), 0xb83b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb83a), 0xba);
        // BA 022F
        gbc.setState(0xce27, 0x5ae5, 0x4ad0, 0x8f5f, 0x7009, 0xb8c5, 0x1, 0x1);
        gbc.writeMem(0xce27, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5ae5);
        EXPECT(gbc.pc(), 0xce28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce27), 0xba);
        // BA 0230
        gbc.setState(0x9e41, 0x6700, 0xd650, 0x3550, 0x6dfb, 0x6f0f, 0x1, 0x1);
        gbc.writeMem(0x9e41, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6700);
        EXPECT(gbc.pc(), 0x9e42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e41), 0xba);
        // BA 0231
        gbc.setState(0x2801, 0x2e1b, 0x7030, 0xa710, 0x637e, 0x73a2, 0x0, 0x1);
        gbc.writeMem(0x2801, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2e1b);
        EXPECT(gbc.pc(), 0x2802);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0232
        gbc.setState(0x970b, 0x35a0, 0xddd0, 0x8f27, 0xfaed, 0x4b54, 0x0, 0x1);
        gbc.writeMem(0x970b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x35a0);
        EXPECT(gbc.pc(), 0x970c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970b), 0xba);
        // BA 0233
        gbc.setState(0x8d38, 0xde64, 0x4930, 0x5942, 0x35d4, 0xcc89, 0x1, 0x0);
        gbc.writeMem(0x8d38, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xde64);
        EXPECT(gbc.pc(), 0x8d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d38), 0xba);
        // BA 0235
        gbc.setState(0x446a, 0x71ce, 0xc800, 0xc69f, 0xad0f, 0x8309, 0x0, 0x0);
        gbc.writeMem(0x446a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x71ce);
        EXPECT(gbc.pc(), 0x446b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0236
        gbc.setState(0xb8d2, 0x8bed, 0x8f20, 0x6e1e, 0xea0c, 0x3d7, 0x0, 0x0);
        gbc.writeMem(0xb8d2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8bed);
        EXPECT(gbc.pc(), 0xb8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d2), 0xba);
        // BA 0237
        gbc.setState(0xd6d8, 0x21d5, 0x3360, 0xfd16, 0xca1e, 0x4acc, 0x0, 0x0);
        gbc.writeMem(0xd6d8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x21d5);
        EXPECT(gbc.pc(), 0xd6d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d8), 0xba);
        // BA 0238
        gbc.setState(0x60d3, 0xcc0, 0x41a0, 0xe2c9, 0xa76e, 0x6c01, 0x1, 0x1);
        gbc.writeMem(0x60d3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xcc0);
        EXPECT(gbc.pc(), 0x60d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0239
        gbc.setState(0x9048, 0x6ef0, 0x88c0, 0x6fb0, 0x9e21, 0xfd83, 0x0, 0x0);
        gbc.writeMem(0x9048, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6ef0);
        EXPECT(gbc.pc(), 0x9049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9048), 0xba);
        // BA 023A
        gbc.setState(0x9553, 0x2e12, 0x2180, 0x1682, 0x7fa5, 0xc182, 0x0, 0x1);
        gbc.writeMem(0x9553, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2e12);
        EXPECT(gbc.pc(), 0x9554);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9553), 0xba);
        // BA 023B
        gbc.setState(0x8823, 0x9b0c, 0x59f0, 0xa36e, 0x78b6, 0xfcbe, 0x1, 0x0);
        gbc.writeMem(0x8823, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9b0c);
        EXPECT(gbc.pc(), 0x8824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8823), 0xba);
        // BA 023C
        gbc.setState(0xe611, 0x510c, 0xfcd0, 0x6779, 0xdc7d, 0xb97d, 0x1, 0x1);
        gbc.writeMem(0xe611, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x510c);
        EXPECT(gbc.pc(), 0xe612);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe611), 0xba);
        // BA 023D
        gbc.setState(0x377c, 0xe6eb, 0x1f00, 0x8b62, 0x64c5, 0x192a, 0x0, 0x0);
        gbc.writeMem(0x377c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe6eb);
        EXPECT(gbc.pc(), 0x377d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 023E
        gbc.setState(0xb89b, 0x672b, 0x42a0, 0xb6b2, 0x7d57, 0xc406, 0x1, 0x1);
        gbc.writeMem(0xb89b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x672b);
        EXPECT(gbc.pc(), 0xb89c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb89b), 0xba);
        // BA 023F
        gbc.setState(0x9891, 0x660f, 0xcd70, 0xd373, 0x9eb8, 0x8a1a, 0x1, 0x0);
        gbc.writeMem(0x9891, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x660f);
        EXPECT(gbc.pc(), 0x9892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9891), 0xba);
        // BA 0240
        gbc.setState(0xad7c, 0x21ef, 0xb630, 0x650b, 0xaf65, 0x66a1, 0x1, 0x0);
        gbc.writeMem(0xad7c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x21ef);
        EXPECT(gbc.pc(), 0xad7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7c), 0xba);
        // BA 0241
        gbc.setState(0xb44b, 0xe940, 0x3270, 0xe929, 0x18c6, 0xdcd5, 0x0, 0x0);
        gbc.writeMem(0xb44b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe940);
        EXPECT(gbc.pc(), 0xb44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb44b), 0xba);
        // BA 0242
        gbc.setState(0xa560, 0x9456, 0x6110, 0xc195, 0x4ffd, 0x54c0, 0x0, 0x1);
        gbc.writeMem(0xa560, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9456);
        EXPECT(gbc.pc(), 0xa561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa560), 0xba);
        // BA 0243
        gbc.setState(0xd3a1, 0xdceb, 0xb2b0, 0xafdb, 0x650, 0x136d, 0x1, 0x1);
        gbc.writeMem(0xd3a1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdceb);
        EXPECT(gbc.pc(), 0xd3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a1), 0xba);
        // BA 0244
        gbc.setState(0x34e5, 0xa172, 0xaa70, 0x2dc9, 0xe097, 0x837a, 0x1, 0x0);
        gbc.writeMem(0x34e5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa172);
        EXPECT(gbc.pc(), 0x34e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0245
        gbc.setState(0x9c1e, 0x2d85, 0xf4b0, 0xca6f, 0xf3d7, 0xf4d8, 0x1, 0x0);
        gbc.writeMem(0x9c1e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2d85);
        EXPECT(gbc.pc(), 0x9c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c1e), 0xba);
        // BA 0246
        gbc.setState(0xe4a9, 0x938d, 0x86c0, 0xdc47, 0x3d44, 0xf47d, 0x0, 0x1);
        gbc.writeMem(0xe4a9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x938d);
        EXPECT(gbc.pc(), 0xe4aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4a9), 0xba);
        // BA 0247
        gbc.setState(0x87e9, 0x472e, 0xc9c0, 0x5fd6, 0xf9eb, 0x49da, 0x0, 0x1);
        gbc.writeMem(0x87e9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x472e);
        EXPECT(gbc.pc(), 0x87ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e9), 0xba);
        // BA 0248
        gbc.setState(0x290d, 0x8080, 0x57d0, 0xffc6, 0x9ddc, 0xd1e9, 0x1, 0x1);
        gbc.writeMem(0x290d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8080);
        EXPECT(gbc.pc(), 0x290e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0249
        gbc.setState(0x6ad4, 0xc652, 0x6cf0, 0xd567, 0x7a0f, 0x13ac, 0x0, 0x1);
        gbc.writeMem(0x6ad4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc652);
        EXPECT(gbc.pc(), 0x6ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 024A
        gbc.setState(0x57ac, 0xd203, 0xf730, 0x51ed, 0x6186, 0xa178, 0x1, 0x0);
        gbc.writeMem(0x57ac, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd203);
        EXPECT(gbc.pc(), 0x57ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 024B
        gbc.setState(0x1f27, 0xf5a0, 0xe5d0, 0xb51, 0x4a86, 0x910b, 0x0, 0x0);
        gbc.writeMem(0x1f27, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf5a0);
        EXPECT(gbc.pc(), 0x1f28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 024C
        gbc.setState(0x42dc, 0x9bec, 0x39a0, 0x36c, 0x696b, 0xb758, 0x0, 0x1);
        gbc.writeMem(0x42dc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9bec);
        EXPECT(gbc.pc(), 0x42dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 024D
        gbc.setState(0x1ca1, 0xd683, 0xc250, 0x9c3b, 0xe1d0, 0x2280, 0x1, 0x0);
        gbc.writeMem(0x1ca1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd683);
        EXPECT(gbc.pc(), 0x1ca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 024E
        gbc.setState(0xc2c9, 0xac72, 0xd580, 0xd7fa, 0xbd3d, 0xa91b, 0x1, 0x0);
        gbc.writeMem(0xc2c9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xac72);
        EXPECT(gbc.pc(), 0xc2ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c9), 0xba);
        // BA 024F
        gbc.setState(0x3270, 0xc516, 0x5f10, 0x4c7, 0x6187, 0x835d, 0x1, 0x1);
        gbc.writeMem(0x3270, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc516);
        EXPECT(gbc.pc(), 0x3271);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0250
        gbc.setState(0x2c7, 0x9009, 0x7e20, 0xab9d, 0x600e, 0xec1d, 0x0, 0x0);
        gbc.writeMem(0x2c7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9009);
        EXPECT(gbc.pc(), 0x2c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0251
        gbc.setState(0xe043, 0x936f, 0x2d50, 0x2d63, 0x5c58, 0x7b52, 0x1, 0x0);
        gbc.writeMem(0xe043, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x936f);
        EXPECT(gbc.pc(), 0xe044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe043), 0xba);
        // BA 0252
        gbc.setState(0x4dae, 0xd7bf, 0x390, 0xd8aa, 0x6556, 0x80a5, 0x0, 0x1);
        gbc.writeMem(0x4dae, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd7bf);
        EXPECT(gbc.pc(), 0x4daf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0253
        gbc.setState(0xba74, 0x6c4b, 0x4e50, 0x5b7e, 0x4588, 0xc3f7, 0x0, 0x0);
        gbc.writeMem(0xba74, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6c4b);
        EXPECT(gbc.pc(), 0xba75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba74), 0xba);
        // BA 0254
        gbc.setState(0x623e, 0x5ecb, 0xb700, 0x537f, 0xdbb1, 0x6781, 0x0, 0x0);
        gbc.writeMem(0x623e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5ecb);
        EXPECT(gbc.pc(), 0x623f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0255
        gbc.setState(0xda9, 0x7d29, 0xb240, 0x5f8d, 0xa19, 0xb15e, 0x0, 0x1);
        gbc.writeMem(0xda9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7d29);
        EXPECT(gbc.pc(), 0xdaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0256
        gbc.setState(0x6d41, 0x8c72, 0x5d30, 0xec5e, 0xecc, 0xa59d, 0x0, 0x0);
        gbc.writeMem(0x6d41, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8c72);
        EXPECT(gbc.pc(), 0x6d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0257
        gbc.setState(0x52ac, 0x74e0, 0x55a0, 0x5289, 0xa23f, 0x9094, 0x1, 0x1);
        gbc.writeMem(0x52ac, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x74e0);
        EXPECT(gbc.pc(), 0x52ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0258
        gbc.setState(0xde81, 0x7900, 0x8100, 0x3921, 0xd636, 0xa1c7, 0x0, 0x0);
        gbc.writeMem(0xde81, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7900);
        EXPECT(gbc.pc(), 0xde82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde81), 0xba);
        // BA 025A
        gbc.setState(0x58c6, 0x4c48, 0x6ce0, 0x7251, 0x9cc6, 0x9f74, 0x1, 0x0);
        gbc.writeMem(0x58c6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4c48);
        EXPECT(gbc.pc(), 0x58c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 025B
        gbc.setState(0x647d, 0xc385, 0xe440, 0x4eba, 0xb72, 0x241a, 0x1, 0x1);
        gbc.writeMem(0x647d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc385);
        EXPECT(gbc.pc(), 0x647e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 025C
        gbc.setState(0x7482, 0x5ac8, 0x8710, 0x2ff, 0x3f7f, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0x7482, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5ac8);
        EXPECT(gbc.pc(), 0x7483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 025D
        gbc.setState(0xe0bb, 0x629c, 0x6790, 0xbbc9, 0x7746, 0xac3a, 0x0, 0x1);
        gbc.writeMem(0xe0bb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x629c);
        EXPECT(gbc.pc(), 0xe0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0bb), 0xba);
        // BA 025E
        gbc.setState(0x42f6, 0x7708, 0x5a00, 0x1e16, 0x34ef, 0x22ba, 0x0, 0x0);
        gbc.writeMem(0x42f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7708);
        EXPECT(gbc.pc(), 0x42f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 025F
        gbc.setState(0xd179, 0x2f54, 0xcbd0, 0x7647, 0x51, 0x6648, 0x0, 0x1);
        gbc.writeMem(0xd179, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2f54);
        EXPECT(gbc.pc(), 0xd17a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd179), 0xba);
        // BA 0260
        gbc.setState(0x1172, 0xab87, 0xaba0, 0x4277, 0xd510, 0xf0dd, 0x1, 0x1);
        gbc.writeMem(0x1172, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xab87);
        EXPECT(gbc.pc(), 0x1173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0262
        gbc.setState(0xda5a, 0x388c, 0x38a0, 0x6dff, 0x32c5, 0x627c, 0x1, 0x0);
        gbc.writeMem(0xda5a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x388c);
        EXPECT(gbc.pc(), 0xda5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5a), 0xba);
        // BA 0263
        gbc.setState(0x7d0f, 0xe1bf, 0x1ee0, 0x4501, 0x9ae, 0xf1, 0x1, 0x1);
        gbc.writeMem(0x7d0f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe1bf);
        EXPECT(gbc.pc(), 0x7d10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0264
        gbc.setState(0x59b1, 0x5e7a, 0xa320, 0xbe1b, 0x6498, 0xd9ee, 0x0, 0x1);
        gbc.writeMem(0x59b1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5e7a);
        EXPECT(gbc.pc(), 0x59b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0265
        gbc.setState(0xad, 0x2a03, 0x4a20, 0x397a, 0x8bbc, 0xa674, 0x0, 0x1);
        gbc.writeMem(0xad, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2a03);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0266
        gbc.setState(0xabfa, 0xc78, 0x7b70, 0xc95d, 0xd8e, 0xce10, 0x1, 0x0);
        gbc.writeMem(0xabfa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc78);
        EXPECT(gbc.pc(), 0xabfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabfa), 0xba);
        // BA 0267
        gbc.setState(0x61b6, 0xea4b, 0xfc80, 0xbc4a, 0x22b, 0x62cc, 0x0, 0x1);
        gbc.writeMem(0x61b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xea4b);
        EXPECT(gbc.pc(), 0x61b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0268
        gbc.setState(0x4ed5, 0x3414, 0x9cb0, 0x6126, 0x9d23, 0xaf76, 0x1, 0x0);
        gbc.writeMem(0x4ed5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3414);
        EXPECT(gbc.pc(), 0x4ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0269
        gbc.setState(0x6483, 0xc374, 0x1f80, 0xd144, 0x27cc, 0xe6e, 0x1, 0x1);
        gbc.writeMem(0x6483, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0x6484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 026A
        gbc.setState(0x49d4, 0x287c, 0xe7c0, 0x342a, 0x4233, 0xbe65, 0x0, 0x0);
        gbc.writeMem(0x49d4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x287c);
        EXPECT(gbc.pc(), 0x49d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 026B
        gbc.setState(0x6f08, 0x8be, 0xbc60, 0xb246, 0x3d25, 0x942b, 0x0, 0x0);
        gbc.writeMem(0x6f08, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8be);
        EXPECT(gbc.pc(), 0x6f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 026C
        gbc.setState(0x52c7, 0xa153, 0xe300, 0x261b, 0x57a5, 0xf925, 0x1, 0x0);
        gbc.writeMem(0x52c7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa153);
        EXPECT(gbc.pc(), 0x52c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 026D
        gbc.setState(0x4c55, 0xf494, 0xc20, 0xec27, 0xfefb, 0x9bb7, 0x1, 0x1);
        gbc.writeMem(0x4c55, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf494);
        EXPECT(gbc.pc(), 0x4c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 026E
        gbc.setState(0x9699, 0xf8e7, 0x99b0, 0x1506, 0xf0bc, 0x1ba1, 0x1, 0x0);
        gbc.writeMem(0x9699, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf8e7);
        EXPECT(gbc.pc(), 0x969a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9699), 0xba);
        // BA 026F
        gbc.setState(0xb898, 0x1e0b, 0x9de0, 0x8b7d, 0x247b, 0xbb4b, 0x1, 0x0);
        gbc.writeMem(0xb898, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1e0b);
        EXPECT(gbc.pc(), 0xb899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb898), 0xba);
        // BA 0270
        gbc.setState(0x8dab, 0x2eeb, 0xf90, 0xe69f, 0x1d95, 0x89b2, 0x1, 0x1);
        gbc.writeMem(0x8dab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2eeb);
        EXPECT(gbc.pc(), 0x8dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dab), 0xba);
        // BA 0271
        gbc.setState(0x681b, 0xba59, 0x2030, 0x20, 0x312a, 0x5a4b, 0x1, 0x1);
        gbc.writeMem(0x681b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xba59);
        EXPECT(gbc.pc(), 0x681c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0272
        gbc.setState(0xce0a, 0x13d7, 0xf9d0, 0x2eb5, 0xd9ea, 0x770, 0x1, 0x1);
        gbc.writeMem(0xce0a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x13d7);
        EXPECT(gbc.pc(), 0xce0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce0a), 0xba);
        // BA 0273
        gbc.setState(0x1cb4, 0xc31a, 0x1e20, 0x8875, 0xa10f, 0x280c, 0x0, 0x0);
        gbc.writeMem(0x1cb4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc31a);
        EXPECT(gbc.pc(), 0x1cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0274
        gbc.setState(0x3b41, 0xa992, 0x4e30, 0xf4f8, 0xefdd, 0x7715, 0x0, 0x0);
        gbc.writeMem(0x3b41, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa992);
        EXPECT(gbc.pc(), 0x3b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0275
        gbc.setState(0xca2f, 0x7aa2, 0x5080, 0x70ce, 0x3b3e, 0xd14c, 0x0, 0x0);
        gbc.writeMem(0xca2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x7aa2);
        EXPECT(gbc.pc(), 0xca30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2f), 0xba);
        // BA 0276
        gbc.setState(0x5e1e, 0x4a9e, 0x6f80, 0xf89a, 0xb9d2, 0x9e97, 0x1, 0x1);
        gbc.writeMem(0x5e1e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4a9e);
        EXPECT(gbc.pc(), 0x5e1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0277
        gbc.setState(0xafbe, 0x7222, 0xfa00, 0x64be, 0xf62a, 0xb110, 0x1, 0x0);
        gbc.writeMem(0xafbe, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7222);
        EXPECT(gbc.pc(), 0xafbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbe), 0xba);
        // BA 0278
        gbc.setState(0xadd, 0x343f, 0xe930, 0x700b, 0x43e, 0x560, 0x1, 0x0);
        gbc.writeMem(0xadd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x343f);
        EXPECT(gbc.pc(), 0xade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0279
        gbc.setState(0x8162, 0x7ac5, 0x1f30, 0x3ee0, 0x7009, 0x5e21, 0x0, 0x1);
        gbc.writeMem(0x8162, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7ac5);
        EXPECT(gbc.pc(), 0x8163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8162), 0xba);
        // BA 027A
        gbc.setState(0x6d2c, 0x60ae, 0x3ee0, 0xc618, 0x64b7, 0xf66b, 0x1, 0x1);
        gbc.writeMem(0x6d2c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x60ae);
        EXPECT(gbc.pc(), 0x6d2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 027B
        gbc.setState(0x518f, 0x726e, 0xc6e0, 0xfeef, 0x3f45, 0x8a6b, 0x0, 0x1);
        gbc.writeMem(0x518f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x726e);
        EXPECT(gbc.pc(), 0x5190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 027C
        gbc.setState(0xe087, 0x3bfe, 0x9690, 0xff9f, 0x807d, 0xd766, 0x1, 0x1);
        gbc.writeMem(0xe087, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3bfe);
        EXPECT(gbc.pc(), 0xe088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe087), 0xba);
        // BA 027D
        gbc.setState(0x2062, 0x6e37, 0x1b10, 0x1870, 0xb919, 0xe111, 0x0, 0x0);
        gbc.writeMem(0x2062, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6e37);
        EXPECT(gbc.pc(), 0x2063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 027E
        gbc.setState(0xc2fb, 0xa2d, 0x76c0, 0xe613, 0xe045, 0xe0e3, 0x1, 0x0);
        gbc.writeMem(0xc2fb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa2d);
        EXPECT(gbc.pc(), 0xc2fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fb), 0xba);
        // BA 027F
        gbc.setState(0x4e1a, 0x9964, 0xd1f0, 0xd90b, 0xa3a5, 0xdea6, 0x0, 0x1);
        gbc.writeMem(0x4e1a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9964);
        EXPECT(gbc.pc(), 0x4e1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0280
        gbc.setState(0xc4b8, 0xd6f1, 0x3c40, 0xd9fa, 0xabaf, 0x22a9, 0x1, 0x1);
        gbc.writeMem(0xc4b8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd6f1);
        EXPECT(gbc.pc(), 0xc4b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b8), 0xba);
        // BA 0281
        gbc.setState(0xb285, 0x874e, 0x59f0, 0x2231, 0xd2d4, 0xa853, 0x0, 0x1);
        gbc.writeMem(0xb285, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x874e);
        EXPECT(gbc.pc(), 0xb286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb285), 0xba);
        // BA 0282
        gbc.setState(0xeb53, 0x2b25, 0x7f30, 0x8e30, 0x1be2, 0xbb19, 0x1, 0x1);
        gbc.writeMem(0xeb53, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2b25);
        EXPECT(gbc.pc(), 0xeb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb53), 0xba);
        // BA 0283
        gbc.setState(0xdf56, 0xf39, 0x7ea0, 0x8d60, 0xfb8e, 0x93fb, 0x1, 0x0);
        gbc.writeMem(0xdf56, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf39);
        EXPECT(gbc.pc(), 0xdf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf56), 0xba);
        // BA 0284
        gbc.setState(0x6e4, 0x2e70, 0x1620, 0xc40f, 0x76b, 0xb321, 0x1, 0x0);
        gbc.writeMem(0x6e4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2e70);
        EXPECT(gbc.pc(), 0x6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0285
        gbc.setState(0x6445, 0x29b6, 0xc9c0, 0x83a7, 0x55db, 0xf010, 0x1, 0x1);
        gbc.writeMem(0x6445, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x29b6);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0286
        gbc.setState(0x912e, 0xa3e, 0x45f0, 0xf6a1, 0x5851, 0xb954, 0x1, 0x1);
        gbc.writeMem(0x912e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa3e);
        EXPECT(gbc.pc(), 0x912f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912e), 0xba);
        // BA 0287
        gbc.setState(0x82b5, 0x2503, 0x4820, 0x9d07, 0x2323, 0xcb93, 0x0, 0x0);
        gbc.writeMem(0x82b5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2503);
        EXPECT(gbc.pc(), 0x82b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b5), 0xba);
        // BA 0288
        gbc.setState(0xb5d6, 0xbb7a, 0xe900, 0x616b, 0x1901, 0x76a6, 0x0, 0x0);
        gbc.writeMem(0xb5d6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbb7a);
        EXPECT(gbc.pc(), 0xb5d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5d6), 0xba);
        // BA 0289
        gbc.setState(0x581b, 0x6e4e, 0x15c0, 0x2795, 0xbb99, 0xa8c0, 0x0, 0x1);
        gbc.writeMem(0x581b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6e4e);
        EXPECT(gbc.pc(), 0x581c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 028A
        gbc.setState(0x72ed, 0x34e2, 0xaa60, 0xd806, 0xb21f, 0x452d, 0x0, 0x1);
        gbc.writeMem(0x72ed, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x34e2);
        EXPECT(gbc.pc(), 0x72ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 028B
        gbc.setState(0xc65e, 0x8fd2, 0x2880, 0xeb18, 0x87c7, 0x88bf, 0x1, 0x1);
        gbc.writeMem(0xc65e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8fd2);
        EXPECT(gbc.pc(), 0xc65f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc65e), 0xba);
        // BA 028E
        gbc.setState(0x4d99, 0x731d, 0xa4d0, 0x797f, 0xcc1, 0x8beb, 0x0, 0x1);
        gbc.writeMem(0x4d99, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x731d);
        EXPECT(gbc.pc(), 0x4d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 028F
        gbc.setState(0x8b9f, 0xaef0, 0xfcd0, 0xffee, 0x6ec7, 0xef36, 0x0, 0x1);
        gbc.writeMem(0x8b9f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xaef0);
        EXPECT(gbc.pc(), 0x8ba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9f), 0xba);
        // BA 0290
        gbc.setState(0x73ac, 0xd5ee, 0x37b0, 0xc273, 0xac6c, 0x305f, 0x0, 0x0);
        gbc.writeMem(0x73ac, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd5ee);
        EXPECT(gbc.pc(), 0x73ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0291
        gbc.setState(0x73ab, 0x3cb5, 0x3de0, 0xffb6, 0x9747, 0x9046, 0x0, 0x1);
        gbc.writeMem(0x73ab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3cb5);
        EXPECT(gbc.pc(), 0x73ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0292
        gbc.setState(0x8586, 0xb092, 0x44e0, 0x531a, 0x762f, 0x1d38, 0x1, 0x1);
        gbc.writeMem(0x8586, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb092);
        EXPECT(gbc.pc(), 0x8587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8586), 0xba);
        // BA 0294
        gbc.setState(0xce66, 0x947f, 0xba80, 0x2d9b, 0xeab0, 0xf255, 0x0, 0x0);
        gbc.writeMem(0xce66, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x947f);
        EXPECT(gbc.pc(), 0xce67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce66), 0xba);
        // BA 0296
        gbc.setState(0x448d, 0x15e2, 0x6150, 0xa07d, 0xe6fb, 0x4f96, 0x0, 0x1);
        gbc.writeMem(0x448d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x15e2);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0298
        gbc.setState(0x652a, 0x4c9c, 0xe300, 0x5025, 0x5e49, 0xe040, 0x0, 0x0);
        gbc.writeMem(0x652a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4c9c);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0299
        gbc.setState(0x595d, 0x1204, 0x2450, 0x4ed9, 0xf3e0, 0xe24c, 0x1, 0x1);
        gbc.writeMem(0x595d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1204);
        EXPECT(gbc.pc(), 0x595e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 029A
        gbc.setState(0x3d09, 0xf0bd, 0x7250, 0x55e9, 0xa29, 0x68ed, 0x0, 0x1);
        gbc.writeMem(0x3d09, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf0bd);
        EXPECT(gbc.pc(), 0x3d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 029B
        gbc.setState(0x892d, 0xee5e, 0x8b10, 0x5969, 0x3911, 0xedf2, 0x1, 0x0);
        gbc.writeMem(0x892d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xee5e);
        EXPECT(gbc.pc(), 0x892e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892d), 0xba);
        // BA 029C
        gbc.setState(0x7e8f, 0xe311, 0xefa0, 0x8804, 0xa567, 0x9712, 0x0, 0x1);
        gbc.writeMem(0x7e8f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe311);
        EXPECT(gbc.pc(), 0x7e90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 029D
        gbc.setState(0x1e93, 0xaf08, 0x5ec0, 0x7843, 0x244c, 0x65ca, 0x1, 0x1);
        gbc.writeMem(0x1e93, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaf08);
        EXPECT(gbc.pc(), 0x1e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 029E
        gbc.setState(0xd399, 0xbaba, 0xcb20, 0xed7e, 0x3375, 0x9227, 0x0, 0x0);
        gbc.writeMem(0xd399, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbaba);
        EXPECT(gbc.pc(), 0xd39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd399), 0xba);
        // BA 029F
        gbc.setState(0xf7f, 0x8efd, 0xcde0, 0x8455, 0xf046, 0xc956, 0x0, 0x1);
        gbc.writeMem(0xf7f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8efd);
        EXPECT(gbc.pc(), 0xf80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02A0
        gbc.setState(0xca1f, 0x177d, 0x5260, 0xcab2, 0x5c0e, 0xb8d9, 0x0, 0x1);
        gbc.writeMem(0xca1f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x177d);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1f), 0xba);
        // BA 02A1
        gbc.setState(0x62c0, 0x68c9, 0x7440, 0x707e, 0x7bd1, 0x6aae, 0x1, 0x1);
        gbc.writeMem(0x62c0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x68c9);
        EXPECT(gbc.pc(), 0x62c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02A2
        gbc.setState(0x61d6, 0xde37, 0xd020, 0xfd07, 0x7c56, 0x6262, 0x1, 0x0);
        gbc.writeMem(0x61d6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xde37);
        EXPECT(gbc.pc(), 0x61d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 02A3
        gbc.setState(0x751b, 0xbbfe, 0xa600, 0x425a, 0x8021, 0xc18b, 0x1, 0x0);
        gbc.writeMem(0x751b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbbfe);
        EXPECT(gbc.pc(), 0x751c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02A5
        gbc.setState(0x4a33, 0x4faf, 0x55d0, 0x8149, 0x25df, 0x61c0, 0x0, 0x1);
        gbc.writeMem(0x4a33, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4faf);
        EXPECT(gbc.pc(), 0x4a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02A6
        gbc.setState(0x9e98, 0xe499, 0xcd60, 0xd872, 0x5e59, 0xbdb2, 0x1, 0x0);
        gbc.writeMem(0x9e98, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe499);
        EXPECT(gbc.pc(), 0x9e99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e98), 0xba);
        // BA 02A7
        gbc.setState(0x74d7, 0x54d8, 0xcb10, 0x1f26, 0x456, 0x2d3c, 0x1, 0x1);
        gbc.writeMem(0x74d7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x54d8);
        EXPECT(gbc.pc(), 0x74d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02A8
        gbc.setState(0xd65f, 0x542f, 0xeca0, 0xebc0, 0x6285, 0x33be, 0x1, 0x0);
        gbc.writeMem(0xd65f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x542f);
        EXPECT(gbc.pc(), 0xd660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65f), 0xba);
        // BA 02A9
        gbc.setState(0x9ad1, 0x15c7, 0x5930, 0xdc50, 0x238e, 0x3044, 0x0, 0x1);
        gbc.writeMem(0x9ad1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x15c7);
        EXPECT(gbc.pc(), 0x9ad2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad1), 0xba);
        // BA 02AA
        gbc.setState(0x3959, 0x2351, 0xb190, 0x7111, 0xdf58, 0x4aa2, 0x1, 0x0);
        gbc.writeMem(0x3959, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2351);
        EXPECT(gbc.pc(), 0x395a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02AB
        gbc.setState(0xda28, 0x5be, 0xce40, 0xf70f, 0x59c0, 0xec39, 0x0, 0x0);
        gbc.writeMem(0xda28, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5be);
        EXPECT(gbc.pc(), 0xda29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda28), 0xba);
        // BA 02AC
        gbc.setState(0xe7c0, 0x6957, 0xa7b0, 0xe03e, 0xec8c, 0xb59f, 0x1, 0x0);
        gbc.writeMem(0xe7c0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6957);
        EXPECT(gbc.pc(), 0xe7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c0), 0xba);
        // BA 02AD
        gbc.setState(0x138e, 0xc49f, 0xbd00, 0x1ab9, 0x1b15, 0x74ea, 0x0, 0x1);
        gbc.writeMem(0x138e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc49f);
        EXPECT(gbc.pc(), 0x138f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02AE
        gbc.setState(0x11a0, 0x2f0, 0xf8e0, 0xd4e9, 0x411, 0xf7c8, 0x1, 0x0);
        gbc.writeMem(0x11a0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2f0);
        EXPECT(gbc.pc(), 0x11a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02AF
        gbc.setState(0x17f6, 0xe061, 0xca10, 0x4563, 0x877c, 0xc8f2, 0x0, 0x1);
        gbc.writeMem(0x17f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe061);
        EXPECT(gbc.pc(), 0x17f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02B0
        gbc.setState(0x380, 0x8fb8, 0x92f0, 0x9005, 0x1fcd, 0xcf0, 0x0, 0x0);
        gbc.writeMem(0x380, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8fb8);
        EXPECT(gbc.pc(), 0x381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 02B1
        gbc.setState(0x8684, 0x531d, 0x71f0, 0x808a, 0x3e01, 0x6bf7, 0x0, 0x0);
        gbc.writeMem(0x8684, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x531d);
        EXPECT(gbc.pc(), 0x8685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8684), 0xba);
        // BA 02B2
        gbc.setState(0x33ec, 0xa238, 0xaf20, 0x2943, 0xdfc8, 0xb7a4, 0x0, 0x0);
        gbc.writeMem(0x33ec, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa238);
        EXPECT(gbc.pc(), 0x33ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02B3
        gbc.setState(0x64b0, 0x34ba, 0x8450, 0xfd1e, 0xcca9, 0x5158, 0x1, 0x1);
        gbc.writeMem(0x64b0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x34ba);
        EXPECT(gbc.pc(), 0x64b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02B4
        gbc.setState(0x6584, 0x1b86, 0xfac0, 0x440c, 0x24e4, 0xf8cb, 0x1, 0x1);
        gbc.writeMem(0x6584, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1b86);
        EXPECT(gbc.pc(), 0x6585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02B5
        gbc.setState(0x792c, 0xecd6, 0x9310, 0x5fe1, 0xab8f, 0x7923, 0x1, 0x0);
        gbc.writeMem(0x792c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xecd6);
        EXPECT(gbc.pc(), 0x792d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02B6
        gbc.setState(0x5ef0, 0x59df, 0x1e20, 0xb264, 0x4128, 0xee14, 0x1, 0x0);
        gbc.writeMem(0x5ef0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x59df);
        EXPECT(gbc.pc(), 0x5ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02B7
        gbc.setState(0x358c, 0x3276, 0xc550, 0x1271, 0x30ca, 0x2968, 0x0, 0x0);
        gbc.writeMem(0x358c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3276);
        EXPECT(gbc.pc(), 0x358d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02B8
        gbc.setState(0xa0b6, 0x4974, 0x7620, 0x9f06, 0x510b, 0x7f84, 0x1, 0x1);
        gbc.writeMem(0xa0b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4974);
        EXPECT(gbc.pc(), 0xa0b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b6), 0xba);
        // BA 02B9
        gbc.setState(0xaa05, 0xd207, 0x7470, 0x3291, 0xb751, 0x5ca8, 0x1, 0x1);
        gbc.writeMem(0xaa05, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd207);
        EXPECT(gbc.pc(), 0xaa06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa05), 0xba);
        // BA 02BA
        gbc.setState(0xd492, 0x8ba6, 0x8e80, 0x4365, 0x5a19, 0xc9ab, 0x1, 0x0);
        gbc.writeMem(0xd492, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8ba6);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd492), 0xba);
        // BA 02BB
        gbc.setState(0xa33e, 0x6bb4, 0x3f0, 0xe150, 0xdd27, 0x4a30, 0x0, 0x1);
        gbc.writeMem(0xa33e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6bb4);
        EXPECT(gbc.pc(), 0xa33f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa33e), 0xba);
        // BA 02BC
        gbc.setState(0xe16, 0xbb2e, 0x430, 0xb52f, 0xf0d4, 0x19e3, 0x0, 0x1);
        gbc.writeMem(0xe16, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xbb2e);
        EXPECT(gbc.pc(), 0xe17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02BD
        gbc.setState(0x42c6, 0x5bec, 0x3f00, 0x87a2, 0x71f5, 0xfcd5, 0x1, 0x0);
        gbc.writeMem(0x42c6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5bec);
        EXPECT(gbc.pc(), 0x42c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02BE
        gbc.setState(0x9ba4, 0x4e17, 0x7a70, 0x41e1, 0xc287, 0x5001, 0x0, 0x0);
        gbc.writeMem(0x9ba4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4e17);
        EXPECT(gbc.pc(), 0x9ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba4), 0xba);
        // BA 02BF
        gbc.setState(0x10b6, 0x64f5, 0xee90, 0xffb9, 0xbda, 0x36, 0x1, 0x0);
        gbc.writeMem(0x10b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x64f5);
        EXPECT(gbc.pc(), 0x10b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02C0
        gbc.setState(0xddf9, 0x3a7, 0x5c10, 0x1a8f, 0xc6f1, 0x6d36, 0x1, 0x0);
        gbc.writeMem(0xddf9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3a7);
        EXPECT(gbc.pc(), 0xddfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddf9), 0xba);
        // BA 02C1
        gbc.setState(0xad60, 0xdffd, 0x4cf0, 0x12a1, 0x2db, 0x9bd9, 0x1, 0x1);
        gbc.writeMem(0xad60, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdffd);
        EXPECT(gbc.pc(), 0xad61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad60), 0xba);
        // BA 02C3
        gbc.setState(0xa7eb, 0x8c6e, 0x59d0, 0x7b61, 0x3929, 0xe80e, 0x0, 0x1);
        gbc.writeMem(0xa7eb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8c6e);
        EXPECT(gbc.pc(), 0xa7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7eb), 0xba);
        // BA 02C4
        gbc.setState(0x97d5, 0xd27c, 0x2a00, 0xc7b8, 0x7e8b, 0x8391, 0x1, 0x0);
        gbc.writeMem(0x97d5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd27c);
        EXPECT(gbc.pc(), 0x97d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d5), 0xba);
        // BA 02C5
        gbc.setState(0xa098, 0x21c4, 0x8080, 0x16c1, 0x8823, 0xecbb, 0x1, 0x0);
        gbc.writeMem(0xa098, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x21c4);
        EXPECT(gbc.pc(), 0xa099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa098), 0xba);
        // BA 02C6
        gbc.setState(0x5648, 0x3384, 0x2890, 0x9e6f, 0xa378, 0x61ed, 0x1, 0x1);
        gbc.writeMem(0x5648, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3384);
        EXPECT(gbc.pc(), 0x5649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02C7
        gbc.setState(0xa90f, 0x66b8, 0x1420, 0x9990, 0xbb7c, 0x4846, 0x0, 0x1);
        gbc.writeMem(0xa90f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x66b8);
        EXPECT(gbc.pc(), 0xa910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa90f), 0xba);
        // BA 02C8
        gbc.setState(0x562a, 0x2a5c, 0xb8c0, 0xde1c, 0xf5bc, 0x47b1, 0x1, 0x1);
        gbc.writeMem(0x562a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2a5c);
        EXPECT(gbc.pc(), 0x562b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02C9
        gbc.setState(0xb078, 0x14d8, 0xfe30, 0xc4a0, 0xb276, 0x4f95, 0x1, 0x0);
        gbc.writeMem(0xb078, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x14d8);
        EXPECT(gbc.pc(), 0xb079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb078), 0xba);
        // BA 02CA
        gbc.setState(0x321e, 0x3a3c, 0x3830, 0xb44b, 0xa28, 0x8c90, 0x0, 0x1);
        gbc.writeMem(0x321e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3a3c);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 02CB
        gbc.setState(0xc43c, 0x72b5, 0x8270, 0xc82d, 0x28fc, 0xeeff, 0x0, 0x1);
        gbc.writeMem(0xc43c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x72b5);
        EXPECT(gbc.pc(), 0xc43d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43c), 0xba);
        // BA 02CC
        gbc.setState(0x4161, 0xc319, 0xb0b0, 0x39b3, 0x4f68, 0xa91e, 0x0, 0x0);
        gbc.writeMem(0x4161, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc319);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 02CD
        gbc.setState(0xcc21, 0x9709, 0x4830, 0x266c, 0xba9f, 0x9b07, 0x1, 0x0);
        gbc.writeMem(0xcc21, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9709);
        EXPECT(gbc.pc(), 0xcc22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc21), 0xba);
        // BA 02CE
        gbc.setState(0x8766, 0xbb1f, 0x9970, 0x7ccd, 0xbf88, 0x45c1, 0x1, 0x0);
        gbc.writeMem(0x8766, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbb1f);
        EXPECT(gbc.pc(), 0x8767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8766), 0xba);
        // BA 02CF
        gbc.setState(0xa911, 0x40a, 0xeb40, 0x40ac, 0x418, 0xc510, 0x1, 0x0);
        gbc.writeMem(0xa911, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x40a);
        EXPECT(gbc.pc(), 0xa912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa911), 0xba);
        // BA 02D0
        gbc.setState(0x3b73, 0x79f9, 0xf010, 0x2cde, 0x9d36, 0x5c9e, 0x0, 0x0);
        gbc.writeMem(0x3b73, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x79f9);
        EXPECT(gbc.pc(), 0x3b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 02D1
        gbc.setState(0x2a4b, 0xd045, 0x8350, 0x2735, 0x90c8, 0xb6ab, 0x1, 0x0);
        gbc.writeMem(0x2a4b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd045);
        EXPECT(gbc.pc(), 0x2a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02D2
        gbc.setState(0x37e8, 0x4c5a, 0x9f40, 0x58d2, 0x568d, 0xbc0b, 0x1, 0x1);
        gbc.writeMem(0x37e8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4c5a);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02D3
        gbc.setState(0xb6ab, 0xf860, 0x5fd0, 0x520b, 0x5a11, 0x2b9c, 0x1, 0x1);
        gbc.writeMem(0xb6ab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf860);
        EXPECT(gbc.pc(), 0xb6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ab), 0xba);
        // BA 02D4
        gbc.setState(0xe9a9, 0x8879, 0x5b80, 0xd799, 0x9c60, 0xa648, 0x1, 0x0);
        gbc.writeMem(0xe9a9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8879);
        EXPECT(gbc.pc(), 0xe9aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a9), 0xba);
        // BA 02D5
        gbc.setState(0x277a, 0x52c2, 0x54c0, 0xeb5c, 0x6b42, 0xa2f5, 0x0, 0x1);
        gbc.writeMem(0x277a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x52c2);
        EXPECT(gbc.pc(), 0x277b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02D6
        gbc.setState(0x8bf1, 0x428a, 0xf370, 0x8dfd, 0x23cb, 0x82d8, 0x0, 0x1);
        gbc.writeMem(0x8bf1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x428a);
        EXPECT(gbc.pc(), 0x8bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bf1), 0xba);
        // BA 02D7
        gbc.setState(0x3396, 0x389f, 0x2da0, 0x5a55, 0xc034, 0x90b5, 0x0, 0x0);
        gbc.writeMem(0x3396, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x389f);
        EXPECT(gbc.pc(), 0x3397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02D8
        gbc.setState(0xaef1, 0x2b3e, 0x77b0, 0x62f8, 0x18f7, 0xa493, 0x1, 0x1);
        gbc.writeMem(0xaef1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2b3e);
        EXPECT(gbc.pc(), 0xaef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef1), 0xba);
        // BA 02D9
        gbc.setState(0xe7a9, 0xbece, 0x2db0, 0x2d9f, 0xbb8d, 0x7db3, 0x1, 0x0);
        gbc.writeMem(0xe7a9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbece);
        EXPECT(gbc.pc(), 0xe7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7a9), 0xba);
        // BA 02DA
        gbc.setState(0xc781, 0x62d3, 0x8910, 0xfc4b, 0xf746, 0x6efc, 0x0, 0x1);
        gbc.writeMem(0xc781, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x62d3);
        EXPECT(gbc.pc(), 0xc782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc781), 0xba);
        // BA 02DB
        gbc.setState(0xc27b, 0x11e4, 0x2a20, 0x930a, 0x2b96, 0x84e4, 0x0, 0x1);
        gbc.writeMem(0xc27b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x11e4);
        EXPECT(gbc.pc(), 0xc27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc27b), 0xba);
        // BA 02DC
        gbc.setState(0x5fbb, 0xb516, 0x2de0, 0x6aaa, 0xd462, 0x6b67, 0x0, 0x0);
        gbc.writeMem(0x5fbb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb516);
        EXPECT(gbc.pc(), 0x5fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02DD
        gbc.setState(0xa03b, 0xc254, 0xc20, 0x6e47, 0x7f9, 0x70ab, 0x0, 0x0);
        gbc.writeMem(0xa03b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc254);
        EXPECT(gbc.pc(), 0xa03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa03b), 0xba);
        // BA 02DE
        gbc.setState(0x609e, 0x4e8f, 0x8f10, 0xa986, 0xcdb6, 0xe396, 0x1, 0x1);
        gbc.writeMem(0x609e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4e8f);
        EXPECT(gbc.pc(), 0x609f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02DF
        gbc.setState(0x3150, 0x5274, 0x54c0, 0x3076, 0xfd0d, 0x88e4, 0x0, 0x1);
        gbc.writeMem(0x3150, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5274);
        EXPECT(gbc.pc(), 0x3151);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02E0
        gbc.setState(0xd836, 0xf112, 0x8980, 0xc82b, 0x2f3, 0x7f2c, 0x1, 0x1);
        gbc.writeMem(0xd836, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf112);
        EXPECT(gbc.pc(), 0xd837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd836), 0xba);
        // BA 02E1
        gbc.setState(0xf06, 0xc0df, 0x7b70, 0x4d84, 0x8225, 0x74ab, 0x0, 0x1);
        gbc.writeMem(0xf06, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc0df);
        EXPECT(gbc.pc(), 0xf07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02E2
        gbc.setState(0x1fe6, 0xeb4b, 0xade0, 0x853a, 0x78d8, 0xda80, 0x0, 0x1);
        gbc.writeMem(0x1fe6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xeb4b);
        EXPECT(gbc.pc(), 0x1fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02E3
        gbc.setState(0x1448, 0x111b, 0x52f0, 0xd9f9, 0x6037, 0x75d8, 0x1, 0x1);
        gbc.writeMem(0x1448, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x111b);
        EXPECT(gbc.pc(), 0x1449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02E4
        gbc.setState(0xe715, 0x4c4d, 0x6310, 0x575d, 0x6c6b, 0xae27, 0x0, 0x1);
        gbc.writeMem(0xe715, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4c4d);
        EXPECT(gbc.pc(), 0xe716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe715), 0xba);
        // BA 02E5
        gbc.setState(0xefb7, 0xd31a, 0x5860, 0x4c1e, 0x2d71, 0x94bb, 0x1, 0x1);
        gbc.writeMem(0xefb7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd31a);
        EXPECT(gbc.pc(), 0xefb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb7), 0xba);
        // BA 02E6
        gbc.setState(0x410e, 0x825f, 0x2d0, 0xf876, 0x3413, 0xbcdc, 0x0, 0x0);
        gbc.writeMem(0x410e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x825f);
        EXPECT(gbc.pc(), 0x410f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02E7
        gbc.setState(0x960a, 0x11f0, 0x27b0, 0xa5b0, 0x15a4, 0xe926, 0x1, 0x1);
        gbc.writeMem(0x960a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x11f0);
        EXPECT(gbc.pc(), 0x960b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960a), 0xba);
        // BA 02E9
        gbc.setState(0x9496, 0x8563, 0x2ea0, 0xbe2d, 0xea8f, 0xafd6, 0x1, 0x0);
        gbc.writeMem(0x9496, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8563);
        EXPECT(gbc.pc(), 0x9497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9496), 0xba);
        // BA 02EA
        gbc.setState(0xc823, 0x2ded, 0x1eb0, 0x7ad1, 0xe4e4, 0xbe08, 0x0, 0x1);
        gbc.writeMem(0xc823, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2ded);
        EXPECT(gbc.pc(), 0xc824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc823), 0xba);
        // BA 02EC
        gbc.setState(0x9ed9, 0x2b3b, 0x7cf0, 0xe92e, 0x7ca9, 0x432f, 0x1, 0x1);
        gbc.writeMem(0x9ed9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2b3b);
        EXPECT(gbc.pc(), 0x9eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed9), 0xba);
        // BA 02ED
        gbc.setState(0x7fcf, 0xcb9, 0xed10, 0xe55f, 0xfedc, 0x698e, 0x0, 0x1);
        gbc.writeMem(0x7fcf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xcb9);
        EXPECT(gbc.pc(), 0x7fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02EE
        gbc.setState(0xdc8d, 0x3050, 0xaad0, 0xc753, 0xca28, 0xb64e, 0x0, 0x1);
        gbc.writeMem(0xdc8d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3050);
        EXPECT(gbc.pc(), 0xdc8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8d), 0xba);
        // BA 02EF
        gbc.setState(0x75ba, 0x1b76, 0x5b60, 0x9fd7, 0x38d8, 0x70bb, 0x0, 0x0);
        gbc.writeMem(0x75ba, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1b76);
        EXPECT(gbc.pc(), 0x75bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02F0
        gbc.setState(0x611f, 0x102a, 0xb3a0, 0x43fa, 0x91ab, 0xee95, 0x1, 0x0);
        gbc.writeMem(0x611f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x102a);
        EXPECT(gbc.pc(), 0x6120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02F1
        gbc.setState(0xabd, 0xa5b2, 0x7490, 0x66a4, 0x1dbc, 0x127, 0x0, 0x0);
        gbc.writeMem(0xabd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa5b2);
        EXPECT(gbc.pc(), 0xabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 02F2
        gbc.setState(0x853b, 0xc659, 0x4520, 0x2576, 0xbe0f, 0x1d79, 0x0, 0x0);
        gbc.writeMem(0x853b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc659);
        EXPECT(gbc.pc(), 0x853c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x853b), 0xba);
        // BA 02F3
        gbc.setState(0x5f66, 0xb378, 0xd520, 0xf0b4, 0x45df, 0x8c16, 0x0, 0x1);
        gbc.writeMem(0x5f66, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb378);
        EXPECT(gbc.pc(), 0x5f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02F5
        gbc.setState(0x1d3f, 0xa5c4, 0x7730, 0xa69e, 0xf349, 0x7539, 0x0, 0x1);
        gbc.writeMem(0x1d3f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa5c4);
        EXPECT(gbc.pc(), 0x1d40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02F6
        gbc.setState(0xc050, 0x46e7, 0xeb10, 0x3c6b, 0xb7ea, 0x664e, 0x1, 0x1);
        gbc.writeMem(0xc050, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x46e7);
        EXPECT(gbc.pc(), 0xc051);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc050), 0xba);
        // BA 02F7
        gbc.setState(0x68a1, 0x5fc1, 0x55d0, 0x532e, 0xd1c4, 0x1225, 0x1, 0x0);
        gbc.writeMem(0x68a1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5fc1);
        EXPECT(gbc.pc(), 0x68a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02F8
        gbc.setState(0xd432, 0x8ae1, 0x74b0, 0x20d2, 0x72df, 0xc7d7, 0x0, 0x1);
        gbc.writeMem(0xd432, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8ae1);
        EXPECT(gbc.pc(), 0xd433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd432), 0xba);
        // BA 02F9
        gbc.setState(0xc74f, 0x61bd, 0x9700, 0xb29b, 0x888a, 0xec09, 0x1, 0x1);
        gbc.writeMem(0xc74f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x61bd);
        EXPECT(gbc.pc(), 0xc750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74f), 0xba);
        // BA 02FA
        gbc.setState(0xb4bf, 0x2960, 0xf0a0, 0x54e2, 0x3f18, 0x77, 0x0, 0x0);
        gbc.writeMem(0xb4bf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2960);
        EXPECT(gbc.pc(), 0xb4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4bf), 0xba);
        // BA 02FB
        gbc.setState(0x2985, 0xbadc, 0x4740, 0x30e6, 0xd57e, 0xc8c8, 0x0, 0x1);
        gbc.writeMem(0x2985, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbadc);
        EXPECT(gbc.pc(), 0x2986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02FC
        gbc.setState(0x562b, 0xc4b5, 0x63b0, 0xe278, 0x231, 0x3058, 0x0, 0x1);
        gbc.writeMem(0x562b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc4b5);
        EXPECT(gbc.pc(), 0x562c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 02FD
        gbc.setState(0x1a2b, 0x3b21, 0x6590, 0x68e9, 0xf17c, 0x6415, 0x0, 0x0);
        gbc.writeMem(0x1a2b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3b21);
        EXPECT(gbc.pc(), 0x1a2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 02FE
        gbc.setState(0x711d, 0xed9e, 0xb000, 0x28e, 0xd9be, 0xa439, 0x0, 0x0);
        gbc.writeMem(0x711d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xed9e);
        EXPECT(gbc.pc(), 0x711e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 02FF
        gbc.setState(0x8fbb, 0xa34c, 0x5950, 0x89e9, 0x6335, 0x8cfe, 0x1, 0x0);
        gbc.writeMem(0x8fbb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa34c);
        EXPECT(gbc.pc(), 0x8fbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fbb), 0xba);
        // BA 0300
        gbc.setState(0x2dc0, 0xea0c, 0x53c0, 0xdf7c, 0xf2cf, 0x99ff, 0x0, 0x0);
        gbc.writeMem(0x2dc0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xea0c);
        EXPECT(gbc.pc(), 0x2dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0301
        gbc.setState(0x53fc, 0x2d65, 0x8000, 0xbd54, 0x3f73, 0x1a08, 0x1, 0x1);
        gbc.writeMem(0x53fc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x2d65);
        EXPECT(gbc.pc(), 0x53fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0302
        gbc.setState(0x954a, 0x8ddd, 0xd480, 0xaae, 0xcce1, 0x2573, 0x1, 0x0);
        gbc.writeMem(0x954a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8ddd);
        EXPECT(gbc.pc(), 0x954b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954a), 0xba);
        // BA 0303
        gbc.setState(0x4046, 0x3660, 0x4bc0, 0x7ee2, 0xed54, 0xa380, 0x1, 0x1);
        gbc.writeMem(0x4046, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3660);
        EXPECT(gbc.pc(), 0x4047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0304
        gbc.setState(0xae27, 0x378b, 0x8780, 0xe19f, 0xf6f0, 0x61fd, 0x0, 0x1);
        gbc.writeMem(0xae27, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x378b);
        EXPECT(gbc.pc(), 0xae28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae27), 0xba);
        // BA 0305
        gbc.setState(0xb2aa, 0x8736, 0x5a10, 0xab8c, 0xc31e, 0x397e, 0x1, 0x1);
        gbc.writeMem(0xb2aa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8736);
        EXPECT(gbc.pc(), 0xb2ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2aa), 0xba);
        // BA 0306
        gbc.setState(0x7432, 0x37a1, 0x62b0, 0xfe5c, 0x91bc, 0x6350, 0x0, 0x1);
        gbc.writeMem(0x7432, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x37a1);
        EXPECT(gbc.pc(), 0x7433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0307
        gbc.setState(0x5138, 0x9b63, 0x3200, 0x45a2, 0xa799, 0x8354, 0x0, 0x1);
        gbc.writeMem(0x5138, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9b63);
        EXPECT(gbc.pc(), 0x5139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0308
        gbc.setState(0xb9be, 0xd476, 0x9800, 0x6cb2, 0x17cb, 0xe8e8, 0x0, 0x0);
        gbc.writeMem(0xb9be, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd476);
        EXPECT(gbc.pc(), 0xb9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9be), 0xba);
        // BA 0309
        gbc.setState(0xed06, 0x2d24, 0xbf50, 0x3efe, 0x73c4, 0x729a, 0x1, 0x1);
        gbc.writeMem(0xed06, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2d24);
        EXPECT(gbc.pc(), 0xed07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed06), 0xba);
        // BA 030A
        gbc.setState(0x6fd9, 0x2bf2, 0x90, 0x1bc5, 0x40a9, 0x2289, 0x1, 0x0);
        gbc.writeMem(0x6fd9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2bf2);
        EXPECT(gbc.pc(), 0x6fda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 030B
        gbc.setState(0xc0d3, 0xfe46, 0x6240, 0x8e16, 0xc767, 0x1f2f, 0x1, 0x1);
        gbc.writeMem(0xc0d3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfe46);
        EXPECT(gbc.pc(), 0xc0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d3), 0xba);
        // BA 030C
        gbc.setState(0x8e37, 0x69ab, 0x4ac0, 0x8c70, 0x62d7, 0x939f, 0x1, 0x0);
        gbc.writeMem(0x8e37, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x69ab);
        EXPECT(gbc.pc(), 0x8e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e37), 0xba);
        // BA 030D
        gbc.setState(0x74e, 0xce40, 0xdba0, 0xdc7c, 0x59be, 0xde94, 0x0, 0x1);
        gbc.writeMem(0x74e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xce40);
        EXPECT(gbc.pc(), 0x74f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 030E
        gbc.setState(0x506d, 0xe1a0, 0x2480, 0x94d9, 0x3345, 0x7971, 0x1, 0x0);
        gbc.writeMem(0x506d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe1a0);
        EXPECT(gbc.pc(), 0x506e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 030F
        gbc.setState(0x4315, 0x514d, 0xe840, 0xca0, 0x784d, 0xc046, 0x0, 0x1);
        gbc.writeMem(0x4315, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x514d);
        EXPECT(gbc.pc(), 0x4316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0310
        gbc.setState(0xde86, 0x875c, 0xffb0, 0x52d1, 0x70f2, 0x5e2b, 0x0, 0x0);
        gbc.writeMem(0xde86, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x875c);
        EXPECT(gbc.pc(), 0xde87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde86), 0xba);
        // BA 0312
        gbc.setState(0x5b2b, 0x52b4, 0xddd0, 0x3212, 0x7aa3, 0x93ae, 0x0, 0x0);
        gbc.writeMem(0x5b2b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x52b4);
        EXPECT(gbc.pc(), 0x5b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0313
        gbc.setState(0x4a18, 0x93f9, 0xb3e0, 0xc1b5, 0x53e1, 0xe76a, 0x1, 0x0);
        gbc.writeMem(0x4a18, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x93f9);
        EXPECT(gbc.pc(), 0x4a19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0314
        gbc.setState(0xa32d, 0xbdd9, 0xba0, 0xfdea, 0x6c27, 0x3448, 0x0, 0x0);
        gbc.writeMem(0xa32d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbdd9);
        EXPECT(gbc.pc(), 0xa32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32d), 0xba);
        // BA 0315
        gbc.setState(0x48eb, 0x5c14, 0x96d0, 0x5117, 0x1265, 0xc5f9, 0x0, 0x1);
        gbc.writeMem(0x48eb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5c14);
        EXPECT(gbc.pc(), 0x48ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0316
        gbc.setState(0x501c, 0x2bcd, 0x880, 0xee3c, 0x58d6, 0xc859, 0x0, 0x0);
        gbc.writeMem(0x501c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2bcd);
        EXPECT(gbc.pc(), 0x501d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0317
        gbc.setState(0xa591, 0x4575, 0xa120, 0x2b16, 0xaa28, 0x50f6, 0x0, 0x0);
        gbc.writeMem(0xa591, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4575);
        EXPECT(gbc.pc(), 0xa592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa591), 0xba);
        // BA 0318
        gbc.setState(0x3dba, 0x587a, 0x610, 0xdabc, 0x6737, 0x6edd, 0x1, 0x1);
        gbc.writeMem(0x3dba, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x587a);
        EXPECT(gbc.pc(), 0x3dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0319
        gbc.setState(0x2bba, 0xcd2, 0x5900, 0x3caa, 0x79d8, 0x961b, 0x1, 0x1);
        gbc.writeMem(0x2bba, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcd2);
        EXPECT(gbc.pc(), 0x2bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 031A
        gbc.setState(0x5802, 0xdee3, 0x6d10, 0x1db2, 0x380a, 0x5442, 0x1, 0x0);
        gbc.writeMem(0x5802, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdee3);
        EXPECT(gbc.pc(), 0x5803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 031B
        gbc.setState(0x79cc, 0x4b63, 0xb950, 0x2e49, 0x7f9d, 0x1cfb, 0x1, 0x0);
        gbc.writeMem(0x79cc, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4b63);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 031C
        gbc.setState(0x974d, 0x17ef, 0x3c20, 0x9120, 0x334c, 0xca6c, 0x0, 0x1);
        gbc.writeMem(0x974d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x17ef);
        EXPECT(gbc.pc(), 0x974e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x974d), 0xba);
        // BA 031D
        gbc.setState(0x932a, 0xf4e4, 0xc090, 0x9642, 0x8fb1, 0x42d9, 0x1, 0x0);
        gbc.writeMem(0x932a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf4e4);
        EXPECT(gbc.pc(), 0x932b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x932a), 0xba);
        // BA 031F
        gbc.setState(0x5787, 0x7546, 0xc020, 0xd262, 0xecc9, 0xa084, 0x1, 0x1);
        gbc.writeMem(0x5787, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7546);
        EXPECT(gbc.pc(), 0x5788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0320
        gbc.setState(0x28a1, 0xdb37, 0xcb00, 0x5ab3, 0xcb0, 0xc038, 0x0, 0x1);
        gbc.writeMem(0x28a1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdb37);
        EXPECT(gbc.pc(), 0x28a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0321
        gbc.setState(0x35a3, 0x2d28, 0xdf70, 0x305d, 0x4925, 0x512a, 0x1, 0x1);
        gbc.writeMem(0x35a3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2d28);
        EXPECT(gbc.pc(), 0x35a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0322
        gbc.setState(0x3a00, 0xa266, 0x9d00, 0xf6e, 0x1534, 0x1def, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa266);
        EXPECT(gbc.pc(), 0x3a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0323
        gbc.setState(0x557f, 0x20d4, 0x63b0, 0x648a, 0x98ac, 0x74ba, 0x1, 0x0);
        gbc.writeMem(0x557f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x20d4);
        EXPECT(gbc.pc(), 0x5580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0324
        gbc.setState(0x2108, 0x1970, 0x2550, 0x7a36, 0xe593, 0xf6ba, 0x0, 0x1);
        gbc.writeMem(0x2108, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x1970);
        EXPECT(gbc.pc(), 0x2109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0325
        gbc.setState(0xef2, 0x86ad, 0xb320, 0xe175, 0xe919, 0xd14a, 0x1, 0x0);
        gbc.writeMem(0xef2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x86ad);
        EXPECT(gbc.pc(), 0xef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0326
        gbc.setState(0xa7f6, 0x3eec, 0xe200, 0x39d5, 0xc16f, 0xa39c, 0x0, 0x0);
        gbc.writeMem(0xa7f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3eec);
        EXPECT(gbc.pc(), 0xa7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f6), 0xba);
        // BA 0327
        gbc.setState(0x4c6e, 0xb02d, 0x740, 0xa2c2, 0x4716, 0xc1c7, 0x1, 0x0);
        gbc.writeMem(0x4c6e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb02d);
        EXPECT(gbc.pc(), 0x4c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0328
        gbc.setState(0xad82, 0xd634, 0xfa0, 0xed30, 0xcbde, 0xd510, 0x1, 0x0);
        gbc.writeMem(0xad82, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd634);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad82), 0xba);
        // BA 0329
        gbc.setState(0x6291, 0x9aed, 0xb6d0, 0xd59f, 0x32a3, 0xb514, 0x0, 0x1);
        gbc.writeMem(0x6291, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9aed);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 032A
        gbc.setState(0x8848, 0x42dd, 0x3b80, 0x22ab, 0xd1d9, 0x6a06, 0x1, 0x0);
        gbc.writeMem(0x8848, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x42dd);
        EXPECT(gbc.pc(), 0x8849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8848), 0xba);
        // BA 032B
        gbc.setState(0x4641, 0x1e8f, 0xe300, 0x6838, 0x8826, 0xdf3f, 0x0, 0x1);
        gbc.writeMem(0x4641, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1e8f);
        EXPECT(gbc.pc(), 0x4642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 032C
        gbc.setState(0x444f, 0xc0dc, 0x8dd0, 0x47e2, 0x973f, 0xdee, 0x0, 0x0);
        gbc.writeMem(0x444f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc0dc);
        EXPECT(gbc.pc(), 0x4450);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 032D
        gbc.setState(0xb2b2, 0x4b82, 0x8510, 0xb581, 0xd2cc, 0x4477, 0x1, 0x0);
        gbc.writeMem(0xb2b2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4b82);
        EXPECT(gbc.pc(), 0xb2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b2), 0xba);
        // BA 032E
        gbc.setState(0xdf5a, 0x606, 0x5990, 0x4a18, 0x23e3, 0x4ea1, 0x1, 0x0);
        gbc.writeMem(0xdf5a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x606);
        EXPECT(gbc.pc(), 0xdf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf5a), 0xba);
        // BA 032F
        gbc.setState(0x7fa5, 0xa520, 0x94b0, 0x7422, 0x1577, 0xf991, 0x1, 0x0);
        gbc.writeMem(0x7fa5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa520);
        EXPECT(gbc.pc(), 0x7fa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0330
        gbc.setState(0x9f45, 0x7484, 0x33f0, 0x7cbe, 0x7c6a, 0x46e4, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7484);
        EXPECT(gbc.pc(), 0x9f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f45), 0xba);
        // BA 0331
        gbc.setState(0x4b45, 0xa9ce, 0x5690, 0x2fb, 0xd844, 0x741, 0x1, 0x0);
        gbc.writeMem(0x4b45, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa9ce);
        EXPECT(gbc.pc(), 0x4b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0332
        gbc.setState(0x3db7, 0x490f, 0x2440, 0x519, 0x3944, 0xf16f, 0x1, 0x0);
        gbc.writeMem(0x3db7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x490f);
        EXPECT(gbc.pc(), 0x3db8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0333
        gbc.setState(0xdbc5, 0xaa1d, 0xe850, 0x2aaa, 0xffe7, 0x1747, 0x1, 0x1);
        gbc.writeMem(0xdbc5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaa1d);
        EXPECT(gbc.pc(), 0xdbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc5), 0xba);
        // BA 0334
        gbc.setState(0x5b18, 0xeb77, 0xee70, 0xb6c5, 0xb4f9, 0x5793, 0x1, 0x0);
        gbc.writeMem(0x5b18, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeb77);
        EXPECT(gbc.pc(), 0x5b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0335
        gbc.setState(0x32ea, 0xe620, 0x8810, 0xf3d3, 0x81d, 0x580c, 0x0, 0x0);
        gbc.writeMem(0x32ea, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe620);
        EXPECT(gbc.pc(), 0x32eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0336
        gbc.setState(0x74ff, 0xe1b0, 0x6500, 0xe452, 0xa7c, 0xf98c, 0x0, 0x0);
        gbc.writeMem(0x74ff, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe1b0);
        EXPECT(gbc.pc(), 0x7500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0337
        gbc.setState(0x986c, 0x9b82, 0x3300, 0xe757, 0xc27f, 0xde5f, 0x1, 0x1);
        gbc.writeMem(0x986c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9b82);
        EXPECT(gbc.pc(), 0x986d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986c), 0xba);
        // BA 0338
        gbc.setState(0x9b1b, 0xa2ae, 0xf9e0, 0xfab6, 0xf17f, 0x11b2, 0x0, 0x1);
        gbc.writeMem(0x9b1b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa2ae);
        EXPECT(gbc.pc(), 0x9b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b1b), 0xba);
        // BA 0339
        gbc.setState(0x8f1e, 0xc0d4, 0x160, 0xb53f, 0x2b80, 0x1caa, 0x0, 0x0);
        gbc.writeMem(0x8f1e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xc0d4);
        EXPECT(gbc.pc(), 0x8f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1e), 0xba);
        // BA 033A
        gbc.setState(0xb991, 0x56a0, 0x69f0, 0x65a7, 0x9bc3, 0xc1c7, 0x0, 0x1);
        gbc.writeMem(0xb991, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x56a0);
        EXPECT(gbc.pc(), 0xb992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb991), 0xba);
        // BA 033B
        gbc.setState(0xcbcf, 0xc3ec, 0x1270, 0x4e9b, 0xa3d9, 0x1e5d, 0x0, 0x1);
        gbc.writeMem(0xcbcf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc3ec);
        EXPECT(gbc.pc(), 0xcbd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbcf), 0xba);
        // BA 033C
        gbc.setState(0xb481, 0x44ae, 0xa480, 0x6dbc, 0x812d, 0x6f04, 0x1, 0x0);
        gbc.writeMem(0xb481, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x44ae);
        EXPECT(gbc.pc(), 0xb482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb481), 0xba);
        // BA 033D
        gbc.setState(0xd186, 0x514e, 0xe790, 0xf6c3, 0xbd68, 0x10e9, 0x0, 0x1);
        gbc.writeMem(0xd186, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x514e);
        EXPECT(gbc.pc(), 0xd187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd186), 0xba);
        // BA 033E
        gbc.setState(0x7a8f, 0x42b9, 0x9920, 0xfe2a, 0x4325, 0x3cd8, 0x0, 0x0);
        gbc.writeMem(0x7a8f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x42b9);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 033F
        gbc.setState(0x8192, 0x4fe4, 0x7030, 0x25fc, 0x6e90, 0x8c6d, 0x0, 0x1);
        gbc.writeMem(0x8192, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4fe4);
        EXPECT(gbc.pc(), 0x8193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8192), 0xba);
        // BA 0340
        gbc.setState(0x1099, 0xbeec, 0x6490, 0x549f, 0x7f34, 0x6b5c, 0x1, 0x1);
        gbc.writeMem(0x1099, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbeec);
        EXPECT(gbc.pc(), 0x109a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0341
        gbc.setState(0x7858, 0x3d68, 0x5b50, 0xe742, 0xee1f, 0x1995, 0x1, 0x1);
        gbc.writeMem(0x7858, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3d68);
        EXPECT(gbc.pc(), 0x7859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0342
        gbc.setState(0xe2f6, 0xee77, 0x4b40, 0x2d47, 0xb7b7, 0x6edf, 0x0, 0x1);
        gbc.writeMem(0xe2f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xee77);
        EXPECT(gbc.pc(), 0xe2f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f6), 0xba);
        // BA 0343
        gbc.setState(0x9ef2, 0xe7b0, 0xaf30, 0x45b, 0xb481, 0x6de1, 0x0, 0x1);
        gbc.writeMem(0x9ef2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe7b0);
        EXPECT(gbc.pc(), 0x9ef3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef2), 0xba);
        // BA 0344
        gbc.setState(0x380e, 0x2198, 0xfd50, 0xf725, 0x50e6, 0x8c47, 0x1, 0x1);
        gbc.writeMem(0x380e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2198);
        EXPECT(gbc.pc(), 0x380f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0345
        gbc.setState(0x1637, 0x87d2, 0x2030, 0x4b38, 0x620f, 0x4ed4, 0x0, 0x0);
        gbc.writeMem(0x1637, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x87d2);
        EXPECT(gbc.pc(), 0x1638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0347
        gbc.setState(0x7c22, 0x2bc7, 0x5250, 0xa65f, 0x780b, 0x60c3, 0x0, 0x1);
        gbc.writeMem(0x7c22, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2bc7);
        EXPECT(gbc.pc(), 0x7c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0348
        gbc.setState(0x57ad, 0x6859, 0x99f0, 0x2315, 0x665b, 0xfc96, 0x1, 0x0);
        gbc.writeMem(0x57ad, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6859);
        EXPECT(gbc.pc(), 0x57ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0349
        gbc.setState(0x5a33, 0x393c, 0x5650, 0xa811, 0x7a96, 0x8ed2, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x393c);
        EXPECT(gbc.pc(), 0x5a34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 034A
        gbc.setState(0x75f6, 0x39b, 0x47b0, 0xe5d9, 0xb2c2, 0xc7b0, 0x0, 0x0);
        gbc.writeMem(0x75f6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x39b);
        EXPECT(gbc.pc(), 0x75f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 034B
        gbc.setState(0x21cb, 0x2863, 0xbde0, 0x703a, 0xddf2, 0xd492, 0x1, 0x1);
        gbc.writeMem(0x21cb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2863);
        EXPECT(gbc.pc(), 0x21cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 034D
        gbc.setState(0x6926, 0x1c5a, 0x650, 0x45cf, 0x9556, 0x945d, 0x1, 0x0);
        gbc.writeMem(0x6926, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x1c5a);
        EXPECT(gbc.pc(), 0x6927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 034E
        gbc.setState(0xa1a2, 0xd3dc, 0x3ea0, 0x11f6, 0x4cb5, 0x54b2, 0x0, 0x0);
        gbc.writeMem(0xa1a2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd3dc);
        EXPECT(gbc.pc(), 0xa1a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a2), 0xba);
        // BA 0350
        gbc.setState(0xb707, 0xcfa6, 0x2010, 0xd0f2, 0xd847, 0xcc04, 0x1, 0x1);
        gbc.writeMem(0xb707, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcfa6);
        EXPECT(gbc.pc(), 0xb708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb707), 0xba);
        // BA 0351
        gbc.setState(0x14e8, 0x95b0, 0x3030, 0xe849, 0x527a, 0x61bc, 0x1, 0x0);
        gbc.writeMem(0x14e8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x95b0);
        EXPECT(gbc.pc(), 0x14e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0352
        gbc.setState(0x7e4b, 0x4cfe, 0x5070, 0x2736, 0xfcf2, 0xd12c, 0x0, 0x0);
        gbc.writeMem(0x7e4b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4cfe);
        EXPECT(gbc.pc(), 0x7e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0353
        gbc.setState(0xedde, 0x5999, 0xea0, 0xdb0b, 0x830e, 0xe79a, 0x0, 0x0);
        gbc.writeMem(0xedde, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5999);
        EXPECT(gbc.pc(), 0xeddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedde), 0xba);
        // BA 0354
        gbc.setState(0x4bf, 0xbd91, 0x9ee0, 0x83c4, 0x62ca, 0x5fc9, 0x0, 0x0);
        gbc.writeMem(0x4bf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbd91);
        EXPECT(gbc.pc(), 0x4c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0355
        gbc.setState(0x6ef6, 0x1498, 0x40a0, 0x347a, 0xc5fc, 0xd006, 0x0, 0x0);
        gbc.writeMem(0x6ef6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1498);
        EXPECT(gbc.pc(), 0x6ef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0356
        gbc.setState(0x2a69, 0x5bfa, 0x4350, 0xe92, 0x2445, 0xa004, 0x0, 0x1);
        gbc.writeMem(0x2a69, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5bfa);
        EXPECT(gbc.pc(), 0x2a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0357
        gbc.setState(0x443e, 0xcdeb, 0xfbf0, 0x1b8f, 0x2caf, 0x781f, 0x0, 0x1);
        gbc.writeMem(0x443e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xcdeb);
        EXPECT(gbc.pc(), 0x443f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0358
        gbc.setState(0xd02a, 0x36e7, 0xcb00, 0x8f24, 0x3c83, 0xb897, 0x0, 0x1);
        gbc.writeMem(0xd02a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x36e7);
        EXPECT(gbc.pc(), 0xd02b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd02a), 0xba);
        // BA 0359
        gbc.setState(0x9b15, 0xc3cc, 0xdf60, 0x4316, 0x5777, 0x953d, 0x1, 0x0);
        gbc.writeMem(0x9b15, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc3cc);
        EXPECT(gbc.pc(), 0x9b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b15), 0xba);
        // BA 035A
        gbc.setState(0xcb3d, 0xa9cb, 0xc000, 0x61d6, 0x18dd, 0xc388, 0x1, 0x0);
        gbc.writeMem(0xcb3d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa9cb);
        EXPECT(gbc.pc(), 0xcb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3d), 0xba);
        // BA 035B
        gbc.setState(0x53fa, 0x4207, 0xf8a0, 0x97c1, 0xd737, 0x2334, 0x1, 0x1);
        gbc.writeMem(0x53fa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4207);
        EXPECT(gbc.pc(), 0x53fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 035C
        gbc.setState(0xe234, 0xe78d, 0x38d0, 0x4c4, 0xd1a9, 0x7ade, 0x0, 0x0);
        gbc.writeMem(0xe234, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0xe235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe234), 0xba);
        // BA 035D
        gbc.setState(0x201f, 0xd29a, 0xf7d0, 0xa17b, 0xccb6, 0x82f7, 0x1, 0x0);
        gbc.writeMem(0x201f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd29a);
        EXPECT(gbc.pc(), 0x2020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 035E
        gbc.setState(0xc144, 0x84d5, 0xc500, 0xd0c2, 0xd2a6, 0x54ca, 0x0, 0x0);
        gbc.writeMem(0xc144, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x84d5);
        EXPECT(gbc.pc(), 0xc145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc144), 0xba);
        // BA 035F
        gbc.setState(0x8ba6, 0xe78f, 0xff0, 0x3474, 0xf632, 0x5811, 0x0, 0x1);
        gbc.writeMem(0x8ba6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe78f);
        EXPECT(gbc.pc(), 0x8ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0xba);
        // BA 0360
        gbc.setState(0xa2dd, 0x8ced, 0xe830, 0x1f87, 0x1604, 0x3441, 0x0, 0x1);
        gbc.writeMem(0xa2dd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8ced);
        EXPECT(gbc.pc(), 0xa2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2dd), 0xba);
        // BA 0361
        gbc.setState(0x8037, 0x20ff, 0xaa30, 0xa918, 0x30f0, 0xe9f3, 0x1, 0x1);
        gbc.writeMem(0x8037, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x20ff);
        EXPECT(gbc.pc(), 0x8038);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8037), 0xba);
        // BA 0362
        gbc.setState(0x83e3, 0x3d7b, 0xa440, 0x796d, 0x3942, 0xf141, 0x1, 0x1);
        gbc.writeMem(0x83e3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3d7b);
        EXPECT(gbc.pc(), 0x83e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e3), 0xba);
        // BA 0363
        gbc.setState(0x2aa2, 0xb029, 0x5d70, 0xcae0, 0xcae3, 0xa63d, 0x0, 0x0);
        gbc.writeMem(0x2aa2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb029);
        EXPECT(gbc.pc(), 0x2aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0364
        gbc.setState(0x7bb8, 0x86ab, 0x4a50, 0xe27d, 0x198c, 0xae1f, 0x0, 0x0);
        gbc.writeMem(0x7bb8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x86ab);
        EXPECT(gbc.pc(), 0x7bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0365
        gbc.setState(0xab54, 0x915c, 0xea30, 0x2bbf, 0x47b1, 0xde69, 0x1, 0x1);
        gbc.writeMem(0xab54, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x915c);
        EXPECT(gbc.pc(), 0xab55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab54), 0xba);
        // BA 0366
        gbc.setState(0x38a8, 0xa528, 0x6250, 0x5fe1, 0x3f6e, 0x2502, 0x0, 0x0);
        gbc.writeMem(0x38a8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa528);
        EXPECT(gbc.pc(), 0x38a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 0367
        gbc.setState(0x3c54, 0x8a8, 0xbf20, 0xc726, 0xc651, 0x396c, 0x0, 0x1);
        gbc.writeMem(0x3c54, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8a8);
        EXPECT(gbc.pc(), 0x3c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0369
        gbc.setState(0xcc96, 0x96b, 0xdd90, 0x8dab, 0xbde3, 0xa20f, 0x0, 0x0);
        gbc.writeMem(0xcc96, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x96b);
        EXPECT(gbc.pc(), 0xcc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc96), 0xba);
        // BA 036A
        gbc.setState(0x82e8, 0x310c, 0x1eb0, 0xa2e1, 0x7ad1, 0x963b, 0x0, 0x0);
        gbc.writeMem(0x82e8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x310c);
        EXPECT(gbc.pc(), 0x82e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e8), 0xba);
        // BA 036B
        gbc.setState(0x7b2a, 0xb8fc, 0x3f50, 0x63ef, 0x8beb, 0x1eaa, 0x1, 0x1);
        gbc.writeMem(0x7b2a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb8fc);
        EXPECT(gbc.pc(), 0x7b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 036C
        gbc.setState(0x4fe4, 0x3e8e, 0x560, 0xa334, 0xf205, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0x4fe4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3e8e);
        EXPECT(gbc.pc(), 0x4fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 036D
        gbc.setState(0x5494, 0x3606, 0x4750, 0x3a2a, 0x5570, 0xc700, 0x1, 0x1);
        gbc.writeMem(0x5494, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x3606);
        EXPECT(gbc.pc(), 0x5495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 036E
        gbc.setState(0x9ffe, 0x3d56, 0xa490, 0x4e2d, 0x7215, 0xbdde, 0x0, 0x0);
        gbc.writeMem(0x9ffe, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3d56);
        EXPECT(gbc.pc(), 0x9fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffe), 0xba);
        // BA 036F
        gbc.setState(0x743, 0x9e93, 0x2b10, 0x9365, 0xe67c, 0x3e9e, 0x1, 0x0);
        gbc.writeMem(0x743, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9e93);
        EXPECT(gbc.pc(), 0x744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0370
        gbc.setState(0x22f5, 0x19b2, 0xbe80, 0xd8de, 0x853f, 0x29e5, 0x0, 0x1);
        gbc.writeMem(0x22f5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x19b2);
        EXPECT(gbc.pc(), 0x22f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0371
        gbc.setState(0xbde8, 0xd0dc, 0x7a90, 0x371d, 0xc584, 0x7f2f, 0x1, 0x1);
        gbc.writeMem(0xbde8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd0dc);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde8), 0xba);
        // BA 0372
        gbc.setState(0x29e3, 0x432e, 0x570, 0x6989, 0x7d6d, 0x7d80, 0x0, 0x1);
        gbc.writeMem(0x29e3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0x29e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0373
        gbc.setState(0x95ed, 0xd13b, 0xdd20, 0xa5b2, 0x6f40, 0x1145, 0x0, 0x1);
        gbc.writeMem(0x95ed, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd13b);
        EXPECT(gbc.pc(), 0x95ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95ed), 0xba);
        // BA 0374
        gbc.setState(0x56f5, 0x945a, 0x55c0, 0xd45b, 0x99b4, 0x70bd, 0x0, 0x0);
        gbc.writeMem(0x56f5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x945a);
        EXPECT(gbc.pc(), 0x56f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0375
        gbc.setState(0x51b0, 0x8d5f, 0x5e00, 0x348b, 0x4912, 0xcebc, 0x0, 0x1);
        gbc.writeMem(0x51b0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8d5f);
        EXPECT(gbc.pc(), 0x51b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0376
        gbc.setState(0xd08, 0x2327, 0x5a80, 0x4c2e, 0xd37d, 0x14a8, 0x0, 0x0);
        gbc.writeMem(0xd08, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2327);
        EXPECT(gbc.pc(), 0xd09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0377
        gbc.setState(0x3122, 0x6ca, 0x9620, 0x7312, 0xd640, 0xd415, 0x1, 0x0);
        gbc.writeMem(0x3122, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6ca);
        EXPECT(gbc.pc(), 0x3123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0378
        gbc.setState(0xab2, 0x806e, 0x5240, 0x8ed2, 0xda0d, 0xa3c0, 0x0, 0x1);
        gbc.writeMem(0xab2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x806e);
        EXPECT(gbc.pc(), 0xab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0379
        gbc.setState(0x627, 0x3602, 0xdb60, 0x9039, 0x3699, 0xe1ea, 0x0, 0x0);
        gbc.writeMem(0x627, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3602);
        EXPECT(gbc.pc(), 0x628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 037A
        gbc.setState(0x539f, 0x541b, 0xa980, 0x5244, 0xaab, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0x539f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x541b);
        EXPECT(gbc.pc(), 0x53a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 037B
        gbc.setState(0x882e, 0xfe7b, 0x36e0, 0x4813, 0xa2b9, 0x7296, 0x1, 0x1);
        gbc.writeMem(0x882e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfe7b);
        EXPECT(gbc.pc(), 0x882f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882e), 0xba);
        // BA 037C
        gbc.setState(0xc7c1, 0xf8c3, 0x4a80, 0xf044, 0x3267, 0x9fd9, 0x1, 0x1);
        gbc.writeMem(0xc7c1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf8c3);
        EXPECT(gbc.pc(), 0xc7c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c1), 0xba);
        // BA 037D
        gbc.setState(0xc0ba, 0x54c7, 0x2d60, 0xb1d0, 0xecea, 0xbbd8, 0x0, 0x0);
        gbc.writeMem(0xc0ba, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x54c7);
        EXPECT(gbc.pc(), 0xc0bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0ba), 0xba);
        // BA 037E
        gbc.setState(0x46a0, 0xdc74, 0x22e0, 0x388b, 0x76, 0x5d3, 0x1, 0x1);
        gbc.writeMem(0x46a0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdc74);
        EXPECT(gbc.pc(), 0x46a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 037F
        gbc.setState(0xa12c, 0xb240, 0x4430, 0xd706, 0x41fc, 0x275f, 0x0, 0x1);
        gbc.writeMem(0xa12c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb240);
        EXPECT(gbc.pc(), 0xa12d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12c), 0xba);
        // BA 0380
        gbc.setState(0x243c, 0x5ec5, 0x25c0, 0xe8c0, 0x2f7, 0x2725, 0x1, 0x0);
        gbc.writeMem(0x243c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5ec5);
        EXPECT(gbc.pc(), 0x243d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0381
        gbc.setState(0xa2d1, 0x1f39, 0xf100, 0xa56f, 0x3ed, 0xf5e2, 0x0, 0x1);
        gbc.writeMem(0xa2d1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1f39);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d1), 0xba);
        // BA 0382
        gbc.setState(0xc68d, 0xed28, 0xb720, 0x4532, 0x4ce4, 0xe555, 0x1, 0x0);
        gbc.writeMem(0xc68d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xed28);
        EXPECT(gbc.pc(), 0xc68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68d), 0xba);
        // BA 0383
        gbc.setState(0xb07d, 0x2e0d, 0xd840, 0xd49, 0x92ed, 0x71d2, 0x1, 0x0);
        gbc.writeMem(0xb07d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2e0d);
        EXPECT(gbc.pc(), 0xb07e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb07d), 0xba);
        // BA 0384
        gbc.setState(0x2e5a, 0x90cd, 0x6f50, 0xd90d, 0xc4aa, 0xfe4b, 0x1, 0x1);
        gbc.writeMem(0x2e5a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x90cd);
        EXPECT(gbc.pc(), 0x2e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0385
        gbc.setState(0x855c, 0xb113, 0xba50, 0xd31a, 0xedb4, 0x8c9b, 0x0, 0x0);
        gbc.writeMem(0x855c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb113);
        EXPECT(gbc.pc(), 0x855d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855c), 0xba);
        // BA 0386
        gbc.setState(0xdb98, 0x29b0, 0xc5c0, 0x3a5f, 0xf3ed, 0xc166, 0x0, 0x1);
        gbc.writeMem(0xdb98, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x29b0);
        EXPECT(gbc.pc(), 0xdb99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb98), 0xba);
        // BA 0387
        gbc.setState(0x604d, 0x42c0, 0x99e0, 0xe6ea, 0xfbcb, 0x4b27, 0x1, 0x1);
        gbc.writeMem(0x604d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x42c0);
        EXPECT(gbc.pc(), 0x604e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0388
        gbc.setState(0x624e, 0xe493, 0x8ef0, 0x9038, 0xfc3b, 0x60d9, 0x0, 0x1);
        gbc.writeMem(0x624e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe493);
        EXPECT(gbc.pc(), 0x624f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0389
        gbc.setState(0x22fa, 0x5339, 0x8470, 0x29ee, 0xb732, 0x4ceb, 0x1, 0x0);
        gbc.writeMem(0x22fa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5339);
        EXPECT(gbc.pc(), 0x22fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 038A
        gbc.setState(0x5d14, 0x5a3b, 0x53e0, 0x2e04, 0x647d, 0x778, 0x1, 0x0);
        gbc.writeMem(0x5d14, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5a3b);
        EXPECT(gbc.pc(), 0x5d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 038B
        gbc.setState(0x990b, 0x124b, 0xac90, 0x4ac8, 0x5396, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x990b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x124b);
        EXPECT(gbc.pc(), 0x990c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990b), 0xba);
        // BA 038C
        gbc.setState(0xc438, 0xd844, 0x2340, 0x52ea, 0x88a2, 0x8006, 0x1, 0x1);
        gbc.writeMem(0xc438, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd844);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc438), 0xba);
        // BA 038D
        gbc.setState(0x13ab, 0xa6f, 0xd780, 0x8595, 0x96e6, 0x1126, 0x0, 0x1);
        gbc.writeMem(0x13ab, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa6f);
        EXPECT(gbc.pc(), 0x13ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 038E
        gbc.setState(0x4e00, 0x98a6, 0xae90, 0x9343, 0x678f, 0xaa11, 0x1, 0x0);
        gbc.writeMem(0x4e00, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x98a6);
        EXPECT(gbc.pc(), 0x4e01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 038F
        gbc.setState(0xc5b6, 0x38e2, 0x7a10, 0x8d21, 0xde93, 0x46ba, 0x0, 0x1);
        gbc.writeMem(0xc5b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x38e2);
        EXPECT(gbc.pc(), 0xc5b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b6), 0xba);
        // BA 0390
        gbc.setState(0x794d, 0xb20f, 0x34f0, 0x4893, 0x3b02, 0x99db, 0x0, 0x0);
        gbc.writeMem(0x794d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb20f);
        EXPECT(gbc.pc(), 0x794e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 0391
        gbc.setState(0x76d6, 0x7b5a, 0xba60, 0xb318, 0xb0ff, 0xf7d8, 0x1, 0x0);
        gbc.writeMem(0x76d6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7b5a);
        EXPECT(gbc.pc(), 0x76d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 0392
        gbc.setState(0xda9b, 0xfa30, 0x42d0, 0x481c, 0xd0c6, 0x6579, 0x0, 0x0);
        gbc.writeMem(0xda9b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfa30);
        EXPECT(gbc.pc(), 0xda9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9b), 0xba);
        // BA 0393
        gbc.setState(0x4ab1, 0x6465, 0x3d80, 0xabe9, 0x6054, 0xb034, 0x0, 0x1);
        gbc.writeMem(0x4ab1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6465);
        EXPECT(gbc.pc(), 0x4ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0394
        gbc.setState(0x9b77, 0x8739, 0xa2c0, 0xc504, 0xb480, 0xd806, 0x1, 0x1);
        gbc.writeMem(0x9b77, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8739);
        EXPECT(gbc.pc(), 0x9b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b77), 0xba);
        // BA 0395
        gbc.setState(0x637b, 0xcbae, 0x3230, 0xfe7b, 0xf2b2, 0xf2a5, 0x1, 0x1);
        gbc.writeMem(0x637b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcbae);
        EXPECT(gbc.pc(), 0x637c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0396
        gbc.setState(0x79c4, 0xa8cf, 0x8cf0, 0x5bd7, 0xd4af, 0x7059, 0x1, 0x1);
        gbc.writeMem(0x79c4, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa8cf);
        EXPECT(gbc.pc(), 0x79c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 0397
        gbc.setState(0xa0a6, 0x348, 0x23b0, 0xdd0a, 0x486d, 0x69f7, 0x0, 0x1);
        gbc.writeMem(0xa0a6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x348);
        EXPECT(gbc.pc(), 0xa0a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a6), 0xba);
        // BA 0398
        gbc.setState(0x99c1, 0x3a96, 0x7a70, 0xe1a, 0x505, 0xd9e2, 0x0, 0x1);
        gbc.writeMem(0x99c1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3a96);
        EXPECT(gbc.pc(), 0x99c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c1), 0xba);
        // BA 0399
        gbc.setState(0x46e8, 0xc4fb, 0xffd0, 0xa1d2, 0xc5c, 0xaaf3, 0x1, 0x0);
        gbc.writeMem(0x46e8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc4fb);
        EXPECT(gbc.pc(), 0x46e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 039A
        gbc.setState(0xae23, 0x420f, 0x6850, 0xf3d, 0xb5e1, 0xa5a5, 0x1, 0x0);
        gbc.writeMem(0xae23, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x420f);
        EXPECT(gbc.pc(), 0xae24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae23), 0xba);
        // BA 039B
        gbc.setState(0x6e89, 0x85d6, 0xefb0, 0xe04f, 0x67ff, 0x8de0, 0x1, 0x1);
        gbc.writeMem(0x6e89, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x85d6);
        EXPECT(gbc.pc(), 0x6e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 039C
        gbc.setState(0xc10a, 0xcd1c, 0xffe0, 0x627d, 0x21e8, 0x4b0a, 0x0, 0x1);
        gbc.writeMem(0xc10a, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xcd1c);
        EXPECT(gbc.pc(), 0xc10b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10a), 0xba);
        // BA 039D
        gbc.setState(0x7c36, 0x5f1a, 0xdd10, 0x85d2, 0x5637, 0xef68, 0x0, 0x1);
        gbc.writeMem(0x7c36, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5f1a);
        EXPECT(gbc.pc(), 0x7c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 039E
        gbc.setState(0xd9fd, 0x8ffa, 0x7b40, 0x14fe, 0x77ee, 0xae29, 0x1, 0x0);
        gbc.writeMem(0xd9fd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8ffa);
        EXPECT(gbc.pc(), 0xd9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fd), 0xba);
        // BA 039F
        gbc.setState(0xe108, 0xebe3, 0x7ae0, 0xe06b, 0x7322, 0x7640, 0x1, 0x1);
        gbc.writeMem(0xe108, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0xe109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe108), 0xba);
        // BA 03A0
        gbc.setState(0x6700, 0x5fbd, 0x43f0, 0x6a22, 0x3ad8, 0x3a53, 0x0, 0x0);
        gbc.writeMem(0x6700, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5fbd);
        EXPECT(gbc.pc(), 0x6701);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03A1
        gbc.setState(0xe7c5, 0x6182, 0xd550, 0x2530, 0xab6b, 0x5b91, 0x0, 0x1);
        gbc.writeMem(0xe7c5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6182);
        EXPECT(gbc.pc(), 0xe7c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7c5), 0xba);
        // BA 03A2
        gbc.setState(0x695, 0x7699, 0x6f00, 0xe189, 0x49d9, 0x473c, 0x1, 0x1);
        gbc.writeMem(0x695, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7699);
        EXPECT(gbc.pc(), 0x696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03A3
        gbc.setState(0x14d8, 0x6f6b, 0x8ef0, 0x2d6e, 0x3d58, 0x9397, 0x0, 0x1);
        gbc.writeMem(0x14d8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6f6b);
        EXPECT(gbc.pc(), 0x14d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03A4
        gbc.setState(0x38d2, 0x99e0, 0x9730, 0xdbe0, 0x8e58, 0x54bc, 0x1, 0x0);
        gbc.writeMem(0x38d2, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x99e0);
        EXPECT(gbc.pc(), 0x38d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03A5
        gbc.setState(0x205, 0x9815, 0x81f0, 0x2b1a, 0xba55, 0x90a7, 0x0, 0x0);
        gbc.writeMem(0x205, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9815);
        EXPECT(gbc.pc(), 0x206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03A6
        gbc.setState(0x7007, 0xe521, 0xee20, 0xa516, 0xc3b9, 0x2f61, 0x0, 0x1);
        gbc.writeMem(0x7007, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe521);
        EXPECT(gbc.pc(), 0x7008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03A7
        gbc.setState(0x8e36, 0x8ee, 0x5d0, 0xb2a2, 0xedcd, 0x1adf, 0x0, 0x0);
        gbc.writeMem(0x8e36, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8ee);
        EXPECT(gbc.pc(), 0x8e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e36), 0xba);
        // BA 03A8
        gbc.setState(0x1878, 0xd88f, 0x3690, 0x6ada, 0x6189, 0x26e1, 0x1, 0x0);
        gbc.writeMem(0x1878, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd88f);
        EXPECT(gbc.pc(), 0x1879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03A9
        gbc.setState(0x189e, 0x8605, 0x6020, 0x2601, 0xd916, 0x4a70, 0x1, 0x1);
        gbc.writeMem(0x189e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0x189f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03AA
        gbc.setState(0x1401, 0xd651, 0x57d0, 0x4c17, 0x6142, 0x70cd, 0x0, 0x1);
        gbc.writeMem(0x1401, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd651);
        EXPECT(gbc.pc(), 0x1402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03AB
        gbc.setState(0x790e, 0xbc80, 0xb490, 0x1365, 0x1327, 0x997a, 0x1, 0x0);
        gbc.writeMem(0x790e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbc80);
        EXPECT(gbc.pc(), 0x790f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03AC
        gbc.setState(0x6f7d, 0xe874, 0x9e00, 0x4ef5, 0x4254, 0xfa57, 0x0, 0x1);
        gbc.writeMem(0x6f7d, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe874);
        EXPECT(gbc.pc(), 0x6f7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03AD
        gbc.setState(0xd306, 0xc100, 0x9130, 0x2a05, 0xd3e7, 0x8d59, 0x0, 0x0);
        gbc.writeMem(0xd306, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc100);
        EXPECT(gbc.pc(), 0xd307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd306), 0xba);
        // BA 03AF
        gbc.setState(0x8982, 0x5b36, 0x8480, 0x7936, 0x9f14, 0x695e, 0x1, 0x1);
        gbc.writeMem(0x8982, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5b36);
        EXPECT(gbc.pc(), 0x8983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8982), 0xba);
        // BA 03B0
        gbc.setState(0x1604, 0xa682, 0xdd10, 0x1864, 0x2d42, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x1604, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa682);
        EXPECT(gbc.pc(), 0x1605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03B2
        gbc.setState(0x792b, 0xfa08, 0xb090, 0x4f45, 0xa201, 0x5b3, 0x0, 0x0);
        gbc.writeMem(0x792b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xfa08);
        EXPECT(gbc.pc(), 0x792c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03B3
        gbc.setState(0x83cb, 0x9fe, 0x6a00, 0xbf1f, 0x48f4, 0x5e1c, 0x1, 0x1);
        gbc.writeMem(0x83cb, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9fe);
        EXPECT(gbc.pc(), 0x83cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83cb), 0xba);
        // BA 03B4
        gbc.setState(0x59b6, 0x599f, 0xe20, 0x8955, 0x4e0a, 0x8633, 0x1, 0x1);
        gbc.writeMem(0x59b6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x599f);
        EXPECT(gbc.pc(), 0x59b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03B5
        gbc.setState(0x1422, 0x293e, 0xf700, 0x1def, 0x7666, 0x2912, 0x1, 0x1);
        gbc.writeMem(0x1422, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x293e);
        EXPECT(gbc.pc(), 0x1423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03B6
        gbc.setState(0x3ab9, 0x165c, 0xe790, 0xe254, 0xd26e, 0x9cc2, 0x0, 0x1);
        gbc.writeMem(0x3ab9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x165c);
        EXPECT(gbc.pc(), 0x3aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03B8
        gbc.setState(0x6796, 0xb0f0, 0xb210, 0x46c4, 0xbf7e, 0x8b6c, 0x1, 0x0);
        gbc.writeMem(0x6796, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb0f0);
        EXPECT(gbc.pc(), 0x6797);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03B9
        gbc.setState(0x3845, 0x286b, 0x80d0, 0xafab, 0x73a4, 0xbf42, 0x1, 0x0);
        gbc.writeMem(0x3845, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x286b);
        EXPECT(gbc.pc(), 0x3846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03BA
        gbc.setState(0x91f3, 0x9b43, 0xc3b0, 0xbd73, 0xc4c6, 0x2e72, 0x1, 0x1);
        gbc.writeMem(0x91f3, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9b43);
        EXPECT(gbc.pc(), 0x91f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f3), 0xba);
        // BA 03BB
        gbc.setState(0xebf5, 0x599d, 0x5ee0, 0xea6b, 0x601d, 0x8898, 0x1, 0x1);
        gbc.writeMem(0xebf5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x599d);
        EXPECT(gbc.pc(), 0xebf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf5), 0xba);
        // BA 03BC
        gbc.setState(0x3b9b, 0x52f8, 0x6e80, 0x66ee, 0xad0b, 0xb4e8, 0x0, 0x0);
        gbc.writeMem(0x3b9b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x52f8);
        EXPECT(gbc.pc(), 0x3b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03BD
        gbc.setState(0x98de, 0xdb21, 0x4170, 0x729b, 0xbfd4, 0xe704, 0x0, 0x1);
        gbc.writeMem(0x98de, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xdb21);
        EXPECT(gbc.pc(), 0x98df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98de), 0xba);
        // BA 03BE
        gbc.setState(0x7d16, 0x40c2, 0xf8c0, 0x2cfb, 0x8aaf, 0x611e, 0x0, 0x1);
        gbc.writeMem(0x7d16, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x40c2);
        EXPECT(gbc.pc(), 0x7d17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03BF
        gbc.setState(0xc1e, 0x26f2, 0x6f50, 0xce00, 0x878c, 0xde39, 0x0, 0x0);
        gbc.writeMem(0xc1e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x26f2);
        EXPECT(gbc.pc(), 0xc1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03C0
        gbc.setState(0x5648, 0x57f9, 0x6e60, 0xc4fa, 0x57f5, 0x2e56, 0x0, 0x1);
        gbc.writeMem(0x5648, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x57f9);
        EXPECT(gbc.pc(), 0x5649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03C1
        gbc.setState(0x7adf, 0x6017, 0x9950, 0x2054, 0xabfc, 0x7d49, 0x1, 0x1);
        gbc.writeMem(0x7adf, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6017);
        EXPECT(gbc.pc(), 0x7ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03C2
        gbc.setState(0x59c9, 0x2ef8, 0x52e0, 0x2d, 0xbfde, 0x5556, 0x1, 0x0);
        gbc.writeMem(0x59c9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2ef8);
        EXPECT(gbc.pc(), 0x59ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03C3
        gbc.setState(0x79a1, 0x3278, 0x8e20, 0xcd34, 0xc444, 0x3119, 0x1, 0x1);
        gbc.writeMem(0x79a1, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3278);
        EXPECT(gbc.pc(), 0x79a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03C4
        gbc.setState(0xe24e, 0xbbae, 0xf7a0, 0x8a8b, 0xe5c4, 0xbd45, 0x0, 0x0);
        gbc.writeMem(0xe24e, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbbae);
        EXPECT(gbc.pc(), 0xe24f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24e), 0xba);
        // BA 03C5
        gbc.setState(0x28c5, 0x8a48, 0x6f50, 0x9462, 0xa872, 0x81a9, 0x1, 0x0);
        gbc.writeMem(0x28c5, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8a48);
        EXPECT(gbc.pc(), 0x28c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03C6
        gbc.setState(0x9df7, 0x671, 0x36e0, 0x9c5b, 0x11bd, 0xdaba, 0x0, 0x1);
        gbc.writeMem(0x9df7, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x671);
        EXPECT(gbc.pc(), 0x9df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df7), 0xba);
        // BA 03C7
        gbc.setState(0x4a96, 0xe7d1, 0x7e60, 0x68db, 0xaf25, 0xc18f, 0x1, 0x0);
        gbc.writeMem(0x4a96, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe7d1);
        EXPECT(gbc.pc(), 0x4a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03C8
        gbc.setState(0x4c0, 0xd234, 0x4690, 0xf9c3, 0xfbe1, 0x808a, 0x0, 0x1);
        gbc.writeMem(0x4c0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xd234);
        EXPECT(gbc.pc(), 0x4c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03C9
        gbc.setState(0xaecd, 0x5a6, 0xcd0, 0x948, 0x6f1d, 0xfcea, 0x0, 0x1);
        gbc.writeMem(0xaecd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5a6);
        EXPECT(gbc.pc(), 0xaece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaecd), 0xba);
        // BA 03CA
        gbc.setState(0x2abd, 0x2462, 0xb900, 0xc9c8, 0x142, 0xf769, 0x1, 0x0);
        gbc.writeMem(0x2abd, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2462);
        EXPECT(gbc.pc(), 0x2abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03CB
        gbc.setState(0x3454, 0xc42f, 0x3760, 0xb87d, 0x89c0, 0x2136, 0x0, 0x1);
        gbc.writeMem(0x3454, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc42f);
        EXPECT(gbc.pc(), 0x3455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03CC
        gbc.setState(0x99d8, 0x3f10, 0x4270, 0x41be, 0xd617, 0x745d, 0x0, 0x0);
        gbc.writeMem(0x99d8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3f10);
        EXPECT(gbc.pc(), 0x99d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d8), 0xba);
        // BA 03CD
        gbc.setState(0xbd8, 0xe6a0, 0x3490, 0xc91c, 0x4744, 0x8f52, 0x1, 0x0);
        gbc.writeMem(0xbd8, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe6a0);
        EXPECT(gbc.pc(), 0xbd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03CE
        gbc.setState(0x995c, 0xfc01, 0x8c90, 0xa2fa, 0xed57, 0x4303, 0x1, 0x1);
        gbc.writeMem(0x995c, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xfc01);
        EXPECT(gbc.pc(), 0x995d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x995c), 0xba);
        // BA 03CF
        gbc.setState(0x2684, 0xfcc4, 0x5d10, 0xf2e6, 0x23f0, 0x6fa7, 0x1, 0x0);
        gbc.writeMem(0x2684, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfcc4);
        EXPECT(gbc.pc(), 0x2685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03D0
        gbc.setState(0xd860, 0xc48d, 0xc920, 0xfee9, 0xe758, 0xd5ab, 0x0, 0x1);
        gbc.writeMem(0xd860, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc48d);
        EXPECT(gbc.pc(), 0xd861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd860), 0xba);
        // BA 03D1
        gbc.setState(0x3d0b, 0x525, 0x9210, 0x9ec9, 0x1cf, 0xd939, 0x1, 0x0);
        gbc.writeMem(0x3d0b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x525);
        EXPECT(gbc.pc(), 0x3d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03D2
        gbc.setState(0xc7a9, 0xbed1, 0x2f70, 0xdbf8, 0xfdcd, 0xe778, 0x1, 0x0);
        gbc.writeMem(0xc7a9, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbed1);
        EXPECT(gbc.pc(), 0xc7aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7a9), 0xba);
        // BA 03D3
        gbc.setState(0xbd5b, 0xd539, 0xfa10, 0x47c1, 0x1f9c, 0x3129, 0x1, 0x1);
        gbc.writeMem(0xbd5b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd539);
        EXPECT(gbc.pc(), 0xbd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5b), 0xba);
        // BA 03D4
        gbc.setState(0x8783, 0xcde6, 0xcf60, 0x689d, 0x99f1, 0x54a9, 0x1, 0x1);
        gbc.writeMem(0x8783, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xcde6);
        EXPECT(gbc.pc(), 0x8784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8783), 0xba);
        // BA 03D5
        gbc.setState(0x4555, 0x3d6a, 0xc6c0, 0xcbf5, 0x3b15, 0xb29b, 0x1, 0x0);
        gbc.writeMem(0x4555, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x3d6a);
        EXPECT(gbc.pc(), 0x4556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03D6
        gbc.setState(0xcd49, 0x6e1d, 0xd470, 0x4f0b, 0x3306, 0xfad9, 0x0, 0x1);
        gbc.writeMem(0xcd49, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6e1d);
        EXPECT(gbc.pc(), 0xcd4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd49), 0xba);
        // BA 03D7
        gbc.setState(0xaff6, 0x7b67, 0x26b0, 0xecf1, 0xc149, 0x8a62, 0x0, 0x0);
        gbc.writeMem(0xaff6, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7b67);
        EXPECT(gbc.pc(), 0xaff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff6), 0xba);
        // BA 03D8
        gbc.setState(0x23, 0x7b58, 0x380, 0x9ecd, 0x7c65, 0x289d, 0x0, 0x0);
        gbc.writeMem(0x23, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x7b58);
        EXPECT(gbc.pc(), 0x24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // BA 03D9
        gbc.setState(0xaa79, 0xd29a, 0xc340, 0x8e80, 0xc4e0, 0x933f, 0x1, 0x1);
        gbc.writeMem(0xaa79, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd29a);
        EXPECT(gbc.pc(), 0xaa7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa79), 0xba);
        // BA 03DB
        gbc.setState(0x319f, 0x16ba, 0xa760, 0xf2db, 0x81cf, 0x2b97, 0x1, 0x0);
        gbc.writeMem(0x319f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x16ba);
        EXPECT(gbc.pc(), 0x31a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // BA 03DC
        gbc.setState(0xea2f, 0x8cfb, 0xf830, 0x1ddd, 0x650a, 0x497b, 0x1, 0x0);
        gbc.writeMem(0xea2f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8cfb);
        EXPECT(gbc.pc(), 0xea30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2f), 0xba);
        // BA 03DE
        gbc.setState(0x5fda, 0xd7d7, 0xd280, 0x6ab3, 0x7706, 0x2cc4, 0x0, 0x0);
        gbc.writeMem(0x5fda, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd7d7);
        EXPECT(gbc.pc(), 0x5fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // BA 03DF
        gbc.setState(0x1394, 0xee99, 0x820, 0x5c5b, 0xe3d0, 0x59e0, 0x0, 0x0);
        gbc.writeMem(0x1394, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xee99);
        EXPECT(gbc.pc(), 0x1395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03E0
        gbc.setState(0xadfa, 0x4446, 0x8330, 0x803f, 0xc0bb, 0xdc36, 0x1, 0x1);
        gbc.writeMem(0xadfa, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4446);
        EXPECT(gbc.pc(), 0xadfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadfa), 0xba);
        // BA 03E1
        gbc.setState(0x828f, 0xffd9, 0xe630, 0xa943, 0x4c67, 0xa8c1, 0x0, 0x0);
        gbc.writeMem(0x828f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xffd9);
        EXPECT(gbc.pc(), 0x8290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828f), 0xba);
        // BA 03E2
        gbc.setState(0xb9db, 0x5175, 0xbe00, 0x7c5b, 0x55cd, 0xf970, 0x0, 0x1);
        gbc.writeMem(0xb9db, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5175);
        EXPECT(gbc.pc(), 0xb9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9db), 0xba);
        // BA 03E3
        gbc.setState(0xc212, 0x1f45, 0xf010, 0xf99c, 0x472d, 0xac5e, 0x1, 0x1);
        gbc.writeMem(0xc212, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1f45);
        EXPECT(gbc.pc(), 0xc213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc212), 0xba);
        // BA 03E5
        gbc.setState(0x6d0, 0x68f, 0x5900, 0x5d9f, 0xd9e1, 0x6804, 0x1, 0x0);
        gbc.writeMem(0x6d0, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x68f);
        EXPECT(gbc.pc(), 0x6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // BA 03E6
        gbc.setState(0x8b0b, 0x6ee9, 0xcd20, 0xd530, 0x4c07, 0x6fc9, 0x1, 0x1);
        gbc.writeMem(0x8b0b, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6ee9);
        EXPECT(gbc.pc(), 0x8b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b0b), 0xba);
        // BA 03E7
        gbc.setState(0xe7df, 0x8e28, 0x8870, 0xf725, 0x22bf, 0xa777, 0x0, 0x0);
        gbc.writeMem(0xe7df, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8e28);
        EXPECT(gbc.pc(), 0xe7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7df), 0xba);
    }
}
#endif
