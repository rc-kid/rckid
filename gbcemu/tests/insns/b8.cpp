#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_b8)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_b8) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // B8 0000
        gbc.setState(0xbfde, 0x6fc4, 0x1ca0, 0x9cf8, 0x9c78, 0x73be, 0x1, 0x1);
        gbc.writeMem(0xbfde, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6fc4);
        EXPECT(gbc.pc(), 0xbfdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfde), 0xb8);
        // B8 0002
        gbc.setState(0x85cd, 0xcd30, 0xd160, 0x3f32, 0x800a, 0xbb50, 0x0, 0x0);
        gbc.writeMem(0x85cd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcd30);
        EXPECT(gbc.pc(), 0x85ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cd), 0xb8);
        // B8 0003
        gbc.setState(0x67c0, 0xc3c8, 0x8de0, 0xcc55, 0x562f, 0x85ef, 0x0, 0x1);
        gbc.writeMem(0x67c0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc3c8);
        EXPECT(gbc.pc(), 0x67c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0004
        gbc.setState(0xbaab, 0x589d, 0xc780, 0x7b0b, 0xc7ec, 0xa918, 0x0, 0x1);
        gbc.writeMem(0xbaab, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x589d);
        EXPECT(gbc.pc(), 0xbaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaab), 0xb8);
        // B8 0005
        gbc.setState(0x8c06, 0xe1ef, 0x5b30, 0x591b, 0x590, 0x763e, 0x0, 0x1);
        gbc.writeMem(0x8c06, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe1ef);
        EXPECT(gbc.pc(), 0x8c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c06), 0xb8);
        // B8 0007
        gbc.setState(0x52ab, 0x16da, 0x82b0, 0x7829, 0x4780, 0xcc89, 0x0, 0x1);
        gbc.writeMem(0x52ab, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x16da);
        EXPECT(gbc.pc(), 0x52ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0008
        gbc.setState(0xe54f, 0xa2b5, 0xf320, 0x5ca7, 0xc452, 0x1879, 0x1, 0x1);
        gbc.writeMem(0xe54f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa2b5);
        EXPECT(gbc.pc(), 0xe550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe54f), 0xb8);
        // B8 0009
        gbc.setState(0x33b2, 0xfea0, 0x1530, 0x6c8c, 0xa650, 0x9821, 0x0, 0x0);
        gbc.writeMem(0x33b2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xfea0);
        EXPECT(gbc.pc(), 0x33b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 000A
        gbc.setState(0xc990, 0xa00f, 0xe1e0, 0xa703, 0x24a1, 0x98f0, 0x0, 0x0);
        gbc.writeMem(0xc990, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa00f);
        EXPECT(gbc.pc(), 0xc991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc990), 0xb8);
        // B8 000B
        gbc.setState(0x7f42, 0x5bf5, 0x6f80, 0x3815, 0xe3a0, 0x7ba3, 0x1, 0x1);
        gbc.writeMem(0x7f42, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5bf5);
        EXPECT(gbc.pc(), 0x7f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 000C
        gbc.setState(0xc5c0, 0x26f8, 0x5c00, 0xaa7d, 0xc4ac, 0x7cac, 0x0, 0x0);
        gbc.writeMem(0xc5c0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x26f8);
        EXPECT(gbc.pc(), 0xc5c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c0), 0xb8);
        // B8 000D
        gbc.setState(0x37f2, 0x835d, 0x67f0, 0xe79b, 0x3ab8, 0x56b9, 0x0, 0x0);
        gbc.writeMem(0x37f2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x835d);
        EXPECT(gbc.pc(), 0x37f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 000E
        gbc.setState(0x1f78, 0xd276, 0x1720, 0x582c, 0xe037, 0x1396, 0x1, 0x1);
        gbc.writeMem(0x1f78, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd276);
        EXPECT(gbc.pc(), 0x1f79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 000F
        gbc.setState(0x7776, 0x273f, 0x15d0, 0x1137, 0x4616, 0xd219, 0x0, 0x1);
        gbc.writeMem(0x7776, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x273f);
        EXPECT(gbc.pc(), 0x7777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0010
        gbc.setState(0xf5, 0x9556, 0xb010, 0xb215, 0x5ea8, 0x2482, 0x1, 0x1);
        gbc.writeMem(0xf5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x9556);
        EXPECT(gbc.pc(), 0xf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0011
        gbc.setState(0xb66c, 0x435b, 0xbd80, 0x9f95, 0x72c, 0x432e, 0x0, 0x1);
        gbc.writeMem(0xb66c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x435b);
        EXPECT(gbc.pc(), 0xb66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb66c), 0xb8);
        // B8 0012
        gbc.setState(0x924, 0x1cc8, 0x1690, 0xf642, 0x579f, 0x38e6, 0x0, 0x1);
        gbc.writeMem(0x924, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1cc8);
        EXPECT(gbc.pc(), 0x925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0013
        gbc.setState(0xae74, 0x96b0, 0xd340, 0x1930, 0x95d4, 0x6241, 0x1, 0x0);
        gbc.writeMem(0xae74, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x96b0);
        EXPECT(gbc.pc(), 0xae75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae74), 0xb8);
        // B8 0014
        gbc.setState(0x50fd, 0x668, 0xa1e0, 0x8c27, 0xd6ef, 0x433c, 0x0, 0x0);
        gbc.writeMem(0x50fd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x668);
        EXPECT(gbc.pc(), 0x50fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0015
        gbc.setState(0xb0c0, 0x3c16, 0xac00, 0x89ff, 0x8f3e, 0xdeaa, 0x1, 0x1);
        gbc.writeMem(0xb0c0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3c16);
        EXPECT(gbc.pc(), 0xb0c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c0), 0xb8);
        // B8 0016
        gbc.setState(0xe14d, 0x1b59, 0x9380, 0x25f9, 0x4ae5, 0x7d0b, 0x0, 0x1);
        gbc.writeMem(0xe14d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1b59);
        EXPECT(gbc.pc(), 0xe14e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe14d), 0xb8);
        // B8 0017
        gbc.setState(0x8dd2, 0xf541, 0x8810, 0x88f8, 0xbe6b, 0x11a4, 0x0, 0x0);
        gbc.writeMem(0x8dd2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf541);
        EXPECT(gbc.pc(), 0x8dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd2), 0xb8);
        // B8 0018
        gbc.setState(0x6f90, 0x478c, 0x1530, 0x4779, 0x484e, 0x1a17, 0x0, 0x1);
        gbc.writeMem(0x6f90, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x478c);
        EXPECT(gbc.pc(), 0x6f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0019
        gbc.setState(0xe2a2, 0x739e, 0xa20, 0x2276, 0xb736, 0xede7, 0x1, 0x1);
        gbc.writeMem(0xe2a2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x739e);
        EXPECT(gbc.pc(), 0xe2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a2), 0xb8);
        // B8 001A
        gbc.setState(0x16f1, 0xf72b, 0x9c0, 0x6c74, 0x8d11, 0x6d3f, 0x1, 0x1);
        gbc.writeMem(0x16f1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xf72b);
        EXPECT(gbc.pc(), 0x16f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 001B
        gbc.setState(0x23cc, 0x4fae, 0x5510, 0x532f, 0x9d22, 0xf7d6, 0x0, 0x0);
        gbc.writeMem(0x23cc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x4fae);
        EXPECT(gbc.pc(), 0x23cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 001C
        gbc.setState(0x25d8, 0x60a6, 0xf920, 0xe025, 0x4523, 0xc1cb, 0x1, 0x1);
        gbc.writeMem(0x25d8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x60a6);
        EXPECT(gbc.pc(), 0x25d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 001D
        gbc.setState(0xd7b5, 0xfa0, 0xe020, 0xcc11, 0xefc4, 0xb1a6, 0x1, 0x0);
        gbc.writeMem(0xd7b5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfa0);
        EXPECT(gbc.pc(), 0xd7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b5), 0xb8);
        // B8 001E
        gbc.setState(0xad03, 0x5b2c, 0x43d0, 0xee8a, 0x8f1c, 0xebd4, 0x0, 0x1);
        gbc.writeMem(0xad03, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5b2c);
        EXPECT(gbc.pc(), 0xad04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad03), 0xb8);
        // B8 001F
        gbc.setState(0x77a2, 0x99f3, 0x2250, 0xf770, 0x5b60, 0x6062, 0x0, 0x0);
        gbc.writeMem(0x77a2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x99f3);
        EXPECT(gbc.pc(), 0x77a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0020
        gbc.setState(0xdec2, 0xaa3b, 0xe220, 0xefde, 0x230, 0xf37d, 0x1, 0x0);
        gbc.writeMem(0xdec2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xaa3b);
        EXPECT(gbc.pc(), 0xdec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdec2), 0xb8);
        // B8 0021
        gbc.setState(0x6872, 0x8686, 0xef0, 0x4d7d, 0xf3eb, 0x4112, 0x0, 0x0);
        gbc.writeMem(0x6872, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8686);
        EXPECT(gbc.pc(), 0x6873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0022
        gbc.setState(0x4cf, 0x34c1, 0x28c0, 0xb161, 0x4443, 0xe9e2, 0x1, 0x1);
        gbc.writeMem(0x4cf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x34c1);
        EXPECT(gbc.pc(), 0x4d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0023
        gbc.setState(0xf24, 0xed4e, 0x9180, 0x1f95, 0xb2a9, 0x82dc, 0x0, 0x0);
        gbc.writeMem(0xf24, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xed4e);
        EXPECT(gbc.pc(), 0xf25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0024
        gbc.setState(0x14e9, 0x4dc5, 0x9410, 0x34b9, 0xcc2d, 0xbffb, 0x0, 0x1);
        gbc.writeMem(0x14e9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4dc5);
        EXPECT(gbc.pc(), 0x14ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0025
        gbc.setState(0x36b6, 0x8083, 0xd6c0, 0x1c87, 0x4efc, 0xd39, 0x1, 0x0);
        gbc.writeMem(0x36b6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8083);
        EXPECT(gbc.pc(), 0x36b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0026
        gbc.setState(0x190, 0x129d, 0x90f0, 0x67b3, 0x6d50, 0xef7e, 0x1, 0x0);
        gbc.writeMem(0x190, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x129d);
        EXPECT(gbc.pc(), 0x191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0027
        gbc.setState(0x354d, 0x94d1, 0x2e40, 0x6529, 0xad0e, 0x5337, 0x1, 0x0);
        gbc.writeMem(0x354d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x94d1);
        EXPECT(gbc.pc(), 0x354e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0028
        gbc.setState(0x900d, 0x294f, 0x1ee0, 0x2f4f, 0xae45, 0x19f4, 0x0, 0x1);
        gbc.writeMem(0x900d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x294f);
        EXPECT(gbc.pc(), 0x900e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900d), 0xb8);
        // B8 0029
        gbc.setState(0xe026, 0x10b5, 0xbd90, 0x9579, 0x3493, 0xb538, 0x1, 0x0);
        gbc.writeMem(0xe026, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x10b5);
        EXPECT(gbc.pc(), 0xe027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe026), 0xb8);
        // B8 002A
        gbc.setState(0xae7d, 0x8935, 0x5b20, 0xc554, 0x69bf, 0x7128, 0x1, 0x0);
        gbc.writeMem(0xae7d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8935);
        EXPECT(gbc.pc(), 0xae7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae7d), 0xb8);
        // B8 002B
        gbc.setState(0xd0cd, 0xced8, 0x3f30, 0x619, 0xfe2e, 0x2fa9, 0x0, 0x0);
        gbc.writeMem(0xd0cd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xced8);
        EXPECT(gbc.pc(), 0xd0ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cd), 0xb8);
        // B8 002C
        gbc.setState(0xdeb3, 0x6260, 0x6c90, 0xe04c, 0xc012, 0x363d, 0x1, 0x0);
        gbc.writeMem(0xdeb3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6260);
        EXPECT(gbc.pc(), 0xdeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb3), 0xb8);
        // B8 002E
        gbc.setState(0x66b1, 0x1b43, 0x3f10, 0xc45a, 0x6fe3, 0xc93, 0x1, 0x0);
        gbc.writeMem(0x66b1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1b43);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 002F
        gbc.setState(0xaac0, 0x43de, 0xa760, 0x6890, 0x993e, 0xcc37, 0x1, 0x1);
        gbc.writeMem(0xaac0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x43de);
        EXPECT(gbc.pc(), 0xaac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaac0), 0xb8);
        // B8 0030
        gbc.setState(0x75e, 0xa38f, 0x79b0, 0x6886, 0xbb6e, 0x79f, 0x0, 0x0);
        gbc.writeMem(0x75e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa38f);
        EXPECT(gbc.pc(), 0x75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0031
        gbc.setState(0xa246, 0xa9dd, 0xa0, 0x6772, 0x2569, 0xa2f3, 0x0, 0x0);
        gbc.writeMem(0xa246, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa9dd);
        EXPECT(gbc.pc(), 0xa247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa246), 0xb8);
        // B8 0032
        gbc.setState(0xe5bf, 0x2961, 0xece0, 0xc511, 0x2379, 0xe1a3, 0x0, 0x0);
        gbc.writeMem(0xe5bf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2961);
        EXPECT(gbc.pc(), 0xe5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5bf), 0xb8);
        // B8 0033
        gbc.setState(0x8a26, 0x5f6c, 0xe740, 0x898c, 0x73ca, 0x3ee4, 0x1, 0x1);
        gbc.writeMem(0x8a26, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5f6c);
        EXPECT(gbc.pc(), 0x8a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a26), 0xb8);
        // B8 0034
        gbc.setState(0x433b, 0x9026, 0xf960, 0x3c16, 0x8894, 0xb0e4, 0x1, 0x0);
        gbc.writeMem(0x433b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9026);
        EXPECT(gbc.pc(), 0x433c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0035
        gbc.setState(0xa52a, 0x2cf9, 0x7c00, 0xa468, 0xc49d, 0xfb2c, 0x1, 0x0);
        gbc.writeMem(0xa52a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2cf9);
        EXPECT(gbc.pc(), 0xa52b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52a), 0xb8);
        // B8 0036
        gbc.setState(0x3c33, 0x16a2, 0x8d10, 0x6ab9, 0x23aa, 0x2075, 0x1, 0x1);
        gbc.writeMem(0x3c33, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x16a2);
        EXPECT(gbc.pc(), 0x3c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0037
        gbc.setState(0x817, 0x4106, 0x87e0, 0x21c2, 0x9945, 0xdf3d, 0x0, 0x1);
        gbc.writeMem(0x817, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4106);
        EXPECT(gbc.pc(), 0x818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0038
        gbc.setState(0x33c2, 0x8ddb, 0xbba0, 0xd542, 0x38d3, 0xc298, 0x1, 0x1);
        gbc.writeMem(0x33c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8ddb);
        EXPECT(gbc.pc(), 0x33c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 003A
        gbc.setState(0x9f38, 0x8889, 0x4db0, 0x346e, 0xe37b, 0x7ab0, 0x0, 0x1);
        gbc.writeMem(0x9f38, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8889);
        EXPECT(gbc.pc(), 0x9f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f38), 0xb8);
        // B8 003B
        gbc.setState(0x1b76, 0x2291, 0xaff0, 0x88ba, 0xf4d1, 0xb6ee, 0x1, 0x1);
        gbc.writeMem(0x1b76, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2291);
        EXPECT(gbc.pc(), 0x1b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 003C
        gbc.setState(0x85d5, 0x3cba, 0x1340, 0x2a9e, 0xd511, 0xaa40, 0x1, 0x0);
        gbc.writeMem(0x85d5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x3cba);
        EXPECT(gbc.pc(), 0x85d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d5), 0xb8);
        // B8 003D
        gbc.setState(0xd3d, 0xe85d, 0xea80, 0xde61, 0x1a3c, 0xa3dc, 0x1, 0x0);
        gbc.writeMem(0xd3d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe85d);
        EXPECT(gbc.pc(), 0xd3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 003E
        gbc.setState(0xa67a, 0x6b74, 0x4c60, 0xed13, 0xbadf, 0x876b, 0x0, 0x1);
        gbc.writeMem(0xa67a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6b74);
        EXPECT(gbc.pc(), 0xa67b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67a), 0xb8);
        // B8 003F
        gbc.setState(0x6ff9, 0x7467, 0x3d00, 0xcdcc, 0xfe94, 0x7eef, 0x1, 0x0);
        gbc.writeMem(0x6ff9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7467);
        EXPECT(gbc.pc(), 0x6ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0040
        gbc.setState(0x73a9, 0x122a, 0x4290, 0xd5aa, 0xe155, 0x4b99, 0x0, 0x1);
        gbc.writeMem(0x73a9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x122a);
        EXPECT(gbc.pc(), 0x73aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0041
        gbc.setState(0x71b2, 0x2f87, 0x53e0, 0xc334, 0x8a52, 0xabe7, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2f87);
        EXPECT(gbc.pc(), 0x71b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0042
        gbc.setState(0x7bb2, 0x42dd, 0xf5f0, 0x437c, 0x8b87, 0xe87b, 0x0, 0x1);
        gbc.writeMem(0x7bb2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x42dd);
        EXPECT(gbc.pc(), 0x7bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0043
        gbc.setState(0x9f04, 0x1683, 0x28d0, 0xe19c, 0xc4b7, 0xc674, 0x0, 0x0);
        gbc.writeMem(0x9f04, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1683);
        EXPECT(gbc.pc(), 0x9f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f04), 0xb8);
        // B8 0044
        gbc.setState(0x5ae3, 0xee77, 0x4410, 0xaca1, 0x5928, 0x3498, 0x0, 0x0);
        gbc.writeMem(0x5ae3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xee77);
        EXPECT(gbc.pc(), 0x5ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0045
        gbc.setState(0xb60e, 0x3ac, 0xeab0, 0x66b5, 0xed4, 0x1001, 0x1, 0x1);
        gbc.writeMem(0xb60e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3ac);
        EXPECT(gbc.pc(), 0xb60f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60e), 0xb8);
        // B8 0046
        gbc.setState(0xbb27, 0xd16a, 0xae0, 0xd1e4, 0x36ff, 0x290f, 0x1, 0x1);
        gbc.writeMem(0xbb27, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd16a);
        EXPECT(gbc.pc(), 0xbb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb27), 0xb8);
        // B8 0047
        gbc.setState(0xc113, 0x2a22, 0x8390, 0x60d7, 0xda99, 0x583e, 0x0, 0x1);
        gbc.writeMem(0xc113, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0xc114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc113), 0xb8);
        // B8 0048
        gbc.setState(0x3b41, 0x8844, 0x4750, 0x583a, 0x1938, 0x29c9, 0x1, 0x0);
        gbc.writeMem(0x3b41, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8844);
        EXPECT(gbc.pc(), 0x3b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0049
        gbc.setState(0x3e5a, 0xd3f6, 0xf790, 0x40c4, 0x8684, 0x9271, 0x1, 0x1);
        gbc.writeMem(0x3e5a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd3f6);
        EXPECT(gbc.pc(), 0x3e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 004A
        gbc.setState(0xdfbb, 0x7c30, 0x9b90, 0x1657, 0x94c6, 0xde65, 0x1, 0x0);
        gbc.writeMem(0xdfbb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7c30);
        EXPECT(gbc.pc(), 0xdfbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfbb), 0xb8);
        // B8 004B
        gbc.setState(0x5e28, 0xd9aa, 0xac50, 0xc81c, 0x75ef, 0x5f6b, 0x1, 0x1);
        gbc.writeMem(0x5e28, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd9aa);
        EXPECT(gbc.pc(), 0x5e29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 004C
        gbc.setState(0x7c88, 0x1e53, 0x1a30, 0xd5bc, 0xb55c, 0xfb86, 0x1, 0x1);
        gbc.writeMem(0x7c88, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1e53);
        EXPECT(gbc.pc(), 0x7c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 004E
        gbc.setState(0x4ec6, 0x8801, 0xe590, 0xbb05, 0x267f, 0xcb8d, 0x0, 0x0);
        gbc.writeMem(0x4ec6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8801);
        EXPECT(gbc.pc(), 0x4ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 004F
        gbc.setState(0xce70, 0x9843, 0xe2e0, 0x215b, 0x2fea, 0xd51f, 0x0, 0x1);
        gbc.writeMem(0xce70, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9843);
        EXPECT(gbc.pc(), 0xce71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce70), 0xb8);
        // B8 0050
        gbc.setState(0x1f14, 0xc3ca, 0x6dc0, 0xf566, 0x3911, 0x5b23, 0x0, 0x1);
        gbc.writeMem(0x1f14, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc3ca);
        EXPECT(gbc.pc(), 0x1f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0051
        gbc.setState(0x384f, 0xc08b, 0xa7f0, 0x229b, 0x6bce, 0xd91a, 0x1, 0x0);
        gbc.writeMem(0x384f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc08b);
        EXPECT(gbc.pc(), 0x3850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0052
        gbc.setState(0x543b, 0x9ac9, 0x5e00, 0x7406, 0xb257, 0xaec7, 0x0, 0x1);
        gbc.writeMem(0x543b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9ac9);
        EXPECT(gbc.pc(), 0x543c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0053
        gbc.setState(0xc4fd, 0xaceb, 0xa4b0, 0xcc16, 0x9881, 0x6d6f, 0x0, 0x0);
        gbc.writeMem(0xc4fd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaceb);
        EXPECT(gbc.pc(), 0xc4fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fd), 0xb8);
        // B8 0054
        gbc.setState(0xa8f3, 0xcad9, 0xb30, 0x99f2, 0x6581, 0x6419, 0x1, 0x0);
        gbc.writeMem(0xa8f3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcad9);
        EXPECT(gbc.pc(), 0xa8f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f3), 0xb8);
        // B8 0055
        gbc.setState(0x6da9, 0x2f30, 0x3de0, 0xcc1c, 0x436b, 0x5cbe, 0x1, 0x1);
        gbc.writeMem(0x6da9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2f30);
        EXPECT(gbc.pc(), 0x6daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0056
        gbc.setState(0x53c9, 0xb074, 0xffb0, 0xab49, 0xe925, 0x5832, 0x1, 0x0);
        gbc.writeMem(0x53c9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xb074);
        EXPECT(gbc.pc(), 0x53ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0057
        gbc.setState(0xe034, 0xdd67, 0xf0c0, 0x4489, 0x77e2, 0x5321, 0x1, 0x0);
        gbc.writeMem(0xe034, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdd67);
        EXPECT(gbc.pc(), 0xe035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe034), 0xb8);
        // B8 0058
        gbc.setState(0xee11, 0xbaef, 0x6110, 0x3c2f, 0x5d05, 0xaf7d, 0x0, 0x0);
        gbc.writeMem(0xee11, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbaef);
        EXPECT(gbc.pc(), 0xee12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee11), 0xb8);
        // B8 005B
        gbc.setState(0xa735, 0x74a5, 0x63e0, 0xd7d, 0xf034, 0x28bd, 0x1, 0x0);
        gbc.writeMem(0xa735, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x74a5);
        EXPECT(gbc.pc(), 0xa736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa735), 0xb8);
        // B8 005E
        gbc.setState(0x3067, 0xbb3d, 0x6500, 0xf106, 0x85d6, 0xc8e5, 0x0, 0x0);
        gbc.writeMem(0x3067, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xbb3d);
        EXPECT(gbc.pc(), 0x3068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 005F
        gbc.setState(0x6016, 0x5d15, 0xd8e0, 0x969, 0xddea, 0x1fdd, 0x1, 0x0);
        gbc.writeMem(0x6016, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5d15);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0060
        gbc.setState(0x9543, 0x4df9, 0xa7a0, 0x4334, 0x3429, 0x9f0d, 0x0, 0x0);
        gbc.writeMem(0x9543, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4df9);
        EXPECT(gbc.pc(), 0x9544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9543), 0xb8);
        // B8 0061
        gbc.setState(0xc26c, 0xd8ee, 0x7a90, 0x769e, 0x36f0, 0xe8cb, 0x1, 0x1);
        gbc.writeMem(0xc26c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd8ee);
        EXPECT(gbc.pc(), 0xc26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26c), 0xb8);
        // B8 0062
        gbc.setState(0xe983, 0x9cfe, 0x6280, 0x9095, 0x7cab, 0x3f3f, 0x0, 0x0);
        gbc.writeMem(0xe983, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x9cfe);
        EXPECT(gbc.pc(), 0xe984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe983), 0xb8);
        // B8 0063
        gbc.setState(0xe670, 0xc7eb, 0xa730, 0x33b, 0xd9ff, 0xe0d8, 0x0, 0x1);
        gbc.writeMem(0xe670, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc7eb);
        EXPECT(gbc.pc(), 0xe671);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe670), 0xb8);
        // B8 0064
        gbc.setState(0x7b43, 0x5916, 0xdd80, 0x7c46, 0x11d8, 0x1adc, 0x1, 0x0);
        gbc.writeMem(0x7b43, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5916);
        EXPECT(gbc.pc(), 0x7b44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0065
        gbc.setState(0x8ce7, 0xf4d7, 0x6800, 0xdaed, 0x42d2, 0x3a8b, 0x1, 0x0);
        gbc.writeMem(0x8ce7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf4d7);
        EXPECT(gbc.pc(), 0x8ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce7), 0xb8);
        // B8 0066
        gbc.setState(0x9654, 0x8f78, 0x6750, 0x4de0, 0xdb1f, 0x9bff, 0x0, 0x0);
        gbc.writeMem(0x9654, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x8f78);
        EXPECT(gbc.pc(), 0x9655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9654), 0xb8);
        // B8 0067
        gbc.setState(0x3e01, 0xad69, 0x21e0, 0x1a5f, 0x8c8, 0x2778, 0x1, 0x0);
        gbc.writeMem(0x3e01, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xad69);
        EXPECT(gbc.pc(), 0x3e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0068
        gbc.setState(0x2353, 0x227e, 0xf360, 0x2d1d, 0x8455, 0xe952, 0x0, 0x0);
        gbc.writeMem(0x2353, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x227e);
        EXPECT(gbc.pc(), 0x2354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0069
        gbc.setState(0x3829, 0x5fc6, 0x4950, 0xdbd5, 0xc326, 0x59bb, 0x0, 0x0);
        gbc.writeMem(0x3829, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5fc6);
        EXPECT(gbc.pc(), 0x382a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 006A
        gbc.setState(0x2b0a, 0x7755, 0x1ab0, 0x7a1c, 0x44ef, 0xd4ca, 0x1, 0x1);
        gbc.writeMem(0x2b0a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7755);
        EXPECT(gbc.pc(), 0x2b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 006B
        gbc.setState(0x20d4, 0x3808, 0x8b60, 0xffc6, 0x7651, 0xe28d, 0x1, 0x0);
        gbc.writeMem(0x20d4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3808);
        EXPECT(gbc.pc(), 0x20d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 006C
        gbc.setState(0x58d, 0xad9b, 0xbf40, 0x5ec3, 0xa322, 0x44bf, 0x1, 0x0);
        gbc.writeMem(0x58d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xad9b);
        EXPECT(gbc.pc(), 0x58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 006D
        gbc.setState(0x362c, 0x5475, 0x55f0, 0xd98f, 0x4d6d, 0x622c, 0x0, 0x0);
        gbc.writeMem(0x362c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5475);
        EXPECT(gbc.pc(), 0x362d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 006E
        gbc.setState(0xb93d, 0xd8a, 0x26e0, 0x1298, 0xb5a3, 0xd1b3, 0x1, 0x0);
        gbc.writeMem(0xb93d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd8a);
        EXPECT(gbc.pc(), 0xb93e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93d), 0xb8);
        // B8 006F
        gbc.setState(0xcf0c, 0x14b2, 0x430, 0x28f9, 0xf3b2, 0xff51, 0x1, 0x1);
        gbc.writeMem(0xcf0c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x14b2);
        EXPECT(gbc.pc(), 0xcf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0c), 0xb8);
        // B8 0070
        gbc.setState(0x56ab, 0x2951, 0x29a0, 0x1b59, 0x108e, 0x9b28, 0x1, 0x0);
        gbc.writeMem(0x56ab, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2951);
        EXPECT(gbc.pc(), 0x56ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0071
        gbc.setState(0x656b, 0x30e4, 0xc800, 0x18b1, 0x8014, 0xaff, 0x1, 0x0);
        gbc.writeMem(0x656b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x30e4);
        EXPECT(gbc.pc(), 0x656c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0072
        gbc.setState(0x40d3, 0x6130, 0xec90, 0x6a88, 0xe54a, 0xdbf5, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6130);
        EXPECT(gbc.pc(), 0x40d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0073
        gbc.setState(0xcfbb, 0x434b, 0xa130, 0xf42, 0x4be0, 0x34f6, 0x0, 0x1);
        gbc.writeMem(0xcfbb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x434b);
        EXPECT(gbc.pc(), 0xcfbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfbb), 0xb8);
        // B8 0074
        gbc.setState(0x454d, 0x2be8, 0x4cd0, 0x1546, 0x84aa, 0x6420, 0x1, 0x1);
        gbc.writeMem(0x454d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2be8);
        EXPECT(gbc.pc(), 0x454e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0075
        gbc.setState(0x9374, 0x7f77, 0xf990, 0xcbcc, 0xe068, 0x5b04, 0x0, 0x1);
        gbc.writeMem(0x9374, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7f77);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9374), 0xb8);
        // B8 0076
        gbc.setState(0x601f, 0x8a4d, 0x8250, 0x2d4c, 0x9066, 0x4bd3, 0x1, 0x0);
        gbc.writeMem(0x601f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8a4d);
        EXPECT(gbc.pc(), 0x6020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0077
        gbc.setState(0x9e6, 0x9871, 0x9940, 0xbb97, 0x5007, 0xc82f, 0x0, 0x1);
        gbc.writeMem(0x9e6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9871);
        EXPECT(gbc.pc(), 0x9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0078
        gbc.setState(0xbf1, 0xf25d, 0xa70, 0x1ece, 0xd162, 0xf3a, 0x1, 0x1);
        gbc.writeMem(0xbf1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf25d);
        EXPECT(gbc.pc(), 0xbf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0079
        gbc.setState(0xe941, 0xa96d, 0xf90, 0x9100, 0x1045, 0x3133, 0x1, 0x1);
        gbc.writeMem(0xe941, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa96d);
        EXPECT(gbc.pc(), 0xe942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe941), 0xb8);
        // B8 007A
        gbc.setState(0xccaa, 0xbcea, 0xf910, 0x3b0b, 0x8e7, 0x9399, 0x1, 0x1);
        gbc.writeMem(0xccaa, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbcea);
        EXPECT(gbc.pc(), 0xccab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccaa), 0xb8);
        // B8 007B
        gbc.setState(0x59dd, 0xdaf4, 0xc680, 0x1452, 0x488c, 0x4161, 0x1, 0x0);
        gbc.writeMem(0x59dd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdaf4);
        EXPECT(gbc.pc(), 0x59de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 007C
        gbc.setState(0xcc75, 0xff60, 0x87b0, 0xb93, 0x534, 0x6b3a, 0x1, 0x1);
        gbc.writeMem(0xcc75, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xff60);
        EXPECT(gbc.pc(), 0xcc76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc75), 0xb8);
        // B8 007D
        gbc.setState(0x8a5b, 0x90a5, 0x6b80, 0xbb90, 0xd1f5, 0x3594, 0x0, 0x0);
        gbc.writeMem(0x8a5b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x90a5);
        EXPECT(gbc.pc(), 0x8a5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a5b), 0xb8);
        // B8 007E
        gbc.setState(0xb01f, 0xb625, 0xceb0, 0xb2e1, 0x40e, 0x7770, 0x1, 0x0);
        gbc.writeMem(0xb01f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb625);
        EXPECT(gbc.pc(), 0xb020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01f), 0xb8);
        // B8 0080
        gbc.setState(0xdba, 0x1fab, 0x6ba0, 0xef3b, 0x7dd3, 0xdebd, 0x0, 0x1);
        gbc.writeMem(0xdba, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1fab);
        EXPECT(gbc.pc(), 0xdbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0081
        gbc.setState(0x3401, 0xc132, 0x12e0, 0x89ce, 0x3fc5, 0x414e, 0x0, 0x0);
        gbc.writeMem(0x3401, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc132);
        EXPECT(gbc.pc(), 0x3402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0082
        gbc.setState(0x8c67, 0x6cb9, 0xd480, 0x15f8, 0x9a4f, 0x96cd, 0x0, 0x1);
        gbc.writeMem(0x8c67, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6cb9);
        EXPECT(gbc.pc(), 0x8c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c67), 0xb8);
        // B8 0083
        gbc.setState(0x4fac, 0x9f82, 0x4d10, 0x80b, 0xc297, 0x1152, 0x0, 0x1);
        gbc.writeMem(0x4fac, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9f82);
        EXPECT(gbc.pc(), 0x4fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0084
        gbc.setState(0xd874, 0x4e64, 0x46e0, 0x5c8c, 0x9627, 0x26e7, 0x1, 0x1);
        gbc.writeMem(0xd874, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4e64);
        EXPECT(gbc.pc(), 0xd875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd874), 0xb8);
        // B8 0085
        gbc.setState(0x6055, 0xc8c6, 0x26a0, 0x5f41, 0xaf6f, 0x7cbc, 0x0, 0x1);
        gbc.writeMem(0x6055, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc8c6);
        EXPECT(gbc.pc(), 0x6056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0086
        gbc.setState(0xe9b8, 0xc5f3, 0xeb60, 0xf4d3, 0xe21, 0xa672, 0x0, 0x0);
        gbc.writeMem(0xe9b8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc5f3);
        EXPECT(gbc.pc(), 0xe9b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b8), 0xb8);
        // B8 0087
        gbc.setState(0xc7cd, 0x6e39, 0xd70, 0x6119, 0x6344, 0x2bf2, 0x0, 0x0);
        gbc.writeMem(0xc7cd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6e39);
        EXPECT(gbc.pc(), 0xc7ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7cd), 0xb8);
        // B8 0088
        gbc.setState(0x777, 0xa890, 0x2c40, 0x3cbd, 0xae9e, 0xd311, 0x0, 0x1);
        gbc.writeMem(0x777, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa890);
        EXPECT(gbc.pc(), 0x778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0089
        gbc.setState(0x314f, 0xd4e1, 0x1430, 0x9a93, 0xf7ca, 0x58fb, 0x0, 0x0);
        gbc.writeMem(0x314f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd4e1);
        EXPECT(gbc.pc(), 0x3150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 008B
        gbc.setState(0x7e4, 0x35bb, 0xb1c0, 0x88bc, 0xd13d, 0xe98f, 0x0, 0x1);
        gbc.writeMem(0x7e4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x35bb);
        EXPECT(gbc.pc(), 0x7e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 008C
        gbc.setState(0x96d5, 0xf36f, 0x3a40, 0x7657, 0xf6ef, 0xeb96, 0x0, 0x0);
        gbc.writeMem(0x96d5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf36f);
        EXPECT(gbc.pc(), 0x96d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d5), 0xb8);
        // B8 008E
        gbc.setState(0x6bf9, 0x3e4a, 0x2340, 0x8e06, 0x152e, 0x46d3, 0x1, 0x1);
        gbc.writeMem(0x6bf9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3e4a);
        EXPECT(gbc.pc(), 0x6bfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 008F
        gbc.setState(0x737d, 0x7b80, 0x7c0, 0x3441, 0xa5, 0xe243, 0x1, 0x0);
        gbc.writeMem(0x737d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7b80);
        EXPECT(gbc.pc(), 0x737e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0090
        gbc.setState(0xbe89, 0x22a2, 0xc780, 0x5242, 0x19b9, 0x91af, 0x0, 0x1);
        gbc.writeMem(0xbe89, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x22a2);
        EXPECT(gbc.pc(), 0xbe8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe89), 0xb8);
        // B8 0092
        gbc.setState(0xcf01, 0xcc81, 0x250, 0x93cb, 0xfe78, 0xe021, 0x1, 0x1);
        gbc.writeMem(0xcf01, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcc81);
        EXPECT(gbc.pc(), 0xcf02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf01), 0xb8);
        // B8 0093
        gbc.setState(0x393e, 0x958e, 0xc810, 0xfe9b, 0xd085, 0x7393, 0x1, 0x0);
        gbc.writeMem(0x393e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x958e);
        EXPECT(gbc.pc(), 0x393f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0094
        gbc.setState(0xa2bf, 0xd2e2, 0x4f00, 0xdc64, 0x6ede, 0x7dc5, 0x1, 0x0);
        gbc.writeMem(0xa2bf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd2e2);
        EXPECT(gbc.pc(), 0xa2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2bf), 0xb8);
        // B8 0095
        gbc.setState(0x2e94, 0xc395, 0xbeb0, 0xd39, 0x6b67, 0x7f37, 0x0, 0x1);
        gbc.writeMem(0x2e94, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc395);
        EXPECT(gbc.pc(), 0x2e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0096
        gbc.setState(0xb0d6, 0xcfbf, 0x14c0, 0x2ac2, 0xd500, 0x395d, 0x0, 0x1);
        gbc.writeMem(0xb0d6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcfbf);
        EXPECT(gbc.pc(), 0xb0d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d6), 0xb8);
        // B8 0097
        gbc.setState(0xc027, 0xe1eb, 0xec40, 0xbc79, 0x8d2d, 0x86fb, 0x1, 0x1);
        gbc.writeMem(0xc027, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe1eb);
        EXPECT(gbc.pc(), 0xc028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc027), 0xb8);
        // B8 0098
        gbc.setState(0x9909, 0x1beb, 0x36a0, 0xb6d, 0x3fb2, 0x7b14, 0x1, 0x1);
        gbc.writeMem(0x9909, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1beb);
        EXPECT(gbc.pc(), 0x990a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9909), 0xb8);
        // B8 0099
        gbc.setState(0xe62a, 0xb1b5, 0xf20, 0x71e4, 0x7ae7, 0x7718, 0x0, 0x1);
        gbc.writeMem(0xe62a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb1b5);
        EXPECT(gbc.pc(), 0xe62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62a), 0xb8);
        // B8 009A
        gbc.setState(0x9643, 0xdba8, 0xb3e0, 0xd0bc, 0x6f9a, 0x5927, 0x0, 0x0);
        gbc.writeMem(0x9643, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xdba8);
        EXPECT(gbc.pc(), 0x9644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9643), 0xb8);
        // B8 009D
        gbc.setState(0x28e8, 0x503, 0x8770, 0x3c19, 0x1266, 0x493f, 0x1, 0x1);
        gbc.writeMem(0x28e8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x503);
        EXPECT(gbc.pc(), 0x28e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 009E
        gbc.setState(0x6135, 0xb1cc, 0x4a40, 0x2606, 0xa918, 0x3ed6, 0x0, 0x1);
        gbc.writeMem(0x6135, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb1cc);
        EXPECT(gbc.pc(), 0x6136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 009F
        gbc.setState(0xcb7c, 0x7f2b, 0xb6d0, 0xae1c, 0xcfd, 0x5948, 0x1, 0x1);
        gbc.writeMem(0xcb7c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7f2b);
        EXPECT(gbc.pc(), 0xcb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7c), 0xb8);
        // B8 00A0
        gbc.setState(0x1793, 0x405d, 0x3550, 0xea15, 0x26e, 0x4c5c, 0x1, 0x1);
        gbc.writeMem(0x1793, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x405d);
        EXPECT(gbc.pc(), 0x1794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00A2
        gbc.setState(0xa462, 0xbbf6, 0x8010, 0x4a63, 0xc7df, 0xad47, 0x1, 0x1);
        gbc.writeMem(0xa462, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbbf6);
        EXPECT(gbc.pc(), 0xa463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa462), 0xb8);
        // B8 00A3
        gbc.setState(0x379e, 0x5920, 0x19d0, 0x4b19, 0xe431, 0x8500, 0x0, 0x0);
        gbc.writeMem(0x379e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5920);
        EXPECT(gbc.pc(), 0x379f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00A5
        gbc.setState(0x3796, 0x7bc3, 0x72c0, 0x15ff, 0x1fd5, 0x2030, 0x0, 0x1);
        gbc.writeMem(0x3796, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7bc3);
        EXPECT(gbc.pc(), 0x3797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00A6
        gbc.setState(0xac8e, 0xf2d8, 0xcfb0, 0x3924, 0xb89b, 0x8e1, 0x0, 0x0);
        gbc.writeMem(0xac8e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf2d8);
        EXPECT(gbc.pc(), 0xac8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8e), 0xb8);
        // B8 00A7
        gbc.setState(0x964, 0x321, 0xfc70, 0x3640, 0x794c, 0xe700, 0x0, 0x1);
        gbc.writeMem(0x964, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x321);
        EXPECT(gbc.pc(), 0x965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00A8
        gbc.setState(0x41a5, 0xa03, 0x7d20, 0x522f, 0x34a1, 0xdf1e, 0x0, 0x0);
        gbc.writeMem(0x41a5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa03);
        EXPECT(gbc.pc(), 0x41a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00A9
        gbc.setState(0x8a49, 0x85f6, 0x9080, 0xe6ac, 0xee79, 0x5014, 0x0, 0x0);
        gbc.writeMem(0x8a49, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x85f6);
        EXPECT(gbc.pc(), 0x8a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a49), 0xb8);
        // B8 00AA
        gbc.setState(0xc501, 0xbff1, 0x1ce0, 0xf78c, 0xcd34, 0x9637, 0x0, 0x0);
        gbc.writeMem(0xc501, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbff1);
        EXPECT(gbc.pc(), 0xc502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc501), 0xb8);
        // B8 00AB
        gbc.setState(0x3424, 0xdfab, 0x2e90, 0x984c, 0xabaa, 0x7bfa, 0x0, 0x1);
        gbc.writeMem(0x3424, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdfab);
        EXPECT(gbc.pc(), 0x3425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00AC
        gbc.setState(0x8ec3, 0xe9cc, 0xba00, 0x6ffb, 0x28c4, 0x822a, 0x1, 0x1);
        gbc.writeMem(0x8ec3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe9cc);
        EXPECT(gbc.pc(), 0x8ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec3), 0xb8);
        // B8 00AE
        gbc.setState(0x339e, 0x4087, 0xea0, 0x44c0, 0xf0ef, 0xb080, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4087);
        EXPECT(gbc.pc(), 0x339f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00AF
        gbc.setState(0xc3f0, 0x3604, 0xc1c0, 0x9bdb, 0x3232, 0x5091, 0x0, 0x0);
        gbc.writeMem(0xc3f0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3604);
        EXPECT(gbc.pc(), 0xc3f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f0), 0xb8);
        // B8 00B0
        gbc.setState(0x5409, 0x18a4, 0xa0, 0x8480, 0x995d, 0xd0cd, 0x1, 0x1);
        gbc.writeMem(0x5409, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x18a4);
        EXPECT(gbc.pc(), 0x540a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00B1
        gbc.setState(0xba12, 0x8d3c, 0x5860, 0xd156, 0x8778, 0x1de6, 0x1, 0x0);
        gbc.writeMem(0xba12, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8d3c);
        EXPECT(gbc.pc(), 0xba13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba12), 0xb8);
        // B8 00B2
        gbc.setState(0xec48, 0x187b, 0x5330, 0xd2ea, 0x3581, 0xaca6, 0x0, 0x1);
        gbc.writeMem(0xec48, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x187b);
        EXPECT(gbc.pc(), 0xec49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec48), 0xb8);
        // B8 00B3
        gbc.setState(0xe417, 0x839b, 0xc760, 0xe383, 0xbccb, 0x2ae0, 0x1, 0x0);
        gbc.writeMem(0xe417, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x839b);
        EXPECT(gbc.pc(), 0xe418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe417), 0xb8);
        // B8 00B4
        gbc.setState(0x4391, 0x9664, 0x3ae0, 0xd1b6, 0x2b00, 0x12c8, 0x0, 0x1);
        gbc.writeMem(0x4391, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9664);
        EXPECT(gbc.pc(), 0x4392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00B5
        gbc.setState(0x2616, 0x22d9, 0xa050, 0x389a, 0x38af, 0x61f7, 0x1, 0x1);
        gbc.writeMem(0x2616, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x22d9);
        EXPECT(gbc.pc(), 0x2617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00B6
        gbc.setState(0xcfb8, 0xbba8, 0x45f0, 0xa169, 0x4ba9, 0x187, 0x0, 0x1);
        gbc.writeMem(0xcfb8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbba8);
        EXPECT(gbc.pc(), 0xcfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb8), 0xb8);
        // B8 00B7
        gbc.setState(0xa164, 0xa011, 0xab40, 0x789e, 0xeb88, 0x647c, 0x0, 0x1);
        gbc.writeMem(0xa164, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa011);
        EXPECT(gbc.pc(), 0xa165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa164), 0xb8);
        // B8 00B8
        gbc.setState(0x6929, 0x7154, 0xc110, 0x30ad, 0x9ce2, 0x50a4, 0x1, 0x0);
        gbc.writeMem(0x6929, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7154);
        EXPECT(gbc.pc(), 0x692a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00B9
        gbc.setState(0xa1a0, 0x5dde, 0x5490, 0x9b9f, 0x9186, 0x8cf, 0x1, 0x1);
        gbc.writeMem(0xa1a0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0xa1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a0), 0xb8);
        // B8 00BA
        gbc.setState(0x7713, 0x16fc, 0xb4f0, 0x4597, 0xbd99, 0xe556, 0x0, 0x1);
        gbc.writeMem(0x7713, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x16fc);
        EXPECT(gbc.pc(), 0x7714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00BB
        gbc.setState(0xc1c7, 0x7b8e, 0x2fb0, 0x780d, 0x609f, 0x30d5, 0x0, 0x1);
        gbc.writeMem(0xc1c7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7b8e);
        EXPECT(gbc.pc(), 0xc1c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c7), 0xb8);
        // B8 00BC
        gbc.setState(0x6292, 0x96ee, 0x1aa0, 0x2688, 0x46cf, 0xa1b3, 0x1, 0x1);
        gbc.writeMem(0x6292, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x96ee);
        EXPECT(gbc.pc(), 0x6293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00BD
        gbc.setState(0xbfb4, 0xd3ae, 0x4480, 0x2d9, 0xa647, 0xa619, 0x0, 0x0);
        gbc.writeMem(0xbfb4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd3ae);
        EXPECT(gbc.pc(), 0xbfb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb4), 0xb8);
        // B8 00BE
        gbc.setState(0xa1fc, 0xfac8, 0xb9d0, 0x7255, 0xbf6c, 0x1a87, 0x1, 0x1);
        gbc.writeMem(0xa1fc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xfac8);
        EXPECT(gbc.pc(), 0xa1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fc), 0xb8);
        // B8 00BF
        gbc.setState(0x902c, 0xa63c, 0xbd90, 0xeb52, 0xc561, 0xeca6, 0x0, 0x1);
        gbc.writeMem(0x902c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa63c);
        EXPECT(gbc.pc(), 0x902d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902c), 0xb8);
        // B8 00C0
        gbc.setState(0xa8c6, 0xcdb7, 0xa590, 0xd597, 0xaf74, 0x9a4a, 0x0, 0x1);
        gbc.writeMem(0xa8c6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xcdb7);
        EXPECT(gbc.pc(), 0xa8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c6), 0xb8);
        // B8 00C1
        gbc.setState(0x8d03, 0xb9f3, 0xe7f0, 0x61b6, 0x77bf, 0xa855, 0x1, 0x1);
        gbc.writeMem(0x8d03, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb9f3);
        EXPECT(gbc.pc(), 0x8d04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d03), 0xb8);
        // B8 00C2
        gbc.setState(0x39a0, 0x89c, 0x8250, 0x8133, 0x8222, 0x9ba2, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x89c);
        EXPECT(gbc.pc(), 0x39a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00C3
        gbc.setState(0x4521, 0xec1a, 0x6490, 0xc6f5, 0x1882, 0xdb42, 0x0, 0x0);
        gbc.writeMem(0x4521, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xec1a);
        EXPECT(gbc.pc(), 0x4522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00C4
        gbc.setState(0x8c44, 0x8abc, 0xf9d0, 0x5239, 0xbb9f, 0xbe07, 0x1, 0x0);
        gbc.writeMem(0x8c44, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8abc);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c44), 0xb8);
        // B8 00C5
        gbc.setState(0xb32a, 0x5ab7, 0xaa20, 0x89a7, 0xbf2a, 0x78e9, 0x1, 0x0);
        gbc.writeMem(0xb32a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5ab7);
        EXPECT(gbc.pc(), 0xb32b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32a), 0xb8);
        // B8 00C6
        gbc.setState(0x80c1, 0xe852, 0x6c40, 0x603, 0x42db, 0x6549, 0x0, 0x1);
        gbc.writeMem(0x80c1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe852);
        EXPECT(gbc.pc(), 0x80c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c1), 0xb8);
        // B8 00C7
        gbc.setState(0xb5de, 0xb457, 0x79f0, 0xa227, 0xf0dc, 0xc5cc, 0x0, 0x0);
        gbc.writeMem(0xb5de, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb457);
        EXPECT(gbc.pc(), 0xb5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5de), 0xb8);
        // B8 00C8
        gbc.setState(0xd546, 0x3b41, 0x7150, 0xfced, 0xb42c, 0xb41e, 0x1, 0x0);
        gbc.writeMem(0xd546, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3b41);
        EXPECT(gbc.pc(), 0xd547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd546), 0xb8);
        // B8 00C9
        gbc.setState(0x153a, 0xd69d, 0x7f10, 0xd26f, 0x1854, 0x21b8, 0x1, 0x1);
        gbc.writeMem(0x153a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd69d);
        EXPECT(gbc.pc(), 0x153b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00CA
        gbc.setState(0xcd47, 0x84e5, 0xa3d0, 0xe692, 0xf426, 0x79cd, 0x0, 0x1);
        gbc.writeMem(0xcd47, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x84e5);
        EXPECT(gbc.pc(), 0xcd48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd47), 0xb8);
        // B8 00CB
        gbc.setState(0x9388, 0x1e00, 0xaca0, 0x57a0, 0x6482, 0x741d, 0x0, 0x1);
        gbc.writeMem(0x9388, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1e00);
        EXPECT(gbc.pc(), 0x9389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9388), 0xb8);
        // B8 00CC
        gbc.setState(0xb340, 0xc3ff, 0xa660, 0x695c, 0x3e7d, 0xe17b, 0x0, 0x1);
        gbc.writeMem(0xb340, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc3ff);
        EXPECT(gbc.pc(), 0xb341);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb340), 0xb8);
        // B8 00CD
        gbc.setState(0x42a7, 0x9dfa, 0x42d0, 0xdc2c, 0xa0f5, 0x9a11, 0x0, 0x1);
        gbc.writeMem(0x42a7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9dfa);
        EXPECT(gbc.pc(), 0x42a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00CE
        gbc.setState(0xe59b, 0x46b0, 0x1510, 0x1542, 0x42ab, 0xd5e8, 0x0, 0x1);
        gbc.writeMem(0xe59b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x46b0);
        EXPECT(gbc.pc(), 0xe59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59b), 0xb8);
        // B8 00CF
        gbc.setState(0x2de6, 0xd01e, 0x3650, 0x6c1a, 0x4e20, 0x5d3b, 0x1, 0x0);
        gbc.writeMem(0x2de6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd01e);
        EXPECT(gbc.pc(), 0x2de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00D0
        gbc.setState(0x772, 0x1c7, 0xb930, 0xffa8, 0x77c7, 0x51dd, 0x1, 0x0);
        gbc.writeMem(0x772, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1c7);
        EXPECT(gbc.pc(), 0x773);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00D1
        gbc.setState(0x922a, 0xff6a, 0x7b90, 0xf633, 0xed50, 0x95f0, 0x0, 0x1);
        gbc.writeMem(0x922a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0x922b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x922a), 0xb8);
        // B8 00D2
        gbc.setState(0x8a35, 0x15ce, 0xfbd0, 0xa3e6, 0xa7ea, 0xeb2b, 0x0, 0x0);
        gbc.writeMem(0x8a35, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x15ce);
        EXPECT(gbc.pc(), 0x8a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a35), 0xb8);
        // B8 00D3
        gbc.setState(0xa102, 0x5117, 0xe940, 0x960f, 0xd869, 0x116e, 0x1, 0x1);
        gbc.writeMem(0xa102, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5117);
        EXPECT(gbc.pc(), 0xa103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa102), 0xb8);
        // B8 00D4
        gbc.setState(0xd805, 0x4f1d, 0x1e80, 0x8159, 0x5f3b, 0xbf6b, 0x1, 0x1);
        gbc.writeMem(0xd805, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4f1d);
        EXPECT(gbc.pc(), 0xd806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd805), 0xb8);
        // B8 00D5
        gbc.setState(0xd68c, 0x825, 0x7520, 0x4acd, 0x908d, 0xf793, 0x0, 0x1);
        gbc.writeMem(0xd68c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x825);
        EXPECT(gbc.pc(), 0xd68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd68c), 0xb8);
        // B8 00D6
        gbc.setState(0xc523, 0x6f71, 0x92f0, 0x2fca, 0xdd16, 0xed52, 0x1, 0x1);
        gbc.writeMem(0xc523, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6f71);
        EXPECT(gbc.pc(), 0xc524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc523), 0xb8);
        // B8 00D7
        gbc.setState(0x45c9, 0xe729, 0xa430, 0x976, 0x6012, 0xb2ef, 0x0, 0x0);
        gbc.writeMem(0x45c9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe729);
        EXPECT(gbc.pc(), 0x45ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00D8
        gbc.setState(0xa57e, 0xf781, 0xa8c0, 0xd1d7, 0x9deb, 0xb70c, 0x0, 0x0);
        gbc.writeMem(0xa57e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf781);
        EXPECT(gbc.pc(), 0xa57f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa57e), 0xb8);
        // B8 00D9
        gbc.setState(0x3107, 0x7d73, 0x9660, 0x49be, 0x84e3, 0x653d, 0x1, 0x0);
        gbc.writeMem(0x3107, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7d73);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00DA
        gbc.setState(0x6246, 0xbc7c, 0x13c0, 0x3326, 0xd530, 0x26be, 0x0, 0x1);
        gbc.writeMem(0x6246, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbc7c);
        EXPECT(gbc.pc(), 0x6247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00DB
        gbc.setState(0x4550, 0x8fd2, 0xbf40, 0x2623, 0xd43a, 0x8fc0, 0x0, 0x1);
        gbc.writeMem(0x4550, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8fd2);
        EXPECT(gbc.pc(), 0x4551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00DC
        gbc.setState(0x592f, 0xa66a, 0x91f0, 0x7309, 0xa638, 0xa5bc, 0x0, 0x1);
        gbc.writeMem(0x592f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa66a);
        EXPECT(gbc.pc(), 0x5930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00DD
        gbc.setState(0xe8d2, 0x1a66, 0xe950, 0xc08b, 0x794e, 0xa836, 0x1, 0x1);
        gbc.writeMem(0xe8d2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1a66);
        EXPECT(gbc.pc(), 0xe8d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d2), 0xb8);
        // B8 00DE
        gbc.setState(0x5020, 0xbe8d, 0xcae0, 0x2e89, 0xccc2, 0x225, 0x0, 0x1);
        gbc.writeMem(0x5020, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xbe8d);
        EXPECT(gbc.pc(), 0x5021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00DF
        gbc.setState(0xb19e, 0x2bb6, 0x69d0, 0x2e9, 0x34bf, 0x56ff, 0x0, 0x1);
        gbc.writeMem(0xb19e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2bb6);
        EXPECT(gbc.pc(), 0xb19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb19e), 0xb8);
        // B8 00E1
        gbc.setState(0x7098, 0x40c1, 0x9280, 0xa3a3, 0xac37, 0x6b5d, 0x1, 0x0);
        gbc.writeMem(0x7098, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x40c1);
        EXPECT(gbc.pc(), 0x7099);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00E2
        gbc.setState(0xc7c7, 0x5316, 0xedf0, 0x9f25, 0xeffb, 0xec18, 0x0, 0x1);
        gbc.writeMem(0xc7c7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5316);
        EXPECT(gbc.pc(), 0xc7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c7), 0xb8);
        // B8 00E3
        gbc.setState(0xd57d, 0x4757, 0x7170, 0xffe5, 0x4d96, 0x1f7, 0x1, 0x0);
        gbc.writeMem(0xd57d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4757);
        EXPECT(gbc.pc(), 0xd57e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd57d), 0xb8);
        // B8 00E4
        gbc.setState(0xc6e2, 0xd21d, 0x8e60, 0xb94a, 0x15e0, 0x3525, 0x1, 0x0);
        gbc.writeMem(0xc6e2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd21d);
        EXPECT(gbc.pc(), 0xc6e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e2), 0xb8);
        // B8 00E5
        gbc.setState(0xd3c2, 0x3d49, 0xc610, 0x35b4, 0xeff3, 0x50bd, 0x1, 0x0);
        gbc.writeMem(0xd3c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3d49);
        EXPECT(gbc.pc(), 0xd3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3c2), 0xb8);
        // B8 00E6
        gbc.setState(0xa4c4, 0x2321, 0x8ab0, 0x94b3, 0x4d2, 0x7047, 0x1, 0x0);
        gbc.writeMem(0xa4c4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2321);
        EXPECT(gbc.pc(), 0xa4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c4), 0xb8);
        // B8 00E7
        gbc.setState(0x21d3, 0x69de, 0xab0, 0x72c, 0x56e9, 0xb9b8, 0x0, 0x0);
        gbc.writeMem(0x21d3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x69de);
        EXPECT(gbc.pc(), 0x21d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00E8
        gbc.setState(0x819e, 0xa9e8, 0x4b90, 0xb812, 0xc72a, 0xf4b9, 0x1, 0x0);
        gbc.writeMem(0x819e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa9e8);
        EXPECT(gbc.pc(), 0x819f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819e), 0xb8);
        // B8 00E9
        gbc.setState(0xe007, 0xf33f, 0x5520, 0x4c84, 0x548b, 0xb6ae, 0x1, 0x1);
        gbc.writeMem(0xe007, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf33f);
        EXPECT(gbc.pc(), 0xe008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe007), 0xb8);
        // B8 00EA
        gbc.setState(0x387a, 0x63f8, 0x4410, 0xf16b, 0x8d8e, 0x94d6, 0x1, 0x1);
        gbc.writeMem(0x387a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x63f8);
        EXPECT(gbc.pc(), 0x387b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00EB
        gbc.setState(0xe502, 0x9410, 0x44d0, 0x1909, 0xec93, 0x49cd, 0x0, 0x1);
        gbc.writeMem(0xe502, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9410);
        EXPECT(gbc.pc(), 0xe503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe502), 0xb8);
        // B8 00EC
        gbc.setState(0x6fe3, 0x6405, 0xf2e0, 0xde67, 0x8c9e, 0x7349, 0x1, 0x0);
        gbc.writeMem(0x6fe3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6405);
        EXPECT(gbc.pc(), 0x6fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00ED
        gbc.setState(0x55c4, 0x682c, 0x3c90, 0x75e, 0xf2ae, 0x641c, 0x1, 0x1);
        gbc.writeMem(0x55c4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x682c);
        EXPECT(gbc.pc(), 0x55c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00EE
        gbc.setState(0xa06, 0xfeb7, 0xf840, 0x5ffe, 0x5795, 0xf833, 0x0, 0x0);
        gbc.writeMem(0xa06, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfeb7);
        EXPECT(gbc.pc(), 0xa07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 00EF
        gbc.setState(0x72e8, 0x7a81, 0x6ba0, 0x89d8, 0xc8fa, 0xa47b, 0x1, 0x1);
        gbc.writeMem(0x72e8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7a81);
        EXPECT(gbc.pc(), 0x72e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00F0
        gbc.setState(0x13a0, 0xfe32, 0x8eb0, 0x22c2, 0x2b8a, 0x1260, 0x1, 0x1);
        gbc.writeMem(0x13a0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfe32);
        EXPECT(gbc.pc(), 0x13a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00F1
        gbc.setState(0x662f, 0x4d9, 0x8790, 0x327e, 0x2b88, 0xa052, 0x1, 0x0);
        gbc.writeMem(0x662f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4d9);
        EXPECT(gbc.pc(), 0x6630);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00F2
        gbc.setState(0x9042, 0x6b26, 0xc140, 0xb3c8, 0x7c9b, 0x24dd, 0x1, 0x0);
        gbc.writeMem(0x9042, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6b26);
        EXPECT(gbc.pc(), 0x9043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9042), 0xb8);
        // B8 00F3
        gbc.setState(0xc05d, 0xc5f2, 0x1b90, 0xb194, 0x8a9e, 0xb409, 0x0, 0x0);
        gbc.writeMem(0xc05d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc5f2);
        EXPECT(gbc.pc(), 0xc05e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc05d), 0xb8);
        // B8 00F4
        gbc.setState(0x1b6f, 0x2f85, 0xa2e0, 0x1092, 0x3eb1, 0x3979, 0x1, 0x0);
        gbc.writeMem(0x1b6f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2f85);
        EXPECT(gbc.pc(), 0x1b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 00F5
        gbc.setState(0xaf3e, 0x83d5, 0x31d0, 0x2bdb, 0x5c4e, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0xaf3e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x83d5);
        EXPECT(gbc.pc(), 0xaf3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3e), 0xb8);
        // B8 00F6
        gbc.setState(0x8f37, 0x5f00, 0xb8a0, 0xe28d, 0xea1c, 0x6c4f, 0x0, 0x0);
        gbc.writeMem(0x8f37, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5f00);
        EXPECT(gbc.pc(), 0x8f38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f37), 0xb8);
        // B8 00F7
        gbc.setState(0x80a, 0xa819, 0x6400, 0xddab, 0x9711, 0x7e8f, 0x1, 0x0);
        gbc.writeMem(0x80a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa819);
        EXPECT(gbc.pc(), 0x80b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00F8
        gbc.setState(0x9d64, 0xe215, 0x4ac0, 0x2033, 0xaf0b, 0x1e71, 0x1, 0x1);
        gbc.writeMem(0x9d64, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe215);
        EXPECT(gbc.pc(), 0x9d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d64), 0xb8);
        // B8 00F9
        gbc.setState(0x8442, 0xb183, 0xf840, 0x5268, 0x7372, 0xbaab, 0x0, 0x0);
        gbc.writeMem(0x8442, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb183);
        EXPECT(gbc.pc(), 0x8443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8442), 0xb8);
        // B8 00FA
        gbc.setState(0x6574, 0x4bf, 0x4c30, 0x6609, 0x65d7, 0xd72, 0x0, 0x1);
        gbc.writeMem(0x6574, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4bf);
        EXPECT(gbc.pc(), 0x6575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 00FB
        gbc.setState(0xc0c8, 0xd038, 0xb910, 0xad59, 0xd354, 0x74ed, 0x1, 0x0);
        gbc.writeMem(0xc0c8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd038);
        EXPECT(gbc.pc(), 0xc0c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0c8), 0xb8);
        // B8 00FC
        gbc.setState(0x38a5, 0xaa56, 0x300, 0x3c2d, 0x8529, 0xd242, 0x0, 0x0);
        gbc.writeMem(0x38a5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaa56);
        EXPECT(gbc.pc(), 0x38a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00FD
        gbc.setState(0x885e, 0x4a7d, 0x900, 0xbffa, 0x6015, 0x8c9c, 0x1, 0x1);
        gbc.writeMem(0x885e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4a7d);
        EXPECT(gbc.pc(), 0x885f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x885e), 0xb8);
        // B8 00FE
        gbc.setState(0x5705, 0xf5c5, 0x2740, 0x2dc7, 0xc48, 0x7b7d, 0x1, 0x0);
        gbc.writeMem(0x5705, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf5c5);
        EXPECT(gbc.pc(), 0x5706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 00FF
        gbc.setState(0xb444, 0x5c21, 0x4130, 0xca2b, 0xdbfe, 0xbc2, 0x1, 0x0);
        gbc.writeMem(0xb444, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5c21);
        EXPECT(gbc.pc(), 0xb445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb444), 0xb8);
        // B8 0100
        gbc.setState(0xd033, 0x2868, 0xa6f0, 0xb8b5, 0xd2d7, 0xca6c, 0x0, 0x1);
        gbc.writeMem(0xd033, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2868);
        EXPECT(gbc.pc(), 0xd034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd033), 0xb8);
        // B8 0101
        gbc.setState(0x7ece, 0x1d28, 0xbce0, 0x5c7b, 0x4001, 0xbfe3, 0x0, 0x0);
        gbc.writeMem(0x7ece, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1d28);
        EXPECT(gbc.pc(), 0x7ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0102
        gbc.setState(0xc478, 0x3f48, 0xab90, 0x8731, 0x5851, 0xc95c, 0x1, 0x0);
        gbc.writeMem(0xc478, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3f48);
        EXPECT(gbc.pc(), 0xc479);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc478), 0xb8);
        // B8 0103
        gbc.setState(0xb7e1, 0x8fa5, 0xa270, 0xf755, 0x2d01, 0xc360, 0x1, 0x1);
        gbc.writeMem(0xb7e1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8fa5);
        EXPECT(gbc.pc(), 0xb7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e1), 0xb8);
        // B8 0104
        gbc.setState(0x37a9, 0x4046, 0xaad0, 0xf5bb, 0xa36d, 0x5bfb, 0x1, 0x1);
        gbc.writeMem(0x37a9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4046);
        EXPECT(gbc.pc(), 0x37aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0105
        gbc.setState(0xdd12, 0x84ea, 0x5690, 0xad9c, 0xf75f, 0x86b5, 0x0, 0x1);
        gbc.writeMem(0xdd12, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x84ea);
        EXPECT(gbc.pc(), 0xdd13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd12), 0xb8);
        // B8 0106
        gbc.setState(0x4b54, 0x85bc, 0x28e0, 0x1363, 0x1385, 0xca14, 0x1, 0x0);
        gbc.writeMem(0x4b54, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x85bc);
        EXPECT(gbc.pc(), 0x4b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0107
        gbc.setState(0x3d77, 0x348e, 0xc990, 0x7390, 0x6d79, 0x736, 0x0, 0x0);
        gbc.writeMem(0x3d77, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x348e);
        EXPECT(gbc.pc(), 0x3d78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0108
        gbc.setState(0xe73b, 0x7b9f, 0x9420, 0x64cb, 0x2a21, 0x313d, 0x0, 0x1);
        gbc.writeMem(0xe73b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7b9f);
        EXPECT(gbc.pc(), 0xe73c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe73b), 0xb8);
        // B8 0109
        gbc.setState(0x7664, 0x1107, 0x5970, 0x11bb, 0x72d3, 0xf5e, 0x1, 0x0);
        gbc.writeMem(0x7664, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1107);
        EXPECT(gbc.pc(), 0x7665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 010A
        gbc.setState(0x9053, 0xf190, 0xdd80, 0x72d3, 0x5060, 0x8ae7, 0x0, 0x1);
        gbc.writeMem(0x9053, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf190);
        EXPECT(gbc.pc(), 0x9054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9053), 0xb8);
        // B8 010B
        gbc.setState(0x104f, 0xe87b, 0xbd60, 0x8516, 0xc2d5, 0x54b4, 0x1, 0x0);
        gbc.writeMem(0x104f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe87b);
        EXPECT(gbc.pc(), 0x1050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 010C
        gbc.setState(0xd5ab, 0xfdfa, 0xe7d0, 0x9be0, 0x6166, 0xc9d8, 0x1, 0x1);
        gbc.writeMem(0xd5ab, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfdfa);
        EXPECT(gbc.pc(), 0xd5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ab), 0xb8);
        // B8 010D
        gbc.setState(0x39ec, 0xf179, 0x4650, 0x5483, 0xf208, 0x5bbe, 0x0, 0x1);
        gbc.writeMem(0x39ec, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0x39ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 010E
        gbc.setState(0xc997, 0xbc6d, 0x4380, 0x3767, 0xb0e4, 0x1fff, 0x0, 0x0);
        gbc.writeMem(0xc997, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbc6d);
        EXPECT(gbc.pc(), 0xc998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc997), 0xb8);
        // B8 0110
        gbc.setState(0x2196, 0xae3d, 0xe770, 0x3fd4, 0xf31b, 0x919f, 0x1, 0x1);
        gbc.writeMem(0x2196, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xae3d);
        EXPECT(gbc.pc(), 0x2197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0111
        gbc.setState(0x21e1, 0xe8e3, 0xfe70, 0x4731, 0x6232, 0x52ff, 0x0, 0x1);
        gbc.writeMem(0x21e1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe8e3);
        EXPECT(gbc.pc(), 0x21e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0112
        gbc.setState(0x7e40, 0xd00d, 0x880, 0xfd9a, 0x9262, 0x6121, 0x1, 0x1);
        gbc.writeMem(0x7e40, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd00d);
        EXPECT(gbc.pc(), 0x7e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0113
        gbc.setState(0x7b8f, 0x50ba, 0xe580, 0x8b9a, 0x7296, 0xd6a1, 0x0, 0x1);
        gbc.writeMem(0x7b8f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x50ba);
        EXPECT(gbc.pc(), 0x7b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0115
        gbc.setState(0xa5ce, 0xcceb, 0x4940, 0x9649, 0xe0a3, 0xd6e7, 0x0, 0x1);
        gbc.writeMem(0xa5ce, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcceb);
        EXPECT(gbc.pc(), 0xa5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ce), 0xb8);
        // B8 0116
        gbc.setState(0x89cf, 0xab46, 0x1160, 0x9d82, 0x1e31, 0xe35, 0x1, 0x0);
        gbc.writeMem(0x89cf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xab46);
        EXPECT(gbc.pc(), 0x89d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89cf), 0xb8);
        // B8 0117
        gbc.setState(0x46d5, 0xb3e9, 0xe650, 0xa8dc, 0x885, 0x3e74, 0x0, 0x0);
        gbc.writeMem(0x46d5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb3e9);
        EXPECT(gbc.pc(), 0x46d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0118
        gbc.setState(0x14b8, 0xe202, 0x5a10, 0x499f, 0x2795, 0xdae2, 0x1, 0x0);
        gbc.writeMem(0x14b8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe202);
        EXPECT(gbc.pc(), 0x14b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0119
        gbc.setState(0x55bc, 0x23df, 0xf0d0, 0x3c0d, 0xe410, 0x2fea, 0x0, 0x1);
        gbc.writeMem(0x55bc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x23df);
        EXPECT(gbc.pc(), 0x55bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 011A
        gbc.setState(0x6252, 0x496f, 0xdba0, 0xf457, 0xd091, 0x3249, 0x0, 0x0);
        gbc.writeMem(0x6252, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x496f);
        EXPECT(gbc.pc(), 0x6253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 011B
        gbc.setState(0x9e5e, 0xd745, 0xf2c0, 0x40a4, 0x217c, 0x4184, 0x1, 0x1);
        gbc.writeMem(0x9e5e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd745);
        EXPECT(gbc.pc(), 0x9e5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e5e), 0xb8);
        // B8 011C
        gbc.setState(0x268e, 0x7424, 0xc330, 0x51e5, 0x3bb2, 0x53db, 0x1, 0x0);
        gbc.writeMem(0x268e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7424);
        EXPECT(gbc.pc(), 0x268f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 011D
        gbc.setState(0x6ceb, 0xfc08, 0xcea0, 0x7790, 0xcc18, 0x7a95, 0x0, 0x0);
        gbc.writeMem(0x6ceb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfc08);
        EXPECT(gbc.pc(), 0x6cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 011E
        gbc.setState(0xed86, 0xda9d, 0xd4b0, 0xcb5b, 0xdfb6, 0x84b8, 0x1, 0x1);
        gbc.writeMem(0xed86, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xda9d);
        EXPECT(gbc.pc(), 0xed87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed86), 0xb8);
        // B8 011F
        gbc.setState(0x7e50, 0x23d5, 0x99e0, 0x13f8, 0x9ec3, 0xe91e, 0x0, 0x1);
        gbc.writeMem(0x7e50, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x23d5);
        EXPECT(gbc.pc(), 0x7e51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0120
        gbc.setState(0x606d, 0xf9f, 0x39e0, 0xe151, 0x5d55, 0x9973, 0x0, 0x0);
        gbc.writeMem(0x606d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf9f);
        EXPECT(gbc.pc(), 0x606e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0121
        gbc.setState(0x78e7, 0x200b, 0xb50, 0x61c3, 0x9e6d, 0xb903, 0x1, 0x0);
        gbc.writeMem(0x78e7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x200b);
        EXPECT(gbc.pc(), 0x78e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0122
        gbc.setState(0x1050, 0xcaea, 0x9b70, 0xaace, 0x3b8d, 0xe8b6, 0x0, 0x1);
        gbc.writeMem(0x1050, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcaea);
        EXPECT(gbc.pc(), 0x1051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0123
        gbc.setState(0x5f4b, 0xdae6, 0x7820, 0xe5e2, 0x10f0, 0xc52a, 0x1, 0x0);
        gbc.writeMem(0x5f4b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdae6);
        EXPECT(gbc.pc(), 0x5f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0125
        gbc.setState(0xcf30, 0x33bc, 0xc290, 0x4daa, 0x432e, 0xdd79, 0x1, 0x1);
        gbc.writeMem(0xcf30, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x33bc);
        EXPECT(gbc.pc(), 0xcf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf30), 0xb8);
        // B8 0126
        gbc.setState(0x7428, 0x1223, 0x3800, 0x4aaa, 0x49b2, 0x6e25, 0x0, 0x1);
        gbc.writeMem(0x7428, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1223);
        EXPECT(gbc.pc(), 0x7429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0127
        gbc.setState(0xa03, 0xecba, 0xd080, 0x6c65, 0x182c, 0xbfff, 0x0, 0x0);
        gbc.writeMem(0xa03, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xecba);
        EXPECT(gbc.pc(), 0xa04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0128
        gbc.setState(0x3ed6, 0xe39c, 0xa60, 0x9b04, 0xb9b8, 0x971c, 0x1, 0x1);
        gbc.writeMem(0x3ed6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe39c);
        EXPECT(gbc.pc(), 0x3ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0129
        gbc.setState(0xb278, 0xb8fc, 0x1100, 0xd76, 0x67a7, 0xfc7d, 0x0, 0x1);
        gbc.writeMem(0xb278, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb8fc);
        EXPECT(gbc.pc(), 0xb279);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb278), 0xb8);
        // B8 012A
        gbc.setState(0x9b7a, 0x7344, 0xf820, 0x61f8, 0xa1a7, 0x3b50, 0x0, 0x1);
        gbc.writeMem(0x9b7a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7344);
        EXPECT(gbc.pc(), 0x9b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7a), 0xb8);
        // B8 012B
        gbc.setState(0x2afc, 0xf500, 0x46b0, 0x91c1, 0xcd6e, 0x67cf, 0x1, 0x0);
        gbc.writeMem(0x2afc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf500);
        EXPECT(gbc.pc(), 0x2afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 012C
        gbc.setState(0x50dc, 0xade2, 0x7d60, 0xb9d5, 0x9a33, 0x1d9e, 0x0, 0x1);
        gbc.writeMem(0x50dc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xade2);
        EXPECT(gbc.pc(), 0x50dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 012D
        gbc.setState(0x7ff9, 0x8280, 0xed80, 0x684d, 0x4996, 0x48e8, 0x0, 0x1);
        gbc.writeMem(0x7ff9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8280);
        EXPECT(gbc.pc(), 0x7ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 012E
        gbc.setState(0xa2bb, 0x4949, 0xcd30, 0x54e2, 0xb950, 0x517f, 0x0, 0x0);
        gbc.writeMem(0xa2bb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4949);
        EXPECT(gbc.pc(), 0xa2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2bb), 0xb8);
        // B8 012F
        gbc.setState(0xe47c, 0xa0a4, 0xd230, 0x9aaf, 0xc869, 0xf8e1, 0x0, 0x0);
        gbc.writeMem(0xe47c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa0a4);
        EXPECT(gbc.pc(), 0xe47d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe47c), 0xb8);
        // B8 0130
        gbc.setState(0x3e31, 0x1553, 0x9be0, 0xd332, 0x81f4, 0x86c6, 0x0, 0x0);
        gbc.writeMem(0x3e31, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1553);
        EXPECT(gbc.pc(), 0x3e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0132
        gbc.setState(0x75f, 0x2ce7, 0x4a60, 0x8c63, 0xcf27, 0x7a2b, 0x1, 0x1);
        gbc.writeMem(0x75f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2ce7);
        EXPECT(gbc.pc(), 0x760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0133
        gbc.setState(0x52ef, 0x80eb, 0xef80, 0x2e7a, 0xe734, 0xc07f, 0x1, 0x1);
        gbc.writeMem(0x52ef, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x80eb);
        EXPECT(gbc.pc(), 0x52f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0134
        gbc.setState(0x14e4, 0xea66, 0xec90, 0x82a, 0xccc0, 0x8148, 0x1, 0x1);
        gbc.writeMem(0x14e4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xea66);
        EXPECT(gbc.pc(), 0x14e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0135
        gbc.setState(0x56b5, 0x9e2f, 0xc2c0, 0xe72b, 0x3ac6, 0x2936, 0x0, 0x0);
        gbc.writeMem(0x56b5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9e2f);
        EXPECT(gbc.pc(), 0x56b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0136
        gbc.setState(0xf9d, 0xd971, 0x2960, 0xb467, 0xb38d, 0x46ec, 0x0, 0x1);
        gbc.writeMem(0xf9d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd971);
        EXPECT(gbc.pc(), 0xf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0137
        gbc.setState(0x4565, 0xfe1c, 0xfa10, 0x12bf, 0xccab, 0xec14, 0x0, 0x0);
        gbc.writeMem(0x4565, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfe1c);
        EXPECT(gbc.pc(), 0x4566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0139
        gbc.setState(0x3329, 0x468d, 0xbcd0, 0xd918, 0xe7cb, 0x553f, 0x1, 0x0);
        gbc.writeMem(0x3329, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x468d);
        EXPECT(gbc.pc(), 0x332a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 013A
        gbc.setState(0xca8f, 0xa278, 0x7c40, 0xa468, 0xa04, 0x6255, 0x1, 0x0);
        gbc.writeMem(0xca8f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa278);
        EXPECT(gbc.pc(), 0xca90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8f), 0xb8);
        // B8 013B
        gbc.setState(0xc21, 0x111a, 0x4940, 0x2df4, 0x707f, 0xb9e8, 0x1, 0x0);
        gbc.writeMem(0xc21, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x111a);
        EXPECT(gbc.pc(), 0xc22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 013C
        gbc.setState(0x7b54, 0x6555, 0xb900, 0xf988, 0x7822, 0xcb2, 0x0, 0x0);
        gbc.writeMem(0x7b54, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6555);
        EXPECT(gbc.pc(), 0x7b55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 013D
        gbc.setState(0x3fdc, 0x92b5, 0x62e0, 0xb0a0, 0xf92c, 0x4f8c, 0x1, 0x0);
        gbc.writeMem(0x3fdc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x92b5);
        EXPECT(gbc.pc(), 0x3fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 013E
        gbc.setState(0x58eb, 0x9c10, 0x1d70, 0xfe76, 0xfd56, 0x35a1, 0x0, 0x1);
        gbc.writeMem(0x58eb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9c10);
        EXPECT(gbc.pc(), 0x58ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 013F
        gbc.setState(0x78e4, 0x4cb9, 0x5a0, 0x646b, 0xfe5a, 0x749a, 0x0, 0x0);
        gbc.writeMem(0x78e4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4cb9);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0140
        gbc.setState(0xa8e5, 0x799c, 0x4500, 0xeb9c, 0x1e18, 0xc396, 0x0, 0x0);
        gbc.writeMem(0xa8e5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x799c);
        EXPECT(gbc.pc(), 0xa8e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e5), 0xb8);
        // B8 0141
        gbc.setState(0x713e, 0x69a6, 0x5b30, 0xc013, 0x8780, 0xa659, 0x0, 0x1);
        gbc.writeMem(0x713e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x69a6);
        EXPECT(gbc.pc(), 0x713f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0142
        gbc.setState(0x8aa3, 0x6f7f, 0x2710, 0x4567, 0x5a76, 0x9403, 0x0, 0x1);
        gbc.writeMem(0x8aa3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6f7f);
        EXPECT(gbc.pc(), 0x8aa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aa3), 0xb8);
        // B8 0143
        gbc.setState(0x6762, 0x52e8, 0x2150, 0x2dc0, 0x1730, 0xdf32, 0x0, 0x1);
        gbc.writeMem(0x6762, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x52e8);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0144
        gbc.setState(0x938, 0xd6fa, 0x4f30, 0x6b60, 0x7c00, 0x5beb, 0x0, 0x0);
        gbc.writeMem(0x938, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xd6fa);
        EXPECT(gbc.pc(), 0x939);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0145
        gbc.setState(0x4784, 0x7e24, 0xbdc0, 0x2178, 0xfb61, 0x9a2a, 0x1, 0x1);
        gbc.writeMem(0x4784, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7e24);
        EXPECT(gbc.pc(), 0x4785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0146
        gbc.setState(0xe3a7, 0xe403, 0x3000, 0xbb7d, 0x9ba, 0xd424, 0x0, 0x0);
        gbc.writeMem(0xe3a7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe403);
        EXPECT(gbc.pc(), 0xe3a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a7), 0xb8);
        // B8 0147
        gbc.setState(0xd0df, 0x4ab6, 0x40a0, 0x5d3e, 0xc12f, 0x91be, 0x0, 0x1);
        gbc.writeMem(0xd0df, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4ab6);
        EXPECT(gbc.pc(), 0xd0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0df), 0xb8);
        // B8 0148
        gbc.setState(0xe32d, 0xf3ce, 0xc080, 0xd309, 0xb6d, 0x5e6d, 0x0, 0x0);
        gbc.writeMem(0xe32d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf3ce);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32d), 0xb8);
        // B8 0149
        gbc.setState(0xb3d9, 0xf0cd, 0x5f50, 0x9ddc, 0xfadb, 0x71bc, 0x0, 0x1);
        gbc.writeMem(0xb3d9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf0cd);
        EXPECT(gbc.pc(), 0xb3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d9), 0xb8);
        // B8 014A
        gbc.setState(0x2e4c, 0x8d2a, 0xaf90, 0x2138, 0x9db2, 0xeab9, 0x1, 0x1);
        gbc.writeMem(0x2e4c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8d2a);
        EXPECT(gbc.pc(), 0x2e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 014B
        gbc.setState(0x5e88, 0xcedc, 0xb30, 0xf49a, 0x1d65, 0x51, 0x0, 0x0);
        gbc.writeMem(0x5e88, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcedc);
        EXPECT(gbc.pc(), 0x5e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 014C
        gbc.setState(0x1999, 0x3cc7, 0x42c0, 0x987c, 0x70b, 0x68e, 0x1, 0x0);
        gbc.writeMem(0x1999, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x3cc7);
        EXPECT(gbc.pc(), 0x199a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 014D
        gbc.setState(0xec2c, 0x10ae, 0x30a0, 0xa2d9, 0xad39, 0xbb09, 0x0, 0x1);
        gbc.writeMem(0xec2c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x10ae);
        EXPECT(gbc.pc(), 0xec2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2c), 0xb8);
        // B8 014E
        gbc.setState(0x6a5f, 0xf9ed, 0xd100, 0x7e5f, 0x2a04, 0x4566, 0x1, 0x0);
        gbc.writeMem(0x6a5f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf9ed);
        EXPECT(gbc.pc(), 0x6a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 014F
        gbc.setState(0xda6f, 0x6d55, 0x4dd0, 0xefe7, 0x74f7, 0xbf93, 0x0, 0x1);
        gbc.writeMem(0xda6f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6d55);
        EXPECT(gbc.pc(), 0xda70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda6f), 0xb8);
        // B8 0150
        gbc.setState(0xb16b, 0xb207, 0x79a0, 0x9d7c, 0xe7d4, 0xb3c8, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb207);
        EXPECT(gbc.pc(), 0xb16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16b), 0xb8);
        // B8 0151
        gbc.setState(0x97fc, 0x485e, 0x9a30, 0xf2b7, 0xcddb, 0x1d68, 0x0, 0x0);
        gbc.writeMem(0x97fc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x485e);
        EXPECT(gbc.pc(), 0x97fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97fc), 0xb8);
        // B8 0152
        gbc.setState(0xb668, 0xbb85, 0xa150, 0x9698, 0x211b, 0x1b92, 0x1, 0x1);
        gbc.writeMem(0xb668, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xbb85);
        EXPECT(gbc.pc(), 0xb669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb668), 0xb8);
        // B8 0153
        gbc.setState(0x3fb9, 0x9441, 0xae70, 0x7919, 0x3074, 0xd518, 0x1, 0x1);
        gbc.writeMem(0x3fb9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9441);
        EXPECT(gbc.pc(), 0x3fba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0154
        gbc.setState(0x496f, 0x523f, 0x1a0, 0xf07d, 0xa535, 0x46ff, 0x0, 0x0);
        gbc.writeMem(0x496f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x523f);
        EXPECT(gbc.pc(), 0x4970);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0155
        gbc.setState(0x6c, 0xd1f6, 0xd660, 0xc302, 0x788d, 0x4e7b, 0x0, 0x1);
        gbc.writeMem(0x6c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd1f6);
        EXPECT(gbc.pc(), 0x6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0156
        gbc.setState(0xeb98, 0x262e, 0xc1e0, 0xe61, 0xf0b0, 0xe580, 0x1, 0x1);
        gbc.writeMem(0xeb98, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x262e);
        EXPECT(gbc.pc(), 0xeb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb98), 0xb8);
        // B8 0157
        gbc.setState(0x5ce2, 0x1c58, 0x1b0, 0xd2ac, 0xbb6d, 0x5883, 0x1, 0x0);
        gbc.writeMem(0x5ce2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1c58);
        EXPECT(gbc.pc(), 0x5ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0158
        gbc.setState(0x1cfe, 0x9384, 0x4330, 0xf691, 0x5623, 0x9958, 0x1, 0x1);
        gbc.writeMem(0x1cfe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9384);
        EXPECT(gbc.pc(), 0x1cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0159
        gbc.setState(0xa530, 0x586d, 0x3090, 0x736e, 0x5064, 0x6a1a, 0x0, 0x1);
        gbc.writeMem(0xa530, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x586d);
        EXPECT(gbc.pc(), 0xa531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa530), 0xb8);
        // B8 015A
        gbc.setState(0x5290, 0x35d5, 0xf840, 0x7ad1, 0xfdec, 0x1b87, 0x0, 0x0);
        gbc.writeMem(0x5290, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x35d5);
        EXPECT(gbc.pc(), 0x5291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 015B
        gbc.setState(0x7fbc, 0xcc07, 0xf000, 0x787b, 0xc104, 0xbebd, 0x1, 0x0);
        gbc.writeMem(0x7fbc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcc07);
        EXPECT(gbc.pc(), 0x7fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 015C
        gbc.setState(0x80a4, 0x9e94, 0xafd0, 0xc67c, 0x927c, 0xf850, 0x0, 0x1);
        gbc.writeMem(0x80a4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9e94);
        EXPECT(gbc.pc(), 0x80a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a4), 0xb8);
        // B8 015E
        gbc.setState(0xb5fb, 0xed29, 0x2790, 0x87ca, 0x2ff4, 0x187d, 0x0, 0x1);
        gbc.writeMem(0xb5fb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xed29);
        EXPECT(gbc.pc(), 0xb5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5fb), 0xb8);
        // B8 015F
        gbc.setState(0xc062, 0x50c2, 0x8460, 0x3e0a, 0x4ce1, 0xaf13, 0x1, 0x0);
        gbc.writeMem(0xc062, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x50c2);
        EXPECT(gbc.pc(), 0xc063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc062), 0xb8);
        // B8 0160
        gbc.setState(0xefc2, 0x23bd, 0xe520, 0x60aa, 0x18ae, 0x4ac5, 0x0, 0x1);
        gbc.writeMem(0xefc2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x23bd);
        EXPECT(gbc.pc(), 0xefc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc2), 0xb8);
        // B8 0161
        gbc.setState(0xe067, 0xbb2c, 0x46a0, 0x7274, 0x29b8, 0x70a2, 0x0, 0x1);
        gbc.writeMem(0xe067, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbb2c);
        EXPECT(gbc.pc(), 0xe068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe067), 0xb8);
        // B8 0162
        gbc.setState(0xd165, 0xf13e, 0x4d40, 0xe111, 0x268f, 0xe5c3, 0x0, 0x1);
        gbc.writeMem(0xd165, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf13e);
        EXPECT(gbc.pc(), 0xd166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd165), 0xb8);
        // B8 0164
        gbc.setState(0xa86b, 0x9cb8, 0x5a30, 0x6fff, 0xcb2b, 0x4ae8, 0x1, 0x0);
        gbc.writeMem(0xa86b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9cb8);
        EXPECT(gbc.pc(), 0xa86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa86b), 0xb8);
        // B8 0165
        gbc.setState(0x418d, 0x941b, 0xfbb0, 0x973a, 0x486b, 0xeecf, 0x1, 0x1);
        gbc.writeMem(0x418d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x941b);
        EXPECT(gbc.pc(), 0x418e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0166
        gbc.setState(0x6e65, 0x7eba, 0x20f0, 0x5892, 0x6df1, 0x8947, 0x0, 0x1);
        gbc.writeMem(0x6e65, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7eba);
        EXPECT(gbc.pc(), 0x6e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0167
        gbc.setState(0xe5b3, 0xdfb6, 0x61a0, 0x308e, 0xbecd, 0x631, 0x0, 0x0);
        gbc.writeMem(0xe5b3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xdfb6);
        EXPECT(gbc.pc(), 0xe5b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b3), 0xb8);
        // B8 0168
        gbc.setState(0x6cfa, 0xd7ab, 0xc0a0, 0xffb5, 0x22e6, 0xaaa2, 0x0, 0x1);
        gbc.writeMem(0x6cfa, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd7ab);
        EXPECT(gbc.pc(), 0x6cfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0169
        gbc.setState(0x7511, 0xa652, 0xbe40, 0x34e4, 0xb294, 0x4f79, 0x0, 0x1);
        gbc.writeMem(0x7511, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa652);
        EXPECT(gbc.pc(), 0x7512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 016A
        gbc.setState(0xa917, 0x9295, 0x8d20, 0x8f83, 0x675e, 0x27e8, 0x1, 0x0);
        gbc.writeMem(0xa917, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0xa918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa917), 0xb8);
        // B8 016B
        gbc.setState(0x85fe, 0xe1ce, 0x8fb0, 0x2f03, 0x6f84, 0xc428, 0x0, 0x1);
        gbc.writeMem(0x85fe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe1ce);
        EXPECT(gbc.pc(), 0x85ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85fe), 0xb8);
        // B8 016C
        gbc.setState(0x2d5a, 0xbe47, 0x430, 0x2580, 0x4d9d, 0xfeff, 0x1, 0x0);
        gbc.writeMem(0x2d5a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbe47);
        EXPECT(gbc.pc(), 0x2d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 016D
        gbc.setState(0xb72f, 0x8cdc, 0xf870, 0x68ff, 0x165, 0x5372, 0x1, 0x0);
        gbc.writeMem(0xb72f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8cdc);
        EXPECT(gbc.pc(), 0xb730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb72f), 0xb8);
        // B8 016E
        gbc.setState(0xd6cf, 0x2214, 0xe5c0, 0x3835, 0xdc97, 0x1f74, 0x1, 0x0);
        gbc.writeMem(0xd6cf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2214);
        EXPECT(gbc.pc(), 0xd6d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6cf), 0xb8);
        // B8 016F
        gbc.setState(0x5d5c, 0xf20b, 0xcce0, 0x96da, 0xa093, 0xa7b1, 0x0, 0x0);
        gbc.writeMem(0x5d5c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf20b);
        EXPECT(gbc.pc(), 0x5d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0170
        gbc.setState(0xd712, 0x342f, 0x7250, 0x8cab, 0x6bf1, 0xb7af, 0x0, 0x0);
        gbc.writeMem(0xd712, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x342f);
        EXPECT(gbc.pc(), 0xd713);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd712), 0xb8);
        // B8 0171
        gbc.setState(0x3564, 0x29d3, 0x3f90, 0xeb5c, 0x70d0, 0xd9d9, 0x1, 0x0);
        gbc.writeMem(0x3564, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x29d3);
        EXPECT(gbc.pc(), 0x3565);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0172
        gbc.setState(0x3d60, 0x5da6, 0x69d0, 0x7307, 0x1800, 0xea6b, 0x0, 0x0);
        gbc.writeMem(0x3d60, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5da6);
        EXPECT(gbc.pc(), 0x3d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0173
        gbc.setState(0xa4f2, 0x1ae3, 0x2d00, 0x9d8f, 0xb08b, 0x4201, 0x1, 0x1);
        gbc.writeMem(0xa4f2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1ae3);
        EXPECT(gbc.pc(), 0xa4f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4f2), 0xb8);
        // B8 0174
        gbc.setState(0x4fac, 0xddcc, 0x8140, 0x16f6, 0x43d4, 0xdbaf, 0x0, 0x0);
        gbc.writeMem(0x4fac, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xddcc);
        EXPECT(gbc.pc(), 0x4fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0175
        gbc.setState(0xdafb, 0x8d2c, 0x45c0, 0xfa29, 0xe975, 0x7d4c, 0x1, 0x1);
        gbc.writeMem(0xdafb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8d2c);
        EXPECT(gbc.pc(), 0xdafc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafb), 0xb8);
        // B8 0176
        gbc.setState(0x380f, 0x249f, 0xb330, 0x8a5d, 0x2805, 0x719d, 0x0, 0x1);
        gbc.writeMem(0x380f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x249f);
        EXPECT(gbc.pc(), 0x3810);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0177
        gbc.setState(0x9cb7, 0xdb87, 0x2b90, 0x2737, 0xf72, 0x7629, 0x1, 0x0);
        gbc.writeMem(0x9cb7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdb87);
        EXPECT(gbc.pc(), 0x9cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb7), 0xb8);
        // B8 0178
        gbc.setState(0x3a49, 0x814f, 0x6e80, 0xfdcc, 0x7f4e, 0x2df8, 0x0, 0x1);
        gbc.writeMem(0x3a49, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x814f);
        EXPECT(gbc.pc(), 0x3a4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0179
        gbc.setState(0x8f19, 0x2a75, 0xab30, 0xe66, 0x7bbc, 0xcb33, 0x1, 0x1);
        gbc.writeMem(0x8f19, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2a75);
        EXPECT(gbc.pc(), 0x8f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f19), 0xb8);
        // B8 017A
        gbc.setState(0x9fcc, 0x9c53, 0xba50, 0xfdeb, 0xab03, 0x433a, 0x1, 0x1);
        gbc.writeMem(0x9fcc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9c53);
        EXPECT(gbc.pc(), 0x9fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fcc), 0xb8);
        // B8 017B
        gbc.setState(0xe158, 0x5926, 0x5220, 0x3f9e, 0x1f70, 0x6c2f, 0x1, 0x0);
        gbc.writeMem(0xe158, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5926);
        EXPECT(gbc.pc(), 0xe159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe158), 0xb8);
        // B8 017C
        gbc.setState(0x6c18, 0xd43, 0x6e90, 0xadb9, 0x2a8c, 0x6d0d, 0x1, 0x0);
        gbc.writeMem(0x6c18, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd43);
        EXPECT(gbc.pc(), 0x6c19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 017D
        gbc.setState(0xa4dc, 0xb1b2, 0x2230, 0x7716, 0x5825, 0x743a, 0x1, 0x0);
        gbc.writeMem(0xa4dc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb1b2);
        EXPECT(gbc.pc(), 0xa4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4dc), 0xb8);
        // B8 017E
        gbc.setState(0x3172, 0xd803, 0x23c0, 0x9954, 0xf1bf, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0x3172, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd803);
        EXPECT(gbc.pc(), 0x3173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 017F
        gbc.setState(0x2de0, 0xbd94, 0xca30, 0x4717, 0xbc10, 0x8e9c, 0x1, 0x1);
        gbc.writeMem(0x2de0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbd94);
        EXPECT(gbc.pc(), 0x2de1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0180
        gbc.setState(0x36de, 0xe3f3, 0x8e00, 0x4d4d, 0x2cbd, 0x439b, 0x1, 0x1);
        gbc.writeMem(0x36de, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe3f3);
        EXPECT(gbc.pc(), 0x36df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0181
        gbc.setState(0x37, 0xcdd4, 0xaba0, 0x36b3, 0x76b7, 0xeb6c, 0x1, 0x1);
        gbc.writeMem(0x37, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcdd4);
        EXPECT(gbc.pc(), 0x38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0182
        gbc.setState(0x1c36, 0x1efb, 0x3f0, 0xce4, 0xfb4c, 0x2de5, 0x1, 0x1);
        gbc.writeMem(0x1c36, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1efb);
        EXPECT(gbc.pc(), 0x1c37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0183
        gbc.setState(0x7d58, 0x7b3e, 0x2540, 0x3c37, 0x4f9f, 0xe206, 0x0, 0x0);
        gbc.writeMem(0x7d58, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7b3e);
        EXPECT(gbc.pc(), 0x7d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0184
        gbc.setState(0x4fb6, 0xa047, 0x9810, 0x79ac, 0x6eee, 0xc06d, 0x1, 0x1);
        gbc.writeMem(0x4fb6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa047);
        EXPECT(gbc.pc(), 0x4fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0186
        gbc.setState(0xc094, 0xa72e, 0x6110, 0xa18f, 0x34eb, 0x867d, 0x0, 0x1);
        gbc.writeMem(0xc094, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa72e);
        EXPECT(gbc.pc(), 0xc095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc094), 0xb8);
        // B8 0187
        gbc.setState(0x3592, 0xa430, 0xb840, 0x7005, 0x2ad1, 0x2087, 0x1, 0x0);
        gbc.writeMem(0x3592, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa430);
        EXPECT(gbc.pc(), 0x3593);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0188
        gbc.setState(0x77e, 0xc5d7, 0x69b0, 0x43e7, 0x27c1, 0xc278, 0x1, 0x1);
        gbc.writeMem(0x77e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc5d7);
        EXPECT(gbc.pc(), 0x77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0189
        gbc.setState(0x3610, 0xf8d4, 0xa4b0, 0xf5bf, 0x7d51, 0xa010, 0x1, 0x0);
        gbc.writeMem(0x3610, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf8d4);
        EXPECT(gbc.pc(), 0x3611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 018A
        gbc.setState(0x4b2f, 0xe5cc, 0x50c0, 0xbec8, 0x43c9, 0xe316, 0x0, 0x1);
        gbc.writeMem(0x4b2f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0x4b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 018B
        gbc.setState(0x3846, 0x4e4b, 0xf8c0, 0xd54b, 0x4b20, 0x58f9, 0x1, 0x1);
        gbc.writeMem(0x3846, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4e4b);
        EXPECT(gbc.pc(), 0x3847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 018C
        gbc.setState(0x82ba, 0x300c, 0xe040, 0xcb1d, 0xdb7b, 0x3d49, 0x0, 0x1);
        gbc.writeMem(0x82ba, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x300c);
        EXPECT(gbc.pc(), 0x82bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ba), 0xb8);
        // B8 018D
        gbc.setState(0xd773, 0x5c83, 0x21e0, 0x6372, 0x3ea9, 0xa3e9, 0x0, 0x0);
        gbc.writeMem(0xd773, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5c83);
        EXPECT(gbc.pc(), 0xd774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd773), 0xb8);
        // B8 018E
        gbc.setState(0xd048, 0xcd06, 0x48d0, 0x49ce, 0xcc25, 0x922a, 0x1, 0x1);
        gbc.writeMem(0xd048, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcd06);
        EXPECT(gbc.pc(), 0xd049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd048), 0xb8);
        // B8 018F
        gbc.setState(0x8e7a, 0x4a2f, 0x91c0, 0xdb5e, 0x229a, 0xb1, 0x0, 0x0);
        gbc.writeMem(0x8e7a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4a2f);
        EXPECT(gbc.pc(), 0x8e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7a), 0xb8);
        // B8 0190
        gbc.setState(0x6a05, 0x521c, 0xa040, 0x2b5a, 0x3fd4, 0x258f, 0x0, 0x0);
        gbc.writeMem(0x6a05, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x521c);
        EXPECT(gbc.pc(), 0x6a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0191
        gbc.setState(0x8658, 0xa2f2, 0x2cf0, 0xdbef, 0x4c5c, 0x3dad, 0x0, 0x1);
        gbc.writeMem(0x8658, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa2f2);
        EXPECT(gbc.pc(), 0x8659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8658), 0xb8);
        // B8 0192
        gbc.setState(0x8852, 0x707b, 0xb0b0, 0xb231, 0x9a28, 0x9936, 0x0, 0x1);
        gbc.writeMem(0x8852, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x707b);
        EXPECT(gbc.pc(), 0x8853);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8852), 0xb8);
        // B8 0193
        gbc.setState(0x120b, 0xa692, 0x5150, 0x658, 0x9c, 0x6f54, 0x0, 0x1);
        gbc.writeMem(0x120b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa692);
        EXPECT(gbc.pc(), 0x120c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0194
        gbc.setState(0x8491, 0x3cd, 0xd7f0, 0xb9df, 0x1e61, 0x1cd0, 0x0, 0x0);
        gbc.writeMem(0x8491, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3cd);
        EXPECT(gbc.pc(), 0x8492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8491), 0xb8);
        // B8 0195
        gbc.setState(0x536c, 0x8f3a, 0xd530, 0x9162, 0x1311, 0x8a8, 0x1, 0x0);
        gbc.writeMem(0x536c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8f3a);
        EXPECT(gbc.pc(), 0x536d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0196
        gbc.setState(0xadbe, 0xffd8, 0xf200, 0x355, 0xbb24, 0x7127, 0x0, 0x0);
        gbc.writeMem(0xadbe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xffd8);
        EXPECT(gbc.pc(), 0xadbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbe), 0xb8);
        // B8 0197
        gbc.setState(0x9533, 0x337f, 0x1570, 0x9dd8, 0x4c78, 0x95fb, 0x1, 0x0);
        gbc.writeMem(0x9533, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x337f);
        EXPECT(gbc.pc(), 0x9534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9533), 0xb8);
        // B8 0198
        gbc.setState(0x7dfc, 0xd21d, 0x34c0, 0x3d54, 0xce9e, 0x2b6, 0x0, 0x1);
        gbc.writeMem(0x7dfc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd21d);
        EXPECT(gbc.pc(), 0x7dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0199
        gbc.setState(0xdd57, 0xb7c3, 0x97b0, 0xeeba, 0xf5da, 0xb693, 0x1, 0x1);
        gbc.writeMem(0xdd57, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb7c3);
        EXPECT(gbc.pc(), 0xdd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd57), 0xb8);
        // B8 019A
        gbc.setState(0x531c, 0x67eb, 0xd010, 0x6ccd, 0x3729, 0xb79f, 0x1, 0x0);
        gbc.writeMem(0x531c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x67eb);
        EXPECT(gbc.pc(), 0x531d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 019B
        gbc.setState(0x9dc2, 0x2b7f, 0xe8a0, 0x4732, 0x62cc, 0xfd34, 0x0, 0x1);
        gbc.writeMem(0x9dc2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2b7f);
        EXPECT(gbc.pc(), 0x9dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc2), 0xb8);
        // B8 019C
        gbc.setState(0x1dc9, 0x6e79, 0x2ce0, 0x11, 0x2da0, 0x647, 0x0, 0x1);
        gbc.writeMem(0x1dc9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6e79);
        EXPECT(gbc.pc(), 0x1dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 019D
        gbc.setState(0x2e46, 0x75a5, 0xe4b0, 0x62a4, 0x27e5, 0x3976, 0x0, 0x1);
        gbc.writeMem(0x2e46, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x75a5);
        EXPECT(gbc.pc(), 0x2e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 019E
        gbc.setState(0xc239, 0x5c47, 0x27c0, 0x3671, 0xd7a4, 0xeeb4, 0x1, 0x0);
        gbc.writeMem(0xc239, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5c47);
        EXPECT(gbc.pc(), 0xc23a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc239), 0xb8);
        // B8 019F
        gbc.setState(0x4500, 0x47d2, 0x26e0, 0xb3ee, 0x6b3e, 0xb1b9, 0x0, 0x0);
        gbc.writeMem(0x4500, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x47d2);
        EXPECT(gbc.pc(), 0x4501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01A1
        gbc.setState(0xed19, 0xcc58, 0x79c0, 0xed15, 0xcc5b, 0x837, 0x0, 0x1);
        gbc.writeMem(0xed19, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcc58);
        EXPECT(gbc.pc(), 0xed1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed19), 0xb8);
        // B8 01A2
        gbc.setState(0x91a1, 0xaec3, 0x9310, 0xb8f8, 0xddeb, 0x97ef, 0x1, 0x0);
        gbc.writeMem(0x91a1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xaec3);
        EXPECT(gbc.pc(), 0x91a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a1), 0xb8);
        // B8 01A3
        gbc.setState(0xd768, 0x657e, 0x4fb0, 0xbc2c, 0x2f2c, 0x8f1, 0x1, 0x1);
        gbc.writeMem(0xd768, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x657e);
        EXPECT(gbc.pc(), 0xd769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd768), 0xb8);
        // B8 01A4
        gbc.setState(0x7de5, 0xdc73, 0x8860, 0x1304, 0x8879, 0xa357, 0x0, 0x1);
        gbc.writeMem(0x7de5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdc73);
        EXPECT(gbc.pc(), 0x7de6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01A5
        gbc.setState(0xbfb, 0x71ca, 0x4fa0, 0x830a, 0xfec5, 0x9089, 0x0, 0x0);
        gbc.writeMem(0xbfb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x71ca);
        EXPECT(gbc.pc(), 0xbfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01A6
        gbc.setState(0x13f0, 0x2b4b, 0x25b0, 0x19a0, 0xa829, 0x86ce, 0x1, 0x0);
        gbc.writeMem(0x13f0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2b4b);
        EXPECT(gbc.pc(), 0x13f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01A7
        gbc.setState(0xc7ff, 0x87bc, 0xe310, 0xdcd4, 0x6947, 0x68f7, 0x0, 0x1);
        gbc.writeMem(0xc7ff, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x87bc);
        EXPECT(gbc.pc(), 0xc800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ff), 0xb8);
        // B8 01A8
        gbc.setState(0x7e8f, 0x4d12, 0xd8d0, 0x83c1, 0xbcc2, 0x75c, 0x1, 0x1);
        gbc.writeMem(0x7e8f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x4d12);
        EXPECT(gbc.pc(), 0x7e90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01A9
        gbc.setState(0x889, 0xfdd0, 0x8720, 0xd72c, 0x2e3e, 0x1bc6, 0x0, 0x1);
        gbc.writeMem(0x889, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfdd0);
        EXPECT(gbc.pc(), 0x88a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01AA
        gbc.setState(0xadb7, 0xa36a, 0x2c20, 0x2ad6, 0x9efb, 0xe321, 0x0, 0x0);
        gbc.writeMem(0xadb7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa36a);
        EXPECT(gbc.pc(), 0xadb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb7), 0xb8);
        // B8 01AB
        gbc.setState(0x551d, 0xc03c, 0x95a0, 0x4124, 0x8906, 0x7d06, 0x1, 0x1);
        gbc.writeMem(0x551d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc03c);
        EXPECT(gbc.pc(), 0x551e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01AD
        gbc.setState(0x737e, 0xec37, 0xb780, 0xf5dd, 0xa423, 0xafdc, 0x1, 0x0);
        gbc.writeMem(0x737e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xec37);
        EXPECT(gbc.pc(), 0x737f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01AE
        gbc.setState(0x343d, 0x7a3c, 0x58f0, 0x3af2, 0x234e, 0x4243, 0x0, 0x1);
        gbc.writeMem(0x343d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7a3c);
        EXPECT(gbc.pc(), 0x343e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01AF
        gbc.setState(0xb840, 0x9e31, 0xaa40, 0xcae9, 0xc960, 0x7a64, 0x1, 0x0);
        gbc.writeMem(0xb840, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9e31);
        EXPECT(gbc.pc(), 0xb841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb840), 0xb8);
        // B8 01B0
        gbc.setState(0x6818, 0x9f88, 0xa620, 0xae57, 0x1b3d, 0x1abc, 0x1, 0x1);
        gbc.writeMem(0x6818, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9f88);
        EXPECT(gbc.pc(), 0x6819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01B1
        gbc.setState(0x6402, 0xcae4, 0x330, 0x6c1c, 0xdbe9, 0xf661, 0x1, 0x0);
        gbc.writeMem(0x6402, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcae4);
        EXPECT(gbc.pc(), 0x6403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01B2
        gbc.setState(0xd6b0, 0x4fbc, 0x3b80, 0x499e, 0x2dc3, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0xd6b0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4fbc);
        EXPECT(gbc.pc(), 0xd6b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b0), 0xb8);
        // B8 01B3
        gbc.setState(0x3f5f, 0x4782, 0x4a0, 0x83da, 0xca96, 0xc42c, 0x1, 0x0);
        gbc.writeMem(0x3f5f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4782);
        EXPECT(gbc.pc(), 0x3f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01B4
        gbc.setState(0x78ab, 0x1e3a, 0x74c0, 0x96da, 0x1a7b, 0xbc39, 0x0, 0x1);
        gbc.writeMem(0x78ab, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1e3a);
        EXPECT(gbc.pc(), 0x78ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01B5
        gbc.setState(0xaccf, 0x8742, 0xfa0, 0x6000, 0xa01f, 0xed5f, 0x1, 0x1);
        gbc.writeMem(0xaccf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8742);
        EXPECT(gbc.pc(), 0xacd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaccf), 0xb8);
        // B8 01B6
        gbc.setState(0x2e8b, 0xc156, 0xbee0, 0x6cda, 0x622b, 0xd096, 0x0, 0x0);
        gbc.writeMem(0x2e8b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc156);
        EXPECT(gbc.pc(), 0x2e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01B7
        gbc.setState(0x807d, 0xabca, 0xbeb0, 0x83c0, 0x22, 0x837d, 0x1, 0x1);
        gbc.writeMem(0x807d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xabca);
        EXPECT(gbc.pc(), 0x807e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807d), 0xb8);
        // B8 01B8
        gbc.setState(0xe465, 0x60ca, 0xd850, 0xa98c, 0x7db4, 0x7278, 0x1, 0x1);
        gbc.writeMem(0xe465, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x60ca);
        EXPECT(gbc.pc(), 0xe466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe465), 0xb8);
        // B8 01B9
        gbc.setState(0xe1e4, 0x5d18, 0xce60, 0x276f, 0x17c2, 0xc728, 0x1, 0x1);
        gbc.writeMem(0xe1e4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5d18);
        EXPECT(gbc.pc(), 0xe1e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e4), 0xb8);
        // B8 01BA
        gbc.setState(0xaaea, 0x2a09, 0x7c50, 0x53e2, 0xc24, 0xebb9, 0x1, 0x0);
        gbc.writeMem(0xaaea, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2a09);
        EXPECT(gbc.pc(), 0xaaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaea), 0xb8);
        // B8 01BB
        gbc.setState(0x8275, 0x14c5, 0x19f0, 0x1818, 0x17ad, 0xcc25, 0x1, 0x0);
        gbc.writeMem(0x8275, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x14c5);
        EXPECT(gbc.pc(), 0x8276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8275), 0xb8);
        // B8 01BC
        gbc.setState(0xe3ff, 0xfc25, 0x2700, 0xb56, 0xfdd4, 0x228a, 0x0, 0x0);
        gbc.writeMem(0xe3ff, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfc25);
        EXPECT(gbc.pc(), 0xe400);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ff), 0xb8);
        // B8 01BD
        gbc.setState(0x366e, 0x63d6, 0xd040, 0x6d59, 0x5797, 0x7db3, 0x1, 0x1);
        gbc.writeMem(0x366e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x63d6);
        EXPECT(gbc.pc(), 0x366f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01BE
        gbc.setState(0x1289, 0x2422, 0xb070, 0x514e, 0x2ab4, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0x1289, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2422);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01BF
        gbc.setState(0x917b, 0x3b10, 0x3090, 0xbeb2, 0x3be1, 0xe092, 0x1, 0x1);
        gbc.writeMem(0x917b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3b10);
        EXPECT(gbc.pc(), 0x917c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917b), 0xb8);
        // B8 01C0
        gbc.setState(0xbdba, 0x9f64, 0x6510, 0x54a4, 0x818, 0x8225, 0x0, 0x1);
        gbc.writeMem(0xbdba, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9f64);
        EXPECT(gbc.pc(), 0xbdbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdba), 0xb8);
        // B8 01C1
        gbc.setState(0x2443, 0x5b79, 0xdd70, 0x3bb4, 0x383f, 0x8a92, 0x1, 0x1);
        gbc.writeMem(0x2443, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5b79);
        EXPECT(gbc.pc(), 0x2444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01C2
        gbc.setState(0xde79, 0x1efb, 0x4250, 0x126f, 0x683b, 0x399e, 0x1, 0x0);
        gbc.writeMem(0xde79, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1efb);
        EXPECT(gbc.pc(), 0xde7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde79), 0xb8);
        // B8 01C3
        gbc.setState(0x482b, 0xae68, 0xb890, 0xde16, 0xb436, 0xf506, 0x0, 0x0);
        gbc.writeMem(0x482b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xae68);
        EXPECT(gbc.pc(), 0x482c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01C4
        gbc.setState(0x35d1, 0x3d52, 0x4fd0, 0xe0b5, 0x881d, 0x251c, 0x1, 0x0);
        gbc.writeMem(0x35d1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3d52);
        EXPECT(gbc.pc(), 0x35d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01C6
        gbc.setState(0xdb71, 0x65cd, 0xc350, 0xe2af, 0xf4b1, 0xa53d, 0x1, 0x0);
        gbc.writeMem(0xdb71, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x65cd);
        EXPECT(gbc.pc(), 0xdb72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb71), 0xb8);
        // B8 01C7
        gbc.setState(0xe1cc, 0xd3af, 0x9740, 0xc0a9, 0x669d, 0x3f29, 0x1, 0x1);
        gbc.writeMem(0xe1cc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xd3af);
        EXPECT(gbc.pc(), 0xe1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1cc), 0xb8);
        // B8 01C8
        gbc.setState(0x676, 0x6e59, 0x25b0, 0xc841, 0xee, 0x4419, 0x0, 0x0);
        gbc.writeMem(0x676, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6e59);
        EXPECT(gbc.pc(), 0x677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01C9
        gbc.setState(0x6b60, 0x5178, 0x1810, 0x3e69, 0xef4, 0x576a, 0x0, 0x1);
        gbc.writeMem(0x6b60, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5178);
        EXPECT(gbc.pc(), 0x6b61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01CA
        gbc.setState(0x479e, 0x2a06, 0x3020, 0xf252, 0xd354, 0x3c3, 0x0, 0x1);
        gbc.writeMem(0x479e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2a06);
        EXPECT(gbc.pc(), 0x479f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01CB
        gbc.setState(0x562b, 0x1848, 0x7790, 0xf632, 0x1a5, 0x4e95, 0x1, 0x1);
        gbc.writeMem(0x562b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1848);
        EXPECT(gbc.pc(), 0x562c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01CC
        gbc.setState(0x8387, 0x5844, 0x6df0, 0xdc5f, 0xa968, 0xac3f, 0x0, 0x1);
        gbc.writeMem(0x8387, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5844);
        EXPECT(gbc.pc(), 0x8388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8387), 0xb8);
        // B8 01CD
        gbc.setState(0x80a7, 0xee95, 0x4cb0, 0x4ef0, 0xa086, 0x5d77, 0x1, 0x0);
        gbc.writeMem(0x80a7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xee95);
        EXPECT(gbc.pc(), 0x80a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80a7), 0xb8);
        // B8 01CE
        gbc.setState(0x9ffc, 0xccb7, 0xa8c0, 0x7f21, 0xf76c, 0x7192, 0x1, 0x0);
        gbc.writeMem(0x9ffc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xccb7);
        EXPECT(gbc.pc(), 0x9ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffc), 0xb8);
        // B8 01CF
        gbc.setState(0xdca9, 0xba25, 0x7280, 0x261e, 0x2c4, 0x8b10, 0x1, 0x0);
        gbc.writeMem(0xdca9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xba25);
        EXPECT(gbc.pc(), 0xdcaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca9), 0xb8);
        // B8 01D0
        gbc.setState(0x792, 0x6a6, 0x9d30, 0xa7e2, 0x246, 0x796e, 0x1, 0x1);
        gbc.writeMem(0x792, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6a6);
        EXPECT(gbc.pc(), 0x793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01D1
        gbc.setState(0x413, 0xd727, 0xb3d0, 0xa305, 0x6a1b, 0xcacb, 0x1, 0x0);
        gbc.writeMem(0x413, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd727);
        EXPECT(gbc.pc(), 0x414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01D2
        gbc.setState(0x880a, 0x5260, 0x96e0, 0x1626, 0x3919, 0x8606, 0x1, 0x1);
        gbc.writeMem(0x880a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5260);
        EXPECT(gbc.pc(), 0x880b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880a), 0xb8);
        // B8 01D3
        gbc.setState(0xc819, 0x23bd, 0x7e90, 0x63c9, 0x40ce, 0x4c41, 0x1, 0x1);
        gbc.writeMem(0xc819, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x23bd);
        EXPECT(gbc.pc(), 0xc81a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc819), 0xb8);
        // B8 01D4
        gbc.setState(0x6931, 0x6c96, 0x1210, 0x48ea, 0xb058, 0x37ca, 0x1, 0x1);
        gbc.writeMem(0x6931, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6c96);
        EXPECT(gbc.pc(), 0x6932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01D5
        gbc.setState(0xe20d, 0x9d94, 0xad80, 0xd5a1, 0xeb80, 0xd576, 0x0, 0x1);
        gbc.writeMem(0xe20d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0xe20e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe20d), 0xb8);
        // B8 01D6
        gbc.setState(0x7790, 0x4746, 0xf230, 0x9bd4, 0xd764, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0x7790, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4746);
        EXPECT(gbc.pc(), 0x7791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01D7
        gbc.setState(0x9434, 0x9322, 0x9600, 0x557b, 0x3494, 0x50c7, 0x0, 0x0);
        gbc.writeMem(0x9434, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9322);
        EXPECT(gbc.pc(), 0x9435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9434), 0xb8);
        // B8 01D8
        gbc.setState(0xdeee, 0x97f0, 0xda20, 0x6932, 0x69b0, 0x11e5, 0x0, 0x0);
        gbc.writeMem(0xdeee, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x97f0);
        EXPECT(gbc.pc(), 0xdeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeee), 0xb8);
        // B8 01D9
        gbc.setState(0x5df7, 0x48a7, 0x25f0, 0xc278, 0x2c3a, 0xb682, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x48a7);
        EXPECT(gbc.pc(), 0x5df8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01DA
        gbc.setState(0xd579, 0x4085, 0xd500, 0xa67d, 0xcf18, 0x66b4, 0x0, 0x1);
        gbc.writeMem(0xd579, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4085);
        EXPECT(gbc.pc(), 0xd57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd579), 0xb8);
        // B8 01DB
        gbc.setState(0x74dc, 0x3cfe, 0x2eb0, 0xb8ee, 0xf9c0, 0xcf38, 0x0, 0x0);
        gbc.writeMem(0x74dc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3cfe);
        EXPECT(gbc.pc(), 0x74dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01DC
        gbc.setState(0xb32b, 0x7c99, 0xfd0, 0x144, 0x1ec1, 0xcf94, 0x0, 0x0);
        gbc.writeMem(0xb32b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7c99);
        EXPECT(gbc.pc(), 0xb32c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb32b), 0xb8);
        // B8 01DD
        gbc.setState(0x9ad6, 0xfa2c, 0x480, 0x2454, 0x6ee8, 0xd296, 0x0, 0x1);
        gbc.writeMem(0x9ad6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfa2c);
        EXPECT(gbc.pc(), 0x9ad7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad6), 0xb8);
        // B8 01DE
        gbc.setState(0x635, 0xc9c5, 0x2750, 0x4edd, 0x4242, 0x5e99, 0x0, 0x1);
        gbc.writeMem(0x635, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc9c5);
        EXPECT(gbc.pc(), 0x636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01DF
        gbc.setState(0x64c1, 0xb0d8, 0x2ec0, 0xbd76, 0x7ecc, 0xce8, 0x1, 0x1);
        gbc.writeMem(0x64c1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb0d8);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01E0
        gbc.setState(0x2f7b, 0x1455, 0xe440, 0xbbbc, 0xce0d, 0xd9f7, 0x1, 0x1);
        gbc.writeMem(0x2f7b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1455);
        EXPECT(gbc.pc(), 0x2f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01E2
        gbc.setState(0x1e06, 0xaefc, 0x2690, 0x5cf4, 0x4e8a, 0xe287, 0x0, 0x0);
        gbc.writeMem(0x1e06, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xaefc);
        EXPECT(gbc.pc(), 0x1e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01E3
        gbc.setState(0xbdb7, 0x185c, 0xc980, 0xbf29, 0x3da0, 0x2c71, 0x0, 0x0);
        gbc.writeMem(0xbdb7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x185c);
        EXPECT(gbc.pc(), 0xbdb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb7), 0xb8);
        // B8 01E4
        gbc.setState(0xa758, 0x11fc, 0xd2b0, 0xe15e, 0xf721, 0x87c9, 0x0, 0x1);
        gbc.writeMem(0xa758, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x11fc);
        EXPECT(gbc.pc(), 0xa759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa758), 0xb8);
        // B8 01E5
        gbc.setState(0x4419, 0x129f, 0xa210, 0x208b, 0xdd7e, 0xc3c9, 0x0, 0x0);
        gbc.writeMem(0x4419, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x129f);
        EXPECT(gbc.pc(), 0x441a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01E6
        gbc.setState(0x2de7, 0xdb05, 0x65c0, 0x6be5, 0x53f8, 0x5434, 0x0, 0x0);
        gbc.writeMem(0x2de7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xdb05);
        EXPECT(gbc.pc(), 0x2de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01E7
        gbc.setState(0xacf4, 0x1700, 0x47f0, 0x8948, 0x2f3f, 0x26a4, 0x1, 0x0);
        gbc.writeMem(0xacf4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1700);
        EXPECT(gbc.pc(), 0xacf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf4), 0xb8);
        // B8 01E8
        gbc.setState(0x3c62, 0xe8c4, 0xdd10, 0x8885, 0x8ba8, 0x8098, 0x1, 0x0);
        gbc.writeMem(0x3c62, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe8c4);
        EXPECT(gbc.pc(), 0x3c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01E9
        gbc.setState(0xa741, 0xbe06, 0x2b80, 0x6744, 0x2d47, 0xa3c7, 0x1, 0x1);
        gbc.writeMem(0xa741, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbe06);
        EXPECT(gbc.pc(), 0xa742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa741), 0xb8);
        // B8 01EA
        gbc.setState(0xed42, 0x6dbf, 0x4480, 0x70fc, 0xfcf5, 0x16aa, 0x0, 0x0);
        gbc.writeMem(0xed42, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6dbf);
        EXPECT(gbc.pc(), 0xed43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed42), 0xb8);
        // B8 01EB
        gbc.setState(0xb7ab, 0x93af, 0xd9c0, 0xc7a3, 0x916f, 0xe031, 0x1, 0x1);
        gbc.writeMem(0xb7ab, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x93af);
        EXPECT(gbc.pc(), 0xb7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ab), 0xb8);
        // B8 01EC
        gbc.setState(0x57c, 0xe2c2, 0x8490, 0x3c64, 0xa39b, 0x5589, 0x0, 0x0);
        gbc.writeMem(0x57c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe2c2);
        EXPECT(gbc.pc(), 0x57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01ED
        gbc.setState(0x354c, 0x81de, 0x1910, 0xd507, 0x9dd1, 0x2873, 0x0, 0x0);
        gbc.writeMem(0x354c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x81de);
        EXPECT(gbc.pc(), 0x354d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01EE
        gbc.setState(0x9eea, 0x8305, 0xacd0, 0x802d, 0x67cc, 0x4655, 0x0, 0x1);
        gbc.writeMem(0x9eea, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8305);
        EXPECT(gbc.pc(), 0x9eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eea), 0xb8);
        // B8 01EF
        gbc.setState(0xd9a6, 0x8c15, 0x2700, 0xb39, 0xb3e4, 0x9179, 0x0, 0x0);
        gbc.writeMem(0xd9a6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8c15);
        EXPECT(gbc.pc(), 0xd9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a6), 0xb8);
        // B8 01F0
        gbc.setState(0x7bc0, 0xe8c, 0xa130, 0xf584, 0xc153, 0x2607, 0x1, 0x0);
        gbc.writeMem(0x7bc0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe8c);
        EXPECT(gbc.pc(), 0x7bc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01F1
        gbc.setState(0xde3a, 0x87c8, 0x20, 0x90dd, 0x3e2b, 0xa8a9, 0x0, 0x0);
        gbc.writeMem(0xde3a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x87c8);
        EXPECT(gbc.pc(), 0xde3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3a), 0xb8);
        // B8 01F2
        gbc.setState(0xca57, 0x92c8, 0xb380, 0xe8ad, 0xedda, 0x7a63, 0x0, 0x1);
        gbc.writeMem(0xca57, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x92c8);
        EXPECT(gbc.pc(), 0xca58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca57), 0xb8);
        // B8 01F3
        gbc.setState(0xd649, 0xeb2e, 0xa4e0, 0x6806, 0x55b3, 0x6c3f, 0x1, 0x1);
        gbc.writeMem(0xd649, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xeb2e);
        EXPECT(gbc.pc(), 0xd64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd649), 0xb8);
        // B8 01F4
        gbc.setState(0x4cc1, 0xd2d4, 0x6010, 0x1649, 0x9730, 0x5163, 0x0, 0x0);
        gbc.writeMem(0x4cc1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd2d4);
        EXPECT(gbc.pc(), 0x4cc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 01F5
        gbc.setState(0xde3e, 0xfca8, 0xcf40, 0x344e, 0xc0ee, 0x22d4, 0x1, 0x0);
        gbc.writeMem(0xde3e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfca8);
        EXPECT(gbc.pc(), 0xde3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3e), 0xb8);
        // B8 01F6
        gbc.setState(0x2666, 0x80f3, 0xeaa0, 0x7248, 0xc5a0, 0xfcbf, 0x0, 0x1);
        gbc.writeMem(0x2666, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x80f3);
        EXPECT(gbc.pc(), 0x2667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 01F7
        gbc.setState(0x89f7, 0x28b0, 0xd260, 0x16f7, 0x8136, 0x7375, 0x1, 0x1);
        gbc.writeMem(0x89f7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x28b0);
        EXPECT(gbc.pc(), 0x89f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f7), 0xb8);
        // B8 01F8
        gbc.setState(0x50f6, 0x284c, 0x2690, 0xe439, 0xb456, 0x9358, 0x0, 0x0);
        gbc.writeMem(0x50f6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x284c);
        EXPECT(gbc.pc(), 0x50f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 01F9
        gbc.setState(0xbf79, 0x40ae, 0xd2c0, 0x3647, 0x96c9, 0x67c0, 0x0, 0x0);
        gbc.writeMem(0xbf79, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x40ae);
        EXPECT(gbc.pc(), 0xbf7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf79), 0xb8);
        // B8 01FA
        gbc.setState(0x49bc, 0xc416, 0x8360, 0xb861, 0x8204, 0xd70a, 0x0, 0x0);
        gbc.writeMem(0x49bc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc416);
        EXPECT(gbc.pc(), 0x49bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 01FB
        gbc.setState(0x8bd3, 0xc4c7, 0xdaf0, 0xd9b0, 0xcb23, 0x2325, 0x0, 0x0);
        gbc.writeMem(0x8bd3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc4c7);
        EXPECT(gbc.pc(), 0x8bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd3), 0xb8);
        // B8 01FC
        gbc.setState(0xdbd0, 0xced2, 0x83d0, 0xa3f3, 0xbabe, 0x9402, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xced2);
        EXPECT(gbc.pc(), 0xdbd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd0), 0xb8);
        // B8 01FD
        gbc.setState(0xc778, 0x2297, 0x2430, 0x8645, 0x3d27, 0x5e22, 0x0, 0x0);
        gbc.writeMem(0xc778, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2297);
        EXPECT(gbc.pc(), 0xc779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc778), 0xb8);
        // B8 01FE
        gbc.setState(0x97f6, 0x1064, 0xc7e0, 0xffde, 0x440c, 0x3ec, 0x1, 0x0);
        gbc.writeMem(0x97f6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1064);
        EXPECT(gbc.pc(), 0x97f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f6), 0xb8);
        // B8 01FF
        gbc.setState(0xab90, 0x5d30, 0xb550, 0x2ed4, 0x96, 0xc7c8, 0x0, 0x0);
        gbc.writeMem(0xab90, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5d30);
        EXPECT(gbc.pc(), 0xab91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab90), 0xb8);
        // B8 0200
        gbc.setState(0x14c2, 0xc92d, 0x4fd0, 0x70d4, 0x182e, 0x9b1a, 0x0, 0x0);
        gbc.writeMem(0x14c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc92d);
        EXPECT(gbc.pc(), 0x14c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0201
        gbc.setState(0x67d0, 0x90e5, 0xac10, 0xaa4a, 0x9164, 0x7036, 0x1, 0x0);
        gbc.writeMem(0x67d0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x90e5);
        EXPECT(gbc.pc(), 0x67d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0202
        gbc.setState(0x4d24, 0x6b36, 0xf790, 0xf04, 0xec70, 0x9445, 0x1, 0x0);
        gbc.writeMem(0x4d24, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6b36);
        EXPECT(gbc.pc(), 0x4d25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0203
        gbc.setState(0x5dee, 0x458d, 0x7060, 0x7d74, 0x5ea6, 0xf7d8, 0x1, 0x0);
        gbc.writeMem(0x5dee, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x458d);
        EXPECT(gbc.pc(), 0x5def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0204
        gbc.setState(0xa45e, 0x52f7, 0x96d0, 0x7233, 0xa285, 0x3f5e, 0x0, 0x1);
        gbc.writeMem(0xa45e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x52f7);
        EXPECT(gbc.pc(), 0xa45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa45e), 0xb8);
        // B8 0205
        gbc.setState(0x46f2, 0xe875, 0xa0d0, 0x3e84, 0x54d2, 0x3cd3, 0x1, 0x1);
        gbc.writeMem(0x46f2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe875);
        EXPECT(gbc.pc(), 0x46f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0206
        gbc.setState(0xbe16, 0x5e90, 0xaa00, 0x2fb6, 0x4440, 0x19c4, 0x0, 0x1);
        gbc.writeMem(0xbe16, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5e90);
        EXPECT(gbc.pc(), 0xbe17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe16), 0xb8);
        // B8 0208
        gbc.setState(0xbd70, 0xa091, 0x4310, 0xc138, 0xc1c9, 0x402d, 0x0, 0x1);
        gbc.writeMem(0xbd70, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa091);
        EXPECT(gbc.pc(), 0xbd71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd70), 0xb8);
        // B8 0209
        gbc.setState(0x7858, 0x6eb7, 0x4a90, 0x151f, 0xa831, 0x28, 0x1, 0x1);
        gbc.writeMem(0x7858, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6eb7);
        EXPECT(gbc.pc(), 0x7859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 020A
        gbc.setState(0x6f59, 0x7984, 0x49d0, 0xe4d9, 0x5829, 0x6465, 0x0, 0x0);
        gbc.writeMem(0x6f59, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x7984);
        EXPECT(gbc.pc(), 0x6f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 020B
        gbc.setState(0x754d, 0xa7b3, 0x3700, 0x8491, 0xcc05, 0xc177, 0x1, 0x0);
        gbc.writeMem(0x754d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa7b3);
        EXPECT(gbc.pc(), 0x754e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 020C
        gbc.setState(0x4803, 0x689e, 0x5390, 0x1db8, 0x78d7, 0x4c4, 0x0, 0x1);
        gbc.writeMem(0x4803, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x689e);
        EXPECT(gbc.pc(), 0x4804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 020E
        gbc.setState(0x609d, 0x46e3, 0xee20, 0xaf0, 0x7a11, 0x602e, 0x1, 0x0);
        gbc.writeMem(0x609d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x46e3);
        EXPECT(gbc.pc(), 0x609e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 020F
        gbc.setState(0x7d8b, 0x4138, 0xd3a0, 0xe809, 0x63a, 0x1894, 0x0, 0x1);
        gbc.writeMem(0x7d8b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4138);
        EXPECT(gbc.pc(), 0x7d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0210
        gbc.setState(0x5c8c, 0x157d, 0xc6a0, 0x1802, 0xabb7, 0x9ef0, 0x1, 0x1);
        gbc.writeMem(0x5c8c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x157d);
        EXPECT(gbc.pc(), 0x5c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0211
        gbc.setState(0x75bc, 0x5b1, 0x8ec0, 0xd45d, 0x84f3, 0x20eb, 0x1, 0x0);
        gbc.writeMem(0x75bc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5b1);
        EXPECT(gbc.pc(), 0x75bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0212
        gbc.setState(0x6092, 0x5dd5, 0x3730, 0x4a7, 0xdef, 0x42c0, 0x0, 0x1);
        gbc.writeMem(0x6092, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5dd5);
        EXPECT(gbc.pc(), 0x6093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0213
        gbc.setState(0x258, 0x94e8, 0xc190, 0xe4e3, 0x9edb, 0x1c1d, 0x0, 0x0);
        gbc.writeMem(0x258, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x94e8);
        EXPECT(gbc.pc(), 0x259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0214
        gbc.setState(0x4a28, 0x4a27, 0x3e80, 0x2b2e, 0x5881, 0xbdd1, 0x1, 0x0);
        gbc.writeMem(0x4a28, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4a27);
        EXPECT(gbc.pc(), 0x4a29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0215
        gbc.setState(0x3ee0, 0x4056, 0x2b20, 0xf096, 0xbcf4, 0x3cb3, 0x0, 0x1);
        gbc.writeMem(0x3ee0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4056);
        EXPECT(gbc.pc(), 0x3ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0216
        gbc.setState(0x1c51, 0x70bb, 0xf150, 0x351e, 0x631a, 0xa003, 0x1, 0x0);
        gbc.writeMem(0x1c51, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x70bb);
        EXPECT(gbc.pc(), 0x1c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0217
        gbc.setState(0xebbe, 0x5215, 0x2730, 0x6628, 0x4ac4, 0xec70, 0x0, 0x1);
        gbc.writeMem(0xebbe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5215);
        EXPECT(gbc.pc(), 0xebbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbe), 0xb8);
        // B8 0218
        gbc.setState(0x43c2, 0x2515, 0x7740, 0xdcbe, 0x3916, 0x3bb3, 0x0, 0x0);
        gbc.writeMem(0x43c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2515);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0219
        gbc.setState(0xb6f3, 0x6e3c, 0xddd0, 0xb40a, 0x2e43, 0xeed8, 0x1, 0x1);
        gbc.writeMem(0xb6f3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x6e3c);
        EXPECT(gbc.pc(), 0xb6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f3), 0xb8);
        // B8 021A
        gbc.setState(0xac7b, 0xe68, 0xeb40, 0x278f, 0xb816, 0xa3b4, 0x1, 0x0);
        gbc.writeMem(0xac7b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe68);
        EXPECT(gbc.pc(), 0xac7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7b), 0xb8);
        // B8 021B
        gbc.setState(0x81d6, 0x3b44, 0xc3f0, 0xf495, 0x9909, 0x14bb, 0x1, 0x1);
        gbc.writeMem(0x81d6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3b44);
        EXPECT(gbc.pc(), 0x81d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d6), 0xb8);
        // B8 021D
        gbc.setState(0x4b2a, 0x3333, 0x9600, 0xd240, 0x8e48, 0xcaf7, 0x0, 0x0);
        gbc.writeMem(0x4b2a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3333);
        EXPECT(gbc.pc(), 0x4b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 021E
        gbc.setState(0x7fd5, 0xa5bd, 0x6310, 0x973, 0xe14f, 0xa700, 0x1, 0x0);
        gbc.writeMem(0x7fd5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa5bd);
        EXPECT(gbc.pc(), 0x7fd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 021F
        gbc.setState(0xbb3, 0x6709, 0x1790, 0x4e0f, 0xb2ae, 0x372e, 0x1, 0x0);
        gbc.writeMem(0xbb3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6709);
        EXPECT(gbc.pc(), 0xbb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0220
        gbc.setState(0x50f9, 0xe096, 0x27f0, 0x4faf, 0x9044, 0x5413, 0x1, 0x0);
        gbc.writeMem(0x50f9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe096);
        EXPECT(gbc.pc(), 0x50fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0221
        gbc.setState(0x53c2, 0x8224, 0xb8c0, 0xc63e, 0xa544, 0x3458, 0x1, 0x1);
        gbc.writeMem(0x53c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8224);
        EXPECT(gbc.pc(), 0x53c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0222
        gbc.setState(0x84e3, 0x2a5a, 0xefe0, 0xbe91, 0x6d4d, 0x74d7, 0x1, 0x1);
        gbc.writeMem(0x84e3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2a5a);
        EXPECT(gbc.pc(), 0x84e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e3), 0xb8);
        // B8 0223
        gbc.setState(0x7c28, 0x765e, 0x4150, 0xba9a, 0xbb94, 0xce90, 0x0, 0x0);
        gbc.writeMem(0x7c28, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x765e);
        EXPECT(gbc.pc(), 0x7c29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0224
        gbc.setState(0xad8a, 0x17d6, 0xd2b0, 0x519b, 0xe84c, 0x248a, 0x1, 0x1);
        gbc.writeMem(0xad8a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x17d6);
        EXPECT(gbc.pc(), 0xad8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8a), 0xb8);
        // B8 0225
        gbc.setState(0xb33e, 0xde4f, 0xe100, 0x4401, 0xca1a, 0x32a8, 0x0, 0x1);
        gbc.writeMem(0xb33e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xde4f);
        EXPECT(gbc.pc(), 0xb33f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33e), 0xb8);
        // B8 0226
        gbc.setState(0xa322, 0xe0d1, 0x22d0, 0xa6e1, 0xe034, 0xf049, 0x0, 0x1);
        gbc.writeMem(0xa322, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xe0d1);
        EXPECT(gbc.pc(), 0xa323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa322), 0xb8);
        // B8 0227
        gbc.setState(0xe98f, 0x28ca, 0xcb00, 0x9f91, 0xd7d3, 0x403, 0x1, 0x1);
        gbc.writeMem(0xe98f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x28ca);
        EXPECT(gbc.pc(), 0xe990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe98f), 0xb8);
        // B8 0228
        gbc.setState(0xad2, 0x7bb1, 0xaf40, 0x9361, 0x9f65, 0xbb61, 0x0, 0x0);
        gbc.writeMem(0xad2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7bb1);
        EXPECT(gbc.pc(), 0xad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0229
        gbc.setState(0x3baa, 0x98b1, 0x480, 0xb804, 0x98ca, 0xbf4d, 0x1, 0x1);
        gbc.writeMem(0x3baa, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x98b1);
        EXPECT(gbc.pc(), 0x3bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 022A
        gbc.setState(0x9cc0, 0xa6d6, 0x1230, 0xb8d9, 0x5b7b, 0x1701, 0x0, 0x0);
        gbc.writeMem(0x9cc0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa6d6);
        EXPECT(gbc.pc(), 0x9cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc0), 0xb8);
        // B8 022B
        gbc.setState(0x4cf4, 0xea0, 0x5450, 0xfe33, 0x2099, 0x33af, 0x0, 0x1);
        gbc.writeMem(0x4cf4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xea0);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 022C
        gbc.setState(0xa8e3, 0xc862, 0x3f20, 0x8ef9, 0x18d7, 0x78f5, 0x0, 0x0);
        gbc.writeMem(0xa8e3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc862);
        EXPECT(gbc.pc(), 0xa8e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e3), 0xb8);
        // B8 022D
        gbc.setState(0x957f, 0xe68, 0x29f0, 0xaf8b, 0x36e8, 0xfed6, 0x1, 0x1);
        gbc.writeMem(0x957f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe68);
        EXPECT(gbc.pc(), 0x9580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957f), 0xb8);
        // B8 022E
        gbc.setState(0x249, 0x8d4e, 0x9920, 0xca2a, 0x5031, 0xe436, 0x1, 0x0);
        gbc.writeMem(0x249, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8d4e);
        EXPECT(gbc.pc(), 0x24a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 022F
        gbc.setState(0x99ff, 0x11ba, 0x3810, 0x1e4f, 0x6a46, 0x1ee0, 0x0, 0x0);
        gbc.writeMem(0x99ff, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x11ba);
        EXPECT(gbc.pc(), 0x9a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ff), 0xb8);
        // B8 0230
        gbc.setState(0xc1bc, 0x3de1, 0x8d30, 0xaaa7, 0xed4b, 0x3613, 0x1, 0x0);
        gbc.writeMem(0xc1bc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3de1);
        EXPECT(gbc.pc(), 0xc1bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bc), 0xb8);
        // B8 0231
        gbc.setState(0x1af, 0xc0ed, 0x6250, 0xe81f, 0x3496, 0x83c3, 0x1, 0x0);
        gbc.writeMem(0x1af, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc0ed);
        EXPECT(gbc.pc(), 0x1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0232
        gbc.setState(0xccf0, 0xed2, 0x8b40, 0xe146, 0x1f7b, 0x694d, 0x0, 0x1);
        gbc.writeMem(0xccf0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xed2);
        EXPECT(gbc.pc(), 0xccf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf0), 0xb8);
        // B8 0233
        gbc.setState(0x11b1, 0x447b, 0x6550, 0xefd6, 0x5c04, 0xb52a, 0x1, 0x1);
        gbc.writeMem(0x11b1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x447b);
        EXPECT(gbc.pc(), 0x11b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0234
        gbc.setState(0x3b7, 0x6643, 0x72d0, 0x5ed1, 0xe5, 0x27af, 0x0, 0x1);
        gbc.writeMem(0x3b7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x6643);
        EXPECT(gbc.pc(), 0x3b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0235
        gbc.setState(0xeed8, 0xde54, 0x1c00, 0x23d3, 0x47c3, 0x903d, 0x1, 0x0);
        gbc.writeMem(0xeed8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xde54);
        EXPECT(gbc.pc(), 0xeed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed8), 0xb8);
        // B8 0236
        gbc.setState(0x8895, 0xda1f, 0x980, 0x18fc, 0x6ed, 0xd4e9, 0x1, 0x0);
        gbc.writeMem(0x8895, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xda1f);
        EXPECT(gbc.pc(), 0x8896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8895), 0xb8);
        // B8 0237
        gbc.setState(0x46f4, 0x3740, 0x9d20, 0x770a, 0xab12, 0x5495, 0x1, 0x0);
        gbc.writeMem(0x46f4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3740);
        EXPECT(gbc.pc(), 0x46f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0238
        gbc.setState(0xb4a2, 0x3c94, 0xda0, 0x1096, 0x5acf, 0xc530, 0x0, 0x1);
        gbc.writeMem(0xb4a2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3c94);
        EXPECT(gbc.pc(), 0xb4a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a2), 0xb8);
        // B8 023A
        gbc.setState(0x8cb5, 0xa01, 0x46a0, 0x98c6, 0xe6d8, 0x9cad, 0x1, 0x1);
        gbc.writeMem(0x8cb5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa01);
        EXPECT(gbc.pc(), 0x8cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb5), 0xb8);
        // B8 023B
        gbc.setState(0x17ea, 0xe6e3, 0x7030, 0xc59, 0xce2b, 0xc6d7, 0x0, 0x0);
        gbc.writeMem(0x17ea, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe6e3);
        EXPECT(gbc.pc(), 0x17eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 023D
        gbc.setState(0xb47, 0x1c18, 0x6850, 0x4f61, 0xb3b2, 0xf459, 0x0, 0x0);
        gbc.writeMem(0xb47, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1c18);
        EXPECT(gbc.pc(), 0xb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 023E
        gbc.setState(0x1e56, 0x118f, 0xc4d0, 0x4161, 0xf7e0, 0x3945, 0x1, 0x1);
        gbc.writeMem(0x1e56, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x118f);
        EXPECT(gbc.pc(), 0x1e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 023F
        gbc.setState(0x9bc1, 0xd4e1, 0x5dc0, 0x41f3, 0x9cb1, 0x873e, 0x0, 0x1);
        gbc.writeMem(0x9bc1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd4e1);
        EXPECT(gbc.pc(), 0x9bc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc1), 0xb8);
        // B8 0240
        gbc.setState(0x2926, 0xa045, 0x1040, 0x3140, 0xd7e9, 0x6306, 0x1, 0x0);
        gbc.writeMem(0x2926, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa045);
        EXPECT(gbc.pc(), 0x2927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0241
        gbc.setState(0xe5db, 0xe793, 0xfbe0, 0xabe7, 0x70a0, 0x27b9, 0x0, 0x1);
        gbc.writeMem(0xe5db, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe793);
        EXPECT(gbc.pc(), 0xe5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5db), 0xb8);
        // B8 0242
        gbc.setState(0xd94f, 0x24c9, 0xcc00, 0xd1f1, 0x6341, 0x8d62, 0x1, 0x1);
        gbc.writeMem(0xd94f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x24c9);
        EXPECT(gbc.pc(), 0xd950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd94f), 0xb8);
        // B8 0243
        gbc.setState(0xc0a7, 0xf29d, 0x64c0, 0x2323, 0x535d, 0x7cd7, 0x1, 0x0);
        gbc.writeMem(0xc0a7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf29d);
        EXPECT(gbc.pc(), 0xc0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a7), 0xb8);
        // B8 0244
        gbc.setState(0x1681, 0x4da8, 0x1790, 0x4dc6, 0x6861, 0x5c67, 0x0, 0x0);
        gbc.writeMem(0x1681, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4da8);
        EXPECT(gbc.pc(), 0x1682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0245
        gbc.setState(0x57f9, 0x55b2, 0x26a0, 0x28ca, 0x3f4e, 0x210e, 0x0, 0x1);
        gbc.writeMem(0x57f9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x55b2);
        EXPECT(gbc.pc(), 0x57fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0246
        gbc.setState(0x99bf, 0xd524, 0x73f0, 0x1097, 0x1f62, 0xcce1, 0x1, 0x0);
        gbc.writeMem(0x99bf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd524);
        EXPECT(gbc.pc(), 0x99c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99bf), 0xb8);
        // B8 0247
        gbc.setState(0x8a26, 0x6bd, 0xda30, 0x7d77, 0xacfa, 0x59e6, 0x0, 0x0);
        gbc.writeMem(0x8a26, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6bd);
        EXPECT(gbc.pc(), 0x8a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a26), 0xb8);
        // B8 0248
        gbc.setState(0xa721, 0xe53b, 0xd7a0, 0x99da, 0x815b, 0x8f4b, 0x1, 0x0);
        gbc.writeMem(0xa721, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe53b);
        EXPECT(gbc.pc(), 0xa722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa721), 0xb8);
        // B8 0249
        gbc.setState(0xbb92, 0x741c, 0x9e20, 0x6037, 0x4644, 0x351a, 0x1, 0x1);
        gbc.writeMem(0xbb92, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x741c);
        EXPECT(gbc.pc(), 0xbb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb92), 0xb8);
        // B8 024A
        gbc.setState(0x93e, 0x10bb, 0xbe80, 0x46ef, 0xea36, 0x5f1b, 0x0, 0x1);
        gbc.writeMem(0x93e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x10bb);
        EXPECT(gbc.pc(), 0x93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 024B
        gbc.setState(0xdd59, 0xa9f4, 0xcb70, 0xb933, 0xa623, 0x80d2, 0x0, 0x1);
        gbc.writeMem(0xdd59, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa9f4);
        EXPECT(gbc.pc(), 0xdd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd59), 0xb8);
        // B8 024C
        gbc.setState(0x84d8, 0x18f1, 0x52b0, 0x3d13, 0x7fe, 0x5a9a, 0x0, 0x1);
        gbc.writeMem(0x84d8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x18f1);
        EXPECT(gbc.pc(), 0x84d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84d8), 0xb8);
        // B8 024D
        gbc.setState(0x862e, 0x7ccb, 0x4bb0, 0xef13, 0xe12, 0xfb4, 0x1, 0x1);
        gbc.writeMem(0x862e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7ccb);
        EXPECT(gbc.pc(), 0x862f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862e), 0xb8);
        // B8 024E
        gbc.setState(0xb77b, 0xbc8f, 0xf020, 0x90b5, 0x80ce, 0xba74, 0x0, 0x1);
        gbc.writeMem(0xb77b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbc8f);
        EXPECT(gbc.pc(), 0xb77c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77b), 0xb8);
        // B8 024F
        gbc.setState(0x8b7b, 0xe31f, 0xaa60, 0x48ea, 0xe279, 0x1751, 0x1, 0x1);
        gbc.writeMem(0x8b7b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe31f);
        EXPECT(gbc.pc(), 0x8b7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7b), 0xb8);
        // B8 0250
        gbc.setState(0x27fd, 0x72a9, 0xa790, 0x4090, 0x994d, 0x6fb1, 0x1, 0x0);
        gbc.writeMem(0x27fd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x72a9);
        EXPECT(gbc.pc(), 0x27fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0251
        gbc.setState(0xe395, 0x675c, 0x1e30, 0xcbf4, 0xa25f, 0x4d25, 0x0, 0x1);
        gbc.writeMem(0xe395, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x675c);
        EXPECT(gbc.pc(), 0xe396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe395), 0xb8);
        // B8 0252
        gbc.setState(0xa47, 0xae5d, 0x40c0, 0xb163, 0xda3c, 0xbc74, 0x1, 0x1);
        gbc.writeMem(0xa47, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xae5d);
        EXPECT(gbc.pc(), 0xa48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0253
        gbc.setState(0xd726, 0x8a97, 0x2ba0, 0x6e74, 0x2bb0, 0x9689, 0x0, 0x0);
        gbc.writeMem(0xd726, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8a97);
        EXPECT(gbc.pc(), 0xd727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd726), 0xb8);
        // B8 0254
        gbc.setState(0xcc9f, 0xc2f3, 0x3b90, 0x7ffb, 0xab61, 0x264c, 0x0, 0x0);
        gbc.writeMem(0xcc9f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc2f3);
        EXPECT(gbc.pc(), 0xcca0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9f), 0xb8);
        // B8 0255
        gbc.setState(0xac73, 0x77d4, 0xb8f0, 0x37da, 0x6967, 0x38c9, 0x0, 0x0);
        gbc.writeMem(0xac73, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x77d4);
        EXPECT(gbc.pc(), 0xac74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac73), 0xb8);
        // B8 0256
        gbc.setState(0x675d, 0xca6b, 0x20, 0xe8ae, 0x10df, 0x1b1c, 0x0, 0x1);
        gbc.writeMem(0x675d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xca6b);
        EXPECT(gbc.pc(), 0x675e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0257
        gbc.setState(0x5915, 0x5c60, 0x3930, 0x8f51, 0x1326, 0x3e4e, 0x0, 0x1);
        gbc.writeMem(0x5915, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5c60);
        EXPECT(gbc.pc(), 0x5916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0258
        gbc.setState(0x106f, 0x2204, 0x9450, 0x6370, 0x1129, 0x9373, 0x1, 0x1);
        gbc.writeMem(0x106f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2204);
        EXPECT(gbc.pc(), 0x1070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0259
        gbc.setState(0x6a34, 0xc1d2, 0xed40, 0xcce5, 0xd8e3, 0x90d, 0x0, 0x0);
        gbc.writeMem(0x6a34, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc1d2);
        EXPECT(gbc.pc(), 0x6a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 025A
        gbc.setState(0xbb, 0xb8c2, 0xa50, 0x3a33, 0x8614, 0x7a43, 0x0, 0x0);
        gbc.writeMem(0xbb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb8c2);
        EXPECT(gbc.pc(), 0xbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 025B
        gbc.setState(0x371e, 0xfee3, 0x4920, 0xc300, 0x4cc9, 0x68e1, 0x0, 0x1);
        gbc.writeMem(0x371e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfee3);
        EXPECT(gbc.pc(), 0x371f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 025C
        gbc.setState(0xee8c, 0x4973, 0x9a20, 0xeaf5, 0x6be7, 0xbc0c, 0x0, 0x0);
        gbc.writeMem(0xee8c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4973);
        EXPECT(gbc.pc(), 0xee8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8c), 0xb8);
        // B8 025D
        gbc.setState(0x3773, 0xb9a1, 0x84d0, 0x2f31, 0x76b5, 0x1f05, 0x0, 0x1);
        gbc.writeMem(0x3773, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xb9a1);
        EXPECT(gbc.pc(), 0x3774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 025E
        gbc.setState(0x6c6d, 0xf9e1, 0xd30, 0x4088, 0x61f5, 0xf843, 0x0, 0x0);
        gbc.writeMem(0x6c6d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf9e1);
        EXPECT(gbc.pc(), 0x6c6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 025F
        gbc.setState(0xd9fc, 0x145b, 0xadf0, 0x60ae, 0x5f1f, 0x7725, 0x0, 0x1);
        gbc.writeMem(0xd9fc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x145b);
        EXPECT(gbc.pc(), 0xd9fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9fc), 0xb8);
        // B8 0260
        gbc.setState(0xacf8, 0xe643, 0xc980, 0x3d84, 0xb27d, 0xfbf8, 0x0, 0x1);
        gbc.writeMem(0xacf8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe643);
        EXPECT(gbc.pc(), 0xacf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf8), 0xb8);
        // B8 0261
        gbc.setState(0x5d09, 0xb2eb, 0xaa60, 0x6b52, 0xb6b7, 0x2cd4, 0x1, 0x0);
        gbc.writeMem(0x5d09, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb2eb);
        EXPECT(gbc.pc(), 0x5d0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0262
        gbc.setState(0x2930, 0x533d, 0xd690, 0xeb04, 0x74b8, 0x9692, 0x1, 0x1);
        gbc.writeMem(0x2930, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x533d);
        EXPECT(gbc.pc(), 0x2931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0264
        gbc.setState(0xdeca, 0x90c3, 0x68e0, 0x6ff8, 0x7267, 0xe88d, 0x0, 0x0);
        gbc.writeMem(0xdeca, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x90c3);
        EXPECT(gbc.pc(), 0xdecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeca), 0xb8);
        // B8 0265
        gbc.setState(0x3952, 0x3c41, 0x6300, 0x6ec3, 0x6856, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0x3952, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0x3953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0266
        gbc.setState(0x68dd, 0x6b35, 0xb10, 0xd43b, 0x501, 0xcf66, 0x0, 0x0);
        gbc.writeMem(0x68dd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6b35);
        EXPECT(gbc.pc(), 0x68de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0267
        gbc.setState(0x6ea5, 0x6e75, 0xfb10, 0xcbf2, 0xac5a, 0xb791, 0x1, 0x0);
        gbc.writeMem(0x6ea5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6e75);
        EXPECT(gbc.pc(), 0x6ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0269
        gbc.setState(0x673b, 0x82be, 0xd3c0, 0x4598, 0x3a28, 0x17b6, 0x0, 0x0);
        gbc.writeMem(0x673b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x82be);
        EXPECT(gbc.pc(), 0x673c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 026A
        gbc.setState(0x6b26, 0xcab4, 0xfa90, 0x57a8, 0xc9f9, 0x35ea, 0x0, 0x1);
        gbc.writeMem(0x6b26, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcab4);
        EXPECT(gbc.pc(), 0x6b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 026B
        gbc.setState(0x8056, 0x33d2, 0x6b80, 0x5972, 0x62f0, 0xd213, 0x0, 0x0);
        gbc.writeMem(0x8056, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x33d2);
        EXPECT(gbc.pc(), 0x8057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8056), 0xb8);
        // B8 026C
        gbc.setState(0x8a00, 0x2d44, 0xc410, 0xbaf3, 0x7ea0, 0x5bb7, 0x1, 0x1);
        gbc.writeMem(0x8a00, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x2d44);
        EXPECT(gbc.pc(), 0x8a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a00), 0xb8);
        // B8 026D
        gbc.setState(0xb6ec, 0xdc33, 0x1680, 0x78f5, 0xe846, 0xd1e9, 0x1, 0x0);
        gbc.writeMem(0xb6ec, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdc33);
        EXPECT(gbc.pc(), 0xb6ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ec), 0xb8);
        // B8 026E
        gbc.setState(0x353e, 0xfd0c, 0x8dc0, 0x312a, 0x4946, 0xca85, 0x1, 0x0);
        gbc.writeMem(0x353e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfd0c);
        EXPECT(gbc.pc(), 0x353f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 026F
        gbc.setState(0x53a1, 0xa2ea, 0x4d10, 0xd551, 0x5847, 0x4bf2, 0x0, 0x0);
        gbc.writeMem(0x53a1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa2ea);
        EXPECT(gbc.pc(), 0x53a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0270
        gbc.setState(0xe3ed, 0xa045, 0xf860, 0x537, 0xca15, 0xf02e, 0x1, 0x1);
        gbc.writeMem(0xe3ed, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa045);
        EXPECT(gbc.pc(), 0xe3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ed), 0xb8);
        // B8 0271
        gbc.setState(0x8b30, 0x2758, 0xa100, 0x70ec, 0x10c6, 0x2949, 0x0, 0x0);
        gbc.writeMem(0x8b30, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2758);
        EXPECT(gbc.pc(), 0x8b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b30), 0xb8);
        // B8 0272
        gbc.setState(0x6066, 0x31ef, 0xdc0, 0x701e, 0xa728, 0x4837, 0x0, 0x1);
        gbc.writeMem(0x6066, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x31ef);
        EXPECT(gbc.pc(), 0x6067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0273
        gbc.setState(0x94c8, 0xd7c0, 0x9c10, 0x380f, 0x46af, 0x17f2, 0x1, 0x0);
        gbc.writeMem(0x94c8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd7c0);
        EXPECT(gbc.pc(), 0x94c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c8), 0xb8);
        // B8 0274
        gbc.setState(0x8a6a, 0xd65b, 0x8010, 0xce49, 0xcf88, 0x74d1, 0x1, 0x1);
        gbc.writeMem(0x8a6a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd65b);
        EXPECT(gbc.pc(), 0x8a6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6a), 0xb8);
        // B8 0275
        gbc.setState(0x8de6, 0x5f76, 0x32e0, 0x7e0f, 0x3855, 0x1fcd, 0x1, 0x0);
        gbc.writeMem(0x8de6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5f76);
        EXPECT(gbc.pc(), 0x8de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de6), 0xb8);
        // B8 0276
        gbc.setState(0x5776, 0xa122, 0x9240, 0x8c1d, 0x7d91, 0x3d9a, 0x1, 0x0);
        gbc.writeMem(0x5776, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa122);
        EXPECT(gbc.pc(), 0x5777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0277
        gbc.setState(0xa595, 0xb059, 0x4aa0, 0x924d, 0xff8a, 0xf6c8, 0x0, 0x1);
        gbc.writeMem(0xa595, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb059);
        EXPECT(gbc.pc(), 0xa596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa595), 0xb8);
        // B8 0278
        gbc.setState(0xdc70, 0x6d4, 0xa190, 0xabe7, 0x3bdf, 0x4748, 0x0, 0x0);
        gbc.writeMem(0xdc70, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6d4);
        EXPECT(gbc.pc(), 0xdc71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc70), 0xb8);
        // B8 0279
        gbc.setState(0x2f01, 0x35d9, 0x5c20, 0x19a5, 0x9a4e, 0x7516, 0x1, 0x1);
        gbc.writeMem(0x2f01, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x35d9);
        EXPECT(gbc.pc(), 0x2f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 027A
        gbc.setState(0xeb33, 0xd397, 0x9960, 0xd975, 0x9d36, 0xd378, 0x1, 0x0);
        gbc.writeMem(0xeb33, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xd397);
        EXPECT(gbc.pc(), 0xeb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb33), 0xb8);
        // B8 027B
        gbc.setState(0xac45, 0x18f2, 0x2ae0, 0x7651, 0x82f5, 0xf776, 0x1, 0x1);
        gbc.writeMem(0xac45, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x18f2);
        EXPECT(gbc.pc(), 0xac46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac45), 0xb8);
        // B8 027C
        gbc.setState(0x5a66, 0x12d3, 0xdc00, 0x740d, 0x1684, 0xd2a5, 0x1, 0x1);
        gbc.writeMem(0x5a66, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x12d3);
        EXPECT(gbc.pc(), 0x5a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 027D
        gbc.setState(0x3fdd, 0xd5c2, 0x6130, 0x7192, 0x859d, 0xce92, 0x0, 0x0);
        gbc.writeMem(0x3fdd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd5c2);
        EXPECT(gbc.pc(), 0x3fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 027E
        gbc.setState(0x9d56, 0xd4d3, 0xa7b0, 0x11e9, 0x3923, 0x39f8, 0x0, 0x1);
        gbc.writeMem(0x9d56, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd4d3);
        EXPECT(gbc.pc(), 0x9d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d56), 0xb8);
        // B8 0280
        gbc.setState(0x769d, 0x8a74, 0x760, 0x3eb5, 0xc7f7, 0xece0, 0x1, 0x0);
        gbc.writeMem(0x769d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x769e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0281
        gbc.setState(0x36be, 0x5c61, 0x2dc0, 0x4d0, 0x7ae7, 0x95a0, 0x0, 0x0);
        gbc.writeMem(0x36be, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5c61);
        EXPECT(gbc.pc(), 0x36bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0282
        gbc.setState(0xd73a, 0x1696, 0x9b30, 0xf7e8, 0x8685, 0x67ee, 0x0, 0x1);
        gbc.writeMem(0xd73a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1696);
        EXPECT(gbc.pc(), 0xd73b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd73a), 0xb8);
        // B8 0283
        gbc.setState(0xec78, 0xf433, 0xfb20, 0xc876, 0xaa86, 0x5a01, 0x0, 0x1);
        gbc.writeMem(0xec78, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf433);
        EXPECT(gbc.pc(), 0xec79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec78), 0xb8);
        // B8 0284
        gbc.setState(0x425d, 0x535f, 0xbc30, 0xe8ac, 0x1e5f, 0x2453, 0x1, 0x1);
        gbc.writeMem(0x425d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x535f);
        EXPECT(gbc.pc(), 0x425e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0285
        gbc.setState(0x6cf1, 0x9b58, 0x14c0, 0xffbe, 0x607b, 0x40c0, 0x0, 0x1);
        gbc.writeMem(0x6cf1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x9b58);
        EXPECT(gbc.pc(), 0x6cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0286
        gbc.setState(0xb8f4, 0xd715, 0x8c60, 0x86bd, 0x930c, 0xda22, 0x0, 0x0);
        gbc.writeMem(0xb8f4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd715);
        EXPECT(gbc.pc(), 0xb8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f4), 0xb8);
        // B8 0287
        gbc.setState(0xdb3f, 0x213, 0xde90, 0xfc23, 0x13e1, 0xb0cb, 0x0, 0x1);
        gbc.writeMem(0xdb3f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0xdb40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3f), 0xb8);
        // B8 0288
        gbc.setState(0xaf9e, 0x2f2b, 0x7d30, 0x9dea, 0x54bb, 0x3714, 0x1, 0x0);
        gbc.writeMem(0xaf9e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2f2b);
        EXPECT(gbc.pc(), 0xaf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9e), 0xb8);
        // B8 0289
        gbc.setState(0xf6b, 0x5e80, 0xa660, 0x4c66, 0xedf6, 0xb7e1, 0x0, 0x1);
        gbc.writeMem(0xf6b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5e80);
        EXPECT(gbc.pc(), 0xf6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 028A
        gbc.setState(0xca0b, 0x6973, 0x6a30, 0xe41a, 0xd33e, 0xcf6d, 0x1, 0x1);
        gbc.writeMem(0xca0b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6973);
        EXPECT(gbc.pc(), 0xca0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca0b), 0xb8);
        // B8 028B
        gbc.setState(0x1c12, 0x637e, 0x2400, 0x1159, 0xf294, 0x2857, 0x1, 0x1);
        gbc.writeMem(0x1c12, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x637e);
        EXPECT(gbc.pc(), 0x1c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 028C
        gbc.setState(0x6679, 0xccfc, 0xe60, 0x8aba, 0x53c0, 0x7e93, 0x1, 0x1);
        gbc.writeMem(0x6679, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xccfc);
        EXPECT(gbc.pc(), 0x667a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 028E
        gbc.setState(0x5047, 0x4064, 0x240, 0x3be, 0x7f0c, 0x935, 0x0, 0x1);
        gbc.writeMem(0x5047, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4064);
        EXPECT(gbc.pc(), 0x5048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 028F
        gbc.setState(0x9f01, 0xba79, 0x7560, 0x2278, 0xa9e8, 0xeb28, 0x0, 0x1);
        gbc.writeMem(0x9f01, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xba79);
        EXPECT(gbc.pc(), 0x9f02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f01), 0xb8);
        // B8 0290
        gbc.setState(0xa0f2, 0xa28, 0xaed0, 0x88a, 0x561f, 0xa024, 0x0, 0x0);
        gbc.writeMem(0xa0f2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa28);
        EXPECT(gbc.pc(), 0xa0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f2), 0xb8);
        // B8 0291
        gbc.setState(0xd9c2, 0x5ab7, 0xce80, 0x5063, 0xb534, 0x3993, 0x0, 0x1);
        gbc.writeMem(0xd9c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5ab7);
        EXPECT(gbc.pc(), 0xd9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c2), 0xb8);
        // B8 0292
        gbc.setState(0x3357, 0xd839, 0x69b0, 0xfe80, 0xd1af, 0xff49, 0x0, 0x0);
        gbc.writeMem(0x3357, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd839);
        EXPECT(gbc.pc(), 0x3358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0293
        gbc.setState(0x2d81, 0x20d9, 0xf0, 0x11f2, 0x9be5, 0x2e90, 0x0, 0x0);
        gbc.writeMem(0x2d81, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x20d9);
        EXPECT(gbc.pc(), 0x2d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0294
        gbc.setState(0xea17, 0x1b55, 0x78a0, 0xf772, 0xaba1, 0x78b5, 0x0, 0x1);
        gbc.writeMem(0xea17, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1b55);
        EXPECT(gbc.pc(), 0xea18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea17), 0xb8);
        // B8 0295
        gbc.setState(0x855f, 0x98a7, 0x5470, 0xbe62, 0xceb4, 0x6c77, 0x1, 0x1);
        gbc.writeMem(0x855f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x98a7);
        EXPECT(gbc.pc(), 0x8560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855f), 0xb8);
        // B8 0296
        gbc.setState(0x2488, 0xcb49, 0x4b10, 0x904f, 0x7c09, 0x6521, 0x0, 0x0);
        gbc.writeMem(0x2488, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcb49);
        EXPECT(gbc.pc(), 0x2489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0298
        gbc.setState(0x82dd, 0xa817, 0x3730, 0xce2f, 0xe3d, 0x56d5, 0x1, 0x1);
        gbc.writeMem(0x82dd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa817);
        EXPECT(gbc.pc(), 0x82de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82dd), 0xb8);
        // B8 0299
        gbc.setState(0x50e2, 0xda44, 0xf3b0, 0x7451, 0x225a, 0x90b0, 0x0, 0x0);
        gbc.writeMem(0x50e2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xda44);
        EXPECT(gbc.pc(), 0x50e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 029A
        gbc.setState(0x3444, 0x3611, 0x1bf0, 0xdf36, 0x437, 0x738, 0x1, 0x1);
        gbc.writeMem(0x3444, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3611);
        EXPECT(gbc.pc(), 0x3445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 029B
        gbc.setState(0xc7c3, 0xe76e, 0xbef0, 0xf3b7, 0xf0ce, 0x482b, 0x0, 0x1);
        gbc.writeMem(0xc7c3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe76e);
        EXPECT(gbc.pc(), 0xc7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c3), 0xb8);
        // B8 029C
        gbc.setState(0xe55e, 0x359b, 0xcd50, 0x2846, 0x64b5, 0x6b3, 0x0, 0x0);
        gbc.writeMem(0xe55e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x359b);
        EXPECT(gbc.pc(), 0xe55f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55e), 0xb8);
        // B8 029D
        gbc.setState(0xcabd, 0x85a4, 0x27b0, 0xec6c, 0x6c, 0x3b5a, 0x1, 0x1);
        gbc.writeMem(0xcabd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x85a4);
        EXPECT(gbc.pc(), 0xcabe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcabd), 0xb8);
        // B8 029E
        gbc.setState(0x7a45, 0x7cdd, 0xec30, 0x72da, 0xeb43, 0xfa22, 0x1, 0x1);
        gbc.writeMem(0x7a45, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7cdd);
        EXPECT(gbc.pc(), 0x7a46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 029F
        gbc.setState(0xade8, 0xb7b4, 0x9390, 0xc958, 0xba4c, 0xad00, 0x1, 0x1);
        gbc.writeMem(0xade8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb7b4);
        EXPECT(gbc.pc(), 0xade9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xade8), 0xb8);
        // B8 02A0
        gbc.setState(0x7a5b, 0x58d0, 0x5810, 0x67d1, 0x9084, 0xd89c, 0x1, 0x0);
        gbc.writeMem(0x7a5b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x58d0);
        EXPECT(gbc.pc(), 0x7a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02A1
        gbc.setState(0x82ac, 0xfb13, 0x6130, 0x4ef1, 0xbc9a, 0xa9a1, 0x0, 0x1);
        gbc.writeMem(0x82ac, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfb13);
        EXPECT(gbc.pc(), 0x82ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ac), 0xb8);
        // B8 02A2
        gbc.setState(0x9d41, 0xaa6a, 0xdde0, 0x16d9, 0xab68, 0xc7d6, 0x0, 0x0);
        gbc.writeMem(0x9d41, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaa6a);
        EXPECT(gbc.pc(), 0x9d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d41), 0xb8);
        // B8 02A3
        gbc.setState(0x4c45, 0x8835, 0x4cd0, 0xd719, 0xfd3b, 0x4091, 0x0, 0x1);
        gbc.writeMem(0x4c45, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8835);
        EXPECT(gbc.pc(), 0x4c46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02A4
        gbc.setState(0xb747, 0x3a44, 0x2c90, 0xd6a7, 0xb208, 0xbca7, 0x1, 0x0);
        gbc.writeMem(0xb747, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3a44);
        EXPECT(gbc.pc(), 0xb748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb747), 0xb8);
        // B8 02A5
        gbc.setState(0x74a, 0x55b5, 0x2ae0, 0x8dfb, 0x5985, 0xafe5, 0x1, 0x0);
        gbc.writeMem(0x74a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x55b5);
        EXPECT(gbc.pc(), 0x74b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02A6
        gbc.setState(0x40c3, 0x9586, 0x5440, 0x60ae, 0xdbb9, 0x4e74, 0x1, 0x0);
        gbc.writeMem(0x40c3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9586);
        EXPECT(gbc.pc(), 0x40c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02A7
        gbc.setState(0xad77, 0xb177, 0x70f0, 0x8b8c, 0x138e, 0xdd0, 0x1, 0x1);
        gbc.writeMem(0xad77, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb177);
        EXPECT(gbc.pc(), 0xad78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad77), 0xb8);
        // B8 02A8
        gbc.setState(0x36c3, 0xf6e1, 0xb570, 0x9ef3, 0xbe8e, 0x4f68, 0x1, 0x1);
        gbc.writeMem(0x36c3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf6e1);
        EXPECT(gbc.pc(), 0x36c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02AA
        gbc.setState(0xdd59, 0x7a69, 0x4850, 0x591d, 0x4717, 0x36be, 0x0, 0x1);
        gbc.writeMem(0xdd59, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7a69);
        EXPECT(gbc.pc(), 0xdd5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd59), 0xb8);
        // B8 02AB
        gbc.setState(0xa469, 0xadef, 0x1630, 0x399b, 0x14bf, 0xcb60, 0x0, 0x1);
        gbc.writeMem(0xa469, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xadef);
        EXPECT(gbc.pc(), 0xa46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa469), 0xb8);
        // B8 02AC
        gbc.setState(0xc0df, 0x2735, 0xf520, 0x322c, 0x4c1, 0x83a0, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2735);
        EXPECT(gbc.pc(), 0xc0e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0df), 0xb8);
        // B8 02AD
        gbc.setState(0x56c6, 0x1f5e, 0xd380, 0xc612, 0xb9a0, 0x73f7, 0x1, 0x1);
        gbc.writeMem(0x56c6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1f5e);
        EXPECT(gbc.pc(), 0x56c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02AE
        gbc.setState(0xb250, 0x6478, 0x5890, 0xe0eb, 0xb67f, 0x3239, 0x0, 0x0);
        gbc.writeMem(0xb250, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6478);
        EXPECT(gbc.pc(), 0xb251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb250), 0xb8);
        // B8 02AF
        gbc.setState(0x976a, 0x71e5, 0xbb20, 0x2252, 0x2edb, 0xab49, 0x1, 0x1);
        gbc.writeMem(0x976a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x71e5);
        EXPECT(gbc.pc(), 0x976b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976a), 0xb8);
        // B8 02B0
        gbc.setState(0xd3a5, 0x8b7a, 0x5260, 0x892e, 0xbc74, 0x5e4c, 0x0, 0x0);
        gbc.writeMem(0xd3a5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8b7a);
        EXPECT(gbc.pc(), 0xd3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a5), 0xb8);
        // B8 02B1
        gbc.setState(0x3c39, 0x40b4, 0x3d30, 0xfdc3, 0x28f1, 0xb702, 0x0, 0x0);
        gbc.writeMem(0x3c39, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x40b4);
        EXPECT(gbc.pc(), 0x3c3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02B2
        gbc.setState(0xa663, 0x77fd, 0xb540, 0xd3ce, 0xd816, 0x70ba, 0x0, 0x0);
        gbc.writeMem(0xa663, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x77fd);
        EXPECT(gbc.pc(), 0xa664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa663), 0xb8);
        // B8 02B3
        gbc.setState(0xb65d, 0xb505, 0x6b90, 0x482f, 0x4df2, 0xcdde, 0x0, 0x0);
        gbc.writeMem(0xb65d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb505);
        EXPECT(gbc.pc(), 0xb65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65d), 0xb8);
        // B8 02B4
        gbc.setState(0xbb20, 0xf217, 0x5230, 0x5924, 0x7f24, 0x4d27, 0x1, 0x0);
        gbc.writeMem(0xbb20, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf217);
        EXPECT(gbc.pc(), 0xbb21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb20), 0xb8);
        // B8 02B5
        gbc.setState(0x4bad, 0x80b2, 0xfbf0, 0xf694, 0x11e4, 0xa90b, 0x1, 0x0);
        gbc.writeMem(0x4bad, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x80b2);
        EXPECT(gbc.pc(), 0x4bae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 02B6
        gbc.setState(0x2456, 0xe7db, 0x6320, 0x3588, 0x34b3, 0x7ec3, 0x0, 0x0);
        gbc.writeMem(0x2456, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe7db);
        EXPECT(gbc.pc(), 0x2457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02B8
        gbc.setState(0x774f, 0x547a, 0xbe70, 0x7753, 0x8db, 0x7e60, 0x1, 0x0);
        gbc.writeMem(0x774f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x547a);
        EXPECT(gbc.pc(), 0x7750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 02B9
        gbc.setState(0xea71, 0xfb4b, 0xe310, 0x858e, 0xe102, 0xe71c, 0x1, 0x0);
        gbc.writeMem(0xea71, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfb4b);
        EXPECT(gbc.pc(), 0xea72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea71), 0xb8);
        // B8 02BA
        gbc.setState(0x52a3, 0x4e75, 0xc110, 0xea3d, 0x90d7, 0x631f, 0x1, 0x1);
        gbc.writeMem(0x52a3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4e75);
        EXPECT(gbc.pc(), 0x52a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02BB
        gbc.setState(0x7f92, 0x3b19, 0xd800, 0x8e84, 0x7186, 0xf5a9, 0x1, 0x0);
        gbc.writeMem(0x7f92, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3b19);
        EXPECT(gbc.pc(), 0x7f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02BC
        gbc.setState(0x48e3, 0xf3c1, 0x29a0, 0x39e3, 0x7027, 0x1a8a, 0x0, 0x0);
        gbc.writeMem(0x48e3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf3c1);
        EXPECT(gbc.pc(), 0x48e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02BD
        gbc.setState(0x996c, 0xde2e, 0xa210, 0x4d76, 0x26c7, 0x50cb, 0x1, 0x1);
        gbc.writeMem(0x996c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xde2e);
        EXPECT(gbc.pc(), 0x996d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x996c), 0xb8);
        // B8 02BF
        gbc.setState(0x8d60, 0xb867, 0x15d0, 0x5ad, 0xc45e, 0x9064, 0x1, 0x1);
        gbc.writeMem(0x8d60, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb867);
        EXPECT(gbc.pc(), 0x8d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d60), 0xb8);
        // B8 02C0
        gbc.setState(0xd092, 0x52ae, 0xb1b0, 0x703f, 0xffea, 0xae97, 0x0, 0x1);
        gbc.writeMem(0xd092, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x52ae);
        EXPECT(gbc.pc(), 0xd093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd092), 0xb8);
        // B8 02C1
        gbc.setState(0x59f8, 0x56d6, 0x2750, 0x5003, 0xdce7, 0xf40d, 0x1, 0x1);
        gbc.writeMem(0x59f8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x56d6);
        EXPECT(gbc.pc(), 0x59f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02C2
        gbc.setState(0x2030, 0x8bf1, 0xd440, 0x3c4d, 0xe802, 0x3464, 0x0, 0x0);
        gbc.writeMem(0x2030, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8bf1);
        EXPECT(gbc.pc(), 0x2031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02C4
        gbc.setState(0x600, 0x67f5, 0xe1f0, 0xa3ef, 0xbf59, 0xbef1, 0x1, 0x1);
        gbc.writeMem(0x600, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x67f5);
        EXPECT(gbc.pc(), 0x601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02C5
        gbc.setState(0x7aaa, 0xa237, 0xec60, 0x9e63, 0xa2de, 0x65a8, 0x0, 0x0);
        gbc.writeMem(0x7aaa, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa237);
        EXPECT(gbc.pc(), 0x7aab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02C6
        gbc.setState(0x9ec6, 0x23ed, 0x28f0, 0x325b, 0x8cdd, 0x7de0, 0x0, 0x1);
        gbc.writeMem(0x9ec6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x23ed);
        EXPECT(gbc.pc(), 0x9ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ec6), 0xb8);
        // B8 02C7
        gbc.setState(0x6506, 0x171b, 0xf810, 0x2eb5, 0xc763, 0x15b0, 0x1, 0x0);
        gbc.writeMem(0x6506, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x171b);
        EXPECT(gbc.pc(), 0x6507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02C9
        gbc.setState(0xd35c, 0x2839, 0x180, 0xe6ad, 0x8861, 0x25ec, 0x0, 0x0);
        gbc.writeMem(0xd35c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2839);
        EXPECT(gbc.pc(), 0xd35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35c), 0xb8);
        // B8 02CA
        gbc.setState(0x33cc, 0xf3e5, 0x51e0, 0xcde2, 0xa913, 0x4e6a, 0x1, 0x1);
        gbc.writeMem(0x33cc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xf3e5);
        EXPECT(gbc.pc(), 0x33cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02CB
        gbc.setState(0xd7bd, 0x66bf, 0xd3a0, 0x8868, 0x88d2, 0x618b, 0x1, 0x1);
        gbc.writeMem(0xd7bd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x66bf);
        EXPECT(gbc.pc(), 0xd7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7bd), 0xb8);
        // B8 02CC
        gbc.setState(0x2773, 0xd674, 0x8680, 0xa742, 0xda8e, 0xfdd9, 0x0, 0x1);
        gbc.writeMem(0x2773, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd674);
        EXPECT(gbc.pc(), 0x2774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02CD
        gbc.setState(0x766d, 0xd393, 0x6d00, 0xc09e, 0x9fe2, 0xa14f, 0x1, 0x0);
        gbc.writeMem(0x766d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd393);
        EXPECT(gbc.pc(), 0x766e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02CE
        gbc.setState(0xe42d, 0xf61b, 0x3580, 0xac5c, 0x28f0, 0x4829, 0x0, 0x1);
        gbc.writeMem(0xe42d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf61b);
        EXPECT(gbc.pc(), 0xe42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe42d), 0xb8);
        // B8 02D0
        gbc.setState(0x66e6, 0xb7c9, 0xf050, 0xc963, 0x82be, 0x2115, 0x0, 0x0);
        gbc.writeMem(0x66e6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb7c9);
        EXPECT(gbc.pc(), 0x66e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02D1
        gbc.setState(0x9ce2, 0xe46, 0x6060, 0xf221, 0xe64d, 0xfa3, 0x1, 0x0);
        gbc.writeMem(0x9ce2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe46);
        EXPECT(gbc.pc(), 0x9ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce2), 0xb8);
        // B8 02D2
        gbc.setState(0x238f, 0x5018, 0x5af0, 0xa814, 0xfb8e, 0x7265, 0x1, 0x0);
        gbc.writeMem(0x238f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5018);
        EXPECT(gbc.pc(), 0x2390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02D3
        gbc.setState(0x318d, 0x34, 0x2ed0, 0x8aae, 0x809f, 0x53b3, 0x1, 0x0);
        gbc.writeMem(0x318d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x34);
        EXPECT(gbc.pc(), 0x318e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02D4
        gbc.setState(0x7166, 0xb3c6, 0xdcb0, 0xcd0f, 0x3b00, 0x6200, 0x1, 0x0);
        gbc.writeMem(0x7166, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb3c6);
        EXPECT(gbc.pc(), 0x7167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02D5
        gbc.setState(0x9e81, 0x7b99, 0x1470, 0xdfa5, 0xd53d, 0x4955, 0x1, 0x1);
        gbc.writeMem(0x9e81, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7b99);
        EXPECT(gbc.pc(), 0x9e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e81), 0xb8);
        // B8 02D6
        gbc.setState(0x7bff, 0x8e51, 0x38d0, 0x5b80, 0x8030, 0x668b, 0x1, 0x1);
        gbc.writeMem(0x7bff, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8e51);
        EXPECT(gbc.pc(), 0x7c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02D7
        gbc.setState(0x22d2, 0x9dde, 0xa240, 0x1984, 0xc750, 0x5534, 0x0, 0x0);
        gbc.writeMem(0x22d2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9dde);
        EXPECT(gbc.pc(), 0x22d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02D9
        gbc.setState(0xd80a, 0xc5a7, 0xae70, 0xdb6f, 0x29ec, 0xf24e, 0x0, 0x0);
        gbc.writeMem(0xd80a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc5a7);
        EXPECT(gbc.pc(), 0xd80b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80a), 0xb8);
        // B8 02DA
        gbc.setState(0x6463, 0x7c9b, 0xe5d0, 0xff94, 0x2792, 0x11f8, 0x1, 0x1);
        gbc.writeMem(0x6463, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7c9b);
        EXPECT(gbc.pc(), 0x6464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02DB
        gbc.setState(0x16c2, 0x3ee, 0x6e70, 0x399b, 0xf351, 0xe0a1, 0x1, 0x1);
        gbc.writeMem(0x16c2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3ee);
        EXPECT(gbc.pc(), 0x16c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 02DC
        gbc.setState(0x9018, 0xcbab, 0xf6a0, 0x9c99, 0x342c, 0x73d1, 0x0, 0x0);
        gbc.writeMem(0x9018, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcbab);
        EXPECT(gbc.pc(), 0x9019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9018), 0xb8);
        // B8 02DD
        gbc.setState(0x139d, 0x5ea6, 0xc810, 0x699d, 0x6b40, 0x1fcf, 0x1, 0x1);
        gbc.writeMem(0x139d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5ea6);
        EXPECT(gbc.pc(), 0x139e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02DE
        gbc.setState(0x722c, 0x2d87, 0xb930, 0x7ab9, 0x966f, 0x83a1, 0x0, 0x1);
        gbc.writeMem(0x722c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2d87);
        EXPECT(gbc.pc(), 0x722d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02DF
        gbc.setState(0xbea1, 0xb2e1, 0x4e00, 0x81a1, 0xa7a9, 0x3c2d, 0x0, 0x0);
        gbc.writeMem(0xbea1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb2e1);
        EXPECT(gbc.pc(), 0xbea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbea1), 0xb8);
        // B8 02E0
        gbc.setState(0xe40a, 0x8381, 0xd930, 0x85de, 0x9508, 0x6a50, 0x0, 0x0);
        gbc.writeMem(0xe40a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8381);
        EXPECT(gbc.pc(), 0xe40b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40a), 0xb8);
        // B8 02E1
        gbc.setState(0x86b2, 0x5566, 0xe0, 0x35a9, 0x6c57, 0xae1d, 0x1, 0x0);
        gbc.writeMem(0x86b2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5566);
        EXPECT(gbc.pc(), 0x86b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86b2), 0xb8);
        // B8 02E2
        gbc.setState(0xb3d8, 0x48e4, 0xafd0, 0x5f4d, 0x465a, 0xa9f4, 0x1, 0x1);
        gbc.writeMem(0xb3d8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x48e4);
        EXPECT(gbc.pc(), 0xb3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3d8), 0xb8);
        // B8 02E3
        gbc.setState(0x6231, 0x798e, 0x2a50, 0x23c1, 0xc673, 0x75ae, 0x0, 0x1);
        gbc.writeMem(0x6231, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x798e);
        EXPECT(gbc.pc(), 0x6232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 02E4
        gbc.setState(0x2c66, 0x7621, 0x1be0, 0x5570, 0x8696, 0x198, 0x0, 0x0);
        gbc.writeMem(0x2c66, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7621);
        EXPECT(gbc.pc(), 0x2c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02E5
        gbc.setState(0x90c7, 0xcfa8, 0x35e0, 0x28a, 0x7af9, 0x3221, 0x1, 0x0);
        gbc.writeMem(0x90c7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcfa8);
        EXPECT(gbc.pc(), 0x90c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c7), 0xb8);
        // B8 02E6
        gbc.setState(0x7cc8, 0xd878, 0x7f10, 0xfb39, 0x1126, 0x8eb6, 0x1, 0x1);
        gbc.writeMem(0x7cc8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd878);
        EXPECT(gbc.pc(), 0x7cc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02E7
        gbc.setState(0x11cc, 0x75bf, 0x8c60, 0x563f, 0x7913, 0x57f2, 0x1, 0x1);
        gbc.writeMem(0x11cc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x75bf);
        EXPECT(gbc.pc(), 0x11cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 02E8
        gbc.setState(0x5d57, 0xbed2, 0x5fa0, 0x4898, 0xb429, 0xd1d8, 0x0, 0x1);
        gbc.writeMem(0x5d57, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbed2);
        EXPECT(gbc.pc(), 0x5d58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 02E9
        gbc.setState(0x5750, 0x87e7, 0x790, 0x2645, 0x20dc, 0x6d23, 0x1, 0x0);
        gbc.writeMem(0x5750, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x87e7);
        EXPECT(gbc.pc(), 0x5751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02EA
        gbc.setState(0x917e, 0x801a, 0xc280, 0xcba3, 0x8296, 0xfe1c, 0x1, 0x0);
        gbc.writeMem(0x917e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x801a);
        EXPECT(gbc.pc(), 0x917f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x917e), 0xb8);
        // B8 02EB
        gbc.setState(0x48eb, 0x48ad, 0x35a0, 0xeb6, 0xbd06, 0xccf2, 0x0, 0x0);
        gbc.writeMem(0x48eb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x48ad);
        EXPECT(gbc.pc(), 0x48ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02EC
        gbc.setState(0x4842, 0x1b49, 0x76a0, 0xcacc, 0x30c7, 0x7182, 0x1, 0x1);
        gbc.writeMem(0x4842, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1b49);
        EXPECT(gbc.pc(), 0x4843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02ED
        gbc.setState(0xa32c, 0x894f, 0x92a0, 0xb522, 0xe85e, 0x8008, 0x1, 0x1);
        gbc.writeMem(0xa32c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x894f);
        EXPECT(gbc.pc(), 0xa32d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32c), 0xb8);
        // B8 02EE
        gbc.setState(0x1791, 0xdb4, 0xd210, 0x7d1e, 0x9fc8, 0x49cd, 0x1, 0x0);
        gbc.writeMem(0x1791, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdb4);
        EXPECT(gbc.pc(), 0x1792);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02EF
        gbc.setState(0xc62b, 0xa5a8, 0x3d10, 0x793b, 0xcac9, 0x3ee, 0x0, 0x1);
        gbc.writeMem(0xc62b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa5a8);
        EXPECT(gbc.pc(), 0xc62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62b), 0xb8);
        // B8 02F0
        gbc.setState(0xcfce, 0xd1ea, 0xb4e0, 0x6d91, 0x13d6, 0x9e20, 0x1, 0x0);
        gbc.writeMem(0xcfce, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd1ea);
        EXPECT(gbc.pc(), 0xcfcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfce), 0xb8);
        // B8 02F2
        gbc.setState(0x895e, 0x4862, 0x6040, 0x784b, 0x90e5, 0x52ea, 0x0, 0x0);
        gbc.writeMem(0x895e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4862);
        EXPECT(gbc.pc(), 0x895f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895e), 0xb8);
        // B8 02F3
        gbc.setState(0x5970, 0xdc38, 0xb990, 0xda2e, 0x4712, 0x9aa5, 0x0, 0x0);
        gbc.writeMem(0x5970, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdc38);
        EXPECT(gbc.pc(), 0x5971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 02F4
        gbc.setState(0xcd18, 0xb929, 0x1d70, 0xada1, 0x4ec6, 0x501, 0x1, 0x1);
        gbc.writeMem(0xcd18, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb929);
        EXPECT(gbc.pc(), 0xcd19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd18), 0xb8);
        // B8 02F6
        gbc.setState(0xe921, 0xbb68, 0x5550, 0xc284, 0x5e4b, 0xf3d9, 0x1, 0x0);
        gbc.writeMem(0xe921, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbb68);
        EXPECT(gbc.pc(), 0xe922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe921), 0xb8);
        // B8 02F7
        gbc.setState(0x6294, 0xa4a4, 0x87a0, 0xc37e, 0x69f1, 0xfa9f, 0x0, 0x0);
        gbc.writeMem(0x6294, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa4a4);
        EXPECT(gbc.pc(), 0x6295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 02F8
        gbc.setState(0xe243, 0xe71c, 0xfde0, 0xdbb6, 0x3fc2, 0x8f61, 0x0, 0x0);
        gbc.writeMem(0xe243, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe71c);
        EXPECT(gbc.pc(), 0xe244);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe243), 0xb8);
        // B8 02F9
        gbc.setState(0xa3bd, 0x2e96, 0x8b80, 0x675b, 0x2550, 0x68e0, 0x0, 0x0);
        gbc.writeMem(0xa3bd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2e96);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bd), 0xb8);
        // B8 02FA
        gbc.setState(0x8c4c, 0x22a3, 0x5cb0, 0x6e86, 0xd42a, 0xdc1e, 0x1, 0x0);
        gbc.writeMem(0x8c4c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x22a3);
        EXPECT(gbc.pc(), 0x8c4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c4c), 0xb8);
        // B8 02FB
        gbc.setState(0xa2eb, 0x20f6, 0x1630, 0x788a, 0xb95a, 0x72ea, 0x0, 0x1);
        gbc.writeMem(0xa2eb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x20f6);
        EXPECT(gbc.pc(), 0xa2ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2eb), 0xb8);
        // B8 02FC
        gbc.setState(0x8d09, 0xc76c, 0x70e0, 0x472b, 0xb4cc, 0xb980, 0x0, 0x0);
        gbc.writeMem(0x8d09, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xc76c);
        EXPECT(gbc.pc(), 0x8d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d09), 0xb8);
        // B8 02FD
        gbc.setState(0x2b77, 0x9833, 0xc850, 0x1c3f, 0xd402, 0x864a, 0x0, 0x1);
        gbc.writeMem(0x2b77, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0x2b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 02FE
        gbc.setState(0xa661, 0x5289, 0xaef0, 0xfc2, 0x5e7b, 0xdf6b, 0x1, 0x0);
        gbc.writeMem(0xa661, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5289);
        EXPECT(gbc.pc(), 0xa662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa661), 0xb8);
        // B8 02FF
        gbc.setState(0x889d, 0x273b, 0x9a0, 0x11ba, 0xd29c, 0x27fc, 0x0, 0x1);
        gbc.writeMem(0x889d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x273b);
        EXPECT(gbc.pc(), 0x889e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889d), 0xb8);
        // B8 0300
        gbc.setState(0x4687, 0x1985, 0x94b0, 0x3afb, 0xf90, 0x2808, 0x0, 0x1);
        gbc.writeMem(0x4687, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1985);
        EXPECT(gbc.pc(), 0x4688);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0301
        gbc.setState(0x32cd, 0xae31, 0xdec0, 0x820, 0x8e6a, 0x504e, 0x0, 0x0);
        gbc.writeMem(0x32cd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xae31);
        EXPECT(gbc.pc(), 0x32ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0302
        gbc.setState(0x2089, 0xc02d, 0xcf90, 0xea2a, 0x7a90, 0x187a, 0x1, 0x1);
        gbc.writeMem(0x2089, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc02d);
        EXPECT(gbc.pc(), 0x208a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0304
        gbc.setState(0x842b, 0xf542, 0x62d0, 0x6cab, 0xbf0a, 0xa6fc, 0x1, 0x0);
        gbc.writeMem(0x842b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf542);
        EXPECT(gbc.pc(), 0x842c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x842b), 0xb8);
        // B8 0305
        gbc.setState(0xc438, 0x59d7, 0xe860, 0xd043, 0xa376, 0x391f, 0x1, 0x1);
        gbc.writeMem(0xc438, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x59d7);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc438), 0xb8);
        // B8 0306
        gbc.setState(0x139, 0xbf51, 0xd500, 0x90eb, 0x21b8, 0x5e71, 0x1, 0x0);
        gbc.writeMem(0x139, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xbf51);
        EXPECT(gbc.pc(), 0x13a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0307
        gbc.setState(0x561a, 0x4375, 0xbe10, 0x895e, 0xfade, 0xcd91, 0x1, 0x1);
        gbc.writeMem(0x561a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4375);
        EXPECT(gbc.pc(), 0x561b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0308
        gbc.setState(0x5377, 0xcbe5, 0x46b0, 0x152a, 0xcdef, 0x7a37, 0x1, 0x1);
        gbc.writeMem(0x5377, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcbe5);
        EXPECT(gbc.pc(), 0x5378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0309
        gbc.setState(0xd868, 0xbbab, 0x8220, 0xd3ef, 0x5f4a, 0x7270, 0x0, 0x1);
        gbc.writeMem(0xd868, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbbab);
        EXPECT(gbc.pc(), 0xd869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd868), 0xb8);
        // B8 030A
        gbc.setState(0xbf18, 0x1b9a, 0xe150, 0x9127, 0xa6bd, 0x1042, 0x0, 0x1);
        gbc.writeMem(0xbf18, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1b9a);
        EXPECT(gbc.pc(), 0xbf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf18), 0xb8);
        // B8 030B
        gbc.setState(0x231f, 0xa975, 0xb590, 0x334b, 0x35ce, 0xc4d, 0x0, 0x0);
        gbc.writeMem(0x231f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa975);
        EXPECT(gbc.pc(), 0x2320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 030C
        gbc.setState(0xa77c, 0x4fb8, 0x8f40, 0xb6db, 0xbc2a, 0xd783, 0x1, 0x1);
        gbc.writeMem(0xa77c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4fb8);
        EXPECT(gbc.pc(), 0xa77d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa77c), 0xb8);
        // B8 030D
        gbc.setState(0x60e0, 0x4985, 0x44f0, 0x7197, 0x6b50, 0x66fb, 0x0, 0x1);
        gbc.writeMem(0x60e0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4985);
        EXPECT(gbc.pc(), 0x60e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 030E
        gbc.setState(0xbef5, 0x7f1c, 0xfe40, 0xc10c, 0x4a48, 0x360f, 0x0, 0x0);
        gbc.writeMem(0xbef5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7f1c);
        EXPECT(gbc.pc(), 0xbef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbef5), 0xb8);
        // B8 030F
        gbc.setState(0xddd0, 0x62b7, 0x3a50, 0xbf62, 0x65ac, 0x6f1c, 0x1, 0x0);
        gbc.writeMem(0xddd0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x62b7);
        EXPECT(gbc.pc(), 0xddd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd0), 0xb8);
        // B8 0310
        gbc.setState(0xcf0d, 0x807d, 0x2610, 0x3b95, 0xf5c8, 0x5ae8, 0x0, 0x0);
        gbc.writeMem(0xcf0d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x807d);
        EXPECT(gbc.pc(), 0xcf0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf0d), 0xb8);
        // B8 0311
        gbc.setState(0x3bae, 0x98b5, 0xb360, 0x81d6, 0xcb33, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0x3bae, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x98b5);
        EXPECT(gbc.pc(), 0x3baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0312
        gbc.setState(0x496a, 0x9b92, 0xad80, 0x2d3e, 0x99a7, 0xe0b3, 0x1, 0x1);
        gbc.writeMem(0x496a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x9b92);
        EXPECT(gbc.pc(), 0x496b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0313
        gbc.setState(0x60bd, 0x58eb, 0x28b0, 0xbf9f, 0xfcc, 0x59b6, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x58eb);
        EXPECT(gbc.pc(), 0x60be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0314
        gbc.setState(0xd379, 0xafcd, 0x8e80, 0x4161, 0x2521, 0xfc0f, 0x0, 0x0);
        gbc.writeMem(0xd379, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xafcd);
        EXPECT(gbc.pc(), 0xd37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd379), 0xb8);
        // B8 0315
        gbc.setState(0x6291, 0x3760, 0x2920, 0xd995, 0xa661, 0xcde2, 0x1, 0x1);
        gbc.writeMem(0x6291, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3760);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0316
        gbc.setState(0xabee, 0xe98e, 0x400, 0x72aa, 0x4f6e, 0x1223, 0x0, 0x1);
        gbc.writeMem(0xabee, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe98e);
        EXPECT(gbc.pc(), 0xabef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabee), 0xb8);
        // B8 0317
        gbc.setState(0xa7bb, 0x6eef, 0xe310, 0x6553, 0x63ef, 0x7772, 0x1, 0x1);
        gbc.writeMem(0xa7bb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6eef);
        EXPECT(gbc.pc(), 0xa7bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bb), 0xb8);
        // B8 0318
        gbc.setState(0x28a2, 0x49ca, 0xef00, 0x660d, 0xcd0f, 0xcd42, 0x0, 0x0);
        gbc.writeMem(0x28a2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x49ca);
        EXPECT(gbc.pc(), 0x28a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0319
        gbc.setState(0x1bbf, 0x5caa, 0x6b80, 0xfa6a, 0x484f, 0x20c3, 0x0, 0x0);
        gbc.writeMem(0x1bbf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x5caa);
        EXPECT(gbc.pc(), 0x1bc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 031A
        gbc.setState(0xbf64, 0x7dc2, 0xf220, 0xc33c, 0xca1f, 0xb007, 0x0, 0x0);
        gbc.writeMem(0xbf64, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7dc2);
        EXPECT(gbc.pc(), 0xbf65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf64), 0xb8);
        // B8 031B
        gbc.setState(0x6b8b, 0xdecb, 0x6810, 0xd76f, 0xc607, 0xe68a, 0x1, 0x1);
        gbc.writeMem(0x6b8b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdecb);
        EXPECT(gbc.pc(), 0x6b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 031C
        gbc.setState(0x34e5, 0x2f4d, 0xda00, 0x31cb, 0x61ad, 0xecd1, 0x0, 0x1);
        gbc.writeMem(0x34e5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2f4d);
        EXPECT(gbc.pc(), 0x34e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 031D
        gbc.setState(0x6617, 0x4c78, 0x5490, 0xc954, 0x12f7, 0x28c5, 0x1, 0x0);
        gbc.writeMem(0x6617, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4c78);
        EXPECT(gbc.pc(), 0x6618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 031E
        gbc.setState(0xa85b, 0x7c0a, 0x8e80, 0xa329, 0x93be, 0x83ff, 0x0, 0x1);
        gbc.writeMem(0xa85b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7c0a);
        EXPECT(gbc.pc(), 0xa85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85b), 0xb8);
        // B8 031F
        gbc.setState(0x98b3, 0x3ac3, 0xcc80, 0x7704, 0xaed3, 0xadc2, 0x0, 0x1);
        gbc.writeMem(0x98b3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3ac3);
        EXPECT(gbc.pc(), 0x98b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b3), 0xb8);
        // B8 0320
        gbc.setState(0xbf41, 0xb3d9, 0x4e20, 0x5570, 0xc69e, 0x3273, 0x1, 0x0);
        gbc.writeMem(0xbf41, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xb3d9);
        EXPECT(gbc.pc(), 0xbf42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf41), 0xb8);
        // B8 0321
        gbc.setState(0x81f8, 0x687d, 0x1ec0, 0xeae0, 0x7f0f, 0x4976, 0x0, 0x0);
        gbc.writeMem(0x81f8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x687d);
        EXPECT(gbc.pc(), 0x81f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f8), 0xb8);
        // B8 0322
        gbc.setState(0xaf5a, 0xb164, 0xd20, 0x7137, 0x11d5, 0x3e15, 0x0, 0x1);
        gbc.writeMem(0xaf5a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb164);
        EXPECT(gbc.pc(), 0xaf5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5a), 0xb8);
        // B8 0323
        gbc.setState(0xdd07, 0xc2f5, 0x77d0, 0x48ee, 0xce84, 0xfeb6, 0x0, 0x0);
        gbc.writeMem(0xdd07, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc2f5);
        EXPECT(gbc.pc(), 0xdd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd07), 0xb8);
        // B8 0324
        gbc.setState(0xb373, 0xd4f2, 0xa060, 0xd4db, 0xae58, 0xc991, 0x1, 0x0);
        gbc.writeMem(0xb373, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd4f2);
        EXPECT(gbc.pc(), 0xb374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb373), 0xb8);
        // B8 0325
        gbc.setState(0x37ef, 0x9397, 0x3500, 0x3c6f, 0xf28, 0xa312, 0x1, 0x1);
        gbc.writeMem(0x37ef, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9397);
        EXPECT(gbc.pc(), 0x37f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0326
        gbc.setState(0x1ebe, 0xc84d, 0x3760, 0xa6, 0x4a7e, 0x76e4, 0x0, 0x1);
        gbc.writeMem(0x1ebe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc84d);
        EXPECT(gbc.pc(), 0x1ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0327
        gbc.setState(0x7bf, 0x8935, 0x1e0, 0x7527, 0xfcc4, 0xc0fd, 0x0, 0x1);
        gbc.writeMem(0x7bf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8935);
        EXPECT(gbc.pc(), 0x7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0328
        gbc.setState(0x9179, 0xa8ea, 0xd5b0, 0xd9ed, 0xedb2, 0x7338, 0x1, 0x0);
        gbc.writeMem(0x9179, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa8ea);
        EXPECT(gbc.pc(), 0x917a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9179), 0xb8);
        // B8 0329
        gbc.setState(0x6651, 0x9442, 0x6310, 0x4707, 0xa291, 0x1fb2, 0x0, 0x1);
        gbc.writeMem(0x6651, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9442);
        EXPECT(gbc.pc(), 0x6652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 032A
        gbc.setState(0xb18a, 0x6a7e, 0xb9a0, 0xc5d9, 0xbf67, 0x3e82, 0x0, 0x1);
        gbc.writeMem(0xb18a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6a7e);
        EXPECT(gbc.pc(), 0xb18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18a), 0xb8);
        // B8 032B
        gbc.setState(0x1379, 0x953, 0x420, 0xa6a3, 0x397d, 0x6b8c, 0x1, 0x0);
        gbc.writeMem(0x1379, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x953);
        EXPECT(gbc.pc(), 0x137a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 032C
        gbc.setState(0xc69f, 0xf551, 0xccb0, 0x53f0, 0xf6b4, 0x9b89, 0x0, 0x1);
        gbc.writeMem(0xc69f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf551);
        EXPECT(gbc.pc(), 0xc6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc69f), 0xb8);
        // B8 032E
        gbc.setState(0x31f2, 0x28a5, 0xa3c0, 0x93af, 0x4da3, 0x5b1a, 0x1, 0x0);
        gbc.writeMem(0x31f2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x28a5);
        EXPECT(gbc.pc(), 0x31f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 032F
        gbc.setState(0x3f8, 0xd94c, 0xccf0, 0x1cd8, 0x47b7, 0x4bbb, 0x0, 0x0);
        gbc.writeMem(0x3f8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd94c);
        EXPECT(gbc.pc(), 0x3f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0330
        gbc.setState(0xae9c, 0x1110, 0xf740, 0x1011, 0x6e87, 0xa1ff, 0x0, 0x0);
        gbc.writeMem(0xae9c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1110);
        EXPECT(gbc.pc(), 0xae9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9c), 0xb8);
        // B8 0331
        gbc.setState(0xb4e, 0x430c, 0x9790, 0xa251, 0x6612, 0x30e8, 0x1, 0x1);
        gbc.writeMem(0xb4e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x430c);
        EXPECT(gbc.pc(), 0xb4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0332
        gbc.setState(0x808a, 0x2531, 0x18c0, 0xc4a2, 0x5c6a, 0x8611, 0x1, 0x1);
        gbc.writeMem(0x808a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2531);
        EXPECT(gbc.pc(), 0x808b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808a), 0xb8);
        // B8 0333
        gbc.setState(0xa703, 0xb33e, 0x1290, 0xb922, 0x8beb, 0x3065, 0x1, 0x1);
        gbc.writeMem(0xa703, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb33e);
        EXPECT(gbc.pc(), 0xa704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa703), 0xb8);
        // B8 0334
        gbc.setState(0x5ce2, 0x1041, 0x5430, 0x4056, 0x34b5, 0x987b, 0x1, 0x1);
        gbc.writeMem(0x5ce2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1041);
        EXPECT(gbc.pc(), 0x5ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0336
        gbc.setState(0x4c8e, 0x366c, 0x9d10, 0x2bd4, 0x618d, 0x4e6, 0x0, 0x1);
        gbc.writeMem(0x4c8e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x366c);
        EXPECT(gbc.pc(), 0x4c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0337
        gbc.setState(0x5a53, 0x5387, 0xefd0, 0x305c, 0xf953, 0x7ee, 0x1, 0x0);
        gbc.writeMem(0x5a53, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5387);
        EXPECT(gbc.pc(), 0x5a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0338
        gbc.setState(0xd5a5, 0xa7d5, 0xc80, 0xc65, 0x7aca, 0x7631, 0x0, 0x1);
        gbc.writeMem(0xd5a5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa7d5);
        EXPECT(gbc.pc(), 0xd5a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a5), 0xb8);
        // B8 0339
        gbc.setState(0x4178, 0xafaa, 0xab50, 0xea9, 0xe64a, 0xb388, 0x1, 0x0);
        gbc.writeMem(0x4178, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xafaa);
        EXPECT(gbc.pc(), 0x4179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 033A
        gbc.setState(0x87e3, 0xf1c0, 0x6f20, 0xad74, 0x19ef, 0x9cfd, 0x1, 0x1);
        gbc.writeMem(0x87e3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xf1c0);
        EXPECT(gbc.pc(), 0x87e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e3), 0xb8);
        // B8 033B
        gbc.setState(0x811, 0xdce3, 0xecb0, 0xab92, 0xe666, 0x61b0, 0x1, 0x1);
        gbc.writeMem(0x811, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdce3);
        EXPECT(gbc.pc(), 0x812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 033C
        gbc.setState(0x1c31, 0x90dd, 0xc570, 0xba43, 0x15a, 0x1cb3, 0x1, 0x0);
        gbc.writeMem(0x1c31, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x90dd);
        EXPECT(gbc.pc(), 0x1c32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 033D
        gbc.setState(0xa582, 0xeda3, 0x7480, 0x57ce, 0xed29, 0xada4, 0x1, 0x1);
        gbc.writeMem(0xa582, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xeda3);
        EXPECT(gbc.pc(), 0xa583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa582), 0xb8);
        // B8 033E
        gbc.setState(0x28dd, 0xc580, 0xc680, 0xe7fa, 0xbc5f, 0x3937, 0x1, 0x1);
        gbc.writeMem(0x28dd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xc580);
        EXPECT(gbc.pc(), 0x28de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 033F
        gbc.setState(0x73dd, 0xb53d, 0x150, 0xa34, 0x5195, 0x5f98, 0x0, 0x0);
        gbc.writeMem(0x73dd, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb53d);
        EXPECT(gbc.pc(), 0x73de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0340
        gbc.setState(0x8f4e, 0xe795, 0xf3b0, 0x2a80, 0xd1eb, 0x5a5b, 0x0, 0x0);
        gbc.writeMem(0x8f4e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe795);
        EXPECT(gbc.pc(), 0x8f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4e), 0xb8);
        // B8 0341
        gbc.setState(0xac71, 0x91a0, 0xb000, 0x75cd, 0xbaf2, 0x5320, 0x1, 0x1);
        gbc.writeMem(0xac71, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x91a0);
        EXPECT(gbc.pc(), 0xac72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac71), 0xb8);
        // B8 0342
        gbc.setState(0x75c9, 0x6ece, 0x59b0, 0x94cd, 0xe1d3, 0xb662, 0x1, 0x0);
        gbc.writeMem(0x75c9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6ece);
        EXPECT(gbc.pc(), 0x75ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0343
        gbc.setState(0x1dda, 0x40c, 0xc1e0, 0x51ed, 0x4de0, 0x46bb, 0x0, 0x0);
        gbc.writeMem(0x1dda, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x40c);
        EXPECT(gbc.pc(), 0x1ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0344
        gbc.setState(0x34d2, 0xb453, 0x3a70, 0xb028, 0x551a, 0x218, 0x1, 0x0);
        gbc.writeMem(0x34d2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb453);
        EXPECT(gbc.pc(), 0x34d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0345
        gbc.setState(0x31d5, 0xb55e, 0x4ac0, 0x67a, 0x28df, 0x9c90, 0x1, 0x0);
        gbc.writeMem(0x31d5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb55e);
        EXPECT(gbc.pc(), 0x31d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0346
        gbc.setState(0xa05b, 0x9b5a, 0x8430, 0x268a, 0x10c5, 0xe8c7, 0x0, 0x0);
        gbc.writeMem(0xa05b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9b5a);
        EXPECT(gbc.pc(), 0xa05c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa05b), 0xb8);
        // B8 0347
        gbc.setState(0x7640, 0x4b76, 0xc30, 0xc383, 0xf63a, 0x9903, 0x1, 0x0);
        gbc.writeMem(0x7640, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4b76);
        EXPECT(gbc.pc(), 0x7641);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0348
        gbc.setState(0xd723, 0x826c, 0xdb20, 0x1435, 0x5445, 0xdbc4, 0x0, 0x0);
        gbc.writeMem(0xd723, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x826c);
        EXPECT(gbc.pc(), 0xd724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd723), 0xb8);
        // B8 0349
        gbc.setState(0xd246, 0x37dd, 0xd7a0, 0x2d7f, 0xd91a, 0xefc5, 0x0, 0x0);
        gbc.writeMem(0xd246, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x37dd);
        EXPECT(gbc.pc(), 0xd247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd246), 0xb8);
        // B8 034A
        gbc.setState(0x400, 0xc631, 0xecd0, 0x6084, 0x2f2a, 0x2091, 0x0, 0x0);
        gbc.writeMem(0x400, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc631);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 034B
        gbc.setState(0x84bf, 0x5894, 0x1a0, 0x644d, 0xf246, 0x2c50, 0x1, 0x0);
        gbc.writeMem(0x84bf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5894);
        EXPECT(gbc.pc(), 0x84c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bf), 0xb8);
        // B8 034C
        gbc.setState(0x15e5, 0x91, 0x1610, 0xb52a, 0xefc1, 0xb16b, 0x1, 0x1);
        gbc.writeMem(0x15e5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x91);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 034D
        gbc.setState(0xbf0a, 0x5384, 0x8f0, 0x6c7a, 0x79c7, 0x3de2, 0x1, 0x0);
        gbc.writeMem(0xbf0a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5384);
        EXPECT(gbc.pc(), 0xbf0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf0a), 0xb8);
        // B8 034E
        gbc.setState(0x75f7, 0x8470, 0x13d0, 0x5e51, 0xf0db, 0xb3ca, 0x1, 0x1);
        gbc.writeMem(0x75f7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8470);
        EXPECT(gbc.pc(), 0x75f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 034F
        gbc.setState(0x2090, 0xa869, 0x4580, 0x3831, 0x266f, 0xd9e3, 0x0, 0x0);
        gbc.writeMem(0x2090, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa869);
        EXPECT(gbc.pc(), 0x2091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0350
        gbc.setState(0xd787, 0xac82, 0x5000, 0x3219, 0xe3f7, 0xef7a, 0x0, 0x1);
        gbc.writeMem(0xd787, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xac82);
        EXPECT(gbc.pc(), 0xd788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd787), 0xb8);
        // B8 0351
        gbc.setState(0x66ae, 0xc7ed, 0xad80, 0x8b00, 0x2e, 0x93b5, 0x0, 0x1);
        gbc.writeMem(0x66ae, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc7ed);
        EXPECT(gbc.pc(), 0x66af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0352
        gbc.setState(0x87d, 0xacd4, 0x9370, 0x7320, 0x6b79, 0x2c8, 0x0, 0x1);
        gbc.writeMem(0x87d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xacd4);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0353
        gbc.setState(0x9b70, 0x7a37, 0xabe0, 0xb388, 0xccd8, 0x3723, 0x0, 0x0);
        gbc.writeMem(0x9b70, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7a37);
        EXPECT(gbc.pc(), 0x9b71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b70), 0xb8);
        // B8 0354
        gbc.setState(0x6f9b, 0xe20a, 0xe370, 0xf61, 0xec54, 0xadec, 0x0, 0x0);
        gbc.writeMem(0x6f9b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe20a);
        EXPECT(gbc.pc(), 0x6f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0355
        gbc.setState(0xa04e, 0x1264, 0xda50, 0xff51, 0xe901, 0x43cc, 0x1, 0x1);
        gbc.writeMem(0xa04e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1264);
        EXPECT(gbc.pc(), 0xa04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa04e), 0xb8);
        // B8 0356
        gbc.setState(0xe14f, 0xd467, 0xbcd0, 0xd6b0, 0x7f06, 0x40f4, 0x1, 0x0);
        gbc.writeMem(0xe14f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd467);
        EXPECT(gbc.pc(), 0xe150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe14f), 0xb8);
        // B8 0357
        gbc.setState(0x2291, 0x987a, 0x2a40, 0xf769, 0xcc0f, 0x1f9, 0x0, 0x0);
        gbc.writeMem(0x2291, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x987a);
        EXPECT(gbc.pc(), 0x2292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0358
        gbc.setState(0x630f, 0x1487, 0xdf0, 0xe92c, 0x484b, 0x7f51, 0x1, 0x0);
        gbc.writeMem(0x630f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x1487);
        EXPECT(gbc.pc(), 0x6310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0359
        gbc.setState(0x49a6, 0x6850, 0x3d90, 0x55d0, 0x72d, 0xc44a, 0x1, 0x0);
        gbc.writeMem(0x49a6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6850);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 035A
        gbc.setState(0xfa, 0x96c3, 0x5260, 0x66e1, 0xad7a, 0xe5a5, 0x1, 0x1);
        gbc.writeMem(0xfa, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x96c3);
        EXPECT(gbc.pc(), 0xfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 035B
        gbc.setState(0xad9c, 0xf73a, 0x92a0, 0x9514, 0x514a, 0x926d, 0x0, 0x0);
        gbc.writeMem(0xad9c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf73a);
        EXPECT(gbc.pc(), 0xad9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad9c), 0xb8);
        // B8 035C
        gbc.setState(0x73a, 0xb20d, 0x1af0, 0x636a, 0xb3ae, 0xa0c, 0x1, 0x1);
        gbc.writeMem(0x73a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb20d);
        EXPECT(gbc.pc(), 0x73b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 035D
        gbc.setState(0x709b, 0xc6c3, 0xc2f0, 0x3351, 0xb488, 0xf8c3, 0x0, 0x0);
        gbc.writeMem(0x709b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc6c3);
        EXPECT(gbc.pc(), 0x709c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 035E
        gbc.setState(0x562e, 0x308, 0xf620, 0x4ee4, 0x5e9a, 0x49, 0x0, 0x0);
        gbc.writeMem(0x562e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x308);
        EXPECT(gbc.pc(), 0x562f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 035F
        gbc.setState(0xa2b2, 0x2b98, 0x3cd0, 0xf729, 0xaa8b, 0xee6a, 0x1, 0x0);
        gbc.writeMem(0xa2b2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2b98);
        EXPECT(gbc.pc(), 0xa2b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b2), 0xb8);
        // B8 0360
        gbc.setState(0x43d9, 0x1f55, 0x9a30, 0x3592, 0x4be1, 0x86b1, 0x0, 0x0);
        gbc.writeMem(0x43d9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1f55);
        EXPECT(gbc.pc(), 0x43da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0361
        gbc.setState(0x7dbe, 0x76b3, 0xf7e0, 0x138f, 0xd04, 0x3f33, 0x0, 0x0);
        gbc.writeMem(0x7dbe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x76b3);
        EXPECT(gbc.pc(), 0x7dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0362
        gbc.setState(0x3fee, 0x52f1, 0xa390, 0x5e42, 0x7527, 0x6724, 0x0, 0x0);
        gbc.writeMem(0x3fee, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x52f1);
        EXPECT(gbc.pc(), 0x3fef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0364
        gbc.setState(0x8a58, 0x5a4a, 0x39f0, 0xe5d9, 0x2bb7, 0x97e9, 0x1, 0x0);
        gbc.writeMem(0x8a58, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5a4a);
        EXPECT(gbc.pc(), 0x8a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a58), 0xb8);
        // B8 0365
        gbc.setState(0x5e92, 0x201c, 0x5f10, 0xc10f, 0x83d6, 0x87ab, 0x1, 0x1);
        gbc.writeMem(0x5e92, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x201c);
        EXPECT(gbc.pc(), 0x5e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 0366
        gbc.setState(0x1223, 0x711a, 0xec40, 0x31ce, 0xe37a, 0xc12d, 0x0, 0x1);
        gbc.writeMem(0x1223, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x711a);
        EXPECT(gbc.pc(), 0x1224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0367
        gbc.setState(0xe951, 0xd7c5, 0x52b0, 0x4d99, 0x84e9, 0x2c77, 0x0, 0x0);
        gbc.writeMem(0xe951, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0xe952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe951), 0xb8);
        // B8 0368
        gbc.setState(0xc8d8, 0xa9c1, 0x7200, 0x44d7, 0x57dd, 0xe50e, 0x0, 0x1);
        gbc.writeMem(0xc8d8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa9c1);
        EXPECT(gbc.pc(), 0xc8d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d8), 0xb8);
        // B8 036A
        gbc.setState(0xe0a7, 0xd559, 0x2a90, 0x26db, 0x8356, 0xcf3, 0x1, 0x0);
        gbc.writeMem(0xe0a7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd559);
        EXPECT(gbc.pc(), 0xe0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a7), 0xb8);
        // B8 036B
        gbc.setState(0x81ec, 0xd238, 0x32c0, 0xff41, 0x9bf6, 0x2287, 0x1, 0x0);
        gbc.writeMem(0x81ec, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd238);
        EXPECT(gbc.pc(), 0x81ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ec), 0xb8);
        // B8 036C
        gbc.setState(0x39da, 0xec, 0x6d90, 0x5514, 0x1104, 0xc703, 0x1, 0x0);
        gbc.writeMem(0x39da, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xec);
        EXPECT(gbc.pc(), 0x39db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 036D
        gbc.setState(0xe113, 0xd553, 0x6370, 0x1505, 0x8046, 0x1dac, 0x0, 0x0);
        gbc.writeMem(0xe113, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd553);
        EXPECT(gbc.pc(), 0xe114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe113), 0xb8);
        // B8 036E
        gbc.setState(0x441c, 0x12bb, 0x5920, 0x8a9a, 0x7369, 0x953d, 0x1, 0x0);
        gbc.writeMem(0x441c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x12bb);
        EXPECT(gbc.pc(), 0x441d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 036F
        gbc.setState(0x6df0, 0xb79f, 0xd670, 0x6c0c, 0x28ba, 0x62c8, 0x1, 0x0);
        gbc.writeMem(0x6df0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb79f);
        EXPECT(gbc.pc(), 0x6df1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0370
        gbc.setState(0x27d9, 0x866c, 0x8930, 0x32ea, 0xf1e0, 0x7666, 0x0, 0x0);
        gbc.writeMem(0x27d9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x866c);
        EXPECT(gbc.pc(), 0x27da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0371
        gbc.setState(0x1d43, 0x5d56, 0x3360, 0xe77f, 0x284d, 0xb30e, 0x0, 0x0);
        gbc.writeMem(0x1d43, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5d56);
        EXPECT(gbc.pc(), 0x1d44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0372
        gbc.setState(0xec8c, 0x3a8, 0xe940, 0x2880, 0xce14, 0x4c92, 0x0, 0x1);
        gbc.writeMem(0xec8c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3a8);
        EXPECT(gbc.pc(), 0xec8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec8c), 0xb8);
        // B8 0373
        gbc.setState(0x363e, 0x848f, 0x3540, 0xda7b, 0xffc7, 0x3cc7, 0x0, 0x0);
        gbc.writeMem(0x363e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0x363f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0374
        gbc.setState(0x71f0, 0xe0e7, 0xffe0, 0x9592, 0xd604, 0xeb07, 0x0, 0x1);
        gbc.writeMem(0x71f0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe0e7);
        EXPECT(gbc.pc(), 0x71f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0375
        gbc.setState(0x9a0, 0x502a, 0x8780, 0xea9a, 0xe13a, 0x588, 0x1, 0x0);
        gbc.writeMem(0x9a0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x502a);
        EXPECT(gbc.pc(), 0x9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0376
        gbc.setState(0x797a, 0xdd25, 0xb730, 0xa876, 0x360a, 0xaf2b, 0x0, 0x1);
        gbc.writeMem(0x797a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdd25);
        EXPECT(gbc.pc(), 0x797b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0377
        gbc.setState(0x7510, 0x717c, 0xe9e0, 0x5def, 0x42e, 0x6fa1, 0x0, 0x0);
        gbc.writeMem(0x7510, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x717c);
        EXPECT(gbc.pc(), 0x7511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0378
        gbc.setState(0x405e, 0x5fff, 0x8f90, 0x3bc3, 0xc69f, 0xbec7, 0x1, 0x0);
        gbc.writeMem(0x405e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x5fff);
        EXPECT(gbc.pc(), 0x405f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0379
        gbc.setState(0xdcbb, 0x4ce4, 0x8a00, 0x9a6c, 0x3ec3, 0x2403, 0x0, 0x1);
        gbc.writeMem(0xdcbb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4ce4);
        EXPECT(gbc.pc(), 0xdcbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcbb), 0xb8);
        // B8 037A
        gbc.setState(0x1599, 0xc4b7, 0x7200, 0x5cb0, 0xf4fb, 0xe141, 0x1, 0x0);
        gbc.writeMem(0x1599, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc4b7);
        EXPECT(gbc.pc(), 0x159a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 037B
        gbc.setState(0xd2af, 0x934d, 0x77d0, 0x56f1, 0xa5ad, 0x996, 0x1, 0x1);
        gbc.writeMem(0xd2af, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x934d);
        EXPECT(gbc.pc(), 0xd2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2af), 0xb8);
        // B8 037C
        gbc.setState(0xe9b6, 0xd317, 0xce00, 0x1968, 0xa82b, 0xabdc, 0x0, 0x0);
        gbc.writeMem(0xe9b6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd317);
        EXPECT(gbc.pc(), 0xe9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b6), 0xb8);
        // B8 037D
        gbc.setState(0xacc, 0xa912, 0x7c90, 0x5884, 0x112d, 0xdc74, 0x0, 0x0);
        gbc.writeMem(0xacc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa912);
        EXPECT(gbc.pc(), 0xacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 037E
        gbc.setState(0x2f93, 0x29d0, 0x15d0, 0xef0a, 0xdc81, 0x98b6, 0x1, 0x1);
        gbc.writeMem(0x2f93, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x29d0);
        EXPECT(gbc.pc(), 0x2f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 037F
        gbc.setState(0xaa82, 0xbc36, 0x1370, 0x8e18, 0x5ef5, 0xbfb2, 0x1, 0x0);
        gbc.writeMem(0xaa82, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbc36);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa82), 0xb8);
        // B8 0380
        gbc.setState(0xc4b5, 0xc914, 0x9390, 0x70d2, 0x715, 0x36d2, 0x0, 0x0);
        gbc.writeMem(0xc4b5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc914);
        EXPECT(gbc.pc(), 0xc4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b5), 0xb8);
        // B8 0381
        gbc.setState(0xe1df, 0x958f, 0x1160, 0x249f, 0x26d5, 0x5017, 0x1, 0x0);
        gbc.writeMem(0xe1df, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x958f);
        EXPECT(gbc.pc(), 0xe1e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1df), 0xb8);
        // B8 0382
        gbc.setState(0xd5fb, 0x2675, 0x2b70, 0x1fab, 0xa599, 0xf60f, 0x0, 0x0);
        gbc.writeMem(0xd5fb, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2675);
        EXPECT(gbc.pc(), 0xd5fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fb), 0xb8);
        // B8 0383
        gbc.setState(0xe869, 0x52bd, 0xbb40, 0x25fb, 0xd411, 0x743e, 0x0, 0x0);
        gbc.writeMem(0xe869, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x52bd);
        EXPECT(gbc.pc(), 0xe86a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe869), 0xb8);
        // B8 0384
        gbc.setState(0xc2e4, 0xba0, 0x2e20, 0x5da1, 0x7d87, 0x9d1f, 0x0, 0x1);
        gbc.writeMem(0xc2e4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xba0);
        EXPECT(gbc.pc(), 0xc2e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e4), 0xb8);
        // B8 0385
        gbc.setState(0x16e7, 0xf0c1, 0xa6e0, 0x996b, 0x605e, 0xa2, 0x1, 0x0);
        gbc.writeMem(0x16e7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf0c1);
        EXPECT(gbc.pc(), 0x16e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0386
        gbc.setState(0x658d, 0x8fde, 0x9580, 0x910b, 0x1ec6, 0x7724, 0x0, 0x1);
        gbc.writeMem(0x658d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8fde);
        EXPECT(gbc.pc(), 0x658e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0387
        gbc.setState(0xd857, 0x85aa, 0x7470, 0x4e82, 0xe349, 0xec00, 0x1, 0x1);
        gbc.writeMem(0xd857, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x85aa);
        EXPECT(gbc.pc(), 0xd858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd857), 0xb8);
        // B8 0388
        gbc.setState(0xe9ff, 0x4d5a, 0xb200, 0x59f2, 0x1031, 0x822, 0x1, 0x1);
        gbc.writeMem(0xe9ff, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4d5a);
        EXPECT(gbc.pc(), 0xea00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ff), 0xb8);
        // B8 0389
        gbc.setState(0x4e0c, 0x390e, 0x6660, 0x3cba, 0xcf66, 0x888a, 0x0, 0x0);
        gbc.writeMem(0x4e0c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x390e);
        EXPECT(gbc.pc(), 0x4e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 038A
        gbc.setState(0xadba, 0x8019, 0x9510, 0x3531, 0xa552, 0x386d, 0x0, 0x0);
        gbc.writeMem(0xadba, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8019);
        EXPECT(gbc.pc(), 0xadbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadba), 0xb8);
        // B8 038C
        gbc.setState(0x6683, 0xbfc2, 0x2c50, 0x2f8, 0x3fb3, 0xb84e, 0x0, 0x0);
        gbc.writeMem(0x6683, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbfc2);
        EXPECT(gbc.pc(), 0x6684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 038D
        gbc.setState(0x7fdc, 0x1b9a, 0x4970, 0xa211, 0xb72d, 0x6f68, 0x0, 0x0);
        gbc.writeMem(0x7fdc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1b9a);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 038E
        gbc.setState(0x36da, 0x2566, 0xbdd0, 0x6a6, 0xdd11, 0x9ea2, 0x0, 0x1);
        gbc.writeMem(0x36da, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2566);
        EXPECT(gbc.pc(), 0x36db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 038F
        gbc.setState(0xbc9c, 0x7e65, 0xc7f0, 0x3d39, 0x6934, 0xf1b6, 0x1, 0x0);
        gbc.writeMem(0xbc9c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e65);
        EXPECT(gbc.pc(), 0xbc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc9c), 0xb8);
        // B8 0390
        gbc.setState(0x6b58, 0x7307, 0xc990, 0xaede, 0xb93e, 0x1c8c, 0x1, 0x0);
        gbc.writeMem(0x6b58, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x7307);
        EXPECT(gbc.pc(), 0x6b59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0391
        gbc.setState(0x34e1, 0xd445, 0xc200, 0xd376, 0xf53d, 0x6bf4, 0x1, 0x0);
        gbc.writeMem(0x34e1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd445);
        EXPECT(gbc.pc(), 0x34e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 0392
        gbc.setState(0x6bd7, 0xa231, 0xf2b0, 0x6cea, 0x2d81, 0xd3dd, 0x0, 0x0);
        gbc.writeMem(0x6bd7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa231);
        EXPECT(gbc.pc(), 0x6bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 0393
        gbc.setState(0x68d, 0x8f2d, 0x90c0, 0x50f5, 0xcc86, 0x9cd0, 0x0, 0x0);
        gbc.writeMem(0x68d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8f2d);
        EXPECT(gbc.pc(), 0x68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0394
        gbc.setState(0x6b54, 0x1635, 0x8f40, 0x64d6, 0xbd3f, 0x322, 0x1, 0x1);
        gbc.writeMem(0x6b54, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1635);
        EXPECT(gbc.pc(), 0x6b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0395
        gbc.setState(0x2c3f, 0x416d, 0xca50, 0x30c6, 0x6292, 0x34a3, 0x1, 0x0);
        gbc.writeMem(0x2c3f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x416d);
        EXPECT(gbc.pc(), 0x2c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0396
        gbc.setState(0x588, 0xe61c, 0xfc50, 0x888b, 0x963a, 0x60e7, 0x0, 0x0);
        gbc.writeMem(0x588, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe61c);
        EXPECT(gbc.pc(), 0x589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0397
        gbc.setState(0x50d9, 0x5623, 0xfe70, 0x2b70, 0xaf98, 0xcb14, 0x0, 0x1);
        gbc.writeMem(0x50d9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5623);
        EXPECT(gbc.pc(), 0x50da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0398
        gbc.setState(0x29ea, 0xbe1a, 0x8db0, 0x73b0, 0x25a9, 0xcb13, 0x0, 0x0);
        gbc.writeMem(0x29ea, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xbe1a);
        EXPECT(gbc.pc(), 0x29eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 0399
        gbc.setState(0x875f, 0xb0ea, 0x95b0, 0xee20, 0xe98f, 0x112a, 0x0, 0x1);
        gbc.writeMem(0x875f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb0ea);
        EXPECT(gbc.pc(), 0x8760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875f), 0xb8);
        // B8 039A
        gbc.setState(0x2425, 0x31db, 0xd290, 0xf48, 0x4e5, 0xe64, 0x1, 0x0);
        gbc.writeMem(0x2425, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x31db);
        EXPECT(gbc.pc(), 0x2426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 039B
        gbc.setState(0x226d, 0x897f, 0x72e0, 0xda62, 0x224c, 0xe714, 0x1, 0x1);
        gbc.writeMem(0x226d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x897f);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 039C
        gbc.setState(0xc065, 0x8b8e, 0xa630, 0x8c4d, 0x41f5, 0x2c19, 0x1, 0x0);
        gbc.writeMem(0xc065, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8b8e);
        EXPECT(gbc.pc(), 0xc066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc065), 0xb8);
        // B8 039D
        gbc.setState(0x1a13, 0xf258, 0x8d30, 0xf725, 0x4299, 0x151f, 0x1, 0x1);
        gbc.writeMem(0x1a13, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf258);
        EXPECT(gbc.pc(), 0x1a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 039E
        gbc.setState(0x3287, 0x9d0f, 0xea50, 0x9be2, 0x9a63, 0xb436, 0x0, 0x0);
        gbc.writeMem(0x3287, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9d0f);
        EXPECT(gbc.pc(), 0x3288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 039F
        gbc.setState(0x66fc, 0xaff4, 0x8b90, 0xeaa2, 0xe1b3, 0xf8fd, 0x0, 0x0);
        gbc.writeMem(0x66fc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xaff4);
        EXPECT(gbc.pc(), 0x66fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 03A0
        gbc.setState(0xaa02, 0xf031, 0xb870, 0x9c7c, 0x8f5, 0xfbc9, 0x1, 0x1);
        gbc.writeMem(0xaa02, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xf031);
        EXPECT(gbc.pc(), 0xaa03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa02), 0xb8);
        // B8 03A2
        gbc.setState(0x5917, 0xd400, 0x94e0, 0xc481, 0x685b, 0x507e, 0x1, 0x0);
        gbc.writeMem(0x5917, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd400);
        EXPECT(gbc.pc(), 0x5918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 03A3
        gbc.setState(0xa569, 0xee07, 0x8010, 0x3960, 0x5979, 0xdc5c, 0x0, 0x0);
        gbc.writeMem(0xa569, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xee07);
        EXPECT(gbc.pc(), 0xa56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa569), 0xb8);
        // B8 03A4
        gbc.setState(0x7f53, 0x298c, 0x16b0, 0x5917, 0x8bcf, 0xbd0e, 0x1, 0x0);
        gbc.writeMem(0x7f53, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x298c);
        EXPECT(gbc.pc(), 0x7f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 03A5
        gbc.setState(0x6dc0, 0x8501, 0x8a80, 0x93cf, 0xc1ed, 0xa73f, 0x0, 0x1);
        gbc.writeMem(0x6dc0, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x8501);
        EXPECT(gbc.pc(), 0x6dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 03A6
        gbc.setState(0xd414, 0x1019, 0x8580, 0x8568, 0xaf0a, 0xbc7f, 0x1, 0x0);
        gbc.writeMem(0xd414, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1019);
        EXPECT(gbc.pc(), 0xd415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd414), 0xb8);
        // B8 03A7
        gbc.setState(0x7a8d, 0xddc9, 0x1110, 0x98c5, 0xe44b, 0x48ec, 0x1, 0x1);
        gbc.writeMem(0x7a8d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xddc9);
        EXPECT(gbc.pc(), 0x7a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 03A8
        gbc.setState(0x878c, 0x1f7, 0xab20, 0xa88e, 0x5c8f, 0x1516, 0x1, 0x0);
        gbc.writeMem(0x878c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1f7);
        EXPECT(gbc.pc(), 0x878d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x878c), 0xb8);
        // B8 03A9
        gbc.setState(0xc48, 0x333b, 0x5ba0, 0x5102, 0x496c, 0x3e08, 0x1, 0x0);
        gbc.writeMem(0xc48, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x333b);
        EXPECT(gbc.pc(), 0xc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03AA
        gbc.setState(0x4a4e, 0xed6d, 0x140, 0x2e3d, 0xc3fc, 0xee4d, 0x0, 0x1);
        gbc.writeMem(0x4a4e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xed6d);
        EXPECT(gbc.pc(), 0x4a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 03AB
        gbc.setState(0xaea3, 0x940e, 0xdbd0, 0x6ef6, 0x8791, 0x29ac, 0x1, 0x1);
        gbc.writeMem(0xaea3, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x940e);
        EXPECT(gbc.pc(), 0xaea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaea3), 0xb8);
        // B8 03AD
        gbc.setState(0x9a2a, 0xc504, 0xecb0, 0x6744, 0x9130, 0x6e86, 0x1, 0x1);
        gbc.writeMem(0x9a2a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc504);
        EXPECT(gbc.pc(), 0x9a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a2a), 0xb8);
        // B8 03AE
        gbc.setState(0x7440, 0x3d19, 0x2b0, 0x2ba5, 0x2395, 0x43e8, 0x0, 0x0);
        gbc.writeMem(0x7440, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3d19);
        EXPECT(gbc.pc(), 0x7441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 03AF
        gbc.setState(0x1d17, 0xa07c, 0x8e30, 0xc1df, 0xe77a, 0xa4f7, 0x0, 0x1);
        gbc.writeMem(0x1d17, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 03B0
        gbc.setState(0x5698, 0x48f8, 0xd5d0, 0x6233, 0xc3da, 0x239a, 0x0, 0x0);
        gbc.writeMem(0x5698, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x48f8);
        EXPECT(gbc.pc(), 0x5699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03B2
        gbc.setState(0xee2, 0xf13c, 0x52a0, 0xf7fd, 0x1859, 0x81b5, 0x0, 0x1);
        gbc.writeMem(0xee2, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf13c);
        EXPECT(gbc.pc(), 0xee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // B8 03B4
        gbc.setState(0xe1ed, 0xfa5f, 0xe3e0, 0xe0a4, 0x3f9d, 0x14a3, 0x0, 0x0);
        gbc.writeMem(0xe1ed, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfa5f);
        EXPECT(gbc.pc(), 0xe1ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ed), 0xb8);
        // B8 03B5
        gbc.setState(0x830a, 0x2a99, 0xfac0, 0xbb70, 0xf6a4, 0x3807, 0x0, 0x0);
        gbc.writeMem(0x830a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2a99);
        EXPECT(gbc.pc(), 0x830b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830a), 0xb8);
        // B8 03B6
        gbc.setState(0x2381, 0x7301, 0x7670, 0x2b1f, 0x5fc4, 0xf82e, 0x1, 0x1);
        gbc.writeMem(0x2381, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7301);
        EXPECT(gbc.pc(), 0x2382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03B7
        gbc.setState(0xaabc, 0xa625, 0x54d0, 0x6b95, 0xf091, 0x5e98, 0x1, 0x1);
        gbc.writeMem(0xaabc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa625);
        EXPECT(gbc.pc(), 0xaabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaabc), 0xb8);
        // B8 03B8
        gbc.setState(0xd5b7, 0xa828, 0xbdd0, 0x8b69, 0x4b92, 0xece6, 0x0, 0x0);
        gbc.writeMem(0xd5b7, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa828);
        EXPECT(gbc.pc(), 0xd5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5b7), 0xb8);
        // B8 03B9
        gbc.setState(0x9728, 0x71af, 0x7860, 0xfd8d, 0x8c9d, 0x4cc4, 0x1, 0x1);
        gbc.writeMem(0x9728, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x71af);
        EXPECT(gbc.pc(), 0x9729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9728), 0xb8);
        // B8 03BA
        gbc.setState(0x638, 0x762a, 0x8560, 0x2dab, 0xa6db, 0x59bf, 0x1, 0x1);
        gbc.writeMem(0x638, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x762a);
        EXPECT(gbc.pc(), 0x639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03BB
        gbc.setState(0xecfe, 0x4659, 0x56d0, 0x8825, 0x2da6, 0x51c1, 0x1, 0x0);
        gbc.writeMem(0xecfe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4659);
        EXPECT(gbc.pc(), 0xecff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecfe), 0xb8);
        // B8 03BC
        gbc.setState(0xc50f, 0x6ae2, 0x6be0, 0x59b1, 0x850b, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0xc50f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6ae2);
        EXPECT(gbc.pc(), 0xc510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50f), 0xb8);
        // B8 03BD
        gbc.setState(0x69d9, 0x6cf2, 0xb780, 0x8e78, 0x5dbf, 0x64d2, 0x0, 0x1);
        gbc.writeMem(0x69d9, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6cf2);
        EXPECT(gbc.pc(), 0x69da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03BE
        gbc.setState(0x2b8b, 0x9783, 0xdf60, 0x4a15, 0xdd4a, 0xccf7, 0x1, 0x0);
        gbc.writeMem(0x2b8b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9783);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03BF
        gbc.setState(0x109e, 0x1d49, 0x6f60, 0x21e4, 0x89ca, 0x2f5, 0x1, 0x0);
        gbc.writeMem(0x109e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1d49);
        EXPECT(gbc.pc(), 0x109f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03C0
        gbc.setState(0x70cf, 0x6d3d, 0x3d90, 0xb650, 0x54f2, 0xafb9, 0x0, 0x0);
        gbc.writeMem(0x70cf, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6d3d);
        EXPECT(gbc.pc(), 0x70d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 03C1
        gbc.setState(0xcc74, 0xd033, 0xf940, 0x2085, 0xc8e7, 0x19e, 0x0, 0x0);
        gbc.writeMem(0xcc74, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd033);
        EXPECT(gbc.pc(), 0xcc75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc74), 0xb8);
        // B8 03C2
        gbc.setState(0xeffc, 0x55e8, 0x7130, 0x9a21, 0x1bc8, 0xddec, 0x0, 0x0);
        gbc.writeMem(0xeffc, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x55e8);
        EXPECT(gbc.pc(), 0xeffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffc), 0xb8);
        // B8 03C3
        gbc.setState(0xa9af, 0x7b3e, 0x6ab0, 0xbed7, 0xbe9f, 0xc839, 0x1, 0x0);
        gbc.writeMem(0xa9af, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7b3e);
        EXPECT(gbc.pc(), 0xa9b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9af), 0xb8);
        // B8 03C4
        gbc.setState(0xc5f5, 0xf959, 0xb790, 0x5c04, 0xb28, 0x6052, 0x1, 0x0);
        gbc.writeMem(0xc5f5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf959);
        EXPECT(gbc.pc(), 0xc5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5f5), 0xb8);
        // B8 03C5
        gbc.setState(0xb6af, 0xc4f0, 0xcd10, 0x4600, 0x67fd, 0x8278, 0x1, 0x0);
        gbc.writeMem(0xb6af, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc4f0);
        EXPECT(gbc.pc(), 0xb6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6af), 0xb8);
        // B8 03C6
        gbc.setState(0xc51a, 0x2da3, 0xfed0, 0xd67f, 0xeafe, 0x166d, 0x1, 0x0);
        gbc.writeMem(0xc51a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2da3);
        EXPECT(gbc.pc(), 0xc51b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51a), 0xb8);
        // B8 03C7
        gbc.setState(0x81be, 0x2fdd, 0x5d70, 0x3d61, 0x9359, 0x7c46, 0x0, 0x0);
        gbc.writeMem(0x81be, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2fdd);
        EXPECT(gbc.pc(), 0x81bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81be), 0xb8);
        // B8 03C8
        gbc.setState(0xb596, 0xc6d1, 0x4510, 0x2753, 0x9a2e, 0x9a4d, 0x0, 0x0);
        gbc.writeMem(0xb596, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc6d1);
        EXPECT(gbc.pc(), 0xb597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb596), 0xb8);
        // B8 03C9
        gbc.setState(0xa818, 0x6370, 0x2160, 0xaa9, 0x5f74, 0x47bb, 0x1, 0x0);
        gbc.writeMem(0xa818, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6370);
        EXPECT(gbc.pc(), 0xa819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa818), 0xb8);
        // B8 03CC
        gbc.setState(0x197d, 0x1c7, 0x1e20, 0xeccc, 0x41f1, 0xad2a, 0x1, 0x0);
        gbc.writeMem(0x197d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1c7);
        EXPECT(gbc.pc(), 0x197e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // B8 03CD
        gbc.setState(0xbcd1, 0xfb40, 0xd690, 0xd8b, 0xe6e0, 0x19bc, 0x1, 0x1);
        gbc.writeMem(0xbcd1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfb40);
        EXPECT(gbc.pc(), 0xbcd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcd1), 0xb8);
        // B8 03CE
        gbc.setState(0xaee5, 0x13fb, 0xb870, 0x1d4a, 0x474d, 0x2ca6, 0x0, 0x0);
        gbc.writeMem(0xaee5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x13fb);
        EXPECT(gbc.pc(), 0xaee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee5), 0xb8);
        // B8 03CF
        gbc.setState(0x66b1, 0x2f2e, 0xf8e0, 0x40ab, 0x937a, 0xc544, 0x1, 0x1);
        gbc.writeMem(0x66b1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2f2e);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03D0
        gbc.setState(0x490c, 0xff5c, 0x9d30, 0x16bc, 0x6d0d, 0x49d7, 0x1, 0x1);
        gbc.writeMem(0x490c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xff5c);
        EXPECT(gbc.pc(), 0x490d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03D1
        gbc.setState(0x6481, 0x319a, 0x3ac0, 0x10f9, 0x8edb, 0x5963, 0x1, 0x1);
        gbc.writeMem(0x6481, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x319a);
        EXPECT(gbc.pc(), 0x6482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03D2
        gbc.setState(0x1c8d, 0x8fb1, 0xf720, 0x82f3, 0x2166, 0x874a, 0x1, 0x0);
        gbc.writeMem(0x1c8d, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8fb1);
        EXPECT(gbc.pc(), 0x1c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03D3
        gbc.setState(0x475e, 0xf0a4, 0xed10, 0xb2fc, 0x7ab8, 0xa4b4, 0x0, 0x1);
        gbc.writeMem(0x475e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf0a4);
        EXPECT(gbc.pc(), 0x475f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03D4
        gbc.setState(0x4e4b, 0xf02b, 0x63e0, 0x3ae9, 0xd1b3, 0x2157, 0x0, 0x1);
        gbc.writeMem(0x4e4b, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf02b);
        EXPECT(gbc.pc(), 0x4e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03D5
        gbc.setState(0xc3b4, 0x27f2, 0x2a00, 0xd28c, 0xf8b3, 0x3f97, 0x1, 0x0);
        gbc.writeMem(0xc3b4, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x27f2);
        EXPECT(gbc.pc(), 0xc3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b4), 0xb8);
        // B8 03D6
        gbc.setState(0x10fa, 0x7511, 0xb0a0, 0x2534, 0x6b23, 0x4333, 0x0, 0x0);
        gbc.writeMem(0x10fa, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0x10fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03D7
        gbc.setState(0xe7d6, 0x483c, 0x5a90, 0x7eb8, 0x9ee0, 0xae39, 0x0, 0x1);
        gbc.writeMem(0xe7d6, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x483c);
        EXPECT(gbc.pc(), 0xe7d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7d6), 0xb8);
        // B8 03D8
        gbc.setState(0xa850, 0x89b6, 0x8620, 0x542b, 0xbf16, 0x8dd2, 0x1, 0x0);
        gbc.writeMem(0xa850, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x89b6);
        EXPECT(gbc.pc(), 0xa851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa850), 0xb8);
        // B8 03D9
        gbc.setState(0x83ac, 0x637, 0x3a10, 0x33a2, 0xb41b, 0x5e14, 0x1, 0x1);
        gbc.writeMem(0x83ac, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x637);
        EXPECT(gbc.pc(), 0x83ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83ac), 0xb8);
        // B8 03DA
        gbc.setState(0x18fe, 0x8c05, 0xf990, 0x10e4, 0xd9a, 0xd716, 0x0, 0x1);
        gbc.writeMem(0x18fe, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8c05);
        EXPECT(gbc.pc(), 0x18ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03DB
        gbc.setState(0xdb3a, 0xeb5f, 0x57c0, 0x1d9d, 0x425f, 0x2329, 0x1, 0x1);
        gbc.writeMem(0xdb3a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xeb5f);
        EXPECT(gbc.pc(), 0xdb3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3a), 0xb8);
        // B8 03DC
        gbc.setState(0x82e5, 0x5b57, 0x6e20, 0x3488, 0x1d84, 0x4c3a, 0x1, 0x0);
        gbc.writeMem(0x82e5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5b57);
        EXPECT(gbc.pc(), 0x82e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e5), 0xb8);
        // B8 03DD
        gbc.setState(0x43c1, 0x9436, 0x5ed0, 0x261c, 0x5b17, 0x3419, 0x1, 0x1);
        gbc.writeMem(0x43c1, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9436);
        EXPECT(gbc.pc(), 0x43c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // B8 03DF
        gbc.setState(0x8a3c, 0x57b9, 0x6c40, 0xb74c, 0x5660, 0xdf73, 0x0, 0x0);
        gbc.writeMem(0x8a3c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x57b9);
        EXPECT(gbc.pc(), 0x8a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a3c), 0xb8);
        // B8 03E0
        gbc.setState(0x2d9a, 0xb3ca, 0xa9b0, 0x3d1c, 0xeb6c, 0x818, 0x1, 0x1);
        gbc.writeMem(0x2d9a, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb3ca);
        EXPECT(gbc.pc(), 0x2d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03E1
        gbc.setState(0xc467, 0x4403, 0x9b40, 0x3dda, 0xfdf6, 0x85f0, 0x1, 0x1);
        gbc.writeMem(0xc467, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4403);
        EXPECT(gbc.pc(), 0xc468);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc467), 0xb8);
        // B8 03E2
        gbc.setState(0x8871, 0x2c68, 0x7fe0, 0x8a3f, 0x9ea0, 0xac4, 0x1, 0x0);
        gbc.writeMem(0x8871, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x2c68);
        EXPECT(gbc.pc(), 0x8872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8871), 0xb8);
        // B8 03E3
        gbc.setState(0x37b8, 0x8f85, 0xb190, 0x7484, 0xb1ba, 0x6ab0, 0x1, 0x0);
        gbc.writeMem(0x37b8, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0x37b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03E4
        gbc.setState(0x7a61, 0x99bf, 0xb500, 0x8871, 0xfcde, 0xa130, 0x0, 0x1);
        gbc.writeMem(0x7a61, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x99bf);
        EXPECT(gbc.pc(), 0x7a62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03E5
        gbc.setState(0x2b77, 0xa7b1, 0x7790, 0x5d8b, 0xc808, 0x9675, 0x0, 0x0);
        gbc.writeMem(0x2b77, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa7b1);
        EXPECT(gbc.pc(), 0x2b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // B8 03E6
        gbc.setState(0xc80e, 0xa2bd, 0x4c90, 0x6142, 0xd650, 0x21c1, 0x1, 0x0);
        gbc.writeMem(0xc80e, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa2bd);
        EXPECT(gbc.pc(), 0xc80f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80e), 0xb8);
        // B8 03E7
        gbc.setState(0x3b0c, 0x54c4, 0x9280, 0x54e9, 0xe315, 0xded4, 0x1, 0x1);
        gbc.writeMem(0x3b0c, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x54c4);
        EXPECT(gbc.pc(), 0x3b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
