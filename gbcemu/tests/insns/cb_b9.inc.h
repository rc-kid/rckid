    TEST(gbcemu, opcode_cb_b9) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B9 0000
        gbc.setState(0xbb90, 0x5474, 0x3ba0, 0xd9b, 0x93d2, 0x7cd6, 0x0, 0x1);
        gbc.writeMem(0xbb90, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5474);
        EXPECT(gbc.pc(), 0xbb92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb90), 0xcb);
        EXPECT(gbc.readMem(0xbb91), 0xb9);
        // CB B9 0001
        gbc.setState(0xad07, 0xb622, 0x5160, 0x1af5, 0xaec1, 0xf52d, 0x0, 0x0);
        gbc.writeMem(0xad07, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb622);
        EXPECT(gbc.pc(), 0xad09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad07), 0xcb);
        EXPECT(gbc.readMem(0xad08), 0xb9);
        // CB B9 0002
        gbc.setState(0x636d, 0x706e, 0xaab0, 0x3705, 0x2202, 0x660, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x706e);
        EXPECT(gbc.pc(), 0x636f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0003
        gbc.setState(0xed97, 0x2c54, 0xe760, 0xb912, 0xa0ea, 0x67cb, 0x1, 0x0);
        gbc.writeMem(0xed97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2c54);
        EXPECT(gbc.pc(), 0xed99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed97), 0xcb);
        EXPECT(gbc.readMem(0xed98), 0xb9);
        // CB B9 0004
        gbc.setState(0xe859, 0x857f, 0xe250, 0x8286, 0xb861, 0xf574, 0x0, 0x1);
        gbc.writeMem(0xe859, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x857f);
        EXPECT(gbc.pc(), 0xe85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe859), 0xcb);
        EXPECT(gbc.readMem(0xe85a), 0xb9);
        // CB B9 0005
        gbc.setState(0x16f7, 0x8e0d, 0xf710, 0x6928, 0xdb84, 0x667, 0x1, 0x1);
        gbc.writeMem(0x16f7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x8e0d);
        EXPECT(gbc.pc(), 0x16f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0006
        gbc.setState(0xb502, 0x8e, 0x9250, 0xcf9a, 0xae2c, 0xa97a, 0x0, 0x1);
        gbc.writeMem(0xb502, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8e);
        EXPECT(gbc.pc(), 0xb504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb502), 0xcb);
        EXPECT(gbc.readMem(0xb503), 0xb9);
        // CB B9 0007
        gbc.setState(0xc63, 0x5472, 0x1ff0, 0x7f8a, 0xb63a, 0xc4a4, 0x0, 0x1);
        gbc.writeMem(0xc63, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5472);
        EXPECT(gbc.pc(), 0xc65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0008
        gbc.setState(0xdb03, 0x1403, 0xc260, 0x905b, 0x5e18, 0x5bd, 0x0, 0x1);
        gbc.writeMem(0xdb03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1403);
        EXPECT(gbc.pc(), 0xdb05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb03), 0xcb);
        EXPECT(gbc.readMem(0xdb04), 0xb9);
        // CB B9 0009
        gbc.setState(0x8dcd, 0xabe, 0x9140, 0xb083, 0x964f, 0x9e80, 0x1, 0x1);
        gbc.writeMem(0x8dcd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xabe);
        EXPECT(gbc.pc(), 0x8dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dcd), 0xcb);
        EXPECT(gbc.readMem(0x8dce), 0xb9);
        // CB B9 000A
        gbc.setState(0xb5b3, 0x58d1, 0x3060, 0x6f9d, 0x25c, 0x64ac, 0x1, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x58d1);
        EXPECT(gbc.pc(), 0xb5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b3), 0xcb);
        EXPECT(gbc.readMem(0xb5b4), 0xb9);
        // CB B9 000B
        gbc.setState(0xb62c, 0x575a, 0x22d0, 0x1c8d, 0x416e, 0xb805, 0x1, 0x1);
        gbc.writeMem(0xb62c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x575a);
        EXPECT(gbc.pc(), 0xb62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb62c), 0xcb);
        EXPECT(gbc.readMem(0xb62d), 0xb9);
        // CB B9 000C
        gbc.setState(0x42bd, 0xc734, 0x9920, 0x19e8, 0x31a4, 0x5098, 0x0, 0x1);
        gbc.writeMem(0x42bd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc734);
        EXPECT(gbc.pc(), 0x42bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 000D
        gbc.setState(0xcb96, 0x1236, 0x4780, 0x907e, 0x6ad5, 0x9b0, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1236);
        EXPECT(gbc.pc(), 0xcb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb96), 0xcb);
        EXPECT(gbc.readMem(0xcb97), 0xb9);
        // CB B9 000E
        gbc.setState(0x36de, 0x47, 0xb90, 0xd597, 0x8ade, 0x10af, 0x1, 0x0);
        gbc.writeMem(0x36de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x47);
        EXPECT(gbc.pc(), 0x36e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 000F
        gbc.setState(0xb5b9, 0x884c, 0x7ec0, 0xa37b, 0x16f, 0x59f5, 0x1, 0x0);
        gbc.writeMem(0xb5b9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x884c);
        EXPECT(gbc.pc(), 0xb5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b9), 0xcb);
        EXPECT(gbc.readMem(0xb5ba), 0xb9);
        // CB B9 0010
        gbc.setState(0x566c, 0xbd13, 0x2270, 0xcc19, 0x3f4f, 0x8a36, 0x1, 0x1);
        gbc.writeMem(0x566c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbd13);
        EXPECT(gbc.pc(), 0x566e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0011
        gbc.setState(0x43cc, 0x8f94, 0x5990, 0xf67, 0x3b12, 0xaf32, 0x0, 0x1);
        gbc.writeMem(0x43cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8f94);
        EXPECT(gbc.pc(), 0x43ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0012
        gbc.setState(0x43ec, 0x9d50, 0xd340, 0xd42c, 0x23b1, 0x7f7f, 0x1, 0x1);
        gbc.writeMem(0x43ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9d50);
        EXPECT(gbc.pc(), 0x43ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0013
        gbc.setState(0x3754, 0x3389, 0x7380, 0xa743, 0xa0a, 0x3db3, 0x0, 0x0);
        gbc.writeMem(0x3754, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x3389);
        EXPECT(gbc.pc(), 0x3756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0014
        gbc.setState(0xa2dc, 0x7b34, 0x6680, 0xcdbe, 0x2aa5, 0xe4bd, 0x1, 0x0);
        gbc.writeMem(0xa2dc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7b34);
        EXPECT(gbc.pc(), 0xa2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2dc), 0xcb);
        EXPECT(gbc.readMem(0xa2dd), 0xb9);
        // CB B9 0015
        gbc.setState(0x618c, 0x526d, 0xe680, 0xb570, 0x817, 0x5502, 0x1, 0x1);
        gbc.writeMem(0x618c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x526d);
        EXPECT(gbc.pc(), 0x618e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0016
        gbc.setState(0xc766, 0xcf, 0xe1f0, 0x4a01, 0xa49e, 0x6dab, 0x1, 0x1);
        gbc.writeMem(0xc766, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcf);
        EXPECT(gbc.pc(), 0xc768);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc766), 0xcb);
        EXPECT(gbc.readMem(0xc767), 0xb9);
        // CB B9 0018
        gbc.setState(0x2204, 0xb362, 0xebf0, 0x3c32, 0x8587, 0x1477, 0x1, 0x1);
        gbc.writeMem(0x2204, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb362);
        EXPECT(gbc.pc(), 0x2206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0019
        gbc.setState(0x86e0, 0x8154, 0xc380, 0xe318, 0xeaf4, 0xf4d, 0x0, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8154);
        EXPECT(gbc.pc(), 0x86e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86e0), 0xcb);
        EXPECT(gbc.readMem(0x86e1), 0xb9);
        // CB B9 001A
        gbc.setState(0xcb36, 0x6380, 0x3fe0, 0x40c, 0x5308, 0x666b, 0x0, 0x0);
        gbc.writeMem(0xcb36, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6380);
        EXPECT(gbc.pc(), 0xcb38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb36), 0xcb);
        EXPECT(gbc.readMem(0xcb37), 0xb9);
        // CB B9 001B
        gbc.setState(0x730e, 0xdf8f, 0xbe70, 0x418a, 0xead6, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0x730e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdf8f);
        EXPECT(gbc.pc(), 0x7310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 001C
        gbc.setState(0xb5c9, 0x9ea9, 0xd930, 0x777e, 0xdea3, 0x8509, 0x1, 0x0);
        gbc.writeMem(0xb5c9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9ea9);
        EXPECT(gbc.pc(), 0xb5cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c9), 0xcb);
        EXPECT(gbc.readMem(0xb5ca), 0xb9);
        // CB B9 001D
        gbc.setState(0x3158, 0xf023, 0x84e0, 0xa26, 0xb2b8, 0x3c55, 0x0, 0x0);
        gbc.writeMem(0x3158, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf023);
        EXPECT(gbc.pc(), 0x315a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 001E
        gbc.setState(0x4732, 0x32d6, 0x4730, 0xd8e9, 0xffe, 0xef9a, 0x0, 0x1);
        gbc.writeMem(0x4732, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x32d6);
        EXPECT(gbc.pc(), 0x4734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 001F
        gbc.setState(0xcc94, 0xdc3, 0xa490, 0x287, 0x852c, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0xcc94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xdc3);
        EXPECT(gbc.pc(), 0xcc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc94), 0xcb);
        EXPECT(gbc.readMem(0xcc95), 0xb9);
        // CB B9 0020
        gbc.setState(0x2309, 0xefa5, 0xb560, 0xdbf3, 0xe96c, 0x6e1a, 0x0, 0x0);
        gbc.writeMem(0x2309, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xefa5);
        EXPECT(gbc.pc(), 0x230b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0021
        gbc.setState(0x61ff, 0xc210, 0xf520, 0xda89, 0xb6c5, 0xef1b, 0x0, 0x0);
        gbc.writeMem(0x61ff, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc210);
        EXPECT(gbc.pc(), 0x6201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0022
        gbc.setState(0xd999, 0xfaa9, 0x4260, 0xca27, 0xb7c5, 0x168c, 0x0, 0x0);
        gbc.writeMem(0xd999, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfaa9);
        EXPECT(gbc.pc(), 0xd99b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd999), 0xcb);
        EXPECT(gbc.readMem(0xd99a), 0xb9);
        // CB B9 0023
        gbc.setState(0xbd77, 0xfbec, 0xe930, 0x1f7f, 0x7df, 0xb030, 0x1, 0x1);
        gbc.writeMem(0xbd77, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfbec);
        EXPECT(gbc.pc(), 0xbd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd77), 0xcb);
        EXPECT(gbc.readMem(0xbd78), 0xb9);
        // CB B9 0024
        gbc.setState(0x7b6e, 0xb6, 0xe9b0, 0x167d, 0x2cc9, 0xb5e6, 0x0, 0x1);
        gbc.writeMem(0x7b6e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb6);
        EXPECT(gbc.pc(), 0x7b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0025
        gbc.setState(0x4760, 0xd1cc, 0x2ea0, 0xffcf, 0x7772, 0x88a0, 0x0, 0x0);
        gbc.writeMem(0x4760, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd1cc);
        EXPECT(gbc.pc(), 0x4762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0026
        gbc.setState(0x201a, 0x38ee, 0xed0, 0xc273, 0x3a47, 0xca7a, 0x1, 0x0);
        gbc.writeMem(0x201a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x38ee);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0027
        gbc.setState(0x6ee9, 0x42dd, 0x5670, 0xe1a5, 0x7e36, 0xb9ca, 0x1, 0x0);
        gbc.writeMem(0x6ee9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x42dd);
        EXPECT(gbc.pc(), 0x6eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0028
        gbc.setState(0xda76, 0x5037, 0x9830, 0x8df7, 0x617e, 0x5462, 0x0, 0x0);
        gbc.writeMem(0xda76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5037);
        EXPECT(gbc.pc(), 0xda78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda76), 0xcb);
        EXPECT(gbc.readMem(0xda77), 0xb9);
        // CB B9 0029
        gbc.setState(0xd8a3, 0x9fba, 0xdad0, 0xbafd, 0x34cd, 0xb228, 0x1, 0x0);
        gbc.writeMem(0xd8a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9fba);
        EXPECT(gbc.pc(), 0xd8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8a3), 0xcb);
        EXPECT(gbc.readMem(0xd8a4), 0xb9);
        // CB B9 002A
        gbc.setState(0x70b3, 0x8444, 0x7aa0, 0x655b, 0x3aa0, 0x435, 0x1, 0x1);
        gbc.writeMem(0x70b3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8444);
        EXPECT(gbc.pc(), 0x70b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 002B
        gbc.setState(0x97bb, 0xc93c, 0xf330, 0x514d, 0x7f4e, 0x1825, 0x1, 0x1);
        gbc.writeMem(0x97bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc93c);
        EXPECT(gbc.pc(), 0x97bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bb), 0xcb);
        EXPECT(gbc.readMem(0x97bc), 0xb9);
        // CB B9 002C
        gbc.setState(0x4205, 0x3102, 0xf2d0, 0xcef6, 0x4eba, 0x9b0f, 0x0, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3102);
        EXPECT(gbc.pc(), 0x4207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 002D
        gbc.setState(0x3757, 0xf7e4, 0x2350, 0xb22b, 0xc6bd, 0x9632, 0x0, 0x1);
        gbc.writeMem(0x3757, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf7e4);
        EXPECT(gbc.pc(), 0x3759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 002E
        gbc.setState(0x66de, 0x57a8, 0xf300, 0x441e, 0xec6, 0xf5a8, 0x0, 0x1);
        gbc.writeMem(0x66de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x57a8);
        EXPECT(gbc.pc(), 0x66e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 002F
        gbc.setState(0xb535, 0x86e3, 0xb770, 0x66ff, 0x8cb4, 0xdcf, 0x1, 0x0);
        gbc.writeMem(0xb535, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x86e3);
        EXPECT(gbc.pc(), 0xb537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb535), 0xcb);
        EXPECT(gbc.readMem(0xb536), 0xb9);
        // CB B9 0030
        gbc.setState(0x6c77, 0xb936, 0xcff0, 0xb452, 0x3b9d, 0x9a52, 0x0, 0x0);
        gbc.writeMem(0x6c77, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb936);
        EXPECT(gbc.pc(), 0x6c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0031
        gbc.setState(0x5878, 0x7c1a, 0x8690, 0xf462, 0xcac2, 0x4d1c, 0x0, 0x0);
        gbc.writeMem(0x5878, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7c1a);
        EXPECT(gbc.pc(), 0x587a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0032
        gbc.setState(0xd47a, 0x63c2, 0x9310, 0xf759, 0x657a, 0x422a, 0x1, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x63c2);
        EXPECT(gbc.pc(), 0xd47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd47a), 0xcb);
        EXPECT(gbc.readMem(0xd47b), 0xb9);
        // CB B9 0033
        gbc.setState(0xbe10, 0x5669, 0x36e0, 0xa36b, 0xa709, 0xb875, 0x1, 0x1);
        gbc.writeMem(0xbe10, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5669);
        EXPECT(gbc.pc(), 0xbe12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe10), 0xcb);
        EXPECT(gbc.readMem(0xbe11), 0xb9);
        // CB B9 0034
        gbc.setState(0x3f06, 0x7bb6, 0xb2d0, 0x3f17, 0x9147, 0x6fdd, 0x1, 0x0);
        gbc.writeMem(0x3f06, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7bb6);
        EXPECT(gbc.pc(), 0x3f08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0035
        gbc.setState(0x8027, 0xa815, 0xb880, 0xa230, 0x5092, 0x1ab8, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa815);
        EXPECT(gbc.pc(), 0x8029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8027), 0xcb);
        EXPECT(gbc.readMem(0x8028), 0xb9);
        // CB B9 0036
        gbc.setState(0x6765, 0xc50a, 0x5680, 0x89b, 0x5f3f, 0x25db, 0x0, 0x0);
        gbc.writeMem(0x6765, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc50a);
        EXPECT(gbc.pc(), 0x6767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0037
        gbc.setState(0xa579, 0x3b09, 0x4000, 0x3428, 0x9af6, 0x5f78, 0x0, 0x1);
        gbc.writeMem(0xa579, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x3b09);
        EXPECT(gbc.pc(), 0xa57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa579), 0xcb);
        EXPECT(gbc.readMem(0xa57a), 0xb9);
        // CB B9 0038
        gbc.setState(0xe7ea, 0x6262, 0xad40, 0xdfb6, 0xf9d7, 0x61dd, 0x0, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6262);
        EXPECT(gbc.pc(), 0xe7ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ea), 0xcb);
        EXPECT(gbc.readMem(0xe7eb), 0xb9);
        // CB B9 0039
        gbc.setState(0x55ae, 0xd0e, 0xec30, 0x244f, 0x2ce6, 0x7fd1, 0x1, 0x0);
        gbc.writeMem(0x55ae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd0e);
        EXPECT(gbc.pc(), 0x55b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 003A
        gbc.setState(0xcf17, 0x6ea, 0x3910, 0xecbb, 0x7512, 0x7766, 0x1, 0x0);
        gbc.writeMem(0xcf17, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6ea);
        EXPECT(gbc.pc(), 0xcf19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf17), 0xcb);
        EXPECT(gbc.readMem(0xcf18), 0xb9);
        // CB B9 003B
        gbc.setState(0x25, 0x288c, 0x1440, 0xbd0f, 0xd636, 0x2733, 0x1, 0x0);
        gbc.writeMem(0x25, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x288c);
        EXPECT(gbc.pc(), 0x27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 003C
        gbc.setState(0x13b4, 0x7370, 0x3230, 0x678b, 0x6a52, 0xf2ea, 0x1, 0x1);
        gbc.writeMem(0x13b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7370);
        EXPECT(gbc.pc(), 0x13b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 003D
        gbc.setState(0x34c0, 0x32c6, 0xed60, 0x4d81, 0xf7a, 0x55c5, 0x0, 0x1);
        gbc.writeMem(0x34c0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x32c6);
        EXPECT(gbc.pc(), 0x34c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 003E
        gbc.setState(0x2cbd, 0x6535, 0x7a90, 0xae1c, 0xf487, 0x9df1, 0x0, 0x0);
        gbc.writeMem(0x2cbd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6535);
        EXPECT(gbc.pc(), 0x2cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 003F
        gbc.setState(0x9e4d, 0xa87c, 0xbec0, 0x5d10, 0x2eb8, 0x997b, 0x1, 0x1);
        gbc.writeMem(0x9e4d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa87c);
        EXPECT(gbc.pc(), 0x9e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4d), 0xcb);
        EXPECT(gbc.readMem(0x9e4e), 0xb9);
        // CB B9 0040
        gbc.setState(0xc97a, 0x370b, 0xe2d0, 0x2420, 0x78f, 0x1cda, 0x0, 0x0);
        gbc.writeMem(0xc97a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x370b);
        EXPECT(gbc.pc(), 0xc97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97a), 0xcb);
        EXPECT(gbc.readMem(0xc97b), 0xb9);
        // CB B9 0041
        gbc.setState(0xc08b, 0x3fa5, 0xd950, 0xdbd3, 0xfebb, 0xb44d, 0x0, 0x0);
        gbc.writeMem(0xc08b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3fa5);
        EXPECT(gbc.pc(), 0xc08d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08b), 0xcb);
        EXPECT(gbc.readMem(0xc08c), 0xb9);
        // CB B9 0042
        gbc.setState(0xf20, 0x1826, 0xabb0, 0x2c3f, 0x2c64, 0x87f2, 0x0, 0x1);
        gbc.writeMem(0xf20, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1826);
        EXPECT(gbc.pc(), 0xf22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0043
        gbc.setState(0x98f5, 0xc7d, 0x40c0, 0x77df, 0x45ce, 0x6691, 0x1, 0x1);
        gbc.writeMem(0x98f5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc7d);
        EXPECT(gbc.pc(), 0x98f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f5), 0xcb);
        EXPECT(gbc.readMem(0x98f6), 0xb9);
        // CB B9 0044
        gbc.setState(0xef90, 0x7d89, 0x8460, 0xbf9c, 0x670c, 0xd59b, 0x0, 0x1);
        gbc.writeMem(0xef90, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7d89);
        EXPECT(gbc.pc(), 0xef92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef90), 0xcb);
        EXPECT(gbc.readMem(0xef91), 0xb9);
        // CB B9 0045
        gbc.setState(0x1fea, 0xcdd1, 0xd970, 0xa0f, 0xed36, 0x219c, 0x1, 0x1);
        gbc.writeMem(0x1fea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcdd1);
        EXPECT(gbc.pc(), 0x1fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0046
        gbc.setState(0xaccf, 0xbf3, 0x5d90, 0xba76, 0x500a, 0x86a1, 0x0, 0x1);
        gbc.writeMem(0xaccf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbf3);
        EXPECT(gbc.pc(), 0xacd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaccf), 0xcb);
        EXPECT(gbc.readMem(0xacd0), 0xb9);
        // CB B9 0047
        gbc.setState(0x5a94, 0x556f, 0xbc20, 0x13c5, 0x2816, 0x32a8, 0x0, 0x0);
        gbc.writeMem(0x5a94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x556f);
        EXPECT(gbc.pc(), 0x5a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0048
        gbc.setState(0x8ec6, 0xf7b, 0x5a10, 0x3220, 0x6aaf, 0xb7f5, 0x0, 0x1);
        gbc.writeMem(0x8ec6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf7b);
        EXPECT(gbc.pc(), 0x8ec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec6), 0xcb);
        EXPECT(gbc.readMem(0x8ec7), 0xb9);
        // CB B9 0049
        gbc.setState(0x7bad, 0xab6a, 0x98b0, 0x2c4b, 0x5f56, 0xce35, 0x1, 0x1);
        gbc.writeMem(0x7bad, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xab6a);
        EXPECT(gbc.pc(), 0x7baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 004A
        gbc.setState(0x311f, 0xcea, 0xb0f0, 0xc2ad, 0x38b2, 0x9ae0, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xcea);
        EXPECT(gbc.pc(), 0x3121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 004B
        gbc.setState(0x19b1, 0x9dea, 0x77c0, 0xf7da, 0x4d4, 0x7150, 0x0, 0x0);
        gbc.writeMem(0x19b1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9dea);
        EXPECT(gbc.pc(), 0x19b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 004D
        gbc.setState(0x32a9, 0x1bb6, 0x5d90, 0x91b1, 0x80ee, 0xe3b8, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1bb6);
        EXPECT(gbc.pc(), 0x32ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 004E
        gbc.setState(0x3224, 0xc52e, 0x4900, 0x6ce5, 0x7b77, 0x3509, 0x0, 0x0);
        gbc.writeMem(0x3224, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc52e);
        EXPECT(gbc.pc(), 0x3226);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 004F
        gbc.setState(0xa8ab, 0xf016, 0x80a0, 0x874d, 0xe206, 0x2a1c, 0x0, 0x0);
        gbc.writeMem(0xa8ab, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf016);
        EXPECT(gbc.pc(), 0xa8ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ab), 0xcb);
        EXPECT(gbc.readMem(0xa8ac), 0xb9);
        // CB B9 0050
        gbc.setState(0xaa02, 0xb86d, 0xd250, 0x6c97, 0xbbb4, 0xa443, 0x1, 0x1);
        gbc.writeMem(0xaa02, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb86d);
        EXPECT(gbc.pc(), 0xaa04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa02), 0xcb);
        EXPECT(gbc.readMem(0xaa03), 0xb9);
        // CB B9 0051
        gbc.setState(0x7364, 0x7402, 0x9150, 0x19ef, 0x762f, 0x3ed8, 0x0, 0x1);
        gbc.writeMem(0x7364, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7402);
        EXPECT(gbc.pc(), 0x7366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0052
        gbc.setState(0x1cc8, 0xe3c6, 0x5370, 0x5f54, 0x33df, 0x7622, 0x0, 0x1);
        gbc.writeMem(0x1cc8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe3c6);
        EXPECT(gbc.pc(), 0x1cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0053
        gbc.setState(0xc135, 0x2bff, 0x7c70, 0x46e8, 0xf1c1, 0x3e63, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2bff);
        EXPECT(gbc.pc(), 0xc137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc135), 0xcb);
        EXPECT(gbc.readMem(0xc136), 0xb9);
        // CB B9 0055
        gbc.setState(0x289b, 0x1d81, 0x7260, 0xe880, 0xdc, 0x32ed, 0x0, 0x1);
        gbc.writeMem(0x289b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x1d81);
        EXPECT(gbc.pc(), 0x289d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0056
        gbc.setState(0xef87, 0x8e99, 0xc0b0, 0x428d, 0x6800, 0xa0b9, 0x0, 0x0);
        gbc.writeMem(0xef87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x8e99);
        EXPECT(gbc.pc(), 0xef89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef87), 0xcb);
        EXPECT(gbc.readMem(0xef88), 0xb9);
        // CB B9 0057
        gbc.setState(0xe8c9, 0x5717, 0x31c0, 0x2a5, 0x527b, 0x8586, 0x1, 0x1);
        gbc.writeMem(0xe8c9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5717);
        EXPECT(gbc.pc(), 0xe8cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c9), 0xcb);
        EXPECT(gbc.readMem(0xe8ca), 0xb9);
        // CB B9 0058
        gbc.setState(0x502c, 0x407b, 0x4690, 0xa3a0, 0xf2bf, 0x4af9, 0x0, 0x0);
        gbc.writeMem(0x502c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x407b);
        EXPECT(gbc.pc(), 0x502e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0059
        gbc.setState(0x9e0e, 0xc8a2, 0x1280, 0x4b87, 0x730c, 0xe92b, 0x0, 0x1);
        gbc.writeMem(0x9e0e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc8a2);
        EXPECT(gbc.pc(), 0x9e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0e), 0xcb);
        EXPECT(gbc.readMem(0x9e0f), 0xb9);
        // CB B9 005A
        gbc.setState(0x484, 0x8a0d, 0x5a10, 0x5089, 0x91c1, 0xfe76, 0x0, 0x0);
        gbc.writeMem(0x484, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8a0d);
        EXPECT(gbc.pc(), 0x486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 005C
        gbc.setState(0x1740, 0x1c04, 0x2d00, 0xed40, 0xf8cf, 0xb02, 0x1, 0x1);
        gbc.writeMem(0x1740, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1c04);
        EXPECT(gbc.pc(), 0x1742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 005D
        gbc.setState(0x995f, 0xf92c, 0x4c20, 0xa162, 0x786f, 0x8ef5, 0x1, 0x0);
        gbc.writeMem(0x995f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xf92c);
        EXPECT(gbc.pc(), 0x9961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995f), 0xcb);
        EXPECT(gbc.readMem(0x9960), 0xb9);
        // CB B9 005E
        gbc.setState(0x709c, 0x9975, 0x4830, 0xd1b6, 0x2e12, 0x6e67, 0x1, 0x1);
        gbc.writeMem(0x709c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9975);
        EXPECT(gbc.pc(), 0x709e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 005F
        gbc.setState(0xa7d5, 0xc49e, 0x7e30, 0x4e42, 0xf625, 0x1963, 0x0, 0x0);
        gbc.writeMem(0xa7d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc49e);
        EXPECT(gbc.pc(), 0xa7d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7d5), 0xcb);
        EXPECT(gbc.readMem(0xa7d6), 0xb9);
        // CB B9 0060
        gbc.setState(0x3c1a, 0xbb34, 0xa30, 0xe658, 0x361a, 0xc42, 0x0, 0x0);
        gbc.writeMem(0x3c1a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbb34);
        EXPECT(gbc.pc(), 0x3c1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0061
        gbc.setState(0x8335, 0xedb9, 0x8e70, 0xd776, 0x4253, 0xe18b, 0x1, 0x1);
        gbc.writeMem(0x8335, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xedb9);
        EXPECT(gbc.pc(), 0x8337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8335), 0xcb);
        EXPECT(gbc.readMem(0x8336), 0xb9);
        // CB B9 0062
        gbc.setState(0x1bbb, 0x7780, 0xa540, 0xea00, 0x6b0c, 0x5708, 0x1, 0x0);
        gbc.writeMem(0x1bbb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7780);
        EXPECT(gbc.pc(), 0x1bbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0063
        gbc.setState(0x65e, 0x9b23, 0x4d90, 0x3aa, 0x7170, 0x96ac, 0x0, 0x0);
        gbc.writeMem(0x65e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9b23);
        EXPECT(gbc.pc(), 0x660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0064
        gbc.setState(0xf78, 0x76b8, 0xafd0, 0x22ed, 0x9f1a, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0xf78, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x76b8);
        EXPECT(gbc.pc(), 0xf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0065
        gbc.setState(0x7283, 0x4cbd, 0x6160, 0x2795, 0x1949, 0x7b40, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4cbd);
        EXPECT(gbc.pc(), 0x7285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0066
        gbc.setState(0x1617, 0xf1eb, 0x88d0, 0x67fe, 0x836, 0xf509, 0x0, 0x1);
        gbc.writeMem(0x1617, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf1eb);
        EXPECT(gbc.pc(), 0x1619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0067
        gbc.setState(0x5b61, 0xd31f, 0x5710, 0x6ad9, 0xdbd8, 0x679a, 0x1, 0x0);
        gbc.writeMem(0x5b61, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd31f);
        EXPECT(gbc.pc(), 0x5b63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0068
        gbc.setState(0xb482, 0xeb25, 0x5c00, 0xe707, 0xe8e5, 0x630b, 0x1, 0x0);
        gbc.writeMem(0xb482, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xeb25);
        EXPECT(gbc.pc(), 0xb484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb482), 0xcb);
        EXPECT(gbc.readMem(0xb483), 0xb9);
        // CB B9 0069
        gbc.setState(0x6f3c, 0xd35a, 0x4a50, 0x1a6f, 0x2e7, 0xbe6f, 0x0, 0x1);
        gbc.writeMem(0x6f3c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd35a);
        EXPECT(gbc.pc(), 0x6f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 006A
        gbc.setState(0x4d7b, 0x35d8, 0x3280, 0x1007, 0x450c, 0x71fd, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0x4d7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 006B
        gbc.setState(0x9c53, 0x8791, 0x2990, 0x3145, 0xf1ee, 0xe76e, 0x0, 0x0);
        gbc.writeMem(0x9c53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8791);
        EXPECT(gbc.pc(), 0x9c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c53), 0xcb);
        EXPECT(gbc.readMem(0x9c54), 0xb9);
        // CB B9 006C
        gbc.setState(0xa981, 0x8691, 0x40e0, 0x5646, 0xf554, 0xf055, 0x0, 0x0);
        gbc.writeMem(0xa981, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8691);
        EXPECT(gbc.pc(), 0xa983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa981), 0xcb);
        EXPECT(gbc.readMem(0xa982), 0xb9);
        // CB B9 006D
        gbc.setState(0x6a3b, 0xcc28, 0xadf0, 0xee, 0x86e9, 0xf151, 0x1, 0x0);
        gbc.writeMem(0x6a3b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xcc28);
        EXPECT(gbc.pc(), 0x6a3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 006E
        gbc.setState(0x80dd, 0x4c74, 0x47f0, 0x5186, 0x2693, 0xae63, 0x0, 0x0);
        gbc.writeMem(0x80dd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4c74);
        EXPECT(gbc.pc(), 0x80df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80dd), 0xcb);
        EXPECT(gbc.readMem(0x80de), 0xb9);
        // CB B9 006F
        gbc.setState(0xa3a9, 0xf51e, 0x2660, 0x84c1, 0x9c30, 0xa300, 0x0, 0x1);
        gbc.writeMem(0xa3a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf51e);
        EXPECT(gbc.pc(), 0xa3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3a9), 0xcb);
        EXPECT(gbc.readMem(0xa3aa), 0xb9);
        // CB B9 0070
        gbc.setState(0x12c6, 0x2c09, 0x4ec0, 0xf998, 0x4724, 0xdc34, 0x0, 0x0);
        gbc.writeMem(0x12c6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2c09);
        EXPECT(gbc.pc(), 0x12c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0071
        gbc.setState(0xab95, 0xbad9, 0x40f0, 0x7303, 0xab77, 0x6268, 0x0, 0x0);
        gbc.writeMem(0xab95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbad9);
        EXPECT(gbc.pc(), 0xab97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab95), 0xcb);
        EXPECT(gbc.readMem(0xab96), 0xb9);
        // CB B9 0072
        gbc.setState(0xe9c5, 0x1e62, 0x5e90, 0xf42f, 0x7381, 0xce05, 0x1, 0x1);
        gbc.writeMem(0xe9c5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1e62);
        EXPECT(gbc.pc(), 0xe9c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c5), 0xcb);
        EXPECT(gbc.readMem(0xe9c6), 0xb9);
        // CB B9 0073
        gbc.setState(0x6f03, 0xe0d6, 0x7bd0, 0xde44, 0x8528, 0xfb78, 0x1, 0x0);
        gbc.writeMem(0x6f03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe0d6);
        EXPECT(gbc.pc(), 0x6f05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0074
        gbc.setState(0x2fd3, 0x235c, 0xdc90, 0xd655, 0xc167, 0xb8b4, 0x1, 0x1);
        gbc.writeMem(0x2fd3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x235c);
        EXPECT(gbc.pc(), 0x2fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0075
        gbc.setState(0x3711, 0x2c74, 0xe00, 0x74e7, 0x7a6a, 0x2d4e, 0x1, 0x1);
        gbc.writeMem(0x3711, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2c74);
        EXPECT(gbc.pc(), 0x3713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0076
        gbc.setState(0x1c08, 0x9f0c, 0xf5a0, 0xd59d, 0x85ab, 0x877e, 0x1, 0x1);
        gbc.writeMem(0x1c08, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9f0c);
        EXPECT(gbc.pc(), 0x1c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0077
        gbc.setState(0xd0df, 0xd986, 0x8fb0, 0x3930, 0xf877, 0x6c80, 0x1, 0x0);
        gbc.writeMem(0xd0df, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd986);
        EXPECT(gbc.pc(), 0xd0e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0df), 0xcb);
        EXPECT(gbc.readMem(0xd0e0), 0xb9);
        // CB B9 0078
        gbc.setState(0x13d9, 0x73c3, 0xd650, 0x6812, 0x386, 0xf98f, 0x1, 0x1);
        gbc.writeMem(0x13d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x73c3);
        EXPECT(gbc.pc(), 0x13db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0079
        gbc.setState(0x6873, 0xdc23, 0x5e00, 0x6d6a, 0xb7ec, 0x4be5, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdc23);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 007A
        gbc.setState(0xb3ac, 0x8331, 0xf7f0, 0xf773, 0x2593, 0x8609, 0x0, 0x1);
        gbc.writeMem(0xb3ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8331);
        EXPECT(gbc.pc(), 0xb3ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ac), 0xcb);
        EXPECT(gbc.readMem(0xb3ad), 0xb9);
        // CB B9 007B
        gbc.setState(0x1f2f, 0x31dc, 0x8210, 0x5c9, 0xcb23, 0x97cf, 0x0, 0x1);
        gbc.writeMem(0x1f2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x31dc);
        EXPECT(gbc.pc(), 0x1f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 007C
        gbc.setState(0xaa18, 0xfe81, 0xd360, 0xaa8a, 0xe1be, 0x2162, 0x0, 0x1);
        gbc.writeMem(0xaa18, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfe81);
        EXPECT(gbc.pc(), 0xaa1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa18), 0xcb);
        EXPECT(gbc.readMem(0xaa19), 0xb9);
        // CB B9 007D
        gbc.setState(0x4ac7, 0x85c5, 0xd160, 0xeb61, 0xe4c, 0xc51a, 0x0, 0x1);
        gbc.writeMem(0x4ac7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x85c5);
        EXPECT(gbc.pc(), 0x4ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 007E
        gbc.setState(0xd798, 0xed5d, 0xe810, 0x5491, 0xe7ec, 0x8aab, 0x1, 0x1);
        gbc.writeMem(0xd798, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xed5d);
        EXPECT(gbc.pc(), 0xd79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd798), 0xcb);
        EXPECT(gbc.readMem(0xd799), 0xb9);
        // CB B9 007F
        gbc.setState(0x8bc7, 0xb0aa, 0x1440, 0x23b6, 0x77dd, 0x7985, 0x0, 0x1);
        gbc.writeMem(0x8bc7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb0aa);
        EXPECT(gbc.pc(), 0x8bc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc7), 0xcb);
        EXPECT(gbc.readMem(0x8bc8), 0xb9);
        // CB B9 0080
        gbc.setState(0x80e1, 0xdb0b, 0x7100, 0x15e9, 0x1056, 0x8ff8, 0x0, 0x1);
        gbc.writeMem(0x80e1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdb0b);
        EXPECT(gbc.pc(), 0x80e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e1), 0xcb);
        EXPECT(gbc.readMem(0x80e2), 0xb9);
        // CB B9 0081
        gbc.setState(0xe2c, 0x2a70, 0xa750, 0x374, 0xa14, 0xedfc, 0x0, 0x0);
        gbc.writeMem(0xe2c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2a70);
        EXPECT(gbc.pc(), 0xe2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0082
        gbc.setState(0x265e, 0xe478, 0xd240, 0xe58c, 0xe33d, 0x9a7c, 0x0, 0x1);
        gbc.writeMem(0x265e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe478);
        EXPECT(gbc.pc(), 0x2660);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0083
        gbc.setState(0xc4ce, 0xdb47, 0x6630, 0x2da2, 0xdfc8, 0x227b, 0x0, 0x1);
        gbc.writeMem(0xc4ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdb47);
        EXPECT(gbc.pc(), 0xc4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ce), 0xcb);
        EXPECT(gbc.readMem(0xc4cf), 0xb9);
        // CB B9 0084
        gbc.setState(0x9c94, 0xe990, 0x5370, 0x944f, 0x628e, 0xb2e4, 0x0, 0x1);
        gbc.writeMem(0x9c94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe990);
        EXPECT(gbc.pc(), 0x9c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c94), 0xcb);
        EXPECT(gbc.readMem(0x9c95), 0xb9);
        // CB B9 0085
        gbc.setState(0xef67, 0x8692, 0xa230, 0x6dff, 0x8367, 0xcf78, 0x1, 0x1);
        gbc.writeMem(0xef67, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8692);
        EXPECT(gbc.pc(), 0xef69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef67), 0xcb);
        EXPECT(gbc.readMem(0xef68), 0xb9);
        // CB B9 0087
        gbc.setState(0x2cf0, 0xe323, 0x16b0, 0xc17b, 0x4445, 0x6bb3, 0x0, 0x1);
        gbc.writeMem(0x2cf0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe323);
        EXPECT(gbc.pc(), 0x2cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0088
        gbc.setState(0xc30f, 0xedea, 0xe5c0, 0x5c13, 0xff81, 0x562c, 0x1, 0x0);
        gbc.writeMem(0xc30f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xedea);
        EXPECT(gbc.pc(), 0xc311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30f), 0xcb);
        EXPECT(gbc.readMem(0xc310), 0xb9);
        // CB B9 0089
        gbc.setState(0x7be1, 0x9e2d, 0xb6a0, 0xa1ee, 0x5c20, 0x42dc, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9e2d);
        EXPECT(gbc.pc(), 0x7be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 008A
        gbc.setState(0x7a35, 0x195e, 0x7cb0, 0x8ffc, 0x9a45, 0xabb3, 0x1, 0x1);
        gbc.writeMem(0x7a35, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x195e);
        EXPECT(gbc.pc(), 0x7a37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 008C
        gbc.setState(0xd7be, 0xecce, 0x9230, 0x9e3f, 0xd036, 0x6bc, 0x1, 0x1);
        gbc.writeMem(0xd7be, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xecce);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7be), 0xcb);
        EXPECT(gbc.readMem(0xd7bf), 0xb9);
        // CB B9 008D
        gbc.setState(0x27f, 0x925b, 0x9560, 0x3662, 0xa204, 0x2984, 0x1, 0x0);
        gbc.writeMem(0x27f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x925b);
        EXPECT(gbc.pc(), 0x281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 008E
        gbc.setState(0xcb9, 0xf58, 0xac0, 0x8c3b, 0xd3c, 0x99b4, 0x0, 0x1);
        gbc.writeMem(0xcb9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0xcbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 008F
        gbc.setState(0x5bff, 0x64e8, 0x4e70, 0xe2c4, 0xb989, 0x7a7b, 0x1, 0x0);
        gbc.writeMem(0x5bff, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x64e8);
        EXPECT(gbc.pc(), 0x5c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0090
        gbc.setState(0xe8e4, 0x4c48, 0xfa80, 0xd275, 0x6578, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0xe8e4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4c48);
        EXPECT(gbc.pc(), 0xe8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8e4), 0xcb);
        EXPECT(gbc.readMem(0xe8e5), 0xb9);
        // CB B9 0091
        gbc.setState(0x7c19, 0xd5fb, 0xee60, 0x93b4, 0xe735, 0x5bfa, 0x1, 0x1);
        gbc.writeMem(0x7c19, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd5fb);
        EXPECT(gbc.pc(), 0x7c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0092
        gbc.setState(0xa8a, 0x41ed, 0x7be0, 0xc24d, 0xac8b, 0x7036, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x41ed);
        EXPECT(gbc.pc(), 0xa8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0093
        gbc.setState(0x77a4, 0xf815, 0x8f80, 0x3792, 0xbc19, 0xcd3e, 0x0, 0x0);
        gbc.writeMem(0x77a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf815);
        EXPECT(gbc.pc(), 0x77a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0094
        gbc.setState(0xb632, 0x1ef9, 0xe960, 0x889b, 0x8479, 0xa4fe, 0x0, 0x0);
        gbc.writeMem(0xb632, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1ef9);
        EXPECT(gbc.pc(), 0xb634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb632), 0xcb);
        EXPECT(gbc.readMem(0xb633), 0xb9);
        // CB B9 0095
        gbc.setState(0xc582, 0x2370, 0x3380, 0x4a0f, 0x454e, 0xa191, 0x0, 0x0);
        gbc.writeMem(0xc582, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2370);
        EXPECT(gbc.pc(), 0xc584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc582), 0xcb);
        EXPECT(gbc.readMem(0xc583), 0xb9);
        // CB B9 0096
        gbc.setState(0x6de8, 0xa792, 0xb880, 0xca34, 0xa73f, 0xf318, 0x0, 0x0);
        gbc.writeMem(0x6de8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa792);
        EXPECT(gbc.pc(), 0x6dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0097
        gbc.setState(0xb2ca, 0xf93f, 0x320, 0xce5b, 0x2a8f, 0x303b, 0x1, 0x0);
        gbc.writeMem(0xb2ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf93f);
        EXPECT(gbc.pc(), 0xb2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2ca), 0xcb);
        EXPECT(gbc.readMem(0xb2cb), 0xb9);
        // CB B9 0098
        gbc.setState(0x19bb, 0x3f23, 0x5320, 0x8a6c, 0x80d9, 0x5195, 0x0, 0x1);
        gbc.writeMem(0x19bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3f23);
        EXPECT(gbc.pc(), 0x19bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0099
        gbc.setState(0x7f78, 0xf112, 0xf8f0, 0x310d, 0x1e81, 0x8a8e, 0x0, 0x0);
        gbc.writeMem(0x7f78, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf112);
        EXPECT(gbc.pc(), 0x7f7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 009A
        gbc.setState(0xef0, 0xe49a, 0x1de0, 0x58c6, 0x6b30, 0xd5bc, 0x0, 0x0);
        gbc.writeMem(0xef0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe49a);
        EXPECT(gbc.pc(), 0xef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 009B
        gbc.setState(0x484b, 0xe6c6, 0xaab0, 0xda, 0x94fe, 0x1469, 0x1, 0x0);
        gbc.writeMem(0x484b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe6c6);
        EXPECT(gbc.pc(), 0x484d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 009C
        gbc.setState(0xec20, 0xa3ae, 0xd250, 0x6c9c, 0x64a3, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0xec20, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa3ae);
        EXPECT(gbc.pc(), 0xec22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec20), 0xcb);
        EXPECT(gbc.readMem(0xec21), 0xb9);
        // CB B9 009E
        gbc.setState(0xc9a9, 0x2819, 0xaa40, 0x2398, 0xaaa8, 0xad83, 0x0, 0x1);
        gbc.writeMem(0xc9a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2819);
        EXPECT(gbc.pc(), 0xc9ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a9), 0xcb);
        EXPECT(gbc.readMem(0xc9aa), 0xb9);
        // CB B9 009F
        gbc.setState(0x42a3, 0x4100, 0xadf0, 0xfc16, 0xf0fe, 0x6866, 0x0, 0x1);
        gbc.writeMem(0x42a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4100);
        EXPECT(gbc.pc(), 0x42a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00A0
        gbc.setState(0xd727, 0x31f6, 0xa520, 0x10a5, 0xf505, 0xf714, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x31f6);
        EXPECT(gbc.pc(), 0xd729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd727), 0xcb);
        EXPECT(gbc.readMem(0xd728), 0xb9);
        // CB B9 00A1
        gbc.setState(0xae71, 0x6a84, 0x4150, 0x634e, 0xcdf3, 0x99ad, 0x1, 0x1);
        gbc.writeMem(0xae71, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6a84);
        EXPECT(gbc.pc(), 0xae73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae71), 0xcb);
        EXPECT(gbc.readMem(0xae72), 0xb9);
        // CB B9 00A2
        gbc.setState(0xc0f6, 0x12c1, 0x2e30, 0x13ab, 0xcad8, 0x6677, 0x0, 0x0);
        gbc.writeMem(0xc0f6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x12c1);
        EXPECT(gbc.pc(), 0xc0f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f6), 0xcb);
        EXPECT(gbc.readMem(0xc0f7), 0xb9);
        // CB B9 00A3
        gbc.setState(0x6625, 0xc24d, 0xf720, 0xb96c, 0xb926, 0xcec2, 0x0, 0x1);
        gbc.writeMem(0x6625, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc24d);
        EXPECT(gbc.pc(), 0x6627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00A4
        gbc.setState(0x779d, 0x6880, 0x470, 0xd220, 0xc5b6, 0x5a53, 0x1, 0x1);
        gbc.writeMem(0x779d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6880);
        EXPECT(gbc.pc(), 0x779f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00A5
        gbc.setState(0x625, 0xce12, 0xfa00, 0xd1d, 0x58, 0xf430, 0x1, 0x1);
        gbc.writeMem(0x625, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xce12);
        EXPECT(gbc.pc(), 0x627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00A7
        gbc.setState(0x3f44, 0x2d57, 0xfe70, 0xc176, 0xe63d, 0x30db, 0x0, 0x0);
        gbc.writeMem(0x3f44, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2d57);
        EXPECT(gbc.pc(), 0x3f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00A8
        gbc.setState(0xa16, 0x60e6, 0xa690, 0xafc9, 0x449b, 0x2f79, 0x0, 0x0);
        gbc.writeMem(0xa16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x60e6);
        EXPECT(gbc.pc(), 0xa18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00A9
        gbc.setState(0xdee5, 0x787a, 0xd220, 0x9d4f, 0x1ca1, 0x5149, 0x0, 0x1);
        gbc.writeMem(0xdee5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x787a);
        EXPECT(gbc.pc(), 0xdee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee5), 0xcb);
        EXPECT(gbc.readMem(0xdee6), 0xb9);
        // CB B9 00AA
        gbc.setState(0xe658, 0xe8d4, 0x2840, 0x5c79, 0xd0b9, 0x6d3d, 0x1, 0x1);
        gbc.writeMem(0xe658, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe8d4);
        EXPECT(gbc.pc(), 0xe65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe658), 0xcb);
        EXPECT(gbc.readMem(0xe659), 0xb9);
        // CB B9 00AC
        gbc.setState(0x6443, 0x8c6b, 0x7520, 0x78c2, 0x1c40, 0x8627, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x8c6b);
        EXPECT(gbc.pc(), 0x6445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00AD
        gbc.setState(0xc771, 0x5ef0, 0xe350, 0xa83c, 0x77b5, 0xe6ea, 0x0, 0x1);
        gbc.writeMem(0xc771, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5ef0);
        EXPECT(gbc.pc(), 0xc773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc771), 0xcb);
        EXPECT(gbc.readMem(0xc772), 0xb9);
        // CB B9 00AE
        gbc.setState(0x383c, 0x7e27, 0x66b0, 0x8201, 0xfb0a, 0xd790, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x7e27);
        EXPECT(gbc.pc(), 0x383e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00AF
        gbc.setState(0x732b, 0x87e4, 0xdf50, 0x400f, 0x8efc, 0x823a, 0x1, 0x1);
        gbc.writeMem(0x732b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x87e4);
        EXPECT(gbc.pc(), 0x732d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00B0
        gbc.setState(0x3629, 0x932b, 0x5ef0, 0x5ad3, 0x3262, 0x709b, 0x1, 0x1);
        gbc.writeMem(0x3629, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x932b);
        EXPECT(gbc.pc(), 0x362b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00B1
        gbc.setState(0x705f, 0xe84e, 0xd2d0, 0x836c, 0xfee2, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0x705f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe84e);
        EXPECT(gbc.pc(), 0x7061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00B2
        gbc.setState(0xa241, 0xa5d8, 0x6a00, 0xfcb6, 0xc26f, 0x633d, 0x1, 0x0);
        gbc.writeMem(0xa241, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa5d8);
        EXPECT(gbc.pc(), 0xa243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa241), 0xcb);
        EXPECT(gbc.readMem(0xa242), 0xb9);
        // CB B9 00B3
        gbc.setState(0x2ce4, 0x6314, 0x99b0, 0xbc6c, 0x52cf, 0xe0eb, 0x0, 0x0);
        gbc.writeMem(0x2ce4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6314);
        EXPECT(gbc.pc(), 0x2ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00B4
        gbc.setState(0x666d, 0x9f20, 0xdf00, 0x4719, 0x394a, 0xdb13, 0x0, 0x1);
        gbc.writeMem(0x666d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9f20);
        EXPECT(gbc.pc(), 0x666f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00B6
        gbc.setState(0xc408, 0xf395, 0xb570, 0x2a00, 0x873e, 0xff85, 0x1, 0x0);
        gbc.writeMem(0xc408, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf395);
        EXPECT(gbc.pc(), 0xc40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc408), 0xcb);
        EXPECT(gbc.readMem(0xc409), 0xb9);
        // CB B9 00B7
        gbc.setState(0xafec, 0x1036, 0x57a0, 0xd666, 0xf6d2, 0x8325, 0x0, 0x0);
        gbc.writeMem(0xafec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1036);
        EXPECT(gbc.pc(), 0xafee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafec), 0xcb);
        EXPECT(gbc.readMem(0xafed), 0xb9);
        // CB B9 00B8
        gbc.setState(0x9d7, 0x5172, 0xbd10, 0x25c6, 0xc2a4, 0xd312, 0x1, 0x1);
        gbc.writeMem(0x9d7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x5172);
        EXPECT(gbc.pc(), 0x9d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00B9
        gbc.setState(0x1f4b, 0xaed9, 0xa640, 0x7edb, 0xccfb, 0x9c3e, 0x0, 0x1);
        gbc.writeMem(0x1f4b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xaed9);
        EXPECT(gbc.pc(), 0x1f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00BA
        gbc.setState(0xe634, 0xba1, 0x94e0, 0x344, 0xfbfc, 0x6719, 0x1, 0x1);
        gbc.writeMem(0xe634, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xba1);
        EXPECT(gbc.pc(), 0xe636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe634), 0xcb);
        EXPECT(gbc.readMem(0xe635), 0xb9);
        // CB B9 00BB
        gbc.setState(0x1995, 0x5435, 0xf1a0, 0x3ac, 0x848c, 0x60ec, 0x1, 0x0);
        gbc.writeMem(0x1995, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5435);
        EXPECT(gbc.pc(), 0x1997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00BC
        gbc.setState(0x9972, 0x6de7, 0x7930, 0x45aa, 0x6367, 0xf990, 0x0, 0x1);
        gbc.writeMem(0x9972, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6de7);
        EXPECT(gbc.pc(), 0x9974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9972), 0xcb);
        EXPECT(gbc.readMem(0x9973), 0xb9);
        // CB B9 00BD
        gbc.setState(0xa91c, 0xe1c7, 0xd990, 0xd60c, 0x885, 0x33b2, 0x1, 0x1);
        gbc.writeMem(0xa91c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe1c7);
        EXPECT(gbc.pc(), 0xa91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91c), 0xcb);
        EXPECT(gbc.readMem(0xa91d), 0xb9);
        // CB B9 00BE
        gbc.setState(0x7f1d, 0xf24a, 0x1860, 0xc89, 0xeb6a, 0x9695, 0x1, 0x0);
        gbc.writeMem(0x7f1d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf24a);
        EXPECT(gbc.pc(), 0x7f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00BF
        gbc.setState(0x6846, 0x76a6, 0x4770, 0x530d, 0xd495, 0x1dca, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x76a6);
        EXPECT(gbc.pc(), 0x6848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00C0
        gbc.setState(0x888, 0xb078, 0x13c0, 0xcbc1, 0x55a, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x888, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb078);
        EXPECT(gbc.pc(), 0x88a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00C1
        gbc.setState(0xb261, 0x350, 0x60a0, 0x7388, 0x9a90, 0xbb05, 0x0, 0x0);
        gbc.writeMem(0xb261, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x350);
        EXPECT(gbc.pc(), 0xb263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb261), 0xcb);
        EXPECT(gbc.readMem(0xb262), 0xb9);
        // CB B9 00C2
        gbc.setState(0x99ca, 0x88af, 0x5b60, 0xd6, 0xe69b, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x99ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x88af);
        EXPECT(gbc.pc(), 0x99cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ca), 0xcb);
        EXPECT(gbc.readMem(0x99cb), 0xb9);
        // CB B9 00C3
        gbc.setState(0x916a, 0x61aa, 0xc470, 0x8918, 0xd13a, 0x5474, 0x0, 0x1);
        gbc.writeMem(0x916a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x61aa);
        EXPECT(gbc.pc(), 0x916c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x916a), 0xcb);
        EXPECT(gbc.readMem(0x916b), 0xb9);
        // CB B9 00C5
        gbc.setState(0x5fe3, 0xeaf6, 0x6a70, 0x5878, 0x2284, 0xa0f7, 0x1, 0x1);
        gbc.writeMem(0x5fe3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xeaf6);
        EXPECT(gbc.pc(), 0x5fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00C6
        gbc.setState(0x66dc, 0x7245, 0xa890, 0x91b1, 0xecb6, 0x60dc, 0x0, 0x1);
        gbc.writeMem(0x66dc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7245);
        EXPECT(gbc.pc(), 0x66de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00C7
        gbc.setState(0xaf4a, 0x4aad, 0x5710, 0xc3cd, 0x2b4a, 0xd453, 0x1, 0x1);
        gbc.writeMem(0xaf4a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4aad);
        EXPECT(gbc.pc(), 0xaf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf4a), 0xcb);
        EXPECT(gbc.readMem(0xaf4b), 0xb9);
        // CB B9 00C8
        gbc.setState(0xb48f, 0x5af8, 0x99a0, 0x4321, 0x9faa, 0x83e4, 0x0, 0x1);
        gbc.writeMem(0xb48f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5af8);
        EXPECT(gbc.pc(), 0xb491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb48f), 0xcb);
        EXPECT(gbc.readMem(0xb490), 0xb9);
        // CB B9 00C9
        gbc.setState(0xebe0, 0xdd8f, 0xcd40, 0xe9de, 0x8fe1, 0xd3e8, 0x0, 0x1);
        gbc.writeMem(0xebe0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdd8f);
        EXPECT(gbc.pc(), 0xebe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe0), 0xcb);
        EXPECT(gbc.readMem(0xebe1), 0xb9);
        // CB B9 00CA
        gbc.setState(0x71bf, 0x33e3, 0x95d0, 0xf1e1, 0xaff2, 0x5956, 0x1, 0x1);
        gbc.writeMem(0x71bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x33e3);
        EXPECT(gbc.pc(), 0x71c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00CC
        gbc.setState(0x5ecc, 0xb9f1, 0x4d40, 0xb61b, 0x9e48, 0xab2a, 0x1, 0x1);
        gbc.writeMem(0x5ecc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb9f1);
        EXPECT(gbc.pc(), 0x5ece);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00CD
        gbc.setState(0x9354, 0x34e8, 0x5850, 0x1183, 0x371d, 0x30f, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x34e8);
        EXPECT(gbc.pc(), 0x9356);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9354), 0xcb);
        EXPECT(gbc.readMem(0x9355), 0xb9);
        // CB B9 00CE
        gbc.setState(0x7d0d, 0x3cbd, 0xb750, 0x26af, 0x4521, 0x5236, 0x1, 0x1);
        gbc.writeMem(0x7d0d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3cbd);
        EXPECT(gbc.pc(), 0x7d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00CF
        gbc.setState(0xc9da, 0x7d9a, 0x30a0, 0xca25, 0xa1b3, 0xfc61, 0x0, 0x1);
        gbc.writeMem(0xc9da, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7d9a);
        EXPECT(gbc.pc(), 0xc9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9da), 0xcb);
        EXPECT(gbc.readMem(0xc9db), 0xb9);
        // CB B9 00D0
        gbc.setState(0xbf00, 0x5660, 0x2590, 0x3aa2, 0xcd66, 0x60a2, 0x0, 0x1);
        gbc.writeMem(0xbf00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5660);
        EXPECT(gbc.pc(), 0xbf02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf00), 0xcb);
        EXPECT(gbc.readMem(0xbf01), 0xb9);
        // CB B9 00D1
        gbc.setState(0xa9e5, 0x4d1, 0xaa20, 0x4731, 0xdfa, 0x426, 0x0, 0x0);
        gbc.writeMem(0xa9e5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4d1);
        EXPECT(gbc.pc(), 0xa9e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e5), 0xcb);
        EXPECT(gbc.readMem(0xa9e6), 0xb9);
        // CB B9 00D2
        gbc.setState(0xcd5a, 0x34dd, 0xba40, 0x4426, 0x37ee, 0xd68d, 0x1, 0x1);
        gbc.writeMem(0xcd5a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x34dd);
        EXPECT(gbc.pc(), 0xcd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd5a), 0xcb);
        EXPECT(gbc.readMem(0xcd5b), 0xb9);
        // CB B9 00D3
        gbc.setState(0x1906, 0xbe61, 0xc130, 0xa989, 0x99a8, 0x51c, 0x1, 0x0);
        gbc.writeMem(0x1906, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbe61);
        EXPECT(gbc.pc(), 0x1908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00D5
        gbc.setState(0xe6b2, 0xeccd, 0x4180, 0xf210, 0x5bab, 0xb00a, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeccd);
        EXPECT(gbc.pc(), 0xe6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6b2), 0xcb);
        EXPECT(gbc.readMem(0xe6b3), 0xb9);
        // CB B9 00D6
        gbc.setState(0x807a, 0xca83, 0xd380, 0x4806, 0xf6f5, 0x32d7, 0x0, 0x1);
        gbc.writeMem(0x807a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xca83);
        EXPECT(gbc.pc(), 0x807c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807a), 0xcb);
        EXPECT(gbc.readMem(0x807b), 0xb9);
        // CB B9 00D7
        gbc.setState(0x773d, 0x173b, 0x1f90, 0x279c, 0xc0b2, 0x15c2, 0x1, 0x1);
        gbc.writeMem(0x773d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x173b);
        EXPECT(gbc.pc(), 0x773f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00D8
        gbc.setState(0x3519, 0x28ec, 0xb080, 0xa6b5, 0x6fd, 0xebb2, 0x1, 0x1);
        gbc.writeMem(0x3519, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x28ec);
        EXPECT(gbc.pc(), 0x351b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00D9
        gbc.setState(0xebf3, 0x3170, 0xc370, 0x47b1, 0x8735, 0x8428, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3170);
        EXPECT(gbc.pc(), 0xebf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebf3), 0xcb);
        EXPECT(gbc.readMem(0xebf4), 0xb9);
        // CB B9 00DA
        gbc.setState(0x9c12, 0x7455, 0x7b30, 0x83c1, 0xb839, 0xda62, 0x0, 0x0);
        gbc.writeMem(0x9c12, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7455);
        EXPECT(gbc.pc(), 0x9c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c12), 0xcb);
        EXPECT(gbc.readMem(0x9c13), 0xb9);
        // CB B9 00DC
        gbc.setState(0x3b05, 0x9a75, 0x99d0, 0x2f19, 0x11d2, 0xbbdd, 0x0, 0x1);
        gbc.writeMem(0x3b05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9a75);
        EXPECT(gbc.pc(), 0x3b07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00DD
        gbc.setState(0x6176, 0xd2ae, 0xcce0, 0x91b9, 0xb79a, 0x2d87, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd2ae);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00DE
        gbc.setState(0xd62c, 0x7261, 0xb3d0, 0x4fd1, 0xa5c7, 0x322a, 0x0, 0x0);
        gbc.writeMem(0xd62c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7261);
        EXPECT(gbc.pc(), 0xd62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62c), 0xcb);
        EXPECT(gbc.readMem(0xd62d), 0xb9);
        // CB B9 00DF
        gbc.setState(0xabd7, 0xa70a, 0xd50, 0xce8b, 0x70e5, 0xfe46, 0x0, 0x1);
        gbc.writeMem(0xabd7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa70a);
        EXPECT(gbc.pc(), 0xabd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd7), 0xcb);
        EXPECT(gbc.readMem(0xabd8), 0xb9);
        // CB B9 00E0
        gbc.setState(0xb240, 0x1782, 0xa7f0, 0x7581, 0x1be2, 0x3c30, 0x0, 0x1);
        gbc.writeMem(0xb240, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x1782);
        EXPECT(gbc.pc(), 0xb242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb240), 0xcb);
        EXPECT(gbc.readMem(0xb241), 0xb9);
        // CB B9 00E1
        gbc.setState(0x49d3, 0xd545, 0xf500, 0xf28e, 0x10fa, 0x98c3, 0x0, 0x0);
        gbc.writeMem(0x49d3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd545);
        EXPECT(gbc.pc(), 0x49d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00E2
        gbc.setState(0x4a76, 0xdbe2, 0x7af0, 0xae4, 0x5340, 0xca6f, 0x1, 0x1);
        gbc.writeMem(0x4a76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdbe2);
        EXPECT(gbc.pc(), 0x4a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00E3
        gbc.setState(0x77d9, 0xc0a6, 0xb3a0, 0x86c9, 0xdb4, 0x9781, 0x0, 0x1);
        gbc.writeMem(0x77d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc0a6);
        EXPECT(gbc.pc(), 0x77db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00E4
        gbc.setState(0x7dda, 0x1ad2, 0x4d60, 0x362, 0xd532, 0xa2ab, 0x1, 0x0);
        gbc.writeMem(0x7dda, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1ad2);
        EXPECT(gbc.pc(), 0x7ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00E5
        gbc.setState(0x4386, 0x9fad, 0xc010, 0xb461, 0xab48, 0x2283, 0x0, 0x0);
        gbc.writeMem(0x4386, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9fad);
        EXPECT(gbc.pc(), 0x4388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00E6
        gbc.setState(0xdef4, 0x6c65, 0x8300, 0x40b, 0x590c, 0xe254, 0x1, 0x0);
        gbc.writeMem(0xdef4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6c65);
        EXPECT(gbc.pc(), 0xdef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdef4), 0xcb);
        EXPECT(gbc.readMem(0xdef5), 0xb9);
        // CB B9 00E7
        gbc.setState(0x2219, 0x5246, 0xa6b0, 0x6596, 0x899d, 0x282, 0x1, 0x1);
        gbc.writeMem(0x2219, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5246);
        EXPECT(gbc.pc(), 0x221b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00E8
        gbc.setState(0xc1a7, 0xc277, 0xa4b0, 0xb87b, 0xc1bc, 0x7276, 0x0, 0x0);
        gbc.writeMem(0xc1a7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc277);
        EXPECT(gbc.pc(), 0xc1a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a7), 0xcb);
        EXPECT(gbc.readMem(0xc1a8), 0xb9);
        // CB B9 00E9
        gbc.setState(0x7a74, 0xcdf1, 0xe7e0, 0x8570, 0x9778, 0x9434, 0x0, 0x1);
        gbc.writeMem(0x7a74, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcdf1);
        EXPECT(gbc.pc(), 0x7a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00EA
        gbc.setState(0xa6e9, 0xc00f, 0xc6f0, 0x340c, 0x1cab, 0xe03d, 0x1, 0x0);
        gbc.writeMem(0xa6e9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc00f);
        EXPECT(gbc.pc(), 0xa6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6e9), 0xcb);
        EXPECT(gbc.readMem(0xa6ea), 0xb9);
        // CB B9 00EB
        gbc.setState(0x6eea, 0xdd2f, 0x3c0, 0x48f3, 0x14d5, 0xd86d, 0x1, 0x0);
        gbc.writeMem(0x6eea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdd2f);
        EXPECT(gbc.pc(), 0x6eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00EC
        gbc.setState(0x6b76, 0xe9d0, 0xd450, 0xbe36, 0x4da6, 0x6fc1, 0x0, 0x1);
        gbc.writeMem(0x6b76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe9d0);
        EXPECT(gbc.pc(), 0x6b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00ED
        gbc.setState(0x2660, 0xba5a, 0x2020, 0xa852, 0x4fa9, 0x52d0, 0x1, 0x0);
        gbc.writeMem(0x2660, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xba5a);
        EXPECT(gbc.pc(), 0x2662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00EE
        gbc.setState(0x1ffe, 0x61af, 0x8530, 0x1198, 0x57eb, 0x14da, 0x0, 0x0);
        gbc.writeMem(0x1ffe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x61af);
        EXPECT(gbc.pc(), 0x2000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00EF
        gbc.setState(0x4f44, 0x64f0, 0x75f0, 0x70e2, 0x7064, 0xd444, 0x0, 0x1);
        gbc.writeMem(0x4f44, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x64f0);
        EXPECT(gbc.pc(), 0x4f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00F0
        gbc.setState(0x8ac9, 0xcc08, 0x1a80, 0xaf5a, 0x9d86, 0x21b9, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcc08);
        EXPECT(gbc.pc(), 0x8acb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac9), 0xcb);
        EXPECT(gbc.readMem(0x8aca), 0xb9);
        // CB B9 00F1
        gbc.setState(0x16d1, 0xe28b, 0xae90, 0xc7a5, 0xf575, 0xd892, 0x0, 0x1);
        gbc.writeMem(0x16d1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe28b);
        EXPECT(gbc.pc(), 0x16d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00F2
        gbc.setState(0x44c7, 0x4eec, 0xa1e0, 0xcd30, 0x5b13, 0xe4ce, 0x1, 0x0);
        gbc.writeMem(0x44c7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4eec);
        EXPECT(gbc.pc(), 0x44c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00F3
        gbc.setState(0x86db, 0x15b7, 0x3c00, 0xc0e5, 0x389b, 0xdaba, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x15b7);
        EXPECT(gbc.pc(), 0x86dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86db), 0xcb);
        EXPECT(gbc.readMem(0x86dc), 0xb9);
        // CB B9 00F4
        gbc.setState(0x7ffc, 0xc78f, 0x6ca0, 0x8f6b, 0x964a, 0xab3e, 0x0, 0x1);
        gbc.writeMem(0x7ffc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc78f);
        EXPECT(gbc.pc(), 0x7ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00F5
        gbc.setState(0xe170, 0x5bfe, 0xa000, 0x9cd1, 0x1d23, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0xe170, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x5bfe);
        EXPECT(gbc.pc(), 0xe172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe170), 0xcb);
        EXPECT(gbc.readMem(0xe171), 0xb9);
        // CB B9 00F6
        gbc.setState(0x80b5, 0xff35, 0x9990, 0xbeb5, 0x2bd7, 0x96ea, 0x0, 0x0);
        gbc.writeMem(0x80b5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xff35);
        EXPECT(gbc.pc(), 0x80b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80b5), 0xcb);
        EXPECT(gbc.readMem(0x80b6), 0xb9);
        // CB B9 00F7
        gbc.setState(0xc137, 0x162a, 0x90a0, 0x43fa, 0xd748, 0x9bac, 0x0, 0x1);
        gbc.writeMem(0xc137, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x162a);
        EXPECT(gbc.pc(), 0xc139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc137), 0xcb);
        EXPECT(gbc.readMem(0xc138), 0xb9);
        // CB B9 00F9
        gbc.setState(0x9eab, 0xeac3, 0xef0, 0x25de, 0x30b6, 0xcd83, 0x1, 0x0);
        gbc.writeMem(0x9eab, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xeac3);
        EXPECT(gbc.pc(), 0x9ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eab), 0xcb);
        EXPECT(gbc.readMem(0x9eac), 0xb9);
        // CB B9 00FA
        gbc.setState(0x8dee, 0xc400, 0x6690, 0x33d4, 0x4679, 0xdd7d, 0x0, 0x0);
        gbc.writeMem(0x8dee, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc400);
        EXPECT(gbc.pc(), 0x8df0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dee), 0xcb);
        EXPECT(gbc.readMem(0x8def), 0xb9);
        // CB B9 00FB
        gbc.setState(0x5e1f, 0xbfad, 0x4c40, 0x66ea, 0x76ff, 0x204e, 0x0, 0x1);
        gbc.writeMem(0x5e1f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbfad);
        EXPECT(gbc.pc(), 0x5e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 00FC
        gbc.setState(0x28f8, 0xaea7, 0x5150, 0x3b33, 0xe34e, 0xa82a, 0x0, 0x1);
        gbc.writeMem(0x28f8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xaea7);
        EXPECT(gbc.pc(), 0x28fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 00FD
        gbc.setState(0xe3b3, 0x8758, 0x7c70, 0xcc4b, 0x1661, 0x715c, 0x1, 0x0);
        gbc.writeMem(0xe3b3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8758);
        EXPECT(gbc.pc(), 0xe3b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b3), 0xcb);
        EXPECT(gbc.readMem(0xe3b4), 0xb9);
        // CB B9 00FE
        gbc.setState(0xd67a, 0x797a, 0x15d0, 0xe046, 0xc2d9, 0xdcd9, 0x0, 0x0);
        gbc.writeMem(0xd67a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x797a);
        EXPECT(gbc.pc(), 0xd67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67a), 0xcb);
        EXPECT(gbc.readMem(0xd67b), 0xb9);
        // CB B9 00FF
        gbc.setState(0xcfb0, 0xdfdc, 0xbcd0, 0xd1d2, 0xb47c, 0x70be, 0x0, 0x0);
        gbc.writeMem(0xcfb0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdfdc);
        EXPECT(gbc.pc(), 0xcfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb0), 0xcb);
        EXPECT(gbc.readMem(0xcfb1), 0xb9);
        // CB B9 0100
        gbc.setState(0x4fa6, 0xd81c, 0x7890, 0x2161, 0xf79e, 0x8352, 0x0, 0x0);
        gbc.writeMem(0x4fa6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd81c);
        EXPECT(gbc.pc(), 0x4fa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0101
        gbc.setState(0x5464, 0x918c, 0x2600, 0xf662, 0x2b39, 0x1b4e, 0x0, 0x0);
        gbc.writeMem(0x5464, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x918c);
        EXPECT(gbc.pc(), 0x5466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0102
        gbc.setState(0x2c79, 0x1810, 0x3100, 0xb794, 0x6652, 0x3fe7, 0x0, 0x1);
        gbc.writeMem(0x2c79, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1810);
        EXPECT(gbc.pc(), 0x2c7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0103
        gbc.setState(0x85cc, 0x8e3f, 0x96b0, 0x1672, 0xdd00, 0x18af, 0x0, 0x1);
        gbc.writeMem(0x85cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8e3f);
        EXPECT(gbc.pc(), 0x85ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85cc), 0xcb);
        EXPECT(gbc.readMem(0x85cd), 0xb9);
        // CB B9 0104
        gbc.setState(0x6341, 0x887a, 0x3ac0, 0xa4b1, 0xacb0, 0xd478, 0x1, 0x0);
        gbc.writeMem(0x6341, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x887a);
        EXPECT(gbc.pc(), 0x6343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0105
        gbc.setState(0x3e2f, 0x384b, 0xb7a0, 0x402d, 0xc64d, 0xa402, 0x0, 0x1);
        gbc.writeMem(0x3e2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x384b);
        EXPECT(gbc.pc(), 0x3e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0106
        gbc.setState(0x3037, 0xb511, 0x1f80, 0x7843, 0x7473, 0xf62e, 0x0, 0x1);
        gbc.writeMem(0x3037, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb511);
        EXPECT(gbc.pc(), 0x3039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0107
        gbc.setState(0x7330, 0xa3b8, 0x8320, 0x5ec6, 0xa22c, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0x7330, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa3b8);
        EXPECT(gbc.pc(), 0x7332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0108
        gbc.setState(0x77d9, 0xaeb7, 0xf750, 0xa593, 0xa14d, 0x859f, 0x1, 0x0);
        gbc.writeMem(0x77d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xaeb7);
        EXPECT(gbc.pc(), 0x77db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0109
        gbc.setState(0x2bd1, 0x85a5, 0x7680, 0xa89b, 0xb497, 0x98c5, 0x0, 0x0);
        gbc.writeMem(0x2bd1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x85a5);
        EXPECT(gbc.pc(), 0x2bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 010A
        gbc.setState(0x5c39, 0x7d55, 0xaaa0, 0x7af0, 0x5c8, 0x2224, 0x1, 0x1);
        gbc.writeMem(0x5c39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7d55);
        EXPECT(gbc.pc(), 0x5c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 010C
        gbc.setState(0x6aa5, 0x850a, 0x7c50, 0x9084, 0xc63, 0xcb4b, 0x1, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x850a);
        EXPECT(gbc.pc(), 0x6aa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 010D
        gbc.setState(0xc35f, 0x1e6e, 0x6730, 0x75f0, 0x1192, 0x81a8, 0x0, 0x0);
        gbc.writeMem(0xc35f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1e6e);
        EXPECT(gbc.pc(), 0xc361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35f), 0xcb);
        EXPECT(gbc.readMem(0xc360), 0xb9);
        // CB B9 010E
        gbc.setState(0xeff7, 0x1981, 0x3a30, 0x860c, 0x4974, 0xf820, 0x1, 0x1);
        gbc.writeMem(0xeff7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1981);
        EXPECT(gbc.pc(), 0xeff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff7), 0xcb);
        EXPECT(gbc.readMem(0xeff8), 0xb9);
        // CB B9 010F
        gbc.setState(0x4a55, 0xc708, 0xcce0, 0x6bbd, 0x6847, 0x401f, 0x1, 0x1);
        gbc.writeMem(0x4a55, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc708);
        EXPECT(gbc.pc(), 0x4a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0110
        gbc.setState(0x9a1f, 0xd39c, 0x7b00, 0x3795, 0x8deb, 0xe097, 0x0, 0x1);
        gbc.writeMem(0x9a1f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd39c);
        EXPECT(gbc.pc(), 0x9a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1f), 0xcb);
        EXPECT(gbc.readMem(0x9a20), 0xb9);
        // CB B9 0111
        gbc.setState(0x269f, 0x1d38, 0x710, 0xec06, 0x2afe, 0x122d, 0x1, 0x1);
        gbc.writeMem(0x269f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x1d38);
        EXPECT(gbc.pc(), 0x26a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0112
        gbc.setState(0xae3e, 0x3eef, 0x49e0, 0x64b9, 0x4b16, 0xccb7, 0x0, 0x0);
        gbc.writeMem(0xae3e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3eef);
        EXPECT(gbc.pc(), 0xae40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae3e), 0xcb);
        EXPECT(gbc.readMem(0xae3f), 0xb9);
        // CB B9 0113
        gbc.setState(0xd2e5, 0x17b, 0x4cd0, 0x7388, 0xcd2e, 0x33e0, 0x0, 0x1);
        gbc.writeMem(0xd2e5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x17b);
        EXPECT(gbc.pc(), 0xd2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2e5), 0xcb);
        EXPECT(gbc.readMem(0xd2e6), 0xb9);
        // CB B9 0114
        gbc.setState(0x69a9, 0xa5ed, 0x9c90, 0x3008, 0x80ee, 0x2513, 0x1, 0x1);
        gbc.writeMem(0x69a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xa5ed);
        EXPECT(gbc.pc(), 0x69ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0115
        gbc.setState(0xa1f6, 0x975a, 0x5f20, 0x7130, 0x27fc, 0x9a3c, 0x1, 0x1);
        gbc.writeMem(0xa1f6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x975a);
        EXPECT(gbc.pc(), 0xa1f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f6), 0xcb);
        EXPECT(gbc.readMem(0xa1f7), 0xb9);
        // CB B9 0116
        gbc.setState(0x9c03, 0xd636, 0x2900, 0x4f8a, 0xf726, 0x3d, 0x0, 0x1);
        gbc.writeMem(0x9c03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd636);
        EXPECT(gbc.pc(), 0x9c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c03), 0xcb);
        EXPECT(gbc.readMem(0x9c04), 0xb9);
        // CB B9 0117
        gbc.setState(0x3130, 0x5c39, 0xa370, 0xbbfd, 0x4350, 0x84c2, 0x1, 0x1);
        gbc.writeMem(0x3130, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5c39);
        EXPECT(gbc.pc(), 0x3132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0118
        gbc.setState(0x8820, 0x4107, 0xc910, 0xea1c, 0x8de5, 0x2aec, 0x0, 0x1);
        gbc.writeMem(0x8820, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4107);
        EXPECT(gbc.pc(), 0x8822);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8820), 0xcb);
        EXPECT(gbc.readMem(0x8821), 0xb9);
        // CB B9 0119
        gbc.setState(0x4214, 0x9175, 0xd410, 0xbbf4, 0xf192, 0x6f1d, 0x1, 0x0);
        gbc.writeMem(0x4214, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9175);
        EXPECT(gbc.pc(), 0x4216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 011A
        gbc.setState(0x56fe, 0x5226, 0x86c0, 0x7ef0, 0x3f44, 0x3b45, 0x1, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5226);
        EXPECT(gbc.pc(), 0x5700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 011B
        gbc.setState(0xd4, 0x7992, 0x38c0, 0x9c64, 0x7bb1, 0x8950, 0x1, 0x0);
        gbc.writeMem(0xd4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7992);
        EXPECT(gbc.pc(), 0xd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 011C
        gbc.setState(0xe0be, 0x18a9, 0xe670, 0x27b5, 0x9ae9, 0x86bc, 0x1, 0x1);
        gbc.writeMem(0xe0be, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x18a9);
        EXPECT(gbc.pc(), 0xe0c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0be), 0xcb);
        EXPECT(gbc.readMem(0xe0bf), 0xb9);
        // CB B9 011D
        gbc.setState(0x43a7, 0x92d8, 0x4ed0, 0x6a87, 0x6dbc, 0x8d5, 0x0, 0x0);
        gbc.writeMem(0x43a7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x92d8);
        EXPECT(gbc.pc(), 0x43a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 011E
        gbc.setState(0xdd41, 0xda02, 0xea70, 0x5a47, 0x4a2c, 0x930e, 0x0, 0x0);
        gbc.writeMem(0xdd41, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xda02);
        EXPECT(gbc.pc(), 0xdd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd41), 0xcb);
        EXPECT(gbc.readMem(0xdd42), 0xb9);
        // CB B9 011F
        gbc.setState(0xab30, 0xb133, 0xa600, 0xcaf9, 0xe922, 0xc3f6, 0x1, 0x0);
        gbc.writeMem(0xab30, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb133);
        EXPECT(gbc.pc(), 0xab32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab30), 0xcb);
        EXPECT(gbc.readMem(0xab31), 0xb9);
        // CB B9 0120
        gbc.setState(0x5c1e, 0xce6e, 0xf020, 0xf3a6, 0x2a12, 0x38dd, 0x0, 0x1);
        gbc.writeMem(0x5c1e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xce6e);
        EXPECT(gbc.pc(), 0x5c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0122
        gbc.setState(0x3e49, 0xa914, 0x6710, 0x2788, 0xc8f, 0xe4e0, 0x0, 0x1);
        gbc.writeMem(0x3e49, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa914);
        EXPECT(gbc.pc(), 0x3e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0123
        gbc.setState(0xed7b, 0x901d, 0xa860, 0xe852, 0x3cc2, 0xcb24, 0x1, 0x0);
        gbc.writeMem(0xed7b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x901d);
        EXPECT(gbc.pc(), 0xed7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed7b), 0xcb);
        EXPECT(gbc.readMem(0xed7c), 0xb9);
        // CB B9 0124
        gbc.setState(0xccd2, 0x8481, 0x3b0, 0xccde, 0xf149, 0x6f42, 0x1, 0x0);
        gbc.writeMem(0xccd2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8481);
        EXPECT(gbc.pc(), 0xccd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd2), 0xcb);
        EXPECT(gbc.readMem(0xccd3), 0xb9);
        // CB B9 0125
        gbc.setState(0xdc6, 0xeb65, 0x3680, 0xb21a, 0x4dec, 0x1a2a, 0x1, 0x1);
        gbc.writeMem(0xdc6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xeb65);
        EXPECT(gbc.pc(), 0xdc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0126
        gbc.setState(0xe08c, 0x6ec3, 0x8190, 0xe114, 0xc4a4, 0x3bba, 0x1, 0x1);
        gbc.writeMem(0xe08c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x6ec3);
        EXPECT(gbc.pc(), 0xe08e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe08c), 0xcb);
        EXPECT(gbc.readMem(0xe08d), 0xb9);
        // CB B9 0127
        gbc.setState(0xef48, 0x7a42, 0x230, 0xf57, 0x27d6, 0x347d, 0x0, 0x0);
        gbc.writeMem(0xef48, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7a42);
        EXPECT(gbc.pc(), 0xef4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef48), 0xcb);
        EXPECT(gbc.readMem(0xef49), 0xb9);
        // CB B9 0128
        gbc.setState(0xced2, 0xad47, 0x4e20, 0x245e, 0xe43a, 0x17b6, 0x0, 0x0);
        gbc.writeMem(0xced2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xad47);
        EXPECT(gbc.pc(), 0xced4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced2), 0xcb);
        EXPECT(gbc.readMem(0xced3), 0xb9);
        // CB B9 0129
        gbc.setState(0xb43, 0xfb68, 0xa0b0, 0x4208, 0xc860, 0x2304, 0x1, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfb68);
        EXPECT(gbc.pc(), 0xb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 012A
        gbc.setState(0xde4c, 0x8cb6, 0x5600, 0x7e76, 0x1ae, 0x59dd, 0x0, 0x1);
        gbc.writeMem(0xde4c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8cb6);
        EXPECT(gbc.pc(), 0xde4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4c), 0xcb);
        EXPECT(gbc.readMem(0xde4d), 0xb9);
        // CB B9 012B
        gbc.setState(0x7351, 0x65a4, 0xc7f0, 0x3c20, 0xd2a7, 0x6683, 0x1, 0x0);
        gbc.writeMem(0x7351, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x65a4);
        EXPECT(gbc.pc(), 0x7353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 012C
        gbc.setState(0x57fa, 0x8023, 0xe290, 0x64f9, 0xb24d, 0xbd20, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8023);
        EXPECT(gbc.pc(), 0x57fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 012D
        gbc.setState(0x154a, 0xef8c, 0xfc40, 0x2e5b, 0xf24c, 0xe2c2, 0x1, 0x1);
        gbc.writeMem(0x154a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xef8c);
        EXPECT(gbc.pc(), 0x154c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 012E
        gbc.setState(0x9e26, 0x6e8c, 0x1740, 0x8e31, 0xcda8, 0x3601, 0x1, 0x1);
        gbc.writeMem(0x9e26, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6e8c);
        EXPECT(gbc.pc(), 0x9e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e26), 0xcb);
        EXPECT(gbc.readMem(0x9e27), 0xb9);
        // CB B9 012F
        gbc.setState(0x364d, 0x6ca, 0xd100, 0x9db6, 0xd251, 0xb232, 0x1, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6ca);
        EXPECT(gbc.pc(), 0x364f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0130
        gbc.setState(0x3634, 0x33a8, 0x5160, 0xf2c2, 0x69b8, 0x7644, 0x1, 0x1);
        gbc.writeMem(0x3634, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x33a8);
        EXPECT(gbc.pc(), 0x3636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0131
        gbc.setState(0x9736, 0x7aaf, 0x3cc0, 0xe600, 0x192f, 0xa5d6, 0x1, 0x1);
        gbc.writeMem(0x9736, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x7aaf);
        EXPECT(gbc.pc(), 0x9738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9736), 0xcb);
        EXPECT(gbc.readMem(0x9737), 0xb9);
        // CB B9 0132
        gbc.setState(0xce33, 0xde56, 0xf2a0, 0xed1e, 0xe9be, 0xeee1, 0x1, 0x0);
        gbc.writeMem(0xce33, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xde56);
        EXPECT(gbc.pc(), 0xce35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce33), 0xcb);
        EXPECT(gbc.readMem(0xce34), 0xb9);
        // CB B9 0133
        gbc.setState(0x552e, 0x7236, 0x7c80, 0x3d00, 0x3755, 0x230, 0x1, 0x1);
        gbc.writeMem(0x552e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7236);
        EXPECT(gbc.pc(), 0x5530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0134
        gbc.setState(0x8003, 0x6a5c, 0xbc50, 0xa8ec, 0x4c48, 0x5541, 0x1, 0x1);
        gbc.writeMem(0x8003, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6a5c);
        EXPECT(gbc.pc(), 0x8005);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8003), 0xcb);
        EXPECT(gbc.readMem(0x8004), 0xb9);
        // CB B9 0135
        gbc.setState(0x4f2b, 0x8316, 0xd820, 0xa1c4, 0xd43a, 0x9b15, 0x1, 0x0);
        gbc.writeMem(0x4f2b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8316);
        EXPECT(gbc.pc(), 0x4f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0136
        gbc.setState(0x1ab3, 0xfb93, 0x4290, 0x6f7f, 0x506e, 0x4bda, 0x1, 0x0);
        gbc.writeMem(0x1ab3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfb93);
        EXPECT(gbc.pc(), 0x1ab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0137
        gbc.setState(0x7595, 0x1727, 0x3e80, 0x6d72, 0x445e, 0x1ca5, 0x0, 0x1);
        gbc.writeMem(0x7595, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x1727);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0138
        gbc.setState(0x5d81, 0x6467, 0x94a0, 0x5121, 0xc11a, 0xbe07, 0x0, 0x1);
        gbc.writeMem(0x5d81, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x6467);
        EXPECT(gbc.pc(), 0x5d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0139
        gbc.setState(0x2a5e, 0x1cee, 0xac30, 0x1ed1, 0xf2ed, 0xee5e, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1cee);
        EXPECT(gbc.pc(), 0x2a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 013A
        gbc.setState(0x40f, 0x3c22, 0xa850, 0x3d6, 0xd5b7, 0x86b1, 0x0, 0x1);
        gbc.writeMem(0x40f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3c22);
        EXPECT(gbc.pc(), 0x411);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 013B
        gbc.setState(0x983b, 0xdddc, 0xecd0, 0x7aca, 0x7dbb, 0x7ec8, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdddc);
        EXPECT(gbc.pc(), 0x983d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x983b), 0xcb);
        EXPECT(gbc.readMem(0x983c), 0xb9);
        // CB B9 013D
        gbc.setState(0x9e6, 0xef36, 0xcde0, 0x242a, 0x7d9, 0x4531, 0x0, 0x1);
        gbc.writeMem(0x9e6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xef36);
        EXPECT(gbc.pc(), 0x9e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 013E
        gbc.setState(0x9387, 0x2475, 0x9870, 0x3ad7, 0xde7e, 0xcd03, 0x1, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2475);
        EXPECT(gbc.pc(), 0x9389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9387), 0xcb);
        EXPECT(gbc.readMem(0x9388), 0xb9);
        // CB B9 013F
        gbc.setState(0x676d, 0x4f42, 0xba50, 0x506b, 0x2929, 0x52aa, 0x1, 0x0);
        gbc.writeMem(0x676d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4f42);
        EXPECT(gbc.pc(), 0x676f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0140
        gbc.setState(0x29fe, 0x8937, 0x1430, 0xc871, 0x749b, 0xa6ee, 0x0, 0x1);
        gbc.writeMem(0x29fe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8937);
        EXPECT(gbc.pc(), 0x2a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0141
        gbc.setState(0xcee0, 0xec0f, 0x5660, 0xcf79, 0xbd3a, 0xb476, 0x1, 0x1);
        gbc.writeMem(0xcee0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xec0f);
        EXPECT(gbc.pc(), 0xcee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee0), 0xcb);
        EXPECT(gbc.readMem(0xcee1), 0xb9);
        // CB B9 0142
        gbc.setState(0x968c, 0xdf55, 0x7e70, 0x438b, 0x16c3, 0xca0d, 0x0, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdf55);
        EXPECT(gbc.pc(), 0x968e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x968c), 0xcb);
        EXPECT(gbc.readMem(0x968d), 0xb9);
        // CB B9 0143
        gbc.setState(0xe064, 0x4266, 0xfbb0, 0x8807, 0xab09, 0x787f, 0x0, 0x1);
        gbc.writeMem(0xe064, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4266);
        EXPECT(gbc.pc(), 0xe066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe064), 0xcb);
        EXPECT(gbc.readMem(0xe065), 0xb9);
        // CB B9 0144
        gbc.setState(0x5c08, 0x1e9b, 0x2760, 0x8aa8, 0x60aa, 0x69af, 0x1, 0x0);
        gbc.writeMem(0x5c08, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x1e9b);
        EXPECT(gbc.pc(), 0x5c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0145
        gbc.setState(0x88c, 0x1c4c, 0xf90, 0xf17b, 0xeec9, 0x2036, 0x0, 0x0);
        gbc.writeMem(0x88c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1c4c);
        EXPECT(gbc.pc(), 0x88e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0146
        gbc.setState(0xae0b, 0xa85e, 0x87e0, 0x24cf, 0x3b5e, 0x6025, 0x1, 0x1);
        gbc.writeMem(0xae0b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa85e);
        EXPECT(gbc.pc(), 0xae0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0b), 0xcb);
        EXPECT(gbc.readMem(0xae0c), 0xb9);
        // CB B9 0147
        gbc.setState(0x7b16, 0x8212, 0xd3e0, 0x2db9, 0x979c, 0x6a03, 0x0, 0x0);
        gbc.writeMem(0x7b16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8212);
        EXPECT(gbc.pc(), 0x7b18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0148
        gbc.setState(0x3c88, 0x3a4c, 0x9470, 0x1c08, 0x629d, 0x8760, 0x0, 0x0);
        gbc.writeMem(0x3c88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3a4c);
        EXPECT(gbc.pc(), 0x3c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0149
        gbc.setState(0xe5c7, 0x11f4, 0xe440, 0xf281, 0xa72b, 0xba6b, 0x1, 0x1);
        gbc.writeMem(0xe5c7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x11f4);
        EXPECT(gbc.pc(), 0xe5c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c7), 0xcb);
        EXPECT(gbc.readMem(0xe5c8), 0xb9);
        // CB B9 014A
        gbc.setState(0x555c, 0x742e, 0xf7f0, 0x24dc, 0xb79f, 0x84cb, 0x0, 0x0);
        gbc.writeMem(0x555c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x742e);
        EXPECT(gbc.pc(), 0x555e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 014B
        gbc.setState(0xbb6c, 0x9ef5, 0xf480, 0xc787, 0x1d52, 0xf686, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9ef5);
        EXPECT(gbc.pc(), 0xbb6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6c), 0xcb);
        EXPECT(gbc.readMem(0xbb6d), 0xb9);
        // CB B9 014C
        gbc.setState(0xdaa3, 0xc7ed, 0x2680, 0xa2f5, 0xc974, 0xacb4, 0x1, 0x0);
        gbc.writeMem(0xdaa3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc7ed);
        EXPECT(gbc.pc(), 0xdaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa3), 0xcb);
        EXPECT(gbc.readMem(0xdaa4), 0xb9);
        // CB B9 014D
        gbc.setState(0x1cdd, 0x531d, 0xc5d0, 0xd26d, 0xf7fe, 0xc018, 0x0, 0x1);
        gbc.writeMem(0x1cdd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x531d);
        EXPECT(gbc.pc(), 0x1cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 014E
        gbc.setState(0x94c2, 0x4730, 0xb3d0, 0x3a9f, 0xc5fe, 0xa049, 0x1, 0x0);
        gbc.writeMem(0x94c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4730);
        EXPECT(gbc.pc(), 0x94c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c2), 0xcb);
        EXPECT(gbc.readMem(0x94c3), 0xb9);
        // CB B9 014F
        gbc.setState(0x9351, 0x2bad, 0x6500, 0x8413, 0xf8ff, 0x4fc7, 0x1, 0x1);
        gbc.writeMem(0x9351, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2bad);
        EXPECT(gbc.pc(), 0x9353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9351), 0xcb);
        EXPECT(gbc.readMem(0x9352), 0xb9);
        // CB B9 0150
        gbc.setState(0x1025, 0xe65c, 0xdb30, 0x4604, 0xcdfe, 0x8543, 0x1, 0x0);
        gbc.writeMem(0x1025, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe65c);
        EXPECT(gbc.pc(), 0x1027);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0151
        gbc.setState(0xc4bf, 0xb1f6, 0x2730, 0x6c9f, 0xd300, 0x75a6, 0x0, 0x1);
        gbc.writeMem(0xc4bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb1f6);
        EXPECT(gbc.pc(), 0xc4c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bf), 0xcb);
        EXPECT(gbc.readMem(0xc4c0), 0xb9);
        // CB B9 0152
        gbc.setState(0x4455, 0xda5f, 0x5d70, 0xc9fd, 0x30cc, 0xd61d, 0x1, 0x0);
        gbc.writeMem(0x4455, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xda5f);
        EXPECT(gbc.pc(), 0x4457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0154
        gbc.setState(0x29c2, 0xdcae, 0xa900, 0x9a46, 0xa65b, 0xdf8e, 0x1, 0x1);
        gbc.writeMem(0x29c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdcae);
        EXPECT(gbc.pc(), 0x29c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0155
        gbc.setState(0x6a47, 0x863a, 0xbaa0, 0x8632, 0x3713, 0x670, 0x1, 0x0);
        gbc.writeMem(0x6a47, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x863a);
        EXPECT(gbc.pc(), 0x6a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0156
        gbc.setState(0x2c88, 0xb883, 0x380, 0xf73e, 0x89b2, 0x761f, 0x1, 0x0);
        gbc.writeMem(0x2c88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb883);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0157
        gbc.setState(0xc5d1, 0x11ee, 0xab50, 0x18d8, 0x3043, 0x4f8d, 0x0, 0x0);
        gbc.writeMem(0xc5d1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x11ee);
        EXPECT(gbc.pc(), 0xc5d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d1), 0xcb);
        EXPECT(gbc.readMem(0xc5d2), 0xb9);
        // CB B9 0159
        gbc.setState(0xadae, 0x359e, 0x8660, 0x4913, 0xe6c6, 0x9834, 0x1, 0x1);
        gbc.writeMem(0xadae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x359e);
        EXPECT(gbc.pc(), 0xadb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadae), 0xcb);
        EXPECT(gbc.readMem(0xadaf), 0xb9);
        // CB B9 015A
        gbc.setState(0xa061, 0xba31, 0xad50, 0xc93d, 0x52b5, 0xe9a2, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xba31);
        EXPECT(gbc.pc(), 0xa063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa061), 0xcb);
        EXPECT(gbc.readMem(0xa062), 0xb9);
        // CB B9 015B
        gbc.setState(0x835c, 0xb8c4, 0x5ef0, 0xc163, 0x6a9f, 0xe5fc, 0x0, 0x1);
        gbc.writeMem(0x835c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb8c4);
        EXPECT(gbc.pc(), 0x835e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x835c), 0xcb);
        EXPECT(gbc.readMem(0x835d), 0xb9);
        // CB B9 015C
        gbc.setState(0x7003, 0xe619, 0x65e0, 0xad34, 0xc546, 0xa038, 0x0, 0x0);
        gbc.writeMem(0x7003, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe619);
        EXPECT(gbc.pc(), 0x7005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 015D
        gbc.setState(0xb130, 0x5502, 0x9e00, 0xb7e8, 0x1c7a, 0x6b3f, 0x1, 0x0);
        gbc.writeMem(0xb130, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5502);
        EXPECT(gbc.pc(), 0xb132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb130), 0xcb);
        EXPECT(gbc.readMem(0xb131), 0xb9);
        // CB B9 015E
        gbc.setState(0x2beb, 0xc09a, 0x5210, 0xac52, 0x5a1d, 0x5ed9, 0x1, 0x1);
        gbc.writeMem(0x2beb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc09a);
        EXPECT(gbc.pc(), 0x2bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 015F
        gbc.setState(0x55fc, 0x9adf, 0xb270, 0x2831, 0xc2ab, 0xd8cb, 0x0, 0x1);
        gbc.writeMem(0x55fc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9adf);
        EXPECT(gbc.pc(), 0x55fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0160
        gbc.setState(0x1634, 0x836f, 0x1b30, 0x4da8, 0x993a, 0x9476, 0x0, 0x0);
        gbc.writeMem(0x1634, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x836f);
        EXPECT(gbc.pc(), 0x1636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0161
        gbc.setState(0x113d, 0xeb7d, 0x3370, 0xb971, 0xc802, 0x2742, 0x1, 0x1);
        gbc.writeMem(0x113d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xeb7d);
        EXPECT(gbc.pc(), 0x113f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0162
        gbc.setState(0x9f5b, 0x490c, 0x8fa0, 0xfe38, 0xb445, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0x9f5b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x490c);
        EXPECT(gbc.pc(), 0x9f5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5b), 0xcb);
        EXPECT(gbc.readMem(0x9f5c), 0xb9);
        // CB B9 0163
        gbc.setState(0xc98, 0x30ef, 0xe660, 0x62bd, 0x27fe, 0x279d, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x30ef);
        EXPECT(gbc.pc(), 0xc9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0164
        gbc.setState(0x5077, 0xc327, 0x2290, 0x2c19, 0x1b08, 0xc7c5, 0x1, 0x1);
        gbc.writeMem(0x5077, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc327);
        EXPECT(gbc.pc(), 0x5079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0165
        gbc.setState(0x973b, 0xac8, 0xbf20, 0xdd3d, 0xe03a, 0x6b6d, 0x1, 0x0);
        gbc.writeMem(0x973b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xac8);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x973b), 0xcb);
        EXPECT(gbc.readMem(0x973c), 0xb9);
        // CB B9 0166
        gbc.setState(0x77ec, 0x1d9, 0xbe40, 0x651b, 0x47b5, 0xe091, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1d9);
        EXPECT(gbc.pc(), 0x77ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0167
        gbc.setState(0x9962, 0x6e73, 0x8b20, 0xbdcc, 0x8a6a, 0x8e1, 0x1, 0x1);
        gbc.writeMem(0x9962, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6e73);
        EXPECT(gbc.pc(), 0x9964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9962), 0xcb);
        EXPECT(gbc.readMem(0x9963), 0xb9);
        // CB B9 0168
        gbc.setState(0x7c28, 0xebdb, 0x59b0, 0xe166, 0xe068, 0x6cd6, 0x1, 0x1);
        gbc.writeMem(0x7c28, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xebdb);
        EXPECT(gbc.pc(), 0x7c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 016B
        gbc.setState(0x3677, 0x1f90, 0xc30, 0xf55e, 0x3bfb, 0x37b1, 0x0, 0x0);
        gbc.writeMem(0x3677, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1f90);
        EXPECT(gbc.pc(), 0x3679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 016C
        gbc.setState(0xbb5c, 0x9533, 0x6790, 0x4e87, 0x5a62, 0xb170, 0x1, 0x1);
        gbc.writeMem(0xbb5c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9533);
        EXPECT(gbc.pc(), 0xbb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5c), 0xcb);
        EXPECT(gbc.readMem(0xbb5d), 0xb9);
        // CB B9 016D
        gbc.setState(0x3d18, 0x53ea, 0x6310, 0x413a, 0xc132, 0x1475, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x53ea);
        EXPECT(gbc.pc(), 0x3d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0170
        gbc.setState(0xb827, 0xb58a, 0x89a0, 0x4db1, 0xff84, 0x5b6, 0x1, 0x1);
        gbc.writeMem(0xb827, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb58a);
        EXPECT(gbc.pc(), 0xb829);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb827), 0xcb);
        EXPECT(gbc.readMem(0xb828), 0xb9);
        // CB B9 0171
        gbc.setState(0xd7aa, 0x6f5b, 0xd190, 0xb81f, 0xbbe2, 0xe53b, 0x1, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6f5b);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7aa), 0xcb);
        EXPECT(gbc.readMem(0xd7ab), 0xb9);
        // CB B9 0172
        gbc.setState(0xc41a, 0xdd1f, 0xf140, 0xc14f, 0xadea, 0x4c0c, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdd1f);
        EXPECT(gbc.pc(), 0xc41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc41a), 0xcb);
        EXPECT(gbc.readMem(0xc41b), 0xb9);
        // CB B9 0173
        gbc.setState(0x78b2, 0xde9e, 0x48e0, 0x71cb, 0xe14b, 0xbadb, 0x0, 0x0);
        gbc.writeMem(0x78b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xde9e);
        EXPECT(gbc.pc(), 0x78b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0174
        gbc.setState(0xa2e3, 0xdac, 0xedd0, 0x73f1, 0xcd8f, 0xfe50, 0x1, 0x0);
        gbc.writeMem(0xa2e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdac);
        EXPECT(gbc.pc(), 0xa2e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2e3), 0xcb);
        EXPECT(gbc.readMem(0xa2e4), 0xb9);
        // CB B9 0175
        gbc.setState(0xbc72, 0x7fc7, 0x9860, 0x98a1, 0x8a53, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0xbc72, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7fc7);
        EXPECT(gbc.pc(), 0xbc74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc72), 0xcb);
        EXPECT(gbc.readMem(0xbc73), 0xb9);
        // CB B9 0176
        gbc.setState(0x4645, 0x6b10, 0xf50, 0x743f, 0x1ed5, 0x2ac, 0x1, 0x0);
        gbc.writeMem(0x4645, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6b10);
        EXPECT(gbc.pc(), 0x4647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0177
        gbc.setState(0xed94, 0xd7b7, 0xe8e0, 0xd51b, 0x76bc, 0xc6ea, 0x0, 0x0);
        gbc.writeMem(0xed94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd7b7);
        EXPECT(gbc.pc(), 0xed96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed94), 0xcb);
        EXPECT(gbc.readMem(0xed95), 0xb9);
        // CB B9 0178
        gbc.setState(0x8eae, 0x16b0, 0xd060, 0x6050, 0xe925, 0xa8d5, 0x1, 0x0);
        gbc.writeMem(0x8eae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x16b0);
        EXPECT(gbc.pc(), 0x8eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eae), 0xcb);
        EXPECT(gbc.readMem(0x8eaf), 0xb9);
        // CB B9 0179
        gbc.setState(0x6666, 0xb9b5, 0xf110, 0xf7da, 0xf80a, 0xa29c, 0x0, 0x0);
        gbc.writeMem(0x6666, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb9b5);
        EXPECT(gbc.pc(), 0x6668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 017A
        gbc.setState(0x30f5, 0xada5, 0x6a90, 0xd797, 0xf306, 0xb0f1, 0x1, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xada5);
        EXPECT(gbc.pc(), 0x30f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 017B
        gbc.setState(0x92ab, 0x418, 0x6260, 0x2acd, 0xf9ed, 0x5a9e, 0x1, 0x0);
        gbc.writeMem(0x92ab, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x418);
        EXPECT(gbc.pc(), 0x92ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92ab), 0xcb);
        EXPECT(gbc.readMem(0x92ac), 0xb9);
        // CB B9 017C
        gbc.setState(0xa16b, 0xc736, 0xeb00, 0xdf99, 0x29b1, 0xaec, 0x1, 0x0);
        gbc.writeMem(0xa16b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc736);
        EXPECT(gbc.pc(), 0xa16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa16b), 0xcb);
        EXPECT(gbc.readMem(0xa16c), 0xb9);
        // CB B9 017D
        gbc.setState(0x9f25, 0xd85a, 0x7f60, 0xbe0e, 0xa2e8, 0x99e7, 0x1, 0x0);
        gbc.writeMem(0x9f25, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd85a);
        EXPECT(gbc.pc(), 0x9f27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f25), 0xcb);
        EXPECT(gbc.readMem(0x9f26), 0xb9);
        // CB B9 017E
        gbc.setState(0x930a, 0x8a6c, 0xc1d0, 0x5f97, 0x3a24, 0xe9c, 0x0, 0x1);
        gbc.writeMem(0x930a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8a6c);
        EXPECT(gbc.pc(), 0x930c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930a), 0xcb);
        EXPECT(gbc.readMem(0x930b), 0xb9);
        // CB B9 017F
        gbc.setState(0x6a5e, 0xf3b6, 0x25b0, 0xc141, 0xf154, 0xc7da, 0x0, 0x1);
        gbc.writeMem(0x6a5e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf3b6);
        EXPECT(gbc.pc(), 0x6a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0180
        gbc.setState(0xbde3, 0x815e, 0xaa0, 0x3e0b, 0xd5bd, 0xfb3f, 0x0, 0x1);
        gbc.writeMem(0xbde3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x815e);
        EXPECT(gbc.pc(), 0xbde5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde3), 0xcb);
        EXPECT(gbc.readMem(0xbde4), 0xb9);
        // CB B9 0181
        gbc.setState(0x4d9d, 0xf9f3, 0xd370, 0x5155, 0x3d7f, 0x32c6, 0x1, 0x1);
        gbc.writeMem(0x4d9d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf9f3);
        EXPECT(gbc.pc(), 0x4d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0182
        gbc.setState(0xb764, 0xbe1d, 0xb1b0, 0xb0cf, 0xd734, 0xa23d, 0x1, 0x1);
        gbc.writeMem(0xb764, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbe1d);
        EXPECT(gbc.pc(), 0xb766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb764), 0xcb);
        EXPECT(gbc.readMem(0xb765), 0xb9);
        // CB B9 0183
        gbc.setState(0xc5fc, 0x396c, 0x7660, 0xff5e, 0x55a4, 0x8979, 0x0, 0x0);
        gbc.writeMem(0xc5fc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x396c);
        EXPECT(gbc.pc(), 0xc5fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5fc), 0xcb);
        EXPECT(gbc.readMem(0xc5fd), 0xb9);
        // CB B9 0184
        gbc.setState(0x62b7, 0x257d, 0x87d0, 0xcb58, 0xe89f, 0xad52, 0x1, 0x1);
        gbc.writeMem(0x62b7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x257d);
        EXPECT(gbc.pc(), 0x62b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0185
        gbc.setState(0xc662, 0x748, 0xb7b0, 0xf9ba, 0x402f, 0x7776, 0x0, 0x0);
        gbc.writeMem(0xc662, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x748);
        EXPECT(gbc.pc(), 0xc664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc662), 0xcb);
        EXPECT(gbc.readMem(0xc663), 0xb9);
        // CB B9 0186
        gbc.setState(0x1c85, 0xf95b, 0x270, 0x3409, 0x8294, 0x9982, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf95b);
        EXPECT(gbc.pc(), 0x1c87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0187
        gbc.setState(0x1622, 0x94da, 0xf770, 0x6d9b, 0xb945, 0xfc8b, 0x1, 0x1);
        gbc.writeMem(0x1622, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x94da);
        EXPECT(gbc.pc(), 0x1624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0188
        gbc.setState(0x1658, 0x9438, 0x4ff0, 0x96b0, 0x7f6a, 0xc9f4, 0x1, 0x0);
        gbc.writeMem(0x1658, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9438);
        EXPECT(gbc.pc(), 0x165a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0189
        gbc.setState(0xb49b, 0x20f2, 0x89e0, 0x4da9, 0x7f7e, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0xb49b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x20f2);
        EXPECT(gbc.pc(), 0xb49d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49b), 0xcb);
        EXPECT(gbc.readMem(0xb49c), 0xb9);
        // CB B9 018A
        gbc.setState(0xc988, 0xd5c1, 0x55d0, 0xb33c, 0x42eb, 0x962f, 0x0, 0x1);
        gbc.writeMem(0xc988, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd5c1);
        EXPECT(gbc.pc(), 0xc98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc988), 0xcb);
        EXPECT(gbc.readMem(0xc989), 0xb9);
        // CB B9 018B
        gbc.setState(0x8ef4, 0x55fd, 0x2400, 0x18b3, 0x42cb, 0xc00d, 0x0, 0x0);
        gbc.writeMem(0x8ef4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x55fd);
        EXPECT(gbc.pc(), 0x8ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef4), 0xcb);
        EXPECT(gbc.readMem(0x8ef5), 0xb9);
        // CB B9 018C
        gbc.setState(0x7ffd, 0x8aee, 0x8fe0, 0xb5de, 0x159a, 0x6e4f, 0x1, 0x1);
        gbc.writeMem(0x7ffd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8aee);
        EXPECT(gbc.pc(), 0x7fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 018D
        gbc.setState(0x6d08, 0x224a, 0x2770, 0xdcf7, 0x1e50, 0xff23, 0x0, 0x1);
        gbc.writeMem(0x6d08, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x224a);
        EXPECT(gbc.pc(), 0x6d0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 018E
        gbc.setState(0xac0d, 0xc6eb, 0x70d0, 0x63cf, 0xb85a, 0xbaa1, 0x0, 0x1);
        gbc.writeMem(0xac0d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc6eb);
        EXPECT(gbc.pc(), 0xac0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0d), 0xcb);
        EXPECT(gbc.readMem(0xac0e), 0xb9);
        // CB B9 018F
        gbc.setState(0x7ce3, 0x5798, 0x6e60, 0xd235, 0x301c, 0x71e3, 0x1, 0x0);
        gbc.writeMem(0x7ce3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x5798);
        EXPECT(gbc.pc(), 0x7ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0190
        gbc.setState(0x69d0, 0xdec8, 0x97a0, 0xdee6, 0x396, 0xe64f, 0x0, 0x1);
        gbc.writeMem(0x69d0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdec8);
        EXPECT(gbc.pc(), 0x69d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0191
        gbc.setState(0x83ff, 0xefdc, 0xdbf0, 0x6088, 0x2889, 0x3ee3, 0x1, 0x0);
        gbc.writeMem(0x83ff, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xefdc);
        EXPECT(gbc.pc(), 0x8401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ff), 0xcb);
        EXPECT(gbc.readMem(0x8400), 0xb9);
        // CB B9 0192
        gbc.setState(0x1aef, 0xb447, 0x7d30, 0xb8fa, 0xee1d, 0xfd75, 0x1, 0x0);
        gbc.writeMem(0x1aef, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb447);
        EXPECT(gbc.pc(), 0x1af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0193
        gbc.setState(0x9d3d, 0x8678, 0x7ee0, 0xbfad, 0xf487, 0x883c, 0x1, 0x0);
        gbc.writeMem(0x9d3d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8678);
        EXPECT(gbc.pc(), 0x9d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3d), 0xcb);
        EXPECT(gbc.readMem(0x9d3e), 0xb9);
        // CB B9 0194
        gbc.setState(0xd471, 0x3482, 0x4f90, 0x9e3d, 0x4856, 0xaabf, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3482);
        EXPECT(gbc.pc(), 0xd473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd471), 0xcb);
        EXPECT(gbc.readMem(0xd472), 0xb9);
        // CB B9 0195
        gbc.setState(0xd310, 0xcde7, 0xc680, 0x8e74, 0xea91, 0xd068, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xcde7);
        EXPECT(gbc.pc(), 0xd312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd310), 0xcb);
        EXPECT(gbc.readMem(0xd311), 0xb9);
        // CB B9 0196
        gbc.setState(0x78bb, 0xa3ef, 0xebd0, 0xa27b, 0xd708, 0xcec0, 0x0, 0x0);
        gbc.writeMem(0x78bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa3ef);
        EXPECT(gbc.pc(), 0x78bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0197
        gbc.setState(0x4fec, 0xf117, 0x5500, 0x3ae6, 0xee2b, 0x7655, 0x0, 0x0);
        gbc.writeMem(0x4fec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf117);
        EXPECT(gbc.pc(), 0x4fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0198
        gbc.setState(0x4d00, 0xfde3, 0xbdd0, 0x353, 0x82ea, 0x11a8, 0x1, 0x1);
        gbc.writeMem(0x4d00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfde3);
        EXPECT(gbc.pc(), 0x4d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0199
        gbc.setState(0x71ae, 0xe510, 0x1a20, 0xa69c, 0xa4fa, 0x6e7c, 0x0, 0x0);
        gbc.writeMem(0x71ae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe510);
        EXPECT(gbc.pc(), 0x71b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 019A
        gbc.setState(0x63f6, 0xb3fe, 0x7b10, 0xb276, 0x20ed, 0xd4a, 0x1, 0x0);
        gbc.writeMem(0x63f6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb3fe);
        EXPECT(gbc.pc(), 0x63f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 019B
        gbc.setState(0x94c2, 0x4109, 0xdab0, 0xe8a0, 0xd1ae, 0xe58, 0x1, 0x1);
        gbc.writeMem(0x94c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4109);
        EXPECT(gbc.pc(), 0x94c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c2), 0xcb);
        EXPECT(gbc.readMem(0x94c3), 0xb9);
        // CB B9 019C
        gbc.setState(0xa3bb, 0x7a2d, 0x1b0, 0xa547, 0x8071, 0x26df, 0x0, 0x1);
        gbc.writeMem(0xa3bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7a2d);
        EXPECT(gbc.pc(), 0xa3bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bb), 0xcb);
        EXPECT(gbc.readMem(0xa3bc), 0xb9);
        // CB B9 019D
        gbc.setState(0x60e8, 0x938a, 0x30, 0x3397, 0xbf33, 0x263d, 0x1, 0x0);
        gbc.writeMem(0x60e8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x938a);
        EXPECT(gbc.pc(), 0x60ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 019E
        gbc.setState(0xd1bf, 0xffe7, 0x6330, 0x1fb8, 0x4897, 0x2a64, 0x1, 0x0);
        gbc.writeMem(0xd1bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xffe7);
        EXPECT(gbc.pc(), 0xd1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1bf), 0xcb);
        EXPECT(gbc.readMem(0xd1c0), 0xb9);
        // CB B9 019F
        gbc.setState(0xe39b, 0x1310, 0xbb50, 0xab83, 0x3ac9, 0x4db0, 0x1, 0x1);
        gbc.writeMem(0xe39b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1310);
        EXPECT(gbc.pc(), 0xe39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe39b), 0xcb);
        EXPECT(gbc.readMem(0xe39c), 0xb9);
        // CB B9 01A0
        gbc.setState(0x987, 0x2808, 0xb8f0, 0x1eb2, 0x6f05, 0x3827, 0x1, 0x0);
        gbc.writeMem(0x987, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2808);
        EXPECT(gbc.pc(), 0x989);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01A1
        gbc.setState(0xba6d, 0xfbcd, 0x7dd0, 0x7a7e, 0x88e, 0xf748, 0x0, 0x1);
        gbc.writeMem(0xba6d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfbcd);
        EXPECT(gbc.pc(), 0xba6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6d), 0xcb);
        EXPECT(gbc.readMem(0xba6e), 0xb9);
        // CB B9 01A2
        gbc.setState(0x3aca, 0xc6b8, 0x5b10, 0xcc5, 0x4612, 0xf472, 0x1, 0x0);
        gbc.writeMem(0x3aca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xc6b8);
        EXPECT(gbc.pc(), 0x3acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01A3
        gbc.setState(0x5666, 0xce36, 0x3290, 0x546f, 0x4c18, 0xac09, 0x1, 0x0);
        gbc.writeMem(0x5666, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xce36);
        EXPECT(gbc.pc(), 0x5668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01A4
        gbc.setState(0x629b, 0x95e7, 0x51d0, 0xc2db, 0xc2fe, 0xfdce, 0x0, 0x1);
        gbc.writeMem(0x629b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0x629d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01A5
        gbc.setState(0x5f28, 0x239d, 0x3d60, 0x8923, 0x66ed, 0xd400, 0x1, 0x0);
        gbc.writeMem(0x5f28, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x239d);
        EXPECT(gbc.pc(), 0x5f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01A7
        gbc.setState(0xc329, 0x5958, 0x11f0, 0x2488, 0x4b8d, 0x2730, 0x0, 0x1);
        gbc.writeMem(0xc329, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5958);
        EXPECT(gbc.pc(), 0xc32b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc329), 0xcb);
        EXPECT(gbc.readMem(0xc32a), 0xb9);
        // CB B9 01A8
        gbc.setState(0x786, 0x5599, 0xadb0, 0x1f4a, 0x6f2a, 0x556, 0x1, 0x1);
        gbc.writeMem(0x786, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x5599);
        EXPECT(gbc.pc(), 0x788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01A9
        gbc.setState(0xaf6d, 0xe0d0, 0xdbe0, 0x2e24, 0x3bbb, 0x9a28, 0x1, 0x1);
        gbc.writeMem(0xaf6d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe0d0);
        EXPECT(gbc.pc(), 0xaf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6d), 0xcb);
        EXPECT(gbc.readMem(0xaf6e), 0xb9);
        // CB B9 01AA
        gbc.setState(0xc78d, 0xd2ba, 0x8940, 0x9f8, 0x7cbe, 0xafa2, 0x0, 0x1);
        gbc.writeMem(0xc78d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd2ba);
        EXPECT(gbc.pc(), 0xc78f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78d), 0xcb);
        EXPECT(gbc.readMem(0xc78e), 0xb9);
        // CB B9 01AB
        gbc.setState(0x1ae0, 0xdb2a, 0x9ac0, 0xc4b1, 0x938d, 0xd00c, 0x0, 0x1);
        gbc.writeMem(0x1ae0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdb2a);
        EXPECT(gbc.pc(), 0x1ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01AC
        gbc.setState(0x5dd6, 0x3563, 0x92c0, 0x651b, 0xa946, 0xc9d5, 0x1, 0x1);
        gbc.writeMem(0x5dd6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3563);
        EXPECT(gbc.pc(), 0x5dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01AD
        gbc.setState(0xd6d3, 0xb8a7, 0x2d90, 0x20d2, 0xf341, 0xed97, 0x0, 0x1);
        gbc.writeMem(0xd6d3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb8a7);
        EXPECT(gbc.pc(), 0xd6d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d3), 0xcb);
        EXPECT(gbc.readMem(0xd6d4), 0xb9);
        // CB B9 01AE
        gbc.setState(0xb220, 0xf0a9, 0xc790, 0xa927, 0x8e68, 0xb34b, 0x0, 0x0);
        gbc.writeMem(0xb220, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf0a9);
        EXPECT(gbc.pc(), 0xb222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb220), 0xcb);
        EXPECT(gbc.readMem(0xb221), 0xb9);
        // CB B9 01AF
        gbc.setState(0x4b47, 0x6fdb, 0xb040, 0x8881, 0xbacb, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x4b47, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6fdb);
        EXPECT(gbc.pc(), 0x4b49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01B0
        gbc.setState(0xef7a, 0xcdf, 0xcdd0, 0x67b7, 0x485e, 0x7187, 0x0, 0x0);
        gbc.writeMem(0xef7a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcdf);
        EXPECT(gbc.pc(), 0xef7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7a), 0xcb);
        EXPECT(gbc.readMem(0xef7b), 0xb9);
        // CB B9 01B1
        gbc.setState(0xe57a, 0x6ca1, 0xc150, 0x8e19, 0x53cd, 0xf144, 0x1, 0x1);
        gbc.writeMem(0xe57a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6ca1);
        EXPECT(gbc.pc(), 0xe57c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57a), 0xcb);
        EXPECT(gbc.readMem(0xe57b), 0xb9);
        // CB B9 01B2
        gbc.setState(0x343d, 0xb66e, 0xa240, 0xf9e5, 0xb3e1, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x343d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb66e);
        EXPECT(gbc.pc(), 0x343f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01B3
        gbc.setState(0xebe, 0xd734, 0xdb50, 0x3246, 0xe261, 0xd24, 0x0, 0x0);
        gbc.writeMem(0xebe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd734);
        EXPECT(gbc.pc(), 0xec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01B4
        gbc.setState(0xd0cf, 0x968b, 0xd240, 0x24c6, 0xb7cd, 0xfba8, 0x1, 0x0);
        gbc.writeMem(0xd0cf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x968b);
        EXPECT(gbc.pc(), 0xd0d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cf), 0xcb);
        EXPECT(gbc.readMem(0xd0d0), 0xb9);
        // CB B9 01B5
        gbc.setState(0xa12e, 0x3aab, 0x7920, 0xa8d4, 0xe553, 0xca1f, 0x0, 0x0);
        gbc.writeMem(0xa12e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3aab);
        EXPECT(gbc.pc(), 0xa130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12e), 0xcb);
        EXPECT(gbc.readMem(0xa12f), 0xb9);
        // CB B9 01B6
        gbc.setState(0x2397, 0x2ccb, 0xa090, 0x46da, 0x836a, 0x5922, 0x0, 0x1);
        gbc.writeMem(0x2397, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2ccb);
        EXPECT(gbc.pc(), 0x2399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01B7
        gbc.setState(0x39c0, 0xeb4b, 0xdb40, 0xef21, 0x7c1b, 0x456e, 0x0, 0x1);
        gbc.writeMem(0x39c0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xeb4b);
        EXPECT(gbc.pc(), 0x39c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01B8
        gbc.setState(0x5f7a, 0xb045, 0x2820, 0x933c, 0xd8c7, 0xe194, 0x0, 0x0);
        gbc.writeMem(0x5f7a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb045);
        EXPECT(gbc.pc(), 0x5f7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01B9
        gbc.setState(0xb4e3, 0x58f7, 0xe190, 0xb565, 0xdff, 0x3e9d, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x58f7);
        EXPECT(gbc.pc(), 0xb4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e3), 0xcb);
        EXPECT(gbc.readMem(0xb4e4), 0xb9);
        // CB B9 01BA
        gbc.setState(0x26ed, 0xbb08, 0x9660, 0xfb06, 0x40f3, 0x61db, 0x1, 0x0);
        gbc.writeMem(0x26ed, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xbb08);
        EXPECT(gbc.pc(), 0x26ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01BB
        gbc.setState(0xa557, 0x75c9, 0x39e0, 0x50d0, 0x9818, 0xd60f, 0x0, 0x0);
        gbc.writeMem(0xa557, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x75c9);
        EXPECT(gbc.pc(), 0xa559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa557), 0xcb);
        EXPECT(gbc.readMem(0xa558), 0xb9);
        // CB B9 01BC
        gbc.setState(0xb3fe, 0x5bfd, 0x20d0, 0xd215, 0x8dea, 0x3e3d, 0x1, 0x0);
        gbc.writeMem(0xb3fe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5bfd);
        EXPECT(gbc.pc(), 0xb400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fe), 0xcb);
        EXPECT(gbc.readMem(0xb3ff), 0xb9);
        // CB B9 01BD
        gbc.setState(0xd9a4, 0x8466, 0x9c80, 0xf908, 0xb95f, 0x1c88, 0x1, 0x0);
        gbc.writeMem(0xd9a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8466);
        EXPECT(gbc.pc(), 0xd9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9a4), 0xcb);
        EXPECT(gbc.readMem(0xd9a5), 0xb9);
        // CB B9 01BE
        gbc.setState(0x2774, 0x8712, 0xc4e0, 0x987f, 0x7bbc, 0xa483, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8712);
        EXPECT(gbc.pc(), 0x2776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01BF
        gbc.setState(0x514c, 0xebfc, 0x6a30, 0x603, 0x4ed9, 0xb781, 0x0, 0x1);
        gbc.writeMem(0x514c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xebfc);
        EXPECT(gbc.pc(), 0x514e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01C0
        gbc.setState(0x143b, 0xd96, 0x7530, 0x6bc5, 0x7057, 0x5f68, 0x0, 0x1);
        gbc.writeMem(0x143b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd96);
        EXPECT(gbc.pc(), 0x143d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01C1
        gbc.setState(0x77a4, 0x7b46, 0x4440, 0x21ae, 0xa2e, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0x77a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7b46);
        EXPECT(gbc.pc(), 0x77a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01C2
        gbc.setState(0xb0e3, 0x7830, 0x1a90, 0x5cc5, 0xce54, 0x99e2, 0x0, 0x1);
        gbc.writeMem(0xb0e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7830);
        EXPECT(gbc.pc(), 0xb0e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0e3), 0xcb);
        EXPECT(gbc.readMem(0xb0e4), 0xb9);
        // CB B9 01C3
        gbc.setState(0x49ba, 0x4fa9, 0xbd80, 0x5372, 0xc61e, 0xbdde, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4fa9);
        EXPECT(gbc.pc(), 0x49bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01C4
        gbc.setState(0x146e, 0x6f2b, 0xbbd0, 0x53c4, 0xcbed, 0x37c, 0x1, 0x0);
        gbc.writeMem(0x146e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6f2b);
        EXPECT(gbc.pc(), 0x1470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01C5
        gbc.setState(0x3476, 0x4ed4, 0x6fa0, 0x3c2c, 0x7e8c, 0x6d9b, 0x1, 0x0);
        gbc.writeMem(0x3476, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4ed4);
        EXPECT(gbc.pc(), 0x3478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01C6
        gbc.setState(0xcf36, 0xafd0, 0x8fe0, 0xbb77, 0x66b3, 0x888f, 0x0, 0x0);
        gbc.writeMem(0xcf36, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xafd0);
        EXPECT(gbc.pc(), 0xcf38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf36), 0xcb);
        EXPECT(gbc.readMem(0xcf37), 0xb9);
        // CB B9 01C7
        gbc.setState(0x7cf0, 0x3bad, 0x7d60, 0x3ff4, 0xeeeb, 0x43a, 0x1, 0x1);
        gbc.writeMem(0x7cf0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3bad);
        EXPECT(gbc.pc(), 0x7cf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01C8
        gbc.setState(0x9408, 0xee50, 0x92b0, 0xdd86, 0x65dd, 0x12f5, 0x1, 0x1);
        gbc.writeMem(0x9408, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xee50);
        EXPECT(gbc.pc(), 0x940a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9408), 0xcb);
        EXPECT(gbc.readMem(0x9409), 0xb9);
        // CB B9 01C9
        gbc.setState(0x70d8, 0xc677, 0x8ba0, 0x5f7f, 0xbd94, 0x485f, 0x1, 0x1);
        gbc.writeMem(0x70d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc677);
        EXPECT(gbc.pc(), 0x70da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01CA
        gbc.setState(0xc174, 0x5c3e, 0xe0e0, 0xe9b7, 0xdbf3, 0xd402, 0x1, 0x1);
        gbc.writeMem(0xc174, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5c3e);
        EXPECT(gbc.pc(), 0xc176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc174), 0xcb);
        EXPECT(gbc.readMem(0xc175), 0xb9);
        // CB B9 01CB
        gbc.setState(0xcae0, 0x9260, 0x6550, 0xc7eb, 0x18a3, 0xc979, 0x1, 0x1);
        gbc.writeMem(0xcae0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x9260);
        EXPECT(gbc.pc(), 0xcae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae0), 0xcb);
        EXPECT(gbc.readMem(0xcae1), 0xb9);
        // CB B9 01CC
        gbc.setState(0xc8ec, 0xf2a3, 0x130, 0xd319, 0xefbe, 0x162d, 0x1, 0x1);
        gbc.writeMem(0xc8ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf2a3);
        EXPECT(gbc.pc(), 0xc8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ec), 0xcb);
        EXPECT(gbc.readMem(0xc8ed), 0xb9);
        // CB B9 01CD
        gbc.setState(0x8746, 0xa9ca, 0x6bc0, 0xe6b4, 0x6726, 0xd247, 0x1, 0x0);
        gbc.writeMem(0x8746, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa9ca);
        EXPECT(gbc.pc(), 0x8748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8746), 0xcb);
        EXPECT(gbc.readMem(0x8747), 0xb9);
        // CB B9 01CE
        gbc.setState(0x1f6c, 0x1c6a, 0x6e40, 0xa4e, 0x668e, 0xea3d, 0x0, 0x1);
        gbc.writeMem(0x1f6c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1c6a);
        EXPECT(gbc.pc(), 0x1f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01CF
        gbc.setState(0xc348, 0x63f6, 0x7190, 0xb06e, 0x1ec6, 0x7f3b, 0x0, 0x1);
        gbc.writeMem(0xc348, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x63f6);
        EXPECT(gbc.pc(), 0xc34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc348), 0xcb);
        EXPECT(gbc.readMem(0xc349), 0xb9);
        // CB B9 01D0
        gbc.setState(0x49cc, 0x9d20, 0x6d30, 0x9f0b, 0x6235, 0x49be, 0x0, 0x1);
        gbc.writeMem(0x49cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9d20);
        EXPECT(gbc.pc(), 0x49ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01D1
        gbc.setState(0xc8e6, 0x7bf0, 0xea90, 0xcfc6, 0x67b0, 0x73c3, 0x0, 0x0);
        gbc.writeMem(0xc8e6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7bf0);
        EXPECT(gbc.pc(), 0xc8e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8e6), 0xcb);
        EXPECT(gbc.readMem(0xc8e7), 0xb9);
        // CB B9 01D2
        gbc.setState(0x6672, 0x7fae, 0x42a0, 0x64f0, 0x71a, 0x52c5, 0x0, 0x0);
        gbc.writeMem(0x6672, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0x6674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01D3
        gbc.setState(0x4283, 0x1124, 0xd1a0, 0xc809, 0x6253, 0x8d89, 0x1, 0x0);
        gbc.writeMem(0x4283, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1124);
        EXPECT(gbc.pc(), 0x4285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01D4
        gbc.setState(0x1c0d, 0x91e8, 0xbdb0, 0xdb0d, 0x29aa, 0xf696, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x91e8);
        EXPECT(gbc.pc(), 0x1c0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01D5
        gbc.setState(0x4976, 0x9d4b, 0xbaf0, 0x2526, 0xe254, 0x5441, 0x0, 0x0);
        gbc.writeMem(0x4976, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9d4b);
        EXPECT(gbc.pc(), 0x4978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01D6
        gbc.setState(0xb903, 0xe832, 0x6d40, 0xe4b7, 0x7cb8, 0x9906, 0x1, 0x0);
        gbc.writeMem(0xb903, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe832);
        EXPECT(gbc.pc(), 0xb905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb903), 0xcb);
        EXPECT(gbc.readMem(0xb904), 0xb9);
        // CB B9 01D7
        gbc.setState(0xcdf3, 0x54d, 0x4cf0, 0x9d2e, 0x64f, 0x4dde, 0x0, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x54d);
        EXPECT(gbc.pc(), 0xcdf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf3), 0xcb);
        EXPECT(gbc.readMem(0xcdf4), 0xb9);
        // CB B9 01D8
        gbc.setState(0xceba, 0xc823, 0x1bf0, 0x8e8e, 0xefd3, 0x4f75, 0x0, 0x0);
        gbc.writeMem(0xceba, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc823);
        EXPECT(gbc.pc(), 0xcebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceba), 0xcb);
        EXPECT(gbc.readMem(0xcebb), 0xb9);
        // CB B9 01D9
        gbc.setState(0x5946, 0x698f, 0x2360, 0x9dea, 0xb461, 0xfa07, 0x1, 0x0);
        gbc.writeMem(0x5946, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x698f);
        EXPECT(gbc.pc(), 0x5948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01DB
        gbc.setState(0x5e58, 0xc909, 0x2c0, 0x2cbd, 0x1116, 0x4ebd, 0x1, 0x1);
        gbc.writeMem(0x5e58, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc909);
        EXPECT(gbc.pc(), 0x5e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01DC
        gbc.setState(0x3d8, 0xdcfa, 0x7b10, 0xa5a, 0x2e35, 0x9bc3, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdcfa);
        EXPECT(gbc.pc(), 0x3da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01DD
        gbc.setState(0xd72a, 0x2f8a, 0x1560, 0xb342, 0x91f4, 0x1e4a, 0x1, 0x0);
        gbc.writeMem(0xd72a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2f8a);
        EXPECT(gbc.pc(), 0xd72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd72a), 0xcb);
        EXPECT(gbc.readMem(0xd72b), 0xb9);
        // CB B9 01DE
        gbc.setState(0xb2b8, 0x4e95, 0x8540, 0xfe89, 0x30e9, 0xc1eb, 0x1, 0x1);
        gbc.writeMem(0xb2b8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4e95);
        EXPECT(gbc.pc(), 0xb2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b8), 0xcb);
        EXPECT(gbc.readMem(0xb2b9), 0xb9);
        // CB B9 01DF
        gbc.setState(0x4a5a, 0x75ae, 0x2ff0, 0x9d94, 0xb65d, 0x1ed4, 0x1, 0x1);
        gbc.writeMem(0x4a5a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x75ae);
        EXPECT(gbc.pc(), 0x4a5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01E0
        gbc.setState(0xbd88, 0xfa55, 0x600, 0xec6, 0x5d50, 0x1df2, 0x0, 0x1);
        gbc.writeMem(0xbd88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfa55);
        EXPECT(gbc.pc(), 0xbd8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd88), 0xcb);
        EXPECT(gbc.readMem(0xbd89), 0xb9);
        // CB B9 01E1
        gbc.setState(0xe986, 0x7b24, 0xa100, 0x70a1, 0xbace, 0xa08a, 0x0, 0x0);
        gbc.writeMem(0xe986, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7b24);
        EXPECT(gbc.pc(), 0xe988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe986), 0xcb);
        EXPECT(gbc.readMem(0xe987), 0xb9);
        // CB B9 01E2
        gbc.setState(0xe33d, 0xca2b, 0x1280, 0xbe43, 0x3b6c, 0x15cf, 0x1, 0x1);
        gbc.writeMem(0xe33d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xca2b);
        EXPECT(gbc.pc(), 0xe33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33d), 0xcb);
        EXPECT(gbc.readMem(0xe33e), 0xb9);
        // CB B9 01E3
        gbc.setState(0xe09e, 0xb7e5, 0xb000, 0xd11f, 0xa18e, 0xa914, 0x0, 0x1);
        gbc.writeMem(0xe09e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb7e5);
        EXPECT(gbc.pc(), 0xe0a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe09e), 0xcb);
        EXPECT(gbc.readMem(0xe09f), 0xb9);
        // CB B9 01E4
        gbc.setState(0x9515, 0x14b8, 0x6d10, 0x9877, 0xc0da, 0xe0e8, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x14b8);
        EXPECT(gbc.pc(), 0x9517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9515), 0xcb);
        EXPECT(gbc.readMem(0x9516), 0xb9);
        // CB B9 01E5
        gbc.setState(0x813d, 0xc0f8, 0x1640, 0xf778, 0xfcff, 0xe1df, 0x0, 0x0);
        gbc.writeMem(0x813d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc0f8);
        EXPECT(gbc.pc(), 0x813f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813d), 0xcb);
        EXPECT(gbc.readMem(0x813e), 0xb9);
        // CB B9 01E6
        gbc.setState(0xb49, 0x6ef3, 0x5330, 0x12b6, 0x4e89, 0x489c, 0x0, 0x0);
        gbc.writeMem(0xb49, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6ef3);
        EXPECT(gbc.pc(), 0xb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01E7
        gbc.setState(0x8b2e, 0x281b, 0xf280, 0xa956, 0xc037, 0x617f, 0x0, 0x0);
        gbc.writeMem(0x8b2e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x281b);
        EXPECT(gbc.pc(), 0x8b30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2e), 0xcb);
        EXPECT(gbc.readMem(0x8b2f), 0xb9);
        // CB B9 01E8
        gbc.setState(0xbf76, 0x3be5, 0xf740, 0xb38d, 0x1971, 0x43ea, 0x1, 0x1);
        gbc.writeMem(0xbf76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x3be5);
        EXPECT(gbc.pc(), 0xbf78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf76), 0xcb);
        EXPECT(gbc.readMem(0xbf77), 0xb9);
        // CB B9 01E9
        gbc.setState(0x191e, 0x3396, 0x89e0, 0xf77e, 0xfd37, 0x6f85, 0x0, 0x1);
        gbc.writeMem(0x191e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3396);
        EXPECT(gbc.pc(), 0x1920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01EA
        gbc.setState(0x7f23, 0x91b9, 0x5620, 0x4288, 0xeff, 0x837b, 0x1, 0x0);
        gbc.writeMem(0x7f23, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x91b9);
        EXPECT(gbc.pc(), 0x7f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01EB
        gbc.setState(0xbe51, 0xbb77, 0x3f70, 0x4ea7, 0x97ed, 0x2058, 0x0, 0x0);
        gbc.writeMem(0xbe51, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbb77);
        EXPECT(gbc.pc(), 0xbe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe51), 0xcb);
        EXPECT(gbc.readMem(0xbe52), 0xb9);
        // CB B9 01EC
        gbc.setState(0x6ce, 0xf908, 0xec60, 0xb8c5, 0xde26, 0x1009, 0x0, 0x0);
        gbc.writeMem(0x6ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf908);
        EXPECT(gbc.pc(), 0x6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01ED
        gbc.setState(0x1c2f, 0x5091, 0x9110, 0x46cc, 0xfc3b, 0xb518, 0x1, 0x1);
        gbc.writeMem(0x1c2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5091);
        EXPECT(gbc.pc(), 0x1c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01EE
        gbc.setState(0x1bac, 0x3301, 0xb060, 0xb9cf, 0xe7ff, 0xd7d4, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3301);
        EXPECT(gbc.pc(), 0x1bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01EF
        gbc.setState(0x4f13, 0xcfb4, 0x6000, 0xfddf, 0xdd02, 0xbfed, 0x1, 0x1);
        gbc.writeMem(0x4f13, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xcfb4);
        EXPECT(gbc.pc(), 0x4f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01F0
        gbc.setState(0xdfea, 0x4051, 0x1dd0, 0xdc9a, 0xfbc3, 0xfbf2, 0x1, 0x1);
        gbc.writeMem(0xdfea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4051);
        EXPECT(gbc.pc(), 0xdfec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfea), 0xcb);
        EXPECT(gbc.readMem(0xdfeb), 0xb9);
        // CB B9 01F1
        gbc.setState(0x8e70, 0x2d47, 0x9de0, 0xaa63, 0xf68f, 0xb438, 0x1, 0x1);
        gbc.writeMem(0x8e70, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2d47);
        EXPECT(gbc.pc(), 0x8e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e70), 0xcb);
        EXPECT(gbc.readMem(0x8e71), 0xb9);
        // CB B9 01F2
        gbc.setState(0xaed3, 0x14c9, 0xf9a0, 0x696a, 0xa36a, 0x2ca7, 0x0, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x14c9);
        EXPECT(gbc.pc(), 0xaed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaed3), 0xcb);
        EXPECT(gbc.readMem(0xaed4), 0xb9);
        // CB B9 01F3
        gbc.setState(0x8958, 0x37b8, 0x5990, 0xc468, 0x4ec9, 0xb28, 0x0, 0x1);
        gbc.writeMem(0x8958, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x37b8);
        EXPECT(gbc.pc(), 0x895a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8958), 0xcb);
        EXPECT(gbc.readMem(0x8959), 0xb9);
        // CB B9 01F4
        gbc.setState(0x51ac, 0x65b5, 0xc110, 0x6661, 0x96da, 0x1d9a, 0x0, 0x0);
        gbc.writeMem(0x51ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x65b5);
        EXPECT(gbc.pc(), 0x51ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01F5
        gbc.setState(0xd416, 0x8254, 0x10f0, 0x899c, 0xc442, 0x45d6, 0x0, 0x0);
        gbc.writeMem(0xd416, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8254);
        EXPECT(gbc.pc(), 0xd418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd416), 0xcb);
        EXPECT(gbc.readMem(0xd417), 0xb9);
        // CB B9 01F7
        gbc.setState(0x663c, 0xfad7, 0x4660, 0x10ff, 0x2ebd, 0x9554, 0x1, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xfad7);
        EXPECT(gbc.pc(), 0x663e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01F8
        gbc.setState(0x5f70, 0x2a9f, 0xa360, 0x1774, 0xbb6b, 0x7329, 0x0, 0x0);
        gbc.writeMem(0x5f70, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2a9f);
        EXPECT(gbc.pc(), 0x5f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01F9
        gbc.setState(0x9aa1, 0x3ee7, 0xfa00, 0xed2, 0xae0f, 0x46d1, 0x0, 0x0);
        gbc.writeMem(0x9aa1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3ee7);
        EXPECT(gbc.pc(), 0x9aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa1), 0xcb);
        EXPECT(gbc.readMem(0x9aa2), 0xb9);
        // CB B9 01FA
        gbc.setState(0x4df2, 0xd1c9, 0x16a0, 0xf0d1, 0x3a85, 0xbac1, 0x1, 0x0);
        gbc.writeMem(0x4df2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd1c9);
        EXPECT(gbc.pc(), 0x4df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01FB
        gbc.setState(0x2750, 0xcf58, 0x8c60, 0x65c1, 0x5175, 0x3cd5, 0x1, 0x0);
        gbc.writeMem(0x2750, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xcf58);
        EXPECT(gbc.pc(), 0x2752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 01FC
        gbc.setState(0xb255, 0x9cca, 0x6050, 0x7419, 0x1991, 0x7549, 0x1, 0x1);
        gbc.writeMem(0xb255, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9cca);
        EXPECT(gbc.pc(), 0xb257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb255), 0xcb);
        EXPECT(gbc.readMem(0xb256), 0xb9);
        // CB B9 01FD
        gbc.setState(0x3afc, 0xf7d0, 0x35f0, 0xbc61, 0xba6c, 0xbab1, 0x0, 0x1);
        gbc.writeMem(0x3afc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf7d0);
        EXPECT(gbc.pc(), 0x3afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 01FE
        gbc.setState(0x9627, 0x2b14, 0x5000, 0x5c0d, 0xc86b, 0x677f, 0x1, 0x0);
        gbc.writeMem(0x9627, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2b14);
        EXPECT(gbc.pc(), 0x9629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9627), 0xcb);
        EXPECT(gbc.readMem(0x9628), 0xb9);
        // CB B9 01FF
        gbc.setState(0xb9b4, 0xffc9, 0x7760, 0x2472, 0xe73d, 0x82eb, 0x1, 0x0);
        gbc.writeMem(0xb9b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xffc9);
        EXPECT(gbc.pc(), 0xb9b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b4), 0xcb);
        EXPECT(gbc.readMem(0xb9b5), 0xb9);
        // CB B9 0200
        gbc.setState(0x7da0, 0xc51e, 0xf7c0, 0x1859, 0x491b, 0x6726, 0x1, 0x0);
        gbc.writeMem(0x7da0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc51e);
        EXPECT(gbc.pc(), 0x7da2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0201
        gbc.setState(0xe8a3, 0xa77, 0x6ae0, 0x74b0, 0x3d6c, 0x5936, 0x1, 0x1);
        gbc.writeMem(0xe8a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa77);
        EXPECT(gbc.pc(), 0xe8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a3), 0xcb);
        EXPECT(gbc.readMem(0xe8a4), 0xb9);
        // CB B9 0202
        gbc.setState(0xd167, 0x5849, 0xdb40, 0xf5ef, 0x6bb4, 0x5472, 0x1, 0x0);
        gbc.writeMem(0xd167, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5849);
        EXPECT(gbc.pc(), 0xd169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd167), 0xcb);
        EXPECT(gbc.readMem(0xd168), 0xb9);
        // CB B9 0203
        gbc.setState(0x1eef, 0x83ab, 0x20f0, 0xa961, 0xf6d7, 0xf4ab, 0x1, 0x1);
        gbc.writeMem(0x1eef, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x83ab);
        EXPECT(gbc.pc(), 0x1ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0204
        gbc.setState(0x2a39, 0x154, 0xc6f0, 0x6a45, 0x7ffc, 0xf83d, 0x0, 0x0);
        gbc.writeMem(0x2a39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x154);
        EXPECT(gbc.pc(), 0x2a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0205
        gbc.setState(0x6621, 0x2163, 0xe6e0, 0x71f5, 0xb8d3, 0x720a, 0x1, 0x0);
        gbc.writeMem(0x6621, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2163);
        EXPECT(gbc.pc(), 0x6623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0206
        gbc.setState(0x4da8, 0x4322, 0x2f50, 0x8443, 0x4a77, 0x3a0b, 0x0, 0x1);
        gbc.writeMem(0x4da8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4322);
        EXPECT(gbc.pc(), 0x4daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0207
        gbc.setState(0x4aed, 0xb3df, 0x5d50, 0xa04, 0xc2ad, 0x72e2, 0x1, 0x0);
        gbc.writeMem(0x4aed, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xb3df);
        EXPECT(gbc.pc(), 0x4aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0208
        gbc.setState(0xd1b0, 0xcbc2, 0xeb90, 0x4dcb, 0xddd, 0x2960, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcbc2);
        EXPECT(gbc.pc(), 0xd1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b0), 0xcb);
        EXPECT(gbc.readMem(0xd1b1), 0xb9);
        // CB B9 0209
        gbc.setState(0x3fc0, 0x8937, 0xfee0, 0x54ed, 0xb9e9, 0xb69b, 0x0, 0x0);
        gbc.writeMem(0x3fc0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8937);
        EXPECT(gbc.pc(), 0x3fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 020A
        gbc.setState(0xc51a, 0x27b2, 0x30e0, 0xccb6, 0xf3c, 0x2160, 0x1, 0x1);
        gbc.writeMem(0xc51a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x27b2);
        EXPECT(gbc.pc(), 0xc51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51a), 0xcb);
        EXPECT(gbc.readMem(0xc51b), 0xb9);
        // CB B9 020C
        gbc.setState(0x43f3, 0x1202, 0x7540, 0x4846, 0x7466, 0x764, 0x1, 0x0);
        gbc.writeMem(0x43f3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x1202);
        EXPECT(gbc.pc(), 0x43f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 020D
        gbc.setState(0x6439, 0x2e49, 0xb520, 0x5f86, 0x9fee, 0x47b9, 0x0, 0x1);
        gbc.writeMem(0x6439, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2e49);
        EXPECT(gbc.pc(), 0x643b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 020E
        gbc.setState(0x72bf, 0x406c, 0xf7f0, 0xc999, 0xcc96, 0x7f, 0x0, 0x1);
        gbc.writeMem(0x72bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x406c);
        EXPECT(gbc.pc(), 0x72c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 020F
        gbc.setState(0x5e3a, 0xe066, 0xb4d0, 0x1635, 0x3eed, 0xdbb, 0x1, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe066);
        EXPECT(gbc.pc(), 0x5e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0210
        gbc.setState(0x8353, 0x3fcd, 0x65a0, 0x2ee9, 0x7e11, 0x1f7, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3fcd);
        EXPECT(gbc.pc(), 0x8355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8353), 0xcb);
        EXPECT(gbc.readMem(0x8354), 0xb9);
        // CB B9 0211
        gbc.setState(0xe2fb, 0xb506, 0xac90, 0xe5ad, 0x49a0, 0xcc38, 0x1, 0x0);
        gbc.writeMem(0xe2fb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb506);
        EXPECT(gbc.pc(), 0xe2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2fb), 0xcb);
        EXPECT(gbc.readMem(0xe2fc), 0xb9);
        // CB B9 0212
        gbc.setState(0xa65, 0xcfc9, 0x6f60, 0x1848, 0xf0e8, 0x3fb, 0x0, 0x0);
        gbc.writeMem(0xa65, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xcfc9);
        EXPECT(gbc.pc(), 0xa67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0213
        gbc.setState(0xb008, 0xa895, 0xf5b0, 0x38b2, 0xa12b, 0x224a, 0x1, 0x0);
        gbc.writeMem(0xb008, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa895);
        EXPECT(gbc.pc(), 0xb00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb008), 0xcb);
        EXPECT(gbc.readMem(0xb009), 0xb9);
        // CB B9 0214
        gbc.setState(0x7b58, 0x2db, 0x3b40, 0x970, 0x6d8d, 0xc0f5, 0x0, 0x1);
        gbc.writeMem(0x7b58, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2db);
        EXPECT(gbc.pc(), 0x7b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0215
        gbc.setState(0x5e58, 0x640c, 0x7cb0, 0xf26a, 0xd34b, 0xe0b4, 0x1, 0x0);
        gbc.writeMem(0x5e58, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x640c);
        EXPECT(gbc.pc(), 0x5e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0216
        gbc.setState(0xcb8d, 0x16a7, 0x22c0, 0x1ea5, 0x32dd, 0xdc35, 0x1, 0x0);
        gbc.writeMem(0xcb8d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x16a7);
        EXPECT(gbc.pc(), 0xcb8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb8d), 0xcb);
        EXPECT(gbc.readMem(0xcb8e), 0xb9);
        // CB B9 0218
        gbc.setState(0xcac2, 0x7e25, 0x40b0, 0x1689, 0x1e08, 0x9bfe, 0x1, 0x1);
        gbc.writeMem(0xcac2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7e25);
        EXPECT(gbc.pc(), 0xcac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac2), 0xcb);
        EXPECT(gbc.readMem(0xcac3), 0xb9);
        // CB B9 0219
        gbc.setState(0xf60, 0xe9ea, 0x1640, 0xf0c9, 0x2bb2, 0x5e4d, 0x0, 0x1);
        gbc.writeMem(0xf60, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe9ea);
        EXPECT(gbc.pc(), 0xf62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 021A
        gbc.setState(0x6f37, 0x633b, 0xd680, 0x69e4, 0x1423, 0x3258, 0x0, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x633b);
        EXPECT(gbc.pc(), 0x6f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 021B
        gbc.setState(0x2d00, 0xd59c, 0x19f0, 0x485f, 0x12d6, 0xa864, 0x0, 0x1);
        gbc.writeMem(0x2d00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd59c);
        EXPECT(gbc.pc(), 0x2d02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 021C
        gbc.setState(0xed64, 0xa1b7, 0x50, 0x3d31, 0xd1d7, 0x5491, 0x1, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa1b7);
        EXPECT(gbc.pc(), 0xed66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed64), 0xcb);
        EXPECT(gbc.readMem(0xed65), 0xb9);
        // CB B9 021D
        gbc.setState(0xe9df, 0x701d, 0xf60, 0x4e0, 0xac00, 0xe699, 0x0, 0x1);
        gbc.writeMem(0xe9df, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x701d);
        EXPECT(gbc.pc(), 0xe9e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9df), 0xcb);
        EXPECT(gbc.readMem(0xe9e0), 0xb9);
        // CB B9 021E
        gbc.setState(0x66db, 0x94a, 0xcbf0, 0xfcce, 0xa238, 0x2720, 0x1, 0x0);
        gbc.writeMem(0x66db, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x94a);
        EXPECT(gbc.pc(), 0x66dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 021F
        gbc.setState(0xb698, 0x34e5, 0xbb0, 0x7ced, 0x41bd, 0x1605, 0x1, 0x1);
        gbc.writeMem(0xb698, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x34e5);
        EXPECT(gbc.pc(), 0xb69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb698), 0xcb);
        EXPECT(gbc.readMem(0xb699), 0xb9);
        // CB B9 0220
        gbc.setState(0x113, 0xa24f, 0x1490, 0x357f, 0xd022, 0x6487, 0x1, 0x0);
        gbc.writeMem(0x113, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xa24f);
        EXPECT(gbc.pc(), 0x115);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0221
        gbc.setState(0x8f39, 0x52, 0x5e0, 0x85c5, 0xdc7e, 0xcf69, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x52);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0xb9);
        // CB B9 0222
        gbc.setState(0xc1a8, 0x6c55, 0x5230, 0x8216, 0x79c6, 0x973d, 0x0, 0x0);
        gbc.writeMem(0xc1a8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6c55);
        EXPECT(gbc.pc(), 0xc1aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a8), 0xcb);
        EXPECT(gbc.readMem(0xc1a9), 0xb9);
        // CB B9 0223
        gbc.setState(0x3645, 0xf51a, 0xb860, 0x849d, 0x4afd, 0x3114, 0x1, 0x0);
        gbc.writeMem(0x3645, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf51a);
        EXPECT(gbc.pc(), 0x3647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0224
        gbc.setState(0x2a86, 0x35ea, 0x9cd0, 0x896, 0xf49f, 0xdd9f, 0x0, 0x0);
        gbc.writeMem(0x2a86, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x35ea);
        EXPECT(gbc.pc(), 0x2a88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0225
        gbc.setState(0x1dc3, 0x4db6, 0x8760, 0xbe37, 0x98d, 0x2d90, 0x1, 0x0);
        gbc.writeMem(0x1dc3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4db6);
        EXPECT(gbc.pc(), 0x1dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0226
        gbc.setState(0xc56b, 0x4d9, 0x5a0, 0xb2c8, 0xaa80, 0x3822, 0x1, 0x1);
        gbc.writeMem(0xc56b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4d9);
        EXPECT(gbc.pc(), 0xc56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56b), 0xcb);
        EXPECT(gbc.readMem(0xc56c), 0xb9);
        // CB B9 0227
        gbc.setState(0x113c, 0xbb1b, 0x4ee0, 0x54e8, 0x6556, 0xac8a, 0x1, 0x0);
        gbc.writeMem(0x113c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbb1b);
        EXPECT(gbc.pc(), 0x113e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0228
        gbc.setState(0x50f5, 0xff09, 0x1c70, 0x6d0a, 0xda7, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0x50f5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xff09);
        EXPECT(gbc.pc(), 0x50f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0229
        gbc.setState(0x8810, 0xe728, 0x6320, 0x30e9, 0xb282, 0x2dde, 0x0, 0x0);
        gbc.writeMem(0x8810, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe728);
        EXPECT(gbc.pc(), 0x8812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8810), 0xcb);
        EXPECT(gbc.readMem(0x8811), 0xb9);
        // CB B9 022A
        gbc.setState(0x8410, 0xca43, 0xe40, 0x34f7, 0x52a4, 0x8d28, 0x1, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xca43);
        EXPECT(gbc.pc(), 0x8412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8410), 0xcb);
        EXPECT(gbc.readMem(0x8411), 0xb9);
        // CB B9 022B
        gbc.setState(0x33a5, 0x6bc7, 0x3e80, 0xcde2, 0xf439, 0x746f, 0x0, 0x0);
        gbc.writeMem(0x33a5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6bc7);
        EXPECT(gbc.pc(), 0x33a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 022C
        gbc.setState(0x8811, 0x1f2c, 0x4500, 0x9d61, 0x7f89, 0xfd63, 0x1, 0x0);
        gbc.writeMem(0x8811, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1f2c);
        EXPECT(gbc.pc(), 0x8813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8811), 0xcb);
        EXPECT(gbc.readMem(0x8812), 0xb9);
        // CB B9 022D
        gbc.setState(0x22b0, 0x8b3c, 0x2370, 0x6221, 0xc40c, 0x2016, 0x0, 0x0);
        gbc.writeMem(0x22b0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8b3c);
        EXPECT(gbc.pc(), 0x22b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 022E
        gbc.setState(0x1617, 0x9fb5, 0xe3b0, 0x35ad, 0x4d63, 0xdb23, 0x1, 0x0);
        gbc.writeMem(0x1617, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9fb5);
        EXPECT(gbc.pc(), 0x1619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 022F
        gbc.setState(0xb6d1, 0xf4d4, 0xf160, 0x7bb, 0x8bef, 0xc51e, 0x1, 0x1);
        gbc.writeMem(0xb6d1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf4d4);
        EXPECT(gbc.pc(), 0xb6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d1), 0xcb);
        EXPECT(gbc.readMem(0xb6d2), 0xb9);
        // CB B9 0230
        gbc.setState(0xa326, 0xae11, 0x7c50, 0xc5d1, 0x32f0, 0x446b, 0x0, 0x0);
        gbc.writeMem(0xa326, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xae11);
        EXPECT(gbc.pc(), 0xa328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa326), 0xcb);
        EXPECT(gbc.readMem(0xa327), 0xb9);
        // CB B9 0231
        gbc.setState(0xd253, 0x1be2, 0xf240, 0xbc6c, 0xeb3e, 0xa7e6, 0x0, 0x1);
        gbc.writeMem(0xd253, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1be2);
        EXPECT(gbc.pc(), 0xd255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd253), 0xcb);
        EXPECT(gbc.readMem(0xd254), 0xb9);
        // CB B9 0232
        gbc.setState(0x5e0a, 0x563b, 0x2b80, 0x8c01, 0xd15d, 0x3760, 0x1, 0x1);
        gbc.writeMem(0x5e0a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x563b);
        EXPECT(gbc.pc(), 0x5e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0233
        gbc.setState(0xe2db, 0xc7a6, 0xa5f0, 0x2363, 0xb761, 0x17e2, 0x1, 0x1);
        gbc.writeMem(0xe2db, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc7a6);
        EXPECT(gbc.pc(), 0xe2dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2db), 0xcb);
        EXPECT(gbc.readMem(0xe2dc), 0xb9);
        // CB B9 0234
        gbc.setState(0x1658, 0x857b, 0xffe0, 0xa0, 0xea97, 0xa8e9, 0x0, 0x1);
        gbc.writeMem(0x1658, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x857b);
        EXPECT(gbc.pc(), 0x165a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0236
        gbc.setState(0x1811, 0x6cba, 0xc0, 0xeabe, 0xafc9, 0x4388, 0x1, 0x0);
        gbc.writeMem(0x1811, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6cba);
        EXPECT(gbc.pc(), 0x1813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0237
        gbc.setState(0x3b9b, 0x65f3, 0x3ac0, 0x939c, 0x33a3, 0x7eb, 0x1, 0x0);
        gbc.writeMem(0x3b9b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x65f3);
        EXPECT(gbc.pc(), 0x3b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0238
        gbc.setState(0xc7c2, 0xa963, 0xf80, 0x8ac0, 0xbeaa, 0x92cb, 0x1, 0x1);
        gbc.writeMem(0xc7c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa963);
        EXPECT(gbc.pc(), 0xc7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c2), 0xcb);
        EXPECT(gbc.readMem(0xc7c3), 0xb9);
        // CB B9 0239
        gbc.setState(0xaeb6, 0x7ad5, 0x83f0, 0x3062, 0xa730, 0x9f8d, 0x1, 0x1);
        gbc.writeMem(0xaeb6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7ad5);
        EXPECT(gbc.pc(), 0xaeb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb6), 0xcb);
        EXPECT(gbc.readMem(0xaeb7), 0xb9);
        // CB B9 023A
        gbc.setState(0x8249, 0x27f1, 0xd380, 0x9d5b, 0xb854, 0x3b7f, 0x0, 0x0);
        gbc.writeMem(0x8249, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x27f1);
        EXPECT(gbc.pc(), 0x824b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8249), 0xcb);
        EXPECT(gbc.readMem(0x824a), 0xb9);
        // CB B9 023B
        gbc.setState(0x5efa, 0x2f3d, 0xcac0, 0x6aef, 0x9f20, 0x8464, 0x0, 0x0);
        gbc.writeMem(0x5efa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2f3d);
        EXPECT(gbc.pc(), 0x5efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 023D
        gbc.setState(0x3e81, 0x9e0e, 0xf590, 0xb1d, 0x1143, 0x5a6e, 0x1, 0x0);
        gbc.writeMem(0x3e81, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9e0e);
        EXPECT(gbc.pc(), 0x3e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 023E
        gbc.setState(0x13c8, 0xcd80, 0x6af0, 0xf79f, 0x9595, 0x7dcd, 0x1, 0x0);
        gbc.writeMem(0x13c8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcd80);
        EXPECT(gbc.pc(), 0x13ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 023F
        gbc.setState(0x6e83, 0x1da3, 0x7750, 0xbe9f, 0x6cc4, 0xbbd5, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1da3);
        EXPECT(gbc.pc(), 0x6e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0240
        gbc.setState(0x48e6, 0x95f7, 0x3d40, 0x9236, 0xbd34, 0x6e5c, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x95f7);
        EXPECT(gbc.pc(), 0x48e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0242
        gbc.setState(0x2a05, 0x81ad, 0xd430, 0x7a2c, 0x462d, 0xf971, 0x0, 0x1);
        gbc.writeMem(0x2a05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x81ad);
        EXPECT(gbc.pc(), 0x2a07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0243
        gbc.setState(0xe847, 0x5ff0, 0x2dd0, 0x78de, 0x638, 0x7959, 0x0, 0x0);
        gbc.writeMem(0xe847, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5ff0);
        EXPECT(gbc.pc(), 0xe849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe847), 0xcb);
        EXPECT(gbc.readMem(0xe848), 0xb9);
        // CB B9 0244
        gbc.setState(0x2aa0, 0x786b, 0x7920, 0x19b0, 0x3181, 0x6bd0, 0x1, 0x0);
        gbc.writeMem(0x2aa0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x786b);
        EXPECT(gbc.pc(), 0x2aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0245
        gbc.setState(0xa97, 0x6a77, 0x4de0, 0xd860, 0xa112, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0xa97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6a77);
        EXPECT(gbc.pc(), 0xa99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0246
        gbc.setState(0xa6f2, 0xae01, 0x7040, 0x1cfa, 0x8960, 0xae47, 0x1, 0x1);
        gbc.writeMem(0xa6f2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xae01);
        EXPECT(gbc.pc(), 0xa6f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f2), 0xcb);
        EXPECT(gbc.readMem(0xa6f3), 0xb9);
        // CB B9 0247
        gbc.setState(0x88a8, 0x7025, 0xcef0, 0x63d5, 0x4a0, 0xb5ac, 0x1, 0x1);
        gbc.writeMem(0x88a8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x7025);
        EXPECT(gbc.pc(), 0x88aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a8), 0xcb);
        EXPECT(gbc.readMem(0x88a9), 0xb9);
        // CB B9 0248
        gbc.setState(0xa374, 0xe934, 0x31f0, 0x98f4, 0x122b, 0x743c, 0x1, 0x0);
        gbc.writeMem(0xa374, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe934);
        EXPECT(gbc.pc(), 0xa376);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa374), 0xcb);
        EXPECT(gbc.readMem(0xa375), 0xb9);
        // CB B9 0249
        gbc.setState(0x38d9, 0x4741, 0xe630, 0xb0bb, 0x7b95, 0xd149, 0x0, 0x0);
        gbc.writeMem(0x38d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4741);
        EXPECT(gbc.pc(), 0x38db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 024A
        gbc.setState(0x899, 0x541d, 0x3330, 0x8387, 0xc2b6, 0x9864, 0x0, 0x0);
        gbc.writeMem(0x899, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x541d);
        EXPECT(gbc.pc(), 0x89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 024B
        gbc.setState(0x4d96, 0x6b50, 0x1d30, 0xe991, 0x179d, 0x7334, 0x0, 0x0);
        gbc.writeMem(0x4d96, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6b50);
        EXPECT(gbc.pc(), 0x4d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 024C
        gbc.setState(0xd6de, 0x6463, 0x5850, 0x5c68, 0xb23e, 0x8d10, 0x1, 0x0);
        gbc.writeMem(0xd6de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6463);
        EXPECT(gbc.pc(), 0xd6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6de), 0xcb);
        EXPECT(gbc.readMem(0xd6df), 0xb9);
        // CB B9 024D
        gbc.setState(0x4632, 0xfdb1, 0x1870, 0xab66, 0x53f7, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0x4632, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfdb1);
        EXPECT(gbc.pc(), 0x4634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 024E
        gbc.setState(0x9104, 0x43bb, 0x5bd0, 0xee1e, 0xbf65, 0xfd58, 0x1, 0x0);
        gbc.writeMem(0x9104, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x43bb);
        EXPECT(gbc.pc(), 0x9106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9104), 0xcb);
        EXPECT(gbc.readMem(0x9105), 0xb9);
        // CB B9 024F
        gbc.setState(0x4b46, 0x818, 0x5f70, 0x29bc, 0x7a68, 0x5a9b, 0x1, 0x0);
        gbc.writeMem(0x4b46, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x818);
        EXPECT(gbc.pc(), 0x4b48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0250
        gbc.setState(0xbf4a, 0xa844, 0x4530, 0xadd5, 0xc213, 0xc245, 0x1, 0x1);
        gbc.writeMem(0xbf4a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa844);
        EXPECT(gbc.pc(), 0xbf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4a), 0xcb);
        EXPECT(gbc.readMem(0xbf4b), 0xb9);
        // CB B9 0251
        gbc.setState(0xdff8, 0x1890, 0x2d00, 0x7395, 0x763f, 0x2f47, 0x1, 0x0);
        gbc.writeMem(0xdff8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1890);
        EXPECT(gbc.pc(), 0xdffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdff8), 0xcb);
        EXPECT(gbc.readMem(0xdff9), 0xb9);
        // CB B9 0252
        gbc.setState(0x87f3, 0x3db3, 0xc860, 0xa776, 0xf8a1, 0x33ca, 0x0, 0x0);
        gbc.writeMem(0x87f3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3db3);
        EXPECT(gbc.pc(), 0x87f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f3), 0xcb);
        EXPECT(gbc.readMem(0x87f4), 0xb9);
        // CB B9 0253
        gbc.setState(0xcc70, 0x2ab6, 0xf90, 0x453a, 0x6a79, 0x7e40, 0x0, 0x0);
        gbc.writeMem(0xcc70, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2ab6);
        EXPECT(gbc.pc(), 0xcc72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc70), 0xcb);
        EXPECT(gbc.readMem(0xcc71), 0xb9);
        // CB B9 0254
        gbc.setState(0x2bc6, 0x7396, 0xb9c0, 0x6dbe, 0xfe8c, 0xc0dc, 0x1, 0x1);
        gbc.writeMem(0x2bc6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x7396);
        EXPECT(gbc.pc(), 0x2bc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0256
        gbc.setState(0x508e, 0xab4, 0x57a0, 0xf8a, 0x18cd, 0xf36, 0x1, 0x0);
        gbc.writeMem(0x508e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xab4);
        EXPECT(gbc.pc(), 0x5090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0257
        gbc.setState(0xc616, 0xad8a, 0x97b0, 0xcb82, 0x4e2e, 0x66f2, 0x1, 0x1);
        gbc.writeMem(0xc616, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xad8a);
        EXPECT(gbc.pc(), 0xc618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc616), 0xcb);
        EXPECT(gbc.readMem(0xc617), 0xb9);
        // CB B9 0258
        gbc.setState(0x949, 0xec35, 0xd090, 0x40a2, 0x9401, 0xaef6, 0x0, 0x0);
        gbc.writeMem(0x949, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xec35);
        EXPECT(gbc.pc(), 0x94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0259
        gbc.setState(0x9fe7, 0x4b6f, 0xb4c0, 0xea6f, 0xeca4, 0x6213, 0x0, 0x0);
        gbc.writeMem(0x9fe7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x4b6f);
        EXPECT(gbc.pc(), 0x9fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe7), 0xcb);
        EXPECT(gbc.readMem(0x9fe8), 0xb9);
        // CB B9 025A
        gbc.setState(0x33a1, 0x63af, 0x7b70, 0xe841, 0xee38, 0x5693, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x63af);
        EXPECT(gbc.pc(), 0x33a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 025B
        gbc.setState(0x39f, 0x5ae8, 0xc0c0, 0x4286, 0x2aad, 0x9157, 0x1, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5ae8);
        EXPECT(gbc.pc(), 0x3a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 025C
        gbc.setState(0xa17a, 0xe150, 0x6810, 0xa2d9, 0x709a, 0x252b, 0x0, 0x1);
        gbc.writeMem(0xa17a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe150);
        EXPECT(gbc.pc(), 0xa17c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17a), 0xcb);
        EXPECT(gbc.readMem(0xa17b), 0xb9);
        // CB B9 025D
        gbc.setState(0xc9d7, 0xc3b1, 0x4a00, 0x381e, 0xc530, 0x7bab, 0x1, 0x1);
        gbc.writeMem(0xc9d7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc3b1);
        EXPECT(gbc.pc(), 0xc9d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9d7), 0xcb);
        EXPECT(gbc.readMem(0xc9d8), 0xb9);
        // CB B9 025F
        gbc.setState(0xe0b2, 0xf86d, 0x40, 0xe9a8, 0xebd, 0x8358, 0x0, 0x1);
        gbc.writeMem(0xe0b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf86d);
        EXPECT(gbc.pc(), 0xe0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b2), 0xcb);
        EXPECT(gbc.readMem(0xe0b3), 0xb9);
        // CB B9 0260
        gbc.setState(0xe96b, 0xf8cf, 0x140, 0x100c, 0x6654, 0xa479, 0x0, 0x0);
        gbc.writeMem(0xe96b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf8cf);
        EXPECT(gbc.pc(), 0xe96d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe96b), 0xcb);
        EXPECT(gbc.readMem(0xe96c), 0xb9);
        // CB B9 0261
        gbc.setState(0x1241, 0x5f24, 0x2f30, 0x8def, 0x3360, 0x2ae0, 0x0, 0x1);
        gbc.writeMem(0x1241, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5f24);
        EXPECT(gbc.pc(), 0x1243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0262
        gbc.setState(0xbb2b, 0x4d72, 0x41c0, 0x89e8, 0xbeb8, 0x5f74, 0x1, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4d72);
        EXPECT(gbc.pc(), 0xbb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2b), 0xcb);
        EXPECT(gbc.readMem(0xbb2c), 0xb9);
        // CB B9 0263
        gbc.setState(0x5869, 0x7aa0, 0x1bb0, 0xcce7, 0x1d7d, 0x31d1, 0x1, 0x1);
        gbc.writeMem(0x5869, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7aa0);
        EXPECT(gbc.pc(), 0x586b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0264
        gbc.setState(0x5d7e, 0x4e5f, 0x34a0, 0x1e22, 0x97e5, 0x5614, 0x1, 0x0);
        gbc.writeMem(0x5d7e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0x5d80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0265
        gbc.setState(0xcead, 0xaebb, 0x670, 0x679a, 0x2c40, 0x414f, 0x0, 0x0);
        gbc.writeMem(0xcead, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xaebb);
        EXPECT(gbc.pc(), 0xceaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcead), 0xcb);
        EXPECT(gbc.readMem(0xceae), 0xb9);
        // CB B9 0266
        gbc.setState(0x2b85, 0x9683, 0xaa30, 0x5bb, 0x7cb6, 0xeb35, 0x1, 0x0);
        gbc.writeMem(0x2b85, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9683);
        EXPECT(gbc.pc(), 0x2b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0267
        gbc.setState(0xddc4, 0xdb9f, 0xbca0, 0xb1e7, 0xe7a7, 0x3ad5, 0x1, 0x0);
        gbc.writeMem(0xddc4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdb9f);
        EXPECT(gbc.pc(), 0xddc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc4), 0xcb);
        EXPECT(gbc.readMem(0xddc5), 0xb9);
        // CB B9 0268
        gbc.setState(0x1964, 0x8970, 0x9750, 0xcd4c, 0x4bc1, 0x2b0b, 0x0, 0x1);
        gbc.writeMem(0x1964, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8970);
        EXPECT(gbc.pc(), 0x1966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0269
        gbc.setState(0x46a9, 0x2716, 0x55f0, 0xc011, 0x7542, 0x7d6d, 0x1, 0x0);
        gbc.writeMem(0x46a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2716);
        EXPECT(gbc.pc(), 0x46ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 026A
        gbc.setState(0x5355, 0x9cf8, 0xfcd0, 0x1537, 0x2cc8, 0x642a, 0x0, 0x0);
        gbc.writeMem(0x5355, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9cf8);
        EXPECT(gbc.pc(), 0x5357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 026B
        gbc.setState(0x7794, 0xecc7, 0xcd60, 0x1ed6, 0xfa8a, 0x40f3, 0x1, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xecc7);
        EXPECT(gbc.pc(), 0x7796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 026C
        gbc.setState(0xe348, 0x5069, 0xfb70, 0x60db, 0x8b8b, 0xe37e, 0x1, 0x1);
        gbc.writeMem(0xe348, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5069);
        EXPECT(gbc.pc(), 0xe34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe348), 0xcb);
        EXPECT(gbc.readMem(0xe349), 0xb9);
        // CB B9 026D
        gbc.setState(0x2a22, 0x95e7, 0x5be0, 0x92a0, 0x6e6a, 0x855a, 0x0, 0x0);
        gbc.writeMem(0x2a22, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x95e7);
        EXPECT(gbc.pc(), 0x2a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 026E
        gbc.setState(0xa97d, 0x2cc9, 0xc120, 0x4fc2, 0xa46, 0x43cd, 0x0, 0x1);
        gbc.writeMem(0xa97d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2cc9);
        EXPECT(gbc.pc(), 0xa97f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa97d), 0xcb);
        EXPECT(gbc.readMem(0xa97e), 0xb9);
        // CB B9 026F
        gbc.setState(0xc9c2, 0x58ac, 0x1250, 0xaffe, 0xd317, 0xa4c9, 0x0, 0x0);
        gbc.writeMem(0xc9c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x58ac);
        EXPECT(gbc.pc(), 0xc9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c2), 0xcb);
        EXPECT(gbc.readMem(0xc9c3), 0xb9);
        // CB B9 0270
        gbc.setState(0x10c3, 0x487b, 0xf2b0, 0xf330, 0xaab3, 0xfdf6, 0x0, 0x1);
        gbc.writeMem(0x10c3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x487b);
        EXPECT(gbc.pc(), 0x10c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0271
        gbc.setState(0xa62c, 0xdde5, 0xb880, 0x637a, 0xff2e, 0x5a77, 0x1, 0x1);
        gbc.writeMem(0xa62c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xdde5);
        EXPECT(gbc.pc(), 0xa62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa62c), 0xcb);
        EXPECT(gbc.readMem(0xa62d), 0xb9);
        // CB B9 0272
        gbc.setState(0xcbc0, 0x3588, 0x120, 0x3041, 0x9412, 0x7812, 0x1, 0x0);
        gbc.writeMem(0xcbc0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3588);
        EXPECT(gbc.pc(), 0xcbc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc0), 0xcb);
        EXPECT(gbc.readMem(0xcbc1), 0xb9);
        // CB B9 0273
        gbc.setState(0x251b, 0xad01, 0xce70, 0x4a29, 0xeb14, 0xdeb5, 0x1, 0x0);
        gbc.writeMem(0x251b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xad01);
        EXPECT(gbc.pc(), 0x251d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0274
        gbc.setState(0x1d7f, 0xf4a3, 0xc20, 0x85c4, 0x9fc, 0xcd50, 0x0, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf4a3);
        EXPECT(gbc.pc(), 0x1d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0275
        gbc.setState(0xdd88, 0x5e92, 0x7820, 0x59d9, 0x8f91, 0x8ece, 0x1, 0x1);
        gbc.writeMem(0xdd88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5e92);
        EXPECT(gbc.pc(), 0xdd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd88), 0xcb);
        EXPECT(gbc.readMem(0xdd89), 0xb9);
        // CB B9 0276
        gbc.setState(0x3fbd, 0x6b8f, 0x5760, 0x9c91, 0x5d72, 0xbcb1, 0x1, 0x0);
        gbc.writeMem(0x3fbd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6b8f);
        EXPECT(gbc.pc(), 0x3fbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0277
        gbc.setState(0x67d2, 0x23f0, 0x78c0, 0x5781, 0x2226, 0xf92f, 0x0, 0x0);
        gbc.writeMem(0x67d2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x23f0);
        EXPECT(gbc.pc(), 0x67d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0278
        gbc.setState(0x5b6c, 0x1e60, 0xb730, 0xfda9, 0x4405, 0x8403, 0x1, 0x1);
        gbc.writeMem(0x5b6c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1e60);
        EXPECT(gbc.pc(), 0x5b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0279
        gbc.setState(0xbe87, 0xe6a5, 0x3fe0, 0x36fc, 0xe48b, 0xfc68, 0x0, 0x1);
        gbc.writeMem(0xbe87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe6a5);
        EXPECT(gbc.pc(), 0xbe89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe87), 0xcb);
        EXPECT(gbc.readMem(0xbe88), 0xb9);
        // CB B9 027A
        gbc.setState(0xb090, 0xcf75, 0xc70, 0x4597, 0x4140, 0x13c5, 0x0, 0x0);
        gbc.writeMem(0xb090, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xcf75);
        EXPECT(gbc.pc(), 0xb092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb090), 0xcb);
        EXPECT(gbc.readMem(0xb091), 0xb9);
        // CB B9 027D
        gbc.setState(0xa398, 0x97a0, 0x1990, 0x268e, 0xf264, 0xad6, 0x0, 0x0);
        gbc.writeMem(0xa398, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x97a0);
        EXPECT(gbc.pc(), 0xa39a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa398), 0xcb);
        EXPECT(gbc.readMem(0xa399), 0xb9);
        // CB B9 027E
        gbc.setState(0x5761, 0x792, 0x1720, 0x7308, 0x3c2a, 0xa745, 0x0, 0x0);
        gbc.writeMem(0x5761, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x792);
        EXPECT(gbc.pc(), 0x5763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 027F
        gbc.setState(0xa4b1, 0x6a10, 0xf2b0, 0x685b, 0x9016, 0x3eb5, 0x0, 0x0);
        gbc.writeMem(0xa4b1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6a10);
        EXPECT(gbc.pc(), 0xa4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b1), 0xcb);
        EXPECT(gbc.readMem(0xa4b2), 0xb9);
        // CB B9 0280
        gbc.setState(0xcffa, 0x70d6, 0x3cb0, 0xa197, 0x1c17, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xcffa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x70d6);
        EXPECT(gbc.pc(), 0xcffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcffa), 0xcb);
        EXPECT(gbc.readMem(0xcffb), 0xb9);
        // CB B9 0281
        gbc.setState(0x115a, 0x1cb5, 0xb0c0, 0xea56, 0x911, 0x44c7, 0x0, 0x1);
        gbc.writeMem(0x115a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1cb5);
        EXPECT(gbc.pc(), 0x115c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0282
        gbc.setState(0xeab4, 0x4df4, 0x79d0, 0x7c88, 0xa252, 0x9f42, 0x0, 0x1);
        gbc.writeMem(0xeab4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4df4);
        EXPECT(gbc.pc(), 0xeab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab4), 0xcb);
        EXPECT(gbc.readMem(0xeab5), 0xb9);
        // CB B9 0283
        gbc.setState(0x8988, 0x3690, 0xaae0, 0x5da, 0xa60a, 0x321d, 0x0, 0x1);
        gbc.writeMem(0x8988, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3690);
        EXPECT(gbc.pc(), 0x898a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8988), 0xcb);
        EXPECT(gbc.readMem(0x8989), 0xb9);
        // CB B9 0284
        gbc.setState(0xce95, 0xffb, 0xcf80, 0x8a9d, 0xea89, 0x369e, 0x0, 0x1);
        gbc.writeMem(0xce95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xffb);
        EXPECT(gbc.pc(), 0xce97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce95), 0xcb);
        EXPECT(gbc.readMem(0xce96), 0xb9);
        // CB B9 0285
        gbc.setState(0xbb, 0x8e0b, 0xc900, 0x7bed, 0x1571, 0x63f9, 0x0, 0x0);
        gbc.writeMem(0xbb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8e0b);
        EXPECT(gbc.pc(), 0xbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0286
        gbc.setState(0x19a3, 0x563c, 0x7740, 0x2884, 0x73f, 0x3023, 0x1, 0x0);
        gbc.writeMem(0x19a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x563c);
        EXPECT(gbc.pc(), 0x19a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0287
        gbc.setState(0x6b90, 0x95d4, 0xd6c0, 0x432b, 0xd68c, 0x6053, 0x1, 0x1);
        gbc.writeMem(0x6b90, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x95d4);
        EXPECT(gbc.pc(), 0x6b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0288
        gbc.setState(0x3450, 0x5890, 0xed00, 0x21f2, 0x6bfa, 0xc336, 0x1, 0x1);
        gbc.writeMem(0x3450, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5890);
        EXPECT(gbc.pc(), 0x3452);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0289
        gbc.setState(0xa76, 0xc3e3, 0xd8b0, 0x89a2, 0xfb95, 0xbcee, 0x1, 0x0);
        gbc.writeMem(0xa76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc3e3);
        EXPECT(gbc.pc(), 0xa78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 028A
        gbc.setState(0xa775, 0xbba3, 0x6ec0, 0x6506, 0xb0e2, 0xb37b, 0x0, 0x1);
        gbc.writeMem(0xa775, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbba3);
        EXPECT(gbc.pc(), 0xa777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa775), 0xcb);
        EXPECT(gbc.readMem(0xa776), 0xb9);
        // CB B9 028B
        gbc.setState(0x2352, 0x8a2d, 0x54a0, 0x3c61, 0x5882, 0x5258, 0x0, 0x1);
        gbc.writeMem(0x2352, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8a2d);
        EXPECT(gbc.pc(), 0x2354);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 028C
        gbc.setState(0xbaea, 0xb9a4, 0x860, 0x503d, 0x6e1, 0x9815, 0x0, 0x0);
        gbc.writeMem(0xbaea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb9a4);
        EXPECT(gbc.pc(), 0xbaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaea), 0xcb);
        EXPECT(gbc.readMem(0xbaeb), 0xb9);
        // CB B9 028D
        gbc.setState(0xc848, 0x73ac, 0x8cc0, 0x4a9b, 0x7bcc, 0x2792, 0x0, 0x1);
        gbc.writeMem(0xc848, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x73ac);
        EXPECT(gbc.pc(), 0xc84a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc848), 0xcb);
        EXPECT(gbc.readMem(0xc849), 0xb9);
        // CB B9 028E
        gbc.setState(0xb346, 0x3a4f, 0xd8b0, 0x5dd8, 0x276, 0x6a36, 0x1, 0x1);
        gbc.writeMem(0xb346, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3a4f);
        EXPECT(gbc.pc(), 0xb348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb346), 0xcb);
        EXPECT(gbc.readMem(0xb347), 0xb9);
        // CB B9 0290
        gbc.setState(0xda13, 0xc16c, 0xb890, 0x55a6, 0x170b, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0xda13, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc16c);
        EXPECT(gbc.pc(), 0xda15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda13), 0xcb);
        EXPECT(gbc.readMem(0xda14), 0xb9);
        // CB B9 0291
        gbc.setState(0xb7ce, 0x278c, 0xc70, 0xa4da, 0x73e2, 0x8d85, 0x1, 0x0);
        gbc.writeMem(0xb7ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0xb7d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ce), 0xcb);
        EXPECT(gbc.readMem(0xb7cf), 0xb9);
        // CB B9 0293
        gbc.setState(0xe883, 0xa1c8, 0xb350, 0xb49e, 0xe1bc, 0x6660, 0x0, 0x1);
        gbc.writeMem(0xe883, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa1c8);
        EXPECT(gbc.pc(), 0xe885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe883), 0xcb);
        EXPECT(gbc.readMem(0xe884), 0xb9);
        // CB B9 0294
        gbc.setState(0xdc2b, 0x3500, 0xaa40, 0x1c8e, 0x5753, 0xef13, 0x0, 0x1);
        gbc.writeMem(0xdc2b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3500);
        EXPECT(gbc.pc(), 0xdc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc2b), 0xcb);
        EXPECT(gbc.readMem(0xdc2c), 0xb9);
        // CB B9 0295
        gbc.setState(0xaee6, 0x7e0b, 0xca20, 0x8c9f, 0x2923, 0xfc3e, 0x1, 0x1);
        gbc.writeMem(0xaee6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7e0b);
        EXPECT(gbc.pc(), 0xaee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee6), 0xcb);
        EXPECT(gbc.readMem(0xaee7), 0xb9);
        // CB B9 0296
        gbc.setState(0xb17c, 0xf524, 0x80f0, 0x2316, 0x84d2, 0xf499, 0x0, 0x1);
        gbc.writeMem(0xb17c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf524);
        EXPECT(gbc.pc(), 0xb17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17c), 0xcb);
        EXPECT(gbc.readMem(0xb17d), 0xb9);
        // CB B9 0297
        gbc.setState(0xa2ee, 0xcb3f, 0xff50, 0xf1dd, 0xe09a, 0x1bce, 0x1, 0x0);
        gbc.writeMem(0xa2ee, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcb3f);
        EXPECT(gbc.pc(), 0xa2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ee), 0xcb);
        EXPECT(gbc.readMem(0xa2ef), 0xb9);
        // CB B9 0298
        gbc.setState(0xcfa1, 0x44b3, 0x4ab0, 0x82e2, 0xdc58, 0x39f2, 0x1, 0x0);
        gbc.writeMem(0xcfa1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x44b3);
        EXPECT(gbc.pc(), 0xcfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa1), 0xcb);
        EXPECT(gbc.readMem(0xcfa2), 0xb9);
        // CB B9 0299
        gbc.setState(0x7949, 0x624e, 0xa6d0, 0x4548, 0xfd43, 0x17ee, 0x1, 0x0);
        gbc.writeMem(0x7949, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x624e);
        EXPECT(gbc.pc(), 0x794b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 029A
        gbc.setState(0x8fdd, 0xf9d1, 0x8950, 0x6191, 0x54a0, 0xb732, 0x0, 0x0);
        gbc.writeMem(0x8fdd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf9d1);
        EXPECT(gbc.pc(), 0x8fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fdd), 0xcb);
        EXPECT(gbc.readMem(0x8fde), 0xb9);
        // CB B9 029B
        gbc.setState(0xdac3, 0xdc7b, 0x98b0, 0xa615, 0x3050, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0xdac3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdc7b);
        EXPECT(gbc.pc(), 0xdac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac3), 0xcb);
        EXPECT(gbc.readMem(0xdac4), 0xb9);
        // CB B9 029C
        gbc.setState(0x59e0, 0x63c, 0x4f10, 0x8c67, 0x409a, 0xf523, 0x1, 0x0);
        gbc.writeMem(0x59e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x63c);
        EXPECT(gbc.pc(), 0x59e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 029D
        gbc.setState(0xdd41, 0x6906, 0x9270, 0x4bff, 0xb6a2, 0xd015, 0x1, 0x1);
        gbc.writeMem(0xdd41, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6906);
        EXPECT(gbc.pc(), 0xdd43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd41), 0xcb);
        EXPECT(gbc.readMem(0xdd42), 0xb9);
        // CB B9 029E
        gbc.setState(0xbbec, 0x3c56, 0x6c00, 0x4452, 0xb844, 0x9870, 0x0, 0x0);
        gbc.writeMem(0xbbec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3c56);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbec), 0xcb);
        EXPECT(gbc.readMem(0xbbed), 0xb9);
        // CB B9 029F
        gbc.setState(0x75d7, 0x3bbb, 0x3460, 0xcd9f, 0x76ed, 0x9a73, 0x0, 0x1);
        gbc.writeMem(0x75d7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3bbb);
        EXPECT(gbc.pc(), 0x75d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02A0
        gbc.setState(0x3473, 0xabe0, 0x6e00, 0xbc49, 0x3e5e, 0xd311, 0x1, 0x0);
        gbc.writeMem(0x3473, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xabe0);
        EXPECT(gbc.pc(), 0x3475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02A1
        gbc.setState(0xab3d, 0x644a, 0x82b0, 0x11f5, 0x927d, 0x99cb, 0x1, 0x0);
        gbc.writeMem(0xab3d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x644a);
        EXPECT(gbc.pc(), 0xab3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab3d), 0xcb);
        EXPECT(gbc.readMem(0xab3e), 0xb9);
        // CB B9 02A3
        gbc.setState(0x15e3, 0xc74f, 0x7960, 0x6132, 0x1e5c, 0x8e8f, 0x1, 0x1);
        gbc.writeMem(0x15e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc74f);
        EXPECT(gbc.pc(), 0x15e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02A4
        gbc.setState(0x5842, 0x4796, 0x2a30, 0x3bf, 0x5560, 0xbf91, 0x0, 0x1);
        gbc.writeMem(0x5842, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4796);
        EXPECT(gbc.pc(), 0x5844);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02A5
        gbc.setState(0xcb2f, 0x1533, 0x9770, 0xd814, 0xec86, 0x3a38, 0x0, 0x0);
        gbc.writeMem(0xcb2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1533);
        EXPECT(gbc.pc(), 0xcb31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2f), 0xcb);
        EXPECT(gbc.readMem(0xcb30), 0xb9);
        // CB B9 02A6
        gbc.setState(0x475b, 0xabaf, 0x940, 0xd3a4, 0x39f1, 0xf000, 0x1, 0x1);
        gbc.writeMem(0x475b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xabaf);
        EXPECT(gbc.pc(), 0x475d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02A7
        gbc.setState(0xc4cc, 0xae6b, 0x6460, 0x55ee, 0x27c2, 0x2d59, 0x1, 0x0);
        gbc.writeMem(0xc4cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xae6b);
        EXPECT(gbc.pc(), 0xc4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cc), 0xcb);
        EXPECT(gbc.readMem(0xc4cd), 0xb9);
        // CB B9 02A8
        gbc.setState(0x8b07, 0x7f7b, 0x7660, 0xfba, 0xf21a, 0xc3b0, 0x1, 0x0);
        gbc.writeMem(0x8b07, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7f7b);
        EXPECT(gbc.pc(), 0x8b09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b07), 0xcb);
        EXPECT(gbc.readMem(0x8b08), 0xb9);
        // CB B9 02A9
        gbc.setState(0xc1ac, 0xdd1e, 0xf3c0, 0xf35a, 0xa9f1, 0xfb5a, 0x0, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdd1e);
        EXPECT(gbc.pc(), 0xc1ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ac), 0xcb);
        EXPECT(gbc.readMem(0xc1ad), 0xb9);
        // CB B9 02AA
        gbc.setState(0x89fa, 0x4e95, 0x7700, 0x34a, 0x5139, 0x3e41, 0x1, 0x0);
        gbc.writeMem(0x89fa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4e95);
        EXPECT(gbc.pc(), 0x89fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89fa), 0xcb);
        EXPECT(gbc.readMem(0x89fb), 0xb9);
        // CB B9 02AB
        gbc.setState(0x7ba6, 0xcc3f, 0x3ad0, 0x6e55, 0x499a, 0x3ecb, 0x0, 0x0);
        gbc.writeMem(0x7ba6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcc3f);
        EXPECT(gbc.pc(), 0x7ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02AC
        gbc.setState(0x7ffc, 0xf86e, 0xd520, 0xbcae, 0xccf1, 0x95ab, 0x1, 0x0);
        gbc.writeMem(0x7ffc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf86e);
        EXPECT(gbc.pc(), 0x7ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02AD
        gbc.setState(0x438a, 0x5f60, 0xf050, 0x4aa7, 0xb8a5, 0x6d06, 0x1, 0x1);
        gbc.writeMem(0x438a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5f60);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02AE
        gbc.setState(0x9836, 0xad14, 0xae30, 0x57c0, 0x1687, 0xb578, 0x1, 0x0);
        gbc.writeMem(0x9836, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xad14);
        EXPECT(gbc.pc(), 0x9838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9836), 0xcb);
        EXPECT(gbc.readMem(0x9837), 0xb9);
        // CB B9 02AF
        gbc.setState(0xe717, 0x9440, 0x3ce0, 0x476a, 0xb811, 0x3e88, 0x1, 0x1);
        gbc.writeMem(0xe717, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9440);
        EXPECT(gbc.pc(), 0xe719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe717), 0xcb);
        EXPECT(gbc.readMem(0xe718), 0xb9);
        // CB B9 02B0
        gbc.setState(0xe4f3, 0x3de7, 0x6780, 0x6ec5, 0x85c, 0xe632, 0x0, 0x1);
        gbc.writeMem(0xe4f3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3de7);
        EXPECT(gbc.pc(), 0xe4f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4f3), 0xcb);
        EXPECT(gbc.readMem(0xe4f4), 0xb9);
        // CB B9 02B1
        gbc.setState(0xc69b, 0x43bf, 0xa2b0, 0x5bc6, 0x3c9c, 0x5299, 0x0, 0x1);
        gbc.writeMem(0xc69b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x43bf);
        EXPECT(gbc.pc(), 0xc69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69b), 0xcb);
        EXPECT(gbc.readMem(0xc69c), 0xb9);
        // CB B9 02B2
        gbc.setState(0x1dc6, 0x5174, 0x5940, 0xaa65, 0xa5a3, 0x243d, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5174);
        EXPECT(gbc.pc(), 0x1dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02B3
        gbc.setState(0x695c, 0xe85f, 0xf250, 0x857f, 0x5774, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x695c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe85f);
        EXPECT(gbc.pc(), 0x695e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02B4
        gbc.setState(0x614e, 0x86e6, 0x76c0, 0x6054, 0x6ee8, 0x6fb5, 0x0, 0x0);
        gbc.writeMem(0x614e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x86e6);
        EXPECT(gbc.pc(), 0x6150);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02B5
        gbc.setState(0x9050, 0xeca8, 0xf50, 0xbbcc, 0x8bb8, 0x1e1d, 0x1, 0x1);
        gbc.writeMem(0x9050, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xeca8);
        EXPECT(gbc.pc(), 0x9052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9050), 0xcb);
        EXPECT(gbc.readMem(0x9051), 0xb9);
        // CB B9 02B6
        gbc.setState(0x1331, 0x446e, 0x3700, 0xe05e, 0x9be2, 0x5f86, 0x1, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x446e);
        EXPECT(gbc.pc(), 0x1333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02B7
        gbc.setState(0xce05, 0xb6e7, 0x12d0, 0xf5ed, 0xee5d, 0xa6dc, 0x0, 0x0);
        gbc.writeMem(0xce05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb6e7);
        EXPECT(gbc.pc(), 0xce07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce05), 0xcb);
        EXPECT(gbc.readMem(0xce06), 0xb9);
        // CB B9 02B8
        gbc.setState(0x67b1, 0x4123, 0x5dd0, 0x4c8f, 0x4166, 0x7e1d, 0x1, 0x1);
        gbc.writeMem(0x67b1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x4123);
        EXPECT(gbc.pc(), 0x67b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02B9
        gbc.setState(0xc45a, 0x23ee, 0x5800, 0xa3aa, 0x6ac1, 0x9cae, 0x1, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x23ee);
        EXPECT(gbc.pc(), 0xc45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45a), 0xcb);
        EXPECT(gbc.readMem(0xc45b), 0xb9);
        // CB B9 02BA
        gbc.setState(0xdcd6, 0x564e, 0x1290, 0x5d99, 0x162c, 0x624c, 0x0, 0x0);
        gbc.writeMem(0xdcd6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x564e);
        EXPECT(gbc.pc(), 0xdcd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd6), 0xcb);
        EXPECT(gbc.readMem(0xdcd7), 0xb9);
        // CB B9 02BB
        gbc.setState(0x6462, 0x73ff, 0x21a0, 0x1109, 0xe7f, 0xd80d, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x73ff);
        EXPECT(gbc.pc(), 0x6464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02BD
        gbc.setState(0x4b16, 0xef00, 0x5910, 0x1d7b, 0x83d0, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0x4b16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xef00);
        EXPECT(gbc.pc(), 0x4b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02BE
        gbc.setState(0x1ec, 0x5cd1, 0x4fd0, 0xddec, 0x5b2d, 0x76a3, 0x1, 0x0);
        gbc.writeMem(0x1ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5cd1);
        EXPECT(gbc.pc(), 0x1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02BF
        gbc.setState(0x900, 0x62e7, 0xd460, 0x72d3, 0xd2d0, 0x176d, 0x1, 0x0);
        gbc.writeMem(0x900, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x62e7);
        EXPECT(gbc.pc(), 0x902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02C0
        gbc.setState(0x6714, 0xfd64, 0xfac0, 0x8c23, 0x20be, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x6714, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfd64);
        EXPECT(gbc.pc(), 0x6716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02C1
        gbc.setState(0xe602, 0xf625, 0x6ea0, 0x7898, 0x7f4e, 0xb333, 0x0, 0x1);
        gbc.writeMem(0xe602, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf625);
        EXPECT(gbc.pc(), 0xe604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe602), 0xcb);
        EXPECT(gbc.readMem(0xe603), 0xb9);
        // CB B9 02C2
        gbc.setState(0x17de, 0xe007, 0xa3f0, 0xf494, 0x6004, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x17de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe007);
        EXPECT(gbc.pc(), 0x17e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02C3
        gbc.setState(0xac7e, 0xf33a, 0x5580, 0x9164, 0xedb1, 0x6e06, 0x0, 0x1);
        gbc.writeMem(0xac7e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf33a);
        EXPECT(gbc.pc(), 0xac80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac7e), 0xcb);
        EXPECT(gbc.readMem(0xac7f), 0xb9);
        // CB B9 02C4
        gbc.setState(0x6c21, 0x257a, 0xa6a0, 0x90a8, 0xd497, 0x5cf4, 0x0, 0x1);
        gbc.writeMem(0x6c21, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x257a);
        EXPECT(gbc.pc(), 0x6c23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02C5
        gbc.setState(0xa71e, 0x331, 0xc300, 0xa0a9, 0xaf9a, 0xfd40, 0x0, 0x1);
        gbc.writeMem(0xa71e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x331);
        EXPECT(gbc.pc(), 0xa720);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa71e), 0xcb);
        EXPECT(gbc.readMem(0xa71f), 0xb9);
        // CB B9 02C6
        gbc.setState(0x221c, 0xbb6a, 0xa420, 0x3559, 0x6a93, 0xb7b6, 0x0, 0x1);
        gbc.writeMem(0x221c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbb6a);
        EXPECT(gbc.pc(), 0x221e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02C7
        gbc.setState(0xdd3e, 0xfd85, 0x1130, 0xeacb, 0xf898, 0x13d3, 0x1, 0x0);
        gbc.writeMem(0xdd3e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfd85);
        EXPECT(gbc.pc(), 0xdd40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3e), 0xcb);
        EXPECT(gbc.readMem(0xdd3f), 0xb9);
        // CB B9 02C9
        gbc.setState(0xcb47, 0x96da, 0x2730, 0xa479, 0x37ac, 0xbc77, 0x1, 0x0);
        gbc.writeMem(0xcb47, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x96da);
        EXPECT(gbc.pc(), 0xcb49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb47), 0xcb);
        EXPECT(gbc.readMem(0xcb48), 0xb9);
        // CB B9 02CA
        gbc.setState(0x95a0, 0xe1a4, 0x5080, 0x33de, 0xff08, 0xfe2b, 0x0, 0x1);
        gbc.writeMem(0x95a0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe1a4);
        EXPECT(gbc.pc(), 0x95a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a0), 0xcb);
        EXPECT(gbc.readMem(0x95a1), 0xb9);
        // CB B9 02CB
        gbc.setState(0xbc1c, 0xcaaf, 0x6e80, 0x25cd, 0x831, 0xf1b9, 0x1, 0x0);
        gbc.writeMem(0xbc1c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcaaf);
        EXPECT(gbc.pc(), 0xbc1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1c), 0xcb);
        EXPECT(gbc.readMem(0xbc1d), 0xb9);
        // CB B9 02CC
        gbc.setState(0x88b7, 0x7ad1, 0x60, 0x759c, 0xfa6, 0x8008, 0x1, 0x1);
        gbc.writeMem(0x88b7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7ad1);
        EXPECT(gbc.pc(), 0x88b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88b7), 0xcb);
        EXPECT(gbc.readMem(0x88b8), 0xb9);
        // CB B9 02CD
        gbc.setState(0xdb65, 0x5a82, 0xc430, 0x57fa, 0xb006, 0x5165, 0x0, 0x1);
        gbc.writeMem(0xdb65, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5a82);
        EXPECT(gbc.pc(), 0xdb67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb65), 0xcb);
        EXPECT(gbc.readMem(0xdb66), 0xb9);
        // CB B9 02CE
        gbc.setState(0xb93d, 0x8715, 0x83d0, 0xb1e3, 0x5730, 0xb361, 0x1, 0x0);
        gbc.writeMem(0xb93d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8715);
        EXPECT(gbc.pc(), 0xb93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb93d), 0xcb);
        EXPECT(gbc.readMem(0xb93e), 0xb9);
        // CB B9 02CF
        gbc.setState(0x3cd4, 0x3a0e, 0xec80, 0x2ec, 0x7f51, 0x3b74, 0x1, 0x1);
        gbc.writeMem(0x3cd4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3a0e);
        EXPECT(gbc.pc(), 0x3cd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02D1
        gbc.setState(0x82cb, 0x3779, 0x3ee0, 0x13d0, 0x2d6a, 0x4edf, 0x0, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3779);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82cb), 0xcb);
        EXPECT(gbc.readMem(0x82cc), 0xb9);
        // CB B9 02D2
        gbc.setState(0xbafe, 0x8cc1, 0x5800, 0xf2c, 0x785, 0xba54, 0x0, 0x0);
        gbc.writeMem(0xbafe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8cc1);
        EXPECT(gbc.pc(), 0xbb00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafe), 0xcb);
        EXPECT(gbc.readMem(0xbaff), 0xb9);
        // CB B9 02D3
        gbc.setState(0xc2c5, 0xa329, 0x7e10, 0xdf20, 0x52e7, 0xd691, 0x0, 0x0);
        gbc.writeMem(0xc2c5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa329);
        EXPECT(gbc.pc(), 0xc2c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c5), 0xcb);
        EXPECT(gbc.readMem(0xc2c6), 0xb9);
        // CB B9 02D4
        gbc.setState(0x7052, 0xf6d9, 0x7b50, 0xc08a, 0xe26d, 0x8318, 0x0, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0x7054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02D5
        gbc.setState(0x3799, 0x7e2a, 0x7d20, 0x79ea, 0x4512, 0x953e, 0x1, 0x1);
        gbc.writeMem(0x3799, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7e2a);
        EXPECT(gbc.pc(), 0x379b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02D6
        gbc.setState(0xba3a, 0x7d7e, 0x8c90, 0xdb22, 0x37c5, 0x3d5, 0x1, 0x1);
        gbc.writeMem(0xba3a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7d7e);
        EXPECT(gbc.pc(), 0xba3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba3a), 0xcb);
        EXPECT(gbc.readMem(0xba3b), 0xb9);
        // CB B9 02D7
        gbc.setState(0xa9a6, 0x41b0, 0xe510, 0xf054, 0xa490, 0x642, 0x1, 0x1);
        gbc.writeMem(0xa9a6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x41b0);
        EXPECT(gbc.pc(), 0xa9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a6), 0xcb);
        EXPECT(gbc.readMem(0xa9a7), 0xb9);
        // CB B9 02D8
        gbc.setState(0xa320, 0x2681, 0xdc60, 0xe0b, 0x2103, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0xa320, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2681);
        EXPECT(gbc.pc(), 0xa322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa320), 0xcb);
        EXPECT(gbc.readMem(0xa321), 0xb9);
        // CB B9 02D9
        gbc.setState(0x2767, 0xc425, 0x5780, 0xfd61, 0x13e3, 0x8a0f, 0x1, 0x1);
        gbc.writeMem(0x2767, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc425);
        EXPECT(gbc.pc(), 0x2769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02DA
        gbc.setState(0xd35b, 0xfece, 0x7430, 0xf5c7, 0x88ff, 0x2a77, 0x0, 0x0);
        gbc.writeMem(0xd35b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfece);
        EXPECT(gbc.pc(), 0xd35d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35b), 0xcb);
        EXPECT(gbc.readMem(0xd35c), 0xb9);
        // CB B9 02DB
        gbc.setState(0xc9ec, 0x861, 0x6510, 0x135f, 0xd18c, 0x564d, 0x0, 0x0);
        gbc.writeMem(0xc9ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x861);
        EXPECT(gbc.pc(), 0xc9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ec), 0xcb);
        EXPECT(gbc.readMem(0xc9ed), 0xb9);
        // CB B9 02DC
        gbc.setState(0x1a9a, 0x7202, 0xd740, 0x2cfb, 0x1fc0, 0xe696, 0x0, 0x1);
        gbc.writeMem(0x1a9a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7202);
        EXPECT(gbc.pc(), 0x1a9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02DE
        gbc.setState(0xefe0, 0xdd4b, 0x7900, 0xe52e, 0x78d6, 0xc240, 0x1, 0x0);
        gbc.writeMem(0xefe0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdd4b);
        EXPECT(gbc.pc(), 0xefe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe0), 0xcb);
        EXPECT(gbc.readMem(0xefe1), 0xb9);
        // CB B9 02DF
        gbc.setState(0xe3c9, 0xd92b, 0xc840, 0x309, 0x632d, 0xec71, 0x1, 0x0);
        gbc.writeMem(0xe3c9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd92b);
        EXPECT(gbc.pc(), 0xe3cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c9), 0xcb);
        EXPECT(gbc.readMem(0xe3ca), 0xb9);
        // CB B9 02E0
        gbc.setState(0xba0a, 0x7057, 0xe980, 0xfbc3, 0xc30c, 0xb2a2, 0x1, 0x1);
        gbc.writeMem(0xba0a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7057);
        EXPECT(gbc.pc(), 0xba0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba0a), 0xcb);
        EXPECT(gbc.readMem(0xba0b), 0xb9);
        // CB B9 02E1
        gbc.setState(0xd46a, 0x5fae, 0xcde0, 0xbd3c, 0x4cc7, 0x4c97, 0x0, 0x1);
        gbc.writeMem(0xd46a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5fae);
        EXPECT(gbc.pc(), 0xd46c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd46a), 0xcb);
        EXPECT(gbc.readMem(0xd46b), 0xb9);
        // CB B9 02E2
        gbc.setState(0x23a1, 0x37da, 0xd820, 0xa4d9, 0xf685, 0xadb, 0x0, 0x1);
        gbc.writeMem(0x23a1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x37da);
        EXPECT(gbc.pc(), 0x23a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02E3
        gbc.setState(0xc67b, 0x7f6e, 0x4810, 0x5315, 0x8415, 0x4641, 0x1, 0x1);
        gbc.writeMem(0xc67b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7f6e);
        EXPECT(gbc.pc(), 0xc67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67b), 0xcb);
        EXPECT(gbc.readMem(0xc67c), 0xb9);
        // CB B9 02E4
        gbc.setState(0x3cca, 0x74f0, 0x8e30, 0xb562, 0xcda9, 0x2498, 0x0, 0x1);
        gbc.writeMem(0x3cca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x74f0);
        EXPECT(gbc.pc(), 0x3ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02E5
        gbc.setState(0x5fa1, 0x6c60, 0xe640, 0xc6d4, 0xc489, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x5fa1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6c60);
        EXPECT(gbc.pc(), 0x5fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02E6
        gbc.setState(0xec97, 0xd655, 0x6ef0, 0x3d64, 0x37e7, 0x29ed, 0x0, 0x0);
        gbc.writeMem(0xec97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd655);
        EXPECT(gbc.pc(), 0xec99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec97), 0xcb);
        EXPECT(gbc.readMem(0xec98), 0xb9);
        // CB B9 02E7
        gbc.setState(0x6c2c, 0x9077, 0xa7c0, 0x821c, 0x75c, 0xda47, 0x0, 0x1);
        gbc.writeMem(0x6c2c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9077);
        EXPECT(gbc.pc(), 0x6c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02E8
        gbc.setState(0x6455, 0x2e4f, 0xdf50, 0x8fa6, 0x9193, 0x5a25, 0x0, 0x1);
        gbc.writeMem(0x6455, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2e4f);
        EXPECT(gbc.pc(), 0x6457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02E9
        gbc.setState(0x7edc, 0xa43a, 0xe830, 0x23fd, 0x99e4, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0x7edc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa43a);
        EXPECT(gbc.pc(), 0x7ede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02EA
        gbc.setState(0xb274, 0x3879, 0x890, 0x6542, 0x4aac, 0xf3c2, 0x1, 0x0);
        gbc.writeMem(0xb274, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3879);
        EXPECT(gbc.pc(), 0xb276);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb274), 0xcb);
        EXPECT(gbc.readMem(0xb275), 0xb9);
        // CB B9 02EB
        gbc.setState(0xef86, 0xb7c3, 0xe00, 0x9900, 0x7c9f, 0x3ec, 0x1, 0x0);
        gbc.writeMem(0xef86, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb7c3);
        EXPECT(gbc.pc(), 0xef88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef86), 0xcb);
        EXPECT(gbc.readMem(0xef87), 0xb9);
        // CB B9 02EC
        gbc.setState(0xa471, 0x1ab6, 0xd580, 0xd791, 0xf993, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0xa471, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0xa473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa471), 0xcb);
        EXPECT(gbc.readMem(0xa472), 0xb9);
        // CB B9 02ED
        gbc.setState(0x22f0, 0x79af, 0x38f0, 0x584, 0x99f3, 0xeb05, 0x0, 0x1);
        gbc.writeMem(0x22f0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x79af);
        EXPECT(gbc.pc(), 0x22f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02EE
        gbc.setState(0x23d5, 0x646c, 0xb5f0, 0x8f24, 0x1a1d, 0xce1f, 0x1, 0x0);
        gbc.writeMem(0x23d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x646c);
        EXPECT(gbc.pc(), 0x23d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02F0
        gbc.setState(0x4cdc, 0xdd23, 0x5da0, 0x4584, 0x4b84, 0xc7d5, 0x0, 0x0);
        gbc.writeMem(0x4cdc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xdd23);
        EXPECT(gbc.pc(), 0x4cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02F1
        gbc.setState(0xd298, 0x286b, 0xb710, 0xafab, 0xc7e6, 0x2b17, 0x0, 0x0);
        gbc.writeMem(0xd298, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x286b);
        EXPECT(gbc.pc(), 0xd29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd298), 0xcb);
        EXPECT(gbc.readMem(0xd299), 0xb9);
        // CB B9 02F2
        gbc.setState(0x6d0c, 0x213f, 0xf110, 0xbdc1, 0x50a3, 0xcc1f, 0x0, 0x0);
        gbc.writeMem(0x6d0c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x213f);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 02F3
        gbc.setState(0xc2ee, 0x8f1a, 0x11d0, 0x7bd0, 0x54b9, 0x72b6, 0x1, 0x0);
        gbc.writeMem(0xc2ee, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8f1a);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ee), 0xcb);
        EXPECT(gbc.readMem(0xc2ef), 0xb9);
        // CB B9 02F4
        gbc.setState(0x910e, 0x1024, 0xb7f0, 0xc01a, 0xe0f7, 0x1561, 0x1, 0x0);
        gbc.writeMem(0x910e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1024);
        EXPECT(gbc.pc(), 0x9110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910e), 0xcb);
        EXPECT(gbc.readMem(0x910f), 0xb9);
        // CB B9 02F5
        gbc.setState(0xb7ac, 0x50ba, 0x400, 0x53d9, 0x4fb9, 0xd020, 0x0, 0x1);
        gbc.writeMem(0xb7ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x50ba);
        EXPECT(gbc.pc(), 0xb7ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ac), 0xcb);
        EXPECT(gbc.readMem(0xb7ad), 0xb9);
        // CB B9 02F7
        gbc.setState(0x8e54, 0x434b, 0x6a10, 0x6aef, 0x8bd5, 0x170d, 0x0, 0x0);
        gbc.writeMem(0x8e54, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x434b);
        EXPECT(gbc.pc(), 0x8e56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e54), 0xcb);
        EXPECT(gbc.readMem(0x8e55), 0xb9);
        // CB B9 02F8
        gbc.setState(0x7961, 0xe513, 0x7860, 0x990d, 0xe56b, 0x91ad, 0x0, 0x1);
        gbc.writeMem(0x7961, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe513);
        EXPECT(gbc.pc(), 0x7963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02F9
        gbc.setState(0xa305, 0xe055, 0xf590, 0xfe78, 0x8912, 0x72da, 0x0, 0x1);
        gbc.writeMem(0xa305, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe055);
        EXPECT(gbc.pc(), 0xa307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa305), 0xcb);
        EXPECT(gbc.readMem(0xa306), 0xb9);
        // CB B9 02FA
        gbc.setState(0x2ef3, 0x3fb7, 0x5500, 0xb4ca, 0x22f4, 0xe844, 0x1, 0x0);
        gbc.writeMem(0x2ef3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3fb7);
        EXPECT(gbc.pc(), 0x2ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 02FB
        gbc.setState(0x9a87, 0x4177, 0x5450, 0x4861, 0xc038, 0x6f56, 0x0, 0x0);
        gbc.writeMem(0x9a87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4177);
        EXPECT(gbc.pc(), 0x9a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a87), 0xcb);
        EXPECT(gbc.readMem(0x9a88), 0xb9);
        // CB B9 02FC
        gbc.setState(0xee95, 0x8d20, 0x3020, 0x8fb0, 0x7942, 0xbd40, 0x1, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8d20);
        EXPECT(gbc.pc(), 0xee97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee95), 0xcb);
        EXPECT(gbc.readMem(0xee96), 0xb9);
        // CB B9 02FD
        gbc.setState(0xc1a1, 0xc693, 0x8510, 0x4b35, 0xe5f6, 0x624d, 0x1, 0x1);
        gbc.writeMem(0xc1a1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc693);
        EXPECT(gbc.pc(), 0xc1a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a1), 0xcb);
        EXPECT(gbc.readMem(0xc1a2), 0xb9);
        // CB B9 02FE
        gbc.setState(0x365c, 0x45c6, 0x2e60, 0x15c5, 0x8ba4, 0xfe36, 0x0, 0x1);
        gbc.writeMem(0x365c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x45c6);
        EXPECT(gbc.pc(), 0x365e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0300
        gbc.setState(0x6c53, 0x50a, 0x2c90, 0x32b7, 0x5146, 0x2a1c, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x50a);
        EXPECT(gbc.pc(), 0x6c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0301
        gbc.setState(0x2500, 0x81d, 0x9730, 0x75f9, 0xe9b4, 0x44f4, 0x1, 0x1);
        gbc.writeMem(0x2500, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x81d);
        EXPECT(gbc.pc(), 0x2502);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0302
        gbc.setState(0x18e2, 0xec53, 0xde80, 0x16dd, 0x1596, 0x451, 0x0, 0x0);
        gbc.writeMem(0x18e2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xec53);
        EXPECT(gbc.pc(), 0x18e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0303
        gbc.setState(0x7f49, 0xe509, 0x69b0, 0x13d1, 0x540, 0x1ae0, 0x0, 0x0);
        gbc.writeMem(0x7f49, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe509);
        EXPECT(gbc.pc(), 0x7f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0304
        gbc.setState(0x79cd, 0x6ce3, 0xf370, 0x42fe, 0xb075, 0x252e, 0x1, 0x1);
        gbc.writeMem(0x79cd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6ce3);
        EXPECT(gbc.pc(), 0x79cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0305
        gbc.setState(0xc516, 0xed01, 0x7b80, 0xb836, 0xc2e2, 0x1b38, 0x1, 0x1);
        gbc.writeMem(0xc516, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xed01);
        EXPECT(gbc.pc(), 0xc518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc516), 0xcb);
        EXPECT(gbc.readMem(0xc517), 0xb9);
        // CB B9 0306
        gbc.setState(0xa5f7, 0xb301, 0x7d0, 0x8b18, 0xf98c, 0x690b, 0x1, 0x0);
        gbc.writeMem(0xa5f7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb301);
        EXPECT(gbc.pc(), 0xa5f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f7), 0xcb);
        EXPECT(gbc.readMem(0xa5f8), 0xb9);
        // CB B9 0308
        gbc.setState(0x6a97, 0x7b65, 0x28d0, 0xb2b8, 0xe0f1, 0xa763, 0x0, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7b65);
        EXPECT(gbc.pc(), 0x6a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0309
        gbc.setState(0x421d, 0xd4f0, 0x4b00, 0xc0bc, 0xf6f2, 0x844f, 0x1, 0x1);
        gbc.writeMem(0x421d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd4f0);
        EXPECT(gbc.pc(), 0x421f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 030A
        gbc.setState(0x4fc5, 0x9f9c, 0x7340, 0x712e, 0xaf6a, 0x64bd, 0x1, 0x1);
        gbc.writeMem(0x4fc5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9f9c);
        EXPECT(gbc.pc(), 0x4fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 030B
        gbc.setState(0x2981, 0xb1bf, 0x2000, 0xcfd0, 0x27fe, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0x2981, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb1bf);
        EXPECT(gbc.pc(), 0x2983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 030C
        gbc.setState(0x35c7, 0x920b, 0xe780, 0x71ab, 0xa786, 0x85bd, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x920b);
        EXPECT(gbc.pc(), 0x35c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 030D
        gbc.setState(0x1db7, 0x8e59, 0x99f0, 0xa06b, 0xa096, 0xfcf3, 0x1, 0x0);
        gbc.writeMem(0x1db7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8e59);
        EXPECT(gbc.pc(), 0x1db9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 030E
        gbc.setState(0xd1b4, 0x3886, 0x7940, 0x54b8, 0xce2b, 0x8860, 0x0, 0x0);
        gbc.writeMem(0xd1b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3886);
        EXPECT(gbc.pc(), 0xd1b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b4), 0xcb);
        EXPECT(gbc.readMem(0xd1b5), 0xb9);
        // CB B9 030F
        gbc.setState(0x81d8, 0xc73a, 0xb1b0, 0xedea, 0xa0a3, 0xa18e, 0x0, 0x1);
        gbc.writeMem(0x81d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc73a);
        EXPECT(gbc.pc(), 0x81da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d8), 0xcb);
        EXPECT(gbc.readMem(0x81d9), 0xb9);
        // CB B9 0310
        gbc.setState(0xacf5, 0x7a29, 0xafd0, 0x70d4, 0x48e8, 0x64e9, 0x1, 0x1);
        gbc.writeMem(0xacf5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7a29);
        EXPECT(gbc.pc(), 0xacf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacf5), 0xcb);
        EXPECT(gbc.readMem(0xacf6), 0xb9);
        // CB B9 0311
        gbc.setState(0x10da, 0x9142, 0xc2e0, 0xbceb, 0x7575, 0x5ad2, 0x1, 0x1);
        gbc.writeMem(0x10da, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9142);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0312
        gbc.setState(0x4e0a, 0xf42d, 0x1af0, 0x5a03, 0x2490, 0x8633, 0x0, 0x0);
        gbc.writeMem(0x4e0a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf42d);
        EXPECT(gbc.pc(), 0x4e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0313
        gbc.setState(0x9ce, 0x1b47, 0x1ad0, 0x4afa, 0x45b, 0xbb12, 0x1, 0x1);
        gbc.writeMem(0x9ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1b47);
        EXPECT(gbc.pc(), 0x9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0314
        gbc.setState(0x7bcb, 0x450d, 0xab10, 0x529, 0xda04, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0x7bcb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x450d);
        EXPECT(gbc.pc(), 0x7bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0315
        gbc.setState(0xdaa, 0xfc46, 0x57f0, 0x5402, 0x63b2, 0xd292, 0x1, 0x1);
        gbc.writeMem(0xdaa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xfc46);
        EXPECT(gbc.pc(), 0xdac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0316
        gbc.setState(0x9ca9, 0xbcd1, 0x2360, 0x5b84, 0x4dd1, 0xb42b, 0x0, 0x0);
        gbc.writeMem(0x9ca9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbcd1);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca9), 0xcb);
        EXPECT(gbc.readMem(0x9caa), 0xb9);
        // CB B9 0317
        gbc.setState(0x4b60, 0xfce, 0x8e40, 0xd6de, 0xf924, 0x3a8d, 0x1, 0x0);
        gbc.writeMem(0x4b60, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfce);
        EXPECT(gbc.pc(), 0x4b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0318
        gbc.setState(0x5161, 0x4b60, 0xa430, 0x750a, 0x3eb4, 0x22ba, 0x1, 0x1);
        gbc.writeMem(0x5161, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4b60);
        EXPECT(gbc.pc(), 0x5163);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0319
        gbc.setState(0xb6d8, 0x1ea0, 0xd0e0, 0x6deb, 0xf0e3, 0x7400, 0x1, 0x1);
        gbc.writeMem(0xb6d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1ea0);
        EXPECT(gbc.pc(), 0xb6da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d8), 0xcb);
        EXPECT(gbc.readMem(0xb6d9), 0xb9);
        // CB B9 031A
        gbc.setState(0x6245, 0xd2c6, 0x3a10, 0xed0, 0xa6dc, 0xa179, 0x1, 0x1);
        gbc.writeMem(0x6245, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd2c6);
        EXPECT(gbc.pc(), 0x6247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 031B
        gbc.setState(0x895b, 0x39ee, 0xc660, 0xb8f5, 0x1ebf, 0xe6fa, 0x0, 0x0);
        gbc.writeMem(0x895b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x39ee);
        EXPECT(gbc.pc(), 0x895d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895b), 0xcb);
        EXPECT(gbc.readMem(0x895c), 0xb9);
        // CB B9 031C
        gbc.setState(0x92fa, 0x9416, 0xb790, 0x7f8d, 0xd268, 0xce48, 0x0, 0x0);
        gbc.writeMem(0x92fa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0x92fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92fa), 0xcb);
        EXPECT(gbc.readMem(0x92fb), 0xb9);
        // CB B9 031D
        gbc.setState(0x7e86, 0xf8b8, 0x1bf0, 0x30f9, 0x3a59, 0x3f23, 0x0, 0x1);
        gbc.writeMem(0x7e86, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf8b8);
        EXPECT(gbc.pc(), 0x7e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 031E
        gbc.setState(0xdf6d, 0x16fe, 0xba0, 0x9691, 0x27fb, 0x5a5a, 0x1, 0x1);
        gbc.writeMem(0xdf6d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x16fe);
        EXPECT(gbc.pc(), 0xdf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6d), 0xcb);
        EXPECT(gbc.readMem(0xdf6e), 0xb9);
        // CB B9 031F
        gbc.setState(0x7be5, 0x74bc, 0x8cf0, 0x1db0, 0xf716, 0xf68d, 0x0, 0x0);
        gbc.writeMem(0x7be5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x74bc);
        EXPECT(gbc.pc(), 0x7be7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0320
        gbc.setState(0xa3ae, 0x28e2, 0x5930, 0xf7ee, 0x8830, 0xfef4, 0x1, 0x0);
        gbc.writeMem(0xa3ae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x28e2);
        EXPECT(gbc.pc(), 0xa3b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ae), 0xcb);
        EXPECT(gbc.readMem(0xa3af), 0xb9);
        // CB B9 0321
        gbc.setState(0xc8bb, 0x69c2, 0x3d90, 0xa912, 0x2848, 0x37f7, 0x0, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x69c2);
        EXPECT(gbc.pc(), 0xc8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bb), 0xcb);
        EXPECT(gbc.readMem(0xc8bc), 0xb9);
        // CB B9 0322
        gbc.setState(0x979e, 0x7318, 0x6da0, 0x8956, 0xa409, 0x1f50, 0x0, 0x1);
        gbc.writeMem(0x979e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7318);
        EXPECT(gbc.pc(), 0x97a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x979e), 0xcb);
        EXPECT(gbc.readMem(0x979f), 0xb9);
        // CB B9 0323
        gbc.setState(0x4a53, 0x7928, 0x8570, 0xaee9, 0xea17, 0x9bfa, 0x0, 0x1);
        gbc.writeMem(0x4a53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7928);
        EXPECT(gbc.pc(), 0x4a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0325
        gbc.setState(0x74b0, 0x6087, 0x4110, 0x4c2b, 0xa348, 0x2b5d, 0x0, 0x1);
        gbc.writeMem(0x74b0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6087);
        EXPECT(gbc.pc(), 0x74b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0327
        gbc.setState(0x5825, 0xc15e, 0x7210, 0x9c3d, 0xc2da, 0x1603, 0x0, 0x0);
        gbc.writeMem(0x5825, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xc15e);
        EXPECT(gbc.pc(), 0x5827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0328
        gbc.setState(0xa30a, 0x1d82, 0x7850, 0x7155, 0x817d, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1d82);
        EXPECT(gbc.pc(), 0xa30c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa30a), 0xcb);
        EXPECT(gbc.readMem(0xa30b), 0xb9);
        // CB B9 0329
        gbc.setState(0xa126, 0x3a7c, 0xb320, 0x824a, 0xc585, 0x5333, 0x1, 0x0);
        gbc.writeMem(0xa126, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3a7c);
        EXPECT(gbc.pc(), 0xa128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa126), 0xcb);
        EXPECT(gbc.readMem(0xa127), 0xb9);
        // CB B9 032A
        gbc.setState(0x5f53, 0x1c6b, 0xc6b0, 0xba4d, 0x14b1, 0x1e69, 0x1, 0x0);
        gbc.writeMem(0x5f53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1c6b);
        EXPECT(gbc.pc(), 0x5f55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 032B
        gbc.setState(0x9154, 0xa9ef, 0x8d40, 0x83d2, 0xcdc7, 0xcb05, 0x0, 0x0);
        gbc.writeMem(0x9154, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xa9ef);
        EXPECT(gbc.pc(), 0x9156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9154), 0xcb);
        EXPECT(gbc.readMem(0x9155), 0xb9);
        // CB B9 032C
        gbc.setState(0xcb40, 0xd8f, 0xd330, 0x6ded, 0xf6a, 0xccd3, 0x1, 0x1);
        gbc.writeMem(0xcb40, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd8f);
        EXPECT(gbc.pc(), 0xcb42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb40), 0xcb);
        EXPECT(gbc.readMem(0xcb41), 0xb9);
        // CB B9 032D
        gbc.setState(0x7c3f, 0xfba9, 0xb250, 0xbd26, 0x6ce, 0xf108, 0x1, 0x1);
        gbc.writeMem(0x7c3f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfba9);
        EXPECT(gbc.pc(), 0x7c41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 032E
        gbc.setState(0xa058, 0x7916, 0x77b0, 0x25b9, 0x159a, 0x79a1, 0x1, 0x0);
        gbc.writeMem(0xa058, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7916);
        EXPECT(gbc.pc(), 0xa05a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa058), 0xcb);
        EXPECT(gbc.readMem(0xa059), 0xb9);
        // CB B9 032F
        gbc.setState(0xc217, 0xd9cd, 0x14a0, 0xa4c7, 0x98c9, 0xc0bd, 0x1, 0x0);
        gbc.writeMem(0xc217, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd9cd);
        EXPECT(gbc.pc(), 0xc219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc217), 0xcb);
        EXPECT(gbc.readMem(0xc218), 0xb9);
        // CB B9 0330
        gbc.setState(0xeb6b, 0x3cb9, 0x2490, 0x912e, 0xd0b4, 0xa636, 0x1, 0x1);
        gbc.writeMem(0xeb6b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3cb9);
        EXPECT(gbc.pc(), 0xeb6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6b), 0xcb);
        EXPECT(gbc.readMem(0xeb6c), 0xb9);
        // CB B9 0332
        gbc.setState(0xe60b, 0xb3d0, 0xe4d0, 0xcd01, 0xe24e, 0x5987, 0x0, 0x1);
        gbc.writeMem(0xe60b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb3d0);
        EXPECT(gbc.pc(), 0xe60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60b), 0xcb);
        EXPECT(gbc.readMem(0xe60c), 0xb9);
        // CB B9 0333
        gbc.setState(0x7890, 0xfe62, 0x80e0, 0x9aaf, 0xd17f, 0xb7c, 0x1, 0x0);
        gbc.writeMem(0x7890, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfe62);
        EXPECT(gbc.pc(), 0x7892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0334
        gbc.setState(0x6567, 0x8c88, 0x360, 0xaaf3, 0xfefb, 0x75e, 0x1, 0x0);
        gbc.writeMem(0x6567, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8c88);
        EXPECT(gbc.pc(), 0x6569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0336
        gbc.setState(0xe951, 0x7c26, 0xf040, 0x94ce, 0x9e21, 0xd3b9, 0x1, 0x0);
        gbc.writeMem(0xe951, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7c26);
        EXPECT(gbc.pc(), 0xe953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe951), 0xcb);
        EXPECT(gbc.readMem(0xe952), 0xb9);
        // CB B9 0337
        gbc.setState(0xb04a, 0x90d, 0xa4d0, 0xf4ae, 0x23b7, 0x1ade, 0x1, 0x1);
        gbc.writeMem(0xb04a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x90d);
        EXPECT(gbc.pc(), 0xb04c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04a), 0xcb);
        EXPECT(gbc.readMem(0xb04b), 0xb9);
        // CB B9 0339
        gbc.setState(0xb568, 0x2dbd, 0x4420, 0x9ff7, 0xd511, 0x87a7, 0x0, 0x1);
        gbc.writeMem(0xb568, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2dbd);
        EXPECT(gbc.pc(), 0xb56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb568), 0xcb);
        EXPECT(gbc.readMem(0xb569), 0xb9);
        // CB B9 033A
        gbc.setState(0x5197, 0xb194, 0x82f0, 0x740e, 0x4a10, 0x4d4b, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb194);
        EXPECT(gbc.pc(), 0x5199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 033B
        gbc.setState(0x7b34, 0xc59a, 0x1de0, 0x61a4, 0xa5e3, 0x6b52, 0x1, 0x0);
        gbc.writeMem(0x7b34, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xc59a);
        EXPECT(gbc.pc(), 0x7b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 033C
        gbc.setState(0x3d8a, 0xc0b8, 0x8550, 0xc789, 0x68ca, 0x1681, 0x0, 0x0);
        gbc.writeMem(0x3d8a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc0b8);
        EXPECT(gbc.pc(), 0x3d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 033E
        gbc.setState(0xed16, 0x48ec, 0xe1e0, 0x95b3, 0x5342, 0xf728, 0x1, 0x1);
        gbc.writeMem(0xed16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x48ec);
        EXPECT(gbc.pc(), 0xed18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed16), 0xcb);
        EXPECT(gbc.readMem(0xed17), 0xb9);
        // CB B9 033F
        gbc.setState(0x1040, 0xfe80, 0x80c0, 0xf4ea, 0xe261, 0x87b8, 0x0, 0x0);
        gbc.writeMem(0x1040, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfe80);
        EXPECT(gbc.pc(), 0x1042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0340
        gbc.setState(0x4d77, 0xbcc6, 0x5230, 0x14e6, 0xb46e, 0x5dbe, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbcc6);
        EXPECT(gbc.pc(), 0x4d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0341
        gbc.setState(0x94de, 0x5b65, 0xb590, 0xf541, 0x2ab9, 0x987a, 0x1, 0x1);
        gbc.writeMem(0x94de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5b65);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94de), 0xcb);
        EXPECT(gbc.readMem(0x94df), 0xb9);
        // CB B9 0342
        gbc.setState(0x6cb3, 0x5d1, 0x8b60, 0x649c, 0x39bf, 0xff39, 0x0, 0x1);
        gbc.writeMem(0x6cb3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5d1);
        EXPECT(gbc.pc(), 0x6cb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0343
        gbc.setState(0x8d7f, 0x362d, 0xada0, 0xd8f8, 0xff97, 0x29e4, 0x0, 0x1);
        gbc.writeMem(0x8d7f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x362d);
        EXPECT(gbc.pc(), 0x8d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d7f), 0xcb);
        EXPECT(gbc.readMem(0x8d80), 0xb9);
        // CB B9 0344
        gbc.setState(0x945a, 0xd722, 0x26b0, 0x71d5, 0xd9bf, 0x7ff, 0x1, 0x1);
        gbc.writeMem(0x945a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd722);
        EXPECT(gbc.pc(), 0x945c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945a), 0xcb);
        EXPECT(gbc.readMem(0x945b), 0xb9);
        // CB B9 0345
        gbc.setState(0x7993, 0x111a, 0x2350, 0xbfc2, 0x8811, 0x7220, 0x1, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x111a);
        EXPECT(gbc.pc(), 0x7995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0346
        gbc.setState(0x9cd9, 0x811b, 0x46f0, 0xc4b1, 0x103c, 0x8907, 0x0, 0x0);
        gbc.writeMem(0x9cd9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x811b);
        EXPECT(gbc.pc(), 0x9cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cd9), 0xcb);
        EXPECT(gbc.readMem(0x9cda), 0xb9);
        // CB B9 0347
        gbc.setState(0xbf5b, 0xa123, 0x2b40, 0x8288, 0x4805, 0xd46f, 0x0, 0x0);
        gbc.writeMem(0xbf5b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa123);
        EXPECT(gbc.pc(), 0xbf5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5b), 0xcb);
        EXPECT(gbc.readMem(0xbf5c), 0xb9);
        // CB B9 0348
        gbc.setState(0x3ef4, 0x950a, 0x5e10, 0x58b4, 0xd25, 0xee5a, 0x0, 0x1);
        gbc.writeMem(0x3ef4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x950a);
        EXPECT(gbc.pc(), 0x3ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0349
        gbc.setState(0x6cce, 0x6ac1, 0x7a0, 0x4651, 0x303c, 0x5111, 0x1, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6ac1);
        EXPECT(gbc.pc(), 0x6cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 034B
        gbc.setState(0x7f9f, 0x1c44, 0x6f60, 0xc158, 0x4715, 0x4588, 0x0, 0x1);
        gbc.writeMem(0x7f9f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1c44);
        EXPECT(gbc.pc(), 0x7fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 034C
        gbc.setState(0x8362, 0x4217, 0x6930, 0xcb5f, 0x4dd1, 0x71d9, 0x0, 0x0);
        gbc.writeMem(0x8362, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x4217);
        EXPECT(gbc.pc(), 0x8364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8362), 0xcb);
        EXPECT(gbc.readMem(0x8363), 0xb9);
        // CB B9 034D
        gbc.setState(0x87aa, 0x560, 0xaa00, 0x6d6a, 0x9743, 0x18ea, 0x1, 0x1);
        gbc.writeMem(0x87aa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x560);
        EXPECT(gbc.pc(), 0x87ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87aa), 0xcb);
        EXPECT(gbc.readMem(0x87ab), 0xb9);
        // CB B9 034E
        gbc.setState(0x28e4, 0xc2a8, 0x53b0, 0x1c46, 0xa1cc, 0x5db8, 0x0, 0x0);
        gbc.writeMem(0x28e4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc2a8);
        EXPECT(gbc.pc(), 0x28e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 034F
        gbc.setState(0x1e45, 0x7982, 0x6290, 0xb4b1, 0xf9c4, 0x609, 0x0, 0x0);
        gbc.writeMem(0x1e45, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7982);
        EXPECT(gbc.pc(), 0x1e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0350
        gbc.setState(0x4b42, 0xe294, 0x8a10, 0xd1c1, 0x96dd, 0x15fa, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe294);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0351
        gbc.setState(0x2b99, 0x82c3, 0xf00, 0x3df3, 0x4b55, 0x3a7e, 0x0, 0x1);
        gbc.writeMem(0x2b99, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x82c3);
        EXPECT(gbc.pc(), 0x2b9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0352
        gbc.setState(0xec4b, 0x5b74, 0x7b80, 0x88ab, 0x4da1, 0x3c38, 0x1, 0x1);
        gbc.writeMem(0xec4b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5b74);
        EXPECT(gbc.pc(), 0xec4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec4b), 0xcb);
        EXPECT(gbc.readMem(0xec4c), 0xb9);
        // CB B9 0354
        gbc.setState(0xedb3, 0xda7d, 0x85e0, 0x84cc, 0xd7ab, 0xf198, 0x1, 0x0);
        gbc.writeMem(0xedb3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xda7d);
        EXPECT(gbc.pc(), 0xedb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb3), 0xcb);
        EXPECT(gbc.readMem(0xedb4), 0xb9);
        // CB B9 0355
        gbc.setState(0xd2ca, 0x17f1, 0x58b0, 0x1f71, 0x47dd, 0x82b6, 0x0, 0x0);
        gbc.writeMem(0xd2ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x17f1);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ca), 0xcb);
        EXPECT(gbc.readMem(0xd2cb), 0xb9);
        // CB B9 0356
        gbc.setState(0x5f39, 0xe946, 0x3fe0, 0x8828, 0x7833, 0xfbf6, 0x1, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe946);
        EXPECT(gbc.pc(), 0x5f3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0357
        gbc.setState(0x41d5, 0x5a32, 0x58e0, 0xbbae, 0x9c85, 0x7200, 0x0, 0x0);
        gbc.writeMem(0x41d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5a32);
        EXPECT(gbc.pc(), 0x41d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0358
        gbc.setState(0x1b1a, 0x4711, 0x4270, 0x7c57, 0x6627, 0xc24b, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x4711);
        EXPECT(gbc.pc(), 0x1b1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0359
        gbc.setState(0xc3cf, 0x8724, 0xc5c0, 0x27, 0x43c6, 0x481e, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x8724);
        EXPECT(gbc.pc(), 0xc3d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3cf), 0xcb);
        EXPECT(gbc.readMem(0xc3d0), 0xb9);
        // CB B9 035A
        gbc.setState(0x3e03, 0xbbc7, 0x2840, 0xc473, 0x6d3b, 0x59d3, 0x1, 0x0);
        gbc.writeMem(0x3e03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbbc7);
        EXPECT(gbc.pc(), 0x3e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 035B
        gbc.setState(0x979b, 0xd0fe, 0x610, 0x167c, 0x6237, 0x750a, 0x0, 0x1);
        gbc.writeMem(0x979b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd0fe);
        EXPECT(gbc.pc(), 0x979d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979b), 0xcb);
        EXPECT(gbc.readMem(0x979c), 0xb9);
        // CB B9 035C
        gbc.setState(0xafd5, 0x3d05, 0xce90, 0x260e, 0x9da4, 0x30bd, 0x1, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3d05);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0xb9);
        // CB B9 035E
        gbc.setState(0xa2c8, 0xe888, 0x8080, 0x57e0, 0xdc09, 0xfb83, 0x0, 0x0);
        gbc.writeMem(0xa2c8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe888);
        EXPECT(gbc.pc(), 0xa2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c8), 0xcb);
        EXPECT(gbc.readMem(0xa2c9), 0xb9);
        // CB B9 035F
        gbc.setState(0x748a, 0x6487, 0xfeb0, 0xd980, 0x13f9, 0xf4f9, 0x0, 0x0);
        gbc.writeMem(0x748a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6487);
        EXPECT(gbc.pc(), 0x748c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0360
        gbc.setState(0x704e, 0xccab, 0x9a20, 0xc553, 0x784b, 0x96ae, 0x1, 0x0);
        gbc.writeMem(0x704e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xccab);
        EXPECT(gbc.pc(), 0x7050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0361
        gbc.setState(0x5daa, 0xf9bc, 0x1ba0, 0x3a1e, 0x4e73, 0x5d45, 0x1, 0x1);
        gbc.writeMem(0x5daa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf9bc);
        EXPECT(gbc.pc(), 0x5dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0362
        gbc.setState(0xde1b, 0x44e, 0x2320, 0x1167, 0x8761, 0xc0c2, 0x0, 0x0);
        gbc.writeMem(0xde1b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x44e);
        EXPECT(gbc.pc(), 0xde1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1b), 0xcb);
        EXPECT(gbc.readMem(0xde1c), 0xb9);
        // CB B9 0363
        gbc.setState(0x8e4b, 0x135b, 0xd0d0, 0x7244, 0xc3fa, 0xae91, 0x1, 0x0);
        gbc.writeMem(0x8e4b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x135b);
        EXPECT(gbc.pc(), 0x8e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e4b), 0xcb);
        EXPECT(gbc.readMem(0x8e4c), 0xb9);
        // CB B9 0364
        gbc.setState(0x51d9, 0x5cbb, 0xc2b0, 0xdb5f, 0xccfe, 0x9966, 0x1, 0x0);
        gbc.writeMem(0x51d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5cbb);
        EXPECT(gbc.pc(), 0x51db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0365
        gbc.setState(0x8286, 0x92d0, 0x26c0, 0x3025, 0x5d34, 0xfad3, 0x0, 0x1);
        gbc.writeMem(0x8286, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x92d0);
        EXPECT(gbc.pc(), 0x8288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8286), 0xcb);
        EXPECT(gbc.readMem(0x8287), 0xb9);
        // CB B9 0366
        gbc.setState(0x5bd0, 0x1380, 0x2d20, 0xfb80, 0x411f, 0x3f28, 0x0, 0x0);
        gbc.writeMem(0x5bd0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1380);
        EXPECT(gbc.pc(), 0x5bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0367
        gbc.setState(0x37ca, 0x1599, 0x9c40, 0xb1e1, 0xc226, 0xb99, 0x1, 0x1);
        gbc.writeMem(0x37ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1599);
        EXPECT(gbc.pc(), 0x37cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0368
        gbc.setState(0x33f4, 0x83f1, 0x86b0, 0xa088, 0x1910, 0x4139, 0x1, 0x1);
        gbc.writeMem(0x33f4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x83f1);
        EXPECT(gbc.pc(), 0x33f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0369
        gbc.setState(0x6070, 0xf94b, 0x2d00, 0x4863, 0xdc8a, 0xd37c, 0x0, 0x0);
        gbc.writeMem(0x6070, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf94b);
        EXPECT(gbc.pc(), 0x6072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 036A
        gbc.setState(0xd4ba, 0x6840, 0xdce0, 0x3e3c, 0x1e34, 0x627f, 0x0, 0x1);
        gbc.writeMem(0xd4ba, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6840);
        EXPECT(gbc.pc(), 0xd4bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ba), 0xcb);
        EXPECT(gbc.readMem(0xd4bb), 0xb9);
        // CB B9 036B
        gbc.setState(0x592c, 0x48fa, 0xfd60, 0xdb98, 0x29e, 0x376c, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x48fa);
        EXPECT(gbc.pc(), 0x592e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 036D
        gbc.setState(0xa305, 0xfa9a, 0xb20, 0x2110, 0xb87c, 0x7999, 0x1, 0x1);
        gbc.writeMem(0xa305, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfa9a);
        EXPECT(gbc.pc(), 0xa307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa305), 0xcb);
        EXPECT(gbc.readMem(0xa306), 0xb9);
        // CB B9 036E
        gbc.setState(0x466b, 0x62f1, 0x3460, 0x58cc, 0x56bf, 0xd0fb, 0x0, 0x0);
        gbc.writeMem(0x466b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x62f1);
        EXPECT(gbc.pc(), 0x466d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 036F
        gbc.setState(0x4877, 0x22fd, 0x5360, 0xe9ad, 0x45e0, 0x606a, 0x1, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x22fd);
        EXPECT(gbc.pc(), 0x4879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0370
        gbc.setState(0x7236, 0xa9d5, 0x5830, 0xf436, 0x3806, 0x3f84, 0x1, 0x1);
        gbc.writeMem(0x7236, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa9d5);
        EXPECT(gbc.pc(), 0x7238);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0372
        gbc.setState(0xbab6, 0x1deb, 0x5710, 0x774, 0x611c, 0x7862, 0x1, 0x1);
        gbc.writeMem(0xbab6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1deb);
        EXPECT(gbc.pc(), 0xbab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab6), 0xcb);
        EXPECT(gbc.readMem(0xbab7), 0xb9);
        // CB B9 0373
        gbc.setState(0x74cb, 0x6f59, 0x7300, 0xb934, 0xc193, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6f59);
        EXPECT(gbc.pc(), 0x74cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0374
        gbc.setState(0x3d6a, 0x8a48, 0x40e0, 0xd880, 0xa1fb, 0x7cfb, 0x1, 0x1);
        gbc.writeMem(0x3d6a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8a48);
        EXPECT(gbc.pc(), 0x3d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0375
        gbc.setState(0x6906, 0x1349, 0x310, 0x25f1, 0x91e3, 0x3fc5, 0x1, 0x0);
        gbc.writeMem(0x6906, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1349);
        EXPECT(gbc.pc(), 0x6908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0376
        gbc.setState(0x7dcd, 0x6b7e, 0x4460, 0xd784, 0x71ef, 0xd6ab, 0x0, 0x0);
        gbc.writeMem(0x7dcd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6b7e);
        EXPECT(gbc.pc(), 0x7dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0377
        gbc.setState(0x82cf, 0xaf74, 0xb0, 0x313b, 0xb2cd, 0x9e7b, 0x0, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xaf74);
        EXPECT(gbc.pc(), 0x82d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cf), 0xcb);
        EXPECT(gbc.readMem(0x82d0), 0xb9);
        // CB B9 0378
        gbc.setState(0xb269, 0x7fea, 0xf0c0, 0xfb7d, 0x963e, 0xdc9e, 0x1, 0x1);
        gbc.writeMem(0xb269, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7fea);
        EXPECT(gbc.pc(), 0xb26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb269), 0xcb);
        EXPECT(gbc.readMem(0xb26a), 0xb9);
        // CB B9 0379
        gbc.setState(0xd4e, 0xe052, 0x87d0, 0xbfbe, 0xa5b5, 0x8aae, 0x0, 0x1);
        gbc.writeMem(0xd4e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe052);
        EXPECT(gbc.pc(), 0xd50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 037A
        gbc.setState(0x4192, 0xeea2, 0x9500, 0x867a, 0xe022, 0x1dc5, 0x1, 0x0);
        gbc.writeMem(0x4192, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xeea2);
        EXPECT(gbc.pc(), 0x4194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 037B
        gbc.setState(0xd046, 0x1e98, 0xd500, 0x9a26, 0x1325, 0x953b, 0x1, 0x0);
        gbc.writeMem(0xd046, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1e98);
        EXPECT(gbc.pc(), 0xd048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd046), 0xcb);
        EXPECT(gbc.readMem(0xd047), 0xb9);
        // CB B9 037C
        gbc.setState(0x466f, 0x9dc7, 0x6920, 0x22ad, 0x7a8c, 0xc410, 0x1, 0x0);
        gbc.writeMem(0x466f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9dc7);
        EXPECT(gbc.pc(), 0x4671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 037D
        gbc.setState(0xad7f, 0x30b9, 0xb30, 0xc772, 0x81d4, 0x5a49, 0x0, 0x1);
        gbc.writeMem(0xad7f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x30b9);
        EXPECT(gbc.pc(), 0xad81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7f), 0xcb);
        EXPECT(gbc.readMem(0xad80), 0xb9);
        // CB B9 037E
        gbc.setState(0xa2fb, 0x88e9, 0xc350, 0x1439, 0x20ee, 0x9cc2, 0x1, 0x0);
        gbc.writeMem(0xa2fb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x88e9);
        EXPECT(gbc.pc(), 0xa2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2fb), 0xcb);
        EXPECT(gbc.readMem(0xa2fc), 0xb9);
        // CB B9 037F
        gbc.setState(0x10c, 0x7fc6, 0x43c0, 0xd5e, 0x6dd6, 0x45f0, 0x1, 0x1);
        gbc.writeMem(0x10c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x7fc6);
        EXPECT(gbc.pc(), 0x10e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0380
        gbc.setState(0x99c0, 0xb7c1, 0x3810, 0x494d, 0x25f1, 0xa007, 0x1, 0x0);
        gbc.writeMem(0x99c0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb7c1);
        EXPECT(gbc.pc(), 0x99c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c0), 0xcb);
        EXPECT(gbc.readMem(0x99c1), 0xb9);
        // CB B9 0381
        gbc.setState(0xcadc, 0x148d, 0x66a0, 0x72ab, 0xcffb, 0x7e2d, 0x1, 0x1);
        gbc.writeMem(0xcadc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x148d);
        EXPECT(gbc.pc(), 0xcade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcadc), 0xcb);
        EXPECT(gbc.readMem(0xcadd), 0xb9);
        // CB B9 0382
        gbc.setState(0xcb50, 0x652, 0xdb20, 0x1ab, 0x750c, 0xd99, 0x1, 0x1);
        gbc.writeMem(0xcb50, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x652);
        EXPECT(gbc.pc(), 0xcb52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb50), 0xcb);
        EXPECT(gbc.readMem(0xcb51), 0xb9);
        // CB B9 0383
        gbc.setState(0xbf3, 0x7fbf, 0x4730, 0xa0a3, 0xe596, 0x19f3, 0x0, 0x0);
        gbc.writeMem(0xbf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7fbf);
        EXPECT(gbc.pc(), 0xbf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0384
        gbc.setState(0x2ef9, 0xab41, 0xb680, 0x663b, 0x1f13, 0xc7f2, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xab41);
        EXPECT(gbc.pc(), 0x2efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0385
        gbc.setState(0x74b2, 0x4bc4, 0xced0, 0x5e73, 0x3cbe, 0x578b, 0x1, 0x1);
        gbc.writeMem(0x74b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4bc4);
        EXPECT(gbc.pc(), 0x74b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0386
        gbc.setState(0x7c00, 0x2194, 0xa4b0, 0x568f, 0x71d7, 0x2979, 0x0, 0x1);
        gbc.writeMem(0x7c00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2194);
        EXPECT(gbc.pc(), 0x7c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0387
        gbc.setState(0x9762, 0x33c8, 0x6180, 0x90bb, 0x8db1, 0x508a, 0x0, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x33c8);
        EXPECT(gbc.pc(), 0x9764);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9762), 0xcb);
        EXPECT(gbc.readMem(0x9763), 0xb9);
        // CB B9 0388
        gbc.setState(0x8984, 0xb63d, 0xd740, 0xd4db, 0x9921, 0x8246, 0x1, 0x1);
        gbc.writeMem(0x8984, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xb63d);
        EXPECT(gbc.pc(), 0x8986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8984), 0xcb);
        EXPECT(gbc.readMem(0x8985), 0xb9);
        // CB B9 0389
        gbc.setState(0x9dd, 0x6f71, 0x99d0, 0xc60b, 0x8fb7, 0x1f7f, 0x0, 0x0);
        gbc.writeMem(0x9dd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6f71);
        EXPECT(gbc.pc(), 0x9df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 038A
        gbc.setState(0x8b44, 0x36e, 0xed30, 0x73aa, 0x83a4, 0x8c6d, 0x0, 0x1);
        gbc.writeMem(0x8b44, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x36e);
        EXPECT(gbc.pc(), 0x8b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b44), 0xcb);
        EXPECT(gbc.readMem(0x8b45), 0xb9);
        // CB B9 038B
        gbc.setState(0xb7aa, 0xd112, 0xef60, 0x2d39, 0x6101, 0xc610, 0x1, 0x0);
        gbc.writeMem(0xb7aa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd112);
        EXPECT(gbc.pc(), 0xb7ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7aa), 0xcb);
        EXPECT(gbc.readMem(0xb7ab), 0xb9);
        // CB B9 038C
        gbc.setState(0x97bb, 0x7faa, 0xc700, 0x8bd6, 0x993b, 0xc979, 0x1, 0x0);
        gbc.writeMem(0x97bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7faa);
        EXPECT(gbc.pc(), 0x97bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97bb), 0xcb);
        EXPECT(gbc.readMem(0x97bc), 0xb9);
        // CB B9 038D
        gbc.setState(0x7595, 0xa089, 0xd6c0, 0x3033, 0x8650, 0xb8f9, 0x1, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xa089);
        EXPECT(gbc.pc(), 0x7597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 038E
        gbc.setState(0x3cd5, 0x6334, 0x87a0, 0xe86a, 0x9237, 0x58ec, 0x0, 0x1);
        gbc.writeMem(0x3cd5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6334);
        EXPECT(gbc.pc(), 0x3cd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 038F
        gbc.setState(0x7daa, 0x5d19, 0xa90, 0xd2e8, 0x2875, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x7daa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5d19);
        EXPECT(gbc.pc(), 0x7dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0390
        gbc.setState(0xe851, 0xc46d, 0x28f0, 0x39c3, 0x7772, 0x4eac, 0x1, 0x1);
        gbc.writeMem(0xe851, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc46d);
        EXPECT(gbc.pc(), 0xe853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe851), 0xcb);
        EXPECT(gbc.readMem(0xe852), 0xb9);
        // CB B9 0391
        gbc.setState(0x9820, 0xc819, 0x5f70, 0x6ec7, 0xea57, 0x1e2f, 0x1, 0x1);
        gbc.writeMem(0x9820, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc819);
        EXPECT(gbc.pc(), 0x9822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9820), 0xcb);
        EXPECT(gbc.readMem(0x9821), 0xb9);
        // CB B9 0392
        gbc.setState(0xe315, 0x6620, 0x63f0, 0x1b9d, 0xdc3c, 0x4f0d, 0x1, 0x0);
        gbc.writeMem(0xe315, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6620);
        EXPECT(gbc.pc(), 0xe317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe315), 0xcb);
        EXPECT(gbc.readMem(0xe316), 0xb9);
        // CB B9 0393
        gbc.setState(0x4f05, 0x9276, 0x8540, 0xa041, 0x1bde, 0x1d32, 0x0, 0x0);
        gbc.writeMem(0x4f05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9276);
        EXPECT(gbc.pc(), 0x4f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0394
        gbc.setState(0x259c, 0xa95c, 0x7da0, 0x167, 0x5954, 0xa943, 0x0, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa95c);
        EXPECT(gbc.pc(), 0x259e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0395
        gbc.setState(0x5cf3, 0x980e, 0x580, 0xce63, 0x470e, 0xf994, 0x0, 0x1);
        gbc.writeMem(0x5cf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x980e);
        EXPECT(gbc.pc(), 0x5cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 0396
        gbc.setState(0x5507, 0x1513, 0xbf30, 0x740c, 0x4b4, 0x110, 0x1, 0x0);
        gbc.writeMem(0x5507, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1513);
        EXPECT(gbc.pc(), 0x5509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 0397
        gbc.setState(0xa6ed, 0xdf35, 0x4f60, 0x31ab, 0x4661, 0xef1e, 0x0, 0x0);
        gbc.writeMem(0xa6ed, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdf35);
        EXPECT(gbc.pc(), 0xa6ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ed), 0xcb);
        EXPECT(gbc.readMem(0xa6ee), 0xb9);
        // CB B9 0398
        gbc.setState(0xc70f, 0xcf17, 0x6ab0, 0xfa1a, 0xcc80, 0x3794, 0x0, 0x0);
        gbc.writeMem(0xc70f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcf17);
        EXPECT(gbc.pc(), 0xc711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc70f), 0xcb);
        EXPECT(gbc.readMem(0xc710), 0xb9);
        // CB B9 0399
        gbc.setState(0xec71, 0xa22e, 0x6830, 0xabd9, 0xdea1, 0x3fe9, 0x1, 0x1);
        gbc.writeMem(0xec71, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa22e);
        EXPECT(gbc.pc(), 0xec73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec71), 0xcb);
        EXPECT(gbc.readMem(0xec72), 0xb9);
        // CB B9 039A
        gbc.setState(0x8f56, 0x1cc1, 0xc8c0, 0x8bc8, 0x7e32, 0x9361, 0x1, 0x1);
        gbc.writeMem(0x8f56, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1cc1);
        EXPECT(gbc.pc(), 0x8f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f56), 0xcb);
        EXPECT(gbc.readMem(0x8f57), 0xb9);
        // CB B9 039B
        gbc.setState(0xa984, 0x7313, 0x4da0, 0x2d01, 0x24f8, 0x6b21, 0x1, 0x1);
        gbc.writeMem(0xa984, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7313);
        EXPECT(gbc.pc(), 0xa986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa984), 0xcb);
        EXPECT(gbc.readMem(0xa985), 0xb9);
        // CB B9 039C
        gbc.setState(0xe609, 0x691c, 0x5a20, 0x6838, 0x6044, 0xfcdc, 0x0, 0x1);
        gbc.writeMem(0xe609, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x691c);
        EXPECT(gbc.pc(), 0xe60b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe609), 0xcb);
        EXPECT(gbc.readMem(0xe60a), 0xb9);
        // CB B9 039D
        gbc.setState(0xacd2, 0x9dc5, 0x3c0, 0x59f6, 0x73d7, 0xc8a9, 0x0, 0x0);
        gbc.writeMem(0xacd2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9dc5);
        EXPECT(gbc.pc(), 0xacd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd2), 0xcb);
        EXPECT(gbc.readMem(0xacd3), 0xb9);
        // CB B9 039E
        gbc.setState(0xa384, 0x565c, 0xf2b0, 0xe734, 0x3156, 0x46a4, 0x1, 0x1);
        gbc.writeMem(0xa384, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x565c);
        EXPECT(gbc.pc(), 0xa386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa384), 0xcb);
        EXPECT(gbc.readMem(0xa385), 0xb9);
        // CB B9 039F
        gbc.setState(0x86ac, 0x322, 0xfb40, 0x5f3, 0x9900, 0x1fa3, 0x1, 0x1);
        gbc.writeMem(0x86ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x322);
        EXPECT(gbc.pc(), 0x86ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ac), 0xcb);
        EXPECT(gbc.readMem(0x86ad), 0xb9);
        // CB B9 03A0
        gbc.setState(0x42b2, 0x5c8d, 0x2540, 0x1273, 0x273f, 0x8711, 0x0, 0x0);
        gbc.writeMem(0x42b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5c8d);
        EXPECT(gbc.pc(), 0x42b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03A1
        gbc.setState(0xd044, 0x830a, 0x6640, 0xbe81, 0x677c, 0x71f3, 0x0, 0x1);
        gbc.writeMem(0xd044, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x830a);
        EXPECT(gbc.pc(), 0xd046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd044), 0xcb);
        EXPECT(gbc.readMem(0xd045), 0xb9);
        // CB B9 03A2
        gbc.setState(0x4ce3, 0xbaec, 0x9c50, 0x482b, 0xa1eb, 0xd60d, 0x1, 0x0);
        gbc.writeMem(0x4ce3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbaec);
        EXPECT(gbc.pc(), 0x4ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03A3
        gbc.setState(0x6aa3, 0x3d15, 0x9e00, 0x5cf8, 0x9092, 0x3afc, 0x0, 0x1);
        gbc.writeMem(0x6aa3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3d15);
        EXPECT(gbc.pc(), 0x6aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03A4
        gbc.setState(0xd831, 0x2fec, 0x4b70, 0x7d1e, 0xe43e, 0x41f, 0x1, 0x0);
        gbc.writeMem(0xd831, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2fec);
        EXPECT(gbc.pc(), 0xd833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd831), 0xcb);
        EXPECT(gbc.readMem(0xd832), 0xb9);
        // CB B9 03A5
        gbc.setState(0x9d91, 0x38e3, 0x6140, 0x3dfb, 0x74e1, 0xf37c, 0x0, 0x0);
        gbc.writeMem(0x9d91, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x38e3);
        EXPECT(gbc.pc(), 0x9d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d91), 0xcb);
        EXPECT(gbc.readMem(0x9d92), 0xb9);
        // CB B9 03A6
        gbc.setState(0xc7e0, 0x38d, 0xead0, 0x977f, 0xc2cc, 0x3bcf, 0x1, 0x0);
        gbc.writeMem(0xc7e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x38d);
        EXPECT(gbc.pc(), 0xc7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e0), 0xcb);
        EXPECT(gbc.readMem(0xc7e1), 0xb9);
        // CB B9 03A7
        gbc.setState(0xb26e, 0xdaf7, 0x9090, 0x290b, 0x1158, 0x7f0d, 0x0, 0x1);
        gbc.writeMem(0xb26e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdaf7);
        EXPECT(gbc.pc(), 0xb270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb26e), 0xcb);
        EXPECT(gbc.readMem(0xb26f), 0xb9);
        // CB B9 03A8
        gbc.setState(0x28b4, 0xc9a5, 0xee20, 0xe53b, 0x1530, 0x3927, 0x1, 0x1);
        gbc.writeMem(0x28b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc9a5);
        EXPECT(gbc.pc(), 0x28b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03A9
        gbc.setState(0x82cd, 0x55ac, 0xfe10, 0x9b43, 0x5a8c, 0x3b58, 0x0, 0x0);
        gbc.writeMem(0x82cd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x55ac);
        EXPECT(gbc.pc(), 0x82cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cd), 0xcb);
        EXPECT(gbc.readMem(0x82ce), 0xb9);
        // CB B9 03AA
        gbc.setState(0x4a87, 0x8d2d, 0xbb80, 0xe734, 0x422b, 0x8ebb, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8d2d);
        EXPECT(gbc.pc(), 0x4a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03AB
        gbc.setState(0x3dd4, 0x5a65, 0x5160, 0x3c3, 0xe0a5, 0xb518, 0x1, 0x0);
        gbc.writeMem(0x3dd4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5a65);
        EXPECT(gbc.pc(), 0x3dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03AC
        gbc.setState(0xbbf2, 0x19c2, 0x1e90, 0x2305, 0x739f, 0x8052, 0x0, 0x0);
        gbc.writeMem(0xbbf2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x19c2);
        EXPECT(gbc.pc(), 0xbbf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf2), 0xcb);
        EXPECT(gbc.readMem(0xbbf3), 0xb9);
        // CB B9 03AE
        gbc.setState(0x33bb, 0xf9bf, 0xe420, 0xf26a, 0xaec0, 0x2337, 0x1, 0x0);
        gbc.writeMem(0x33bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf9bf);
        EXPECT(gbc.pc(), 0x33bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03AF
        gbc.setState(0xa905, 0xd6e4, 0xead0, 0x693c, 0x239e, 0x9de, 0x1, 0x1);
        gbc.writeMem(0xa905, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd6e4);
        EXPECT(gbc.pc(), 0xa907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa905), 0xcb);
        EXPECT(gbc.readMem(0xa906), 0xb9);
        // CB B9 03B0
        gbc.setState(0x44d5, 0xb2cd, 0xc280, 0xb36b, 0x4e17, 0x6584, 0x1, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb2cd);
        EXPECT(gbc.pc(), 0x44d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03B1
        gbc.setState(0x6f97, 0x9dea, 0x1450, 0xd77d, 0xbc33, 0x39fd, 0x1, 0x0);
        gbc.writeMem(0x6f97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9dea);
        EXPECT(gbc.pc(), 0x6f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03B2
        gbc.setState(0x7556, 0x19a1, 0x3d40, 0xd9e1, 0x73be, 0xe44a, 0x1, 0x0);
        gbc.writeMem(0x7556, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x19a1);
        EXPECT(gbc.pc(), 0x7558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03B3
        gbc.setState(0xdf1e, 0x7730, 0x8fa0, 0xbb2b, 0x5a67, 0x67a0, 0x1, 0x0);
        gbc.writeMem(0xdf1e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7730);
        EXPECT(gbc.pc(), 0xdf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf1e), 0xcb);
        EXPECT(gbc.readMem(0xdf1f), 0xb9);
        // CB B9 03B4
        gbc.setState(0x1be8, 0x62ff, 0x1520, 0x6d4a, 0x34e3, 0x4316, 0x0, 0x0);
        gbc.writeMem(0x1be8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x62ff);
        EXPECT(gbc.pc(), 0x1bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03B5
        gbc.setState(0x460, 0xf1f0, 0x2850, 0x33b3, 0x3db0, 0x438a, 0x0, 0x1);
        gbc.writeMem(0x460, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf1f0);
        EXPECT(gbc.pc(), 0x462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03B6
        gbc.setState(0x27a4, 0x600c, 0x4a50, 0x885a, 0x8ccc, 0x731, 0x1, 0x0);
        gbc.writeMem(0x27a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x27a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03B7
        gbc.setState(0x228e, 0xd97, 0x5cb0, 0xba96, 0x96f9, 0xf7b6, 0x0, 0x1);
        gbc.writeMem(0x228e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd97);
        EXPECT(gbc.pc(), 0x2290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03B8
        gbc.setState(0x8390, 0xc828, 0xeab0, 0x3447, 0xc83a, 0x9d02, 0x0, 0x0);
        gbc.writeMem(0x8390, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc828);
        EXPECT(gbc.pc(), 0x8392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8390), 0xcb);
        EXPECT(gbc.readMem(0x8391), 0xb9);
        // CB B9 03B9
        gbc.setState(0x2b9c, 0x475c, 0x42e0, 0x7508, 0xb3e4, 0xdddf, 0x1, 0x1);
        gbc.writeMem(0x2b9c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x475c);
        EXPECT(gbc.pc(), 0x2b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03BA
        gbc.setState(0x3005, 0xa131, 0x2210, 0x5372, 0xf192, 0x34e, 0x0, 0x0);
        gbc.writeMem(0x3005, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xa131);
        EXPECT(gbc.pc(), 0x3007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03BB
        gbc.setState(0x63e8, 0xc70a, 0x5630, 0xfe51, 0xde79, 0xb4d3, 0x1, 0x1);
        gbc.writeMem(0x63e8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xc70a);
        EXPECT(gbc.pc(), 0x63ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03BC
        gbc.setState(0xd19e, 0x11a5, 0x2e20, 0x54f6, 0x860f, 0xdf81, 0x1, 0x0);
        gbc.writeMem(0xd19e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x11a5);
        EXPECT(gbc.pc(), 0xd1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd19e), 0xcb);
        EXPECT(gbc.readMem(0xd19f), 0xb9);
        // CB B9 03BD
        gbc.setState(0x2ccc, 0x7e8f, 0xf850, 0x4261, 0xc5a, 0xdad4, 0x1, 0x1);
        gbc.writeMem(0x2ccc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7e8f);
        EXPECT(gbc.pc(), 0x2cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03BE
        gbc.setState(0x9c94, 0x50d1, 0xeae0, 0xf23c, 0x2868, 0xe35b, 0x1, 0x0);
        gbc.writeMem(0x9c94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x50d1);
        EXPECT(gbc.pc(), 0x9c96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c94), 0xcb);
        EXPECT(gbc.readMem(0x9c95), 0xb9);
        // CB B9 03BF
        gbc.setState(0x27f0, 0xb61, 0xff80, 0x7898, 0xa7ca, 0xe68e, 0x1, 0x0);
        gbc.writeMem(0x27f0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb61);
        EXPECT(gbc.pc(), 0x27f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03C0
        gbc.setState(0x7617, 0xbe9f, 0x3d40, 0x64c9, 0xc51d, 0x8b30, 0x1, 0x1);
        gbc.writeMem(0x7617, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbe9f);
        EXPECT(gbc.pc(), 0x7619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03C1
        gbc.setState(0xee3, 0x7c42, 0xec50, 0x2abe, 0x3a97, 0x1bc8, 0x1, 0x0);
        gbc.writeMem(0xee3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7c42);
        EXPECT(gbc.pc(), 0xee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03C3
        gbc.setState(0x9601, 0x2b32, 0xac50, 0x297d, 0x876c, 0x96ec, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2b32);
        EXPECT(gbc.pc(), 0x9603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9601), 0xcb);
        EXPECT(gbc.readMem(0x9602), 0xb9);
        // CB B9 03C4
        gbc.setState(0x4fbc, 0x4a95, 0x3530, 0xa4e2, 0x6d2c, 0x8cd3, 0x0, 0x0);
        gbc.writeMem(0x4fbc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4a95);
        EXPECT(gbc.pc(), 0x4fbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03C6
        gbc.setState(0x6849, 0x4b24, 0xe1d0, 0xf13f, 0xb1de, 0x86d2, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4b24);
        EXPECT(gbc.pc(), 0x684b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03C7
        gbc.setState(0xe2e0, 0x3643, 0x3c80, 0x4002, 0x3b8b, 0x389d, 0x0, 0x1);
        gbc.writeMem(0xe2e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3643);
        EXPECT(gbc.pc(), 0xe2e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e0), 0xcb);
        EXPECT(gbc.readMem(0xe2e1), 0xb9);
        // CB B9 03C8
        gbc.setState(0xdbfb, 0x25f8, 0x4b20, 0x976d, 0x6d47, 0x1168, 0x0, 0x1);
        gbc.writeMem(0xdbfb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x25f8);
        EXPECT(gbc.pc(), 0xdbfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbfb), 0xcb);
        EXPECT(gbc.readMem(0xdbfc), 0xb9);
        // CB B9 03C9
        gbc.setState(0x3aa3, 0x4416, 0xbbc0, 0xeedf, 0xcd39, 0xdde, 0x0, 0x0);
        gbc.writeMem(0x3aa3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4416);
        EXPECT(gbc.pc(), 0x3aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03CA
        gbc.setState(0xc718, 0xd132, 0x5e0, 0x786a, 0x3a2a, 0xfabd, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd132);
        EXPECT(gbc.pc(), 0xc71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc718), 0xcb);
        EXPECT(gbc.readMem(0xc719), 0xb9);
        // CB B9 03CB
        gbc.setState(0x29e3, 0x83c1, 0xd1c0, 0xaeec, 0xdeb8, 0x8a45, 0x0, 0x1);
        gbc.writeMem(0x29e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x83c1);
        EXPECT(gbc.pc(), 0x29e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03CC
        gbc.setState(0x1b74, 0x8a78, 0x41d0, 0x9a75, 0x9012, 0xb75a, 0x0, 0x0);
        gbc.writeMem(0x1b74, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8a78);
        EXPECT(gbc.pc(), 0x1b76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03CD
        gbc.setState(0xea18, 0xdb1d, 0xadd0, 0x40a6, 0x7cce, 0x31e1, 0x1, 0x1);
        gbc.writeMem(0xea18, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdb1d);
        EXPECT(gbc.pc(), 0xea1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea18), 0xcb);
        EXPECT(gbc.readMem(0xea19), 0xb9);
        // CB B9 03CE
        gbc.setState(0xabb1, 0xc0f7, 0x1280, 0xd923, 0xd260, 0xe97e, 0x0, 0x1);
        gbc.writeMem(0xabb1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc0f7);
        EXPECT(gbc.pc(), 0xabb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb1), 0xcb);
        EXPECT(gbc.readMem(0xabb2), 0xb9);
        // CB B9 03CF
        gbc.setState(0xe7bc, 0x3be0, 0x51b0, 0xe609, 0xe21f, 0xd033, 0x0, 0x1);
        gbc.writeMem(0xe7bc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0xe7be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bc), 0xcb);
        EXPECT(gbc.readMem(0xe7bd), 0xb9);
        // CB B9 03D0
        gbc.setState(0xba95, 0xc425, 0x87f0, 0xfb13, 0xa955, 0x740a, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc425);
        EXPECT(gbc.pc(), 0xba97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba95), 0xcb);
        EXPECT(gbc.readMem(0xba96), 0xb9);
        // CB B9 03D1
        gbc.setState(0xb434, 0x21ad, 0x30b0, 0x870c, 0x184e, 0x274e, 0x1, 0x0);
        gbc.writeMem(0xb434, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0xb436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb434), 0xcb);
        EXPECT(gbc.readMem(0xb435), 0xb9);
        // CB B9 03D2
        gbc.setState(0x41a7, 0xee7c, 0x1f70, 0x58e1, 0x3ea9, 0x790b, 0x1, 0x0);
        gbc.writeMem(0x41a7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xee7c);
        EXPECT(gbc.pc(), 0x41a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03D4
        gbc.setState(0x5e9a, 0xd454, 0x60e0, 0x42ec, 0x4d47, 0x12b4, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd454);
        EXPECT(gbc.pc(), 0x5e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03D5
        gbc.setState(0x29da, 0x7c6e, 0xce40, 0x83c6, 0xcc18, 0xf67e, 0x0, 0x1);
        gbc.writeMem(0x29da, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7c6e);
        EXPECT(gbc.pc(), 0x29dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03D7
        gbc.setState(0x7941, 0x61cc, 0x2d50, 0x8caa, 0x7291, 0xdac3, 0x0, 0x0);
        gbc.writeMem(0x7941, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x61cc);
        EXPECT(gbc.pc(), 0x7943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03D8
        gbc.setState(0x6b25, 0xf06f, 0x2a90, 0x1dd7, 0x4c4c, 0xfa15, 0x0, 0x1);
        gbc.writeMem(0x6b25, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf06f);
        EXPECT(gbc.pc(), 0x6b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03D9
        gbc.setState(0x23c8, 0x7148, 0xc5b0, 0x4283, 0x73cd, 0x8e47, 0x1, 0x1);
        gbc.writeMem(0x23c8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7148);
        EXPECT(gbc.pc(), 0x23ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03DA
        gbc.setState(0x965a, 0x583f, 0x8730, 0x4919, 0x3766, 0x121a, 0x1, 0x0);
        gbc.writeMem(0x965a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x583f);
        EXPECT(gbc.pc(), 0x965c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x965a), 0xcb);
        EXPECT(gbc.readMem(0x965b), 0xb9);
        // CB B9 03DB
        gbc.setState(0x3493, 0xdba4, 0xbb00, 0x2bcb, 0x6b22, 0x1b28, 0x1, 0x0);
        gbc.writeMem(0x3493, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdba4);
        EXPECT(gbc.pc(), 0x3495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03DC
        gbc.setState(0xe13d, 0x277d, 0x53e0, 0x1e75, 0xc97e, 0x2265, 0x0, 0x1);
        gbc.writeMem(0xe13d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x277d);
        EXPECT(gbc.pc(), 0xe13f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe13d), 0xcb);
        EXPECT(gbc.readMem(0xe13e), 0xb9);
        // CB B9 03DD
        gbc.setState(0x4ecf, 0x713d, 0x98f0, 0x42e2, 0x3977, 0x7e0, 0x1, 0x0);
        gbc.writeMem(0x4ecf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x713d);
        EXPECT(gbc.pc(), 0x4ed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03DE
        gbc.setState(0x41c4, 0x7905, 0x7d20, 0x9972, 0x77b0, 0xb573, 0x1, 0x0);
        gbc.writeMem(0x41c4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7905);
        EXPECT(gbc.pc(), 0x41c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B9 03E0
        gbc.setState(0xc622, 0x35f3, 0x5130, 0x78fe, 0xb182, 0x72ca, 0x1, 0x1);
        gbc.writeMem(0xc622, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x35f3);
        EXPECT(gbc.pc(), 0xc624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc622), 0xcb);
        EXPECT(gbc.readMem(0xc623), 0xb9);
        // CB B9 03E1
        gbc.setState(0x2a46, 0x6e25, 0x9690, 0xf24c, 0x5598, 0x32df, 0x0, 0x1);
        gbc.writeMem(0x2a46, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6e25);
        EXPECT(gbc.pc(), 0x2a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03E2
        gbc.setState(0xa722, 0x7fd4, 0xb340, 0x31bc, 0x893c, 0x61fa, 0x1, 0x1);
        gbc.writeMem(0xa722, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7fd4);
        EXPECT(gbc.pc(), 0xa724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa722), 0xcb);
        EXPECT(gbc.readMem(0xa723), 0xb9);
        // CB B9 03E3
        gbc.setState(0xd40a, 0x8988, 0x74c0, 0x8ab4, 0xbb44, 0x6b0a, 0x1, 0x0);
        gbc.writeMem(0xd40a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8988);
        EXPECT(gbc.pc(), 0xd40c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd40a), 0xcb);
        EXPECT(gbc.readMem(0xd40b), 0xb9);
        // CB B9 03E4
        gbc.setState(0x7eb9, 0x6141, 0x8490, 0xc664, 0x9608, 0x2f1b, 0x0, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6141);
        EXPECT(gbc.pc(), 0x7ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B9 03E5
        gbc.setState(0xb796, 0xa519, 0x2f00, 0x4922, 0xd3f3, 0xda39, 0x0, 0x1);
        gbc.writeMem(0xb796, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa519);
        EXPECT(gbc.pc(), 0xb798);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb796), 0xcb);
        EXPECT(gbc.readMem(0xb797), 0xb9);
        // CB B9 03E7
        gbc.setState(0xc437, 0xd150, 0x41b0, 0xd67d, 0xac20, 0xd845, 0x0, 0x0);
        gbc.writeMem(0xc437, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd150);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc437), 0xcb);
        EXPECT(gbc.readMem(0xc438), 0xb9);
    }
