    TEST(gbcemu, opcode_cb_b9) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B9 0000
        gbc.setState(0xbb90, 0x5474, 0x3ba0, 0xd9b, 0x93d2, 0x7cd6, 0x0, 0x1);
        gbc.writeMem(0xbb90, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5474, gbc.sp());
        EXPECT(0xbb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb90));
        EXPECT(0xb9, gbc.readMem(0xbb91));
        // CB B9 0001
        gbc.setState(0xad07, 0xb622, 0x5160, 0x1af5, 0xaec1, 0xf52d, 0x0, 0x0);
        gbc.writeMem(0xad07, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb622, gbc.sp());
        EXPECT(0xad09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad07));
        EXPECT(0xb9, gbc.readMem(0xad08));
        // CB B9 0002
        gbc.setState(0x636d, 0x706e, 0xaab0, 0x3705, 0x2202, 0x660, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x706e, gbc.sp());
        EXPECT(0x636f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0003
        gbc.setState(0xed97, 0x2c54, 0xe760, 0xb912, 0xa0ea, 0x67cb, 0x1, 0x0);
        gbc.writeMem(0xed97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2c54, gbc.sp());
        EXPECT(0xed99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed97));
        EXPECT(0xb9, gbc.readMem(0xed98));
        // CB B9 0004
        gbc.setState(0xe859, 0x857f, 0xe250, 0x8286, 0xb861, 0xf574, 0x0, 0x1);
        gbc.writeMem(0xe859, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x857f, gbc.sp());
        EXPECT(0xe85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe859));
        EXPECT(0xb9, gbc.readMem(0xe85a));
        // CB B9 0005
        gbc.setState(0x16f7, 0x8e0d, 0xf710, 0x6928, 0xdb84, 0x667, 0x1, 0x1);
        gbc.writeMem(0x16f7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8e0d, gbc.sp());
        EXPECT(0x16f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0006
        gbc.setState(0xb502, 0x8e, 0x9250, 0xcf9a, 0xae2c, 0xa97a, 0x0, 0x1);
        gbc.writeMem(0xb502, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8e, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb502));
        EXPECT(0xb9, gbc.readMem(0xb503));
        // CB B9 0007
        gbc.setState(0xc63, 0x5472, 0x1ff0, 0x7f8a, 0xb63a, 0xc4a4, 0x0, 0x1);
        gbc.writeMem(0xc63, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5472, gbc.sp());
        EXPECT(0xc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0008
        gbc.setState(0xdb03, 0x1403, 0xc260, 0x905b, 0x5e18, 0x5bd, 0x0, 0x1);
        gbc.writeMem(0xdb03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1403, gbc.sp());
        EXPECT(0xdb05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb03));
        EXPECT(0xb9, gbc.readMem(0xdb04));
        // CB B9 0009
        gbc.setState(0x8dcd, 0xabe, 0x9140, 0xb083, 0x964f, 0x9e80, 0x1, 0x1);
        gbc.writeMem(0x8dcd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xabe, gbc.sp());
        EXPECT(0x8dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcd));
        EXPECT(0xb9, gbc.readMem(0x8dce));
        // CB B9 000A
        gbc.setState(0xb5b3, 0x58d1, 0x3060, 0x6f9d, 0x25c, 0x64ac, 0x1, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x58d1, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b3));
        EXPECT(0xb9, gbc.readMem(0xb5b4));
        // CB B9 000B
        gbc.setState(0xb62c, 0x575a, 0x22d0, 0x1c8d, 0x416e, 0xb805, 0x1, 0x1);
        gbc.writeMem(0xb62c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x575a, gbc.sp());
        EXPECT(0xb62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62c));
        EXPECT(0xb9, gbc.readMem(0xb62d));
        // CB B9 000C
        gbc.setState(0x42bd, 0xc734, 0x9920, 0x19e8, 0x31a4, 0x5098, 0x0, 0x1);
        gbc.writeMem(0x42bd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc734, gbc.sp());
        EXPECT(0x42bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 000D
        gbc.setState(0xcb96, 0x1236, 0x4780, 0x907e, 0x6ad5, 0x9b0, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1236, gbc.sp());
        EXPECT(0xcb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb96));
        EXPECT(0xb9, gbc.readMem(0xcb97));
        // CB B9 000E
        gbc.setState(0x36de, 0x47, 0xb90, 0xd597, 0x8ade, 0x10af, 0x1, 0x0);
        gbc.writeMem(0x36de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x47, gbc.sp());
        EXPECT(0x36e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 000F
        gbc.setState(0xb5b9, 0x884c, 0x7ec0, 0xa37b, 0x16f, 0x59f5, 0x1, 0x0);
        gbc.writeMem(0xb5b9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x884c, gbc.sp());
        EXPECT(0xb5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b9));
        EXPECT(0xb9, gbc.readMem(0xb5ba));
        // CB B9 0010
        gbc.setState(0x566c, 0xbd13, 0x2270, 0xcc19, 0x3f4f, 0x8a36, 0x1, 0x1);
        gbc.writeMem(0x566c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbd13, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0011
        gbc.setState(0x43cc, 0x8f94, 0x5990, 0xf67, 0x3b12, 0xaf32, 0x0, 0x1);
        gbc.writeMem(0x43cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8f94, gbc.sp());
        EXPECT(0x43ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0012
        gbc.setState(0x43ec, 0x9d50, 0xd340, 0xd42c, 0x23b1, 0x7f7f, 0x1, 0x1);
        gbc.writeMem(0x43ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0x43ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0013
        gbc.setState(0x3754, 0x3389, 0x7380, 0xa743, 0xa0a, 0x3db3, 0x0, 0x0);
        gbc.writeMem(0x3754, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3389, gbc.sp());
        EXPECT(0x3756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0014
        gbc.setState(0xa2dc, 0x7b34, 0x6680, 0xcdbe, 0x2aa5, 0xe4bd, 0x1, 0x0);
        gbc.writeMem(0xa2dc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7b34, gbc.sp());
        EXPECT(0xa2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dc));
        EXPECT(0xb9, gbc.readMem(0xa2dd));
        // CB B9 0015
        gbc.setState(0x618c, 0x526d, 0xe680, 0xb570, 0x817, 0x5502, 0x1, 0x1);
        gbc.writeMem(0x618c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x526d, gbc.sp());
        EXPECT(0x618e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0016
        gbc.setState(0xc766, 0xcf, 0xe1f0, 0x4a01, 0xa49e, 0x6dab, 0x1, 0x1);
        gbc.writeMem(0xc766, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcf, gbc.sp());
        EXPECT(0xc768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc766));
        EXPECT(0xb9, gbc.readMem(0xc767));
        // CB B9 0018
        gbc.setState(0x2204, 0xb362, 0xebf0, 0x3c32, 0x8587, 0x1477, 0x1, 0x1);
        gbc.writeMem(0x2204, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb362, gbc.sp());
        EXPECT(0x2206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0019
        gbc.setState(0x86e0, 0x8154, 0xc380, 0xe318, 0xeaf4, 0xf4d, 0x0, 0x1);
        gbc.writeMem(0x86e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8154, gbc.sp());
        EXPECT(0x86e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e0));
        EXPECT(0xb9, gbc.readMem(0x86e1));
        // CB B9 001A
        gbc.setState(0xcb36, 0x6380, 0x3fe0, 0x40c, 0x5308, 0x666b, 0x0, 0x0);
        gbc.writeMem(0xcb36, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0xcb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb36));
        EXPECT(0xb9, gbc.readMem(0xcb37));
        // CB B9 001B
        gbc.setState(0x730e, 0xdf8f, 0xbe70, 0x418a, 0xead6, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0x730e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xdf8f, gbc.sp());
        EXPECT(0x7310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 001C
        gbc.setState(0xb5c9, 0x9ea9, 0xd930, 0x777e, 0xdea3, 0x8509, 0x1, 0x0);
        gbc.writeMem(0xb5c9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9ea9, gbc.sp());
        EXPECT(0xb5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c9));
        EXPECT(0xb9, gbc.readMem(0xb5ca));
        // CB B9 001D
        gbc.setState(0x3158, 0xf023, 0x84e0, 0xa26, 0xb2b8, 0x3c55, 0x0, 0x0);
        gbc.writeMem(0x3158, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0x315a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 001E
        gbc.setState(0x4732, 0x32d6, 0x4730, 0xd8e9, 0xffe, 0xef9a, 0x0, 0x1);
        gbc.writeMem(0x4732, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x32d6, gbc.sp());
        EXPECT(0x4734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 001F
        gbc.setState(0xcc94, 0xdc3, 0xa490, 0x287, 0x852c, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0xcc94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdc3, gbc.sp());
        EXPECT(0xcc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc94));
        EXPECT(0xb9, gbc.readMem(0xcc95));
        // CB B9 0020
        gbc.setState(0x2309, 0xefa5, 0xb560, 0xdbf3, 0xe96c, 0x6e1a, 0x0, 0x0);
        gbc.writeMem(0x2309, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xefa5, gbc.sp());
        EXPECT(0x230b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0021
        gbc.setState(0x61ff, 0xc210, 0xf520, 0xda89, 0xb6c5, 0xef1b, 0x0, 0x0);
        gbc.writeMem(0x61ff, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc210, gbc.sp());
        EXPECT(0x6201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0022
        gbc.setState(0xd999, 0xfaa9, 0x4260, 0xca27, 0xb7c5, 0x168c, 0x0, 0x0);
        gbc.writeMem(0xd999, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfaa9, gbc.sp());
        EXPECT(0xd99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd999));
        EXPECT(0xb9, gbc.readMem(0xd99a));
        // CB B9 0023
        gbc.setState(0xbd77, 0xfbec, 0xe930, 0x1f7f, 0x7df, 0xb030, 0x1, 0x1);
        gbc.writeMem(0xbd77, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfbec, gbc.sp());
        EXPECT(0xbd79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd77));
        EXPECT(0xb9, gbc.readMem(0xbd78));
        // CB B9 0024
        gbc.setState(0x7b6e, 0xb6, 0xe9b0, 0x167d, 0x2cc9, 0xb5e6, 0x0, 0x1);
        gbc.writeMem(0x7b6e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb6, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0025
        gbc.setState(0x4760, 0xd1cc, 0x2ea0, 0xffcf, 0x7772, 0x88a0, 0x0, 0x0);
        gbc.writeMem(0x4760, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd1cc, gbc.sp());
        EXPECT(0x4762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0026
        gbc.setState(0x201a, 0x38ee, 0xed0, 0xc273, 0x3a47, 0xca7a, 0x1, 0x0);
        gbc.writeMem(0x201a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x38ee, gbc.sp());
        EXPECT(0x201c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0027
        gbc.setState(0x6ee9, 0x42dd, 0x5670, 0xe1a5, 0x7e36, 0xb9ca, 0x1, 0x0);
        gbc.writeMem(0x6ee9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x6eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0028
        gbc.setState(0xda76, 0x5037, 0x9830, 0x8df7, 0x617e, 0x5462, 0x0, 0x0);
        gbc.writeMem(0xda76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5037, gbc.sp());
        EXPECT(0xda78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda76));
        EXPECT(0xb9, gbc.readMem(0xda77));
        // CB B9 0029
        gbc.setState(0xd8a3, 0x9fba, 0xdad0, 0xbafd, 0x34cd, 0xb228, 0x1, 0x0);
        gbc.writeMem(0xd8a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9fba, gbc.sp());
        EXPECT(0xd8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a3));
        EXPECT(0xb9, gbc.readMem(0xd8a4));
        // CB B9 002A
        gbc.setState(0x70b3, 0x8444, 0x7aa0, 0x655b, 0x3aa0, 0x435, 0x1, 0x1);
        gbc.writeMem(0x70b3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8444, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 002B
        gbc.setState(0x97bb, 0xc93c, 0xf330, 0x514d, 0x7f4e, 0x1825, 0x1, 0x1);
        gbc.writeMem(0x97bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc93c, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bb));
        EXPECT(0xb9, gbc.readMem(0x97bc));
        // CB B9 002C
        gbc.setState(0x4205, 0x3102, 0xf2d0, 0xcef6, 0x4eba, 0x9b0f, 0x0, 0x0);
        gbc.writeMem(0x4205, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3102, gbc.sp());
        EXPECT(0x4207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 002D
        gbc.setState(0x3757, 0xf7e4, 0x2350, 0xb22b, 0xc6bd, 0x9632, 0x0, 0x1);
        gbc.writeMem(0x3757, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0x3759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 002E
        gbc.setState(0x66de, 0x57a8, 0xf300, 0x441e, 0xec6, 0xf5a8, 0x0, 0x1);
        gbc.writeMem(0x66de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x57a8, gbc.sp());
        EXPECT(0x66e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 002F
        gbc.setState(0xb535, 0x86e3, 0xb770, 0x66ff, 0x8cb4, 0xdcf, 0x1, 0x0);
        gbc.writeMem(0xb535, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x86e3, gbc.sp());
        EXPECT(0xb537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb535));
        EXPECT(0xb9, gbc.readMem(0xb536));
        // CB B9 0030
        gbc.setState(0x6c77, 0xb936, 0xcff0, 0xb452, 0x3b9d, 0x9a52, 0x0, 0x0);
        gbc.writeMem(0x6c77, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb936, gbc.sp());
        EXPECT(0x6c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0031
        gbc.setState(0x5878, 0x7c1a, 0x8690, 0xf462, 0xcac2, 0x4d1c, 0x0, 0x0);
        gbc.writeMem(0x5878, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7c1a, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0032
        gbc.setState(0xd47a, 0x63c2, 0x9310, 0xf759, 0x657a, 0x422a, 0x1, 0x0);
        gbc.writeMem(0xd47a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x63c2, gbc.sp());
        EXPECT(0xd47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd47a));
        EXPECT(0xb9, gbc.readMem(0xd47b));
        // CB B9 0033
        gbc.setState(0xbe10, 0x5669, 0x36e0, 0xa36b, 0xa709, 0xb875, 0x1, 0x1);
        gbc.writeMem(0xbe10, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5669, gbc.sp());
        EXPECT(0xbe12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe10));
        EXPECT(0xb9, gbc.readMem(0xbe11));
        // CB B9 0034
        gbc.setState(0x3f06, 0x7bb6, 0xb2d0, 0x3f17, 0x9147, 0x6fdd, 0x1, 0x0);
        gbc.writeMem(0x3f06, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7bb6, gbc.sp());
        EXPECT(0x3f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0035
        gbc.setState(0x8027, 0xa815, 0xb880, 0xa230, 0x5092, 0x1ab8, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa815, gbc.sp());
        EXPECT(0x8029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8027));
        EXPECT(0xb9, gbc.readMem(0x8028));
        // CB B9 0036
        gbc.setState(0x6765, 0xc50a, 0x5680, 0x89b, 0x5f3f, 0x25db, 0x0, 0x0);
        gbc.writeMem(0x6765, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc50a, gbc.sp());
        EXPECT(0x6767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0037
        gbc.setState(0xa579, 0x3b09, 0x4000, 0x3428, 0x9af6, 0x5f78, 0x0, 0x1);
        gbc.writeMem(0xa579, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3b09, gbc.sp());
        EXPECT(0xa57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa579));
        EXPECT(0xb9, gbc.readMem(0xa57a));
        // CB B9 0038
        gbc.setState(0xe7ea, 0x6262, 0xad40, 0xdfb6, 0xf9d7, 0x61dd, 0x0, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6262, gbc.sp());
        EXPECT(0xe7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ea));
        EXPECT(0xb9, gbc.readMem(0xe7eb));
        // CB B9 0039
        gbc.setState(0x55ae, 0xd0e, 0xec30, 0x244f, 0x2ce6, 0x7fd1, 0x1, 0x0);
        gbc.writeMem(0x55ae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd0e, gbc.sp());
        EXPECT(0x55b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 003A
        gbc.setState(0xcf17, 0x6ea, 0x3910, 0xecbb, 0x7512, 0x7766, 0x1, 0x0);
        gbc.writeMem(0xcf17, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0xcf19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf17));
        EXPECT(0xb9, gbc.readMem(0xcf18));
        // CB B9 003B
        gbc.setState(0x25, 0x288c, 0x1440, 0xbd0f, 0xd636, 0x2733, 0x1, 0x0);
        gbc.writeMem(0x25, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x288c, gbc.sp());
        EXPECT(0x27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 003C
        gbc.setState(0x13b4, 0x7370, 0x3230, 0x678b, 0x6a52, 0xf2ea, 0x1, 0x1);
        gbc.writeMem(0x13b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7370, gbc.sp());
        EXPECT(0x13b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 003D
        gbc.setState(0x34c0, 0x32c6, 0xed60, 0x4d81, 0xf7a, 0x55c5, 0x0, 0x1);
        gbc.writeMem(0x34c0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x32c6, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 003E
        gbc.setState(0x2cbd, 0x6535, 0x7a90, 0xae1c, 0xf487, 0x9df1, 0x0, 0x0);
        gbc.writeMem(0x2cbd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6535, gbc.sp());
        EXPECT(0x2cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 003F
        gbc.setState(0x9e4d, 0xa87c, 0xbec0, 0x5d10, 0x2eb8, 0x997b, 0x1, 0x1);
        gbc.writeMem(0x9e4d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa87c, gbc.sp());
        EXPECT(0x9e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4d));
        EXPECT(0xb9, gbc.readMem(0x9e4e));
        // CB B9 0040
        gbc.setState(0xc97a, 0x370b, 0xe2d0, 0x2420, 0x78f, 0x1cda, 0x0, 0x0);
        gbc.writeMem(0xc97a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x370b, gbc.sp());
        EXPECT(0xc97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97a));
        EXPECT(0xb9, gbc.readMem(0xc97b));
        // CB B9 0041
        gbc.setState(0xc08b, 0x3fa5, 0xd950, 0xdbd3, 0xfebb, 0xb44d, 0x0, 0x0);
        gbc.writeMem(0xc08b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3fa5, gbc.sp());
        EXPECT(0xc08d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08b));
        EXPECT(0xb9, gbc.readMem(0xc08c));
        // CB B9 0042
        gbc.setState(0xf20, 0x1826, 0xabb0, 0x2c3f, 0x2c64, 0x87f2, 0x0, 0x1);
        gbc.writeMem(0xf20, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1826, gbc.sp());
        EXPECT(0xf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0043
        gbc.setState(0x98f5, 0xc7d, 0x40c0, 0x77df, 0x45ce, 0x6691, 0x1, 0x1);
        gbc.writeMem(0x98f5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc7d, gbc.sp());
        EXPECT(0x98f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f5));
        EXPECT(0xb9, gbc.readMem(0x98f6));
        // CB B9 0044
        gbc.setState(0xef90, 0x7d89, 0x8460, 0xbf9c, 0x670c, 0xd59b, 0x0, 0x1);
        gbc.writeMem(0xef90, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7d89, gbc.sp());
        EXPECT(0xef92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef90));
        EXPECT(0xb9, gbc.readMem(0xef91));
        // CB B9 0045
        gbc.setState(0x1fea, 0xcdd1, 0xd970, 0xa0f, 0xed36, 0x219c, 0x1, 0x1);
        gbc.writeMem(0x1fea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcdd1, gbc.sp());
        EXPECT(0x1fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0046
        gbc.setState(0xaccf, 0xbf3, 0x5d90, 0xba76, 0x500a, 0x86a1, 0x0, 0x1);
        gbc.writeMem(0xaccf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbf3, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccf));
        EXPECT(0xb9, gbc.readMem(0xacd0));
        // CB B9 0047
        gbc.setState(0x5a94, 0x556f, 0xbc20, 0x13c5, 0x2816, 0x32a8, 0x0, 0x0);
        gbc.writeMem(0x5a94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0x5a96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0048
        gbc.setState(0x8ec6, 0xf7b, 0x5a10, 0x3220, 0x6aaf, 0xb7f5, 0x0, 0x1);
        gbc.writeMem(0x8ec6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0x8ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec6));
        EXPECT(0xb9, gbc.readMem(0x8ec7));
        // CB B9 0049
        gbc.setState(0x7bad, 0xab6a, 0x98b0, 0x2c4b, 0x5f56, 0xce35, 0x1, 0x1);
        gbc.writeMem(0x7bad, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xab6a, gbc.sp());
        EXPECT(0x7baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 004A
        gbc.setState(0x311f, 0xcea, 0xb0f0, 0xc2ad, 0x38b2, 0x9ae0, 0x1, 0x0);
        gbc.writeMem(0x311f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcea, gbc.sp());
        EXPECT(0x3121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 004B
        gbc.setState(0x19b1, 0x9dea, 0x77c0, 0xf7da, 0x4d4, 0x7150, 0x0, 0x0);
        gbc.writeMem(0x19b1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x19b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 004D
        gbc.setState(0x32a9, 0x1bb6, 0x5d90, 0x91b1, 0x80ee, 0xe3b8, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1bb6, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 004E
        gbc.setState(0x3224, 0xc52e, 0x4900, 0x6ce5, 0x7b77, 0x3509, 0x0, 0x0);
        gbc.writeMem(0x3224, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 004F
        gbc.setState(0xa8ab, 0xf016, 0x80a0, 0x874d, 0xe206, 0x2a1c, 0x0, 0x0);
        gbc.writeMem(0xa8ab, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0xa8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ab));
        EXPECT(0xb9, gbc.readMem(0xa8ac));
        // CB B9 0050
        gbc.setState(0xaa02, 0xb86d, 0xd250, 0x6c97, 0xbbb4, 0xa443, 0x1, 0x1);
        gbc.writeMem(0xaa02, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb86d, gbc.sp());
        EXPECT(0xaa04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa02));
        EXPECT(0xb9, gbc.readMem(0xaa03));
        // CB B9 0051
        gbc.setState(0x7364, 0x7402, 0x9150, 0x19ef, 0x762f, 0x3ed8, 0x0, 0x1);
        gbc.writeMem(0x7364, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7402, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0052
        gbc.setState(0x1cc8, 0xe3c6, 0x5370, 0x5f54, 0x33df, 0x7622, 0x0, 0x1);
        gbc.writeMem(0x1cc8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe3c6, gbc.sp());
        EXPECT(0x1cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0053
        gbc.setState(0xc135, 0x2bff, 0x7c70, 0x46e8, 0xf1c1, 0x3e63, 0x0, 0x0);
        gbc.writeMem(0xc135, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2bff, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0xb9, gbc.readMem(0xc136));
        // CB B9 0055
        gbc.setState(0x289b, 0x1d81, 0x7260, 0xe880, 0xdc, 0x32ed, 0x0, 0x1);
        gbc.writeMem(0x289b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1d81, gbc.sp());
        EXPECT(0x289d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0056
        gbc.setState(0xef87, 0x8e99, 0xc0b0, 0x428d, 0x6800, 0xa0b9, 0x0, 0x0);
        gbc.writeMem(0xef87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8e99, gbc.sp());
        EXPECT(0xef89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef87));
        EXPECT(0xb9, gbc.readMem(0xef88));
        // CB B9 0057
        gbc.setState(0xe8c9, 0x5717, 0x31c0, 0x2a5, 0x527b, 0x8586, 0x1, 0x1);
        gbc.writeMem(0xe8c9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5717, gbc.sp());
        EXPECT(0xe8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c9));
        EXPECT(0xb9, gbc.readMem(0xe8ca));
        // CB B9 0058
        gbc.setState(0x502c, 0x407b, 0x4690, 0xa3a0, 0xf2bf, 0x4af9, 0x0, 0x0);
        gbc.writeMem(0x502c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x407b, gbc.sp());
        EXPECT(0x502e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0059
        gbc.setState(0x9e0e, 0xc8a2, 0x1280, 0x4b87, 0x730c, 0xe92b, 0x0, 0x1);
        gbc.writeMem(0x9e0e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc8a2, gbc.sp());
        EXPECT(0x9e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e0e));
        EXPECT(0xb9, gbc.readMem(0x9e0f));
        // CB B9 005A
        gbc.setState(0x484, 0x8a0d, 0x5a10, 0x5089, 0x91c1, 0xfe76, 0x0, 0x0);
        gbc.writeMem(0x484, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8a0d, gbc.sp());
        EXPECT(0x486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 005C
        gbc.setState(0x1740, 0x1c04, 0x2d00, 0xed40, 0xf8cf, 0xb02, 0x1, 0x1);
        gbc.writeMem(0x1740, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1c04, gbc.sp());
        EXPECT(0x1742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 005D
        gbc.setState(0x995f, 0xf92c, 0x4c20, 0xa162, 0x786f, 0x8ef5, 0x1, 0x0);
        gbc.writeMem(0x995f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0x9961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995f));
        EXPECT(0xb9, gbc.readMem(0x9960));
        // CB B9 005E
        gbc.setState(0x709c, 0x9975, 0x4830, 0xd1b6, 0x2e12, 0x6e67, 0x1, 0x1);
        gbc.writeMem(0x709c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9975, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 005F
        gbc.setState(0xa7d5, 0xc49e, 0x7e30, 0x4e42, 0xf625, 0x1963, 0x0, 0x0);
        gbc.writeMem(0xa7d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc49e, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d5));
        EXPECT(0xb9, gbc.readMem(0xa7d6));
        // CB B9 0060
        gbc.setState(0x3c1a, 0xbb34, 0xa30, 0xe658, 0x361a, 0xc42, 0x0, 0x0);
        gbc.writeMem(0x3c1a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbb34, gbc.sp());
        EXPECT(0x3c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0061
        gbc.setState(0x8335, 0xedb9, 0x8e70, 0xd776, 0x4253, 0xe18b, 0x1, 0x1);
        gbc.writeMem(0x8335, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xedb9, gbc.sp());
        EXPECT(0x8337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8335));
        EXPECT(0xb9, gbc.readMem(0x8336));
        // CB B9 0062
        gbc.setState(0x1bbb, 0x7780, 0xa540, 0xea00, 0x6b0c, 0x5708, 0x1, 0x0);
        gbc.writeMem(0x1bbb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7780, gbc.sp());
        EXPECT(0x1bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0063
        gbc.setState(0x65e, 0x9b23, 0x4d90, 0x3aa, 0x7170, 0x96ac, 0x0, 0x0);
        gbc.writeMem(0x65e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9b23, gbc.sp());
        EXPECT(0x660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0064
        gbc.setState(0xf78, 0x76b8, 0xafd0, 0x22ed, 0x9f1a, 0x2b67, 0x1, 0x0);
        gbc.writeMem(0xf78, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x76b8, gbc.sp());
        EXPECT(0xf7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0065
        gbc.setState(0x7283, 0x4cbd, 0x6160, 0x2795, 0x1949, 0x7b40, 0x0, 0x1);
        gbc.writeMem(0x7283, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4cbd, gbc.sp());
        EXPECT(0x7285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0066
        gbc.setState(0x1617, 0xf1eb, 0x88d0, 0x67fe, 0x836, 0xf509, 0x0, 0x1);
        gbc.writeMem(0x1617, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf1eb, gbc.sp());
        EXPECT(0x1619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0067
        gbc.setState(0x5b61, 0xd31f, 0x5710, 0x6ad9, 0xdbd8, 0x679a, 0x1, 0x0);
        gbc.writeMem(0x5b61, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd31f, gbc.sp());
        EXPECT(0x5b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0068
        gbc.setState(0xb482, 0xeb25, 0x5c00, 0xe707, 0xe8e5, 0x630b, 0x1, 0x0);
        gbc.writeMem(0xb482, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeb25, gbc.sp());
        EXPECT(0xb484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb482));
        EXPECT(0xb9, gbc.readMem(0xb483));
        // CB B9 0069
        gbc.setState(0x6f3c, 0xd35a, 0x4a50, 0x1a6f, 0x2e7, 0xbe6f, 0x0, 0x1);
        gbc.writeMem(0x6f3c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd35a, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 006A
        gbc.setState(0x4d7b, 0x35d8, 0x3280, 0x1007, 0x450c, 0x71fd, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x4d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 006B
        gbc.setState(0x9c53, 0x8791, 0x2990, 0x3145, 0xf1ee, 0xe76e, 0x0, 0x0);
        gbc.writeMem(0x9c53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8791, gbc.sp());
        EXPECT(0x9c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c53));
        EXPECT(0xb9, gbc.readMem(0x9c54));
        // CB B9 006C
        gbc.setState(0xa981, 0x8691, 0x40e0, 0x5646, 0xf554, 0xf055, 0x0, 0x0);
        gbc.writeMem(0xa981, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8691, gbc.sp());
        EXPECT(0xa983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa981));
        EXPECT(0xb9, gbc.readMem(0xa982));
        // CB B9 006D
        gbc.setState(0x6a3b, 0xcc28, 0xadf0, 0xee, 0x86e9, 0xf151, 0x1, 0x0);
        gbc.writeMem(0x6a3b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcc28, gbc.sp());
        EXPECT(0x6a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 006E
        gbc.setState(0x80dd, 0x4c74, 0x47f0, 0x5186, 0x2693, 0xae63, 0x0, 0x0);
        gbc.writeMem(0x80dd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4c74, gbc.sp());
        EXPECT(0x80df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80dd));
        EXPECT(0xb9, gbc.readMem(0x80de));
        // CB B9 006F
        gbc.setState(0xa3a9, 0xf51e, 0x2660, 0x84c1, 0x9c30, 0xa300, 0x0, 0x1);
        gbc.writeMem(0xa3a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf51e, gbc.sp());
        EXPECT(0xa3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a9));
        EXPECT(0xb9, gbc.readMem(0xa3aa));
        // CB B9 0070
        gbc.setState(0x12c6, 0x2c09, 0x4ec0, 0xf998, 0x4724, 0xdc34, 0x0, 0x0);
        gbc.writeMem(0x12c6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2c09, gbc.sp());
        EXPECT(0x12c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0071
        gbc.setState(0xab95, 0xbad9, 0x40f0, 0x7303, 0xab77, 0x6268, 0x0, 0x0);
        gbc.writeMem(0xab95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbad9, gbc.sp());
        EXPECT(0xab97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab95));
        EXPECT(0xb9, gbc.readMem(0xab96));
        // CB B9 0072
        gbc.setState(0xe9c5, 0x1e62, 0x5e90, 0xf42f, 0x7381, 0xce05, 0x1, 0x1);
        gbc.writeMem(0xe9c5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1e62, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c5));
        EXPECT(0xb9, gbc.readMem(0xe9c6));
        // CB B9 0073
        gbc.setState(0x6f03, 0xe0d6, 0x7bd0, 0xde44, 0x8528, 0xfb78, 0x1, 0x0);
        gbc.writeMem(0x6f03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe0d6, gbc.sp());
        EXPECT(0x6f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0074
        gbc.setState(0x2fd3, 0x235c, 0xdc90, 0xd655, 0xc167, 0xb8b4, 0x1, 0x1);
        gbc.writeMem(0x2fd3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x235c, gbc.sp());
        EXPECT(0x2fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0075
        gbc.setState(0x3711, 0x2c74, 0xe00, 0x74e7, 0x7a6a, 0x2d4e, 0x1, 0x1);
        gbc.writeMem(0x3711, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2c74, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0076
        gbc.setState(0x1c08, 0x9f0c, 0xf5a0, 0xd59d, 0x85ab, 0x877e, 0x1, 0x1);
        gbc.writeMem(0x1c08, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0x1c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0077
        gbc.setState(0xd0df, 0xd986, 0x8fb0, 0x3930, 0xf877, 0x6c80, 0x1, 0x0);
        gbc.writeMem(0xd0df, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd986, gbc.sp());
        EXPECT(0xd0e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0df));
        EXPECT(0xb9, gbc.readMem(0xd0e0));
        // CB B9 0078
        gbc.setState(0x13d9, 0x73c3, 0xd650, 0x6812, 0x386, 0xf98f, 0x1, 0x1);
        gbc.writeMem(0x13d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x73c3, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0079
        gbc.setState(0x6873, 0xdc23, 0x5e00, 0x6d6a, 0xb7ec, 0x4be5, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdc23, gbc.sp());
        EXPECT(0x6875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 007A
        gbc.setState(0xb3ac, 0x8331, 0xf7f0, 0xf773, 0x2593, 0x8609, 0x0, 0x1);
        gbc.writeMem(0xb3ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8331, gbc.sp());
        EXPECT(0xb3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ac));
        EXPECT(0xb9, gbc.readMem(0xb3ad));
        // CB B9 007B
        gbc.setState(0x1f2f, 0x31dc, 0x8210, 0x5c9, 0xcb23, 0x97cf, 0x0, 0x1);
        gbc.writeMem(0x1f2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x31dc, gbc.sp());
        EXPECT(0x1f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 007C
        gbc.setState(0xaa18, 0xfe81, 0xd360, 0xaa8a, 0xe1be, 0x2162, 0x0, 0x1);
        gbc.writeMem(0xaa18, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfe81, gbc.sp());
        EXPECT(0xaa1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa18));
        EXPECT(0xb9, gbc.readMem(0xaa19));
        // CB B9 007D
        gbc.setState(0x4ac7, 0x85c5, 0xd160, 0xeb61, 0xe4c, 0xc51a, 0x0, 0x1);
        gbc.writeMem(0x4ac7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x85c5, gbc.sp());
        EXPECT(0x4ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 007E
        gbc.setState(0xd798, 0xed5d, 0xe810, 0x5491, 0xe7ec, 0x8aab, 0x1, 0x1);
        gbc.writeMem(0xd798, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xed5d, gbc.sp());
        EXPECT(0xd79a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd798));
        EXPECT(0xb9, gbc.readMem(0xd799));
        // CB B9 007F
        gbc.setState(0x8bc7, 0xb0aa, 0x1440, 0x23b6, 0x77dd, 0x7985, 0x0, 0x1);
        gbc.writeMem(0x8bc7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb0aa, gbc.sp());
        EXPECT(0x8bc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc7));
        EXPECT(0xb9, gbc.readMem(0x8bc8));
        // CB B9 0080
        gbc.setState(0x80e1, 0xdb0b, 0x7100, 0x15e9, 0x1056, 0x8ff8, 0x0, 0x1);
        gbc.writeMem(0x80e1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdb0b, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e1));
        EXPECT(0xb9, gbc.readMem(0x80e2));
        // CB B9 0081
        gbc.setState(0xe2c, 0x2a70, 0xa750, 0x374, 0xa14, 0xedfc, 0x0, 0x0);
        gbc.writeMem(0xe2c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2a70, gbc.sp());
        EXPECT(0xe2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0082
        gbc.setState(0x265e, 0xe478, 0xd240, 0xe58c, 0xe33d, 0x9a7c, 0x0, 0x1);
        gbc.writeMem(0x265e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe478, gbc.sp());
        EXPECT(0x2660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0083
        gbc.setState(0xc4ce, 0xdb47, 0x6630, 0x2da2, 0xdfc8, 0x227b, 0x0, 0x1);
        gbc.writeMem(0xc4ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdb47, gbc.sp());
        EXPECT(0xc4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4ce));
        EXPECT(0xb9, gbc.readMem(0xc4cf));
        // CB B9 0084
        gbc.setState(0x9c94, 0xe990, 0x5370, 0x944f, 0x628e, 0xb2e4, 0x0, 0x1);
        gbc.writeMem(0x9c94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe990, gbc.sp());
        EXPECT(0x9c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c94));
        EXPECT(0xb9, gbc.readMem(0x9c95));
        // CB B9 0085
        gbc.setState(0xef67, 0x8692, 0xa230, 0x6dff, 0x8367, 0xcf78, 0x1, 0x1);
        gbc.writeMem(0xef67, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8692, gbc.sp());
        EXPECT(0xef69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef67));
        EXPECT(0xb9, gbc.readMem(0xef68));
        // CB B9 0087
        gbc.setState(0x2cf0, 0xe323, 0x16b0, 0xc17b, 0x4445, 0x6bb3, 0x0, 0x1);
        gbc.writeMem(0x2cf0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe323, gbc.sp());
        EXPECT(0x2cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0088
        gbc.setState(0xc30f, 0xedea, 0xe5c0, 0x5c13, 0xff81, 0x562c, 0x1, 0x0);
        gbc.writeMem(0xc30f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xedea, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30f));
        EXPECT(0xb9, gbc.readMem(0xc310));
        // CB B9 0089
        gbc.setState(0x7be1, 0x9e2d, 0xb6a0, 0xa1ee, 0x5c20, 0x42dc, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9e2d, gbc.sp());
        EXPECT(0x7be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 008A
        gbc.setState(0x7a35, 0x195e, 0x7cb0, 0x8ffc, 0x9a45, 0xabb3, 0x1, 0x1);
        gbc.writeMem(0x7a35, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x195e, gbc.sp());
        EXPECT(0x7a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 008C
        gbc.setState(0xd7be, 0xecce, 0x9230, 0x9e3f, 0xd036, 0x6bc, 0x1, 0x1);
        gbc.writeMem(0xd7be, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xecce, gbc.sp());
        EXPECT(0xd7c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7be));
        EXPECT(0xb9, gbc.readMem(0xd7bf));
        // CB B9 008D
        gbc.setState(0x27f, 0x925b, 0x9560, 0x3662, 0xa204, 0x2984, 0x1, 0x0);
        gbc.writeMem(0x27f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x925b, gbc.sp());
        EXPECT(0x281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 008E
        gbc.setState(0xcb9, 0xf58, 0xac0, 0x8c3b, 0xd3c, 0x99b4, 0x0, 0x1);
        gbc.writeMem(0xcb9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0xcbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 008F
        gbc.setState(0x5bff, 0x64e8, 0x4e70, 0xe2c4, 0xb989, 0x7a7b, 0x1, 0x0);
        gbc.writeMem(0x5bff, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x64e8, gbc.sp());
        EXPECT(0x5c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0090
        gbc.setState(0xe8e4, 0x4c48, 0xfa80, 0xd275, 0x6578, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0xe8e4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4c48, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e4));
        EXPECT(0xb9, gbc.readMem(0xe8e5));
        // CB B9 0091
        gbc.setState(0x7c19, 0xd5fb, 0xee60, 0x93b4, 0xe735, 0x5bfa, 0x1, 0x1);
        gbc.writeMem(0x7c19, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd5fb, gbc.sp());
        EXPECT(0x7c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0092
        gbc.setState(0xa8a, 0x41ed, 0x7be0, 0xc24d, 0xac8b, 0x7036, 0x1, 0x0);
        gbc.writeMem(0xa8a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x41ed, gbc.sp());
        EXPECT(0xa8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0093
        gbc.setState(0x77a4, 0xf815, 0x8f80, 0x3792, 0xbc19, 0xcd3e, 0x0, 0x0);
        gbc.writeMem(0x77a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf815, gbc.sp());
        EXPECT(0x77a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0094
        gbc.setState(0xb632, 0x1ef9, 0xe960, 0x889b, 0x8479, 0xa4fe, 0x0, 0x0);
        gbc.writeMem(0xb632, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1ef9, gbc.sp());
        EXPECT(0xb634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb632));
        EXPECT(0xb9, gbc.readMem(0xb633));
        // CB B9 0095
        gbc.setState(0xc582, 0x2370, 0x3380, 0x4a0f, 0x454e, 0xa191, 0x0, 0x0);
        gbc.writeMem(0xc582, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2370, gbc.sp());
        EXPECT(0xc584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc582));
        EXPECT(0xb9, gbc.readMem(0xc583));
        // CB B9 0096
        gbc.setState(0x6de8, 0xa792, 0xb880, 0xca34, 0xa73f, 0xf318, 0x0, 0x0);
        gbc.writeMem(0x6de8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa792, gbc.sp());
        EXPECT(0x6dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0097
        gbc.setState(0xb2ca, 0xf93f, 0x320, 0xce5b, 0x2a8f, 0x303b, 0x1, 0x0);
        gbc.writeMem(0xb2ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf93f, gbc.sp());
        EXPECT(0xb2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2ca));
        EXPECT(0xb9, gbc.readMem(0xb2cb));
        // CB B9 0098
        gbc.setState(0x19bb, 0x3f23, 0x5320, 0x8a6c, 0x80d9, 0x5195, 0x0, 0x1);
        gbc.writeMem(0x19bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3f23, gbc.sp());
        EXPECT(0x19bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0099
        gbc.setState(0x7f78, 0xf112, 0xf8f0, 0x310d, 0x1e81, 0x8a8e, 0x0, 0x0);
        gbc.writeMem(0x7f78, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf112, gbc.sp());
        EXPECT(0x7f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 009A
        gbc.setState(0xef0, 0xe49a, 0x1de0, 0x58c6, 0x6b30, 0xd5bc, 0x0, 0x0);
        gbc.writeMem(0xef0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe49a, gbc.sp());
        EXPECT(0xef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 009B
        gbc.setState(0x484b, 0xe6c6, 0xaab0, 0xda, 0x94fe, 0x1469, 0x1, 0x0);
        gbc.writeMem(0x484b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe6c6, gbc.sp());
        EXPECT(0x484d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 009C
        gbc.setState(0xec20, 0xa3ae, 0xd250, 0x6c9c, 0x64a3, 0xe27a, 0x0, 0x0);
        gbc.writeMem(0xec20, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa3ae, gbc.sp());
        EXPECT(0xec22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec20));
        EXPECT(0xb9, gbc.readMem(0xec21));
        // CB B9 009E
        gbc.setState(0xc9a9, 0x2819, 0xaa40, 0x2398, 0xaaa8, 0xad83, 0x0, 0x1);
        gbc.writeMem(0xc9a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0xc9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a9));
        EXPECT(0xb9, gbc.readMem(0xc9aa));
        // CB B9 009F
        gbc.setState(0x42a3, 0x4100, 0xadf0, 0xfc16, 0xf0fe, 0x6866, 0x0, 0x1);
        gbc.writeMem(0x42a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4100, gbc.sp());
        EXPECT(0x42a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00A0
        gbc.setState(0xd727, 0x31f6, 0xa520, 0x10a5, 0xf505, 0xf714, 0x1, 0x0);
        gbc.writeMem(0xd727, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x31f6, gbc.sp());
        EXPECT(0xd729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd727));
        EXPECT(0xb9, gbc.readMem(0xd728));
        // CB B9 00A1
        gbc.setState(0xae71, 0x6a84, 0x4150, 0x634e, 0xcdf3, 0x99ad, 0x1, 0x1);
        gbc.writeMem(0xae71, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6a84, gbc.sp());
        EXPECT(0xae73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae71));
        EXPECT(0xb9, gbc.readMem(0xae72));
        // CB B9 00A2
        gbc.setState(0xc0f6, 0x12c1, 0x2e30, 0x13ab, 0xcad8, 0x6677, 0x0, 0x0);
        gbc.writeMem(0xc0f6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0xc0f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f6));
        EXPECT(0xb9, gbc.readMem(0xc0f7));
        // CB B9 00A3
        gbc.setState(0x6625, 0xc24d, 0xf720, 0xb96c, 0xb926, 0xcec2, 0x0, 0x1);
        gbc.writeMem(0x6625, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc24d, gbc.sp());
        EXPECT(0x6627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00A4
        gbc.setState(0x779d, 0x6880, 0x470, 0xd220, 0xc5b6, 0x5a53, 0x1, 0x1);
        gbc.writeMem(0x779d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6880, gbc.sp());
        EXPECT(0x779f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00A5
        gbc.setState(0x625, 0xce12, 0xfa00, 0xd1d, 0x58, 0xf430, 0x1, 0x1);
        gbc.writeMem(0x625, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xce12, gbc.sp());
        EXPECT(0x627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00A7
        gbc.setState(0x3f44, 0x2d57, 0xfe70, 0xc176, 0xe63d, 0x30db, 0x0, 0x0);
        gbc.writeMem(0x3f44, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0x3f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00A8
        gbc.setState(0xa16, 0x60e6, 0xa690, 0xafc9, 0x449b, 0x2f79, 0x0, 0x0);
        gbc.writeMem(0xa16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x60e6, gbc.sp());
        EXPECT(0xa18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00A9
        gbc.setState(0xdee5, 0x787a, 0xd220, 0x9d4f, 0x1ca1, 0x5149, 0x0, 0x1);
        gbc.writeMem(0xdee5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x787a, gbc.sp());
        EXPECT(0xdee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee5));
        EXPECT(0xb9, gbc.readMem(0xdee6));
        // CB B9 00AA
        gbc.setState(0xe658, 0xe8d4, 0x2840, 0x5c79, 0xd0b9, 0x6d3d, 0x1, 0x1);
        gbc.writeMem(0xe658, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe8d4, gbc.sp());
        EXPECT(0xe65a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe658));
        EXPECT(0xb9, gbc.readMem(0xe659));
        // CB B9 00AC
        gbc.setState(0x6443, 0x8c6b, 0x7520, 0x78c2, 0x1c40, 0x8627, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0x6445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00AD
        gbc.setState(0xc771, 0x5ef0, 0xe350, 0xa83c, 0x77b5, 0xe6ea, 0x0, 0x1);
        gbc.writeMem(0xc771, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x5ef0, gbc.sp());
        EXPECT(0xc773, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc771));
        EXPECT(0xb9, gbc.readMem(0xc772));
        // CB B9 00AE
        gbc.setState(0x383c, 0x7e27, 0x66b0, 0x8201, 0xfb0a, 0xd790, 0x0, 0x0);
        gbc.writeMem(0x383c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7e27, gbc.sp());
        EXPECT(0x383e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00AF
        gbc.setState(0x732b, 0x87e4, 0xdf50, 0x400f, 0x8efc, 0x823a, 0x1, 0x1);
        gbc.writeMem(0x732b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x87e4, gbc.sp());
        EXPECT(0x732d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00B0
        gbc.setState(0x3629, 0x932b, 0x5ef0, 0x5ad3, 0x3262, 0x709b, 0x1, 0x1);
        gbc.writeMem(0x3629, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x932b, gbc.sp());
        EXPECT(0x362b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00B1
        gbc.setState(0x705f, 0xe84e, 0xd2d0, 0x836c, 0xfee2, 0x4fad, 0x0, 0x1);
        gbc.writeMem(0x705f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe84e, gbc.sp());
        EXPECT(0x7061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00B2
        gbc.setState(0xa241, 0xa5d8, 0x6a00, 0xfcb6, 0xc26f, 0x633d, 0x1, 0x0);
        gbc.writeMem(0xa241, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa5d8, gbc.sp());
        EXPECT(0xa243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa241));
        EXPECT(0xb9, gbc.readMem(0xa242));
        // CB B9 00B3
        gbc.setState(0x2ce4, 0x6314, 0x99b0, 0xbc6c, 0x52cf, 0xe0eb, 0x0, 0x0);
        gbc.writeMem(0x2ce4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6314, gbc.sp());
        EXPECT(0x2ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00B4
        gbc.setState(0x666d, 0x9f20, 0xdf00, 0x4719, 0x394a, 0xdb13, 0x0, 0x1);
        gbc.writeMem(0x666d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0x666f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00B6
        gbc.setState(0xc408, 0xf395, 0xb570, 0x2a00, 0x873e, 0xff85, 0x1, 0x0);
        gbc.writeMem(0xc408, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf395, gbc.sp());
        EXPECT(0xc40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc408));
        EXPECT(0xb9, gbc.readMem(0xc409));
        // CB B9 00B7
        gbc.setState(0xafec, 0x1036, 0x57a0, 0xd666, 0xf6d2, 0x8325, 0x0, 0x0);
        gbc.writeMem(0xafec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1036, gbc.sp());
        EXPECT(0xafee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafec));
        EXPECT(0xb9, gbc.readMem(0xafed));
        // CB B9 00B8
        gbc.setState(0x9d7, 0x5172, 0xbd10, 0x25c6, 0xc2a4, 0xd312, 0x1, 0x1);
        gbc.writeMem(0x9d7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5172, gbc.sp());
        EXPECT(0x9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00B9
        gbc.setState(0x1f4b, 0xaed9, 0xa640, 0x7edb, 0xccfb, 0x9c3e, 0x0, 0x1);
        gbc.writeMem(0x1f4b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaed9, gbc.sp());
        EXPECT(0x1f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00BA
        gbc.setState(0xe634, 0xba1, 0x94e0, 0x344, 0xfbfc, 0x6719, 0x1, 0x1);
        gbc.writeMem(0xe634, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xba1, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe634));
        EXPECT(0xb9, gbc.readMem(0xe635));
        // CB B9 00BB
        gbc.setState(0x1995, 0x5435, 0xf1a0, 0x3ac, 0x848c, 0x60ec, 0x1, 0x0);
        gbc.writeMem(0x1995, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5435, gbc.sp());
        EXPECT(0x1997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00BC
        gbc.setState(0x9972, 0x6de7, 0x7930, 0x45aa, 0x6367, 0xf990, 0x0, 0x1);
        gbc.writeMem(0x9972, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6de7, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9972));
        EXPECT(0xb9, gbc.readMem(0x9973));
        // CB B9 00BD
        gbc.setState(0xa91c, 0xe1c7, 0xd990, 0xd60c, 0x885, 0x33b2, 0x1, 0x1);
        gbc.writeMem(0xa91c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe1c7, gbc.sp());
        EXPECT(0xa91e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa91c));
        EXPECT(0xb9, gbc.readMem(0xa91d));
        // CB B9 00BE
        gbc.setState(0x7f1d, 0xf24a, 0x1860, 0xc89, 0xeb6a, 0x9695, 0x1, 0x0);
        gbc.writeMem(0x7f1d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0x7f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00BF
        gbc.setState(0x6846, 0x76a6, 0x4770, 0x530d, 0xd495, 0x1dca, 0x1, 0x1);
        gbc.writeMem(0x6846, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x76a6, gbc.sp());
        EXPECT(0x6848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00C0
        gbc.setState(0x888, 0xb078, 0x13c0, 0xcbc1, 0x55a, 0x3e17, 0x0, 0x1);
        gbc.writeMem(0x888, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb078, gbc.sp());
        EXPECT(0x88a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00C1
        gbc.setState(0xb261, 0x350, 0x60a0, 0x7388, 0x9a90, 0xbb05, 0x0, 0x0);
        gbc.writeMem(0xb261, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x350, gbc.sp());
        EXPECT(0xb263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb261));
        EXPECT(0xb9, gbc.readMem(0xb262));
        // CB B9 00C2
        gbc.setState(0x99ca, 0x88af, 0x5b60, 0xd6, 0xe69b, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x99ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x88af, gbc.sp());
        EXPECT(0x99cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ca));
        EXPECT(0xb9, gbc.readMem(0x99cb));
        // CB B9 00C3
        gbc.setState(0x916a, 0x61aa, 0xc470, 0x8918, 0xd13a, 0x5474, 0x0, 0x1);
        gbc.writeMem(0x916a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x61aa, gbc.sp());
        EXPECT(0x916c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x916a));
        EXPECT(0xb9, gbc.readMem(0x916b));
        // CB B9 00C5
        gbc.setState(0x5fe3, 0xeaf6, 0x6a70, 0x5878, 0x2284, 0xa0f7, 0x1, 0x1);
        gbc.writeMem(0x5fe3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeaf6, gbc.sp());
        EXPECT(0x5fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00C6
        gbc.setState(0x66dc, 0x7245, 0xa890, 0x91b1, 0xecb6, 0x60dc, 0x0, 0x1);
        gbc.writeMem(0x66dc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7245, gbc.sp());
        EXPECT(0x66de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00C7
        gbc.setState(0xaf4a, 0x4aad, 0x5710, 0xc3cd, 0x2b4a, 0xd453, 0x1, 0x1);
        gbc.writeMem(0xaf4a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4aad, gbc.sp());
        EXPECT(0xaf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf4a));
        EXPECT(0xb9, gbc.readMem(0xaf4b));
        // CB B9 00C8
        gbc.setState(0xb48f, 0x5af8, 0x99a0, 0x4321, 0x9faa, 0x83e4, 0x0, 0x1);
        gbc.writeMem(0xb48f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5af8, gbc.sp());
        EXPECT(0xb491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb48f));
        EXPECT(0xb9, gbc.readMem(0xb490));
        // CB B9 00C9
        gbc.setState(0xebe0, 0xdd8f, 0xcd40, 0xe9de, 0x8fe1, 0xd3e8, 0x0, 0x1);
        gbc.writeMem(0xebe0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdd8f, gbc.sp());
        EXPECT(0xebe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebe0));
        EXPECT(0xb9, gbc.readMem(0xebe1));
        // CB B9 00CA
        gbc.setState(0x71bf, 0x33e3, 0x95d0, 0xf1e1, 0xaff2, 0x5956, 0x1, 0x1);
        gbc.writeMem(0x71bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x33e3, gbc.sp());
        EXPECT(0x71c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00CC
        gbc.setState(0x5ecc, 0xb9f1, 0x4d40, 0xb61b, 0x9e48, 0xab2a, 0x1, 0x1);
        gbc.writeMem(0x5ecc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x5ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00CD
        gbc.setState(0x9354, 0x34e8, 0x5850, 0x1183, 0x371d, 0x30f, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x34e8, gbc.sp());
        EXPECT(0x9356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9354));
        EXPECT(0xb9, gbc.readMem(0x9355));
        // CB B9 00CE
        gbc.setState(0x7d0d, 0x3cbd, 0xb750, 0x26af, 0x4521, 0x5236, 0x1, 0x1);
        gbc.writeMem(0x7d0d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3cbd, gbc.sp());
        EXPECT(0x7d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00CF
        gbc.setState(0xc9da, 0x7d9a, 0x30a0, 0xca25, 0xa1b3, 0xfc61, 0x0, 0x1);
        gbc.writeMem(0xc9da, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7d9a, gbc.sp());
        EXPECT(0xc9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9da));
        EXPECT(0xb9, gbc.readMem(0xc9db));
        // CB B9 00D0
        gbc.setState(0xbf00, 0x5660, 0x2590, 0x3aa2, 0xcd66, 0x60a2, 0x0, 0x1);
        gbc.writeMem(0xbf00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5660, gbc.sp());
        EXPECT(0xbf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf00));
        EXPECT(0xb9, gbc.readMem(0xbf01));
        // CB B9 00D1
        gbc.setState(0xa9e5, 0x4d1, 0xaa20, 0x4731, 0xdfa, 0x426, 0x0, 0x0);
        gbc.writeMem(0xa9e5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0xa9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e5));
        EXPECT(0xb9, gbc.readMem(0xa9e6));
        // CB B9 00D2
        gbc.setState(0xcd5a, 0x34dd, 0xba40, 0x4426, 0x37ee, 0xd68d, 0x1, 0x1);
        gbc.writeMem(0xcd5a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x34dd, gbc.sp());
        EXPECT(0xcd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5a));
        EXPECT(0xb9, gbc.readMem(0xcd5b));
        // CB B9 00D3
        gbc.setState(0x1906, 0xbe61, 0xc130, 0xa989, 0x99a8, 0x51c, 0x1, 0x0);
        gbc.writeMem(0x1906, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xbe61, gbc.sp());
        EXPECT(0x1908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00D5
        gbc.setState(0xe6b2, 0xeccd, 0x4180, 0xf210, 0x5bab, 0xb00a, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeccd, gbc.sp());
        EXPECT(0xe6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b2));
        EXPECT(0xb9, gbc.readMem(0xe6b3));
        // CB B9 00D6
        gbc.setState(0x807a, 0xca83, 0xd380, 0x4806, 0xf6f5, 0x32d7, 0x0, 0x1);
        gbc.writeMem(0x807a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xca83, gbc.sp());
        EXPECT(0x807c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x807a));
        EXPECT(0xb9, gbc.readMem(0x807b));
        // CB B9 00D7
        gbc.setState(0x773d, 0x173b, 0x1f90, 0x279c, 0xc0b2, 0x15c2, 0x1, 0x1);
        gbc.writeMem(0x773d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x173b, gbc.sp());
        EXPECT(0x773f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00D8
        gbc.setState(0x3519, 0x28ec, 0xb080, 0xa6b5, 0x6fd, 0xebb2, 0x1, 0x1);
        gbc.writeMem(0x3519, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x28ec, gbc.sp());
        EXPECT(0x351b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00D9
        gbc.setState(0xebf3, 0x3170, 0xc370, 0x47b1, 0x8735, 0x8428, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0xebf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf3));
        EXPECT(0xb9, gbc.readMem(0xebf4));
        // CB B9 00DA
        gbc.setState(0x9c12, 0x7455, 0x7b30, 0x83c1, 0xb839, 0xda62, 0x0, 0x0);
        gbc.writeMem(0x9c12, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7455, gbc.sp());
        EXPECT(0x9c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c12));
        EXPECT(0xb9, gbc.readMem(0x9c13));
        // CB B9 00DC
        gbc.setState(0x3b05, 0x9a75, 0x99d0, 0x2f19, 0x11d2, 0xbbdd, 0x0, 0x1);
        gbc.writeMem(0x3b05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9a75, gbc.sp());
        EXPECT(0x3b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00DD
        gbc.setState(0x6176, 0xd2ae, 0xcce0, 0x91b9, 0xb79a, 0x2d87, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd2ae, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00DE
        gbc.setState(0xd62c, 0x7261, 0xb3d0, 0x4fd1, 0xa5c7, 0x322a, 0x0, 0x0);
        gbc.writeMem(0xd62c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7261, gbc.sp());
        EXPECT(0xd62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd62c));
        EXPECT(0xb9, gbc.readMem(0xd62d));
        // CB B9 00DF
        gbc.setState(0xabd7, 0xa70a, 0xd50, 0xce8b, 0x70e5, 0xfe46, 0x0, 0x1);
        gbc.writeMem(0xabd7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa70a, gbc.sp());
        EXPECT(0xabd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabd7));
        EXPECT(0xb9, gbc.readMem(0xabd8));
        // CB B9 00E0
        gbc.setState(0xb240, 0x1782, 0xa7f0, 0x7581, 0x1be2, 0x3c30, 0x0, 0x1);
        gbc.writeMem(0xb240, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1782, gbc.sp());
        EXPECT(0xb242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb240));
        EXPECT(0xb9, gbc.readMem(0xb241));
        // CB B9 00E1
        gbc.setState(0x49d3, 0xd545, 0xf500, 0xf28e, 0x10fa, 0x98c3, 0x0, 0x0);
        gbc.writeMem(0x49d3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd545, gbc.sp());
        EXPECT(0x49d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00E2
        gbc.setState(0x4a76, 0xdbe2, 0x7af0, 0xae4, 0x5340, 0xca6f, 0x1, 0x1);
        gbc.writeMem(0x4a76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdbe2, gbc.sp());
        EXPECT(0x4a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00E3
        gbc.setState(0x77d9, 0xc0a6, 0xb3a0, 0x86c9, 0xdb4, 0x9781, 0x0, 0x1);
        gbc.writeMem(0x77d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc0a6, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00E4
        gbc.setState(0x7dda, 0x1ad2, 0x4d60, 0x362, 0xd532, 0xa2ab, 0x1, 0x0);
        gbc.writeMem(0x7dda, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0x7ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00E5
        gbc.setState(0x4386, 0x9fad, 0xc010, 0xb461, 0xab48, 0x2283, 0x0, 0x0);
        gbc.writeMem(0x4386, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9fad, gbc.sp());
        EXPECT(0x4388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00E6
        gbc.setState(0xdef4, 0x6c65, 0x8300, 0x40b, 0x590c, 0xe254, 0x1, 0x0);
        gbc.writeMem(0xdef4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6c65, gbc.sp());
        EXPECT(0xdef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef4));
        EXPECT(0xb9, gbc.readMem(0xdef5));
        // CB B9 00E7
        gbc.setState(0x2219, 0x5246, 0xa6b0, 0x6596, 0x899d, 0x282, 0x1, 0x1);
        gbc.writeMem(0x2219, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5246, gbc.sp());
        EXPECT(0x221b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00E8
        gbc.setState(0xc1a7, 0xc277, 0xa4b0, 0xb87b, 0xc1bc, 0x7276, 0x0, 0x0);
        gbc.writeMem(0xc1a7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc277, gbc.sp());
        EXPECT(0xc1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a7));
        EXPECT(0xb9, gbc.readMem(0xc1a8));
        // CB B9 00E9
        gbc.setState(0x7a74, 0xcdf1, 0xe7e0, 0x8570, 0x9778, 0x9434, 0x0, 0x1);
        gbc.writeMem(0x7a74, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcdf1, gbc.sp());
        EXPECT(0x7a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00EA
        gbc.setState(0xa6e9, 0xc00f, 0xc6f0, 0x340c, 0x1cab, 0xe03d, 0x1, 0x0);
        gbc.writeMem(0xa6e9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc00f, gbc.sp());
        EXPECT(0xa6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e9));
        EXPECT(0xb9, gbc.readMem(0xa6ea));
        // CB B9 00EB
        gbc.setState(0x6eea, 0xdd2f, 0x3c0, 0x48f3, 0x14d5, 0xd86d, 0x1, 0x0);
        gbc.writeMem(0x6eea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdd2f, gbc.sp());
        EXPECT(0x6eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00EC
        gbc.setState(0x6b76, 0xe9d0, 0xd450, 0xbe36, 0x4da6, 0x6fc1, 0x0, 0x1);
        gbc.writeMem(0x6b76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe9d0, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00ED
        gbc.setState(0x2660, 0xba5a, 0x2020, 0xa852, 0x4fa9, 0x52d0, 0x1, 0x0);
        gbc.writeMem(0x2660, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xba5a, gbc.sp());
        EXPECT(0x2662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00EE
        gbc.setState(0x1ffe, 0x61af, 0x8530, 0x1198, 0x57eb, 0x14da, 0x0, 0x0);
        gbc.writeMem(0x1ffe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x61af, gbc.sp());
        EXPECT(0x2000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00EF
        gbc.setState(0x4f44, 0x64f0, 0x75f0, 0x70e2, 0x7064, 0xd444, 0x0, 0x1);
        gbc.writeMem(0x4f44, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x64f0, gbc.sp());
        EXPECT(0x4f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00F0
        gbc.setState(0x8ac9, 0xcc08, 0x1a80, 0xaf5a, 0x9d86, 0x21b9, 0x1, 0x1);
        gbc.writeMem(0x8ac9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcc08, gbc.sp());
        EXPECT(0x8acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac9));
        EXPECT(0xb9, gbc.readMem(0x8aca));
        // CB B9 00F1
        gbc.setState(0x16d1, 0xe28b, 0xae90, 0xc7a5, 0xf575, 0xd892, 0x0, 0x1);
        gbc.writeMem(0x16d1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe28b, gbc.sp());
        EXPECT(0x16d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00F2
        gbc.setState(0x44c7, 0x4eec, 0xa1e0, 0xcd30, 0x5b13, 0xe4ce, 0x1, 0x0);
        gbc.writeMem(0x44c7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0x44c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00F3
        gbc.setState(0x86db, 0x15b7, 0x3c00, 0xc0e5, 0x389b, 0xdaba, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x15b7, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86db));
        EXPECT(0xb9, gbc.readMem(0x86dc));
        // CB B9 00F4
        gbc.setState(0x7ffc, 0xc78f, 0x6ca0, 0x8f6b, 0x964a, 0xab3e, 0x0, 0x1);
        gbc.writeMem(0x7ffc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc78f, gbc.sp());
        EXPECT(0x7ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00F5
        gbc.setState(0xe170, 0x5bfe, 0xa000, 0x9cd1, 0x1d23, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0xe170, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xe172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe170));
        EXPECT(0xb9, gbc.readMem(0xe171));
        // CB B9 00F6
        gbc.setState(0x80b5, 0xff35, 0x9990, 0xbeb5, 0x2bd7, 0x96ea, 0x0, 0x0);
        gbc.writeMem(0x80b5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff35, gbc.sp());
        EXPECT(0x80b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80b5));
        EXPECT(0xb9, gbc.readMem(0x80b6));
        // CB B9 00F7
        gbc.setState(0xc137, 0x162a, 0x90a0, 0x43fa, 0xd748, 0x9bac, 0x0, 0x1);
        gbc.writeMem(0xc137, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc137));
        EXPECT(0xb9, gbc.readMem(0xc138));
        // CB B9 00F9
        gbc.setState(0x9eab, 0xeac3, 0xef0, 0x25de, 0x30b6, 0xcd83, 0x1, 0x0);
        gbc.writeMem(0x9eab, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0x9ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eab));
        EXPECT(0xb9, gbc.readMem(0x9eac));
        // CB B9 00FA
        gbc.setState(0x8dee, 0xc400, 0x6690, 0x33d4, 0x4679, 0xdd7d, 0x0, 0x0);
        gbc.writeMem(0x8dee, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc400, gbc.sp());
        EXPECT(0x8df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dee));
        EXPECT(0xb9, gbc.readMem(0x8def));
        // CB B9 00FB
        gbc.setState(0x5e1f, 0xbfad, 0x4c40, 0x66ea, 0x76ff, 0x204e, 0x0, 0x1);
        gbc.writeMem(0x5e1f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbfad, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 00FC
        gbc.setState(0x28f8, 0xaea7, 0x5150, 0x3b33, 0xe34e, 0xa82a, 0x0, 0x1);
        gbc.writeMem(0x28f8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaea7, gbc.sp());
        EXPECT(0x28fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 00FD
        gbc.setState(0xe3b3, 0x8758, 0x7c70, 0xcc4b, 0x1661, 0x715c, 0x1, 0x0);
        gbc.writeMem(0xe3b3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8758, gbc.sp());
        EXPECT(0xe3b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b3));
        EXPECT(0xb9, gbc.readMem(0xe3b4));
        // CB B9 00FE
        gbc.setState(0xd67a, 0x797a, 0x15d0, 0xe046, 0xc2d9, 0xdcd9, 0x0, 0x0);
        gbc.writeMem(0xd67a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x797a, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67a));
        EXPECT(0xb9, gbc.readMem(0xd67b));
        // CB B9 00FF
        gbc.setState(0xcfb0, 0xdfdc, 0xbcd0, 0xd1d2, 0xb47c, 0x70be, 0x0, 0x0);
        gbc.writeMem(0xcfb0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdfdc, gbc.sp());
        EXPECT(0xcfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb0));
        EXPECT(0xb9, gbc.readMem(0xcfb1));
        // CB B9 0100
        gbc.setState(0x4fa6, 0xd81c, 0x7890, 0x2161, 0xf79e, 0x8352, 0x0, 0x0);
        gbc.writeMem(0x4fa6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd81c, gbc.sp());
        EXPECT(0x4fa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0101
        gbc.setState(0x5464, 0x918c, 0x2600, 0xf662, 0x2b39, 0x1b4e, 0x0, 0x0);
        gbc.writeMem(0x5464, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x918c, gbc.sp());
        EXPECT(0x5466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0102
        gbc.setState(0x2c79, 0x1810, 0x3100, 0xb794, 0x6652, 0x3fe7, 0x0, 0x1);
        gbc.writeMem(0x2c79, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1810, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0103
        gbc.setState(0x85cc, 0x8e3f, 0x96b0, 0x1672, 0xdd00, 0x18af, 0x0, 0x1);
        gbc.writeMem(0x85cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e3f, gbc.sp());
        EXPECT(0x85ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cc));
        EXPECT(0xb9, gbc.readMem(0x85cd));
        // CB B9 0104
        gbc.setState(0x6341, 0x887a, 0x3ac0, 0xa4b1, 0xacb0, 0xd478, 0x1, 0x0);
        gbc.writeMem(0x6341, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x887a, gbc.sp());
        EXPECT(0x6343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0105
        gbc.setState(0x3e2f, 0x384b, 0xb7a0, 0x402d, 0xc64d, 0xa402, 0x0, 0x1);
        gbc.writeMem(0x3e2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x384b, gbc.sp());
        EXPECT(0x3e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0106
        gbc.setState(0x3037, 0xb511, 0x1f80, 0x7843, 0x7473, 0xf62e, 0x0, 0x1);
        gbc.writeMem(0x3037, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb511, gbc.sp());
        EXPECT(0x3039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0107
        gbc.setState(0x7330, 0xa3b8, 0x8320, 0x5ec6, 0xa22c, 0x45e8, 0x0, 0x0);
        gbc.writeMem(0x7330, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa3b8, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0108
        gbc.setState(0x77d9, 0xaeb7, 0xf750, 0xa593, 0xa14d, 0x859f, 0x1, 0x0);
        gbc.writeMem(0x77d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xaeb7, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0109
        gbc.setState(0x2bd1, 0x85a5, 0x7680, 0xa89b, 0xb497, 0x98c5, 0x0, 0x0);
        gbc.writeMem(0x2bd1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0x2bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 010A
        gbc.setState(0x5c39, 0x7d55, 0xaaa0, 0x7af0, 0x5c8, 0x2224, 0x1, 0x1);
        gbc.writeMem(0x5c39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7d55, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 010C
        gbc.setState(0x6aa5, 0x850a, 0x7c50, 0x9084, 0xc63, 0xcb4b, 0x1, 0x0);
        gbc.writeMem(0x6aa5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x850a, gbc.sp());
        EXPECT(0x6aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 010D
        gbc.setState(0xc35f, 0x1e6e, 0x6730, 0x75f0, 0x1192, 0x81a8, 0x0, 0x0);
        gbc.writeMem(0xc35f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1e6e, gbc.sp());
        EXPECT(0xc361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35f));
        EXPECT(0xb9, gbc.readMem(0xc360));
        // CB B9 010E
        gbc.setState(0xeff7, 0x1981, 0x3a30, 0x860c, 0x4974, 0xf820, 0x1, 0x1);
        gbc.writeMem(0xeff7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0xeff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff7));
        EXPECT(0xb9, gbc.readMem(0xeff8));
        // CB B9 010F
        gbc.setState(0x4a55, 0xc708, 0xcce0, 0x6bbd, 0x6847, 0x401f, 0x1, 0x1);
        gbc.writeMem(0x4a55, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc708, gbc.sp());
        EXPECT(0x4a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0110
        gbc.setState(0x9a1f, 0xd39c, 0x7b00, 0x3795, 0x8deb, 0xe097, 0x0, 0x1);
        gbc.writeMem(0x9a1f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1f));
        EXPECT(0xb9, gbc.readMem(0x9a20));
        // CB B9 0111
        gbc.setState(0x269f, 0x1d38, 0x710, 0xec06, 0x2afe, 0x122d, 0x1, 0x1);
        gbc.writeMem(0x269f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1d38, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0112
        gbc.setState(0xae3e, 0x3eef, 0x49e0, 0x64b9, 0x4b16, 0xccb7, 0x0, 0x0);
        gbc.writeMem(0xae3e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3eef, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3e));
        EXPECT(0xb9, gbc.readMem(0xae3f));
        // CB B9 0113
        gbc.setState(0xd2e5, 0x17b, 0x4cd0, 0x7388, 0xcd2e, 0x33e0, 0x0, 0x1);
        gbc.writeMem(0xd2e5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x17b, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e5));
        EXPECT(0xb9, gbc.readMem(0xd2e6));
        // CB B9 0114
        gbc.setState(0x69a9, 0xa5ed, 0x9c90, 0x3008, 0x80ee, 0x2513, 0x1, 0x1);
        gbc.writeMem(0x69a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xa5ed, gbc.sp());
        EXPECT(0x69ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0115
        gbc.setState(0xa1f6, 0x975a, 0x5f20, 0x7130, 0x27fc, 0x9a3c, 0x1, 0x1);
        gbc.writeMem(0xa1f6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x975a, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f6));
        EXPECT(0xb9, gbc.readMem(0xa1f7));
        // CB B9 0116
        gbc.setState(0x9c03, 0xd636, 0x2900, 0x4f8a, 0xf726, 0x3d, 0x0, 0x1);
        gbc.writeMem(0x9c03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd636, gbc.sp());
        EXPECT(0x9c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c03));
        EXPECT(0xb9, gbc.readMem(0x9c04));
        // CB B9 0117
        gbc.setState(0x3130, 0x5c39, 0xa370, 0xbbfd, 0x4350, 0x84c2, 0x1, 0x1);
        gbc.writeMem(0x3130, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5c39, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0118
        gbc.setState(0x8820, 0x4107, 0xc910, 0xea1c, 0x8de5, 0x2aec, 0x0, 0x1);
        gbc.writeMem(0x8820, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4107, gbc.sp());
        EXPECT(0x8822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8820));
        EXPECT(0xb9, gbc.readMem(0x8821));
        // CB B9 0119
        gbc.setState(0x4214, 0x9175, 0xd410, 0xbbf4, 0xf192, 0x6f1d, 0x1, 0x0);
        gbc.writeMem(0x4214, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9175, gbc.sp());
        EXPECT(0x4216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 011A
        gbc.setState(0x56fe, 0x5226, 0x86c0, 0x7ef0, 0x3f44, 0x3b45, 0x1, 0x0);
        gbc.writeMem(0x56fe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5226, gbc.sp());
        EXPECT(0x5700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 011B
        gbc.setState(0xd4, 0x7992, 0x38c0, 0x9c64, 0x7bb1, 0x8950, 0x1, 0x0);
        gbc.writeMem(0xd4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7992, gbc.sp());
        EXPECT(0xd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 011C
        gbc.setState(0xe0be, 0x18a9, 0xe670, 0x27b5, 0x9ae9, 0x86bc, 0x1, 0x1);
        gbc.writeMem(0xe0be, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x18a9, gbc.sp());
        EXPECT(0xe0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0be));
        EXPECT(0xb9, gbc.readMem(0xe0bf));
        // CB B9 011D
        gbc.setState(0x43a7, 0x92d8, 0x4ed0, 0x6a87, 0x6dbc, 0x8d5, 0x0, 0x0);
        gbc.writeMem(0x43a7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x92d8, gbc.sp());
        EXPECT(0x43a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 011E
        gbc.setState(0xdd41, 0xda02, 0xea70, 0x5a47, 0x4a2c, 0x930e, 0x0, 0x0);
        gbc.writeMem(0xdd41, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xda02, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd41));
        EXPECT(0xb9, gbc.readMem(0xdd42));
        // CB B9 011F
        gbc.setState(0xab30, 0xb133, 0xa600, 0xcaf9, 0xe922, 0xc3f6, 0x1, 0x0);
        gbc.writeMem(0xab30, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb133, gbc.sp());
        EXPECT(0xab32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab30));
        EXPECT(0xb9, gbc.readMem(0xab31));
        // CB B9 0120
        gbc.setState(0x5c1e, 0xce6e, 0xf020, 0xf3a6, 0x2a12, 0x38dd, 0x0, 0x1);
        gbc.writeMem(0x5c1e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x5c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0122
        gbc.setState(0x3e49, 0xa914, 0x6710, 0x2788, 0xc8f, 0xe4e0, 0x0, 0x1);
        gbc.writeMem(0x3e49, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa914, gbc.sp());
        EXPECT(0x3e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0123
        gbc.setState(0xed7b, 0x901d, 0xa860, 0xe852, 0x3cc2, 0xcb24, 0x1, 0x0);
        gbc.writeMem(0xed7b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x901d, gbc.sp());
        EXPECT(0xed7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7b));
        EXPECT(0xb9, gbc.readMem(0xed7c));
        // CB B9 0124
        gbc.setState(0xccd2, 0x8481, 0x3b0, 0xccde, 0xf149, 0x6f42, 0x1, 0x0);
        gbc.writeMem(0xccd2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8481, gbc.sp());
        EXPECT(0xccd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd2));
        EXPECT(0xb9, gbc.readMem(0xccd3));
        // CB B9 0125
        gbc.setState(0xdc6, 0xeb65, 0x3680, 0xb21a, 0x4dec, 0x1a2a, 0x1, 0x1);
        gbc.writeMem(0xdc6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeb65, gbc.sp());
        EXPECT(0xdc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0126
        gbc.setState(0xe08c, 0x6ec3, 0x8190, 0xe114, 0xc4a4, 0x3bba, 0x1, 0x1);
        gbc.writeMem(0xe08c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08c));
        EXPECT(0xb9, gbc.readMem(0xe08d));
        // CB B9 0127
        gbc.setState(0xef48, 0x7a42, 0x230, 0xf57, 0x27d6, 0x347d, 0x0, 0x0);
        gbc.writeMem(0xef48, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7a42, gbc.sp());
        EXPECT(0xef4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef48));
        EXPECT(0xb9, gbc.readMem(0xef49));
        // CB B9 0128
        gbc.setState(0xced2, 0xad47, 0x4e20, 0x245e, 0xe43a, 0x17b6, 0x0, 0x0);
        gbc.writeMem(0xced2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad47, gbc.sp());
        EXPECT(0xced4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced2));
        EXPECT(0xb9, gbc.readMem(0xced3));
        // CB B9 0129
        gbc.setState(0xb43, 0xfb68, 0xa0b0, 0x4208, 0xc860, 0x2304, 0x1, 0x1);
        gbc.writeMem(0xb43, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfb68, gbc.sp());
        EXPECT(0xb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 012A
        gbc.setState(0xde4c, 0x8cb6, 0x5600, 0x7e76, 0x1ae, 0x59dd, 0x0, 0x1);
        gbc.writeMem(0xde4c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8cb6, gbc.sp());
        EXPECT(0xde4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde4c));
        EXPECT(0xb9, gbc.readMem(0xde4d));
        // CB B9 012B
        gbc.setState(0x7351, 0x65a4, 0xc7f0, 0x3c20, 0xd2a7, 0x6683, 0x1, 0x0);
        gbc.writeMem(0x7351, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0x7353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 012C
        gbc.setState(0x57fa, 0x8023, 0xe290, 0x64f9, 0xb24d, 0xbd20, 0x0, 0x1);
        gbc.writeMem(0x57fa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8023, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 012D
        gbc.setState(0x154a, 0xef8c, 0xfc40, 0x2e5b, 0xf24c, 0xe2c2, 0x1, 0x1);
        gbc.writeMem(0x154a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xef8c, gbc.sp());
        EXPECT(0x154c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 012E
        gbc.setState(0x9e26, 0x6e8c, 0x1740, 0x8e31, 0xcda8, 0x3601, 0x1, 0x1);
        gbc.writeMem(0x9e26, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6e8c, gbc.sp());
        EXPECT(0x9e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e26));
        EXPECT(0xb9, gbc.readMem(0x9e27));
        // CB B9 012F
        gbc.setState(0x364d, 0x6ca, 0xd100, 0x9db6, 0xd251, 0xb232, 0x1, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0x364f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0130
        gbc.setState(0x3634, 0x33a8, 0x5160, 0xf2c2, 0x69b8, 0x7644, 0x1, 0x1);
        gbc.writeMem(0x3634, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x33a8, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0131
        gbc.setState(0x9736, 0x7aaf, 0x3cc0, 0xe600, 0x192f, 0xa5d6, 0x1, 0x1);
        gbc.writeMem(0x9736, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7aaf, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9736));
        EXPECT(0xb9, gbc.readMem(0x9737));
        // CB B9 0132
        gbc.setState(0xce33, 0xde56, 0xf2a0, 0xed1e, 0xe9be, 0xeee1, 0x1, 0x0);
        gbc.writeMem(0xce33, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xde56, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce33));
        EXPECT(0xb9, gbc.readMem(0xce34));
        // CB B9 0133
        gbc.setState(0x552e, 0x7236, 0x7c80, 0x3d00, 0x3755, 0x230, 0x1, 0x1);
        gbc.writeMem(0x552e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7236, gbc.sp());
        EXPECT(0x5530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0134
        gbc.setState(0x8003, 0x6a5c, 0xbc50, 0xa8ec, 0x4c48, 0x5541, 0x1, 0x1);
        gbc.writeMem(0x8003, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6a5c, gbc.sp());
        EXPECT(0x8005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8003));
        EXPECT(0xb9, gbc.readMem(0x8004));
        // CB B9 0135
        gbc.setState(0x4f2b, 0x8316, 0xd820, 0xa1c4, 0xd43a, 0x9b15, 0x1, 0x0);
        gbc.writeMem(0x4f2b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8316, gbc.sp());
        EXPECT(0x4f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0136
        gbc.setState(0x1ab3, 0xfb93, 0x4290, 0x6f7f, 0x506e, 0x4bda, 0x1, 0x0);
        gbc.writeMem(0x1ab3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfb93, gbc.sp());
        EXPECT(0x1ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0137
        gbc.setState(0x7595, 0x1727, 0x3e80, 0x6d72, 0x445e, 0x1ca5, 0x0, 0x1);
        gbc.writeMem(0x7595, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1727, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0138
        gbc.setState(0x5d81, 0x6467, 0x94a0, 0x5121, 0xc11a, 0xbe07, 0x0, 0x1);
        gbc.writeMem(0x5d81, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6467, gbc.sp());
        EXPECT(0x5d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0139
        gbc.setState(0x2a5e, 0x1cee, 0xac30, 0x1ed1, 0xf2ed, 0xee5e, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1cee, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 013A
        gbc.setState(0x40f, 0x3c22, 0xa850, 0x3d6, 0xd5b7, 0x86b1, 0x0, 0x1);
        gbc.writeMem(0x40f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3c22, gbc.sp());
        EXPECT(0x411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 013B
        gbc.setState(0x983b, 0xdddc, 0xecd0, 0x7aca, 0x7dbb, 0x7ec8, 0x0, 0x0);
        gbc.writeMem(0x983b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xdddc, gbc.sp());
        EXPECT(0x983d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983b));
        EXPECT(0xb9, gbc.readMem(0x983c));
        // CB B9 013D
        gbc.setState(0x9e6, 0xef36, 0xcde0, 0x242a, 0x7d9, 0x4531, 0x0, 0x1);
        gbc.writeMem(0x9e6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xef36, gbc.sp());
        EXPECT(0x9e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 013E
        gbc.setState(0x9387, 0x2475, 0x9870, 0x3ad7, 0xde7e, 0xcd03, 0x1, 0x1);
        gbc.writeMem(0x9387, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0x9389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9387));
        EXPECT(0xb9, gbc.readMem(0x9388));
        // CB B9 013F
        gbc.setState(0x676d, 0x4f42, 0xba50, 0x506b, 0x2929, 0x52aa, 0x1, 0x0);
        gbc.writeMem(0x676d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4f42, gbc.sp());
        EXPECT(0x676f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0140
        gbc.setState(0x29fe, 0x8937, 0x1430, 0xc871, 0x749b, 0xa6ee, 0x0, 0x1);
        gbc.writeMem(0x29fe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0x2a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0141
        gbc.setState(0xcee0, 0xec0f, 0x5660, 0xcf79, 0xbd3a, 0xb476, 0x1, 0x1);
        gbc.writeMem(0xcee0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xec0f, gbc.sp());
        EXPECT(0xcee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee0));
        EXPECT(0xb9, gbc.readMem(0xcee1));
        // CB B9 0142
        gbc.setState(0x968c, 0xdf55, 0x7e70, 0x438b, 0x16c3, 0xca0d, 0x0, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdf55, gbc.sp());
        EXPECT(0x968e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968c));
        EXPECT(0xb9, gbc.readMem(0x968d));
        // CB B9 0143
        gbc.setState(0xe064, 0x4266, 0xfbb0, 0x8807, 0xab09, 0x787f, 0x0, 0x1);
        gbc.writeMem(0xe064, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0xe066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe064));
        EXPECT(0xb9, gbc.readMem(0xe065));
        // CB B9 0144
        gbc.setState(0x5c08, 0x1e9b, 0x2760, 0x8aa8, 0x60aa, 0x69af, 0x1, 0x0);
        gbc.writeMem(0x5c08, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0x5c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0145
        gbc.setState(0x88c, 0x1c4c, 0xf90, 0xf17b, 0xeec9, 0x2036, 0x0, 0x0);
        gbc.writeMem(0x88c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1c4c, gbc.sp());
        EXPECT(0x88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0146
        gbc.setState(0xae0b, 0xa85e, 0x87e0, 0x24cf, 0x3b5e, 0x6025, 0x1, 0x1);
        gbc.writeMem(0xae0b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0xae0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0b));
        EXPECT(0xb9, gbc.readMem(0xae0c));
        // CB B9 0147
        gbc.setState(0x7b16, 0x8212, 0xd3e0, 0x2db9, 0x979c, 0x6a03, 0x0, 0x0);
        gbc.writeMem(0x7b16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8212, gbc.sp());
        EXPECT(0x7b18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0148
        gbc.setState(0x3c88, 0x3a4c, 0x9470, 0x1c08, 0x629d, 0x8760, 0x0, 0x0);
        gbc.writeMem(0x3c88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3a4c, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0149
        gbc.setState(0xe5c7, 0x11f4, 0xe440, 0xf281, 0xa72b, 0xba6b, 0x1, 0x1);
        gbc.writeMem(0xe5c7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x11f4, gbc.sp());
        EXPECT(0xe5c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c7));
        EXPECT(0xb9, gbc.readMem(0xe5c8));
        // CB B9 014A
        gbc.setState(0x555c, 0x742e, 0xf7f0, 0x24dc, 0xb79f, 0x84cb, 0x0, 0x0);
        gbc.writeMem(0x555c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x742e, gbc.sp());
        EXPECT(0x555e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 014B
        gbc.setState(0xbb6c, 0x9ef5, 0xf480, 0xc787, 0x1d52, 0xf686, 0x0, 0x1);
        gbc.writeMem(0xbb6c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0xbb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb6c));
        EXPECT(0xb9, gbc.readMem(0xbb6d));
        // CB B9 014C
        gbc.setState(0xdaa3, 0xc7ed, 0x2680, 0xa2f5, 0xc974, 0xacb4, 0x1, 0x0);
        gbc.writeMem(0xdaa3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc7ed, gbc.sp());
        EXPECT(0xdaa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaa3));
        EXPECT(0xb9, gbc.readMem(0xdaa4));
        // CB B9 014D
        gbc.setState(0x1cdd, 0x531d, 0xc5d0, 0xd26d, 0xf7fe, 0xc018, 0x0, 0x1);
        gbc.writeMem(0x1cdd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x531d, gbc.sp());
        EXPECT(0x1cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 014E
        gbc.setState(0x94c2, 0x4730, 0xb3d0, 0x3a9f, 0xc5fe, 0xa049, 0x1, 0x0);
        gbc.writeMem(0x94c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4730, gbc.sp());
        EXPECT(0x94c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c2));
        EXPECT(0xb9, gbc.readMem(0x94c3));
        // CB B9 014F
        gbc.setState(0x9351, 0x2bad, 0x6500, 0x8413, 0xf8ff, 0x4fc7, 0x1, 0x1);
        gbc.writeMem(0x9351, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0x9353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9351));
        EXPECT(0xb9, gbc.readMem(0x9352));
        // CB B9 0150
        gbc.setState(0x1025, 0xe65c, 0xdb30, 0x4604, 0xcdfe, 0x8543, 0x1, 0x0);
        gbc.writeMem(0x1025, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe65c, gbc.sp());
        EXPECT(0x1027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0151
        gbc.setState(0xc4bf, 0xb1f6, 0x2730, 0x6c9f, 0xd300, 0x75a6, 0x0, 0x1);
        gbc.writeMem(0xc4bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb1f6, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bf));
        EXPECT(0xb9, gbc.readMem(0xc4c0));
        // CB B9 0152
        gbc.setState(0x4455, 0xda5f, 0x5d70, 0xc9fd, 0x30cc, 0xd61d, 0x1, 0x0);
        gbc.writeMem(0x4455, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xda5f, gbc.sp());
        EXPECT(0x4457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0154
        gbc.setState(0x29c2, 0xdcae, 0xa900, 0x9a46, 0xa65b, 0xdf8e, 0x1, 0x1);
        gbc.writeMem(0x29c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdcae, gbc.sp());
        EXPECT(0x29c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0155
        gbc.setState(0x6a47, 0x863a, 0xbaa0, 0x8632, 0x3713, 0x670, 0x1, 0x0);
        gbc.writeMem(0x6a47, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x863a, gbc.sp());
        EXPECT(0x6a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0156
        gbc.setState(0x2c88, 0xb883, 0x380, 0xf73e, 0x89b2, 0x761f, 0x1, 0x0);
        gbc.writeMem(0x2c88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb883, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0157
        gbc.setState(0xc5d1, 0x11ee, 0xab50, 0x18d8, 0x3043, 0x4f8d, 0x0, 0x0);
        gbc.writeMem(0xc5d1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x11ee, gbc.sp());
        EXPECT(0xc5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d1));
        EXPECT(0xb9, gbc.readMem(0xc5d2));
        // CB B9 0159
        gbc.setState(0xadae, 0x359e, 0x8660, 0x4913, 0xe6c6, 0x9834, 0x1, 0x1);
        gbc.writeMem(0xadae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x359e, gbc.sp());
        EXPECT(0xadb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadae));
        EXPECT(0xb9, gbc.readMem(0xadaf));
        // CB B9 015A
        gbc.setState(0xa061, 0xba31, 0xad50, 0xc93d, 0x52b5, 0xe9a2, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xba31, gbc.sp());
        EXPECT(0xa063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa061));
        EXPECT(0xb9, gbc.readMem(0xa062));
        // CB B9 015B
        gbc.setState(0x835c, 0xb8c4, 0x5ef0, 0xc163, 0x6a9f, 0xe5fc, 0x0, 0x1);
        gbc.writeMem(0x835c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb8c4, gbc.sp());
        EXPECT(0x835e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835c));
        EXPECT(0xb9, gbc.readMem(0x835d));
        // CB B9 015C
        gbc.setState(0x7003, 0xe619, 0x65e0, 0xad34, 0xc546, 0xa038, 0x0, 0x0);
        gbc.writeMem(0x7003, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0x7005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 015D
        gbc.setState(0xb130, 0x5502, 0x9e00, 0xb7e8, 0x1c7a, 0x6b3f, 0x1, 0x0);
        gbc.writeMem(0xb130, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5502, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb130));
        EXPECT(0xb9, gbc.readMem(0xb131));
        // CB B9 015E
        gbc.setState(0x2beb, 0xc09a, 0x5210, 0xac52, 0x5a1d, 0x5ed9, 0x1, 0x1);
        gbc.writeMem(0x2beb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc09a, gbc.sp());
        EXPECT(0x2bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 015F
        gbc.setState(0x55fc, 0x9adf, 0xb270, 0x2831, 0xc2ab, 0xd8cb, 0x0, 0x1);
        gbc.writeMem(0x55fc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9adf, gbc.sp());
        EXPECT(0x55fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0160
        gbc.setState(0x1634, 0x836f, 0x1b30, 0x4da8, 0x993a, 0x9476, 0x0, 0x0);
        gbc.writeMem(0x1634, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x836f, gbc.sp());
        EXPECT(0x1636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0161
        gbc.setState(0x113d, 0xeb7d, 0x3370, 0xb971, 0xc802, 0x2742, 0x1, 0x1);
        gbc.writeMem(0x113d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xeb7d, gbc.sp());
        EXPECT(0x113f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0162
        gbc.setState(0x9f5b, 0x490c, 0x8fa0, 0xfe38, 0xb445, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0x9f5b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x490c, gbc.sp());
        EXPECT(0x9f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5b));
        EXPECT(0xb9, gbc.readMem(0x9f5c));
        // CB B9 0163
        gbc.setState(0xc98, 0x30ef, 0xe660, 0x62bd, 0x27fe, 0x279d, 0x0, 0x0);
        gbc.writeMem(0xc98, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x30ef, gbc.sp());
        EXPECT(0xc9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0164
        gbc.setState(0x5077, 0xc327, 0x2290, 0x2c19, 0x1b08, 0xc7c5, 0x1, 0x1);
        gbc.writeMem(0x5077, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc327, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0165
        gbc.setState(0x973b, 0xac8, 0xbf20, 0xdd3d, 0xe03a, 0x6b6d, 0x1, 0x0);
        gbc.writeMem(0x973b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xac8, gbc.sp());
        EXPECT(0x973d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973b));
        EXPECT(0xb9, gbc.readMem(0x973c));
        // CB B9 0166
        gbc.setState(0x77ec, 0x1d9, 0xbe40, 0x651b, 0x47b5, 0xe091, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1d9, gbc.sp());
        EXPECT(0x77ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0167
        gbc.setState(0x9962, 0x6e73, 0x8b20, 0xbdcc, 0x8a6a, 0x8e1, 0x1, 0x1);
        gbc.writeMem(0x9962, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6e73, gbc.sp());
        EXPECT(0x9964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9962));
        EXPECT(0xb9, gbc.readMem(0x9963));
        // CB B9 0168
        gbc.setState(0x7c28, 0xebdb, 0x59b0, 0xe166, 0xe068, 0x6cd6, 0x1, 0x1);
        gbc.writeMem(0x7c28, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xebdb, gbc.sp());
        EXPECT(0x7c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 016B
        gbc.setState(0x3677, 0x1f90, 0xc30, 0xf55e, 0x3bfb, 0x37b1, 0x0, 0x0);
        gbc.writeMem(0x3677, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1f90, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 016C
        gbc.setState(0xbb5c, 0x9533, 0x6790, 0x4e87, 0x5a62, 0xb170, 0x1, 0x1);
        gbc.writeMem(0xbb5c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9533, gbc.sp());
        EXPECT(0xbb5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb5c));
        EXPECT(0xb9, gbc.readMem(0xbb5d));
        // CB B9 016D
        gbc.setState(0x3d18, 0x53ea, 0x6310, 0x413a, 0xc132, 0x1475, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x53ea, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0170
        gbc.setState(0xb827, 0xb58a, 0x89a0, 0x4db1, 0xff84, 0x5b6, 0x1, 0x1);
        gbc.writeMem(0xb827, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb58a, gbc.sp());
        EXPECT(0xb829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb827));
        EXPECT(0xb9, gbc.readMem(0xb828));
        // CB B9 0171
        gbc.setState(0xd7aa, 0x6f5b, 0xd190, 0xb81f, 0xbbe2, 0xe53b, 0x1, 0x0);
        gbc.writeMem(0xd7aa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7aa));
        EXPECT(0xb9, gbc.readMem(0xd7ab));
        // CB B9 0172
        gbc.setState(0xc41a, 0xdd1f, 0xf140, 0xc14f, 0xadea, 0x4c0c, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0xc41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41a));
        EXPECT(0xb9, gbc.readMem(0xc41b));
        // CB B9 0173
        gbc.setState(0x78b2, 0xde9e, 0x48e0, 0x71cb, 0xe14b, 0xbadb, 0x0, 0x0);
        gbc.writeMem(0x78b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xde9e, gbc.sp());
        EXPECT(0x78b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0174
        gbc.setState(0xa2e3, 0xdac, 0xedd0, 0x73f1, 0xcd8f, 0xfe50, 0x1, 0x0);
        gbc.writeMem(0xa2e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdac, gbc.sp());
        EXPECT(0xa2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e3));
        EXPECT(0xb9, gbc.readMem(0xa2e4));
        // CB B9 0175
        gbc.setState(0xbc72, 0x7fc7, 0x9860, 0x98a1, 0x8a53, 0x4c5d, 0x1, 0x0);
        gbc.writeMem(0xbc72, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7fc7, gbc.sp());
        EXPECT(0xbc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc72));
        EXPECT(0xb9, gbc.readMem(0xbc73));
        // CB B9 0176
        gbc.setState(0x4645, 0x6b10, 0xf50, 0x743f, 0x1ed5, 0x2ac, 0x1, 0x0);
        gbc.writeMem(0x4645, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6b10, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0177
        gbc.setState(0xed94, 0xd7b7, 0xe8e0, 0xd51b, 0x76bc, 0xc6ea, 0x0, 0x0);
        gbc.writeMem(0xed94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd7b7, gbc.sp());
        EXPECT(0xed96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed94));
        EXPECT(0xb9, gbc.readMem(0xed95));
        // CB B9 0178
        gbc.setState(0x8eae, 0x16b0, 0xd060, 0x6050, 0xe925, 0xa8d5, 0x1, 0x0);
        gbc.writeMem(0x8eae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x16b0, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eae));
        EXPECT(0xb9, gbc.readMem(0x8eaf));
        // CB B9 0179
        gbc.setState(0x6666, 0xb9b5, 0xf110, 0xf7da, 0xf80a, 0xa29c, 0x0, 0x0);
        gbc.writeMem(0x6666, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb9b5, gbc.sp());
        EXPECT(0x6668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 017A
        gbc.setState(0x30f5, 0xada5, 0x6a90, 0xd797, 0xf306, 0xb0f1, 0x1, 0x0);
        gbc.writeMem(0x30f5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xada5, gbc.sp());
        EXPECT(0x30f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 017B
        gbc.setState(0x92ab, 0x418, 0x6260, 0x2acd, 0xf9ed, 0x5a9e, 0x1, 0x0);
        gbc.writeMem(0x92ab, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x418, gbc.sp());
        EXPECT(0x92ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ab));
        EXPECT(0xb9, gbc.readMem(0x92ac));
        // CB B9 017C
        gbc.setState(0xa16b, 0xc736, 0xeb00, 0xdf99, 0x29b1, 0xaec, 0x1, 0x0);
        gbc.writeMem(0xa16b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc736, gbc.sp());
        EXPECT(0xa16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16b));
        EXPECT(0xb9, gbc.readMem(0xa16c));
        // CB B9 017D
        gbc.setState(0x9f25, 0xd85a, 0x7f60, 0xbe0e, 0xa2e8, 0x99e7, 0x1, 0x0);
        gbc.writeMem(0x9f25, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd85a, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f25));
        EXPECT(0xb9, gbc.readMem(0x9f26));
        // CB B9 017E
        gbc.setState(0x930a, 0x8a6c, 0xc1d0, 0x5f97, 0x3a24, 0xe9c, 0x0, 0x1);
        gbc.writeMem(0x930a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8a6c, gbc.sp());
        EXPECT(0x930c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x930a));
        EXPECT(0xb9, gbc.readMem(0x930b));
        // CB B9 017F
        gbc.setState(0x6a5e, 0xf3b6, 0x25b0, 0xc141, 0xf154, 0xc7da, 0x0, 0x1);
        gbc.writeMem(0x6a5e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf3b6, gbc.sp());
        EXPECT(0x6a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0180
        gbc.setState(0xbde3, 0x815e, 0xaa0, 0x3e0b, 0xd5bd, 0xfb3f, 0x0, 0x1);
        gbc.writeMem(0xbde3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x815e, gbc.sp());
        EXPECT(0xbde5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde3));
        EXPECT(0xb9, gbc.readMem(0xbde4));
        // CB B9 0181
        gbc.setState(0x4d9d, 0xf9f3, 0xd370, 0x5155, 0x3d7f, 0x32c6, 0x1, 0x1);
        gbc.writeMem(0x4d9d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf9f3, gbc.sp());
        EXPECT(0x4d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0182
        gbc.setState(0xb764, 0xbe1d, 0xb1b0, 0xb0cf, 0xd734, 0xa23d, 0x1, 0x1);
        gbc.writeMem(0xb764, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbe1d, gbc.sp());
        EXPECT(0xb766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb764));
        EXPECT(0xb9, gbc.readMem(0xb765));
        // CB B9 0183
        gbc.setState(0xc5fc, 0x396c, 0x7660, 0xff5e, 0x55a4, 0x8979, 0x0, 0x0);
        gbc.writeMem(0xc5fc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x396c, gbc.sp());
        EXPECT(0xc5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fc));
        EXPECT(0xb9, gbc.readMem(0xc5fd));
        // CB B9 0184
        gbc.setState(0x62b7, 0x257d, 0x87d0, 0xcb58, 0xe89f, 0xad52, 0x1, 0x1);
        gbc.writeMem(0x62b7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x257d, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0185
        gbc.setState(0xc662, 0x748, 0xb7b0, 0xf9ba, 0x402f, 0x7776, 0x0, 0x0);
        gbc.writeMem(0xc662, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xc664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc662));
        EXPECT(0xb9, gbc.readMem(0xc663));
        // CB B9 0186
        gbc.setState(0x1c85, 0xf95b, 0x270, 0x3409, 0x8294, 0x9982, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0x1c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0187
        gbc.setState(0x1622, 0x94da, 0xf770, 0x6d9b, 0xb945, 0xfc8b, 0x1, 0x1);
        gbc.writeMem(0x1622, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x94da, gbc.sp());
        EXPECT(0x1624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0188
        gbc.setState(0x1658, 0x9438, 0x4ff0, 0x96b0, 0x7f6a, 0xc9f4, 0x1, 0x0);
        gbc.writeMem(0x1658, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9438, gbc.sp());
        EXPECT(0x165a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0189
        gbc.setState(0xb49b, 0x20f2, 0x89e0, 0x4da9, 0x7f7e, 0xbf0a, 0x1, 0x1);
        gbc.writeMem(0xb49b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x20f2, gbc.sp());
        EXPECT(0xb49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb49b));
        EXPECT(0xb9, gbc.readMem(0xb49c));
        // CB B9 018A
        gbc.setState(0xc988, 0xd5c1, 0x55d0, 0xb33c, 0x42eb, 0x962f, 0x0, 0x1);
        gbc.writeMem(0xc988, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd5c1, gbc.sp());
        EXPECT(0xc98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc988));
        EXPECT(0xb9, gbc.readMem(0xc989));
        // CB B9 018B
        gbc.setState(0x8ef4, 0x55fd, 0x2400, 0x18b3, 0x42cb, 0xc00d, 0x0, 0x0);
        gbc.writeMem(0x8ef4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x55fd, gbc.sp());
        EXPECT(0x8ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef4));
        EXPECT(0xb9, gbc.readMem(0x8ef5));
        // CB B9 018C
        gbc.setState(0x7ffd, 0x8aee, 0x8fe0, 0xb5de, 0x159a, 0x6e4f, 0x1, 0x1);
        gbc.writeMem(0x7ffd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8aee, gbc.sp());
        EXPECT(0x7fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 018D
        gbc.setState(0x6d08, 0x224a, 0x2770, 0xdcf7, 0x1e50, 0xff23, 0x0, 0x1);
        gbc.writeMem(0x6d08, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0x6d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 018E
        gbc.setState(0xac0d, 0xc6eb, 0x70d0, 0x63cf, 0xb85a, 0xbaa1, 0x0, 0x1);
        gbc.writeMem(0xac0d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc6eb, gbc.sp());
        EXPECT(0xac0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0d));
        EXPECT(0xb9, gbc.readMem(0xac0e));
        // CB B9 018F
        gbc.setState(0x7ce3, 0x5798, 0x6e60, 0xd235, 0x301c, 0x71e3, 0x1, 0x0);
        gbc.writeMem(0x7ce3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5798, gbc.sp());
        EXPECT(0x7ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0190
        gbc.setState(0x69d0, 0xdec8, 0x97a0, 0xdee6, 0x396, 0xe64f, 0x0, 0x1);
        gbc.writeMem(0x69d0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdec8, gbc.sp());
        EXPECT(0x69d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0191
        gbc.setState(0x83ff, 0xefdc, 0xdbf0, 0x6088, 0x2889, 0x3ee3, 0x1, 0x0);
        gbc.writeMem(0x83ff, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xefdc, gbc.sp());
        EXPECT(0x8401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ff));
        EXPECT(0xb9, gbc.readMem(0x8400));
        // CB B9 0192
        gbc.setState(0x1aef, 0xb447, 0x7d30, 0xb8fa, 0xee1d, 0xfd75, 0x1, 0x0);
        gbc.writeMem(0x1aef, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb447, gbc.sp());
        EXPECT(0x1af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0193
        gbc.setState(0x9d3d, 0x8678, 0x7ee0, 0xbfad, 0xf487, 0x883c, 0x1, 0x0);
        gbc.writeMem(0x9d3d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8678, gbc.sp());
        EXPECT(0x9d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3d));
        EXPECT(0xb9, gbc.readMem(0x9d3e));
        // CB B9 0194
        gbc.setState(0xd471, 0x3482, 0x4f90, 0x9e3d, 0x4856, 0xaabf, 0x0, 0x0);
        gbc.writeMem(0xd471, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3482, gbc.sp());
        EXPECT(0xd473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd471));
        EXPECT(0xb9, gbc.readMem(0xd472));
        // CB B9 0195
        gbc.setState(0xd310, 0xcde7, 0xc680, 0x8e74, 0xea91, 0xd068, 0x1, 0x1);
        gbc.writeMem(0xd310, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcde7, gbc.sp());
        EXPECT(0xd312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd310));
        EXPECT(0xb9, gbc.readMem(0xd311));
        // CB B9 0196
        gbc.setState(0x78bb, 0xa3ef, 0xebd0, 0xa27b, 0xd708, 0xcec0, 0x0, 0x0);
        gbc.writeMem(0x78bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa3ef, gbc.sp());
        EXPECT(0x78bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0197
        gbc.setState(0x4fec, 0xf117, 0x5500, 0x3ae6, 0xee2b, 0x7655, 0x0, 0x0);
        gbc.writeMem(0x4fec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf117, gbc.sp());
        EXPECT(0x4fee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0198
        gbc.setState(0x4d00, 0xfde3, 0xbdd0, 0x353, 0x82ea, 0x11a8, 0x1, 0x1);
        gbc.writeMem(0x4d00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfde3, gbc.sp());
        EXPECT(0x4d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0199
        gbc.setState(0x71ae, 0xe510, 0x1a20, 0xa69c, 0xa4fa, 0x6e7c, 0x0, 0x0);
        gbc.writeMem(0x71ae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe510, gbc.sp());
        EXPECT(0x71b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 019A
        gbc.setState(0x63f6, 0xb3fe, 0x7b10, 0xb276, 0x20ed, 0xd4a, 0x1, 0x0);
        gbc.writeMem(0x63f6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb3fe, gbc.sp());
        EXPECT(0x63f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 019B
        gbc.setState(0x94c2, 0x4109, 0xdab0, 0xe8a0, 0xd1ae, 0xe58, 0x1, 0x1);
        gbc.writeMem(0x94c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4109, gbc.sp());
        EXPECT(0x94c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c2));
        EXPECT(0xb9, gbc.readMem(0x94c3));
        // CB B9 019C
        gbc.setState(0xa3bb, 0x7a2d, 0x1b0, 0xa547, 0x8071, 0x26df, 0x0, 0x1);
        gbc.writeMem(0xa3bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7a2d, gbc.sp());
        EXPECT(0xa3bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bb));
        EXPECT(0xb9, gbc.readMem(0xa3bc));
        // CB B9 019D
        gbc.setState(0x60e8, 0x938a, 0x30, 0x3397, 0xbf33, 0x263d, 0x1, 0x0);
        gbc.writeMem(0x60e8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x938a, gbc.sp());
        EXPECT(0x60ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 019E
        gbc.setState(0xd1bf, 0xffe7, 0x6330, 0x1fb8, 0x4897, 0x2a64, 0x1, 0x0);
        gbc.writeMem(0xd1bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xffe7, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bf));
        EXPECT(0xb9, gbc.readMem(0xd1c0));
        // CB B9 019F
        gbc.setState(0xe39b, 0x1310, 0xbb50, 0xab83, 0x3ac9, 0x4db0, 0x1, 0x1);
        gbc.writeMem(0xe39b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1310, gbc.sp());
        EXPECT(0xe39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39b));
        EXPECT(0xb9, gbc.readMem(0xe39c));
        // CB B9 01A0
        gbc.setState(0x987, 0x2808, 0xb8f0, 0x1eb2, 0x6f05, 0x3827, 0x1, 0x0);
        gbc.writeMem(0x987, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01A1
        gbc.setState(0xba6d, 0xfbcd, 0x7dd0, 0x7a7e, 0x88e, 0xf748, 0x0, 0x1);
        gbc.writeMem(0xba6d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfbcd, gbc.sp());
        EXPECT(0xba6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba6d));
        EXPECT(0xb9, gbc.readMem(0xba6e));
        // CB B9 01A2
        gbc.setState(0x3aca, 0xc6b8, 0x5b10, 0xcc5, 0x4612, 0xf472, 0x1, 0x0);
        gbc.writeMem(0x3aca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc6b8, gbc.sp());
        EXPECT(0x3acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01A3
        gbc.setState(0x5666, 0xce36, 0x3290, 0x546f, 0x4c18, 0xac09, 0x1, 0x0);
        gbc.writeMem(0x5666, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xce36, gbc.sp());
        EXPECT(0x5668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01A4
        gbc.setState(0x629b, 0x95e7, 0x51d0, 0xc2db, 0xc2fe, 0xfdce, 0x0, 0x1);
        gbc.writeMem(0x629b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0x629d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01A5
        gbc.setState(0x5f28, 0x239d, 0x3d60, 0x8923, 0x66ed, 0xd400, 0x1, 0x0);
        gbc.writeMem(0x5f28, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x239d, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01A7
        gbc.setState(0xc329, 0x5958, 0x11f0, 0x2488, 0x4b8d, 0x2730, 0x0, 0x1);
        gbc.writeMem(0xc329, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5958, gbc.sp());
        EXPECT(0xc32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc329));
        EXPECT(0xb9, gbc.readMem(0xc32a));
        // CB B9 01A8
        gbc.setState(0x786, 0x5599, 0xadb0, 0x1f4a, 0x6f2a, 0x556, 0x1, 0x1);
        gbc.writeMem(0x786, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5599, gbc.sp());
        EXPECT(0x788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01A9
        gbc.setState(0xaf6d, 0xe0d0, 0xdbe0, 0x2e24, 0x3bbb, 0x9a28, 0x1, 0x1);
        gbc.writeMem(0xaf6d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe0d0, gbc.sp());
        EXPECT(0xaf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6d));
        EXPECT(0xb9, gbc.readMem(0xaf6e));
        // CB B9 01AA
        gbc.setState(0xc78d, 0xd2ba, 0x8940, 0x9f8, 0x7cbe, 0xafa2, 0x0, 0x1);
        gbc.writeMem(0xc78d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd2ba, gbc.sp());
        EXPECT(0xc78f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78d));
        EXPECT(0xb9, gbc.readMem(0xc78e));
        // CB B9 01AB
        gbc.setState(0x1ae0, 0xdb2a, 0x9ac0, 0xc4b1, 0x938d, 0xd00c, 0x0, 0x1);
        gbc.writeMem(0x1ae0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdb2a, gbc.sp());
        EXPECT(0x1ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01AC
        gbc.setState(0x5dd6, 0x3563, 0x92c0, 0x651b, 0xa946, 0xc9d5, 0x1, 0x1);
        gbc.writeMem(0x5dd6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3563, gbc.sp());
        EXPECT(0x5dd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01AD
        gbc.setState(0xd6d3, 0xb8a7, 0x2d90, 0x20d2, 0xf341, 0xed97, 0x0, 0x1);
        gbc.writeMem(0xd6d3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb8a7, gbc.sp());
        EXPECT(0xd6d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d3));
        EXPECT(0xb9, gbc.readMem(0xd6d4));
        // CB B9 01AE
        gbc.setState(0xb220, 0xf0a9, 0xc790, 0xa927, 0x8e68, 0xb34b, 0x0, 0x0);
        gbc.writeMem(0xb220, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf0a9, gbc.sp());
        EXPECT(0xb222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb220));
        EXPECT(0xb9, gbc.readMem(0xb221));
        // CB B9 01AF
        gbc.setState(0x4b47, 0x6fdb, 0xb040, 0x8881, 0xbacb, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x4b47, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6fdb, gbc.sp());
        EXPECT(0x4b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01B0
        gbc.setState(0xef7a, 0xcdf, 0xcdd0, 0x67b7, 0x485e, 0x7187, 0x0, 0x0);
        gbc.writeMem(0xef7a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcdf, gbc.sp());
        EXPECT(0xef7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7a));
        EXPECT(0xb9, gbc.readMem(0xef7b));
        // CB B9 01B1
        gbc.setState(0xe57a, 0x6ca1, 0xc150, 0x8e19, 0x53cd, 0xf144, 0x1, 0x1);
        gbc.writeMem(0xe57a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6ca1, gbc.sp());
        EXPECT(0xe57c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57a));
        EXPECT(0xb9, gbc.readMem(0xe57b));
        // CB B9 01B2
        gbc.setState(0x343d, 0xb66e, 0xa240, 0xf9e5, 0xb3e1, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x343d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb66e, gbc.sp());
        EXPECT(0x343f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01B3
        gbc.setState(0xebe, 0xd734, 0xdb50, 0x3246, 0xe261, 0xd24, 0x0, 0x0);
        gbc.writeMem(0xebe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd734, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01B4
        gbc.setState(0xd0cf, 0x968b, 0xd240, 0x24c6, 0xb7cd, 0xfba8, 0x1, 0x0);
        gbc.writeMem(0xd0cf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x968b, gbc.sp());
        EXPECT(0xd0d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cf));
        EXPECT(0xb9, gbc.readMem(0xd0d0));
        // CB B9 01B5
        gbc.setState(0xa12e, 0x3aab, 0x7920, 0xa8d4, 0xe553, 0xca1f, 0x0, 0x0);
        gbc.writeMem(0xa12e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3aab, gbc.sp());
        EXPECT(0xa130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa12e));
        EXPECT(0xb9, gbc.readMem(0xa12f));
        // CB B9 01B6
        gbc.setState(0x2397, 0x2ccb, 0xa090, 0x46da, 0x836a, 0x5922, 0x0, 0x1);
        gbc.writeMem(0x2397, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2ccb, gbc.sp());
        EXPECT(0x2399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01B7
        gbc.setState(0x39c0, 0xeb4b, 0xdb40, 0xef21, 0x7c1b, 0x456e, 0x0, 0x1);
        gbc.writeMem(0x39c0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01B8
        gbc.setState(0x5f7a, 0xb045, 0x2820, 0x933c, 0xd8c7, 0xe194, 0x0, 0x0);
        gbc.writeMem(0x5f7a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb045, gbc.sp());
        EXPECT(0x5f7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01B9
        gbc.setState(0xb4e3, 0x58f7, 0xe190, 0xb565, 0xdff, 0x3e9d, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x58f7, gbc.sp());
        EXPECT(0xb4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e3));
        EXPECT(0xb9, gbc.readMem(0xb4e4));
        // CB B9 01BA
        gbc.setState(0x26ed, 0xbb08, 0x9660, 0xfb06, 0x40f3, 0x61db, 0x1, 0x0);
        gbc.writeMem(0x26ed, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x26ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01BB
        gbc.setState(0xa557, 0x75c9, 0x39e0, 0x50d0, 0x9818, 0xd60f, 0x0, 0x0);
        gbc.writeMem(0xa557, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x75c9, gbc.sp());
        EXPECT(0xa559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa557));
        EXPECT(0xb9, gbc.readMem(0xa558));
        // CB B9 01BC
        gbc.setState(0xb3fe, 0x5bfd, 0x20d0, 0xd215, 0x8dea, 0x3e3d, 0x1, 0x0);
        gbc.writeMem(0xb3fe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5bfd, gbc.sp());
        EXPECT(0xb400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fe));
        EXPECT(0xb9, gbc.readMem(0xb3ff));
        // CB B9 01BD
        gbc.setState(0xd9a4, 0x8466, 0x9c80, 0xf908, 0xb95f, 0x1c88, 0x1, 0x0);
        gbc.writeMem(0xd9a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8466, gbc.sp());
        EXPECT(0xd9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a4));
        EXPECT(0xb9, gbc.readMem(0xd9a5));
        // CB B9 01BE
        gbc.setState(0x2774, 0x8712, 0xc4e0, 0x987f, 0x7bbc, 0xa483, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8712, gbc.sp());
        EXPECT(0x2776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01BF
        gbc.setState(0x514c, 0xebfc, 0x6a30, 0x603, 0x4ed9, 0xb781, 0x0, 0x1);
        gbc.writeMem(0x514c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xebfc, gbc.sp());
        EXPECT(0x514e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01C0
        gbc.setState(0x143b, 0xd96, 0x7530, 0x6bc5, 0x7057, 0x5f68, 0x0, 0x1);
        gbc.writeMem(0x143b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd96, gbc.sp());
        EXPECT(0x143d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01C1
        gbc.setState(0x77a4, 0x7b46, 0x4440, 0x21ae, 0xa2e, 0xbc76, 0x1, 0x0);
        gbc.writeMem(0x77a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7b46, gbc.sp());
        EXPECT(0x77a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01C2
        gbc.setState(0xb0e3, 0x7830, 0x1a90, 0x5cc5, 0xce54, 0x99e2, 0x0, 0x1);
        gbc.writeMem(0xb0e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7830, gbc.sp());
        EXPECT(0xb0e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e3));
        EXPECT(0xb9, gbc.readMem(0xb0e4));
        // CB B9 01C3
        gbc.setState(0x49ba, 0x4fa9, 0xbd80, 0x5372, 0xc61e, 0xbdde, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01C4
        gbc.setState(0x146e, 0x6f2b, 0xbbd0, 0x53c4, 0xcbed, 0x37c, 0x1, 0x0);
        gbc.writeMem(0x146e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6f2b, gbc.sp());
        EXPECT(0x1470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01C5
        gbc.setState(0x3476, 0x4ed4, 0x6fa0, 0x3c2c, 0x7e8c, 0x6d9b, 0x1, 0x0);
        gbc.writeMem(0x3476, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4ed4, gbc.sp());
        EXPECT(0x3478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01C6
        gbc.setState(0xcf36, 0xafd0, 0x8fe0, 0xbb77, 0x66b3, 0x888f, 0x0, 0x0);
        gbc.writeMem(0xcf36, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xafd0, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf36));
        EXPECT(0xb9, gbc.readMem(0xcf37));
        // CB B9 01C7
        gbc.setState(0x7cf0, 0x3bad, 0x7d60, 0x3ff4, 0xeeeb, 0x43a, 0x1, 0x1);
        gbc.writeMem(0x7cf0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0x7cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01C8
        gbc.setState(0x9408, 0xee50, 0x92b0, 0xdd86, 0x65dd, 0x12f5, 0x1, 0x1);
        gbc.writeMem(0x9408, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee50, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9408));
        EXPECT(0xb9, gbc.readMem(0x9409));
        // CB B9 01C9
        gbc.setState(0x70d8, 0xc677, 0x8ba0, 0x5f7f, 0xbd94, 0x485f, 0x1, 0x1);
        gbc.writeMem(0x70d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc677, gbc.sp());
        EXPECT(0x70da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01CA
        gbc.setState(0xc174, 0x5c3e, 0xe0e0, 0xe9b7, 0xdbf3, 0xd402, 0x1, 0x1);
        gbc.writeMem(0xc174, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5c3e, gbc.sp());
        EXPECT(0xc176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc174));
        EXPECT(0xb9, gbc.readMem(0xc175));
        // CB B9 01CB
        gbc.setState(0xcae0, 0x9260, 0x6550, 0xc7eb, 0x18a3, 0xc979, 0x1, 0x1);
        gbc.writeMem(0xcae0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9260, gbc.sp());
        EXPECT(0xcae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcae0));
        EXPECT(0xb9, gbc.readMem(0xcae1));
        // CB B9 01CC
        gbc.setState(0xc8ec, 0xf2a3, 0x130, 0xd319, 0xefbe, 0x162d, 0x1, 0x1);
        gbc.writeMem(0xc8ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf2a3, gbc.sp());
        EXPECT(0xc8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ec));
        EXPECT(0xb9, gbc.readMem(0xc8ed));
        // CB B9 01CD
        gbc.setState(0x8746, 0xa9ca, 0x6bc0, 0xe6b4, 0x6726, 0xd247, 0x1, 0x0);
        gbc.writeMem(0x8746, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa9ca, gbc.sp());
        EXPECT(0x8748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8746));
        EXPECT(0xb9, gbc.readMem(0x8747));
        // CB B9 01CE
        gbc.setState(0x1f6c, 0x1c6a, 0x6e40, 0xa4e, 0x668e, 0xea3d, 0x0, 0x1);
        gbc.writeMem(0x1f6c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1c6a, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01CF
        gbc.setState(0xc348, 0x63f6, 0x7190, 0xb06e, 0x1ec6, 0x7f3b, 0x0, 0x1);
        gbc.writeMem(0xc348, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x63f6, gbc.sp());
        EXPECT(0xc34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc348));
        EXPECT(0xb9, gbc.readMem(0xc349));
        // CB B9 01D0
        gbc.setState(0x49cc, 0x9d20, 0x6d30, 0x9f0b, 0x6235, 0x49be, 0x0, 0x1);
        gbc.writeMem(0x49cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9d20, gbc.sp());
        EXPECT(0x49ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01D1
        gbc.setState(0xc8e6, 0x7bf0, 0xea90, 0xcfc6, 0x67b0, 0x73c3, 0x0, 0x0);
        gbc.writeMem(0xc8e6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7bf0, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8e6));
        EXPECT(0xb9, gbc.readMem(0xc8e7));
        // CB B9 01D2
        gbc.setState(0x6672, 0x7fae, 0x42a0, 0x64f0, 0x71a, 0x52c5, 0x0, 0x0);
        gbc.writeMem(0x6672, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7fae, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01D3
        gbc.setState(0x4283, 0x1124, 0xd1a0, 0xc809, 0x6253, 0x8d89, 0x1, 0x0);
        gbc.writeMem(0x4283, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1124, gbc.sp());
        EXPECT(0x4285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01D4
        gbc.setState(0x1c0d, 0x91e8, 0xbdb0, 0xdb0d, 0x29aa, 0xf696, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01D5
        gbc.setState(0x4976, 0x9d4b, 0xbaf0, 0x2526, 0xe254, 0x5441, 0x0, 0x0);
        gbc.writeMem(0x4976, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9d4b, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01D6
        gbc.setState(0xb903, 0xe832, 0x6d40, 0xe4b7, 0x7cb8, 0x9906, 0x1, 0x0);
        gbc.writeMem(0xb903, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0xb905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb903));
        EXPECT(0xb9, gbc.readMem(0xb904));
        // CB B9 01D7
        gbc.setState(0xcdf3, 0x54d, 0x4cf0, 0x9d2e, 0x64f, 0x4dde, 0x0, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x54d, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf3));
        EXPECT(0xb9, gbc.readMem(0xcdf4));
        // CB B9 01D8
        gbc.setState(0xceba, 0xc823, 0x1bf0, 0x8e8e, 0xefd3, 0x4f75, 0x0, 0x0);
        gbc.writeMem(0xceba, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc823, gbc.sp());
        EXPECT(0xcebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceba));
        EXPECT(0xb9, gbc.readMem(0xcebb));
        // CB B9 01D9
        gbc.setState(0x5946, 0x698f, 0x2360, 0x9dea, 0xb461, 0xfa07, 0x1, 0x0);
        gbc.writeMem(0x5946, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x698f, gbc.sp());
        EXPECT(0x5948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01DB
        gbc.setState(0x5e58, 0xc909, 0x2c0, 0x2cbd, 0x1116, 0x4ebd, 0x1, 0x1);
        gbc.writeMem(0x5e58, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc909, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01DC
        gbc.setState(0x3d8, 0xdcfa, 0x7b10, 0xa5a, 0x2e35, 0x9bc3, 0x0, 0x1);
        gbc.writeMem(0x3d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdcfa, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01DD
        gbc.setState(0xd72a, 0x2f8a, 0x1560, 0xb342, 0x91f4, 0x1e4a, 0x1, 0x0);
        gbc.writeMem(0xd72a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2f8a, gbc.sp());
        EXPECT(0xd72c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72a));
        EXPECT(0xb9, gbc.readMem(0xd72b));
        // CB B9 01DE
        gbc.setState(0xb2b8, 0x4e95, 0x8540, 0xfe89, 0x30e9, 0xc1eb, 0x1, 0x1);
        gbc.writeMem(0xb2b8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4e95, gbc.sp());
        EXPECT(0xb2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b8));
        EXPECT(0xb9, gbc.readMem(0xb2b9));
        // CB B9 01DF
        gbc.setState(0x4a5a, 0x75ae, 0x2ff0, 0x9d94, 0xb65d, 0x1ed4, 0x1, 0x1);
        gbc.writeMem(0x4a5a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x75ae, gbc.sp());
        EXPECT(0x4a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01E0
        gbc.setState(0xbd88, 0xfa55, 0x600, 0xec6, 0x5d50, 0x1df2, 0x0, 0x1);
        gbc.writeMem(0xbd88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfa55, gbc.sp());
        EXPECT(0xbd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd88));
        EXPECT(0xb9, gbc.readMem(0xbd89));
        // CB B9 01E1
        gbc.setState(0xe986, 0x7b24, 0xa100, 0x70a1, 0xbace, 0xa08a, 0x0, 0x0);
        gbc.writeMem(0xe986, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7b24, gbc.sp());
        EXPECT(0xe988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe986));
        EXPECT(0xb9, gbc.readMem(0xe987));
        // CB B9 01E2
        gbc.setState(0xe33d, 0xca2b, 0x1280, 0xbe43, 0x3b6c, 0x15cf, 0x1, 0x1);
        gbc.writeMem(0xe33d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xca2b, gbc.sp());
        EXPECT(0xe33f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33d));
        EXPECT(0xb9, gbc.readMem(0xe33e));
        // CB B9 01E3
        gbc.setState(0xe09e, 0xb7e5, 0xb000, 0xd11f, 0xa18e, 0xa914, 0x0, 0x1);
        gbc.writeMem(0xe09e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb7e5, gbc.sp());
        EXPECT(0xe0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09e));
        EXPECT(0xb9, gbc.readMem(0xe09f));
        // CB B9 01E4
        gbc.setState(0x9515, 0x14b8, 0x6d10, 0x9877, 0xc0da, 0xe0e8, 0x1, 0x0);
        gbc.writeMem(0x9515, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x14b8, gbc.sp());
        EXPECT(0x9517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9515));
        EXPECT(0xb9, gbc.readMem(0x9516));
        // CB B9 01E5
        gbc.setState(0x813d, 0xc0f8, 0x1640, 0xf778, 0xfcff, 0xe1df, 0x0, 0x0);
        gbc.writeMem(0x813d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc0f8, gbc.sp());
        EXPECT(0x813f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813d));
        EXPECT(0xb9, gbc.readMem(0x813e));
        // CB B9 01E6
        gbc.setState(0xb49, 0x6ef3, 0x5330, 0x12b6, 0x4e89, 0x489c, 0x0, 0x0);
        gbc.writeMem(0xb49, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6ef3, gbc.sp());
        EXPECT(0xb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01E7
        gbc.setState(0x8b2e, 0x281b, 0xf280, 0xa956, 0xc037, 0x617f, 0x0, 0x0);
        gbc.writeMem(0x8b2e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x281b, gbc.sp());
        EXPECT(0x8b30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2e));
        EXPECT(0xb9, gbc.readMem(0x8b2f));
        // CB B9 01E8
        gbc.setState(0xbf76, 0x3be5, 0xf740, 0xb38d, 0x1971, 0x43ea, 0x1, 0x1);
        gbc.writeMem(0xbf76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3be5, gbc.sp());
        EXPECT(0xbf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf76));
        EXPECT(0xb9, gbc.readMem(0xbf77));
        // CB B9 01E9
        gbc.setState(0x191e, 0x3396, 0x89e0, 0xf77e, 0xfd37, 0x6f85, 0x0, 0x1);
        gbc.writeMem(0x191e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3396, gbc.sp());
        EXPECT(0x1920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01EA
        gbc.setState(0x7f23, 0x91b9, 0x5620, 0x4288, 0xeff, 0x837b, 0x1, 0x0);
        gbc.writeMem(0x7f23, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x91b9, gbc.sp());
        EXPECT(0x7f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01EB
        gbc.setState(0xbe51, 0xbb77, 0x3f70, 0x4ea7, 0x97ed, 0x2058, 0x0, 0x0);
        gbc.writeMem(0xbe51, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbb77, gbc.sp());
        EXPECT(0xbe53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe51));
        EXPECT(0xb9, gbc.readMem(0xbe52));
        // CB B9 01EC
        gbc.setState(0x6ce, 0xf908, 0xec60, 0xb8c5, 0xde26, 0x1009, 0x0, 0x0);
        gbc.writeMem(0x6ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf908, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01ED
        gbc.setState(0x1c2f, 0x5091, 0x9110, 0x46cc, 0xfc3b, 0xb518, 0x1, 0x1);
        gbc.writeMem(0x1c2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0x1c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01EE
        gbc.setState(0x1bac, 0x3301, 0xb060, 0xb9cf, 0xe7ff, 0xd7d4, 0x0, 0x1);
        gbc.writeMem(0x1bac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3301, gbc.sp());
        EXPECT(0x1bae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01EF
        gbc.setState(0x4f13, 0xcfb4, 0x6000, 0xfddf, 0xdd02, 0xbfed, 0x1, 0x1);
        gbc.writeMem(0x4f13, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0x4f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01F0
        gbc.setState(0xdfea, 0x4051, 0x1dd0, 0xdc9a, 0xfbc3, 0xfbf2, 0x1, 0x1);
        gbc.writeMem(0xdfea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0xdfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfea));
        EXPECT(0xb9, gbc.readMem(0xdfeb));
        // CB B9 01F1
        gbc.setState(0x8e70, 0x2d47, 0x9de0, 0xaa63, 0xf68f, 0xb438, 0x1, 0x1);
        gbc.writeMem(0x8e70, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0x8e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e70));
        EXPECT(0xb9, gbc.readMem(0x8e71));
        // CB B9 01F2
        gbc.setState(0xaed3, 0x14c9, 0xf9a0, 0x696a, 0xa36a, 0x2ca7, 0x0, 0x1);
        gbc.writeMem(0xaed3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x14c9, gbc.sp());
        EXPECT(0xaed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed3));
        EXPECT(0xb9, gbc.readMem(0xaed4));
        // CB B9 01F3
        gbc.setState(0x8958, 0x37b8, 0x5990, 0xc468, 0x4ec9, 0xb28, 0x0, 0x1);
        gbc.writeMem(0x8958, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x37b8, gbc.sp());
        EXPECT(0x895a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8958));
        EXPECT(0xb9, gbc.readMem(0x8959));
        // CB B9 01F4
        gbc.setState(0x51ac, 0x65b5, 0xc110, 0x6661, 0x96da, 0x1d9a, 0x0, 0x0);
        gbc.writeMem(0x51ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x65b5, gbc.sp());
        EXPECT(0x51ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01F5
        gbc.setState(0xd416, 0x8254, 0x10f0, 0x899c, 0xc442, 0x45d6, 0x0, 0x0);
        gbc.writeMem(0xd416, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8254, gbc.sp());
        EXPECT(0xd418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd416));
        EXPECT(0xb9, gbc.readMem(0xd417));
        // CB B9 01F7
        gbc.setState(0x663c, 0xfad7, 0x4660, 0x10ff, 0x2ebd, 0x9554, 0x1, 0x0);
        gbc.writeMem(0x663c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xfad7, gbc.sp());
        EXPECT(0x663e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01F8
        gbc.setState(0x5f70, 0x2a9f, 0xa360, 0x1774, 0xbb6b, 0x7329, 0x0, 0x0);
        gbc.writeMem(0x5f70, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2a9f, gbc.sp());
        EXPECT(0x5f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01F9
        gbc.setState(0x9aa1, 0x3ee7, 0xfa00, 0xed2, 0xae0f, 0x46d1, 0x0, 0x0);
        gbc.writeMem(0x9aa1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0x9aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aa1));
        EXPECT(0xb9, gbc.readMem(0x9aa2));
        // CB B9 01FA
        gbc.setState(0x4df2, 0xd1c9, 0x16a0, 0xf0d1, 0x3a85, 0xbac1, 0x1, 0x0);
        gbc.writeMem(0x4df2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd1c9, gbc.sp());
        EXPECT(0x4df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01FB
        gbc.setState(0x2750, 0xcf58, 0x8c60, 0x65c1, 0x5175, 0x3cd5, 0x1, 0x0);
        gbc.writeMem(0x2750, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcf58, gbc.sp());
        EXPECT(0x2752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 01FC
        gbc.setState(0xb255, 0x9cca, 0x6050, 0x7419, 0x1991, 0x7549, 0x1, 0x1);
        gbc.writeMem(0xb255, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9cca, gbc.sp());
        EXPECT(0xb257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb255));
        EXPECT(0xb9, gbc.readMem(0xb256));
        // CB B9 01FD
        gbc.setState(0x3afc, 0xf7d0, 0x35f0, 0xbc61, 0xba6c, 0xbab1, 0x0, 0x1);
        gbc.writeMem(0x3afc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf7d0, gbc.sp());
        EXPECT(0x3afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 01FE
        gbc.setState(0x9627, 0x2b14, 0x5000, 0x5c0d, 0xc86b, 0x677f, 0x1, 0x0);
        gbc.writeMem(0x9627, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2b14, gbc.sp());
        EXPECT(0x9629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9627));
        EXPECT(0xb9, gbc.readMem(0x9628));
        // CB B9 01FF
        gbc.setState(0xb9b4, 0xffc9, 0x7760, 0x2472, 0xe73d, 0x82eb, 0x1, 0x0);
        gbc.writeMem(0xb9b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xffc9, gbc.sp());
        EXPECT(0xb9b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9b4));
        EXPECT(0xb9, gbc.readMem(0xb9b5));
        // CB B9 0200
        gbc.setState(0x7da0, 0xc51e, 0xf7c0, 0x1859, 0x491b, 0x6726, 0x1, 0x0);
        gbc.writeMem(0x7da0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc51e, gbc.sp());
        EXPECT(0x7da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0201
        gbc.setState(0xe8a3, 0xa77, 0x6ae0, 0x74b0, 0x3d6c, 0x5936, 0x1, 0x1);
        gbc.writeMem(0xe8a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa77, gbc.sp());
        EXPECT(0xe8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a3));
        EXPECT(0xb9, gbc.readMem(0xe8a4));
        // CB B9 0202
        gbc.setState(0xd167, 0x5849, 0xdb40, 0xf5ef, 0x6bb4, 0x5472, 0x1, 0x0);
        gbc.writeMem(0xd167, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0xd169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd167));
        EXPECT(0xb9, gbc.readMem(0xd168));
        // CB B9 0203
        gbc.setState(0x1eef, 0x83ab, 0x20f0, 0xa961, 0xf6d7, 0xf4ab, 0x1, 0x1);
        gbc.writeMem(0x1eef, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x83ab, gbc.sp());
        EXPECT(0x1ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0204
        gbc.setState(0x2a39, 0x154, 0xc6f0, 0x6a45, 0x7ffc, 0xf83d, 0x0, 0x0);
        gbc.writeMem(0x2a39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x154, gbc.sp());
        EXPECT(0x2a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0205
        gbc.setState(0x6621, 0x2163, 0xe6e0, 0x71f5, 0xb8d3, 0x720a, 0x1, 0x0);
        gbc.writeMem(0x6621, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2163, gbc.sp());
        EXPECT(0x6623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0206
        gbc.setState(0x4da8, 0x4322, 0x2f50, 0x8443, 0x4a77, 0x3a0b, 0x0, 0x1);
        gbc.writeMem(0x4da8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0x4daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0207
        gbc.setState(0x4aed, 0xb3df, 0x5d50, 0xa04, 0xc2ad, 0x72e2, 0x1, 0x0);
        gbc.writeMem(0x4aed, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb3df, gbc.sp());
        EXPECT(0x4aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0208
        gbc.setState(0xd1b0, 0xcbc2, 0xeb90, 0x4dcb, 0xddd, 0x2960, 0x1, 0x0);
        gbc.writeMem(0xd1b0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcbc2, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b0));
        EXPECT(0xb9, gbc.readMem(0xd1b1));
        // CB B9 0209
        gbc.setState(0x3fc0, 0x8937, 0xfee0, 0x54ed, 0xb9e9, 0xb69b, 0x0, 0x0);
        gbc.writeMem(0x3fc0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0x3fc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 020A
        gbc.setState(0xc51a, 0x27b2, 0x30e0, 0xccb6, 0xf3c, 0x2160, 0x1, 0x1);
        gbc.writeMem(0xc51a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x27b2, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51a));
        EXPECT(0xb9, gbc.readMem(0xc51b));
        // CB B9 020C
        gbc.setState(0x43f3, 0x1202, 0x7540, 0x4846, 0x7466, 0x764, 0x1, 0x0);
        gbc.writeMem(0x43f3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1202, gbc.sp());
        EXPECT(0x43f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 020D
        gbc.setState(0x6439, 0x2e49, 0xb520, 0x5f86, 0x9fee, 0x47b9, 0x0, 0x1);
        gbc.writeMem(0x6439, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2e49, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 020E
        gbc.setState(0x72bf, 0x406c, 0xf7f0, 0xc999, 0xcc96, 0x7f, 0x0, 0x1);
        gbc.writeMem(0x72bf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x406c, gbc.sp());
        EXPECT(0x72c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 020F
        gbc.setState(0x5e3a, 0xe066, 0xb4d0, 0x1635, 0x3eed, 0xdbb, 0x1, 0x1);
        gbc.writeMem(0x5e3a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe066, gbc.sp());
        EXPECT(0x5e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0210
        gbc.setState(0x8353, 0x3fcd, 0x65a0, 0x2ee9, 0x7e11, 0x1f7, 0x0, 0x1);
        gbc.writeMem(0x8353, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3fcd, gbc.sp());
        EXPECT(0x8355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8353));
        EXPECT(0xb9, gbc.readMem(0x8354));
        // CB B9 0211
        gbc.setState(0xe2fb, 0xb506, 0xac90, 0xe5ad, 0x49a0, 0xcc38, 0x1, 0x0);
        gbc.writeMem(0xe2fb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0xe2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2fb));
        EXPECT(0xb9, gbc.readMem(0xe2fc));
        // CB B9 0212
        gbc.setState(0xa65, 0xcfc9, 0x6f60, 0x1848, 0xf0e8, 0x3fb, 0x0, 0x0);
        gbc.writeMem(0xa65, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcfc9, gbc.sp());
        EXPECT(0xa67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0213
        gbc.setState(0xb008, 0xa895, 0xf5b0, 0x38b2, 0xa12b, 0x224a, 0x1, 0x0);
        gbc.writeMem(0xb008, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa895, gbc.sp());
        EXPECT(0xb00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb008));
        EXPECT(0xb9, gbc.readMem(0xb009));
        // CB B9 0214
        gbc.setState(0x7b58, 0x2db, 0x3b40, 0x970, 0x6d8d, 0xc0f5, 0x0, 0x1);
        gbc.writeMem(0x7b58, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2db, gbc.sp());
        EXPECT(0x7b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0215
        gbc.setState(0x5e58, 0x640c, 0x7cb0, 0xf26a, 0xd34b, 0xe0b4, 0x1, 0x0);
        gbc.writeMem(0x5e58, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x640c, gbc.sp());
        EXPECT(0x5e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0216
        gbc.setState(0xcb8d, 0x16a7, 0x22c0, 0x1ea5, 0x32dd, 0xdc35, 0x1, 0x0);
        gbc.writeMem(0xcb8d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x16a7, gbc.sp());
        EXPECT(0xcb8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb8d));
        EXPECT(0xb9, gbc.readMem(0xcb8e));
        // CB B9 0218
        gbc.setState(0xcac2, 0x7e25, 0x40b0, 0x1689, 0x1e08, 0x9bfe, 0x1, 0x1);
        gbc.writeMem(0xcac2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7e25, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac2));
        EXPECT(0xb9, gbc.readMem(0xcac3));
        // CB B9 0219
        gbc.setState(0xf60, 0xe9ea, 0x1640, 0xf0c9, 0x2bb2, 0x5e4d, 0x0, 0x1);
        gbc.writeMem(0xf60, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe9ea, gbc.sp());
        EXPECT(0xf62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 021A
        gbc.setState(0x6f37, 0x633b, 0xd680, 0x69e4, 0x1423, 0x3258, 0x0, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x633b, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 021B
        gbc.setState(0x2d00, 0xd59c, 0x19f0, 0x485f, 0x12d6, 0xa864, 0x0, 0x1);
        gbc.writeMem(0x2d00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd59c, gbc.sp());
        EXPECT(0x2d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 021C
        gbc.setState(0xed64, 0xa1b7, 0x50, 0x3d31, 0xd1d7, 0x5491, 0x1, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa1b7, gbc.sp());
        EXPECT(0xed66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed64));
        EXPECT(0xb9, gbc.readMem(0xed65));
        // CB B9 021D
        gbc.setState(0xe9df, 0x701d, 0xf60, 0x4e0, 0xac00, 0xe699, 0x0, 0x1);
        gbc.writeMem(0xe9df, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x701d, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9df));
        EXPECT(0xb9, gbc.readMem(0xe9e0));
        // CB B9 021E
        gbc.setState(0x66db, 0x94a, 0xcbf0, 0xfcce, 0xa238, 0x2720, 0x1, 0x0);
        gbc.writeMem(0x66db, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x94a, gbc.sp());
        EXPECT(0x66dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 021F
        gbc.setState(0xb698, 0x34e5, 0xbb0, 0x7ced, 0x41bd, 0x1605, 0x1, 0x1);
        gbc.writeMem(0xb698, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x34e5, gbc.sp());
        EXPECT(0xb69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb698));
        EXPECT(0xb9, gbc.readMem(0xb699));
        // CB B9 0220
        gbc.setState(0x113, 0xa24f, 0x1490, 0x357f, 0xd022, 0x6487, 0x1, 0x0);
        gbc.writeMem(0x113, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa24f, gbc.sp());
        EXPECT(0x115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0221
        gbc.setState(0x8f39, 0x52, 0x5e0, 0x85c5, 0xdc7e, 0xcf69, 0x0, 0x1);
        gbc.writeMem(0x8f39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x52, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f39));
        EXPECT(0xb9, gbc.readMem(0x8f3a));
        // CB B9 0222
        gbc.setState(0xc1a8, 0x6c55, 0x5230, 0x8216, 0x79c6, 0x973d, 0x0, 0x0);
        gbc.writeMem(0xc1a8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6c55, gbc.sp());
        EXPECT(0xc1aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a8));
        EXPECT(0xb9, gbc.readMem(0xc1a9));
        // CB B9 0223
        gbc.setState(0x3645, 0xf51a, 0xb860, 0x849d, 0x4afd, 0x3114, 0x1, 0x0);
        gbc.writeMem(0x3645, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf51a, gbc.sp());
        EXPECT(0x3647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0224
        gbc.setState(0x2a86, 0x35ea, 0x9cd0, 0x896, 0xf49f, 0xdd9f, 0x0, 0x0);
        gbc.writeMem(0x2a86, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x35ea, gbc.sp());
        EXPECT(0x2a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0225
        gbc.setState(0x1dc3, 0x4db6, 0x8760, 0xbe37, 0x98d, 0x2d90, 0x1, 0x0);
        gbc.writeMem(0x1dc3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0x1dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0226
        gbc.setState(0xc56b, 0x4d9, 0x5a0, 0xb2c8, 0xaa80, 0x3822, 0x1, 0x1);
        gbc.writeMem(0xc56b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xc56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56b));
        EXPECT(0xb9, gbc.readMem(0xc56c));
        // CB B9 0227
        gbc.setState(0x113c, 0xbb1b, 0x4ee0, 0x54e8, 0x6556, 0xac8a, 0x1, 0x0);
        gbc.writeMem(0x113c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbb1b, gbc.sp());
        EXPECT(0x113e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0228
        gbc.setState(0x50f5, 0xff09, 0x1c70, 0x6d0a, 0xda7, 0xc06a, 0x0, 0x0);
        gbc.writeMem(0x50f5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xff09, gbc.sp());
        EXPECT(0x50f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0229
        gbc.setState(0x8810, 0xe728, 0x6320, 0x30e9, 0xb282, 0x2dde, 0x0, 0x0);
        gbc.writeMem(0x8810, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe728, gbc.sp());
        EXPECT(0x8812, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8810));
        EXPECT(0xb9, gbc.readMem(0x8811));
        // CB B9 022A
        gbc.setState(0x8410, 0xca43, 0xe40, 0x34f7, 0x52a4, 0x8d28, 0x1, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xca43, gbc.sp());
        EXPECT(0x8412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8410));
        EXPECT(0xb9, gbc.readMem(0x8411));
        // CB B9 022B
        gbc.setState(0x33a5, 0x6bc7, 0x3e80, 0xcde2, 0xf439, 0x746f, 0x0, 0x0);
        gbc.writeMem(0x33a5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6bc7, gbc.sp());
        EXPECT(0x33a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 022C
        gbc.setState(0x8811, 0x1f2c, 0x4500, 0x9d61, 0x7f89, 0xfd63, 0x1, 0x0);
        gbc.writeMem(0x8811, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1f2c, gbc.sp());
        EXPECT(0x8813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8811));
        EXPECT(0xb9, gbc.readMem(0x8812));
        // CB B9 022D
        gbc.setState(0x22b0, 0x8b3c, 0x2370, 0x6221, 0xc40c, 0x2016, 0x0, 0x0);
        gbc.writeMem(0x22b0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8b3c, gbc.sp());
        EXPECT(0x22b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 022E
        gbc.setState(0x1617, 0x9fb5, 0xe3b0, 0x35ad, 0x4d63, 0xdb23, 0x1, 0x0);
        gbc.writeMem(0x1617, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0x1619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 022F
        gbc.setState(0xb6d1, 0xf4d4, 0xf160, 0x7bb, 0x8bef, 0xc51e, 0x1, 0x1);
        gbc.writeMem(0xb6d1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf4d4, gbc.sp());
        EXPECT(0xb6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d1));
        EXPECT(0xb9, gbc.readMem(0xb6d2));
        // CB B9 0230
        gbc.setState(0xa326, 0xae11, 0x7c50, 0xc5d1, 0x32f0, 0x446b, 0x0, 0x0);
        gbc.writeMem(0xa326, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xae11, gbc.sp());
        EXPECT(0xa328, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa326));
        EXPECT(0xb9, gbc.readMem(0xa327));
        // CB B9 0231
        gbc.setState(0xd253, 0x1be2, 0xf240, 0xbc6c, 0xeb3e, 0xa7e6, 0x0, 0x1);
        gbc.writeMem(0xd253, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1be2, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd253));
        EXPECT(0xb9, gbc.readMem(0xd254));
        // CB B9 0232
        gbc.setState(0x5e0a, 0x563b, 0x2b80, 0x8c01, 0xd15d, 0x3760, 0x1, 0x1);
        gbc.writeMem(0x5e0a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x563b, gbc.sp());
        EXPECT(0x5e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0233
        gbc.setState(0xe2db, 0xc7a6, 0xa5f0, 0x2363, 0xb761, 0x17e2, 0x1, 0x1);
        gbc.writeMem(0xe2db, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc7a6, gbc.sp());
        EXPECT(0xe2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2db));
        EXPECT(0xb9, gbc.readMem(0xe2dc));
        // CB B9 0234
        gbc.setState(0x1658, 0x857b, 0xffe0, 0xa0, 0xea97, 0xa8e9, 0x0, 0x1);
        gbc.writeMem(0x1658, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0x165a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0236
        gbc.setState(0x1811, 0x6cba, 0xc0, 0xeabe, 0xafc9, 0x4388, 0x1, 0x0);
        gbc.writeMem(0x1811, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6cba, gbc.sp());
        EXPECT(0x1813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0237
        gbc.setState(0x3b9b, 0x65f3, 0x3ac0, 0x939c, 0x33a3, 0x7eb, 0x1, 0x0);
        gbc.writeMem(0x3b9b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0x3b9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0238
        gbc.setState(0xc7c2, 0xa963, 0xf80, 0x8ac0, 0xbeaa, 0x92cb, 0x1, 0x1);
        gbc.writeMem(0xc7c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa963, gbc.sp());
        EXPECT(0xc7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c2));
        EXPECT(0xb9, gbc.readMem(0xc7c3));
        // CB B9 0239
        gbc.setState(0xaeb6, 0x7ad5, 0x83f0, 0x3062, 0xa730, 0x9f8d, 0x1, 0x1);
        gbc.writeMem(0xaeb6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ad5, gbc.sp());
        EXPECT(0xaeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb6));
        EXPECT(0xb9, gbc.readMem(0xaeb7));
        // CB B9 023A
        gbc.setState(0x8249, 0x27f1, 0xd380, 0x9d5b, 0xb854, 0x3b7f, 0x0, 0x0);
        gbc.writeMem(0x8249, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x27f1, gbc.sp());
        EXPECT(0x824b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8249));
        EXPECT(0xb9, gbc.readMem(0x824a));
        // CB B9 023B
        gbc.setState(0x5efa, 0x2f3d, 0xcac0, 0x6aef, 0x9f20, 0x8464, 0x0, 0x0);
        gbc.writeMem(0x5efa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2f3d, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 023D
        gbc.setState(0x3e81, 0x9e0e, 0xf590, 0xb1d, 0x1143, 0x5a6e, 0x1, 0x0);
        gbc.writeMem(0x3e81, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9e0e, gbc.sp());
        EXPECT(0x3e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 023E
        gbc.setState(0x13c8, 0xcd80, 0x6af0, 0xf79f, 0x9595, 0x7dcd, 0x1, 0x0);
        gbc.writeMem(0x13c8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcd80, gbc.sp());
        EXPECT(0x13ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 023F
        gbc.setState(0x6e83, 0x1da3, 0x7750, 0xbe9f, 0x6cc4, 0xbbd5, 0x1, 0x0);
        gbc.writeMem(0x6e83, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1da3, gbc.sp());
        EXPECT(0x6e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0240
        gbc.setState(0x48e6, 0x95f7, 0x3d40, 0x9236, 0xbd34, 0x6e5c, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x95f7, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0242
        gbc.setState(0x2a05, 0x81ad, 0xd430, 0x7a2c, 0x462d, 0xf971, 0x0, 0x1);
        gbc.writeMem(0x2a05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x81ad, gbc.sp());
        EXPECT(0x2a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0243
        gbc.setState(0xe847, 0x5ff0, 0x2dd0, 0x78de, 0x638, 0x7959, 0x0, 0x0);
        gbc.writeMem(0xe847, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5ff0, gbc.sp());
        EXPECT(0xe849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe847));
        EXPECT(0xb9, gbc.readMem(0xe848));
        // CB B9 0244
        gbc.setState(0x2aa0, 0x786b, 0x7920, 0x19b0, 0x3181, 0x6bd0, 0x1, 0x0);
        gbc.writeMem(0x2aa0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x786b, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0245
        gbc.setState(0xa97, 0x6a77, 0x4de0, 0xd860, 0xa112, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0xa97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6a77, gbc.sp());
        EXPECT(0xa99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0246
        gbc.setState(0xa6f2, 0xae01, 0x7040, 0x1cfa, 0x8960, 0xae47, 0x1, 0x1);
        gbc.writeMem(0xa6f2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xae01, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f2));
        EXPECT(0xb9, gbc.readMem(0xa6f3));
        // CB B9 0247
        gbc.setState(0x88a8, 0x7025, 0xcef0, 0x63d5, 0x4a0, 0xb5ac, 0x1, 0x1);
        gbc.writeMem(0x88a8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7025, gbc.sp());
        EXPECT(0x88aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88a8));
        EXPECT(0xb9, gbc.readMem(0x88a9));
        // CB B9 0248
        gbc.setState(0xa374, 0xe934, 0x31f0, 0x98f4, 0x122b, 0x743c, 0x1, 0x0);
        gbc.writeMem(0xa374, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe934, gbc.sp());
        EXPECT(0xa376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa374));
        EXPECT(0xb9, gbc.readMem(0xa375));
        // CB B9 0249
        gbc.setState(0x38d9, 0x4741, 0xe630, 0xb0bb, 0x7b95, 0xd149, 0x0, 0x0);
        gbc.writeMem(0x38d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4741, gbc.sp());
        EXPECT(0x38db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 024A
        gbc.setState(0x899, 0x541d, 0x3330, 0x8387, 0xc2b6, 0x9864, 0x0, 0x0);
        gbc.writeMem(0x899, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x541d, gbc.sp());
        EXPECT(0x89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 024B
        gbc.setState(0x4d96, 0x6b50, 0x1d30, 0xe991, 0x179d, 0x7334, 0x0, 0x0);
        gbc.writeMem(0x4d96, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6b50, gbc.sp());
        EXPECT(0x4d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 024C
        gbc.setState(0xd6de, 0x6463, 0x5850, 0x5c68, 0xb23e, 0x8d10, 0x1, 0x0);
        gbc.writeMem(0xd6de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6463, gbc.sp());
        EXPECT(0xd6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6de));
        EXPECT(0xb9, gbc.readMem(0xd6df));
        // CB B9 024D
        gbc.setState(0x4632, 0xfdb1, 0x1870, 0xab66, 0x53f7, 0x1bd8, 0x1, 0x0);
        gbc.writeMem(0x4632, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfdb1, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 024E
        gbc.setState(0x9104, 0x43bb, 0x5bd0, 0xee1e, 0xbf65, 0xfd58, 0x1, 0x0);
        gbc.writeMem(0x9104, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x43bb, gbc.sp());
        EXPECT(0x9106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9104));
        EXPECT(0xb9, gbc.readMem(0x9105));
        // CB B9 024F
        gbc.setState(0x4b46, 0x818, 0x5f70, 0x29bc, 0x7a68, 0x5a9b, 0x1, 0x0);
        gbc.writeMem(0x4b46, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x818, gbc.sp());
        EXPECT(0x4b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0250
        gbc.setState(0xbf4a, 0xa844, 0x4530, 0xadd5, 0xc213, 0xc245, 0x1, 0x1);
        gbc.writeMem(0xbf4a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa844, gbc.sp());
        EXPECT(0xbf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4a));
        EXPECT(0xb9, gbc.readMem(0xbf4b));
        // CB B9 0251
        gbc.setState(0xdff8, 0x1890, 0x2d00, 0x7395, 0x763f, 0x2f47, 0x1, 0x0);
        gbc.writeMem(0xdff8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x1890, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff8));
        EXPECT(0xb9, gbc.readMem(0xdff9));
        // CB B9 0252
        gbc.setState(0x87f3, 0x3db3, 0xc860, 0xa776, 0xf8a1, 0x33ca, 0x0, 0x0);
        gbc.writeMem(0x87f3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x3db3, gbc.sp());
        EXPECT(0x87f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f3));
        EXPECT(0xb9, gbc.readMem(0x87f4));
        // CB B9 0253
        gbc.setState(0xcc70, 0x2ab6, 0xf90, 0x453a, 0x6a79, 0x7e40, 0x0, 0x0);
        gbc.writeMem(0xcc70, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2ab6, gbc.sp());
        EXPECT(0xcc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc70));
        EXPECT(0xb9, gbc.readMem(0xcc71));
        // CB B9 0254
        gbc.setState(0x2bc6, 0x7396, 0xb9c0, 0x6dbe, 0xfe8c, 0xc0dc, 0x1, 0x1);
        gbc.writeMem(0x2bc6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0256
        gbc.setState(0x508e, 0xab4, 0x57a0, 0xf8a, 0x18cd, 0xf36, 0x1, 0x0);
        gbc.writeMem(0x508e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xab4, gbc.sp());
        EXPECT(0x5090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0257
        gbc.setState(0xc616, 0xad8a, 0x97b0, 0xcb82, 0x4e2e, 0x66f2, 0x1, 0x1);
        gbc.writeMem(0xc616, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xad8a, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc616));
        EXPECT(0xb9, gbc.readMem(0xc617));
        // CB B9 0258
        gbc.setState(0x949, 0xec35, 0xd090, 0x40a2, 0x9401, 0xaef6, 0x0, 0x0);
        gbc.writeMem(0x949, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0x94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0259
        gbc.setState(0x9fe7, 0x4b6f, 0xb4c0, 0xea6f, 0xeca4, 0x6213, 0x0, 0x0);
        gbc.writeMem(0x9fe7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4b6f, gbc.sp());
        EXPECT(0x9fe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe7));
        EXPECT(0xb9, gbc.readMem(0x9fe8));
        // CB B9 025A
        gbc.setState(0x33a1, 0x63af, 0x7b70, 0xe841, 0xee38, 0x5693, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x63af, gbc.sp());
        EXPECT(0x33a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 025B
        gbc.setState(0x39f, 0x5ae8, 0xc0c0, 0x4286, 0x2aad, 0x9157, 0x1, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5ae8, gbc.sp());
        EXPECT(0x3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 025C
        gbc.setState(0xa17a, 0xe150, 0x6810, 0xa2d9, 0x709a, 0x252b, 0x0, 0x1);
        gbc.writeMem(0xa17a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe150, gbc.sp());
        EXPECT(0xa17c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17a));
        EXPECT(0xb9, gbc.readMem(0xa17b));
        // CB B9 025D
        gbc.setState(0xc9d7, 0xc3b1, 0x4a00, 0x381e, 0xc530, 0x7bab, 0x1, 0x1);
        gbc.writeMem(0xc9d7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3b1, gbc.sp());
        EXPECT(0xc9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9d7));
        EXPECT(0xb9, gbc.readMem(0xc9d8));
        // CB B9 025F
        gbc.setState(0xe0b2, 0xf86d, 0x40, 0xe9a8, 0xebd, 0x8358, 0x0, 0x1);
        gbc.writeMem(0xe0b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf86d, gbc.sp());
        EXPECT(0xe0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b2));
        EXPECT(0xb9, gbc.readMem(0xe0b3));
        // CB B9 0260
        gbc.setState(0xe96b, 0xf8cf, 0x140, 0x100c, 0x6654, 0xa479, 0x0, 0x0);
        gbc.writeMem(0xe96b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf8cf, gbc.sp());
        EXPECT(0xe96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96b));
        EXPECT(0xb9, gbc.readMem(0xe96c));
        // CB B9 0261
        gbc.setState(0x1241, 0x5f24, 0x2f30, 0x8def, 0x3360, 0x2ae0, 0x0, 0x1);
        gbc.writeMem(0x1241, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5f24, gbc.sp());
        EXPECT(0x1243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0262
        gbc.setState(0xbb2b, 0x4d72, 0x41c0, 0x89e8, 0xbeb8, 0x5f74, 0x1, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4d72, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2b));
        EXPECT(0xb9, gbc.readMem(0xbb2c));
        // CB B9 0263
        gbc.setState(0x5869, 0x7aa0, 0x1bb0, 0xcce7, 0x1d7d, 0x31d1, 0x1, 0x1);
        gbc.writeMem(0x5869, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7aa0, gbc.sp());
        EXPECT(0x586b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0264
        gbc.setState(0x5d7e, 0x4e5f, 0x34a0, 0x1e22, 0x97e5, 0x5614, 0x1, 0x0);
        gbc.writeMem(0x5d7e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4e5f, gbc.sp());
        EXPECT(0x5d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0265
        gbc.setState(0xcead, 0xaebb, 0x670, 0x679a, 0x2c40, 0x414f, 0x0, 0x0);
        gbc.writeMem(0xcead, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaebb, gbc.sp());
        EXPECT(0xceaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcead));
        EXPECT(0xb9, gbc.readMem(0xceae));
        // CB B9 0266
        gbc.setState(0x2b85, 0x9683, 0xaa30, 0x5bb, 0x7cb6, 0xeb35, 0x1, 0x0);
        gbc.writeMem(0x2b85, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0267
        gbc.setState(0xddc4, 0xdb9f, 0xbca0, 0xb1e7, 0xe7a7, 0x3ad5, 0x1, 0x0);
        gbc.writeMem(0xddc4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdb9f, gbc.sp());
        EXPECT(0xddc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc4));
        EXPECT(0xb9, gbc.readMem(0xddc5));
        // CB B9 0268
        gbc.setState(0x1964, 0x8970, 0x9750, 0xcd4c, 0x4bc1, 0x2b0b, 0x0, 0x1);
        gbc.writeMem(0x1964, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8970, gbc.sp());
        EXPECT(0x1966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0269
        gbc.setState(0x46a9, 0x2716, 0x55f0, 0xc011, 0x7542, 0x7d6d, 0x1, 0x0);
        gbc.writeMem(0x46a9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0x46ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 026A
        gbc.setState(0x5355, 0x9cf8, 0xfcd0, 0x1537, 0x2cc8, 0x642a, 0x0, 0x0);
        gbc.writeMem(0x5355, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9cf8, gbc.sp());
        EXPECT(0x5357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 026B
        gbc.setState(0x7794, 0xecc7, 0xcd60, 0x1ed6, 0xfa8a, 0x40f3, 0x1, 0x1);
        gbc.writeMem(0x7794, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xecc7, gbc.sp());
        EXPECT(0x7796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 026C
        gbc.setState(0xe348, 0x5069, 0xfb70, 0x60db, 0x8b8b, 0xe37e, 0x1, 0x1);
        gbc.writeMem(0xe348, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5069, gbc.sp());
        EXPECT(0xe34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe348));
        EXPECT(0xb9, gbc.readMem(0xe349));
        // CB B9 026D
        gbc.setState(0x2a22, 0x95e7, 0x5be0, 0x92a0, 0x6e6a, 0x855a, 0x0, 0x0);
        gbc.writeMem(0x2a22, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0x2a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 026E
        gbc.setState(0xa97d, 0x2cc9, 0xc120, 0x4fc2, 0xa46, 0x43cd, 0x0, 0x1);
        gbc.writeMem(0xa97d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x2cc9, gbc.sp());
        EXPECT(0xa97f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97d));
        EXPECT(0xb9, gbc.readMem(0xa97e));
        // CB B9 026F
        gbc.setState(0xc9c2, 0x58ac, 0x1250, 0xaffe, 0xd317, 0xa4c9, 0x0, 0x0);
        gbc.writeMem(0xc9c2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x58ac, gbc.sp());
        EXPECT(0xc9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c2));
        EXPECT(0xb9, gbc.readMem(0xc9c3));
        // CB B9 0270
        gbc.setState(0x10c3, 0x487b, 0xf2b0, 0xf330, 0xaab3, 0xfdf6, 0x0, 0x1);
        gbc.writeMem(0x10c3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x487b, gbc.sp());
        EXPECT(0x10c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0271
        gbc.setState(0xa62c, 0xdde5, 0xb880, 0x637a, 0xff2e, 0x5a77, 0x1, 0x1);
        gbc.writeMem(0xa62c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdde5, gbc.sp());
        EXPECT(0xa62e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62c));
        EXPECT(0xb9, gbc.readMem(0xa62d));
        // CB B9 0272
        gbc.setState(0xcbc0, 0x3588, 0x120, 0x3041, 0x9412, 0x7812, 0x1, 0x0);
        gbc.writeMem(0xcbc0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3588, gbc.sp());
        EXPECT(0xcbc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbc0));
        EXPECT(0xb9, gbc.readMem(0xcbc1));
        // CB B9 0273
        gbc.setState(0x251b, 0xad01, 0xce70, 0x4a29, 0xeb14, 0xdeb5, 0x1, 0x0);
        gbc.writeMem(0x251b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xad01, gbc.sp());
        EXPECT(0x251d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0274
        gbc.setState(0x1d7f, 0xf4a3, 0xc20, 0x85c4, 0x9fc, 0xcd50, 0x0, 0x0);
        gbc.writeMem(0x1d7f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf4a3, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0275
        gbc.setState(0xdd88, 0x5e92, 0x7820, 0x59d9, 0x8f91, 0x8ece, 0x1, 0x1);
        gbc.writeMem(0xdd88, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5e92, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd88));
        EXPECT(0xb9, gbc.readMem(0xdd89));
        // CB B9 0276
        gbc.setState(0x3fbd, 0x6b8f, 0x5760, 0x9c91, 0x5d72, 0xbcb1, 0x1, 0x0);
        gbc.writeMem(0x3fbd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6b8f, gbc.sp());
        EXPECT(0x3fbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0277
        gbc.setState(0x67d2, 0x23f0, 0x78c0, 0x5781, 0x2226, 0xf92f, 0x0, 0x0);
        gbc.writeMem(0x67d2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0278
        gbc.setState(0x5b6c, 0x1e60, 0xb730, 0xfda9, 0x4405, 0x8403, 0x1, 0x1);
        gbc.writeMem(0x5b6c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1e60, gbc.sp());
        EXPECT(0x5b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0279
        gbc.setState(0xbe87, 0xe6a5, 0x3fe0, 0x36fc, 0xe48b, 0xfc68, 0x0, 0x1);
        gbc.writeMem(0xbe87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe6a5, gbc.sp());
        EXPECT(0xbe89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe87));
        EXPECT(0xb9, gbc.readMem(0xbe88));
        // CB B9 027A
        gbc.setState(0xb090, 0xcf75, 0xc70, 0x4597, 0x4140, 0x13c5, 0x0, 0x0);
        gbc.writeMem(0xb090, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcf75, gbc.sp());
        EXPECT(0xb092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb090));
        EXPECT(0xb9, gbc.readMem(0xb091));
        // CB B9 027D
        gbc.setState(0xa398, 0x97a0, 0x1990, 0x268e, 0xf264, 0xad6, 0x0, 0x0);
        gbc.writeMem(0xa398, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x97a0, gbc.sp());
        EXPECT(0xa39a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa398));
        EXPECT(0xb9, gbc.readMem(0xa399));
        // CB B9 027E
        gbc.setState(0x5761, 0x792, 0x1720, 0x7308, 0x3c2a, 0xa745, 0x0, 0x0);
        gbc.writeMem(0x5761, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x792, gbc.sp());
        EXPECT(0x5763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 027F
        gbc.setState(0xa4b1, 0x6a10, 0xf2b0, 0x685b, 0x9016, 0x3eb5, 0x0, 0x0);
        gbc.writeMem(0xa4b1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0xa4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b1));
        EXPECT(0xb9, gbc.readMem(0xa4b2));
        // CB B9 0280
        gbc.setState(0xcffa, 0x70d6, 0x3cb0, 0xa197, 0x1c17, 0xb50d, 0x1, 0x1);
        gbc.writeMem(0xcffa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x70d6, gbc.sp());
        EXPECT(0xcffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffa));
        EXPECT(0xb9, gbc.readMem(0xcffb));
        // CB B9 0281
        gbc.setState(0x115a, 0x1cb5, 0xb0c0, 0xea56, 0x911, 0x44c7, 0x0, 0x1);
        gbc.writeMem(0x115a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1cb5, gbc.sp());
        EXPECT(0x115c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0282
        gbc.setState(0xeab4, 0x4df4, 0x79d0, 0x7c88, 0xa252, 0x9f42, 0x0, 0x1);
        gbc.writeMem(0xeab4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4df4, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab4));
        EXPECT(0xb9, gbc.readMem(0xeab5));
        // CB B9 0283
        gbc.setState(0x8988, 0x3690, 0xaae0, 0x5da, 0xa60a, 0x321d, 0x0, 0x1);
        gbc.writeMem(0x8988, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3690, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8988));
        EXPECT(0xb9, gbc.readMem(0x8989));
        // CB B9 0284
        gbc.setState(0xce95, 0xffb, 0xcf80, 0x8a9d, 0xea89, 0x369e, 0x0, 0x1);
        gbc.writeMem(0xce95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xffb, gbc.sp());
        EXPECT(0xce97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce95));
        EXPECT(0xb9, gbc.readMem(0xce96));
        // CB B9 0285
        gbc.setState(0xbb, 0x8e0b, 0xc900, 0x7bed, 0x1571, 0x63f9, 0x0, 0x0);
        gbc.writeMem(0xbb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8e0b, gbc.sp());
        EXPECT(0xbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0286
        gbc.setState(0x19a3, 0x563c, 0x7740, 0x2884, 0x73f, 0x3023, 0x1, 0x0);
        gbc.writeMem(0x19a3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x563c, gbc.sp());
        EXPECT(0x19a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0287
        gbc.setState(0x6b90, 0x95d4, 0xd6c0, 0x432b, 0xd68c, 0x6053, 0x1, 0x1);
        gbc.writeMem(0x6b90, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x95d4, gbc.sp());
        EXPECT(0x6b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0288
        gbc.setState(0x3450, 0x5890, 0xed00, 0x21f2, 0x6bfa, 0xc336, 0x1, 0x1);
        gbc.writeMem(0x3450, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0x3452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0289
        gbc.setState(0xa76, 0xc3e3, 0xd8b0, 0x89a2, 0xfb95, 0xbcee, 0x1, 0x0);
        gbc.writeMem(0xa76, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc3e3, gbc.sp());
        EXPECT(0xa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 028A
        gbc.setState(0xa775, 0xbba3, 0x6ec0, 0x6506, 0xb0e2, 0xb37b, 0x0, 0x1);
        gbc.writeMem(0xa775, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbba3, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa775));
        EXPECT(0xb9, gbc.readMem(0xa776));
        // CB B9 028B
        gbc.setState(0x2352, 0x8a2d, 0x54a0, 0x3c61, 0x5882, 0x5258, 0x0, 0x1);
        gbc.writeMem(0x2352, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8a2d, gbc.sp());
        EXPECT(0x2354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 028C
        gbc.setState(0xbaea, 0xb9a4, 0x860, 0x503d, 0x6e1, 0x9815, 0x0, 0x0);
        gbc.writeMem(0xbaea, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb9a4, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaea));
        EXPECT(0xb9, gbc.readMem(0xbaeb));
        // CB B9 028D
        gbc.setState(0xc848, 0x73ac, 0x8cc0, 0x4a9b, 0x7bcc, 0x2792, 0x0, 0x1);
        gbc.writeMem(0xc848, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x73ac, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc848));
        EXPECT(0xb9, gbc.readMem(0xc849));
        // CB B9 028E
        gbc.setState(0xb346, 0x3a4f, 0xd8b0, 0x5dd8, 0x276, 0x6a36, 0x1, 0x1);
        gbc.writeMem(0xb346, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3a4f, gbc.sp());
        EXPECT(0xb348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb346));
        EXPECT(0xb9, gbc.readMem(0xb347));
        // CB B9 0290
        gbc.setState(0xda13, 0xc16c, 0xb890, 0x55a6, 0x170b, 0xda7e, 0x0, 0x0);
        gbc.writeMem(0xda13, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc16c, gbc.sp());
        EXPECT(0xda15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda13));
        EXPECT(0xb9, gbc.readMem(0xda14));
        // CB B9 0291
        gbc.setState(0xb7ce, 0x278c, 0xc70, 0xa4da, 0x73e2, 0x8d85, 0x1, 0x0);
        gbc.writeMem(0xb7ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0xb7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ce));
        EXPECT(0xb9, gbc.readMem(0xb7cf));
        // CB B9 0293
        gbc.setState(0xe883, 0xa1c8, 0xb350, 0xb49e, 0xe1bc, 0x6660, 0x0, 0x1);
        gbc.writeMem(0xe883, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa1c8, gbc.sp());
        EXPECT(0xe885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe883));
        EXPECT(0xb9, gbc.readMem(0xe884));
        // CB B9 0294
        gbc.setState(0xdc2b, 0x3500, 0xaa40, 0x1c8e, 0x5753, 0xef13, 0x0, 0x1);
        gbc.writeMem(0xdc2b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3500, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2b));
        EXPECT(0xb9, gbc.readMem(0xdc2c));
        // CB B9 0295
        gbc.setState(0xaee6, 0x7e0b, 0xca20, 0x8c9f, 0x2923, 0xfc3e, 0x1, 0x1);
        gbc.writeMem(0xaee6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7e0b, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee6));
        EXPECT(0xb9, gbc.readMem(0xaee7));
        // CB B9 0296
        gbc.setState(0xb17c, 0xf524, 0x80f0, 0x2316, 0x84d2, 0xf499, 0x0, 0x1);
        gbc.writeMem(0xb17c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0xb9, gbc.readMem(0xb17d));
        // CB B9 0297
        gbc.setState(0xa2ee, 0xcb3f, 0xff50, 0xf1dd, 0xe09a, 0x1bce, 0x1, 0x0);
        gbc.writeMem(0xa2ee, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcb3f, gbc.sp());
        EXPECT(0xa2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ee));
        EXPECT(0xb9, gbc.readMem(0xa2ef));
        // CB B9 0298
        gbc.setState(0xcfa1, 0x44b3, 0x4ab0, 0x82e2, 0xdc58, 0x39f2, 0x1, 0x0);
        gbc.writeMem(0xcfa1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x44b3, gbc.sp());
        EXPECT(0xcfa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa1));
        EXPECT(0xb9, gbc.readMem(0xcfa2));
        // CB B9 0299
        gbc.setState(0x7949, 0x624e, 0xa6d0, 0x4548, 0xfd43, 0x17ee, 0x1, 0x0);
        gbc.writeMem(0x7949, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x624e, gbc.sp());
        EXPECT(0x794b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 029A
        gbc.setState(0x8fdd, 0xf9d1, 0x8950, 0x6191, 0x54a0, 0xb732, 0x0, 0x0);
        gbc.writeMem(0x8fdd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf9d1, gbc.sp());
        EXPECT(0x8fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fdd));
        EXPECT(0xb9, gbc.readMem(0x8fde));
        // CB B9 029B
        gbc.setState(0xdac3, 0xdc7b, 0x98b0, 0xa615, 0x3050, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0xdac3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdc7b, gbc.sp());
        EXPECT(0xdac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac3));
        EXPECT(0xb9, gbc.readMem(0xdac4));
        // CB B9 029C
        gbc.setState(0x59e0, 0x63c, 0x4f10, 0x8c67, 0x409a, 0xf523, 0x1, 0x0);
        gbc.writeMem(0x59e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x63c, gbc.sp());
        EXPECT(0x59e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 029D
        gbc.setState(0xdd41, 0x6906, 0x9270, 0x4bff, 0xb6a2, 0xd015, 0x1, 0x1);
        gbc.writeMem(0xdd41, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6906, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd41));
        EXPECT(0xb9, gbc.readMem(0xdd42));
        // CB B9 029E
        gbc.setState(0xbbec, 0x3c56, 0x6c00, 0x4452, 0xb844, 0x9870, 0x0, 0x0);
        gbc.writeMem(0xbbec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3c56, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbec));
        EXPECT(0xb9, gbc.readMem(0xbbed));
        // CB B9 029F
        gbc.setState(0x75d7, 0x3bbb, 0x3460, 0xcd9f, 0x76ed, 0x9a73, 0x0, 0x1);
        gbc.writeMem(0x75d7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0x75d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02A0
        gbc.setState(0x3473, 0xabe0, 0x6e00, 0xbc49, 0x3e5e, 0xd311, 0x1, 0x0);
        gbc.writeMem(0x3473, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xabe0, gbc.sp());
        EXPECT(0x3475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02A1
        gbc.setState(0xab3d, 0x644a, 0x82b0, 0x11f5, 0x927d, 0x99cb, 0x1, 0x0);
        gbc.writeMem(0xab3d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x644a, gbc.sp());
        EXPECT(0xab3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3d));
        EXPECT(0xb9, gbc.readMem(0xab3e));
        // CB B9 02A3
        gbc.setState(0x15e3, 0xc74f, 0x7960, 0x6132, 0x1e5c, 0x8e8f, 0x1, 0x1);
        gbc.writeMem(0x15e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc74f, gbc.sp());
        EXPECT(0x15e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02A4
        gbc.setState(0x5842, 0x4796, 0x2a30, 0x3bf, 0x5560, 0xbf91, 0x0, 0x1);
        gbc.writeMem(0x5842, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4796, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02A5
        gbc.setState(0xcb2f, 0x1533, 0x9770, 0xd814, 0xec86, 0x3a38, 0x0, 0x0);
        gbc.writeMem(0xcb2f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1533, gbc.sp());
        EXPECT(0xcb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2f));
        EXPECT(0xb9, gbc.readMem(0xcb30));
        // CB B9 02A6
        gbc.setState(0x475b, 0xabaf, 0x940, 0xd3a4, 0x39f1, 0xf000, 0x1, 0x1);
        gbc.writeMem(0x475b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xabaf, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02A7
        gbc.setState(0xc4cc, 0xae6b, 0x6460, 0x55ee, 0x27c2, 0x2d59, 0x1, 0x0);
        gbc.writeMem(0xc4cc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xae6b, gbc.sp());
        EXPECT(0xc4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cc));
        EXPECT(0xb9, gbc.readMem(0xc4cd));
        // CB B9 02A8
        gbc.setState(0x8b07, 0x7f7b, 0x7660, 0xfba, 0xf21a, 0xc3b0, 0x1, 0x0);
        gbc.writeMem(0x8b07, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7f7b, gbc.sp());
        EXPECT(0x8b09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b07));
        EXPECT(0xb9, gbc.readMem(0x8b08));
        // CB B9 02A9
        gbc.setState(0xc1ac, 0xdd1e, 0xf3c0, 0xf35a, 0xa9f1, 0xfb5a, 0x0, 0x0);
        gbc.writeMem(0xc1ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdd1e, gbc.sp());
        EXPECT(0xc1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ac));
        EXPECT(0xb9, gbc.readMem(0xc1ad));
        // CB B9 02AA
        gbc.setState(0x89fa, 0x4e95, 0x7700, 0x34a, 0x5139, 0x3e41, 0x1, 0x0);
        gbc.writeMem(0x89fa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4e95, gbc.sp());
        EXPECT(0x89fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fa));
        EXPECT(0xb9, gbc.readMem(0x89fb));
        // CB B9 02AB
        gbc.setState(0x7ba6, 0xcc3f, 0x3ad0, 0x6e55, 0x499a, 0x3ecb, 0x0, 0x0);
        gbc.writeMem(0x7ba6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xcc3f, gbc.sp());
        EXPECT(0x7ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02AC
        gbc.setState(0x7ffc, 0xf86e, 0xd520, 0xbcae, 0xccf1, 0x95ab, 0x1, 0x0);
        gbc.writeMem(0x7ffc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf86e, gbc.sp());
        EXPECT(0x7ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02AD
        gbc.setState(0x438a, 0x5f60, 0xf050, 0x4aa7, 0xb8a5, 0x6d06, 0x1, 0x1);
        gbc.writeMem(0x438a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5f60, gbc.sp());
        EXPECT(0x438c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02AE
        gbc.setState(0x9836, 0xad14, 0xae30, 0x57c0, 0x1687, 0xb578, 0x1, 0x0);
        gbc.writeMem(0x9836, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xad14, gbc.sp());
        EXPECT(0x9838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9836));
        EXPECT(0xb9, gbc.readMem(0x9837));
        // CB B9 02AF
        gbc.setState(0xe717, 0x9440, 0x3ce0, 0x476a, 0xb811, 0x3e88, 0x1, 0x1);
        gbc.writeMem(0xe717, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9440, gbc.sp());
        EXPECT(0xe719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe717));
        EXPECT(0xb9, gbc.readMem(0xe718));
        // CB B9 02B0
        gbc.setState(0xe4f3, 0x3de7, 0x6780, 0x6ec5, 0x85c, 0xe632, 0x0, 0x1);
        gbc.writeMem(0xe4f3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3de7, gbc.sp());
        EXPECT(0xe4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f3));
        EXPECT(0xb9, gbc.readMem(0xe4f4));
        // CB B9 02B1
        gbc.setState(0xc69b, 0x43bf, 0xa2b0, 0x5bc6, 0x3c9c, 0x5299, 0x0, 0x1);
        gbc.writeMem(0xc69b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x43bf, gbc.sp());
        EXPECT(0xc69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69b));
        EXPECT(0xb9, gbc.readMem(0xc69c));
        // CB B9 02B2
        gbc.setState(0x1dc6, 0x5174, 0x5940, 0xaa65, 0xa5a3, 0x243d, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5174, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02B3
        gbc.setState(0x695c, 0xe85f, 0xf250, 0x857f, 0x5774, 0xbddc, 0x1, 0x0);
        gbc.writeMem(0x695c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe85f, gbc.sp());
        EXPECT(0x695e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02B4
        gbc.setState(0x614e, 0x86e6, 0x76c0, 0x6054, 0x6ee8, 0x6fb5, 0x0, 0x0);
        gbc.writeMem(0x614e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0x6150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02B5
        gbc.setState(0x9050, 0xeca8, 0xf50, 0xbbcc, 0x8bb8, 0x1e1d, 0x1, 0x1);
        gbc.writeMem(0x9050, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xeca8, gbc.sp());
        EXPECT(0x9052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9050));
        EXPECT(0xb9, gbc.readMem(0x9051));
        // CB B9 02B6
        gbc.setState(0x1331, 0x446e, 0x3700, 0xe05e, 0x9be2, 0x5f86, 0x1, 0x0);
        gbc.writeMem(0x1331, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x446e, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02B7
        gbc.setState(0xce05, 0xb6e7, 0x12d0, 0xf5ed, 0xee5d, 0xa6dc, 0x0, 0x0);
        gbc.writeMem(0xce05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb6e7, gbc.sp());
        EXPECT(0xce07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce05));
        EXPECT(0xb9, gbc.readMem(0xce06));
        // CB B9 02B8
        gbc.setState(0x67b1, 0x4123, 0x5dd0, 0x4c8f, 0x4166, 0x7e1d, 0x1, 0x1);
        gbc.writeMem(0x67b1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4123, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02B9
        gbc.setState(0xc45a, 0x23ee, 0x5800, 0xa3aa, 0x6ac1, 0x9cae, 0x1, 0x0);
        gbc.writeMem(0xc45a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x23ee, gbc.sp());
        EXPECT(0xc45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45a));
        EXPECT(0xb9, gbc.readMem(0xc45b));
        // CB B9 02BA
        gbc.setState(0xdcd6, 0x564e, 0x1290, 0x5d99, 0x162c, 0x624c, 0x0, 0x0);
        gbc.writeMem(0xdcd6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x564e, gbc.sp());
        EXPECT(0xdcd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd6));
        EXPECT(0xb9, gbc.readMem(0xdcd7));
        // CB B9 02BB
        gbc.setState(0x6462, 0x73ff, 0x21a0, 0x1109, 0xe7f, 0xd80d, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x73ff, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02BD
        gbc.setState(0x4b16, 0xef00, 0x5910, 0x1d7b, 0x83d0, 0x16d9, 0x1, 0x1);
        gbc.writeMem(0x4b16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xef00, gbc.sp());
        EXPECT(0x4b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02BE
        gbc.setState(0x1ec, 0x5cd1, 0x4fd0, 0xddec, 0x5b2d, 0x76a3, 0x1, 0x0);
        gbc.writeMem(0x1ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5cd1, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02BF
        gbc.setState(0x900, 0x62e7, 0xd460, 0x72d3, 0xd2d0, 0x176d, 0x1, 0x0);
        gbc.writeMem(0x900, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x62e7, gbc.sp());
        EXPECT(0x902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02C0
        gbc.setState(0x6714, 0xfd64, 0xfac0, 0x8c23, 0x20be, 0x3b67, 0x1, 0x1);
        gbc.writeMem(0x6714, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfd64, gbc.sp());
        EXPECT(0x6716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02C1
        gbc.setState(0xe602, 0xf625, 0x6ea0, 0x7898, 0x7f4e, 0xb333, 0x0, 0x1);
        gbc.writeMem(0xe602, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf625, gbc.sp());
        EXPECT(0xe604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe602));
        EXPECT(0xb9, gbc.readMem(0xe603));
        // CB B9 02C2
        gbc.setState(0x17de, 0xe007, 0xa3f0, 0xf494, 0x6004, 0xb1e2, 0x1, 0x1);
        gbc.writeMem(0x17de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe007, gbc.sp());
        EXPECT(0x17e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02C3
        gbc.setState(0xac7e, 0xf33a, 0x5580, 0x9164, 0xedb1, 0x6e06, 0x0, 0x1);
        gbc.writeMem(0xac7e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0xac80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7e));
        EXPECT(0xb9, gbc.readMem(0xac7f));
        // CB B9 02C4
        gbc.setState(0x6c21, 0x257a, 0xa6a0, 0x90a8, 0xd497, 0x5cf4, 0x0, 0x1);
        gbc.writeMem(0x6c21, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x257a, gbc.sp());
        EXPECT(0x6c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02C5
        gbc.setState(0xa71e, 0x331, 0xc300, 0xa0a9, 0xaf9a, 0xfd40, 0x0, 0x1);
        gbc.writeMem(0xa71e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x331, gbc.sp());
        EXPECT(0xa720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71e));
        EXPECT(0xb9, gbc.readMem(0xa71f));
        // CB B9 02C6
        gbc.setState(0x221c, 0xbb6a, 0xa420, 0x3559, 0x6a93, 0xb7b6, 0x0, 0x1);
        gbc.writeMem(0x221c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbb6a, gbc.sp());
        EXPECT(0x221e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02C7
        gbc.setState(0xdd3e, 0xfd85, 0x1130, 0xeacb, 0xf898, 0x13d3, 0x1, 0x0);
        gbc.writeMem(0xdd3e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfd85, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3e));
        EXPECT(0xb9, gbc.readMem(0xdd3f));
        // CB B9 02C9
        gbc.setState(0xcb47, 0x96da, 0x2730, 0xa479, 0x37ac, 0xbc77, 0x1, 0x0);
        gbc.writeMem(0xcb47, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x96da, gbc.sp());
        EXPECT(0xcb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb47));
        EXPECT(0xb9, gbc.readMem(0xcb48));
        // CB B9 02CA
        gbc.setState(0x95a0, 0xe1a4, 0x5080, 0x33de, 0xff08, 0xfe2b, 0x0, 0x1);
        gbc.writeMem(0x95a0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe1a4, gbc.sp());
        EXPECT(0x95a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a0));
        EXPECT(0xb9, gbc.readMem(0x95a1));
        // CB B9 02CB
        gbc.setState(0xbc1c, 0xcaaf, 0x6e80, 0x25cd, 0x831, 0xf1b9, 0x1, 0x0);
        gbc.writeMem(0xbc1c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0xbc1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1c));
        EXPECT(0xb9, gbc.readMem(0xbc1d));
        // CB B9 02CC
        gbc.setState(0x88b7, 0x7ad1, 0x60, 0x759c, 0xfa6, 0x8008, 0x1, 0x1);
        gbc.writeMem(0x88b7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x7ad1, gbc.sp());
        EXPECT(0x88b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b7));
        EXPECT(0xb9, gbc.readMem(0x88b8));
        // CB B9 02CD
        gbc.setState(0xdb65, 0x5a82, 0xc430, 0x57fa, 0xb006, 0x5165, 0x0, 0x1);
        gbc.writeMem(0xdb65, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5a82, gbc.sp());
        EXPECT(0xdb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb65));
        EXPECT(0xb9, gbc.readMem(0xdb66));
        // CB B9 02CE
        gbc.setState(0xb93d, 0x8715, 0x83d0, 0xb1e3, 0x5730, 0xb361, 0x1, 0x0);
        gbc.writeMem(0xb93d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8715, gbc.sp());
        EXPECT(0xb93f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93d));
        EXPECT(0xb9, gbc.readMem(0xb93e));
        // CB B9 02CF
        gbc.setState(0x3cd4, 0x3a0e, 0xec80, 0x2ec, 0x7f51, 0x3b74, 0x1, 0x1);
        gbc.writeMem(0x3cd4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3a0e, gbc.sp());
        EXPECT(0x3cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02D1
        gbc.setState(0x82cb, 0x3779, 0x3ee0, 0x13d0, 0x2d6a, 0x4edf, 0x0, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3779, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cb));
        EXPECT(0xb9, gbc.readMem(0x82cc));
        // CB B9 02D2
        gbc.setState(0xbafe, 0x8cc1, 0x5800, 0xf2c, 0x785, 0xba54, 0x0, 0x0);
        gbc.writeMem(0xbafe, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0xbb00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafe));
        EXPECT(0xb9, gbc.readMem(0xbaff));
        // CB B9 02D3
        gbc.setState(0xc2c5, 0xa329, 0x7e10, 0xdf20, 0x52e7, 0xd691, 0x0, 0x0);
        gbc.writeMem(0xc2c5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa329, gbc.sp());
        EXPECT(0xc2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c5));
        EXPECT(0xb9, gbc.readMem(0xc2c6));
        // CB B9 02D4
        gbc.setState(0x7052, 0xf6d9, 0x7b50, 0xc08a, 0xe26d, 0x8318, 0x0, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02D5
        gbc.setState(0x3799, 0x7e2a, 0x7d20, 0x79ea, 0x4512, 0x953e, 0x1, 0x1);
        gbc.writeMem(0x3799, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7e2a, gbc.sp());
        EXPECT(0x379b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02D6
        gbc.setState(0xba3a, 0x7d7e, 0x8c90, 0xdb22, 0x37c5, 0x3d5, 0x1, 0x1);
        gbc.writeMem(0xba3a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7d7e, gbc.sp());
        EXPECT(0xba3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3a));
        EXPECT(0xb9, gbc.readMem(0xba3b));
        // CB B9 02D7
        gbc.setState(0xa9a6, 0x41b0, 0xe510, 0xf054, 0xa490, 0x642, 0x1, 0x1);
        gbc.writeMem(0xa9a6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x41b0, gbc.sp());
        EXPECT(0xa9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a6));
        EXPECT(0xb9, gbc.readMem(0xa9a7));
        // CB B9 02D8
        gbc.setState(0xa320, 0x2681, 0xdc60, 0xe0b, 0x2103, 0x3e97, 0x1, 0x1);
        gbc.writeMem(0xa320, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0xa322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa320));
        EXPECT(0xb9, gbc.readMem(0xa321));
        // CB B9 02D9
        gbc.setState(0x2767, 0xc425, 0x5780, 0xfd61, 0x13e3, 0x8a0f, 0x1, 0x1);
        gbc.writeMem(0x2767, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0x2769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02DA
        gbc.setState(0xd35b, 0xfece, 0x7430, 0xf5c7, 0x88ff, 0x2a77, 0x0, 0x0);
        gbc.writeMem(0xd35b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfece, gbc.sp());
        EXPECT(0xd35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35b));
        EXPECT(0xb9, gbc.readMem(0xd35c));
        // CB B9 02DB
        gbc.setState(0xc9ec, 0x861, 0x6510, 0x135f, 0xd18c, 0x564d, 0x0, 0x0);
        gbc.writeMem(0xc9ec, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x861, gbc.sp());
        EXPECT(0xc9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ec));
        EXPECT(0xb9, gbc.readMem(0xc9ed));
        // CB B9 02DC
        gbc.setState(0x1a9a, 0x7202, 0xd740, 0x2cfb, 0x1fc0, 0xe696, 0x0, 0x1);
        gbc.writeMem(0x1a9a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7202, gbc.sp());
        EXPECT(0x1a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02DE
        gbc.setState(0xefe0, 0xdd4b, 0x7900, 0xe52e, 0x78d6, 0xc240, 0x1, 0x0);
        gbc.writeMem(0xefe0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdd4b, gbc.sp());
        EXPECT(0xefe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe0));
        EXPECT(0xb9, gbc.readMem(0xefe1));
        // CB B9 02DF
        gbc.setState(0xe3c9, 0xd92b, 0xc840, 0x309, 0x632d, 0xec71, 0x1, 0x0);
        gbc.writeMem(0xe3c9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd92b, gbc.sp());
        EXPECT(0xe3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c9));
        EXPECT(0xb9, gbc.readMem(0xe3ca));
        // CB B9 02E0
        gbc.setState(0xba0a, 0x7057, 0xe980, 0xfbc3, 0xc30c, 0xb2a2, 0x1, 0x1);
        gbc.writeMem(0xba0a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7057, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0a));
        EXPECT(0xb9, gbc.readMem(0xba0b));
        // CB B9 02E1
        gbc.setState(0xd46a, 0x5fae, 0xcde0, 0xbd3c, 0x4cc7, 0x4c97, 0x0, 0x1);
        gbc.writeMem(0xd46a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5fae, gbc.sp());
        EXPECT(0xd46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46a));
        EXPECT(0xb9, gbc.readMem(0xd46b));
        // CB B9 02E2
        gbc.setState(0x23a1, 0x37da, 0xd820, 0xa4d9, 0xf685, 0xadb, 0x0, 0x1);
        gbc.writeMem(0x23a1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0x23a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02E3
        gbc.setState(0xc67b, 0x7f6e, 0x4810, 0x5315, 0x8415, 0x4641, 0x1, 0x1);
        gbc.writeMem(0xc67b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7f6e, gbc.sp());
        EXPECT(0xc67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67b));
        EXPECT(0xb9, gbc.readMem(0xc67c));
        // CB B9 02E4
        gbc.setState(0x3cca, 0x74f0, 0x8e30, 0xb562, 0xcda9, 0x2498, 0x0, 0x1);
        gbc.writeMem(0x3cca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x74f0, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02E5
        gbc.setState(0x5fa1, 0x6c60, 0xe640, 0xc6d4, 0xc489, 0xe239, 0x0, 0x1);
        gbc.writeMem(0x5fa1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6c60, gbc.sp());
        EXPECT(0x5fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02E6
        gbc.setState(0xec97, 0xd655, 0x6ef0, 0x3d64, 0x37e7, 0x29ed, 0x0, 0x0);
        gbc.writeMem(0xec97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0xec99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec97));
        EXPECT(0xb9, gbc.readMem(0xec98));
        // CB B9 02E7
        gbc.setState(0x6c2c, 0x9077, 0xa7c0, 0x821c, 0x75c, 0xda47, 0x0, 0x1);
        gbc.writeMem(0x6c2c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9077, gbc.sp());
        EXPECT(0x6c2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02E8
        gbc.setState(0x6455, 0x2e4f, 0xdf50, 0x8fa6, 0x9193, 0x5a25, 0x0, 0x1);
        gbc.writeMem(0x6455, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2e4f, gbc.sp());
        EXPECT(0x6457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02E9
        gbc.setState(0x7edc, 0xa43a, 0xe830, 0x23fd, 0x99e4, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0x7edc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa43a, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02EA
        gbc.setState(0xb274, 0x3879, 0x890, 0x6542, 0x4aac, 0xf3c2, 0x1, 0x0);
        gbc.writeMem(0xb274, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0xb276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb274));
        EXPECT(0xb9, gbc.readMem(0xb275));
        // CB B9 02EB
        gbc.setState(0xef86, 0xb7c3, 0xe00, 0x9900, 0x7c9f, 0x3ec, 0x1, 0x0);
        gbc.writeMem(0xef86, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb7c3, gbc.sp());
        EXPECT(0xef88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef86));
        EXPECT(0xb9, gbc.readMem(0xef87));
        // CB B9 02EC
        gbc.setState(0xa471, 0x1ab6, 0xd580, 0xd791, 0xf993, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0xa471, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1ab6, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa471));
        EXPECT(0xb9, gbc.readMem(0xa472));
        // CB B9 02ED
        gbc.setState(0x22f0, 0x79af, 0x38f0, 0x584, 0x99f3, 0xeb05, 0x0, 0x1);
        gbc.writeMem(0x22f0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x79af, gbc.sp());
        EXPECT(0x22f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02EE
        gbc.setState(0x23d5, 0x646c, 0xb5f0, 0x8f24, 0x1a1d, 0xce1f, 0x1, 0x0);
        gbc.writeMem(0x23d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x646c, gbc.sp());
        EXPECT(0x23d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02F0
        gbc.setState(0x4cdc, 0xdd23, 0x5da0, 0x4584, 0x4b84, 0xc7d5, 0x0, 0x0);
        gbc.writeMem(0x4cdc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdd23, gbc.sp());
        EXPECT(0x4cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02F1
        gbc.setState(0xd298, 0x286b, 0xb710, 0xafab, 0xc7e6, 0x2b17, 0x0, 0x0);
        gbc.writeMem(0xd298, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x286b, gbc.sp());
        EXPECT(0xd29a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd298));
        EXPECT(0xb9, gbc.readMem(0xd299));
        // CB B9 02F2
        gbc.setState(0x6d0c, 0x213f, 0xf110, 0xbdc1, 0x50a3, 0xcc1f, 0x0, 0x0);
        gbc.writeMem(0x6d0c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x213f, gbc.sp());
        EXPECT(0x6d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 02F3
        gbc.setState(0xc2ee, 0x8f1a, 0x11d0, 0x7bd0, 0x54b9, 0x72b6, 0x1, 0x0);
        gbc.writeMem(0xc2ee, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8f1a, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ee));
        EXPECT(0xb9, gbc.readMem(0xc2ef));
        // CB B9 02F4
        gbc.setState(0x910e, 0x1024, 0xb7f0, 0xc01a, 0xe0f7, 0x1561, 0x1, 0x0);
        gbc.writeMem(0x910e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1024, gbc.sp());
        EXPECT(0x9110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910e));
        EXPECT(0xb9, gbc.readMem(0x910f));
        // CB B9 02F5
        gbc.setState(0xb7ac, 0x50ba, 0x400, 0x53d9, 0x4fb9, 0xd020, 0x0, 0x1);
        gbc.writeMem(0xb7ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x50ba, gbc.sp());
        EXPECT(0xb7ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ac));
        EXPECT(0xb9, gbc.readMem(0xb7ad));
        // CB B9 02F7
        gbc.setState(0x8e54, 0x434b, 0x6a10, 0x6aef, 0x8bd5, 0x170d, 0x0, 0x0);
        gbc.writeMem(0x8e54, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x434b, gbc.sp());
        EXPECT(0x8e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e54));
        EXPECT(0xb9, gbc.readMem(0x8e55));
        // CB B9 02F8
        gbc.setState(0x7961, 0xe513, 0x7860, 0x990d, 0xe56b, 0x91ad, 0x0, 0x1);
        gbc.writeMem(0x7961, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe513, gbc.sp());
        EXPECT(0x7963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02F9
        gbc.setState(0xa305, 0xe055, 0xf590, 0xfe78, 0x8912, 0x72da, 0x0, 0x1);
        gbc.writeMem(0xa305, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0xa307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa305));
        EXPECT(0xb9, gbc.readMem(0xa306));
        // CB B9 02FA
        gbc.setState(0x2ef3, 0x3fb7, 0x5500, 0xb4ca, 0x22f4, 0xe844, 0x1, 0x0);
        gbc.writeMem(0x2ef3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0x2ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 02FB
        gbc.setState(0x9a87, 0x4177, 0x5450, 0x4861, 0xc038, 0x6f56, 0x0, 0x0);
        gbc.writeMem(0x9a87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4177, gbc.sp());
        EXPECT(0x9a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a87));
        EXPECT(0xb9, gbc.readMem(0x9a88));
        // CB B9 02FC
        gbc.setState(0xee95, 0x8d20, 0x3020, 0x8fb0, 0x7942, 0xbd40, 0x1, 0x0);
        gbc.writeMem(0xee95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8d20, gbc.sp());
        EXPECT(0xee97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee95));
        EXPECT(0xb9, gbc.readMem(0xee96));
        // CB B9 02FD
        gbc.setState(0xc1a1, 0xc693, 0x8510, 0x4b35, 0xe5f6, 0x624d, 0x1, 0x1);
        gbc.writeMem(0xc1a1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc693, gbc.sp());
        EXPECT(0xc1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a1));
        EXPECT(0xb9, gbc.readMem(0xc1a2));
        // CB B9 02FE
        gbc.setState(0x365c, 0x45c6, 0x2e60, 0x15c5, 0x8ba4, 0xfe36, 0x0, 0x1);
        gbc.writeMem(0x365c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x45c6, gbc.sp());
        EXPECT(0x365e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0300
        gbc.setState(0x6c53, 0x50a, 0x2c90, 0x32b7, 0x5146, 0x2a1c, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x50a, gbc.sp());
        EXPECT(0x6c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0301
        gbc.setState(0x2500, 0x81d, 0x9730, 0x75f9, 0xe9b4, 0x44f4, 0x1, 0x1);
        gbc.writeMem(0x2500, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0x2502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0302
        gbc.setState(0x18e2, 0xec53, 0xde80, 0x16dd, 0x1596, 0x451, 0x0, 0x0);
        gbc.writeMem(0x18e2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0x18e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0303
        gbc.setState(0x7f49, 0xe509, 0x69b0, 0x13d1, 0x540, 0x1ae0, 0x0, 0x0);
        gbc.writeMem(0x7f49, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe509, gbc.sp());
        EXPECT(0x7f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0304
        gbc.setState(0x79cd, 0x6ce3, 0xf370, 0x42fe, 0xb075, 0x252e, 0x1, 0x1);
        gbc.writeMem(0x79cd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ce3, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0305
        gbc.setState(0xc516, 0xed01, 0x7b80, 0xb836, 0xc2e2, 0x1b38, 0x1, 0x1);
        gbc.writeMem(0xc516, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xed01, gbc.sp());
        EXPECT(0xc518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc516));
        EXPECT(0xb9, gbc.readMem(0xc517));
        // CB B9 0306
        gbc.setState(0xa5f7, 0xb301, 0x7d0, 0x8b18, 0xf98c, 0x690b, 0x1, 0x0);
        gbc.writeMem(0xa5f7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb301, gbc.sp());
        EXPECT(0xa5f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f7));
        EXPECT(0xb9, gbc.readMem(0xa5f8));
        // CB B9 0308
        gbc.setState(0x6a97, 0x7b65, 0x28d0, 0xb2b8, 0xe0f1, 0xa763, 0x0, 0x0);
        gbc.writeMem(0x6a97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7b65, gbc.sp());
        EXPECT(0x6a99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0309
        gbc.setState(0x421d, 0xd4f0, 0x4b00, 0xc0bc, 0xf6f2, 0x844f, 0x1, 0x1);
        gbc.writeMem(0x421d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd4f0, gbc.sp());
        EXPECT(0x421f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 030A
        gbc.setState(0x4fc5, 0x9f9c, 0x7340, 0x712e, 0xaf6a, 0x64bd, 0x1, 0x1);
        gbc.writeMem(0x4fc5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9f9c, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 030B
        gbc.setState(0x2981, 0xb1bf, 0x2000, 0xcfd0, 0x27fe, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0x2981, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb1bf, gbc.sp());
        EXPECT(0x2983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 030C
        gbc.setState(0x35c7, 0x920b, 0xe780, 0x71ab, 0xa786, 0x85bd, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x920b, gbc.sp());
        EXPECT(0x35c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 030D
        gbc.setState(0x1db7, 0x8e59, 0x99f0, 0xa06b, 0xa096, 0xfcf3, 0x1, 0x0);
        gbc.writeMem(0x1db7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8e59, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 030E
        gbc.setState(0xd1b4, 0x3886, 0x7940, 0x54b8, 0xce2b, 0x8860, 0x0, 0x0);
        gbc.writeMem(0xd1b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3886, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b4));
        EXPECT(0xb9, gbc.readMem(0xd1b5));
        // CB B9 030F
        gbc.setState(0x81d8, 0xc73a, 0xb1b0, 0xedea, 0xa0a3, 0xa18e, 0x0, 0x1);
        gbc.writeMem(0x81d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc73a, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d8));
        EXPECT(0xb9, gbc.readMem(0x81d9));
        // CB B9 0310
        gbc.setState(0xacf5, 0x7a29, 0xafd0, 0x70d4, 0x48e8, 0x64e9, 0x1, 0x1);
        gbc.writeMem(0xacf5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7a29, gbc.sp());
        EXPECT(0xacf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf5));
        EXPECT(0xb9, gbc.readMem(0xacf6));
        // CB B9 0311
        gbc.setState(0x10da, 0x9142, 0xc2e0, 0xbceb, 0x7575, 0x5ad2, 0x1, 0x1);
        gbc.writeMem(0x10da, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9142, gbc.sp());
        EXPECT(0x10dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0312
        gbc.setState(0x4e0a, 0xf42d, 0x1af0, 0x5a03, 0x2490, 0x8633, 0x0, 0x0);
        gbc.writeMem(0x4e0a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf42d, gbc.sp());
        EXPECT(0x4e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0313
        gbc.setState(0x9ce, 0x1b47, 0x1ad0, 0x4afa, 0x45b, 0xbb12, 0x1, 0x1);
        gbc.writeMem(0x9ce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x1b47, gbc.sp());
        EXPECT(0x9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0314
        gbc.setState(0x7bcb, 0x450d, 0xab10, 0x529, 0xda04, 0x46e0, 0x0, 0x0);
        gbc.writeMem(0x7bcb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x450d, gbc.sp());
        EXPECT(0x7bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0315
        gbc.setState(0xdaa, 0xfc46, 0x57f0, 0x5402, 0x63b2, 0xd292, 0x1, 0x1);
        gbc.writeMem(0xdaa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfc46, gbc.sp());
        EXPECT(0xdac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0316
        gbc.setState(0x9ca9, 0xbcd1, 0x2360, 0x5b84, 0x4dd1, 0xb42b, 0x0, 0x0);
        gbc.writeMem(0x9ca9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbcd1, gbc.sp());
        EXPECT(0x9cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca9));
        EXPECT(0xb9, gbc.readMem(0x9caa));
        // CB B9 0317
        gbc.setState(0x4b60, 0xfce, 0x8e40, 0xd6de, 0xf924, 0x3a8d, 0x1, 0x0);
        gbc.writeMem(0x4b60, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfce, gbc.sp());
        EXPECT(0x4b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0318
        gbc.setState(0x5161, 0x4b60, 0xa430, 0x750a, 0x3eb4, 0x22ba, 0x1, 0x1);
        gbc.writeMem(0x5161, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4b60, gbc.sp());
        EXPECT(0x5163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0319
        gbc.setState(0xb6d8, 0x1ea0, 0xd0e0, 0x6deb, 0xf0e3, 0x7400, 0x1, 0x1);
        gbc.writeMem(0xb6d8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1ea0, gbc.sp());
        EXPECT(0xb6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d8));
        EXPECT(0xb9, gbc.readMem(0xb6d9));
        // CB B9 031A
        gbc.setState(0x6245, 0xd2c6, 0x3a10, 0xed0, 0xa6dc, 0xa179, 0x1, 0x1);
        gbc.writeMem(0x6245, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd2c6, gbc.sp());
        EXPECT(0x6247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 031B
        gbc.setState(0x895b, 0x39ee, 0xc660, 0xb8f5, 0x1ebf, 0xe6fa, 0x0, 0x0);
        gbc.writeMem(0x895b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x39ee, gbc.sp());
        EXPECT(0x895d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895b));
        EXPECT(0xb9, gbc.readMem(0x895c));
        // CB B9 031C
        gbc.setState(0x92fa, 0x9416, 0xb790, 0x7f8d, 0xd268, 0xce48, 0x0, 0x0);
        gbc.writeMem(0x92fa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x92fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fa));
        EXPECT(0xb9, gbc.readMem(0x92fb));
        // CB B9 031D
        gbc.setState(0x7e86, 0xf8b8, 0x1bf0, 0x30f9, 0x3a59, 0x3f23, 0x0, 0x1);
        gbc.writeMem(0x7e86, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf8b8, gbc.sp());
        EXPECT(0x7e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 031E
        gbc.setState(0xdf6d, 0x16fe, 0xba0, 0x9691, 0x27fb, 0x5a5a, 0x1, 0x1);
        gbc.writeMem(0xdf6d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x16fe, gbc.sp());
        EXPECT(0xdf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6d));
        EXPECT(0xb9, gbc.readMem(0xdf6e));
        // CB B9 031F
        gbc.setState(0x7be5, 0x74bc, 0x8cf0, 0x1db0, 0xf716, 0xf68d, 0x0, 0x0);
        gbc.writeMem(0x7be5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x74bc, gbc.sp());
        EXPECT(0x7be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0320
        gbc.setState(0xa3ae, 0x28e2, 0x5930, 0xf7ee, 0x8830, 0xfef4, 0x1, 0x0);
        gbc.writeMem(0xa3ae, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x28e2, gbc.sp());
        EXPECT(0xa3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ae));
        EXPECT(0xb9, gbc.readMem(0xa3af));
        // CB B9 0321
        gbc.setState(0xc8bb, 0x69c2, 0x3d90, 0xa912, 0x2848, 0x37f7, 0x0, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x69c2, gbc.sp());
        EXPECT(0xc8bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bb));
        EXPECT(0xb9, gbc.readMem(0xc8bc));
        // CB B9 0322
        gbc.setState(0x979e, 0x7318, 0x6da0, 0x8956, 0xa409, 0x1f50, 0x0, 0x1);
        gbc.writeMem(0x979e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7318, gbc.sp());
        EXPECT(0x97a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979e));
        EXPECT(0xb9, gbc.readMem(0x979f));
        // CB B9 0323
        gbc.setState(0x4a53, 0x7928, 0x8570, 0xaee9, 0xea17, 0x9bfa, 0x0, 0x1);
        gbc.writeMem(0x4a53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7928, gbc.sp());
        EXPECT(0x4a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0325
        gbc.setState(0x74b0, 0x6087, 0x4110, 0x4c2b, 0xa348, 0x2b5d, 0x0, 0x1);
        gbc.writeMem(0x74b0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6087, gbc.sp());
        EXPECT(0x74b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0327
        gbc.setState(0x5825, 0xc15e, 0x7210, 0x9c3d, 0xc2da, 0x1603, 0x0, 0x0);
        gbc.writeMem(0x5825, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc15e, gbc.sp());
        EXPECT(0x5827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0328
        gbc.setState(0xa30a, 0x1d82, 0x7850, 0x7155, 0x817d, 0xc03c, 0x0, 0x0);
        gbc.writeMem(0xa30a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1d82, gbc.sp());
        EXPECT(0xa30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30a));
        EXPECT(0xb9, gbc.readMem(0xa30b));
        // CB B9 0329
        gbc.setState(0xa126, 0x3a7c, 0xb320, 0x824a, 0xc585, 0x5333, 0x1, 0x0);
        gbc.writeMem(0xa126, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3a7c, gbc.sp());
        EXPECT(0xa128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa126));
        EXPECT(0xb9, gbc.readMem(0xa127));
        // CB B9 032A
        gbc.setState(0x5f53, 0x1c6b, 0xc6b0, 0xba4d, 0x14b1, 0x1e69, 0x1, 0x0);
        gbc.writeMem(0x5f53, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1c6b, gbc.sp());
        EXPECT(0x5f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 032B
        gbc.setState(0x9154, 0xa9ef, 0x8d40, 0x83d2, 0xcdc7, 0xcb05, 0x0, 0x0);
        gbc.writeMem(0x9154, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0x9156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9154));
        EXPECT(0xb9, gbc.readMem(0x9155));
        // CB B9 032C
        gbc.setState(0xcb40, 0xd8f, 0xd330, 0x6ded, 0xf6a, 0xccd3, 0x1, 0x1);
        gbc.writeMem(0xcb40, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd8f, gbc.sp());
        EXPECT(0xcb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb40));
        EXPECT(0xb9, gbc.readMem(0xcb41));
        // CB B9 032D
        gbc.setState(0x7c3f, 0xfba9, 0xb250, 0xbd26, 0x6ce, 0xf108, 0x1, 0x1);
        gbc.writeMem(0x7c3f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0x7c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 032E
        gbc.setState(0xa058, 0x7916, 0x77b0, 0x25b9, 0x159a, 0x79a1, 0x1, 0x0);
        gbc.writeMem(0xa058, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7916, gbc.sp());
        EXPECT(0xa05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa058));
        EXPECT(0xb9, gbc.readMem(0xa059));
        // CB B9 032F
        gbc.setState(0xc217, 0xd9cd, 0x14a0, 0xa4c7, 0x98c9, 0xc0bd, 0x1, 0x0);
        gbc.writeMem(0xc217, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0xc219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc217));
        EXPECT(0xb9, gbc.readMem(0xc218));
        // CB B9 0330
        gbc.setState(0xeb6b, 0x3cb9, 0x2490, 0x912e, 0xd0b4, 0xa636, 0x1, 0x1);
        gbc.writeMem(0xeb6b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3cb9, gbc.sp());
        EXPECT(0xeb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6b));
        EXPECT(0xb9, gbc.readMem(0xeb6c));
        // CB B9 0332
        gbc.setState(0xe60b, 0xb3d0, 0xe4d0, 0xcd01, 0xe24e, 0x5987, 0x0, 0x1);
        gbc.writeMem(0xe60b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0xe60d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe60b));
        EXPECT(0xb9, gbc.readMem(0xe60c));
        // CB B9 0333
        gbc.setState(0x7890, 0xfe62, 0x80e0, 0x9aaf, 0xd17f, 0xb7c, 0x1, 0x0);
        gbc.writeMem(0x7890, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfe62, gbc.sp());
        EXPECT(0x7892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0334
        gbc.setState(0x6567, 0x8c88, 0x360, 0xaaf3, 0xfefb, 0x75e, 0x1, 0x0);
        gbc.writeMem(0x6567, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0x6569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0336
        gbc.setState(0xe951, 0x7c26, 0xf040, 0x94ce, 0x9e21, 0xd3b9, 0x1, 0x0);
        gbc.writeMem(0xe951, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7c26, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe951));
        EXPECT(0xb9, gbc.readMem(0xe952));
        // CB B9 0337
        gbc.setState(0xb04a, 0x90d, 0xa4d0, 0xf4ae, 0x23b7, 0x1ade, 0x1, 0x1);
        gbc.writeMem(0xb04a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x90d, gbc.sp());
        EXPECT(0xb04c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04a));
        EXPECT(0xb9, gbc.readMem(0xb04b));
        // CB B9 0339
        gbc.setState(0xb568, 0x2dbd, 0x4420, 0x9ff7, 0xd511, 0x87a7, 0x0, 0x1);
        gbc.writeMem(0xb568, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2dbd, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb568));
        EXPECT(0xb9, gbc.readMem(0xb569));
        // CB B9 033A
        gbc.setState(0x5197, 0xb194, 0x82f0, 0x740e, 0x4a10, 0x4d4b, 0x1, 0x0);
        gbc.writeMem(0x5197, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb194, gbc.sp());
        EXPECT(0x5199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 033B
        gbc.setState(0x7b34, 0xc59a, 0x1de0, 0x61a4, 0xa5e3, 0x6b52, 0x1, 0x0);
        gbc.writeMem(0x7b34, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc59a, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 033C
        gbc.setState(0x3d8a, 0xc0b8, 0x8550, 0xc789, 0x68ca, 0x1681, 0x0, 0x0);
        gbc.writeMem(0x3d8a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc0b8, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 033E
        gbc.setState(0xed16, 0x48ec, 0xe1e0, 0x95b3, 0x5342, 0xf728, 0x1, 0x1);
        gbc.writeMem(0xed16, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x48ec, gbc.sp());
        EXPECT(0xed18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed16));
        EXPECT(0xb9, gbc.readMem(0xed17));
        // CB B9 033F
        gbc.setState(0x1040, 0xfe80, 0x80c0, 0xf4ea, 0xe261, 0x87b8, 0x0, 0x0);
        gbc.writeMem(0x1040, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0x1042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0340
        gbc.setState(0x4d77, 0xbcc6, 0x5230, 0x14e6, 0xb46e, 0x5dbe, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xbcc6, gbc.sp());
        EXPECT(0x4d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0341
        gbc.setState(0x94de, 0x5b65, 0xb590, 0xf541, 0x2ab9, 0x987a, 0x1, 0x1);
        gbc.writeMem(0x94de, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5b65, gbc.sp());
        EXPECT(0x94e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94de));
        EXPECT(0xb9, gbc.readMem(0x94df));
        // CB B9 0342
        gbc.setState(0x6cb3, 0x5d1, 0x8b60, 0x649c, 0x39bf, 0xff39, 0x0, 0x1);
        gbc.writeMem(0x6cb3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0343
        gbc.setState(0x8d7f, 0x362d, 0xada0, 0xd8f8, 0xff97, 0x29e4, 0x0, 0x1);
        gbc.writeMem(0x8d7f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x362d, gbc.sp());
        EXPECT(0x8d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7f));
        EXPECT(0xb9, gbc.readMem(0x8d80));
        // CB B9 0344
        gbc.setState(0x945a, 0xd722, 0x26b0, 0x71d5, 0xd9bf, 0x7ff, 0x1, 0x1);
        gbc.writeMem(0x945a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd722, gbc.sp());
        EXPECT(0x945c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945a));
        EXPECT(0xb9, gbc.readMem(0x945b));
        // CB B9 0345
        gbc.setState(0x7993, 0x111a, 0x2350, 0xbfc2, 0x8811, 0x7220, 0x1, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x111a, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0346
        gbc.setState(0x9cd9, 0x811b, 0x46f0, 0xc4b1, 0x103c, 0x8907, 0x0, 0x0);
        gbc.writeMem(0x9cd9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x811b, gbc.sp());
        EXPECT(0x9cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cd9));
        EXPECT(0xb9, gbc.readMem(0x9cda));
        // CB B9 0347
        gbc.setState(0xbf5b, 0xa123, 0x2b40, 0x8288, 0x4805, 0xd46f, 0x0, 0x0);
        gbc.writeMem(0xbf5b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa123, gbc.sp());
        EXPECT(0xbf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5b));
        EXPECT(0xb9, gbc.readMem(0xbf5c));
        // CB B9 0348
        gbc.setState(0x3ef4, 0x950a, 0x5e10, 0x58b4, 0xd25, 0xee5a, 0x0, 0x1);
        gbc.writeMem(0x3ef4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x950a, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0349
        gbc.setState(0x6cce, 0x6ac1, 0x7a0, 0x4651, 0x303c, 0x5111, 0x1, 0x0);
        gbc.writeMem(0x6cce, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6ac1, gbc.sp());
        EXPECT(0x6cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 034B
        gbc.setState(0x7f9f, 0x1c44, 0x6f60, 0xc158, 0x4715, 0x4588, 0x0, 0x1);
        gbc.writeMem(0x7f9f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1c44, gbc.sp());
        EXPECT(0x7fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 034C
        gbc.setState(0x8362, 0x4217, 0x6930, 0xcb5f, 0x4dd1, 0x71d9, 0x0, 0x0);
        gbc.writeMem(0x8362, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4217, gbc.sp());
        EXPECT(0x8364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8362));
        EXPECT(0xb9, gbc.readMem(0x8363));
        // CB B9 034D
        gbc.setState(0x87aa, 0x560, 0xaa00, 0x6d6a, 0x9743, 0x18ea, 0x1, 0x1);
        gbc.writeMem(0x87aa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x560, gbc.sp());
        EXPECT(0x87ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87aa));
        EXPECT(0xb9, gbc.readMem(0x87ab));
        // CB B9 034E
        gbc.setState(0x28e4, 0xc2a8, 0x53b0, 0x1c46, 0xa1cc, 0x5db8, 0x0, 0x0);
        gbc.writeMem(0x28e4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc2a8, gbc.sp());
        EXPECT(0x28e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 034F
        gbc.setState(0x1e45, 0x7982, 0x6290, 0xb4b1, 0xf9c4, 0x609, 0x0, 0x0);
        gbc.writeMem(0x1e45, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7982, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0350
        gbc.setState(0x4b42, 0xe294, 0x8a10, 0xd1c1, 0x96dd, 0x15fa, 0x0, 0x0);
        gbc.writeMem(0x4b42, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe294, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0351
        gbc.setState(0x2b99, 0x82c3, 0xf00, 0x3df3, 0x4b55, 0x3a7e, 0x0, 0x1);
        gbc.writeMem(0x2b99, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x82c3, gbc.sp());
        EXPECT(0x2b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0352
        gbc.setState(0xec4b, 0x5b74, 0x7b80, 0x88ab, 0x4da1, 0x3c38, 0x1, 0x1);
        gbc.writeMem(0xec4b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5b74, gbc.sp());
        EXPECT(0xec4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4b));
        EXPECT(0xb9, gbc.readMem(0xec4c));
        // CB B9 0354
        gbc.setState(0xedb3, 0xda7d, 0x85e0, 0x84cc, 0xd7ab, 0xf198, 0x1, 0x0);
        gbc.writeMem(0xedb3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xda7d, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb3));
        EXPECT(0xb9, gbc.readMem(0xedb4));
        // CB B9 0355
        gbc.setState(0xd2ca, 0x17f1, 0x58b0, 0x1f71, 0x47dd, 0x82b6, 0x0, 0x0);
        gbc.writeMem(0xd2ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x17f1, gbc.sp());
        EXPECT(0xd2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ca));
        EXPECT(0xb9, gbc.readMem(0xd2cb));
        // CB B9 0356
        gbc.setState(0x5f39, 0xe946, 0x3fe0, 0x8828, 0x7833, 0xfbf6, 0x1, 0x1);
        gbc.writeMem(0x5f39, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe946, gbc.sp());
        EXPECT(0x5f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0357
        gbc.setState(0x41d5, 0x5a32, 0x58e0, 0xbbae, 0x9c85, 0x7200, 0x0, 0x0);
        gbc.writeMem(0x41d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0358
        gbc.setState(0x1b1a, 0x4711, 0x4270, 0x7c57, 0x6627, 0xc24b, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4711, gbc.sp());
        EXPECT(0x1b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0359
        gbc.setState(0xc3cf, 0x8724, 0xc5c0, 0x27, 0x43c6, 0x481e, 0x0, 0x1);
        gbc.writeMem(0xc3cf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8724, gbc.sp());
        EXPECT(0xc3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cf));
        EXPECT(0xb9, gbc.readMem(0xc3d0));
        // CB B9 035A
        gbc.setState(0x3e03, 0xbbc7, 0x2840, 0xc473, 0x6d3b, 0x59d3, 0x1, 0x0);
        gbc.writeMem(0x3e03, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbbc7, gbc.sp());
        EXPECT(0x3e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 035B
        gbc.setState(0x979b, 0xd0fe, 0x610, 0x167c, 0x6237, 0x750a, 0x0, 0x1);
        gbc.writeMem(0x979b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0x979d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979b));
        EXPECT(0xb9, gbc.readMem(0x979c));
        // CB B9 035C
        gbc.setState(0xafd5, 0x3d05, 0xce90, 0x260e, 0x9da4, 0x30bd, 0x1, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3d05, gbc.sp());
        EXPECT(0xafd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd5));
        EXPECT(0xb9, gbc.readMem(0xafd6));
        // CB B9 035E
        gbc.setState(0xa2c8, 0xe888, 0x8080, 0x57e0, 0xdc09, 0xfb83, 0x0, 0x0);
        gbc.writeMem(0xa2c8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe888, gbc.sp());
        EXPECT(0xa2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c8));
        EXPECT(0xb9, gbc.readMem(0xa2c9));
        // CB B9 035F
        gbc.setState(0x748a, 0x6487, 0xfeb0, 0xd980, 0x13f9, 0xf4f9, 0x0, 0x0);
        gbc.writeMem(0x748a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6487, gbc.sp());
        EXPECT(0x748c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0360
        gbc.setState(0x704e, 0xccab, 0x9a20, 0xc553, 0x784b, 0x96ae, 0x1, 0x0);
        gbc.writeMem(0x704e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xccab, gbc.sp());
        EXPECT(0x7050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0361
        gbc.setState(0x5daa, 0xf9bc, 0x1ba0, 0x3a1e, 0x4e73, 0x5d45, 0x1, 0x1);
        gbc.writeMem(0x5daa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf9bc, gbc.sp());
        EXPECT(0x5dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0362
        gbc.setState(0xde1b, 0x44e, 0x2320, 0x1167, 0x8761, 0xc0c2, 0x0, 0x0);
        gbc.writeMem(0xde1b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x44e, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1b));
        EXPECT(0xb9, gbc.readMem(0xde1c));
        // CB B9 0363
        gbc.setState(0x8e4b, 0x135b, 0xd0d0, 0x7244, 0xc3fa, 0xae91, 0x1, 0x0);
        gbc.writeMem(0x8e4b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0x8e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4b));
        EXPECT(0xb9, gbc.readMem(0x8e4c));
        // CB B9 0364
        gbc.setState(0x51d9, 0x5cbb, 0xc2b0, 0xdb5f, 0xccfe, 0x9966, 0x1, 0x0);
        gbc.writeMem(0x51d9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5cbb, gbc.sp());
        EXPECT(0x51db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0365
        gbc.setState(0x8286, 0x92d0, 0x26c0, 0x3025, 0x5d34, 0xfad3, 0x0, 0x1);
        gbc.writeMem(0x8286, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x8288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8286));
        EXPECT(0xb9, gbc.readMem(0x8287));
        // CB B9 0366
        gbc.setState(0x5bd0, 0x1380, 0x2d20, 0xfb80, 0x411f, 0x3f28, 0x0, 0x0);
        gbc.writeMem(0x5bd0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1380, gbc.sp());
        EXPECT(0x5bd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0367
        gbc.setState(0x37ca, 0x1599, 0x9c40, 0xb1e1, 0xc226, 0xb99, 0x1, 0x1);
        gbc.writeMem(0x37ca, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1599, gbc.sp());
        EXPECT(0x37cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0368
        gbc.setState(0x33f4, 0x83f1, 0x86b0, 0xa088, 0x1910, 0x4139, 0x1, 0x1);
        gbc.writeMem(0x33f4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x83f1, gbc.sp());
        EXPECT(0x33f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0369
        gbc.setState(0x6070, 0xf94b, 0x2d00, 0x4863, 0xdc8a, 0xd37c, 0x0, 0x0);
        gbc.writeMem(0x6070, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 036A
        gbc.setState(0xd4ba, 0x6840, 0xdce0, 0x3e3c, 0x1e34, 0x627f, 0x0, 0x1);
        gbc.writeMem(0xd4ba, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0xd4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ba));
        EXPECT(0xb9, gbc.readMem(0xd4bb));
        // CB B9 036B
        gbc.setState(0x592c, 0x48fa, 0xfd60, 0xdb98, 0x29e, 0x376c, 0x1, 0x1);
        gbc.writeMem(0x592c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x48fa, gbc.sp());
        EXPECT(0x592e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 036D
        gbc.setState(0xa305, 0xfa9a, 0xb20, 0x2110, 0xb87c, 0x7999, 0x1, 0x1);
        gbc.writeMem(0xa305, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfa9a, gbc.sp());
        EXPECT(0xa307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa305));
        EXPECT(0xb9, gbc.readMem(0xa306));
        // CB B9 036E
        gbc.setState(0x466b, 0x62f1, 0x3460, 0x58cc, 0x56bf, 0xd0fb, 0x0, 0x0);
        gbc.writeMem(0x466b, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x62f1, gbc.sp());
        EXPECT(0x466d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 036F
        gbc.setState(0x4877, 0x22fd, 0x5360, 0xe9ad, 0x45e0, 0x606a, 0x1, 0x1);
        gbc.writeMem(0x4877, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x22fd, gbc.sp());
        EXPECT(0x4879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0370
        gbc.setState(0x7236, 0xa9d5, 0x5830, 0xf436, 0x3806, 0x3f84, 0x1, 0x1);
        gbc.writeMem(0x7236, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa9d5, gbc.sp());
        EXPECT(0x7238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0372
        gbc.setState(0xbab6, 0x1deb, 0x5710, 0x774, 0x611c, 0x7862, 0x1, 0x1);
        gbc.writeMem(0xbab6, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x1deb, gbc.sp());
        EXPECT(0xbab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab6));
        EXPECT(0xb9, gbc.readMem(0xbab7));
        // CB B9 0373
        gbc.setState(0x74cb, 0x6f59, 0x7300, 0xb934, 0xc193, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x74cb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6f59, gbc.sp());
        EXPECT(0x74cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0374
        gbc.setState(0x3d6a, 0x8a48, 0x40e0, 0xd880, 0xa1fb, 0x7cfb, 0x1, 0x1);
        gbc.writeMem(0x3d6a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8a48, gbc.sp());
        EXPECT(0x3d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0375
        gbc.setState(0x6906, 0x1349, 0x310, 0x25f1, 0x91e3, 0x3fc5, 0x1, 0x0);
        gbc.writeMem(0x6906, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1349, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0376
        gbc.setState(0x7dcd, 0x6b7e, 0x4460, 0xd784, 0x71ef, 0xd6ab, 0x0, 0x0);
        gbc.writeMem(0x7dcd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6b7e, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0377
        gbc.setState(0x82cf, 0xaf74, 0xb0, 0x313b, 0xb2cd, 0x9e7b, 0x0, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xaf74, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cf));
        EXPECT(0xb9, gbc.readMem(0x82d0));
        // CB B9 0378
        gbc.setState(0xb269, 0x7fea, 0xf0c0, 0xfb7d, 0x963e, 0xdc9e, 0x1, 0x1);
        gbc.writeMem(0xb269, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7fea, gbc.sp());
        EXPECT(0xb26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb269));
        EXPECT(0xb9, gbc.readMem(0xb26a));
        // CB B9 0379
        gbc.setState(0xd4e, 0xe052, 0x87d0, 0xbfbe, 0xa5b5, 0x8aae, 0x0, 0x1);
        gbc.writeMem(0xd4e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe052, gbc.sp());
        EXPECT(0xd50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 037A
        gbc.setState(0x4192, 0xeea2, 0x9500, 0x867a, 0xe022, 0x1dc5, 0x1, 0x0);
        gbc.writeMem(0x4192, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeea2, gbc.sp());
        EXPECT(0x4194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 037B
        gbc.setState(0xd046, 0x1e98, 0xd500, 0x9a26, 0x1325, 0x953b, 0x1, 0x0);
        gbc.writeMem(0xd046, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1e98, gbc.sp());
        EXPECT(0xd048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd046));
        EXPECT(0xb9, gbc.readMem(0xd047));
        // CB B9 037C
        gbc.setState(0x466f, 0x9dc7, 0x6920, 0x22ad, 0x7a8c, 0xc410, 0x1, 0x0);
        gbc.writeMem(0x466f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9dc7, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 037D
        gbc.setState(0xad7f, 0x30b9, 0xb30, 0xc772, 0x81d4, 0x5a49, 0x0, 0x1);
        gbc.writeMem(0xad7f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x30b9, gbc.sp());
        EXPECT(0xad81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7f));
        EXPECT(0xb9, gbc.readMem(0xad80));
        // CB B9 037E
        gbc.setState(0xa2fb, 0x88e9, 0xc350, 0x1439, 0x20ee, 0x9cc2, 0x1, 0x0);
        gbc.writeMem(0xa2fb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xa2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fb));
        EXPECT(0xb9, gbc.readMem(0xa2fc));
        // CB B9 037F
        gbc.setState(0x10c, 0x7fc6, 0x43c0, 0xd5e, 0x6dd6, 0x45f0, 0x1, 0x1);
        gbc.writeMem(0x10c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7fc6, gbc.sp());
        EXPECT(0x10e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0380
        gbc.setState(0x99c0, 0xb7c1, 0x3810, 0x494d, 0x25f1, 0xa007, 0x1, 0x0);
        gbc.writeMem(0x99c0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb7c1, gbc.sp());
        EXPECT(0x99c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c0));
        EXPECT(0xb9, gbc.readMem(0x99c1));
        // CB B9 0381
        gbc.setState(0xcadc, 0x148d, 0x66a0, 0x72ab, 0xcffb, 0x7e2d, 0x1, 0x1);
        gbc.writeMem(0xcadc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x148d, gbc.sp());
        EXPECT(0xcade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcadc));
        EXPECT(0xb9, gbc.readMem(0xcadd));
        // CB B9 0382
        gbc.setState(0xcb50, 0x652, 0xdb20, 0x1ab, 0x750c, 0xd99, 0x1, 0x1);
        gbc.writeMem(0xcb50, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x652, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb50));
        EXPECT(0xb9, gbc.readMem(0xcb51));
        // CB B9 0383
        gbc.setState(0xbf3, 0x7fbf, 0x4730, 0xa0a3, 0xe596, 0x19f3, 0x0, 0x0);
        gbc.writeMem(0xbf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0xbf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0384
        gbc.setState(0x2ef9, 0xab41, 0xb680, 0x663b, 0x1f13, 0xc7f2, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xab41, gbc.sp());
        EXPECT(0x2efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0385
        gbc.setState(0x74b2, 0x4bc4, 0xced0, 0x5e73, 0x3cbe, 0x578b, 0x1, 0x1);
        gbc.writeMem(0x74b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4bc4, gbc.sp());
        EXPECT(0x74b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0386
        gbc.setState(0x7c00, 0x2194, 0xa4b0, 0x568f, 0x71d7, 0x2979, 0x0, 0x1);
        gbc.writeMem(0x7c00, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2194, gbc.sp());
        EXPECT(0x7c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0387
        gbc.setState(0x9762, 0x33c8, 0x6180, 0x90bb, 0x8db1, 0x508a, 0x0, 0x1);
        gbc.writeMem(0x9762, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x33c8, gbc.sp());
        EXPECT(0x9764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9762));
        EXPECT(0xb9, gbc.readMem(0x9763));
        // CB B9 0388
        gbc.setState(0x8984, 0xb63d, 0xd740, 0xd4db, 0x9921, 0x8246, 0x1, 0x1);
        gbc.writeMem(0x8984, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb63d, gbc.sp());
        EXPECT(0x8986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8984));
        EXPECT(0xb9, gbc.readMem(0x8985));
        // CB B9 0389
        gbc.setState(0x9dd, 0x6f71, 0x99d0, 0xc60b, 0x8fb7, 0x1f7f, 0x0, 0x0);
        gbc.writeMem(0x9dd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f71, gbc.sp());
        EXPECT(0x9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 038A
        gbc.setState(0x8b44, 0x36e, 0xed30, 0x73aa, 0x83a4, 0x8c6d, 0x0, 0x1);
        gbc.writeMem(0x8b44, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0x8b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b44));
        EXPECT(0xb9, gbc.readMem(0x8b45));
        // CB B9 038B
        gbc.setState(0xb7aa, 0xd112, 0xef60, 0x2d39, 0x6101, 0xc610, 0x1, 0x0);
        gbc.writeMem(0xb7aa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd112, gbc.sp());
        EXPECT(0xb7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7aa));
        EXPECT(0xb9, gbc.readMem(0xb7ab));
        // CB B9 038C
        gbc.setState(0x97bb, 0x7faa, 0xc700, 0x8bd6, 0x993b, 0xc979, 0x1, 0x0);
        gbc.writeMem(0x97bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7faa, gbc.sp());
        EXPECT(0x97bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97bb));
        EXPECT(0xb9, gbc.readMem(0x97bc));
        // CB B9 038D
        gbc.setState(0x7595, 0xa089, 0xd6c0, 0x3033, 0x8650, 0xb8f9, 0x1, 0x0);
        gbc.writeMem(0x7595, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa089, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 038E
        gbc.setState(0x3cd5, 0x6334, 0x87a0, 0xe86a, 0x9237, 0x58ec, 0x0, 0x1);
        gbc.writeMem(0x3cd5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6334, gbc.sp());
        EXPECT(0x3cd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 038F
        gbc.setState(0x7daa, 0x5d19, 0xa90, 0xd2e8, 0x2875, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x7daa, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5d19, gbc.sp());
        EXPECT(0x7dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0390
        gbc.setState(0xe851, 0xc46d, 0x28f0, 0x39c3, 0x7772, 0x4eac, 0x1, 0x1);
        gbc.writeMem(0xe851, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc46d, gbc.sp());
        EXPECT(0xe853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe851));
        EXPECT(0xb9, gbc.readMem(0xe852));
        // CB B9 0391
        gbc.setState(0x9820, 0xc819, 0x5f70, 0x6ec7, 0xea57, 0x1e2f, 0x1, 0x1);
        gbc.writeMem(0x9820, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0x9822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9820));
        EXPECT(0xb9, gbc.readMem(0x9821));
        // CB B9 0392
        gbc.setState(0xe315, 0x6620, 0x63f0, 0x1b9d, 0xdc3c, 0x4f0d, 0x1, 0x0);
        gbc.writeMem(0xe315, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0xe317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe315));
        EXPECT(0xb9, gbc.readMem(0xe316));
        // CB B9 0393
        gbc.setState(0x4f05, 0x9276, 0x8540, 0xa041, 0x1bde, 0x1d32, 0x0, 0x0);
        gbc.writeMem(0x4f05, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0x4f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0394
        gbc.setState(0x259c, 0xa95c, 0x7da0, 0x167, 0x5954, 0xa943, 0x0, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa95c, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0395
        gbc.setState(0x5cf3, 0x980e, 0x580, 0xce63, 0x470e, 0xf994, 0x0, 0x1);
        gbc.writeMem(0x5cf3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x980e, gbc.sp());
        EXPECT(0x5cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 0396
        gbc.setState(0x5507, 0x1513, 0xbf30, 0x740c, 0x4b4, 0x110, 0x1, 0x0);
        gbc.writeMem(0x5507, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0x5509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 0397
        gbc.setState(0xa6ed, 0xdf35, 0x4f60, 0x31ab, 0x4661, 0xef1e, 0x0, 0x0);
        gbc.writeMem(0xa6ed, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdf35, gbc.sp());
        EXPECT(0xa6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ed));
        EXPECT(0xb9, gbc.readMem(0xa6ee));
        // CB B9 0398
        gbc.setState(0xc70f, 0xcf17, 0x6ab0, 0xfa1a, 0xcc80, 0x3794, 0x0, 0x0);
        gbc.writeMem(0xc70f, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0xc711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc70f));
        EXPECT(0xb9, gbc.readMem(0xc710));
        // CB B9 0399
        gbc.setState(0xec71, 0xa22e, 0x6830, 0xabd9, 0xdea1, 0x3fe9, 0x1, 0x1);
        gbc.writeMem(0xec71, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0xec73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec71));
        EXPECT(0xb9, gbc.readMem(0xec72));
        // CB B9 039A
        gbc.setState(0x8f56, 0x1cc1, 0xc8c0, 0x8bc8, 0x7e32, 0x9361, 0x1, 0x1);
        gbc.writeMem(0x8f56, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1cc1, gbc.sp());
        EXPECT(0x8f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f56));
        EXPECT(0xb9, gbc.readMem(0x8f57));
        // CB B9 039B
        gbc.setState(0xa984, 0x7313, 0x4da0, 0x2d01, 0x24f8, 0x6b21, 0x1, 0x1);
        gbc.writeMem(0xa984, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0xa986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa984));
        EXPECT(0xb9, gbc.readMem(0xa985));
        // CB B9 039C
        gbc.setState(0xe609, 0x691c, 0x5a20, 0x6838, 0x6044, 0xfcdc, 0x0, 0x1);
        gbc.writeMem(0xe609, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x691c, gbc.sp());
        EXPECT(0xe60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe609));
        EXPECT(0xb9, gbc.readMem(0xe60a));
        // CB B9 039D
        gbc.setState(0xacd2, 0x9dc5, 0x3c0, 0x59f6, 0x73d7, 0xc8a9, 0x0, 0x0);
        gbc.writeMem(0xacd2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9dc5, gbc.sp());
        EXPECT(0xacd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd2));
        EXPECT(0xb9, gbc.readMem(0xacd3));
        // CB B9 039E
        gbc.setState(0xa384, 0x565c, 0xf2b0, 0xe734, 0x3156, 0x46a4, 0x1, 0x1);
        gbc.writeMem(0xa384, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa384));
        EXPECT(0xb9, gbc.readMem(0xa385));
        // CB B9 039F
        gbc.setState(0x86ac, 0x322, 0xfb40, 0x5f3, 0x9900, 0x1fa3, 0x1, 0x1);
        gbc.writeMem(0x86ac, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x322, gbc.sp());
        EXPECT(0x86ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ac));
        EXPECT(0xb9, gbc.readMem(0x86ad));
        // CB B9 03A0
        gbc.setState(0x42b2, 0x5c8d, 0x2540, 0x1273, 0x273f, 0x8711, 0x0, 0x0);
        gbc.writeMem(0x42b2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5c8d, gbc.sp());
        EXPECT(0x42b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03A1
        gbc.setState(0xd044, 0x830a, 0x6640, 0xbe81, 0x677c, 0x71f3, 0x0, 0x1);
        gbc.writeMem(0xd044, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x830a, gbc.sp());
        EXPECT(0xd046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd044));
        EXPECT(0xb9, gbc.readMem(0xd045));
        // CB B9 03A2
        gbc.setState(0x4ce3, 0xbaec, 0x9c50, 0x482b, 0xa1eb, 0xd60d, 0x1, 0x0);
        gbc.writeMem(0x4ce3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbaec, gbc.sp());
        EXPECT(0x4ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03A3
        gbc.setState(0x6aa3, 0x3d15, 0x9e00, 0x5cf8, 0x9092, 0x3afc, 0x0, 0x1);
        gbc.writeMem(0x6aa3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3d15, gbc.sp());
        EXPECT(0x6aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03A4
        gbc.setState(0xd831, 0x2fec, 0x4b70, 0x7d1e, 0xe43e, 0x41f, 0x1, 0x0);
        gbc.writeMem(0xd831, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2fec, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd831));
        EXPECT(0xb9, gbc.readMem(0xd832));
        // CB B9 03A5
        gbc.setState(0x9d91, 0x38e3, 0x6140, 0x3dfb, 0x74e1, 0xf37c, 0x0, 0x0);
        gbc.writeMem(0x9d91, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x38e3, gbc.sp());
        EXPECT(0x9d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d91));
        EXPECT(0xb9, gbc.readMem(0x9d92));
        // CB B9 03A6
        gbc.setState(0xc7e0, 0x38d, 0xead0, 0x977f, 0xc2cc, 0x3bcf, 0x1, 0x0);
        gbc.writeMem(0xc7e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x38d, gbc.sp());
        EXPECT(0xc7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e0));
        EXPECT(0xb9, gbc.readMem(0xc7e1));
        // CB B9 03A7
        gbc.setState(0xb26e, 0xdaf7, 0x9090, 0x290b, 0x1158, 0x7f0d, 0x0, 0x1);
        gbc.writeMem(0xb26e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xdaf7, gbc.sp());
        EXPECT(0xb270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb26e));
        EXPECT(0xb9, gbc.readMem(0xb26f));
        // CB B9 03A8
        gbc.setState(0x28b4, 0xc9a5, 0xee20, 0xe53b, 0x1530, 0x3927, 0x1, 0x1);
        gbc.writeMem(0x28b4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc9a5, gbc.sp());
        EXPECT(0x28b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03A9
        gbc.setState(0x82cd, 0x55ac, 0xfe10, 0x9b43, 0x5a8c, 0x3b58, 0x0, 0x0);
        gbc.writeMem(0x82cd, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x55ac, gbc.sp());
        EXPECT(0x82cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cd));
        EXPECT(0xb9, gbc.readMem(0x82ce));
        // CB B9 03AA
        gbc.setState(0x4a87, 0x8d2d, 0xbb80, 0xe734, 0x422b, 0x8ebb, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8d2d, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03AB
        gbc.setState(0x3dd4, 0x5a65, 0x5160, 0x3c3, 0xe0a5, 0xb518, 0x1, 0x0);
        gbc.writeMem(0x3dd4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x3dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03AC
        gbc.setState(0xbbf2, 0x19c2, 0x1e90, 0x2305, 0x739f, 0x8052, 0x0, 0x0);
        gbc.writeMem(0xbbf2, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0xbbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf2));
        EXPECT(0xb9, gbc.readMem(0xbbf3));
        // CB B9 03AE
        gbc.setState(0x33bb, 0xf9bf, 0xe420, 0xf26a, 0xaec0, 0x2337, 0x1, 0x0);
        gbc.writeMem(0x33bb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03AF
        gbc.setState(0xa905, 0xd6e4, 0xead0, 0x693c, 0x239e, 0x9de, 0x1, 0x1);
        gbc.writeMem(0xa905, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd6e4, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa905));
        EXPECT(0xb9, gbc.readMem(0xa906));
        // CB B9 03B0
        gbc.setState(0x44d5, 0xb2cd, 0xc280, 0xb36b, 0x4e17, 0x6584, 0x1, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb2cd, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03B1
        gbc.setState(0x6f97, 0x9dea, 0x1450, 0xd77d, 0xbc33, 0x39fd, 0x1, 0x0);
        gbc.writeMem(0x6f97, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x6f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03B2
        gbc.setState(0x7556, 0x19a1, 0x3d40, 0xd9e1, 0x73be, 0xe44a, 0x1, 0x0);
        gbc.writeMem(0x7556, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x19a1, gbc.sp());
        EXPECT(0x7558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03B3
        gbc.setState(0xdf1e, 0x7730, 0x8fa0, 0xbb2b, 0x5a67, 0x67a0, 0x1, 0x0);
        gbc.writeMem(0xdf1e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7730, gbc.sp());
        EXPECT(0xdf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1e));
        EXPECT(0xb9, gbc.readMem(0xdf1f));
        // CB B9 03B4
        gbc.setState(0x1be8, 0x62ff, 0x1520, 0x6d4a, 0x34e3, 0x4316, 0x0, 0x0);
        gbc.writeMem(0x1be8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x62ff, gbc.sp());
        EXPECT(0x1bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03B5
        gbc.setState(0x460, 0xf1f0, 0x2850, 0x33b3, 0x3db0, 0x438a, 0x0, 0x1);
        gbc.writeMem(0x460, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf1f0, gbc.sp());
        EXPECT(0x462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03B6
        gbc.setState(0x27a4, 0x600c, 0x4a50, 0x885a, 0x8ccc, 0x731, 0x1, 0x0);
        gbc.writeMem(0x27a4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x600c, gbc.sp());
        EXPECT(0x27a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03B7
        gbc.setState(0x228e, 0xd97, 0x5cb0, 0xba96, 0x96f9, 0xf7b6, 0x0, 0x1);
        gbc.writeMem(0x228e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd97, gbc.sp());
        EXPECT(0x2290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03B8
        gbc.setState(0x8390, 0xc828, 0xeab0, 0x3447, 0xc83a, 0x9d02, 0x0, 0x0);
        gbc.writeMem(0x8390, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0x8392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8390));
        EXPECT(0xb9, gbc.readMem(0x8391));
        // CB B9 03B9
        gbc.setState(0x2b9c, 0x475c, 0x42e0, 0x7508, 0xb3e4, 0xdddf, 0x1, 0x1);
        gbc.writeMem(0x2b9c, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x475c, gbc.sp());
        EXPECT(0x2b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03BA
        gbc.setState(0x3005, 0xa131, 0x2210, 0x5372, 0xf192, 0x34e, 0x0, 0x0);
        gbc.writeMem(0x3005, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa131, gbc.sp());
        EXPECT(0x3007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03BB
        gbc.setState(0x63e8, 0xc70a, 0x5630, 0xfe51, 0xde79, 0xb4d3, 0x1, 0x1);
        gbc.writeMem(0x63e8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc70a, gbc.sp());
        EXPECT(0x63ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03BC
        gbc.setState(0xd19e, 0x11a5, 0x2e20, 0x54f6, 0x860f, 0xdf81, 0x1, 0x0);
        gbc.writeMem(0xd19e, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x11a5, gbc.sp());
        EXPECT(0xd1a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19e));
        EXPECT(0xb9, gbc.readMem(0xd19f));
        // CB B9 03BD
        gbc.setState(0x2ccc, 0x7e8f, 0xf850, 0x4261, 0xc5a, 0xdad4, 0x1, 0x1);
        gbc.writeMem(0x2ccc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7e8f, gbc.sp());
        EXPECT(0x2cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03BE
        gbc.setState(0x9c94, 0x50d1, 0xeae0, 0xf23c, 0x2868, 0xe35b, 0x1, 0x0);
        gbc.writeMem(0x9c94, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x50d1, gbc.sp());
        EXPECT(0x9c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c94));
        EXPECT(0xb9, gbc.readMem(0x9c95));
        // CB B9 03BF
        gbc.setState(0x27f0, 0xb61, 0xff80, 0x7898, 0xa7ca, 0xe68e, 0x1, 0x0);
        gbc.writeMem(0x27f0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb61, gbc.sp());
        EXPECT(0x27f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03C0
        gbc.setState(0x7617, 0xbe9f, 0x3d40, 0x64c9, 0xc51d, 0x8b30, 0x1, 0x1);
        gbc.writeMem(0x7617, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbe9f, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03C1
        gbc.setState(0xee3, 0x7c42, 0xec50, 0x2abe, 0x3a97, 0x1bc8, 0x1, 0x0);
        gbc.writeMem(0xee3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7c42, gbc.sp());
        EXPECT(0xee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03C3
        gbc.setState(0x9601, 0x2b32, 0xac50, 0x297d, 0x876c, 0x96ec, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b32, gbc.sp());
        EXPECT(0x9603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9601));
        EXPECT(0xb9, gbc.readMem(0x9602));
        // CB B9 03C4
        gbc.setState(0x4fbc, 0x4a95, 0x3530, 0xa4e2, 0x6d2c, 0x8cd3, 0x0, 0x0);
        gbc.writeMem(0x4fbc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4a95, gbc.sp());
        EXPECT(0x4fbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03C6
        gbc.setState(0x6849, 0x4b24, 0xe1d0, 0xf13f, 0xb1de, 0x86d2, 0x0, 0x0);
        gbc.writeMem(0x6849, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4b24, gbc.sp());
        EXPECT(0x684b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03C7
        gbc.setState(0xe2e0, 0x3643, 0x3c80, 0x4002, 0x3b8b, 0x389d, 0x0, 0x1);
        gbc.writeMem(0xe2e0, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3643, gbc.sp());
        EXPECT(0xe2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2e0));
        EXPECT(0xb9, gbc.readMem(0xe2e1));
        // CB B9 03C8
        gbc.setState(0xdbfb, 0x25f8, 0x4b20, 0x976d, 0x6d47, 0x1168, 0x0, 0x1);
        gbc.writeMem(0xdbfb, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x25f8, gbc.sp());
        EXPECT(0xdbfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfb));
        EXPECT(0xb9, gbc.readMem(0xdbfc));
        // CB B9 03C9
        gbc.setState(0x3aa3, 0x4416, 0xbbc0, 0xeedf, 0xcd39, 0xdde, 0x0, 0x0);
        gbc.writeMem(0x3aa3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4416, gbc.sp());
        EXPECT(0x3aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03CA
        gbc.setState(0xc718, 0xd132, 0x5e0, 0x786a, 0x3a2a, 0xfabd, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd132, gbc.sp());
        EXPECT(0xc71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc718));
        EXPECT(0xb9, gbc.readMem(0xc719));
        // CB B9 03CB
        gbc.setState(0x29e3, 0x83c1, 0xd1c0, 0xaeec, 0xdeb8, 0x8a45, 0x0, 0x1);
        gbc.writeMem(0x29e3, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x83c1, gbc.sp());
        EXPECT(0x29e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03CC
        gbc.setState(0x1b74, 0x8a78, 0x41d0, 0x9a75, 0x9012, 0xb75a, 0x0, 0x0);
        gbc.writeMem(0x1b74, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x1b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03CD
        gbc.setState(0xea18, 0xdb1d, 0xadd0, 0x40a6, 0x7cce, 0x31e1, 0x1, 0x1);
        gbc.writeMem(0xea18, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdb1d, gbc.sp());
        EXPECT(0xea1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea18));
        EXPECT(0xb9, gbc.readMem(0xea19));
        // CB B9 03CE
        gbc.setState(0xabb1, 0xc0f7, 0x1280, 0xd923, 0xd260, 0xe97e, 0x0, 0x1);
        gbc.writeMem(0xabb1, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc0f7, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb1));
        EXPECT(0xb9, gbc.readMem(0xabb2));
        // CB B9 03CF
        gbc.setState(0xe7bc, 0x3be0, 0x51b0, 0xe609, 0xe21f, 0xd033, 0x0, 0x1);
        gbc.writeMem(0xe7bc, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0xe7be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bc));
        EXPECT(0xb9, gbc.readMem(0xe7bd));
        // CB B9 03D0
        gbc.setState(0xba95, 0xc425, 0x87f0, 0xfb13, 0xa955, 0x740a, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0xba97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba95));
        EXPECT(0xb9, gbc.readMem(0xba96));
        // CB B9 03D1
        gbc.setState(0xb434, 0x21ad, 0x30b0, 0x870c, 0x184e, 0x274e, 0x1, 0x0);
        gbc.writeMem(0xb434, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0xb436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb434));
        EXPECT(0xb9, gbc.readMem(0xb435));
        // CB B9 03D2
        gbc.setState(0x41a7, 0xee7c, 0x1f70, 0x58e1, 0x3ea9, 0x790b, 0x1, 0x0);
        gbc.writeMem(0x41a7, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xee7c, gbc.sp());
        EXPECT(0x41a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03D4
        gbc.setState(0x5e9a, 0xd454, 0x60e0, 0x42ec, 0x4d47, 0x12b4, 0x0, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03D5
        gbc.setState(0x29da, 0x7c6e, 0xce40, 0x83c6, 0xcc18, 0xf67e, 0x0, 0x1);
        gbc.writeMem(0x29da, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x29dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03D7
        gbc.setState(0x7941, 0x61cc, 0x2d50, 0x8caa, 0x7291, 0xdac3, 0x0, 0x0);
        gbc.writeMem(0x7941, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61cc, gbc.sp());
        EXPECT(0x7943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03D8
        gbc.setState(0x6b25, 0xf06f, 0x2a90, 0x1dd7, 0x4c4c, 0xfa15, 0x0, 0x1);
        gbc.writeMem(0x6b25, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf06f, gbc.sp());
        EXPECT(0x6b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03D9
        gbc.setState(0x23c8, 0x7148, 0xc5b0, 0x4283, 0x73cd, 0x8e47, 0x1, 0x1);
        gbc.writeMem(0x23c8, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7148, gbc.sp());
        EXPECT(0x23ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03DA
        gbc.setState(0x965a, 0x583f, 0x8730, 0x4919, 0x3766, 0x121a, 0x1, 0x0);
        gbc.writeMem(0x965a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x583f, gbc.sp());
        EXPECT(0x965c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965a));
        EXPECT(0xb9, gbc.readMem(0x965b));
        // CB B9 03DB
        gbc.setState(0x3493, 0xdba4, 0xbb00, 0x2bcb, 0x6b22, 0x1b28, 0x1, 0x0);
        gbc.writeMem(0x3493, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdba4, gbc.sp());
        EXPECT(0x3495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03DC
        gbc.setState(0xe13d, 0x277d, 0x53e0, 0x1e75, 0xc97e, 0x2265, 0x0, 0x1);
        gbc.writeMem(0xe13d, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x277d, gbc.sp());
        EXPECT(0xe13f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13d));
        EXPECT(0xb9, gbc.readMem(0xe13e));
        // CB B9 03DD
        gbc.setState(0x4ecf, 0x713d, 0x98f0, 0x42e2, 0x3977, 0x7e0, 0x1, 0x0);
        gbc.writeMem(0x4ecf, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x713d, gbc.sp());
        EXPECT(0x4ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03DE
        gbc.setState(0x41c4, 0x7905, 0x7d20, 0x9972, 0x77b0, 0xb573, 0x1, 0x0);
        gbc.writeMem(0x41c4, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7905, gbc.sp());
        EXPECT(0x41c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B9 03E0
        gbc.setState(0xc622, 0x35f3, 0x5130, 0x78fe, 0xb182, 0x72ca, 0x1, 0x1);
        gbc.writeMem(0xc622, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x35f3, gbc.sp());
        EXPECT(0xc624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc622));
        EXPECT(0xb9, gbc.readMem(0xc623));
        // CB B9 03E1
        gbc.setState(0x2a46, 0x6e25, 0x9690, 0xf24c, 0x5598, 0x32df, 0x0, 0x1);
        gbc.writeMem(0x2a46, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6e25, gbc.sp());
        EXPECT(0x2a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03E2
        gbc.setState(0xa722, 0x7fd4, 0xb340, 0x31bc, 0x893c, 0x61fa, 0x1, 0x1);
        gbc.writeMem(0xa722, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7fd4, gbc.sp());
        EXPECT(0xa724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa722));
        EXPECT(0xb9, gbc.readMem(0xa723));
        // CB B9 03E3
        gbc.setState(0xd40a, 0x8988, 0x74c0, 0x8ab4, 0xbb44, 0x6b0a, 0x1, 0x0);
        gbc.writeMem(0xd40a, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0xd40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40a));
        EXPECT(0xb9, gbc.readMem(0xd40b));
        // CB B9 03E4
        gbc.setState(0x7eb9, 0x6141, 0x8490, 0xc664, 0x9608, 0x2f1b, 0x0, 0x1);
        gbc.writeMem(0x7eb9, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6141, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B9 03E5
        gbc.setState(0xb796, 0xa519, 0x2f00, 0x4922, 0xd3f3, 0xda39, 0x0, 0x1);
        gbc.writeMem(0xb796, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa519, gbc.sp());
        EXPECT(0xb798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb796));
        EXPECT(0xb9, gbc.readMem(0xb797));
        // CB B9 03E7
        gbc.setState(0xc437, 0xd150, 0x41b0, 0xd67d, 0xac20, 0xd845, 0x0, 0x0);
        gbc.writeMem(0xc437, { 0xcb, 0xb9 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd150, gbc.sp());
        EXPECT(0xc439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc437));
        EXPECT(0xb9, gbc.readMem(0xc438));
    }
