    TEST(gbcemu, opcode_38) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 38 0000
        gbc.setState(0x6cb3, 0x98eb, 0xea0, 0x391, 0xb4af, 0x508e, 0x0, 0x0);
        gbc.writeMem(0x6cb3, { 0x38, 0xe4 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x98eb, gbc.sp());
        EXPECT(0x6cb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0002
        gbc.setState(0x75cb, 0xe91, 0x5ed0, 0x669b, 0x924d, 0x9bc2, 0x1, 0x0);
        gbc.writeMem(0x75cb, { 0x38, 0x23 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe91, gbc.sp());
        EXPECT(0x75f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0003
        gbc.setState(0xc753, 0x3356, 0xec60, 0xd05d, 0x26a9, 0x9c7f, 0x1, 0x0);
        gbc.writeMem(0xc753, { 0x38, 0x43 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3356, gbc.sp());
        EXPECT(0xc755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc753));
        EXPECT(0x43, gbc.readMem(0xc754));
        // 38 0004
        gbc.setState(0x1ec4, 0xff72, 0xb170, 0x2d86, 0x6ae8, 0xc2bc, 0x1, 0x1);
        gbc.writeMem(0x1ec4, { 0x38, 0x94 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xff72, gbc.sp());
        EXPECT(0x1e5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0005
        gbc.setState(0xe061, 0x1809, 0x520, 0x2b36, 0xfe74, 0x4c8b, 0x1, 0x0);
        gbc.writeMem(0xe061, { 0x38, 0x82 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0xe063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe061));
        EXPECT(0x82, gbc.readMem(0xe062));
        // 38 0006
        gbc.setState(0x35a0, 0x7dba, 0xfb90, 0x230c, 0x5bec, 0x83d0, 0x0, 0x0);
        gbc.writeMem(0x35a0, { 0x38, 0x15 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0x35b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0007
        gbc.setState(0xd7cf, 0x7744, 0x66e0, 0x8da8, 0xd034, 0x6d38, 0x1, 0x1);
        gbc.writeMem(0xd7cf, { 0x38, 0x8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7744, gbc.sp());
        EXPECT(0xd7d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd7cf));
        EXPECT(0x8, gbc.readMem(0xd7d0));
        // 38 0008
        gbc.setState(0x3ea2, 0x1e3e, 0x6fc0, 0x2ab9, 0x387e, 0x5a0b, 0x1, 0x1);
        gbc.writeMem(0x3ea2, { 0x38, 0x7b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1e3e, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0009
        gbc.setState(0x284d, 0xf735, 0xdfd0, 0x49e, 0x66a8, 0xa548, 0x0, 0x1);
        gbc.writeMem(0x284d, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf735, gbc.sp());
        EXPECT(0x27f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 000A
        gbc.setState(0xa5a3, 0x7ec5, 0x2c50, 0x5380, 0xf2ea, 0x15b0, 0x1, 0x0);
        gbc.writeMem(0xa5a3, { 0x38, 0x59 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7ec5, gbc.sp());
        EXPECT(0xa5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa5a3));
        EXPECT(0x59, gbc.readMem(0xa5a4));
        // 38 000B
        gbc.setState(0xd22, 0x2351, 0x83a0, 0x3191, 0x6dc6, 0xe414, 0x0, 0x0);
        gbc.writeMem(0xd22, { 0x38, 0x1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 000C
        gbc.setState(0x3a11, 0x52fe, 0x9dd0, 0x41c6, 0x22b2, 0x3088, 0x0, 0x1);
        gbc.writeMem(0x3a11, { 0x38, 0x15 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0x3a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 000E
        gbc.setState(0x9c50, 0xec08, 0xad90, 0x604c, 0x6dd6, 0xebde, 0x0, 0x1);
        gbc.writeMem(0x9c50, { 0x38, 0x51 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xec08, gbc.sp());
        EXPECT(0x9ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9c50));
        EXPECT(0x51, gbc.readMem(0x9c51));
        // 38 000F
        gbc.setState(0x1f2b, 0x9abb, 0xb850, 0xc694, 0x53a5, 0xfb7d, 0x1, 0x1);
        gbc.writeMem(0x1f2b, { 0x38, 0xd7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9abb, gbc.sp());
        EXPECT(0x1f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0010
        gbc.setState(0x6e90, 0xfd7e, 0x1e90, 0x39ee, 0x38aa, 0x51f4, 0x1, 0x0);
        gbc.writeMem(0x6e90, { 0x38, 0x36 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xfd7e, gbc.sp());
        EXPECT(0x6ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0011
        gbc.setState(0x1018, 0x4a81, 0x9f80, 0x7738, 0x3a50, 0x435e, 0x1, 0x1);
        gbc.writeMem(0x1018, { 0x38, 0x4 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4a81, gbc.sp());
        EXPECT(0x101a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0012
        gbc.setState(0xcfa4, 0x5d19, 0xa370, 0xd8bc, 0xfbe9, 0xc6b1, 0x0, 0x0);
        gbc.writeMem(0xcfa4, { 0x38, 0xda });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5d19, gbc.sp());
        EXPECT(0xcf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcfa4));
        EXPECT(0xda, gbc.readMem(0xcfa5));
        // 38 0013
        gbc.setState(0xa263, 0x4791, 0x9660, 0x1380, 0x6aa4, 0xa515, 0x0, 0x1);
        gbc.writeMem(0xa263, { 0x38, 0x75 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4791, gbc.sp());
        EXPECT(0xa265, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa263));
        EXPECT(0x75, gbc.readMem(0xa264));
        // 38 0014
        gbc.setState(0x88df, 0x8887, 0x9540, 0x16f7, 0xa89f, 0xb757, 0x1, 0x1);
        gbc.writeMem(0x88df, { 0x38, 0xad });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8887, gbc.sp());
        EXPECT(0x88e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x88df));
        EXPECT(0xad, gbc.readMem(0x88e0));
        // 38 0015
        gbc.setState(0x52a7, 0x51bc, 0xd780, 0x903f, 0x18c1, 0xf6a9, 0x1, 0x0);
        gbc.writeMem(0x52a7, { 0x38, 0x47 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x51bc, gbc.sp());
        EXPECT(0x52a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0016
        gbc.setState(0x502e, 0xdc1e, 0xc810, 0x772d, 0xc6d4, 0x1e18, 0x1, 0x0);
        gbc.writeMem(0x502e, { 0x38, 0xc3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdc1e, gbc.sp());
        EXPECT(0x4ff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0017
        gbc.setState(0x3479, 0xb77c, 0xfb70, 0x10d1, 0xb4b8, 0xa9e8, 0x0, 0x1);
        gbc.writeMem(0x3479, { 0x38, 0x32 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb77c, gbc.sp());
        EXPECT(0x34ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0019
        gbc.setState(0x831b, 0x32b1, 0xf720, 0x6802, 0xda76, 0xd652, 0x0, 0x0);
        gbc.writeMem(0x831b, { 0x38, 0xe0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x32b1, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x831b));
        EXPECT(0xe0, gbc.readMem(0x831c));
        // 38 001A
        gbc.setState(0x8c66, 0x1be3, 0xeba0, 0x7079, 0x39cd, 0x9c57, 0x0, 0x1);
        gbc.writeMem(0x8c66, { 0x38, 0x5f });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1be3, gbc.sp());
        EXPECT(0x8c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8c66));
        EXPECT(0x5f, gbc.readMem(0x8c67));
        // 38 001B
        gbc.setState(0xac0d, 0x6b8d, 0x92c0, 0xa6a4, 0x65d3, 0xae9f, 0x1, 0x0);
        gbc.writeMem(0xac0d, { 0x38, 0x30 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6b8d, gbc.sp());
        EXPECT(0xac0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xac0d));
        EXPECT(0x30, gbc.readMem(0xac0e));
        // 38 001C
        gbc.setState(0xbc08, 0xc54c, 0x5890, 0xb560, 0x3cd6, 0xcaf4, 0x0, 0x0);
        gbc.writeMem(0xbc08, { 0x38, 0xac });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc54c, gbc.sp());
        EXPECT(0xbbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbc08));
        EXPECT(0xac, gbc.readMem(0xbc09));
        // 38 001D
        gbc.setState(0xb51e, 0xbcea, 0xaa10, 0xf023, 0x80ad, 0xbd3f, 0x1, 0x1);
        gbc.writeMem(0xb51e, { 0x38, 0x4c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbcea, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb51e));
        EXPECT(0x4c, gbc.readMem(0xb51f));
        // 38 001E
        gbc.setState(0x7550, 0xdc08, 0x38c0, 0x8ca, 0x729b, 0x990, 0x1, 0x1);
        gbc.writeMem(0x7550, { 0x38, 0x7e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdc08, gbc.sp());
        EXPECT(0x7552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 001F
        gbc.setState(0x1762, 0x396f, 0x5550, 0x7183, 0x72f5, 0x4189, 0x1, 0x0);
        gbc.writeMem(0x1762, { 0x38, 0x5 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x396f, gbc.sp());
        EXPECT(0x1769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0020
        gbc.setState(0x9221, 0xe5d0, 0xdfd0, 0x1c74, 0xbafc, 0x3dc7, 0x1, 0x1);
        gbc.writeMem(0x9221, { 0x38, 0xee });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe5d0, gbc.sp());
        EXPECT(0x9211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9221));
        EXPECT(0xee, gbc.readMem(0x9222));
        // 38 0022
        gbc.setState(0x6fb8, 0x305f, 0x4880, 0x64f, 0x30e6, 0xd9a, 0x1, 0x1);
        gbc.writeMem(0x6fb8, { 0x38, 0x1b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x305f, gbc.sp());
        EXPECT(0x6fba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0023
        gbc.setState(0x64fb, 0x604a, 0x2850, 0x16cc, 0xaaa7, 0x5d5, 0x0, 0x1);
        gbc.writeMem(0x64fb, { 0x38, 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x604a, gbc.sp());
        EXPECT(0x6529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0024
        gbc.setState(0x8339, 0x45ad, 0x1f20, 0x2bff, 0x2f21, 0xe8af, 0x0, 0x0);
        gbc.writeMem(0x8339, { 0x38, 0xaf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x45ad, gbc.sp());
        EXPECT(0x833b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8339));
        EXPECT(0xaf, gbc.readMem(0x833a));
        // 38 0025
        gbc.setState(0x563f, 0x62d5, 0xbff0, 0x2f02, 0xb77, 0x3244, 0x1, 0x1);
        gbc.writeMem(0x563f, { 0x38, 0xde });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x62d5, gbc.sp());
        EXPECT(0x561f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0026
        gbc.setState(0x9afe, 0x8ebb, 0x5040, 0x122e, 0xb7ec, 0x76f, 0x1, 0x0);
        gbc.writeMem(0x9afe, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8ebb, gbc.sp());
        EXPECT(0x9b00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9afe));
        EXPECT(0x53, gbc.readMem(0x9aff));
        // 38 0027
        gbc.setState(0x210f, 0xf5ed, 0xb720, 0xc393, 0x2254, 0x533f, 0x0, 0x0);
        gbc.writeMem(0x210f, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0x2111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0028
        gbc.setState(0x18cc, 0xcdce, 0x2fc0, 0xa428, 0x58d, 0x7986, 0x1, 0x0);
        gbc.writeMem(0x18cc, { 0x38, 0x81 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcdce, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0029
        gbc.setState(0xd33, 0x7416, 0x3eb0, 0x841c, 0x8964, 0xcefd, 0x0, 0x0);
        gbc.writeMem(0xd33, { 0x38, 0x79 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7416, gbc.sp());
        EXPECT(0xdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 002A
        gbc.setState(0xa0ae, 0x4b82, 0xeb20, 0x676c, 0x4591, 0x9911, 0x1, 0x1);
        gbc.writeMem(0xa0ae, { 0x38, 0xb1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4b82, gbc.sp());
        EXPECT(0xa0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa0ae));
        EXPECT(0xb1, gbc.readMem(0xa0af));
        // 38 002B
        gbc.setState(0x7331, 0xdd3, 0xefd0, 0x879c, 0x1ba0, 0x5dd2, 0x1, 0x0);
        gbc.writeMem(0x7331, { 0x38, 0x34 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdd3, gbc.sp());
        EXPECT(0x7367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 002D
        gbc.setState(0x3198, 0xf73, 0xf830, 0x54e1, 0xb2b9, 0x5a5e, 0x0, 0x1);
        gbc.writeMem(0x3198, { 0x38, 0xa8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf73, gbc.sp());
        EXPECT(0x3142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 002E
        gbc.setState(0x914f, 0x302b, 0xde70, 0xa0c4, 0xe65c, 0xb722, 0x0, 0x0);
        gbc.writeMem(0x914f, { 0x38, 0x46 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x302b, gbc.sp());
        EXPECT(0x9197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x914f));
        EXPECT(0x46, gbc.readMem(0x9150));
        // 38 002F
        gbc.setState(0x10ab, 0x83ff, 0x9d70, 0xfecd, 0x6cdb, 0xc179, 0x1, 0x1);
        gbc.writeMem(0x10ab, { 0x38, 0x21 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x83ff, gbc.sp());
        EXPECT(0x10ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0030
        gbc.setState(0x7ca5, 0x88c5, 0xf0d0, 0xd4a5, 0x1aec, 0xaea9, 0x1, 0x1);
        gbc.writeMem(0x7ca5, { 0x38, 0xba });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x88c5, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0031
        gbc.setState(0x6314, 0x41fe, 0x6f60, 0xcae5, 0x7f3a, 0xefc7, 0x1, 0x1);
        gbc.writeMem(0x6314, { 0x38, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0x6316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0033
        gbc.setState(0xdaaf, 0xcb39, 0x5180, 0x4703, 0x2a07, 0x4f8a, 0x0, 0x1);
        gbc.writeMem(0xdaaf, { 0x38, 0xf0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcb39, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdaaf));
        EXPECT(0xf0, gbc.readMem(0xdab0));
        // 38 0034
        gbc.setState(0x7348, 0xb86c, 0xf0a0, 0x2892, 0x4fd8, 0xf426, 0x0, 0x0);
        gbc.writeMem(0x7348, { 0x38, 0xff });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb86c, gbc.sp());
        EXPECT(0x734a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0035
        gbc.setState(0x408d, 0x47cd, 0xc080, 0x8805, 0x313a, 0x475c, 0x0, 0x1);
        gbc.writeMem(0x408d, { 0x38, 0xd6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x47cd, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0036
        gbc.setState(0x543, 0x3aab, 0xd7e0, 0xc5f0, 0xae25, 0x9e9f, 0x1, 0x0);
        gbc.writeMem(0x543, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3aab, gbc.sp());
        EXPECT(0x545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0037
        gbc.setState(0x2173, 0xedd4, 0x6780, 0xd3a4, 0xf04c, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x2173, { 0x38, 0x2b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0x2175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0038
        gbc.setState(0x2da8, 0x829c, 0x30d0, 0x1c16, 0xa72b, 0x5311, 0x1, 0x1);
        gbc.writeMem(0x2da8, { 0x38, 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x829c, gbc.sp());
        EXPECT(0x2dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0039
        gbc.setState(0x35d2, 0x4612, 0x32a0, 0x78b4, 0x372, 0xe041, 0x0, 0x0);
        gbc.writeMem(0x35d2, { 0x38, 0xd4 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4612, gbc.sp());
        EXPECT(0x35d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 003A
        gbc.setState(0xed6a, 0xc6d5, 0x41b0, 0x4bc2, 0xb13d, 0x32a4, 0x0, 0x1);
        gbc.writeMem(0xed6a, { 0x38, 0xcd });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc6d5, gbc.sp());
        EXPECT(0xed39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xed6a));
        EXPECT(0xcd, gbc.readMem(0xed6b));
        // 38 003B
        gbc.setState(0xdf51, 0xc69b, 0x6a40, 0xa1e8, 0xc03b, 0x4e9, 0x1, 0x0);
        gbc.writeMem(0xdf51, { 0x38, 0xba });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc69b, gbc.sp());
        EXPECT(0xdf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdf51));
        EXPECT(0xba, gbc.readMem(0xdf52));
        // 38 003D
        gbc.setState(0xc064, 0xf317, 0xcbf0, 0x318d, 0xf83b, 0x87c6, 0x0, 0x1);
        gbc.writeMem(0xc064, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf317, gbc.sp());
        EXPECT(0xc000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc064));
        EXPECT(0x9a, gbc.readMem(0xc065));
        // 38 003E
        gbc.setState(0x2976, 0x1a70, 0xb500, 0xb027, 0xb82e, 0x791b, 0x1, 0x0);
        gbc.writeMem(0x2976, { 0x38, 0x11 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1a70, gbc.sp());
        EXPECT(0x2978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 003F
        gbc.setState(0xe26f, 0x6804, 0x9170, 0x81ac, 0x9110, 0xc053, 0x1, 0x1);
        gbc.writeMem(0xe26f, { 0x38, 0x62 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6804, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe26f));
        EXPECT(0x62, gbc.readMem(0xe270));
        // 38 0040
        gbc.setState(0xb471, 0x6e9c, 0x2940, 0x1a02, 0x6e15, 0x45b1, 0x1, 0x0);
        gbc.writeMem(0xb471, { 0x38, 0xc });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6e9c, gbc.sp());
        EXPECT(0xb473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb471));
        EXPECT(0xc, gbc.readMem(0xb472));
        // 38 0041
        gbc.setState(0x2e9f, 0xda03, 0x40f0, 0xcf1b, 0x8180, 0xbad4, 0x0, 0x1);
        gbc.writeMem(0x2e9f, { 0x38, 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda03, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0042
        gbc.setState(0x9f40, 0xf36, 0x9e70, 0x86e, 0x884a, 0xcbff, 0x1, 0x1);
        gbc.writeMem(0x9f40, { 0x38, 0xed });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf36, gbc.sp());
        EXPECT(0x9f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9f40));
        EXPECT(0xed, gbc.readMem(0x9f41));
        // 38 0043
        gbc.setState(0xbc5e, 0xe3ec, 0x9720, 0x3e00, 0xe446, 0x57d0, 0x0, 0x0);
        gbc.writeMem(0xbc5e, { 0x38, 0xf4 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe3ec, gbc.sp());
        EXPECT(0xbc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbc5e));
        EXPECT(0xf4, gbc.readMem(0xbc5f));
        // 38 0044
        gbc.setState(0x1767, 0xc75e, 0x7310, 0x1178, 0x9ef1, 0xc268, 0x0, 0x1);
        gbc.writeMem(0x1767, { 0x38, 0xf5 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc75e, gbc.sp());
        EXPECT(0x175e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0045
        gbc.setState(0xcc12, 0xe47c, 0x9e60, 0x246c, 0xb7ab, 0xd9ae, 0x1, 0x0);
        gbc.writeMem(0xcc12, { 0x38, 0xf0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe47c, gbc.sp());
        EXPECT(0xcc14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcc12));
        EXPECT(0xf0, gbc.readMem(0xcc13));
        // 38 0046
        gbc.setState(0x33c3, 0x7656, 0x3b20, 0xfaca, 0x602b, 0x6d0f, 0x1, 0x1);
        gbc.writeMem(0x33c3, { 0x38, 0x59 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7656, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0047
        gbc.setState(0xdc80, 0xc97, 0x6210, 0x3ed7, 0x14fc, 0xf4e5, 0x1, 0x0);
        gbc.writeMem(0xdc80, { 0x38, 0xbd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0xdc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdc80));
        EXPECT(0xbd, gbc.readMem(0xdc81));
        // 38 0048
        gbc.setState(0xad2b, 0x5666, 0x2f90, 0xc55a, 0x849b, 0xb537, 0x1, 0x1);
        gbc.writeMem(0xad2b, { 0x38, 0x9f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5666, gbc.sp());
        EXPECT(0xaccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xad2b));
        EXPECT(0x9f, gbc.readMem(0xad2c));
        // 38 0049
        gbc.setState(0x9f06, 0xa2c6, 0x6c00, 0x5cf5, 0x60c7, 0x8e37, 0x0, 0x1);
        gbc.writeMem(0x9f06, { 0x38, 0x21 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa2c6, gbc.sp());
        EXPECT(0x9f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9f06));
        EXPECT(0x21, gbc.readMem(0x9f07));
        // 38 004A
        gbc.setState(0xbfb0, 0xe6e6, 0xaab0, 0x7653, 0x7b6c, 0x1fac, 0x0, 0x0);
        gbc.writeMem(0xbfb0, { 0x38, 0x83 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe6e6, gbc.sp());
        EXPECT(0xbf35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbfb0));
        EXPECT(0x83, gbc.readMem(0xbfb1));
        // 38 004B
        gbc.setState(0x96b8, 0xea97, 0x4e70, 0x82e9, 0x69cd, 0x8dea, 0x1, 0x0);
        gbc.writeMem(0x96b8, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xea97, gbc.sp());
        EXPECT(0x9709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x96b8));
        EXPECT(0x4f, gbc.readMem(0x96b9));
        // 38 004C
        gbc.setState(0x1df0, 0x6e64, 0x5a70, 0x5047, 0x7a84, 0x1c70, 0x0, 0x0);
        gbc.writeMem(0x1df0, { 0x38, 0xb7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e64, gbc.sp());
        EXPECT(0x1da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 004D
        gbc.setState(0x8d07, 0xe843, 0xc390, 0xbdee, 0x9485, 0xad6b, 0x0, 0x0);
        gbc.writeMem(0x8d07, { 0x38, 0x52 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe843, gbc.sp());
        EXPECT(0x8d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8d07));
        EXPECT(0x52, gbc.readMem(0x8d08));
        // 38 004E
        gbc.setState(0x9f5b, 0x4b7, 0xebb0, 0x15f9, 0x31d, 0x9b01, 0x0, 0x1);
        gbc.writeMem(0x9f5b, { 0x38, 0xf6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4b7, gbc.sp());
        EXPECT(0x9f53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9f5b));
        EXPECT(0xf6, gbc.readMem(0x9f5c));
        // 38 004F
        gbc.setState(0x21c6, 0x1eea, 0x6f40, 0xd144, 0x98eb, 0xe901, 0x1, 0x0);
        gbc.writeMem(0x21c6, { 0x38, 0x7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1eea, gbc.sp());
        EXPECT(0x21c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0051
        gbc.setState(0x274d, 0x323d, 0xddb0, 0x7162, 0xc17a, 0x1ebf, 0x1, 0x0);
        gbc.writeMem(0x274d, { 0x38, 0x90 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x323d, gbc.sp());
        EXPECT(0x26df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0052
        gbc.setState(0xb28, 0xfa5d, 0x9d0, 0x61d6, 0x43b3, 0xeced, 0x0, 0x0);
        gbc.writeMem(0xb28, { 0x38, 0x23 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfa5d, gbc.sp());
        EXPECT(0xb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0053
        gbc.setState(0x5e77, 0x1b39, 0x10, 0xe038, 0x4ae0, 0x3849, 0x0, 0x0);
        gbc.writeMem(0x5e77, { 0x38, 0x2d });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1b39, gbc.sp());
        EXPECT(0x5ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0055
        gbc.setState(0x9e74, 0x5aea, 0x17b0, 0x5f7b, 0x25a2, 0xf2db, 0x1, 0x1);
        gbc.writeMem(0x9e74, { 0x38, 0xee });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5aea, gbc.sp());
        EXPECT(0x9e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9e74));
        EXPECT(0xee, gbc.readMem(0x9e75));
        // 38 0056
        gbc.setState(0x3fa2, 0xf4d8, 0xbbf0, 0xba99, 0xd666, 0xc592, 0x0, 0x0);
        gbc.writeMem(0x3fa2, { 0x38, 0x32 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf4d8, gbc.sp());
        EXPECT(0x3fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0057
        gbc.setState(0x1397, 0x9f02, 0xf590, 0x341e, 0x252c, 0xb2ba, 0x1, 0x1);
        gbc.writeMem(0x1397, { 0x38, 0x8a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9f02, gbc.sp());
        EXPECT(0x1323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0058
        gbc.setState(0xa882, 0xe457, 0x2ab0, 0xdf59, 0x4522, 0x5f98, 0x1, 0x1);
        gbc.writeMem(0xa882, { 0x38, 0x21 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe457, gbc.sp());
        EXPECT(0xa8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa882));
        EXPECT(0x21, gbc.readMem(0xa883));
        // 38 0059
        gbc.setState(0x4453, 0x2453, 0x710, 0xb3a9, 0xc7bd, 0x8ce1, 0x1, 0x1);
        gbc.writeMem(0x4453, { 0x38, 0x3b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x4490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 005A
        gbc.setState(0x8922, 0x402e, 0xf030, 0x5c78, 0x1776, 0x95ad, 0x0, 0x1);
        gbc.writeMem(0x8922, { 0x38, 0xba });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x88de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8922));
        EXPECT(0xba, gbc.readMem(0x8923));
        // 38 005B
        gbc.setState(0x68eb, 0xb8aa, 0xbf60, 0xe8a9, 0xe1fc, 0x53ce, 0x0, 0x0);
        gbc.writeMem(0x68eb, { 0x38, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb8aa, gbc.sp());
        EXPECT(0x68ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 005C
        gbc.setState(0x8919, 0xd201, 0xd380, 0x8739, 0xfb89, 0xaf2f, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0x38, 0xe4 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x891b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8919));
        EXPECT(0xe4, gbc.readMem(0x891a));
        // 38 005D
        gbc.setState(0x7633, 0x6b3e, 0xf9a0, 0xff5f, 0xec74, 0x3feb, 0x0, 0x0);
        gbc.writeMem(0x7633, { 0x38, 0xb3 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 005E
        gbc.setState(0xd19b, 0xea8f, 0xeff0, 0x2229, 0x4185, 0x8aa6, 0x1, 0x1);
        gbc.writeMem(0xd19b, { 0x38, 0xbe });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xea8f, gbc.sp());
        EXPECT(0xd15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd19b));
        EXPECT(0xbe, gbc.readMem(0xd19c));
        // 38 005F
        gbc.setState(0xd720, 0x8155, 0x3480, 0x2116, 0xd65a, 0x9c45, 0x1, 0x1);
        gbc.writeMem(0xd720, { 0x38, 0x83 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0xd722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd720));
        EXPECT(0x83, gbc.readMem(0xd721));
        // 38 0060
        gbc.setState(0xde62, 0xdbeb, 0xc4c0, 0x46e8, 0xa576, 0x7be3, 0x0, 0x0);
        gbc.writeMem(0xde62, { 0x38, 0xd9 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdbeb, gbc.sp());
        EXPECT(0xde64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xde62));
        EXPECT(0xd9, gbc.readMem(0xde63));
        // 38 0063
        gbc.setState(0xbf89, 0xc8da, 0x61e0, 0x4f8c, 0x4c99, 0x48ce, 0x1, 0x1);
        gbc.writeMem(0xbf89, { 0x38, 0x32 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0xbf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbf89));
        EXPECT(0x32, gbc.readMem(0xbf8a));
        // 38 0064
        gbc.setState(0xda3, 0xe619, 0xa990, 0xe41a, 0x1cd9, 0xe27d, 0x0, 0x0);
        gbc.writeMem(0xda3, { 0x38, 0xd2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0xd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0065
        gbc.setState(0xa132, 0xe156, 0x46e0, 0x4795, 0x5ede, 0x3b7e, 0x1, 0x0);
        gbc.writeMem(0xa132, { 0x38, 0xa2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe156, gbc.sp());
        EXPECT(0xa134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa132));
        EXPECT(0xa2, gbc.readMem(0xa133));
        // 38 0067
        gbc.setState(0x9e2c, 0x2957, 0x7b10, 0xe9da, 0xbf8a, 0x13c5, 0x0, 0x1);
        gbc.writeMem(0x9e2c, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2957, gbc.sp());
        EXPECT(0x9db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9e2c));
        EXPECT(0x88, gbc.readMem(0x9e2d));
        // 38 0068
        gbc.setState(0xbb1, 0x3307, 0x9ac0, 0x5005, 0x902d, 0x76fd, 0x1, 0x1);
        gbc.writeMem(0xbb1, { 0x38, 0xfa });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3307, gbc.sp());
        EXPECT(0xbb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0069
        gbc.setState(0x629, 0xb47d, 0x7b30, 0x65e9, 0x4e4a, 0xa97e, 0x0, 0x0);
        gbc.writeMem(0x629, { 0x38, 0xc6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb47d, gbc.sp());
        EXPECT(0x5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 006A
        gbc.setState(0x43f9, 0xea87, 0xcb70, 0xd32, 0x59ca, 0xeb38, 0x0, 0x1);
        gbc.writeMem(0x43f9, { 0x38, 0x32 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xea87, gbc.sp());
        EXPECT(0x442d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 006B
        gbc.setState(0x8665, 0x13ca, 0x6e60, 0xfcc5, 0xf08, 0x417e, 0x1, 0x0);
        gbc.writeMem(0x8665, { 0x38, 0x1f });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x13ca, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8665));
        EXPECT(0x1f, gbc.readMem(0x8666));
        // 38 006C
        gbc.setState(0x57ae, 0xff61, 0x1a0, 0x943a, 0x99cf, 0x3196, 0x1, 0x1);
        gbc.writeMem(0x57ae, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xff61, gbc.sp());
        EXPECT(0x57b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 006D
        gbc.setState(0x7676, 0x4c9, 0xcb20, 0x9517, 0xf86b, 0x47f3, 0x0, 0x0);
        gbc.writeMem(0x7676, { 0x38, 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4c9, gbc.sp());
        EXPECT(0x7678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 006E
        gbc.setState(0xedf3, 0xb5cd, 0x7f80, 0xf4c3, 0xb9d1, 0xd0db, 0x1, 0x1);
        gbc.writeMem(0xedf3, { 0x38, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb5cd, gbc.sp());
        EXPECT(0xedf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xedf3));
        EXPECT(0x2, gbc.readMem(0xedf4));
        // 38 006F
        gbc.setState(0x2fc5, 0xe5c3, 0x80f0, 0x5f9a, 0xe88, 0xb80c, 0x0, 0x1);
        gbc.writeMem(0x2fc5, { 0x38, 0xfd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0x2fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0070
        gbc.setState(0x5d40, 0x6b4d, 0x5940, 0xadee, 0xc18f, 0xd608, 0x1, 0x1);
        gbc.writeMem(0x5d40, { 0x38, 0xa3 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6b4d, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0071
        gbc.setState(0x2c2b, 0x8d3a, 0xd7b0, 0x3a15, 0xd82, 0x7831, 0x0, 0x0);
        gbc.writeMem(0x2c2b, { 0x38, 0x5a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8d3a, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0072
        gbc.setState(0xe6d7, 0xb984, 0x9890, 0x9617, 0xd233, 0xddf1, 0x1, 0x1);
        gbc.writeMem(0xe6d7, { 0x38, 0x86 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb984, gbc.sp());
        EXPECT(0xe65f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe6d7));
        EXPECT(0x86, gbc.readMem(0xe6d8));
        // 38 0073
        gbc.setState(0x2db, 0xc57e, 0x8c00, 0x87e8, 0xdd7d, 0xed4d, 0x1, 0x1);
        gbc.writeMem(0x2db, { 0x38, 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc57e, gbc.sp());
        EXPECT(0x2dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0074
        gbc.setState(0x1817, 0x5641, 0x3ba0, 0xdf42, 0x2f7, 0x1533, 0x1, 0x0);
        gbc.writeMem(0x1817, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5641, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0075
        gbc.setState(0xa638, 0x136b, 0x8d30, 0xefc2, 0x4ce7, 0xf4e9, 0x0, 0x0);
        gbc.writeMem(0xa638, { 0x38, 0x80 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0xa5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa638));
        EXPECT(0x80, gbc.readMem(0xa639));
        // 38 0076
        gbc.setState(0xb406, 0xd3c3, 0xcd10, 0x48ee, 0x7b31, 0x315b, 0x0, 0x1);
        gbc.writeMem(0xb406, { 0x38, 0xc3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd3c3, gbc.sp());
        EXPECT(0xb3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb406));
        EXPECT(0xc3, gbc.readMem(0xb407));
        // 38 0077
        gbc.setState(0x548e, 0xdd59, 0x51d0, 0xa55d, 0x3a45, 0x2f44, 0x0, 0x1);
        gbc.writeMem(0x548e, { 0x38, 0xa2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdd59, gbc.sp());
        EXPECT(0x5432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0078
        gbc.setState(0x6a9c, 0x492c, 0x36f0, 0xe236, 0xfa91, 0xe16c, 0x1, 0x1);
        gbc.writeMem(0x6a9c, { 0x38, 0xd });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x492c, gbc.sp());
        EXPECT(0x6aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0079
        gbc.setState(0x92e1, 0x6cb0, 0xbd80, 0x6984, 0x22e1, 0x2808, 0x1, 0x0);
        gbc.writeMem(0x92e1, { 0x38, 0xbb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6cb0, gbc.sp());
        EXPECT(0x92e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x92e1));
        EXPECT(0xbb, gbc.readMem(0x92e2));
        // 38 007A
        gbc.setState(0xb1f9, 0x1652, 0x76e0, 0xf8f6, 0x27d9, 0xaf9d, 0x0, 0x1);
        gbc.writeMem(0xb1f9, { 0x38, 0x49 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb1f9));
        EXPECT(0x49, gbc.readMem(0xb1fa));
        // 38 007B
        gbc.setState(0x6f19, 0x24ca, 0x5cf0, 0x7e55, 0xfcbb, 0xfc59, 0x1, 0x1);
        gbc.writeMem(0x6f19, { 0x38, 0x25 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x24ca, gbc.sp());
        EXPECT(0x6f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 007C
        gbc.setState(0xaa6a, 0xac4d, 0xa2c0, 0xe5dc, 0xe0c7, 0x5a1c, 0x0, 0x1);
        gbc.writeMem(0xaa6a, { 0x38, 0xac });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0xaa6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaa6a));
        EXPECT(0xac, gbc.readMem(0xaa6b));
        // 38 007D
        gbc.setState(0xcf78, 0xc488, 0x5a50, 0x977f, 0x9eb5, 0xed5b, 0x0, 0x0);
        gbc.writeMem(0xcf78, { 0x38, 0x9d });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc488, gbc.sp());
        EXPECT(0xcf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcf78));
        EXPECT(0x9d, gbc.readMem(0xcf79));
        // 38 007F
        gbc.setState(0x2497, 0xe806, 0x9ac0, 0x5bae, 0xdd65, 0x7782, 0x0, 0x1);
        gbc.writeMem(0x2497, { 0x38, 0x86 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe806, gbc.sp());
        EXPECT(0x2499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0080
        gbc.setState(0xbbad, 0xbe14, 0x55e0, 0x31af, 0x9d45, 0xebd8, 0x1, 0x1);
        gbc.writeMem(0xbbad, { 0x38, 0xce });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbe14, gbc.sp());
        EXPECT(0xbbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbbad));
        EXPECT(0xce, gbc.readMem(0xbbae));
        // 38 0081
        gbc.setState(0x6361, 0xc8f8, 0x4fc0, 0xf4aa, 0x7009, 0x1315, 0x1, 0x0);
        gbc.writeMem(0x6361, { 0x38, 0xcf });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc8f8, gbc.sp());
        EXPECT(0x6363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0082
        gbc.setState(0x748e, 0xa271, 0x8c50, 0xf9c9, 0xeeef, 0xeb5, 0x0, 0x0);
        gbc.writeMem(0x748e, { 0x38, 0xbd });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa271, gbc.sp());
        EXPECT(0x744d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0085
        gbc.setState(0xa0c8, 0xa4b4, 0x5de0, 0xfe63, 0x8562, 0x49cc, 0x1, 0x1);
        gbc.writeMem(0xa0c8, { 0x38, 0x7b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa4b4, gbc.sp());
        EXPECT(0xa0ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa0c8));
        EXPECT(0x7b, gbc.readMem(0xa0c9));
        // 38 0086
        gbc.setState(0xb843, 0x2787, 0x4b30, 0x5821, 0x276b, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0xb843, { 0x38, 0xc8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2787, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb843));
        EXPECT(0xc8, gbc.readMem(0xb844));
        // 38 0087
        gbc.setState(0x21a5, 0xaff8, 0x7570, 0xfc82, 0xa327, 0x6e36, 0x0, 0x0);
        gbc.writeMem(0x21a5, { 0x38, 0x6d });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xaff8, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0088
        gbc.setState(0xcd29, 0x5b0, 0x85c0, 0x2a53, 0xdc82, 0x33ec, 0x0, 0x0);
        gbc.writeMem(0xcd29, { 0x38, 0x81 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5b0, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd29));
        EXPECT(0x81, gbc.readMem(0xcd2a));
        // 38 008A
        gbc.setState(0x3f0, 0xfa0e, 0xbc40, 0x6824, 0x25d0, 0xdf4b, 0x0, 0x1);
        gbc.writeMem(0x3f0, { 0x38, 0xf6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xfa0e, gbc.sp());
        EXPECT(0x3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 008B
        gbc.setState(0x49eb, 0x7279, 0x4490, 0x287a, 0xabcd, 0xb068, 0x0, 0x0);
        gbc.writeMem(0x49eb, { 0x38, 0x3b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7279, gbc.sp());
        EXPECT(0x4a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 008C
        gbc.setState(0xca8d, 0x28cc, 0x3af0, 0xfb7a, 0xf2bf, 0xe9bf, 0x0, 0x0);
        gbc.writeMem(0xca8d, { 0x38, 0x72 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x28cc, gbc.sp());
        EXPECT(0xcb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xca8d));
        EXPECT(0x72, gbc.readMem(0xca8e));
        // 38 008D
        gbc.setState(0xa8ef, 0x90b4, 0xa230, 0xd532, 0x54d, 0x4fe0, 0x1, 0x0);
        gbc.writeMem(0xa8ef, { 0x38, 0xb2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x90b4, gbc.sp());
        EXPECT(0xa8a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa8ef));
        EXPECT(0xb2, gbc.readMem(0xa8f0));
        // 38 008E
        gbc.setState(0x6e23, 0x51a0, 0x63b0, 0xeacb, 0x5acd, 0x5b88, 0x1, 0x1);
        gbc.writeMem(0x6e23, { 0x38, 0x5f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x51a0, gbc.sp());
        EXPECT(0x6e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 008F
        gbc.setState(0xd8fa, 0x5695, 0x28c0, 0xebcf, 0xfa24, 0x8829, 0x1, 0x1);
        gbc.writeMem(0xd8fa, { 0x38, 0x14 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5695, gbc.sp());
        EXPECT(0xd8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd8fa));
        EXPECT(0x14, gbc.readMem(0xd8fb));
        // 38 0090
        gbc.setState(0x7882, 0x20fe, 0x2710, 0x307b, 0x88f0, 0x5e3c, 0x1, 0x0);
        gbc.writeMem(0x7882, { 0x38, 0x57 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x20fe, gbc.sp());
        EXPECT(0x78db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0091
        gbc.setState(0x73f3, 0xb738, 0x8f20, 0x967f, 0x515f, 0x89e9, 0x1, 0x1);
        gbc.writeMem(0x73f3, { 0x38, 0x1d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb738, gbc.sp());
        EXPECT(0x73f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0092
        gbc.setState(0x6ec6, 0x1452, 0xd8d0, 0xdab5, 0xb95d, 0xc31, 0x0, 0x0);
        gbc.writeMem(0x6ec6, { 0x38, 0x40 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1452, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0093
        gbc.setState(0xe97c, 0x742d, 0x4370, 0xb6d4, 0xa283, 0x2fbf, 0x0, 0x1);
        gbc.writeMem(0xe97c, { 0x38, 0x5a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x742d, gbc.sp());
        EXPECT(0xe9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe97c));
        EXPECT(0x5a, gbc.readMem(0xe97d));
        // 38 0094
        gbc.setState(0xc436, 0xd4c4, 0xbfd0, 0xe5d1, 0x7be5, 0x4684, 0x1, 0x1);
        gbc.writeMem(0xc436, { 0x38, 0xc3 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd4c4, gbc.sp());
        EXPECT(0xc3fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc436));
        EXPECT(0xc3, gbc.readMem(0xc437));
        // 38 0095
        gbc.setState(0x4a40, 0x38af, 0x5c80, 0xbaa4, 0x95a4, 0xcfda, 0x0, 0x0);
        gbc.writeMem(0x4a40, { 0x38, 0x3a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x38af, gbc.sp());
        EXPECT(0x4a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0096
        gbc.setState(0xe999, 0x42d0, 0x28c0, 0x2a65, 0xb658, 0x1969, 0x1, 0x0);
        gbc.writeMem(0xe999, { 0x38, 0x74 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x42d0, gbc.sp());
        EXPECT(0xe99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe999));
        EXPECT(0x74, gbc.readMem(0xe99a));
        // 38 0097
        gbc.setState(0x5356, 0x2ee9, 0xb400, 0xfd93, 0xf5ee, 0xd8bc, 0x0, 0x1);
        gbc.writeMem(0x5356, { 0x38, 0x66 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2ee9, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0098
        gbc.setState(0x831c, 0x7ad8, 0xb9a0, 0xfe21, 0x9e39, 0xab64, 0x0, 0x1);
        gbc.writeMem(0x831c, { 0x38, 0x21 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7ad8, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x831c));
        EXPECT(0x21, gbc.readMem(0x831d));
        // 38 0099
        gbc.setState(0xdebc, 0x2733, 0x7640, 0xba31, 0x1f25, 0x9c78, 0x1, 0x0);
        gbc.writeMem(0xdebc, { 0x38, 0x47 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2733, gbc.sp());
        EXPECT(0xdebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdebc));
        EXPECT(0x47, gbc.readMem(0xdebd));
        // 38 009A
        gbc.setState(0xae71, 0x941f, 0x4790, 0x575c, 0x7c27, 0x4f0b, 0x1, 0x1);
        gbc.writeMem(0xae71, { 0x38, 0x4 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x941f, gbc.sp());
        EXPECT(0xae77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xae71));
        EXPECT(0x4, gbc.readMem(0xae72));
        // 38 009B
        gbc.setState(0xcf17, 0xb140, 0x5730, 0x4a0c, 0x1c6f, 0x52f6, 0x0, 0x1);
        gbc.writeMem(0xcf17, { 0x38, 0xe8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb140, gbc.sp());
        EXPECT(0xcf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcf17));
        EXPECT(0xe8, gbc.readMem(0xcf18));
        // 38 009C
        gbc.setState(0x8561, 0x29c8, 0x6c00, 0xb494, 0xf68, 0x2dad, 0x1, 0x1);
        gbc.writeMem(0x8561, { 0x38, 0xe9 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x29c8, gbc.sp());
        EXPECT(0x8563, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8561));
        EXPECT(0xe9, gbc.readMem(0x8562));
        // 38 009D
        gbc.setState(0x9917, 0xc069, 0x7b30, 0xaee2, 0x2c42, 0xb1a3, 0x1, 0x0);
        gbc.writeMem(0x9917, { 0x38, 0xea });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc069, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9917));
        EXPECT(0xea, gbc.readMem(0x9918));
        // 38 009E
        gbc.setState(0x2ce2, 0xab2f, 0x7f80, 0xe446, 0x4032, 0x46cc, 0x0, 0x0);
        gbc.writeMem(0x2ce2, { 0x38, 0xb9 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xab2f, gbc.sp());
        EXPECT(0x2ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 009F
        gbc.setState(0x585, 0x9885, 0xf0b0, 0x57e9, 0x2f6b, 0xd729, 0x0, 0x0);
        gbc.writeMem(0x585, { 0x38, 0x3d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9885, gbc.sp());
        EXPECT(0x5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00A0
        gbc.setState(0xafbd, 0xd8c2, 0x86d0, 0x9e35, 0xb178, 0x6f2a, 0x1, 0x1);
        gbc.writeMem(0xafbd, { 0x38, 0x59 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd8c2, gbc.sp());
        EXPECT(0xb018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xafbd));
        EXPECT(0x59, gbc.readMem(0xafbe));
        // 38 00A1
        gbc.setState(0xe6d8, 0x4d2, 0x5b50, 0x2eaf, 0x1ea6, 0xb651, 0x1, 0x0);
        gbc.writeMem(0xe6d8, { 0x38, 0xca });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4d2, gbc.sp());
        EXPECT(0xe6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe6d8));
        EXPECT(0xca, gbc.readMem(0xe6d9));
        // 38 00A3
        gbc.setState(0xd613, 0xe594, 0xcd10, 0xfe65, 0xc833, 0x1145, 0x0, 0x0);
        gbc.writeMem(0xd613, { 0x38, 0x7e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe594, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd613));
        EXPECT(0x7e, gbc.readMem(0xd614));
        // 38 00A5
        gbc.setState(0xcbd9, 0xdf0, 0x4cd0, 0x9986, 0xb363, 0x5b28, 0x1, 0x0);
        gbc.writeMem(0xcbd9, { 0x38, 0xad });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdf0, gbc.sp());
        EXPECT(0xcb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcbd9));
        EXPECT(0xad, gbc.readMem(0xcbda));
        // 38 00A6
        gbc.setState(0x6e9a, 0x905b, 0x2fd0, 0xe267, 0xf3a1, 0x9686, 0x0, 0x0);
        gbc.writeMem(0x6e9a, { 0x38, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x905b, gbc.sp());
        EXPECT(0x6edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00A7
        gbc.setState(0x26e, 0x909c, 0x1ca0, 0x50fd, 0x6cf, 0x51ef, 0x1, 0x1);
        gbc.writeMem(0x26e, { 0x38, 0x78 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x909c, gbc.sp());
        EXPECT(0x270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00A8
        gbc.setState(0x1fb7, 0x7b9f, 0x4c30, 0xb56c, 0x7c37, 0x6073, 0x0, 0x0);
        gbc.writeMem(0x1fb7, { 0x38, 0xd3 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7b9f, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00A9
        gbc.setState(0xb9b8, 0x282e, 0xce50, 0x3dbf, 0xf7be, 0x99cb, 0x0, 0x1);
        gbc.writeMem(0xb9b8, { 0x38, 0x9 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0xb9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb9b8));
        EXPECT(0x9, gbc.readMem(0xb9b9));
        // 38 00AA
        gbc.setState(0x97e6, 0xad4b, 0x8b70, 0xa386, 0xc762, 0x246c, 0x0, 0x1);
        gbc.writeMem(0x97e6, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xad4b, gbc.sp());
        EXPECT(0x9850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x97e6));
        EXPECT(0x68, gbc.readMem(0x97e7));
        // 38 00AB
        gbc.setState(0x9d8a, 0xe823, 0xa390, 0x4424, 0x2bea, 0x899a, 0x0, 0x0);
        gbc.writeMem(0x9d8a, { 0x38, 0xfa });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe823, gbc.sp());
        EXPECT(0x9d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9d8a));
        EXPECT(0xfa, gbc.readMem(0x9d8b));
        // 38 00AC
        gbc.setState(0x9c9e, 0xd0c7, 0xad70, 0x8a8, 0x30c1, 0xe76c, 0x1, 0x1);
        gbc.writeMem(0x9c9e, { 0x38, 0xfe });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd0c7, gbc.sp());
        EXPECT(0x9c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9c9e));
        EXPECT(0xfe, gbc.readMem(0x9c9f));
        // 38 00AD
        gbc.setState(0xcc97, 0xfa16, 0xbbc0, 0x1387, 0x70bc, 0x7c33, 0x0, 0x0);
        gbc.writeMem(0xcc97, { 0x38, 0xe3 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfa16, gbc.sp());
        EXPECT(0xcc99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcc97));
        EXPECT(0xe3, gbc.readMem(0xcc98));
        // 38 00AE
        gbc.setState(0xda4e, 0x9862, 0x1090, 0x2f70, 0x5093, 0xf834, 0x0, 0x0);
        gbc.writeMem(0xda4e, { 0x38, 0x4a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9862, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xda4e));
        EXPECT(0x4a, gbc.readMem(0xda4f));
        // 38 00AF
        gbc.setState(0x7303, 0x1acb, 0x9570, 0x909e, 0x4c35, 0xefe, 0x0, 0x0);
        gbc.writeMem(0x7303, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0x7321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00B0
        gbc.setState(0x664e, 0x4ee0, 0xcc80, 0x77, 0x6daa, 0xe50, 0x0, 0x1);
        gbc.writeMem(0x664e, { 0x38, 0xb9 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4ee0, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00B1
        gbc.setState(0xbbdc, 0x5ba6, 0x7ce0, 0xd2d9, 0xb356, 0x438c, 0x0, 0x1);
        gbc.writeMem(0xbbdc, { 0x38, 0x6c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5ba6, gbc.sp());
        EXPECT(0xbbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbbdc));
        EXPECT(0x6c, gbc.readMem(0xbbdd));
        // 38 00B2
        gbc.setState(0x5b0e, 0xc7d0, 0x8480, 0xcc67, 0xf313, 0x3ead, 0x0, 0x0);
        gbc.writeMem(0x5b0e, { 0x38, 0x97 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc7d0, gbc.sp());
        EXPECT(0x5b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00B3
        gbc.setState(0x6902, 0x186, 0xaef0, 0xe18d, 0x2ac7, 0x4dd4, 0x1, 0x0);
        gbc.writeMem(0x6902, { 0x38, 0x58 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x186, gbc.sp());
        EXPECT(0x695c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00B4
        gbc.setState(0x6784, 0xe871, 0xc2c0, 0x6de5, 0xcc21, 0x606d, 0x0, 0x0);
        gbc.writeMem(0x6784, { 0x38, 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe871, gbc.sp());
        EXPECT(0x6786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00B6
        gbc.setState(0x6396, 0x2149, 0xb220, 0x5e5c, 0xca4e, 0x54dc, 0x1, 0x1);
        gbc.writeMem(0x6396, { 0x38, 0x6b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2149, gbc.sp());
        EXPECT(0x6398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00B7
        gbc.setState(0xba84, 0xf35c, 0x10b0, 0xb03a, 0xf632, 0x731e, 0x0, 0x0);
        gbc.writeMem(0xba84, { 0x38, 0x76 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf35c, gbc.sp());
        EXPECT(0xbafc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xba84));
        EXPECT(0x76, gbc.readMem(0xba85));
        // 38 00B8
        gbc.setState(0x3e07, 0x51f, 0x9c0, 0x2424, 0x8f84, 0x6120, 0x1, 0x1);
        gbc.writeMem(0x3e07, { 0x38, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x51f, gbc.sp());
        EXPECT(0x3e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00B9
        gbc.setState(0x1023, 0x5ad, 0x2950, 0x6137, 0x2bbd, 0x4b32, 0x1, 0x0);
        gbc.writeMem(0x1023, { 0x38, 0xf5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5ad, gbc.sp());
        EXPECT(0x101a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00BA
        gbc.setState(0xe9f6, 0xb5d2, 0x6d50, 0x1e69, 0x1102, 0xc805, 0x1, 0x1);
        gbc.writeMem(0xe9f6, { 0x38, 0x4e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb5d2, gbc.sp());
        EXPECT(0xea46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe9f6));
        EXPECT(0x4e, gbc.readMem(0xe9f7));
        // 38 00BB
        gbc.setState(0x904d, 0x9ffc, 0xdd0, 0xf0ea, 0x876e, 0xb720, 0x1, 0x1);
        gbc.writeMem(0x904d, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9ffc, gbc.sp());
        EXPECT(0x8fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x904d));
        EXPECT(0x96, gbc.readMem(0x904e));
        // 38 00BC
        gbc.setState(0x900a, 0x35cb, 0x1040, 0x2899, 0xa5dc, 0xc82b, 0x1, 0x1);
        gbc.writeMem(0x900a, { 0x38, 0xf4 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x35cb, gbc.sp());
        EXPECT(0x900c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x900a));
        EXPECT(0xf4, gbc.readMem(0x900b));
        // 38 00BD
        gbc.setState(0xa859, 0xafb9, 0x89a0, 0x4b16, 0x2d1c, 0xb882, 0x1, 0x1);
        gbc.writeMem(0xa859, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xafb9, gbc.sp());
        EXPECT(0xa85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa859));
        EXPECT(0x8e, gbc.readMem(0xa85a));
        // 38 00BE
        gbc.setState(0x4e9a, 0xa0d, 0x1260, 0x1350, 0xcac5, 0x5cd2, 0x1, 0x1);
        gbc.writeMem(0x4e9a, { 0x38, 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0x4e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00BF
        gbc.setState(0x63c7, 0x247f, 0x5250, 0x991f, 0xab28, 0x9949, 0x1, 0x1);
        gbc.writeMem(0x63c7, { 0x38, 0xc6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x247f, gbc.sp());
        EXPECT(0x638f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00C0
        gbc.setState(0xedd5, 0xbb92, 0x7330, 0x34fe, 0x9d61, 0x273d, 0x0, 0x0);
        gbc.writeMem(0xedd5, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbb92, gbc.sp());
        EXPECT(0xee10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xedd5));
        EXPECT(0x39, gbc.readMem(0xedd6));
        // 38 00C2
        gbc.setState(0x8b72, 0x789f, 0x75c0, 0xa5d, 0xcfb2, 0xc368, 0x1, 0x0);
        gbc.writeMem(0x8b72, { 0x38, 0xd3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x789f, gbc.sp());
        EXPECT(0x8b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8b72));
        EXPECT(0xd3, gbc.readMem(0x8b73));
        // 38 00C3
        gbc.setState(0x443f, 0xb532, 0x300, 0xb619, 0x60de, 0xaaf5, 0x1, 0x0);
        gbc.writeMem(0x443f, { 0x38, 0x50 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb532, gbc.sp());
        EXPECT(0x4441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00C4
        gbc.setState(0xd643, 0x1f43, 0x4d50, 0xc49f, 0x8884, 0x6946, 0x1, 0x1);
        gbc.writeMem(0xd643, { 0x38, 0x79 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1f43, gbc.sp());
        EXPECT(0xd6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd643));
        EXPECT(0x79, gbc.readMem(0xd644));
        // 38 00C5
        gbc.setState(0x3c7c, 0x51f1, 0xdf70, 0x9993, 0xc9b6, 0x2ee8, 0x0, 0x0);
        gbc.writeMem(0x3c7c, { 0x38, 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x51f1, gbc.sp());
        EXPECT(0x3cba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00C6
        gbc.setState(0x705b, 0x31dc, 0x70f0, 0xecad, 0x3141, 0x89c, 0x0, 0x1);
        gbc.writeMem(0x705b, { 0x38, 0xa0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x31dc, gbc.sp());
        EXPECT(0x6ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00C7
        gbc.setState(0x15ff, 0x35db, 0xfa00, 0x1e85, 0xdf5c, 0x4bdb, 0x1, 0x1);
        gbc.writeMem(0x15ff, { 0x38, 0x34 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x35db, gbc.sp());
        EXPECT(0x1601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00C8
        gbc.setState(0xea86, 0x8a50, 0xb280, 0xf218, 0x5027, 0x413c, 0x0, 0x1);
        gbc.writeMem(0xea86, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8a50, gbc.sp());
        EXPECT(0xea88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xea86));
        EXPECT(0x4f, gbc.readMem(0xea87));
        // 38 00C9
        gbc.setState(0xa574, 0x355a, 0x85e0, 0xe698, 0xb6c4, 0x4e9, 0x1, 0x0);
        gbc.writeMem(0xa574, { 0x38, 0x94 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x355a, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa574));
        EXPECT(0x94, gbc.readMem(0xa575));
        // 38 00CA
        gbc.setState(0xc4fb, 0xf16c, 0x1470, 0xab9f, 0xead6, 0xac08, 0x0, 0x1);
        gbc.writeMem(0xc4fb, { 0x38, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf16c, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc4fb));
        EXPECT(0x2, gbc.readMem(0xc4fc));
        // 38 00CB
        gbc.setState(0x9a4c, 0x2fe, 0x61d0, 0x49d4, 0x4cf9, 0xbb38, 0x0, 0x0);
        gbc.writeMem(0x9a4c, { 0x38, 0x5a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2fe, gbc.sp());
        EXPECT(0x9aa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9a4c));
        EXPECT(0x5a, gbc.readMem(0x9a4d));
        // 38 00CC
        gbc.setState(0x5ba3, 0xac32, 0x7560, 0x77f3, 0x8774, 0xa967, 0x1, 0x1);
        gbc.writeMem(0x5ba3, { 0x38, 0xb4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x5ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00CD
        gbc.setState(0xa3f6, 0xa4a7, 0x2990, 0x2de0, 0xd485, 0xa45, 0x0, 0x0);
        gbc.writeMem(0xa3f6, { 0x38, 0xea });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa4a7, gbc.sp());
        EXPECT(0xa3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa3f6));
        EXPECT(0xea, gbc.readMem(0xa3f7));
        // 38 00CE
        gbc.setState(0x2372, 0xe22f, 0x42d0, 0x7329, 0xe472, 0xba07, 0x1, 0x1);
        gbc.writeMem(0x2372, { 0x38, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe22f, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00CF
        gbc.setState(0x3463, 0xf0e9, 0xcd0, 0xf1d0, 0xe291, 0xeba8, 0x0, 0x1);
        gbc.writeMem(0x3463, { 0x38, 0x85 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0x33ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00D0
        gbc.setState(0x51cb, 0x2aa6, 0x930, 0xb71d, 0xe11, 0xb5b5, 0x0, 0x0);
        gbc.writeMem(0x51cb, { 0x38, 0x90 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0x515d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00D1
        gbc.setState(0x6be7, 0xd909, 0x8710, 0x1dac, 0x3e5b, 0xf076, 0x0, 0x0);
        gbc.writeMem(0x6be7, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd909, gbc.sp());
        EXPECT(0x6b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00D2
        gbc.setState(0x437f, 0x386c, 0xf690, 0x7d82, 0x9133, 0xa6c0, 0x0, 0x1);
        gbc.writeMem(0x437f, { 0x38, 0x9c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x386c, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00D3
        gbc.setState(0xeeb5, 0x5618, 0xfdd0, 0x1b27, 0x374e, 0x3bc5, 0x1, 0x1);
        gbc.writeMem(0xeeb5, { 0x38, 0x29 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5618, gbc.sp());
        EXPECT(0xeee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xeeb5));
        EXPECT(0x29, gbc.readMem(0xeeb6));
        // 38 00D4
        gbc.setState(0x7eac, 0x393, 0x8d80, 0x88a2, 0xf746, 0xd446, 0x1, 0x1);
        gbc.writeMem(0x7eac, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x393, gbc.sp());
        EXPECT(0x7eae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00D5
        gbc.setState(0x9546, 0x498d, 0xc450, 0xff8e, 0x3e5a, 0x7e7, 0x0, 0x0);
        gbc.writeMem(0x9546, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0x9581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9546));
        EXPECT(0x39, gbc.readMem(0x9547));
        // 38 00D6
        gbc.setState(0xb6fc, 0x91e9, 0x68a0, 0xd6d3, 0xd7c1, 0x531f, 0x0, 0x0);
        gbc.writeMem(0xb6fc, { 0x38, 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x91e9, gbc.sp());
        EXPECT(0xb6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb6fc));
        EXPECT(0x19, gbc.readMem(0xb6fd));
        // 38 00D7
        gbc.setState(0x4280, 0xdcfd, 0xb360, 0x36a3, 0x9f0b, 0x7120, 0x0, 0x1);
        gbc.writeMem(0x4280, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdcfd, gbc.sp());
        EXPECT(0x4282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00D8
        gbc.setState(0x2fc, 0xdffe, 0xdc70, 0xe7e8, 0x5bc1, 0x7fd, 0x0, 0x0);
        gbc.writeMem(0x2fc, { 0x38, 0xf8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdffe, gbc.sp());
        EXPECT(0x2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00D9
        gbc.setState(0xa66a, 0xc151, 0x6460, 0xcbe, 0x923e, 0x2742, 0x0, 0x1);
        gbc.writeMem(0xa66a, { 0x38, 0x1a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc151, gbc.sp());
        EXPECT(0xa66c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa66a));
        EXPECT(0x1a, gbc.readMem(0xa66b));
        // 38 00DA
        gbc.setState(0xe17e, 0x5d49, 0x59e0, 0x24d, 0x8dd, 0x3238, 0x0, 0x0);
        gbc.writeMem(0xe17e, { 0x38, 0x32 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5d49, gbc.sp());
        EXPECT(0xe180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe17e));
        EXPECT(0x32, gbc.readMem(0xe17f));
        // 38 00DB
        gbc.setState(0x7803, 0x7de5, 0x7320, 0x7864, 0xfbb6, 0xb343, 0x1, 0x1);
        gbc.writeMem(0x7803, { 0x38, 0x4e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7de5, gbc.sp());
        EXPECT(0x7805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00DC
        gbc.setState(0x2ac4, 0x50e0, 0x2dd0, 0x1ef7, 0x9140, 0x910b, 0x1, 0x0);
        gbc.writeMem(0x2ac4, { 0x38, 0x51 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x50e0, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00DD
        gbc.setState(0x6ec6, 0xc9e0, 0x45c0, 0x5718, 0x6349, 0xabfc, 0x0, 0x0);
        gbc.writeMem(0x6ec6, { 0x38, 0x40 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc9e0, gbc.sp());
        EXPECT(0x6ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00DE
        gbc.setState(0x2d49, 0xfcba, 0xd5d0, 0xfaa5, 0x31f5, 0x448f, 0x0, 0x1);
        gbc.writeMem(0x2d49, { 0x38, 0x7c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfcba, gbc.sp());
        EXPECT(0x2dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00DF
        gbc.setState(0xc273, 0xd719, 0xe4e0, 0x7ed3, 0x83f7, 0xfe1, 0x1, 0x1);
        gbc.writeMem(0xc273, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd719, gbc.sp());
        EXPECT(0xc275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc273));
        EXPECT(0x60, gbc.readMem(0xc274));
        // 38 00E0
        gbc.setState(0xd22c, 0x5d83, 0xad90, 0xdbdf, 0xbfbb, 0xd474, 0x0, 0x1);
        gbc.writeMem(0xd22c, { 0x38, 0xf7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5d83, gbc.sp());
        EXPECT(0xd225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd22c));
        EXPECT(0xf7, gbc.readMem(0xd22d));
        // 38 00E1
        gbc.setState(0x4312, 0x6f42, 0xa540, 0x193c, 0xd6cb, 0xc36f, 0x1, 0x0);
        gbc.writeMem(0x4312, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6f42, gbc.sp());
        EXPECT(0x4314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00E2
        gbc.setState(0x1a11, 0xbd9a, 0x1e70, 0x6931, 0xa342, 0xb467, 0x1, 0x0);
        gbc.writeMem(0x1a11, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbd9a, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00E3
        gbc.setState(0x98df, 0x214d, 0x7280, 0x114d, 0x703f, 0x63b6, 0x0, 0x1);
        gbc.writeMem(0x98df, { 0x38, 0xd0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x214d, gbc.sp());
        EXPECT(0x98e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x98df));
        EXPECT(0xd0, gbc.readMem(0x98e0));
        // 38 00E4
        gbc.setState(0x5fdb, 0x7f51, 0x2a0, 0x513c, 0x95de, 0x6d10, 0x1, 0x1);
        gbc.writeMem(0x5fdb, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7f51, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00E5
        gbc.setState(0x3a38, 0xccd2, 0xaa30, 0xb3a1, 0x5893, 0x6586, 0x0, 0x1);
        gbc.writeMem(0x3a38, { 0x38, 0x25 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xccd2, gbc.sp());
        EXPECT(0x3a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00E6
        gbc.setState(0x2cfd, 0xc04d, 0x4320, 0x1204, 0x42a7, 0x7f43, 0x0, 0x1);
        gbc.writeMem(0x2cfd, { 0x38, 0x99 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0x2cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00E7
        gbc.setState(0x2697, 0xe101, 0x2470, 0xbfee, 0x4a7b, 0x11dd, 0x0, 0x0);
        gbc.writeMem(0x2697, { 0x38, 0xc8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe101, gbc.sp());
        EXPECT(0x2661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00E8
        gbc.setState(0xb7d4, 0x5e5a, 0x7c00, 0xe6, 0xc97, 0x4731, 0x0, 0x0);
        gbc.writeMem(0xb7d4, { 0x38, 0x55 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0xb7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb7d4));
        EXPECT(0x55, gbc.readMem(0xb7d5));
        // 38 00E9
        gbc.setState(0x3358, 0x606e, 0x5be0, 0xeb85, 0x1c16, 0xc38d, 0x0, 0x1);
        gbc.writeMem(0x3358, { 0x38, 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x606e, gbc.sp());
        EXPECT(0x335a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00EA
        gbc.setState(0x516b, 0xd9d8, 0x7a00, 0x9342, 0x9903, 0x7f29, 0x0, 0x0);
        gbc.writeMem(0x516b, { 0x38, 0xfc });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0x516d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00EB
        gbc.setState(0x5c0e, 0x76a9, 0x5e50, 0xdef, 0xc067, 0xa1c, 0x0, 0x1);
        gbc.writeMem(0x5c0e, { 0x38, 0xc8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0x5bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00EC
        gbc.setState(0xa853, 0x154d, 0xf510, 0xb05d, 0xd361, 0x6974, 0x0, 0x1);
        gbc.writeMem(0xa853, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x154d, gbc.sp());
        EXPECT(0xa7ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa853));
        EXPECT(0x9a, gbc.readMem(0xa854));
        // 38 00ED
        gbc.setState(0xad1b, 0xd444, 0x7e30, 0x2cbc, 0xf231, 0x2030, 0x0, 0x1);
        gbc.writeMem(0xad1b, { 0x38, 0xcb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd444, gbc.sp());
        EXPECT(0xace8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xad1b));
        EXPECT(0xcb, gbc.readMem(0xad1c));
        // 38 00EF
        gbc.setState(0x9f89, 0x8f1d, 0x6f40, 0x7682, 0xea8e, 0x9f00, 0x1, 0x1);
        gbc.writeMem(0x9f89, { 0x38, 0xb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8f1d, gbc.sp());
        EXPECT(0x9f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9f89));
        EXPECT(0xb, gbc.readMem(0x9f8a));
        // 38 00F0
        gbc.setState(0xc0f4, 0xa14a, 0x99e0, 0x526b, 0x14bd, 0x5bff, 0x1, 0x0);
        gbc.writeMem(0xc0f4, { 0x38, 0xcf });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa14a, gbc.sp());
        EXPECT(0xc0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc0f4));
        EXPECT(0xcf, gbc.readMem(0xc0f5));
        // 38 00F1
        gbc.setState(0x571a, 0xf286, 0x9540, 0x9ebb, 0x684c, 0xe044, 0x0, 0x0);
        gbc.writeMem(0x571a, { 0x38, 0xb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf286, gbc.sp());
        EXPECT(0x571c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00F2
        gbc.setState(0x9dc0, 0xdc07, 0x49d0, 0x6614, 0x790, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x9dc0, { 0x38, 0x3d });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdc07, gbc.sp());
        EXPECT(0x9dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9dc0));
        EXPECT(0x3d, gbc.readMem(0x9dc1));
        // 38 00F3
        gbc.setState(0xcd1e, 0xc6c0, 0x8d40, 0xbac9, 0x2ddd, 0x85a9, 0x0, 0x0);
        gbc.writeMem(0xcd1e, { 0x38, 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc6c0, gbc.sp());
        EXPECT(0xcd20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd1e));
        EXPECT(0x2d, gbc.readMem(0xcd1f));
        // 38 00F4
        gbc.setState(0x3885, 0x4c01, 0xd840, 0xa94e, 0x48d0, 0x59b0, 0x1, 0x0);
        gbc.writeMem(0x3885, { 0x38, 0xd9 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4c01, gbc.sp());
        EXPECT(0x3887, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00F5
        gbc.setState(0xaf83, 0x33bc, 0x9140, 0xee6e, 0x3d37, 0xbf1c, 0x0, 0x1);
        gbc.writeMem(0xaf83, { 0x38, 0xf9 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x33bc, gbc.sp());
        EXPECT(0xaf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaf83));
        EXPECT(0xf9, gbc.readMem(0xaf84));
        // 38 00F6
        gbc.setState(0x333d, 0x72c, 0xbd80, 0xf687, 0x7a51, 0x8fc7, 0x0, 0x0);
        gbc.writeMem(0x333d, { 0x38, 0xad });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x72c, gbc.sp());
        EXPECT(0x333f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00F7
        gbc.setState(0x4e23, 0x722, 0xed00, 0x9c20, 0x5224, 0x480e, 0x0, 0x1);
        gbc.writeMem(0x4e23, { 0x38, 0xc });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x4e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00F9
        gbc.setState(0x71c7, 0xdeae, 0xf9c0, 0xb0d0, 0xd2a1, 0x47ea, 0x1, 0x1);
        gbc.writeMem(0x71c7, { 0x38, 0x98 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdeae, gbc.sp());
        EXPECT(0x71c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 00FA
        gbc.setState(0x9a8d, 0xf90f, 0xe80, 0x6e69, 0x5adb, 0xc255, 0x1, 0x1);
        gbc.writeMem(0x9a8d, { 0x38, 0x89 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf90f, gbc.sp());
        EXPECT(0x9a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9a8d));
        EXPECT(0x89, gbc.readMem(0x9a8e));
        // 38 00FB
        gbc.setState(0xb66d, 0xfe61, 0x5430, 0x29d2, 0x5024, 0xaef8, 0x1, 0x1);
        gbc.writeMem(0xb66d, { 0x38, 0x80 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe61, gbc.sp());
        EXPECT(0xb5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb66d));
        EXPECT(0x80, gbc.readMem(0xb66e));
        // 38 00FC
        gbc.setState(0x7fa6, 0x34ce, 0xee70, 0x8a29, 0x921c, 0x5156, 0x0, 0x0);
        gbc.writeMem(0x7fa6, { 0x38, 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x34ce, gbc.sp());
        EXPECT(0x7ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 00FD
        gbc.setState(0x8df5, 0xd9fe, 0xa610, 0xc4f8, 0xa05e, 0x61ee, 0x0, 0x0);
        gbc.writeMem(0x8df5, { 0x38, 0xec });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd9fe, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8df5));
        EXPECT(0xec, gbc.readMem(0x8df6));
        // 38 00FE
        gbc.setState(0x8790, 0x9dfa, 0xe220, 0x632f, 0x97, 0xc397, 0x1, 0x1);
        gbc.writeMem(0x8790, { 0x38, 0xdf });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9dfa, gbc.sp());
        EXPECT(0x8792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8790));
        EXPECT(0xdf, gbc.readMem(0x8791));
        // 38 00FF
        gbc.setState(0xa15c, 0xaefe, 0xb8f0, 0x25ca, 0x91f7, 0xb9ce, 0x0, 0x1);
        gbc.writeMem(0xa15c, { 0x38, 0xc9 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaefe, gbc.sp());
        EXPECT(0xa127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa15c));
        EXPECT(0xc9, gbc.readMem(0xa15d));
        // 38 0100
        gbc.setState(0x69a7, 0x2e3a, 0x1b10, 0xc1f3, 0xd29, 0x80cc, 0x0, 0x0);
        gbc.writeMem(0x69a7, { 0x38, 0xf });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2e3a, gbc.sp());
        EXPECT(0x69b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0102
        gbc.setState(0x4e0b, 0x8d3d, 0xa4a0, 0x585f, 0xe35e, 0x1ab1, 0x0, 0x1);
        gbc.writeMem(0x4e0b, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8d3d, gbc.sp());
        EXPECT(0x4e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0103
        gbc.setState(0x5239, 0x6e43, 0x5a70, 0x6287, 0x7ff2, 0x7a67, 0x0, 0x1);
        gbc.writeMem(0x5239, { 0x38, 0xde });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6e43, gbc.sp());
        EXPECT(0x5219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0104
        gbc.setState(0x2e5a, 0xb9e3, 0x2c30, 0xfc53, 0x152e, 0x125a, 0x0, 0x0);
        gbc.writeMem(0x2e5a, { 0x38, 0x62 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb9e3, gbc.sp());
        EXPECT(0x2ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0105
        gbc.setState(0x5414, 0x34ea, 0x2c60, 0xf7e8, 0xd634, 0x7ad8, 0x0, 0x1);
        gbc.writeMem(0x5414, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x34ea, gbc.sp());
        EXPECT(0x5416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0106
        gbc.setState(0x131, 0x3298, 0xb3a0, 0xfb07, 0x1eef, 0xa62c, 0x1, 0x0);
        gbc.writeMem(0x131, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3298, gbc.sp());
        EXPECT(0x133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0107
        gbc.setState(0x8963, 0xb1e7, 0x2540, 0xc599, 0xc22a, 0x7938, 0x1, 0x1);
        gbc.writeMem(0x8963, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb1e7, gbc.sp());
        EXPECT(0x8965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8963));
        EXPECT(0x9a, gbc.readMem(0x8964));
        // 38 0108
        gbc.setState(0x9e59, 0xac66, 0xddc0, 0x2e89, 0x27fe, 0x9c87, 0x0, 0x0);
        gbc.writeMem(0x9e59, { 0x38, 0x57 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xac66, gbc.sp());
        EXPECT(0x9e5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9e59));
        EXPECT(0x57, gbc.readMem(0x9e5a));
        // 38 0109
        gbc.setState(0x7b76, 0x2d2b, 0xfa30, 0x47ad, 0x5a2a, 0x2b83, 0x1, 0x0);
        gbc.writeMem(0x7b76, { 0x38, 0x74 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2d2b, gbc.sp());
        EXPECT(0x7bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 010A
        gbc.setState(0x94be, 0x6f96, 0x58c0, 0xb2e3, 0xa858, 0x6573, 0x1, 0x1);
        gbc.writeMem(0x94be, { 0x38, 0xc2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6f96, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x94be));
        EXPECT(0xc2, gbc.readMem(0x94bf));
        // 38 010B
        gbc.setState(0x4f58, 0x2465, 0x3d30, 0x2c2e, 0xd1d5, 0xd961, 0x1, 0x0);
        gbc.writeMem(0x4f58, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2465, gbc.sp());
        EXPECT(0x4f93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 010C
        gbc.setState(0xaacc, 0xd779, 0x52b0, 0x517b, 0xb5eb, 0x48e6, 0x1, 0x1);
        gbc.writeMem(0xaacc, { 0x38, 0xc });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0xaada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaacc));
        EXPECT(0xc, gbc.readMem(0xaacd));
        // 38 010D
        gbc.setState(0x48ed, 0xd8c8, 0xb0f0, 0x467a, 0xeada, 0x88bd, 0x0, 0x1);
        gbc.writeMem(0x48ed, { 0x38, 0xdf });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd8c8, gbc.sp());
        EXPECT(0x48ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 010E
        gbc.setState(0x6d2, 0x5f0b, 0xf8c0, 0x4047, 0x837a, 0xf920, 0x1, 0x1);
        gbc.writeMem(0x6d2, { 0x38, 0x99 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5f0b, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 010F
        gbc.setState(0x46dd, 0xe5f9, 0xf180, 0x604d, 0xb302, 0x772d, 0x1, 0x0);
        gbc.writeMem(0x46dd, { 0x38, 0xe0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe5f9, gbc.sp());
        EXPECT(0x46df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0110
        gbc.setState(0xdabf, 0xcf70, 0x4880, 0xd659, 0xd185, 0x5d7b, 0x0, 0x0);
        gbc.writeMem(0xdabf, { 0x38, 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcf70, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdabf));
        EXPECT(0x2c, gbc.readMem(0xdac0));
        // 38 0111
        gbc.setState(0x8de1, 0xafeb, 0x4770, 0x3dba, 0xe49, 0x7ee9, 0x1, 0x0);
        gbc.writeMem(0x8de1, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xafeb, gbc.sp());
        EXPECT(0x8e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8de1));
        EXPECT(0x2a, gbc.readMem(0x8de2));
        // 38 0112
        gbc.setState(0x4ee5, 0xbe58, 0x2f00, 0xff3c, 0x83b6, 0xaf50, 0x1, 0x0);
        gbc.writeMem(0x4ee5, { 0x38, 0x3f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbe58, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0113
        gbc.setState(0xae48, 0x61a4, 0x8a10, 0x3c47, 0xbff5, 0x7a0f, 0x0, 0x0);
        gbc.writeMem(0xae48, { 0x38, 0xd8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x61a4, gbc.sp());
        EXPECT(0xae22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xae48));
        EXPECT(0xd8, gbc.readMem(0xae49));
        // 38 0114
        gbc.setState(0xa0ab, 0x1474, 0xb700, 0x430f, 0xd1f4, 0x26a9, 0x0, 0x0);
        gbc.writeMem(0xa0ab, { 0x38, 0x6f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1474, gbc.sp());
        EXPECT(0xa0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa0ab));
        EXPECT(0x6f, gbc.readMem(0xa0ac));
        // 38 0116
        gbc.setState(0xca5e, 0xf8ec, 0x76b0, 0xb4f2, 0x995a, 0xe0b9, 0x1, 0x1);
        gbc.writeMem(0xca5e, { 0x38, 0xae });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0xca0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xca5e));
        EXPECT(0xae, gbc.readMem(0xca5f));
        // 38 0117
        gbc.setState(0xdce4, 0x295c, 0x8f40, 0x8930, 0x825e, 0xf5a0, 0x1, 0x0);
        gbc.writeMem(0xdce4, { 0x38, 0x38 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x295c, gbc.sp());
        EXPECT(0xdce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdce4));
        EXPECT(0x38, gbc.readMem(0xdce5));
        // 38 0118
        gbc.setState(0x5084, 0xe3f0, 0x2890, 0xc7c7, 0x56be, 0x5b42, 0x0, 0x1);
        gbc.writeMem(0x5084, { 0x38, 0xb6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0x503c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0119
        gbc.setState(0xd37d, 0xe4ae, 0x7560, 0x9619, 0xf44, 0x445b, 0x0, 0x0);
        gbc.writeMem(0xd37d, { 0x38, 0xfa });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe4ae, gbc.sp());
        EXPECT(0xd37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd37d));
        EXPECT(0xfa, gbc.readMem(0xd37e));
        // 38 011A
        gbc.setState(0xc212, 0xd851, 0xac20, 0x5e76, 0xb73f, 0x9de8, 0x1, 0x1);
        gbc.writeMem(0xc212, { 0x38, 0xec });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd851, gbc.sp());
        EXPECT(0xc214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc212));
        EXPECT(0xec, gbc.readMem(0xc213));
        // 38 011B
        gbc.setState(0x34f5, 0x6c0c, 0x1640, 0xfc9b, 0xb379, 0xabda, 0x1, 0x1);
        gbc.writeMem(0x34f5, { 0x38, 0xb6 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6c0c, gbc.sp());
        EXPECT(0x34f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 011C
        gbc.setState(0x15f6, 0x69d3, 0x7370, 0xa234, 0x15e0, 0xaf5b, 0x0, 0x0);
        gbc.writeMem(0x15f6, { 0x38, 0x3a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x69d3, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 011D
        gbc.setState(0x367b, 0x839d, 0xeac0, 0xa9fe, 0x3535, 0x85c3, 0x0, 0x1);
        gbc.writeMem(0x367b, { 0x38, 0xcd });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x367d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 011F
        gbc.setState(0x79aa, 0x8fb6, 0x75c0, 0xec4, 0x1814, 0x1f57, 0x1, 0x0);
        gbc.writeMem(0x79aa, { 0x38, 0xff });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8fb6, gbc.sp());
        EXPECT(0x79ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0120
        gbc.setState(0x857d, 0x2334, 0xe00, 0x5023, 0x1317, 0xb111, 0x0, 0x1);
        gbc.writeMem(0x857d, { 0x38, 0x30 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0x857f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x857d));
        EXPECT(0x30, gbc.readMem(0x857e));
        // 38 0121
        gbc.setState(0x360c, 0x475b, 0x2b20, 0x39eb, 0x2160, 0x6ed7, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0x38, 0xe6 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x475b, gbc.sp());
        EXPECT(0x360e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0122
        gbc.setState(0x22f1, 0x859f, 0xd250, 0x36fe, 0xb795, 0x661b, 0x1, 0x0);
        gbc.writeMem(0x22f1, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x859f, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0123
        gbc.setState(0xd50d, 0x95c5, 0x1090, 0xbe12, 0xa32d, 0x803e, 0x1, 0x0);
        gbc.writeMem(0xd50d, { 0x38, 0x65 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x95c5, gbc.sp());
        EXPECT(0xd574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd50d));
        EXPECT(0x65, gbc.readMem(0xd50e));
        // 38 0124
        gbc.setState(0x96c6, 0x7688, 0x45d0, 0xf964, 0xecf2, 0x758b, 0x1, 0x0);
        gbc.writeMem(0x96c6, { 0x38, 0xfb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7688, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x96c6));
        EXPECT(0xfb, gbc.readMem(0x96c7));
        // 38 0125
        gbc.setState(0x2921, 0xb9d9, 0x6a40, 0x9e12, 0xa633, 0x4859, 0x1, 0x1);
        gbc.writeMem(0x2921, { 0x38, 0xe2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0x2923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0126
        gbc.setState(0x86c8, 0xb396, 0xdaa0, 0x1193, 0x52ce, 0x94de, 0x0, 0x1);
        gbc.writeMem(0x86c8, { 0x38, 0x22 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb396, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x86c8));
        EXPECT(0x22, gbc.readMem(0x86c9));
        // 38 0127
        gbc.setState(0x78db, 0xd990, 0x30c0, 0xd5d6, 0xf8d7, 0x6d65, 0x0, 0x0);
        gbc.writeMem(0x78db, { 0x38, 0x49 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xd990, gbc.sp());
        EXPECT(0x78dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0128
        gbc.setState(0x73d4, 0xdb38, 0xb680, 0x3f40, 0x37ce, 0x49b0, 0x1, 0x1);
        gbc.writeMem(0x73d4, { 0x38, 0x66 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdb38, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0129
        gbc.setState(0x3c5a, 0x4b57, 0x8d30, 0xde8, 0x4f31, 0xab3b, 0x0, 0x0);
        gbc.writeMem(0x3c5a, { 0x38, 0x83 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4b57, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 012A
        gbc.setState(0x59c8, 0x2f25, 0x89a0, 0x1e27, 0xb594, 0xb841, 0x0, 0x0);
        gbc.writeMem(0x59c8, { 0x38, 0x14 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2f25, gbc.sp());
        EXPECT(0x59ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 012B
        gbc.setState(0x481, 0xaafe, 0xa900, 0x16a8, 0x65b7, 0x9da6, 0x0, 0x1);
        gbc.writeMem(0x481, { 0x38, 0xa3 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaafe, gbc.sp());
        EXPECT(0x483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 012C
        gbc.setState(0xbb9e, 0x756a, 0xd8d0, 0x5d64, 0x61d6, 0xafca, 0x1, 0x1);
        gbc.writeMem(0xbb9e, { 0x38, 0xd1 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x756a, gbc.sp());
        EXPECT(0xbb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbb9e));
        EXPECT(0xd1, gbc.readMem(0xbb9f));
        // 38 012D
        gbc.setState(0xff1, 0xf23c, 0x3280, 0xd3f3, 0x1303, 0x6dfe, 0x0, 0x1);
        gbc.writeMem(0xff1, { 0x38, 0xf });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf23c, gbc.sp());
        EXPECT(0xff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 012E
        gbc.setState(0xcf6f, 0x144f, 0x42b0, 0xd35b, 0x260a, 0x415c, 0x1, 0x0);
        gbc.writeMem(0xcf6f, { 0x38, 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x144f, gbc.sp());
        EXPECT(0xcfeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcf6f));
        EXPECT(0x7a, gbc.readMem(0xcf70));
        // 38 0130
        gbc.setState(0x1db, 0x1ec8, 0x4da0, 0xb593, 0x8a15, 0xb5eb, 0x1, 0x1);
        gbc.writeMem(0x1db, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0x1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0131
        gbc.setState(0x2888, 0xae3e, 0x51f0, 0x598e, 0x4c7c, 0xaf87, 0x0, 0x1);
        gbc.writeMem(0x2888, { 0x38, 0x56 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0x28e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0132
        gbc.setState(0x1ef7, 0xa85a, 0xa8b0, 0xe254, 0xd5f3, 0x9a36, 0x1, 0x0);
        gbc.writeMem(0x1ef7, { 0x38, 0x11 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa85a, gbc.sp());
        EXPECT(0x1f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0133
        gbc.setState(0x3f5f, 0x2d0e, 0x2800, 0x2ec0, 0x60a2, 0x51c0, 0x0, 0x0);
        gbc.writeMem(0x3f5f, { 0x38, 0xe });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2d0e, gbc.sp());
        EXPECT(0x3f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0134
        gbc.setState(0x825c, 0xe1e3, 0x7260, 0x6354, 0x1ae1, 0x4b93, 0x1, 0x1);
        gbc.writeMem(0x825c, { 0x38, 0x15 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe1e3, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x825c));
        EXPECT(0x15, gbc.readMem(0x825d));
        // 38 0135
        gbc.setState(0xcc7b, 0xd28d, 0xc4f0, 0x522d, 0xafe6, 0xa36a, 0x0, 0x0);
        gbc.writeMem(0xcc7b, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd28d, gbc.sp());
        EXPECT(0xccb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcc7b));
        EXPECT(0x39, gbc.readMem(0xcc7c));
        // 38 0136
        gbc.setState(0xde5b, 0x4cb7, 0xfb50, 0x9ff9, 0x284f, 0x177a, 0x1, 0x1);
        gbc.writeMem(0xde5b, { 0x38, 0x50 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4cb7, gbc.sp());
        EXPECT(0xdead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xde5b));
        EXPECT(0x50, gbc.readMem(0xde5c));
        // 38 0137
        gbc.setState(0x89e0, 0x2f26, 0x130, 0xffd8, 0xd011, 0xf195, 0x1, 0x0);
        gbc.writeMem(0x89e0, { 0x38, 0xd3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2f26, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x89e0));
        EXPECT(0xd3, gbc.readMem(0x89e1));
        // 38 0138
        gbc.setState(0xe872, 0x93fe, 0x7d50, 0x1e24, 0x11e3, 0x298a, 0x0, 0x1);
        gbc.writeMem(0xe872, { 0x38, 0x7c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x93fe, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe872));
        EXPECT(0x7c, gbc.readMem(0xe873));
        // 38 013A
        gbc.setState(0x6115, 0x465d, 0x9dd0, 0x7b1e, 0xdaca, 0x3ba6, 0x1, 0x0);
        gbc.writeMem(0x6115, { 0x38, 0x45 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0x615c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 013B
        gbc.setState(0x12ee, 0x3513, 0x4db0, 0xdeae, 0x78f1, 0xeebf, 0x1, 0x0);
        gbc.writeMem(0x12ee, { 0x38, 0x1d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3513, gbc.sp());
        EXPECT(0x130d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 013D
        gbc.setState(0x88bf, 0xf82b, 0xadf0, 0x4335, 0x46ad, 0x693b, 0x0, 0x0);
        gbc.writeMem(0x88bf, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf82b, gbc.sp());
        EXPECT(0x884d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x88bf));
        EXPECT(0x8c, gbc.readMem(0x88c0));
        // 38 013E
        gbc.setState(0xd532, 0x75a6, 0x4610, 0xf2d6, 0x381e, 0x9c1c, 0x0, 0x1);
        gbc.writeMem(0xd532, { 0x38, 0xb7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0xd4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd532));
        EXPECT(0xb7, gbc.readMem(0xd533));
        // 38 013F
        gbc.setState(0xeb56, 0x7c34, 0xe7c0, 0x6d95, 0xd80b, 0xc28c, 0x1, 0x0);
        gbc.writeMem(0xeb56, { 0x38, 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xeb56));
        EXPECT(0x2c, gbc.readMem(0xeb57));
        // 38 0140
        gbc.setState(0xce52, 0x896d, 0x2e20, 0xae36, 0x7a45, 0xd168, 0x1, 0x0);
        gbc.writeMem(0xce52, { 0x38, 0x9d });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x896d, gbc.sp());
        EXPECT(0xce54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xce52));
        EXPECT(0x9d, gbc.readMem(0xce53));
        // 38 0141
        gbc.setState(0x918a, 0xa044, 0x86d0, 0x9e68, 0x12ce, 0xa56e, 0x0, 0x0);
        gbc.writeMem(0x918a, { 0x38, 0x85 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa044, gbc.sp());
        EXPECT(0x9111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x918a));
        EXPECT(0x85, gbc.readMem(0x918b));
        // 38 0142
        gbc.setState(0xef54, 0x1087, 0x950, 0xfab4, 0xc2a, 0x2fd, 0x1, 0x1);
        gbc.writeMem(0xef54, { 0x38, 0xc6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1087, gbc.sp());
        EXPECT(0xef1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xef54));
        EXPECT(0xc6, gbc.readMem(0xef55));
        // 38 0143
        gbc.setState(0x8b25, 0x9f67, 0xee30, 0x79c1, 0x92d2, 0x6a59, 0x0, 0x0);
        gbc.writeMem(0x8b25, { 0x38, 0x6c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x8b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8b25));
        EXPECT(0x6c, gbc.readMem(0x8b26));
        // 38 0144
        gbc.setState(0x6c6f, 0xe0b7, 0x4510, 0x604c, 0xec75, 0x93c9, 0x1, 0x1);
        gbc.writeMem(0x6c6f, { 0x38, 0x1a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe0b7, gbc.sp());
        EXPECT(0x6c8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0145
        gbc.setState(0x6b2f, 0xe035, 0x1eb0, 0xab18, 0xe19d, 0x5695, 0x1, 0x0);
        gbc.writeMem(0x6b2f, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x6ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0146
        gbc.setState(0x7147, 0xe29b, 0xd860, 0xe777, 0xc0a5, 0x3df6, 0x0, 0x0);
        gbc.writeMem(0x7147, { 0x38, 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe29b, gbc.sp());
        EXPECT(0x7149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0147
        gbc.setState(0x3fd9, 0x3ada, 0x2e40, 0x3c14, 0xbcf5, 0xb9ae, 0x1, 0x0);
        gbc.writeMem(0x3fd9, { 0x38, 0x87 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3ada, gbc.sp());
        EXPECT(0x3fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0148
        gbc.setState(0xd58a, 0x8031, 0xc160, 0x4728, 0xab45, 0x3452, 0x0, 0x1);
        gbc.writeMem(0xd58a, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8031, gbc.sp());
        EXPECT(0xd58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd58a));
        EXPECT(0x88, gbc.readMem(0xd58b));
        // 38 0149
        gbc.setState(0xb233, 0xa1f1, 0xfbe0, 0x6480, 0x19eb, 0xc509, 0x0, 0x1);
        gbc.writeMem(0xb233, { 0x38, 0xe2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa1f1, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb233));
        EXPECT(0xe2, gbc.readMem(0xb234));
        // 38 014A
        gbc.setState(0xecce, 0x8ed2, 0xc9b0, 0x4ff3, 0xd25, 0x7be2, 0x1, 0x1);
        gbc.writeMem(0xecce, { 0x38, 0xbb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ed2, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xecce));
        EXPECT(0xbb, gbc.readMem(0xeccf));
        // 38 014B
        gbc.setState(0xd1f2, 0xb75d, 0x5440, 0x7516, 0xeeab, 0x1782, 0x1, 0x0);
        gbc.writeMem(0xd1f2, { 0x38, 0x59 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb75d, gbc.sp());
        EXPECT(0xd1f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd1f2));
        EXPECT(0x59, gbc.readMem(0xd1f3));
        // 38 014C
        gbc.setState(0xcde0, 0x5f9a, 0xedc0, 0xb9bf, 0xeed9, 0xb976, 0x1, 0x1);
        gbc.writeMem(0xcde0, { 0x38, 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5f9a, gbc.sp());
        EXPECT(0xcde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcde0));
        EXPECT(0xb0, gbc.readMem(0xcde1));
        // 38 014D
        gbc.setState(0x2bbc, 0x2d02, 0x7160, 0x8b5c, 0x85b4, 0xaf1f, 0x1, 0x0);
        gbc.writeMem(0x2bbc, { 0x38, 0x78 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x2bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 014E
        gbc.setState(0xd6d4, 0xb0cc, 0x8190, 0xf5e2, 0x793c, 0x2ec7, 0x1, 0x0);
        gbc.writeMem(0xd6d4, { 0x38, 0x7f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb0cc, gbc.sp());
        EXPECT(0xd755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd6d4));
        EXPECT(0x7f, gbc.readMem(0xd6d5));
        // 38 014F
        gbc.setState(0x4606, 0x4229, 0xd070, 0x6ba2, 0x80fb, 0xd39a, 0x0, 0x0);
        gbc.writeMem(0x4606, { 0x38, 0x6e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0150
        gbc.setState(0xa610, 0x7685, 0xb350, 0xe7dc, 0x88ea, 0xd570, 0x0, 0x0);
        gbc.writeMem(0xa610, { 0x38, 0xd });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7685, gbc.sp());
        EXPECT(0xa61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa610));
        EXPECT(0xd, gbc.readMem(0xa611));
        // 38 0151
        gbc.setState(0x6a5c, 0x7c49, 0xeb10, 0x272b, 0x2aab, 0xe374, 0x0, 0x0);
        gbc.writeMem(0x6a5c, { 0x38, 0x29 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7c49, gbc.sp());
        EXPECT(0x6a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0152
        gbc.setState(0x6221, 0x1863, 0x34e0, 0xaf05, 0xa986, 0xe169, 0x1, 0x0);
        gbc.writeMem(0x6221, { 0x38, 0xb9 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1863, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0153
        gbc.setState(0x8998, 0xb175, 0xb170, 0x6a39, 0xdbac, 0xc439, 0x0, 0x0);
        gbc.writeMem(0x8998, { 0x38, 0x90 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb175, gbc.sp());
        EXPECT(0x892a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8998));
        EXPECT(0x90, gbc.readMem(0x8999));
        // 38 0154
        gbc.setState(0xcba0, 0xf67a, 0xc5d0, 0x3aa4, 0x19f9, 0xc355, 0x0, 0x1);
        gbc.writeMem(0xcba0, { 0x38, 0x51 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf67a, gbc.sp());
        EXPECT(0xcbf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcba0));
        EXPECT(0x51, gbc.readMem(0xcba1));
        // 38 0155
        gbc.setState(0xbfd2, 0x2195, 0xd6a0, 0x8659, 0xd463, 0x950e, 0x0, 0x1);
        gbc.writeMem(0xbfd2, { 0x38, 0x23 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2195, gbc.sp());
        EXPECT(0xbfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbfd2));
        EXPECT(0x23, gbc.readMem(0xbfd3));
        // 38 0156
        gbc.setState(0xa4cc, 0xb2c8, 0xf170, 0xbce5, 0x864c, 0xb9d1, 0x1, 0x0);
        gbc.writeMem(0xa4cc, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb2c8, gbc.sp());
        EXPECT(0xa464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa4cc));
        EXPECT(0x96, gbc.readMem(0xa4cd));
        // 38 0157
        gbc.setState(0xc016, 0xa859, 0x2690, 0x642f, 0x806c, 0xd64c, 0x1, 0x1);
        gbc.writeMem(0xc016, { 0x38, 0xda });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa859, gbc.sp());
        EXPECT(0xbff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc016));
        EXPECT(0xda, gbc.readMem(0xc017));
        // 38 0158
        gbc.setState(0xaa98, 0x6a33, 0xf110, 0x6978, 0xc755, 0xc420, 0x0, 0x1);
        gbc.writeMem(0xaa98, { 0x38, 0x18 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6a33, gbc.sp());
        EXPECT(0xaab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaa98));
        EXPECT(0x18, gbc.readMem(0xaa99));
        // 38 0159
        gbc.setState(0x2302, 0xe0ba, 0x3760, 0x2980, 0xbc5a, 0xb66d, 0x1, 0x0);
        gbc.writeMem(0x2302, { 0x38, 0x49 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe0ba, gbc.sp());
        EXPECT(0x2304, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 015A
        gbc.setState(0x31e7, 0x949d, 0x5240, 0xa1e0, 0x72a3, 0xb26a, 0x1, 0x1);
        gbc.writeMem(0x31e7, { 0x38, 0xc4 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x949d, gbc.sp());
        EXPECT(0x31e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 015B
        gbc.setState(0x8fc6, 0x5f1c, 0x6f80, 0x77b9, 0x7537, 0x8288, 0x0, 0x0);
        gbc.writeMem(0x8fc6, { 0x38, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5f1c, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8fc6));
        EXPECT(0x2c, gbc.readMem(0x8fc7));
        // 38 015C
        gbc.setState(0xe1e, 0x3f5a, 0xb0d0, 0x98bc, 0xa70f, 0xd9db, 0x0, 0x0);
        gbc.writeMem(0xe1e, { 0x38, 0x7b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3f5a, gbc.sp());
        EXPECT(0xe9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 015D
        gbc.setState(0x607b, 0x402e, 0x1e70, 0xe9a7, 0x7819, 0x9691, 0x0, 0x0);
        gbc.writeMem(0x607b, { 0x38, 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 015E
        gbc.setState(0x334a, 0x23de, 0x24a0, 0xfb7c, 0xf2b2, 0x3f93, 0x1, 0x0);
        gbc.writeMem(0x334a, { 0x38, 0xe3 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x23de, gbc.sp());
        EXPECT(0x334c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 015F
        gbc.setState(0x4a4, 0xc744, 0x6430, 0x2c2b, 0x599, 0x6cf4, 0x1, 0x0);
        gbc.writeMem(0x4a4, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc744, gbc.sp());
        EXPECT(0x4f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0160
        gbc.setState(0x9a14, 0xfbc, 0xc350, 0x3ad9, 0x9a9, 0xe295, 0x1, 0x0);
        gbc.writeMem(0x9a14, { 0x38, 0xd0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfbc, gbc.sp());
        EXPECT(0x99e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9a14));
        EXPECT(0xd0, gbc.readMem(0x9a15));
        // 38 0161
        gbc.setState(0x1d06, 0xb1ec, 0xa0d0, 0x6571, 0xe20d, 0x16d8, 0x0, 0x1);
        gbc.writeMem(0x1d06, { 0x38, 0xc9 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb1ec, gbc.sp());
        EXPECT(0x1cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0162
        gbc.setState(0x26b8, 0x3d02, 0xe5d0, 0xa381, 0x1374, 0xed86, 0x0, 0x1);
        gbc.writeMem(0x26b8, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3d02, gbc.sp());
        EXPECT(0x2737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0163
        gbc.setState(0x5fdb, 0xc4e7, 0x62c0, 0x151d, 0x26cc, 0xd5ff, 0x1, 0x0);
        gbc.writeMem(0x5fdb, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc4e7, gbc.sp());
        EXPECT(0x5fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0164
        gbc.setState(0x31e1, 0x202f, 0x24f0, 0xe138, 0x659e, 0xcfcf, 0x1, 0x1);
        gbc.writeMem(0x31e1, { 0x38, 0xd6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x202f, gbc.sp());
        EXPECT(0x31b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0165
        gbc.setState(0x3d12, 0x38a8, 0x8240, 0x7ef5, 0x54fd, 0x5974, 0x1, 0x0);
        gbc.writeMem(0x3d12, { 0x38, 0x6 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x38a8, gbc.sp());
        EXPECT(0x3d14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0166
        gbc.setState(0x630e, 0x4390, 0xe190, 0x32d5, 0x109f, 0x5da3, 0x1, 0x1);
        gbc.writeMem(0x630e, { 0x38, 0x29 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4390, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0167
        gbc.setState(0xb930, 0xd411, 0x1c10, 0x9b2f, 0xedf4, 0x5172, 0x0, 0x0);
        gbc.writeMem(0xb930, { 0x38, 0x9f });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd411, gbc.sp());
        EXPECT(0xb8d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb930));
        EXPECT(0x9f, gbc.readMem(0xb931));
        // 38 0168
        gbc.setState(0xbc36, 0xe829, 0xf250, 0x3a9a, 0xb52e, 0x259f, 0x0, 0x0);
        gbc.writeMem(0xbc36, { 0x38, 0x75 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe829, gbc.sp());
        EXPECT(0xbcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbc36));
        EXPECT(0x75, gbc.readMem(0xbc37));
        // 38 0169
        gbc.setState(0x24a7, 0x84d4, 0x9ad0, 0xb508, 0x322, 0x3fc0, 0x1, 0x1);
        gbc.writeMem(0x24a7, { 0x38, 0x7f });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x84d4, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 016B
        gbc.setState(0x9bef, 0xddce, 0xb620, 0x750b, 0x5ee3, 0xb771, 0x0, 0x0);
        gbc.writeMem(0x9bef, { 0x38, 0xd4 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xddce, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9bef));
        EXPECT(0xd4, gbc.readMem(0x9bf0));
        // 38 016C
        gbc.setState(0x8001, 0xb021, 0xf8a0, 0x1c0, 0x67c4, 0xc271, 0x1, 0x0);
        gbc.writeMem(0x8001, { 0x38, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb021, gbc.sp());
        EXPECT(0x8003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8001));
        EXPECT(0xe0, gbc.readMem(0x8002));
        // 38 016D
        gbc.setState(0x8760, 0x512a, 0xc990, 0xc0e5, 0xd837, 0x3b06, 0x0, 0x1);
        gbc.writeMem(0x8760, { 0x38, 0x6b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x512a, gbc.sp());
        EXPECT(0x87cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8760));
        EXPECT(0x6b, gbc.readMem(0x8761));
        // 38 016E
        gbc.setState(0x2814, 0xc282, 0xb440, 0x3e7c, 0x8748, 0x5088, 0x1, 0x1);
        gbc.writeMem(0x2814, { 0x38, 0xd8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc282, gbc.sp());
        EXPECT(0x2816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 016F
        gbc.setState(0x13f7, 0xa094, 0xa510, 0x49eb, 0x7a10, 0xb9f6, 0x1, 0x0);
        gbc.writeMem(0x13f7, { 0x38, 0xac });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa094, gbc.sp());
        EXPECT(0x13a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0170
        gbc.setState(0x818f, 0x703b, 0x7230, 0xc0e9, 0xb6ad, 0xa96f, 0x0, 0x1);
        gbc.writeMem(0x818f, { 0x38, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x703b, gbc.sp());
        EXPECT(0x8153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x818f));
        EXPECT(0xc2, gbc.readMem(0x8190));
        // 38 0171
        gbc.setState(0x6562, 0xe428, 0x5580, 0xdcb2, 0x8e91, 0xda0f, 0x0, 0x1);
        gbc.writeMem(0x6562, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe428, gbc.sp());
        EXPECT(0x6564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0172
        gbc.setState(0x6540, 0xd3fb, 0x8520, 0xddc9, 0x9c77, 0xa43d, 0x0, 0x1);
        gbc.writeMem(0x6540, { 0x38, 0x80 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd3fb, gbc.sp());
        EXPECT(0x6542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0173
        gbc.setState(0x403b, 0xbe96, 0x7d70, 0x1377, 0x67fb, 0x9260, 0x1, 0x0);
        gbc.writeMem(0x403b, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe96, gbc.sp());
        EXPECT(0x40a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0174
        gbc.setState(0x5f6d, 0xb39c, 0x7f50, 0xbef2, 0x1820, 0x1fcb, 0x1, 0x0);
        gbc.writeMem(0x5f6d, { 0x38, 0xac });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0x5f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0175
        gbc.setState(0xa786, 0x6f5, 0x48c0, 0x290b, 0xa20a, 0x9799, 0x1, 0x1);
        gbc.writeMem(0xa786, { 0x38, 0x33 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6f5, gbc.sp());
        EXPECT(0xa788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa786));
        EXPECT(0x33, gbc.readMem(0xa787));
        // 38 0177
        gbc.setState(0x4547, 0x8f8b, 0xe760, 0xc595, 0x2955, 0xab7c, 0x0, 0x1);
        gbc.writeMem(0x4547, { 0x38, 0x56 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x4549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0178
        gbc.setState(0xc20, 0x5020, 0xc6b0, 0x9f04, 0x9f5b, 0x350d, 0x0, 0x0);
        gbc.writeMem(0xc20, { 0x38, 0x6a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5020, gbc.sp());
        EXPECT(0xc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0179
        gbc.setState(0x951f, 0xcae3, 0xbf40, 0xc121, 0x2085, 0xd344, 0x1, 0x0);
        gbc.writeMem(0x951f, { 0x38, 0xfd });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcae3, gbc.sp());
        EXPECT(0x9521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x951f));
        EXPECT(0xfd, gbc.readMem(0x9520));
        // 38 017A
        gbc.setState(0x37ca, 0x7579, 0xcfe0, 0x9c36, 0x95ff, 0x8267, 0x1, 0x0);
        gbc.writeMem(0x37ca, { 0x38, 0x3 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7579, gbc.sp());
        EXPECT(0x37cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 017B
        gbc.setState(0xa780, 0x35e5, 0x6a60, 0x86ca, 0x2b58, 0x235a, 0x0, 0x0);
        gbc.writeMem(0xa780, { 0x38, 0xca });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x35e5, gbc.sp());
        EXPECT(0xa782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa780));
        EXPECT(0xca, gbc.readMem(0xa781));
        // 38 017D
        gbc.setState(0x94ad, 0x726e, 0x2a10, 0x484b, 0xcc1e, 0x87b, 0x0, 0x1);
        gbc.writeMem(0x94ad, { 0x38, 0x74 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x726e, gbc.sp());
        EXPECT(0x9523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x94ad));
        EXPECT(0x74, gbc.readMem(0x94ae));
        // 38 017E
        gbc.setState(0x661a, 0x2ff6, 0x24b0, 0x3b7e, 0x70a4, 0x3288, 0x0, 0x0);
        gbc.writeMem(0x661a, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2ff6, gbc.sp());
        EXPECT(0x6655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 017F
        gbc.setState(0xb687, 0x6d93, 0x75a0, 0xf639, 0x5e97, 0xcb60, 0x1, 0x1);
        gbc.writeMem(0xb687, { 0x38, 0x54 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6d93, gbc.sp());
        EXPECT(0xb689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb687));
        EXPECT(0x54, gbc.readMem(0xb688));
        // 38 0180
        gbc.setState(0x49d5, 0x7f14, 0x3490, 0x990f, 0x21e8, 0x536d, 0x1, 0x1);
        gbc.writeMem(0x49d5, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7f14, gbc.sp());
        EXPECT(0x4965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0181
        gbc.setState(0x48e6, 0x8b1b, 0x9790, 0x5875, 0x7e30, 0xd443, 0x0, 0x0);
        gbc.writeMem(0x48e6, { 0x38, 0xac });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8b1b, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0182
        gbc.setState(0xe3c3, 0x9538, 0xe50, 0x2fc2, 0xd46c, 0x97ea, 0x1, 0x0);
        gbc.writeMem(0xe3c3, { 0x38, 0x92 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9538, gbc.sp());
        EXPECT(0xe357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe3c3));
        EXPECT(0x92, gbc.readMem(0xe3c4));
        // 38 0183
        gbc.setState(0x7066, 0x1aca, 0x3e00, 0x61f2, 0x785e, 0x57ee, 0x1, 0x0);
        gbc.writeMem(0x7066, { 0x38, 0x26 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1aca, gbc.sp());
        EXPECT(0x7068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0184
        gbc.setState(0x8c34, 0x7af0, 0x29a0, 0x5c93, 0xa781, 0x763d, 0x0, 0x1);
        gbc.writeMem(0x8c34, { 0x38, 0x2b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7af0, gbc.sp());
        EXPECT(0x8c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8c34));
        EXPECT(0x2b, gbc.readMem(0x8c35));
        // 38 0185
        gbc.setState(0x611e, 0x3979, 0x6bc0, 0xf78b, 0x7080, 0x6924, 0x1, 0x1);
        gbc.writeMem(0x611e, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3979, gbc.sp());
        EXPECT(0x6120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0186
        gbc.setState(0x9083, 0xfb76, 0x63f0, 0x54bc, 0xfce0, 0xc5dc, 0x0, 0x1);
        gbc.writeMem(0x9083, { 0x38, 0x6d });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfb76, gbc.sp());
        EXPECT(0x90f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9083));
        EXPECT(0x6d, gbc.readMem(0x9084));
        // 38 0187
        gbc.setState(0x315d, 0x7b05, 0x970, 0x4519, 0x7934, 0x234f, 0x1, 0x0);
        gbc.writeMem(0x315d, { 0x38, 0x94 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7b05, gbc.sp());
        EXPECT(0x30f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 018B
        gbc.setState(0x9f3d, 0x60d3, 0x9070, 0xb4e, 0x64c3, 0x29ee, 0x0, 0x0);
        gbc.writeMem(0x9f3d, { 0x38, 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x9ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9f3d));
        EXPECT(0x90, gbc.readMem(0x9f3e));
        // 38 018C
        gbc.setState(0x6952, 0x4a58, 0xc210, 0x785, 0x69b5, 0xb796, 0x1, 0x1);
        gbc.writeMem(0x6952, { 0x38, 0xfc });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4a58, gbc.sp());
        EXPECT(0x6950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 018D
        gbc.setState(0xd8f1, 0x3277, 0x5b20, 0xfab7, 0x9dbf, 0xf035, 0x0, 0x0);
        gbc.writeMem(0xd8f1, { 0x38, 0x97 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3277, gbc.sp());
        EXPECT(0xd8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd8f1));
        EXPECT(0x97, gbc.readMem(0xd8f2));
        // 38 018E
        gbc.setState(0x2475, 0x26e9, 0xe2d0, 0x528, 0xfba2, 0x91ce, 0x1, 0x0);
        gbc.writeMem(0x2475, { 0x38, 0xa4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x26e9, gbc.sp());
        EXPECT(0x241b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 018F
        gbc.setState(0x8ce6, 0x652d, 0x2400, 0xca95, 0x9f07, 0x5384, 0x0, 0x0);
        gbc.writeMem(0x8ce6, { 0x38, 0x98 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x652d, gbc.sp());
        EXPECT(0x8ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8ce6));
        EXPECT(0x98, gbc.readMem(0x8ce7));
        // 38 0190
        gbc.setState(0x985f, 0x8daa, 0x1bc0, 0x8eee, 0x32b9, 0xa5cc, 0x1, 0x1);
        gbc.writeMem(0x985f, { 0x38, 0x1d });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0x9861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x985f));
        EXPECT(0x1d, gbc.readMem(0x9860));
        // 38 0191
        gbc.setState(0x81ad, 0xca7a, 0x7d10, 0x676, 0x608, 0x89ce, 0x0, 0x1);
        gbc.writeMem(0x81ad, { 0x38, 0x3a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xca7a, gbc.sp());
        EXPECT(0x81e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x81ad));
        EXPECT(0x3a, gbc.readMem(0x81ae));
        // 38 0192
        gbc.setState(0x6bc3, 0xa09c, 0x2fb0, 0xca5, 0x7f99, 0x2b1d, 0x1, 0x1);
        gbc.writeMem(0x6bc3, { 0x38, 0xef });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa09c, gbc.sp());
        EXPECT(0x6bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0193
        gbc.setState(0xce1d, 0x315f, 0x3fa0, 0xe0f4, 0x1bde, 0x8c4d, 0x0, 0x0);
        gbc.writeMem(0xce1d, { 0x38, 0x69 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x315f, gbc.sp());
        EXPECT(0xce1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xce1d));
        EXPECT(0x69, gbc.readMem(0xce1e));
        // 38 0194
        gbc.setState(0x3c12, 0x7d59, 0x2c00, 0xbbcf, 0x503e, 0x52a4, 0x1, 0x1);
        gbc.writeMem(0x3c12, { 0x38, 0xcc });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7d59, gbc.sp());
        EXPECT(0x3c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0195
        gbc.setState(0x4041, 0x5a58, 0xf970, 0xd4c1, 0xf987, 0xc01a, 0x0, 0x1);
        gbc.writeMem(0x4041, { 0x38, 0x93 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0x3fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0196
        gbc.setState(0x71d2, 0x6d09, 0xf0b0, 0x584e, 0x76eb, 0x475d, 0x1, 0x0);
        gbc.writeMem(0x71d2, { 0x38, 0x34 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6d09, gbc.sp());
        EXPECT(0x7208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0197
        gbc.setState(0xbfbf, 0xfa4f, 0x54d0, 0xda0b, 0x67f9, 0xd3bc, 0x1, 0x1);
        gbc.writeMem(0xbfbf, { 0x38, 0xb1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfa4f, gbc.sp());
        EXPECT(0xbf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbfbf));
        EXPECT(0xb1, gbc.readMem(0xbfc0));
        // 38 0198
        gbc.setState(0x768d, 0xfed1, 0x6ac0, 0x1ffe, 0x1ef, 0x8738, 0x1, 0x0);
        gbc.writeMem(0x768d, { 0x38, 0x81 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfed1, gbc.sp());
        EXPECT(0x768f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0199
        gbc.setState(0x5c3b, 0xfb99, 0x6af0, 0x29d9, 0xf10c, 0xa0a2, 0x0, 0x0);
        gbc.writeMem(0x5c3b, { 0x38, 0xfc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfb99, gbc.sp());
        EXPECT(0x5c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 019A
        gbc.setState(0xec2a, 0x83be, 0x2800, 0x303d, 0x40ec, 0x1c32, 0x1, 0x0);
        gbc.writeMem(0xec2a, { 0x38, 0x75 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x83be, gbc.sp());
        EXPECT(0xec2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xec2a));
        EXPECT(0x75, gbc.readMem(0xec2b));
        // 38 019B
        gbc.setState(0xde20, 0xc96a, 0x61a0, 0x5eab, 0xf4c1, 0x8f38, 0x1, 0x1);
        gbc.writeMem(0xde20, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc96a, gbc.sp());
        EXPECT(0xde22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xde20));
        EXPECT(0xc7, gbc.readMem(0xde21));
        // 38 019C
        gbc.setState(0x3932, 0xe6e, 0x99d0, 0x1ebc, 0x80c9, 0x88b2, 0x0, 0x0);
        gbc.writeMem(0x3932, { 0x38, 0xf9 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe6e, gbc.sp());
        EXPECT(0x392d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 019D
        gbc.setState(0x5587, 0x5e2e, 0xcc40, 0xa7e1, 0xca1c, 0x1036, 0x1, 0x1);
        gbc.writeMem(0x5587, { 0x38, 0xfd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5e2e, gbc.sp());
        EXPECT(0x5589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 019E
        gbc.setState(0xaa1c, 0x5608, 0x93d0, 0x5e2e, 0x9e69, 0x4993, 0x1, 0x1);
        gbc.writeMem(0xaa1c, { 0x38, 0xa5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5608, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaa1c));
        EXPECT(0xa5, gbc.readMem(0xaa1d));
        // 38 019F
        gbc.setState(0x7350, 0xe91, 0x77a0, 0x872d, 0xf396, 0x5d0, 0x0, 0x0);
        gbc.writeMem(0x7350, { 0x38, 0x82 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xe91, gbc.sp());
        EXPECT(0x7352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01A0
        gbc.setState(0x23b8, 0x5293, 0x1740, 0x89ee, 0xe708, 0xb239, 0x0, 0x0);
        gbc.writeMem(0x23b8, { 0x38, 0xc8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5293, gbc.sp());
        EXPECT(0x23ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01A1
        gbc.setState(0x489e, 0xe490, 0x7170, 0x8f42, 0x8976, 0xb07d, 0x1, 0x1);
        gbc.writeMem(0x489e, { 0x38, 0xc0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0x4860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01A2
        gbc.setState(0x48e9, 0xf4ff, 0x80d0, 0x6610, 0x976c, 0x106e, 0x1, 0x0);
        gbc.writeMem(0x48e9, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0x4915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01A3
        gbc.setState(0xe331, 0x9855, 0x7b0, 0xefa7, 0x6cb5, 0x8b96, 0x1, 0x1);
        gbc.writeMem(0xe331, { 0x38, 0x98 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9855, gbc.sp());
        EXPECT(0xe2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe331));
        EXPECT(0x98, gbc.readMem(0xe332));
        // 38 01A4
        gbc.setState(0x965b, 0x7918, 0x5770, 0x5f81, 0xbd43, 0x7407, 0x0, 0x1);
        gbc.writeMem(0x965b, { 0x38, 0xb6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7918, gbc.sp());
        EXPECT(0x9613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x965b));
        EXPECT(0xb6, gbc.readMem(0x965c));
        // 38 01A6
        gbc.setState(0x3d01, 0xd08c, 0x4b50, 0x586f, 0x211f, 0x731b, 0x1, 0x0);
        gbc.writeMem(0x3d01, { 0x38, 0xa5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd08c, gbc.sp());
        EXPECT(0x3ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01A7
        gbc.setState(0x71ee, 0x367b, 0xbec0, 0x4112, 0x848a, 0xea2a, 0x0, 0x1);
        gbc.writeMem(0x71ee, { 0x38, 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x367b, gbc.sp());
        EXPECT(0x71f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01A8
        gbc.setState(0x3226, 0x8751, 0x25e0, 0xf06f, 0x42ba, 0x7d80, 0x0, 0x1);
        gbc.writeMem(0x3226, { 0x38, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8751, gbc.sp());
        EXPECT(0x3228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01A9
        gbc.setState(0xdc0, 0x73dc, 0x800, 0x5913, 0x2795, 0xc221, 0x0, 0x0);
        gbc.writeMem(0xdc0, { 0x38, 0x12 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x73dc, gbc.sp());
        EXPECT(0xdc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01AA
        gbc.setState(0x7f48, 0x6682, 0xf9f0, 0x4f91, 0xcdaa, 0xef93, 0x0, 0x0);
        gbc.writeMem(0x7f48, { 0x38, 0x3e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6682, gbc.sp());
        EXPECT(0x7f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01AC
        gbc.setState(0x8087, 0x7cef, 0x8050, 0xfb78, 0x1784, 0x8898, 0x1, 0x1);
        gbc.writeMem(0x8087, { 0x38, 0x64 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7cef, gbc.sp());
        EXPECT(0x80ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8087));
        EXPECT(0x64, gbc.readMem(0x8088));
        // 38 01AD
        gbc.setState(0x7ca9, 0xb1a1, 0xad90, 0xe0c4, 0xfffc, 0xe368, 0x0, 0x1);
        gbc.writeMem(0x7ca9, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb1a1, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01AE
        gbc.setState(0xd77f, 0xda06, 0xf200, 0x52e2, 0x58c0, 0x96b9, 0x1, 0x1);
        gbc.writeMem(0xd77f, { 0x38, 0x86 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xda06, gbc.sp());
        EXPECT(0xd781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd77f));
        EXPECT(0x86, gbc.readMem(0xd780));
        // 38 01AF
        gbc.setState(0x8bdf, 0x70ee, 0x5f00, 0x89b5, 0x3c0a, 0x2d86, 0x0, 0x1);
        gbc.writeMem(0x8bdf, { 0x38, 0xac });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x70ee, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8bdf));
        EXPECT(0xac, gbc.readMem(0x8be0));
        // 38 01B1
        gbc.setState(0x3ebe, 0xbe0c, 0xd870, 0xe71a, 0x4998, 0xa36, 0x1, 0x0);
        gbc.writeMem(0x3ebe, { 0x38, 0x27 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbe0c, gbc.sp());
        EXPECT(0x3ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01B2
        gbc.setState(0x7ae7, 0x296f, 0xcdd0, 0x67bb, 0x92e6, 0x3b22, 0x0, 0x1);
        gbc.writeMem(0x7ae7, { 0x38, 0xa5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x296f, gbc.sp());
        EXPECT(0x7a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01B3
        gbc.setState(0x77b1, 0x8361, 0x6490, 0xca41, 0x5e3d, 0x3721, 0x1, 0x1);
        gbc.writeMem(0x77b1, { 0x38, 0xfd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8361, gbc.sp());
        EXPECT(0x77b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01B6
        gbc.setState(0x4f6c, 0x2ad7, 0x76a0, 0x5393, 0x9792, 0xd1a0, 0x0, 0x1);
        gbc.writeMem(0x4f6c, { 0x38, 0xf9 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2ad7, gbc.sp());
        EXPECT(0x4f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01B7
        gbc.setState(0x8e19, 0xcf72, 0xa4e0, 0x2301, 0x4af2, 0x31b4, 0x0, 0x1);
        gbc.writeMem(0x8e19, { 0x38, 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcf72, gbc.sp());
        EXPECT(0x8e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8e19));
        EXPECT(0x2c, gbc.readMem(0x8e1a));
        // 38 01B8
        gbc.setState(0xea17, 0x142a, 0x5cd0, 0x3c2b, 0x89a5, 0x31fb, 0x1, 0x0);
        gbc.writeMem(0xea17, { 0x38, 0x2e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x142a, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xea17));
        EXPECT(0x2e, gbc.readMem(0xea18));
        // 38 01B9
        gbc.setState(0xb5dc, 0xc87d, 0x5a10, 0xebdb, 0x6940, 0x8810, 0x1, 0x1);
        gbc.writeMem(0xb5dc, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc87d, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb5dc));
        EXPECT(0x8c, gbc.readMem(0xb5dd));
        // 38 01BA
        gbc.setState(0xaad1, 0x16e2, 0x6700, 0xcbd7, 0xbe1f, 0xfb5c, 0x1, 0x0);
        gbc.writeMem(0xaad1, { 0x38, 0xe5 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaad1));
        EXPECT(0xe5, gbc.readMem(0xaad2));
        // 38 01BB
        gbc.setState(0x37cb, 0x8860, 0xfb20, 0xfe20, 0xae9e, 0x19c, 0x1, 0x0);
        gbc.writeMem(0x37cb, { 0x38, 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8860, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01BC
        gbc.setState(0xccbb, 0xacad, 0x4aa0, 0x921c, 0xb070, 0xb47a, 0x0, 0x0);
        gbc.writeMem(0xccbb, { 0x38, 0x30 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xacad, gbc.sp());
        EXPECT(0xccbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xccbb));
        EXPECT(0x30, gbc.readMem(0xccbc));
        // 38 01BE
        gbc.setState(0xbbe5, 0x7d4e, 0x4a90, 0xfe6f, 0x7f26, 0x14d9, 0x1, 0x0);
        gbc.writeMem(0xbbe5, { 0x38, 0x1b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7d4e, gbc.sp());
        EXPECT(0xbc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbbe5));
        EXPECT(0x1b, gbc.readMem(0xbbe6));
        // 38 01BF
        gbc.setState(0x1765, 0x95b, 0xf410, 0x896f, 0xa4f6, 0xe95, 0x1, 0x0);
        gbc.writeMem(0x1765, { 0x38, 0x18 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x95b, gbc.sp());
        EXPECT(0x177f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01C0
        gbc.setState(0x6f29, 0xfb22, 0x9700, 0x820c, 0xe9e4, 0xb22a, 0x0, 0x1);
        gbc.writeMem(0x6f29, { 0x38, 0xe5 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0x6f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01C1
        gbc.setState(0xcc46, 0x95ae, 0x3d40, 0x7e95, 0xe89b, 0x1d7e, 0x1, 0x0);
        gbc.writeMem(0xcc46, { 0x38, 0xcb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x95ae, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcc46));
        EXPECT(0xcb, gbc.readMem(0xcc47));
        // 38 01C2
        gbc.setState(0x623b, 0x98e6, 0x3f0, 0xa29f, 0x2346, 0x82bf, 0x0, 0x1);
        gbc.writeMem(0x623b, { 0x38, 0xbd });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x98e6, gbc.sp());
        EXPECT(0x61fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01C3
        gbc.setState(0xc9b3, 0x882c, 0xa60, 0xab4, 0x80d, 0x6a63, 0x1, 0x0);
        gbc.writeMem(0xc9b3, { 0x38, 0xbe });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x882c, gbc.sp());
        EXPECT(0xc9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc9b3));
        EXPECT(0xbe, gbc.readMem(0xc9b4));
        // 38 01C4
        gbc.setState(0xd005, 0x9e1d, 0x6d0, 0x7354, 0x5f92, 0x106a, 0x1, 0x1);
        gbc.writeMem(0xd005, { 0x38, 0x79 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9e1d, gbc.sp());
        EXPECT(0xd080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd005));
        EXPECT(0x79, gbc.readMem(0xd006));
        // 38 01C5
        gbc.setState(0xd51b, 0xfab4, 0x55b0, 0xcb62, 0x62a0, 0xfd4e, 0x0, 0x1);
        gbc.writeMem(0xd51b, { 0x38, 0x94 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xfab4, gbc.sp());
        EXPECT(0xd4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd51b));
        EXPECT(0x94, gbc.readMem(0xd51c));
        // 38 01C6
        gbc.setState(0xe9c8, 0x9815, 0xec10, 0x62c5, 0xe347, 0xc711, 0x1, 0x1);
        gbc.writeMem(0xe9c8, { 0x38, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe9c8));
        EXPECT(0x37, gbc.readMem(0xe9c9));
        // 38 01C7
        gbc.setState(0x714c, 0xdad, 0x6370, 0x917f, 0x98ed, 0x11e5, 0x1, 0x1);
        gbc.writeMem(0x714c, { 0x38, 0x1a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdad, gbc.sp());
        EXPECT(0x7168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01C8
        gbc.setState(0x3e93, 0x2a2b, 0xd4e0, 0xbb5, 0xc156, 0xf02d, 0x1, 0x0);
        gbc.writeMem(0x3e93, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2a2b, gbc.sp());
        EXPECT(0x3e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01C9
        gbc.setState(0x6aae, 0x1e1c, 0x9ad0, 0x4669, 0xce1e, 0x359d, 0x1, 0x0);
        gbc.writeMem(0x6aae, { 0x38, 0xb7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1e1c, gbc.sp());
        EXPECT(0x6a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01CA
        gbc.setState(0xadf1, 0x8ca0, 0xf060, 0xbf19, 0x43e3, 0x8b85, 0x1, 0x1);
        gbc.writeMem(0xadf1, { 0x38, 0x7b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8ca0, gbc.sp());
        EXPECT(0xadf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xadf1));
        EXPECT(0x7b, gbc.readMem(0xadf2));
        // 38 01CB
        gbc.setState(0x499d, 0x8fb9, 0xfbd0, 0xc67f, 0x3a4a, 0x7d37, 0x1, 0x1);
        gbc.writeMem(0x499d, { 0x38, 0xb5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8fb9, gbc.sp());
        EXPECT(0x4954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01CC
        gbc.setState(0x8f4a, 0x8588, 0x9070, 0x68aa, 0xaf6d, 0x597, 0x0, 0x0);
        gbc.writeMem(0x8f4a, { 0x38, 0x26 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0x8f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8f4a));
        EXPECT(0x26, gbc.readMem(0x8f4b));
        // 38 01CD
        gbc.setState(0x2ed9, 0x1087, 0x890, 0xe16c, 0x3297, 0x2eb0, 0x1, 0x1);
        gbc.writeMem(0x2ed9, { 0x38, 0xbb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1087, gbc.sp());
        EXPECT(0x2e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01CE
        gbc.setState(0xbb83, 0x3a15, 0xeec0, 0xc02, 0xd214, 0xe7b3, 0x0, 0x0);
        gbc.writeMem(0xbb83, { 0x38, 0x38 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3a15, gbc.sp());
        EXPECT(0xbb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbb83));
        EXPECT(0x38, gbc.readMem(0xbb84));
        // 38 01CF
        gbc.setState(0x4e83, 0x6dfe, 0xf680, 0x7e25, 0xfc84, 0x81bd, 0x0, 0x1);
        gbc.writeMem(0x4e83, { 0x38, 0x6b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6dfe, gbc.sp());
        EXPECT(0x4e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01D0
        gbc.setState(0x1f00, 0xc48c, 0x4650, 0x3f58, 0x3e6a, 0xde7d, 0x1, 0x0);
        gbc.writeMem(0x1f00, { 0x38, 0xec });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc48c, gbc.sp());
        EXPECT(0x1eee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01D1
        gbc.setState(0xe092, 0x81, 0xccd0, 0x145a, 0x7ef1, 0xef07, 0x1, 0x1);
        gbc.writeMem(0xe092, { 0x38, 0x71 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x81, gbc.sp());
        EXPECT(0xe105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe092));
        EXPECT(0x71, gbc.readMem(0xe093));
        // 38 01D2
        gbc.setState(0xc13, 0xd60b, 0x77e0, 0xf982, 0x7e5b, 0x9abc, 0x1, 0x0);
        gbc.writeMem(0xc13, { 0x38, 0xe9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd60b, gbc.sp());
        EXPECT(0xc15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01D4
        gbc.setState(0xdea6, 0x279d, 0x5550, 0xc242, 0x15a1, 0x4788, 0x1, 0x1);
        gbc.writeMem(0xdea6, { 0x38, 0xc0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0xde68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdea6));
        EXPECT(0xc0, gbc.readMem(0xdea7));
        // 38 01D5
        gbc.setState(0xd328, 0x46a, 0xeec0, 0xdb7, 0x8132, 0xafd0, 0x0, 0x0);
        gbc.writeMem(0xd328, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x46a, gbc.sp());
        EXPECT(0xd32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd328));
        EXPECT(0x8c, gbc.readMem(0xd329));
        // 38 01D6
        gbc.setState(0x97b, 0x8bed, 0x9050, 0x5448, 0x86e4, 0xfd2, 0x1, 0x1);
        gbc.writeMem(0x97b, { 0x38, 0xca });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8bed, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01D9
        gbc.setState(0x8d37, 0x5288, 0x1cb0, 0x4883, 0x78d3, 0xbf9d, 0x1, 0x0);
        gbc.writeMem(0x8d37, { 0x38, 0xe6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5288, gbc.sp());
        EXPECT(0x8d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8d37));
        EXPECT(0xe6, gbc.readMem(0x8d38));
        // 38 01DA
        gbc.setState(0xac3, 0xae0e, 0x99e0, 0xc948, 0xe161, 0x7861, 0x1, 0x1);
        gbc.writeMem(0xac3, { 0x38, 0x61 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xae0e, gbc.sp());
        EXPECT(0xac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01DB
        gbc.setState(0x31d0, 0x59aa, 0xf6d0, 0xbedc, 0x4f68, 0xa8ef, 0x1, 0x1);
        gbc.writeMem(0x31d0, { 0x38, 0x5d });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x59aa, gbc.sp());
        EXPECT(0x322f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01DC
        gbc.setState(0xc80d, 0xe695, 0xfc50, 0xe4ed, 0x2314, 0x4854, 0x1, 0x0);
        gbc.writeMem(0xc80d, { 0x38, 0xd9 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe695, gbc.sp());
        EXPECT(0xc7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc80d));
        EXPECT(0xd9, gbc.readMem(0xc80e));
        // 38 01DD
        gbc.setState(0x3bc3, 0x787e, 0x50, 0x2a0b, 0xfe9d, 0xeb17, 0x0, 0x0);
        gbc.writeMem(0x3bc3, { 0x38, 0x25 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x787e, gbc.sp());
        EXPECT(0x3bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01DE
        gbc.setState(0xac19, 0x7036, 0x4870, 0x2c67, 0x4fca, 0xd607, 0x1, 0x1);
        gbc.writeMem(0xac19, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7036, gbc.sp());
        EXPECT(0xac37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xac19));
        EXPECT(0x1c, gbc.readMem(0xac1a));
        // 38 01DF
        gbc.setState(0xf5a, 0x780f, 0xfa40, 0xafb2, 0x7073, 0xe074, 0x0, 0x0);
        gbc.writeMem(0xf5a, { 0x38, 0xb6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x780f, gbc.sp());
        EXPECT(0xf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01E0
        gbc.setState(0x91d7, 0x7468, 0xacb0, 0xa7cf, 0xa9a3, 0x7f0, 0x0, 0x0);
        gbc.writeMem(0x91d7, { 0x38, 0x2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7468, gbc.sp());
        EXPECT(0x91db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x91d7));
        EXPECT(0x2, gbc.readMem(0x91d8));
        // 38 01E3
        gbc.setState(0x63d8, 0x6a56, 0x6910, 0xe2fb, 0x8b09, 0xe6cf, 0x1, 0x1);
        gbc.writeMem(0x63d8, { 0x38, 0x80 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6a56, gbc.sp());
        EXPECT(0x635a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01E4
        gbc.setState(0x453b, 0xdd3e, 0x3fd0, 0xca7f, 0x8707, 0x449f, 0x1, 0x1);
        gbc.writeMem(0x453b, { 0x38, 0xeb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdd3e, gbc.sp());
        EXPECT(0x4528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01E5
        gbc.setState(0x2136, 0x76e5, 0x6b70, 0x90bd, 0x6ea5, 0x8348, 0x0, 0x1);
        gbc.writeMem(0x2136, { 0x38, 0xb1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x76e5, gbc.sp());
        EXPECT(0x20e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01E6
        gbc.setState(0xcd1a, 0x99d9, 0xd2e0, 0x870, 0x2545, 0xe67f, 0x1, 0x1);
        gbc.writeMem(0xcd1a, { 0x38, 0x14 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x99d9, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd1a));
        EXPECT(0x14, gbc.readMem(0xcd1b));
        // 38 01E7
        gbc.setState(0x2f4a, 0xfcf2, 0xccd0, 0x36bf, 0xa61c, 0xa44c, 0x0, 0x0);
        gbc.writeMem(0x2f4a, { 0x38, 0xfe });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfcf2, gbc.sp());
        EXPECT(0x2f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01E8
        gbc.setState(0xbc32, 0xd72c, 0x4ec0, 0x48, 0x7f23, 0x157f, 0x0, 0x1);
        gbc.writeMem(0xbc32, { 0x38, 0xf3 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbc32));
        EXPECT(0xf3, gbc.readMem(0xbc33));
        // 38 01E9
        gbc.setState(0x263f, 0x5cc7, 0x5be0, 0xd34f, 0x103c, 0x5b21, 0x1, 0x0);
        gbc.writeMem(0x263f, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5cc7, gbc.sp());
        EXPECT(0x2641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01EA
        gbc.setState(0x9f25, 0xd4cc, 0x6de0, 0x22f1, 0xb2fe, 0x45c, 0x1, 0x0);
        gbc.writeMem(0x9f25, { 0x38, 0x25 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0x9f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9f25));
        EXPECT(0x25, gbc.readMem(0x9f26));
        // 38 01EB
        gbc.setState(0xb7ca, 0x209, 0xe5a0, 0x46f5, 0xe52b, 0x7a9b, 0x0, 0x1);
        gbc.writeMem(0xb7ca, { 0x38, 0x93 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x209, gbc.sp());
        EXPECT(0xb7cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb7ca));
        EXPECT(0x93, gbc.readMem(0xb7cb));
        // 38 01EC
        gbc.setState(0xc28a, 0x46f, 0x98e0, 0x77e2, 0xdbac, 0x5a1e, 0x0, 0x0);
        gbc.writeMem(0xc28a, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0xc28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc28a));
        EXPECT(0xc7, gbc.readMem(0xc28b));
        // 38 01ED
        gbc.setState(0xb77c, 0x9563, 0x4650, 0xd585, 0x1fe, 0x3c2e, 0x0, 0x0);
        gbc.writeMem(0xb77c, { 0x38, 0xd5 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0xb753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb77c));
        EXPECT(0xd5, gbc.readMem(0xb77d));
        // 38 01EE
        gbc.setState(0xa01d, 0xd3a1, 0x83a0, 0x5da0, 0xdd13, 0xb576, 0x1, 0x1);
        gbc.writeMem(0xa01d, { 0x38, 0xd1 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd3a1, gbc.sp());
        EXPECT(0xa01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa01d));
        EXPECT(0xd1, gbc.readMem(0xa01e));
        // 38 01EF
        gbc.setState(0xd07e, 0x81bd, 0xd4c0, 0xb8d8, 0x1525, 0x8948, 0x0, 0x0);
        gbc.writeMem(0xd07e, { 0x38, 0x4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x81bd, gbc.sp());
        EXPECT(0xd080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd07e));
        EXPECT(0x4, gbc.readMem(0xd07f));
        // 38 01F1
        gbc.setState(0x4cda, 0x7c85, 0x4760, 0x4e4f, 0x133, 0x2136, 0x0, 0x0);
        gbc.writeMem(0x4cda, { 0x38, 0x4c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01F2
        gbc.setState(0xb8c3, 0x1e53, 0xbb80, 0x756b, 0x2404, 0xc2b1, 0x0, 0x0);
        gbc.writeMem(0xb8c3, { 0x38, 0xa2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1e53, gbc.sp());
        EXPECT(0xb8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb8c3));
        EXPECT(0xa2, gbc.readMem(0xb8c4));
        // 38 01F3
        gbc.setState(0xecd8, 0x6699, 0x990, 0x983f, 0xd53b, 0x7ee5, 0x0, 0x0);
        gbc.writeMem(0xecd8, { 0x38, 0xd5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0xecaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xecd8));
        EXPECT(0xd5, gbc.readMem(0xecd9));
        // 38 01F4
        gbc.setState(0x5039, 0xc8a4, 0x2430, 0xc45, 0xc4ac, 0xad19, 0x1, 0x1);
        gbc.writeMem(0x5039, { 0x38, 0xe6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x5021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01F5
        gbc.setState(0xb6d9, 0x78b, 0xafe0, 0x3f59, 0xc39c, 0xb04d, 0x0, 0x0);
        gbc.writeMem(0xb6d9, { 0x38, 0xa0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x78b, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb6d9));
        EXPECT(0xa0, gbc.readMem(0xb6da));
        // 38 01F6
        gbc.setState(0xd25f, 0x569d, 0xb910, 0x5346, 0xa18b, 0x8705, 0x0, 0x0);
        gbc.writeMem(0xd25f, { 0x38, 0x29 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0xd28a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd25f));
        EXPECT(0x29, gbc.readMem(0xd260));
        // 38 01F7
        gbc.setState(0x6bcf, 0xc625, 0x4c50, 0x3060, 0x8344, 0xdbef, 0x1, 0x0);
        gbc.writeMem(0x6bcf, { 0x38, 0x6d });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc625, gbc.sp());
        EXPECT(0x6c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01F8
        gbc.setState(0x75ec, 0x8fb6, 0xde00, 0xad9e, 0xb360, 0xd64, 0x0, 0x0);
        gbc.writeMem(0x75ec, { 0x38, 0x67 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8fb6, gbc.sp());
        EXPECT(0x75ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01F9
        gbc.setState(0xd53a, 0x5f1b, 0xf640, 0x92b6, 0xb40d, 0x5189, 0x1, 0x1);
        gbc.writeMem(0xd53a, { 0x38, 0x3e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0xd53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd53a));
        EXPECT(0x3e, gbc.readMem(0xd53b));
        // 38 01FA
        gbc.setState(0x91c1, 0x5a43, 0x4c0, 0x447f, 0x7301, 0x4b16, 0x0, 0x1);
        gbc.writeMem(0x91c1, { 0x38, 0xa5 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5a43, gbc.sp());
        EXPECT(0x91c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x91c1));
        EXPECT(0xa5, gbc.readMem(0x91c2));
        // 38 01FB
        gbc.setState(0x7e9f, 0x7634, 0x2000, 0x7bc1, 0xbd99, 0xac7c, 0x0, 0x0);
        gbc.writeMem(0x7e9f, { 0x38, 0x28 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7634, gbc.sp());
        EXPECT(0x7ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 01FC
        gbc.setState(0x96ea, 0xb627, 0xbe70, 0x638, 0xfc40, 0xf083, 0x1, 0x0);
        gbc.writeMem(0x96ea, { 0x38, 0xa7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb627, gbc.sp());
        EXPECT(0x9693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x96ea));
        EXPECT(0xa7, gbc.readMem(0x96eb));
        // 38 01FE
        gbc.setState(0x2a82, 0xc9f, 0x31d0, 0xe2c6, 0xfa0c, 0xd933, 0x0, 0x1);
        gbc.writeMem(0x2a82, { 0x38, 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc9f, gbc.sp());
        EXPECT(0x2ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 01FF
        gbc.setState(0x2cdd, 0x349a, 0xf3a0, 0x6db, 0xc06e, 0xf31e, 0x1, 0x1);
        gbc.writeMem(0x2cdd, { 0x38, 0x28 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x349a, gbc.sp());
        EXPECT(0x2cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0200
        gbc.setState(0xe0e9, 0xf0a8, 0xcc60, 0x11f2, 0x414e, 0x6ad2, 0x0, 0x1);
        gbc.writeMem(0xe0e9, { 0x38, 0xf0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf0a8, gbc.sp());
        EXPECT(0xe0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe0e9));
        EXPECT(0xf0, gbc.readMem(0xe0ea));
        // 38 0201
        gbc.setState(0x2d5e, 0xa83f, 0x6e80, 0x7288, 0xe7fd, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0x2d5e, { 0x38, 0xad });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa83f, gbc.sp());
        EXPECT(0x2d60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0202
        gbc.setState(0x934d, 0x7796, 0x10f0, 0x7398, 0x13fd, 0x4c7f, 0x1, 0x1);
        gbc.writeMem(0x934d, { 0x38, 0xa5 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7796, gbc.sp());
        EXPECT(0x92f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x934d));
        EXPECT(0xa5, gbc.readMem(0x934e));
        // 38 0203
        gbc.setState(0x5db6, 0x322, 0x8b90, 0xb12f, 0x169a, 0xa148, 0x0, 0x0);
        gbc.writeMem(0x5db6, { 0x38, 0xfa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x322, gbc.sp());
        EXPECT(0x5db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0204
        gbc.setState(0x1f3f, 0x8f78, 0xe4e0, 0x6efd, 0x3092, 0x4a92, 0x1, 0x0);
        gbc.writeMem(0x1f3f, { 0x38, 0xd8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8f78, gbc.sp());
        EXPECT(0x1f41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0205
        gbc.setState(0xa812, 0xc503, 0xcd70, 0x34d9, 0x911d, 0x6a85, 0x1, 0x1);
        gbc.writeMem(0xa812, { 0x38, 0x52 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc503, gbc.sp());
        EXPECT(0xa866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa812));
        EXPECT(0x52, gbc.readMem(0xa813));
        // 38 0206
        gbc.setState(0x1ffb, 0x8cca, 0x59f0, 0x6ce6, 0x5bb9, 0x739d, 0x0, 0x0);
        gbc.writeMem(0x1ffb, { 0x38, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8cca, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0207
        gbc.setState(0x40c6, 0x9299, 0x6ad0, 0xad0d, 0xfa82, 0xfbc5, 0x0, 0x0);
        gbc.writeMem(0x40c6, { 0x38, 0x63 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9299, gbc.sp());
        EXPECT(0x412b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0208
        gbc.setState(0x6c72, 0x2af7, 0x8830, 0x77c2, 0x41da, 0x5e86, 0x1, 0x1);
        gbc.writeMem(0x6c72, { 0x38, 0xed });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2af7, gbc.sp());
        EXPECT(0x6c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0209
        gbc.setState(0xc54c, 0x7b4e, 0xe330, 0xd61b, 0x9012, 0xb355, 0x0, 0x1);
        gbc.writeMem(0xc54c, { 0x38, 0x4c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7b4e, gbc.sp());
        EXPECT(0xc59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc54c));
        EXPECT(0x4c, gbc.readMem(0xc54d));
        // 38 020B
        gbc.setState(0x8996, 0x322a, 0x9bd0, 0x6461, 0x1d8d, 0x96b4, 0x1, 0x0);
        gbc.writeMem(0x8996, { 0x38, 0xda });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x322a, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8996));
        EXPECT(0xda, gbc.readMem(0x8997));
        // 38 020C
        gbc.setState(0x2475, 0x1c0d, 0x1890, 0x5260, 0x474e, 0x7b8e, 0x0, 0x1);
        gbc.writeMem(0x2475, { 0x38, 0xa4 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1c0d, gbc.sp());
        EXPECT(0x241b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 020D
        gbc.setState(0x88dd, 0xc086, 0xa3d0, 0xb839, 0x3273, 0x775a, 0x0, 0x1);
        gbc.writeMem(0x88dd, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc086, gbc.sp());
        EXPECT(0x892e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x88dd));
        EXPECT(0x4f, gbc.readMem(0x88de));
        // 38 020E
        gbc.setState(0x3ee1, 0x15be, 0x9960, 0x1ebc, 0x920c, 0x2cf4, 0x1, 0x1);
        gbc.writeMem(0x3ee1, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x15be, gbc.sp());
        EXPECT(0x3ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0210
        gbc.setState(0x104b, 0x4851, 0x5350, 0x5b0b, 0x1ab2, 0x8e26, 0x1, 0x0);
        gbc.writeMem(0x104b, { 0x38, 0x80 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4851, gbc.sp());
        EXPECT(0xfcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0211
        gbc.setState(0xec1f, 0xabc7, 0x9050, 0x1b77, 0x2be9, 0x1c7b, 0x0, 0x0);
        gbc.writeMem(0xec1f, { 0x38, 0xcb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xabc7, gbc.sp());
        EXPECT(0xebec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xec1f));
        EXPECT(0xcb, gbc.readMem(0xec20));
        // 38 0212
        gbc.setState(0x6a83, 0x7e6, 0x1ee0, 0x506a, 0x7a93, 0x3fa, 0x1, 0x1);
        gbc.writeMem(0x6a83, { 0x38, 0x17 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7e6, gbc.sp());
        EXPECT(0x6a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0213
        gbc.setState(0xde27, 0x33c4, 0xef10, 0x236, 0xf719, 0x306b, 0x0, 0x1);
        gbc.writeMem(0xde27, { 0x38, 0x2f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x33c4, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xde27));
        EXPECT(0x2f, gbc.readMem(0xde28));
        // 38 0214
        gbc.setState(0x45fb, 0x9c6, 0x2c20, 0x9980, 0xb15, 0x3f85, 0x0, 0x0);
        gbc.writeMem(0x45fb, { 0x38, 0xd3 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9c6, gbc.sp());
        EXPECT(0x45fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0215
        gbc.setState(0x4ab1, 0x863b, 0x33d0, 0xa468, 0x94d9, 0xe6c7, 0x0, 0x1);
        gbc.writeMem(0x4ab1, { 0x38, 0x48 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x863b, gbc.sp());
        EXPECT(0x4afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0216
        gbc.setState(0xa2be, 0x304e, 0x51f0, 0x6f3b, 0x6627, 0x26ba, 0x1, 0x1);
        gbc.writeMem(0xa2be, { 0x38, 0x8d });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x304e, gbc.sp());
        EXPECT(0xa24d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa2be));
        EXPECT(0x8d, gbc.readMem(0xa2bf));
        // 38 0217
        gbc.setState(0xc94b, 0x3d22, 0xe0, 0xc71d, 0xc36c, 0x9b4d, 0x1, 0x1);
        gbc.writeMem(0xc94b, { 0x38, 0x92 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3d22, gbc.sp());
        EXPECT(0xc94d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc94b));
        EXPECT(0x92, gbc.readMem(0xc94c));
        // 38 0218
        gbc.setState(0xcbdf, 0x5d40, 0x1df0, 0x3b9c, 0xbec9, 0xeb3f, 0x1, 0x0);
        gbc.writeMem(0xcbdf, { 0x38, 0xa3 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5d40, gbc.sp());
        EXPECT(0xcb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcbdf));
        EXPECT(0xa3, gbc.readMem(0xcbe0));
        // 38 0219
        gbc.setState(0x207c, 0x4b55, 0xa360, 0x73e6, 0x1f92, 0x700f, 0x0, 0x0);
        gbc.writeMem(0x207c, { 0x38, 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4b55, gbc.sp());
        EXPECT(0x207e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 021B
        gbc.setState(0x4ebf, 0xb831, 0x3690, 0x7113, 0x4061, 0x840b, 0x0, 0x1);
        gbc.writeMem(0x4ebf, { 0x38, 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb831, gbc.sp());
        EXPECT(0x4efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 021C
        gbc.setState(0x9bf8, 0xcb4e, 0xf380, 0xdfb3, 0xb183, 0x2301, 0x1, 0x0);
        gbc.writeMem(0x9bf8, { 0x38, 0x99 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0x9bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9bf8));
        EXPECT(0x99, gbc.readMem(0x9bf9));
        // 38 021D
        gbc.setState(0x8b1d, 0xf1, 0xbf40, 0x2ddf, 0x3819, 0x7cd0, 0x1, 0x1);
        gbc.writeMem(0x8b1d, { 0x38, 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf1, gbc.sp());
        EXPECT(0x8b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8b1d));
        EXPECT(0x15, gbc.readMem(0x8b1e));
        // 38 021E
        gbc.setState(0xa4b7, 0x426a, 0xdc70, 0x1f49, 0xf680, 0x5f1, 0x1, 0x0);
        gbc.writeMem(0xa4b7, { 0x38, 0x3 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x426a, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa4b7));
        EXPECT(0x3, gbc.readMem(0xa4b8));
        // 38 021F
        gbc.setState(0x1645, 0x4f85, 0x80b0, 0x953d, 0x2b36, 0x60a7, 0x0, 0x0);
        gbc.writeMem(0x1645, { 0x38, 0x33 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4f85, gbc.sp());
        EXPECT(0x167a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0220
        gbc.setState(0xd1d6, 0x8562, 0xb370, 0x1fa1, 0xaa14, 0xb74b, 0x0, 0x0);
        gbc.writeMem(0xd1d6, { 0x38, 0x7f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8562, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd1d6));
        EXPECT(0x7f, gbc.readMem(0xd1d7));
        // 38 0221
        gbc.setState(0x1a8, 0x67d2, 0xca30, 0x8180, 0xf34d, 0x7f86, 0x1, 0x1);
        gbc.writeMem(0x1a8, { 0x38, 0xe2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x67d2, gbc.sp());
        EXPECT(0x18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0222
        gbc.setState(0x793d, 0x437e, 0xb260, 0xf88e, 0x1a37, 0xab3c, 0x0, 0x1);
        gbc.writeMem(0x793d, { 0x38, 0x78 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x437e, gbc.sp());
        EXPECT(0x793f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0223
        gbc.setState(0xc791, 0xdd02, 0x4560, 0xa8ff, 0x9f90, 0xf5d4, 0x0, 0x1);
        gbc.writeMem(0xc791, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdd02, gbc.sp());
        EXPECT(0xc793, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc791));
        EXPECT(0x39, gbc.readMem(0xc792));
        // 38 0224
        gbc.setState(0xd58b, 0x2dcf, 0xee10, 0x84a1, 0x22e9, 0x8d2, 0x1, 0x0);
        gbc.writeMem(0xd58b, { 0x38, 0x7a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd58b));
        EXPECT(0x7a, gbc.readMem(0xd58c));
        // 38 0225
        gbc.setState(0x5486, 0x2ba, 0xec90, 0xf2ea, 0x5171, 0xdf3c, 0x1, 0x0);
        gbc.writeMem(0x5486, { 0x38, 0x74 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2ba, gbc.sp());
        EXPECT(0x54fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0226
        gbc.setState(0xef0c, 0xe8e7, 0xc630, 0x17b9, 0x36fd, 0x8523, 0x1, 0x1);
        gbc.writeMem(0xef0c, { 0x38, 0x5a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe8e7, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xef0c));
        EXPECT(0x5a, gbc.readMem(0xef0d));
        // 38 0227
        gbc.setState(0x96d2, 0x8d26, 0xf510, 0x193a, 0xe407, 0x5e9c, 0x1, 0x1);
        gbc.writeMem(0x96d2, { 0x38, 0xb5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8d26, gbc.sp());
        EXPECT(0x9689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x96d2));
        EXPECT(0xb5, gbc.readMem(0x96d3));
        // 38 0228
        gbc.setState(0xc487, 0xda54, 0xdb00, 0x2a3b, 0x24de, 0xb634, 0x0, 0x1);
        gbc.writeMem(0xc487, { 0x38, 0xae });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xda54, gbc.sp());
        EXPECT(0xc489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc487));
        EXPECT(0xae, gbc.readMem(0xc488));
        // 38 0229
        gbc.setState(0x9e81, 0xb511, 0x1d40, 0x73c, 0x196, 0xac73, 0x1, 0x0);
        gbc.writeMem(0x9e81, { 0x38, 0xb5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb511, gbc.sp());
        EXPECT(0x9e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9e81));
        EXPECT(0xb5, gbc.readMem(0x9e82));
        // 38 022A
        gbc.setState(0x3fb3, 0x6d40, 0xad40, 0xf01, 0xe610, 0xccb0, 0x0, 0x0);
        gbc.writeMem(0x3fb3, { 0x38, 0x5f });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d40, gbc.sp());
        EXPECT(0x3fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 022B
        gbc.setState(0x8bda, 0xb450, 0x630, 0x78ff, 0xfb0b, 0x1ea6, 0x1, 0x0);
        gbc.writeMem(0x8bda, { 0x38, 0xdc });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x8bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8bda));
        EXPECT(0xdc, gbc.readMem(0x8bdb));
        // 38 022D
        gbc.setState(0x1c69, 0x832, 0xb8b0, 0x5d19, 0xb97, 0x195a, 0x0, 0x0);
        gbc.writeMem(0x1c69, { 0x38, 0x25 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x832, gbc.sp());
        EXPECT(0x1c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 022E
        gbc.setState(0x6909, 0x7c95, 0xebc0, 0x7b37, 0x16d2, 0x6859, 0x1, 0x1);
        gbc.writeMem(0x6909, { 0x38, 0xdf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7c95, gbc.sp());
        EXPECT(0x690b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 022F
        gbc.setState(0x9a4e, 0x518, 0x5fb0, 0xd538, 0xf282, 0x689a, 0x1, 0x1);
        gbc.writeMem(0x9a4e, { 0x38, 0xad });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x518, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9a4e));
        EXPECT(0xad, gbc.readMem(0x9a4f));
        // 38 0231
        gbc.setState(0x46e4, 0xb57d, 0x6e0, 0x2c8e, 0x5fb7, 0x341c, 0x1, 0x1);
        gbc.writeMem(0x46e4, { 0x38, 0x4e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb57d, gbc.sp());
        EXPECT(0x46e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0232
        gbc.setState(0x406f, 0xfc86, 0x7350, 0x5648, 0x2ed5, 0xc33, 0x0, 0x0);
        gbc.writeMem(0x406f, { 0x38, 0x9b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfc86, gbc.sp());
        EXPECT(0x400c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0233
        gbc.setState(0xc5c, 0x516e, 0x97d0, 0x44d8, 0x2f90, 0xd838, 0x0, 0x1);
        gbc.writeMem(0xc5c, { 0x38, 0x3f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x516e, gbc.sp());
        EXPECT(0xc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0234
        gbc.setState(0x1953, 0xebf0, 0x9360, 0xfedd, 0xb515, 0x45ee, 0x0, 0x1);
        gbc.writeMem(0x1953, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xebf0, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0235
        gbc.setState(0xe9b9, 0x3b5f, 0x9070, 0xe3ed, 0x69ce, 0x4985, 0x1, 0x1);
        gbc.writeMem(0xe9b9, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3b5f, gbc.sp());
        EXPECT(0xea19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe9b9));
        EXPECT(0x5e, gbc.readMem(0xe9ba));
        // 38 0236
        gbc.setState(0xa892, 0xe973, 0xd6a0, 0x547c, 0x4ada, 0x8c95, 0x0, 0x0);
        gbc.writeMem(0xa892, { 0x38, 0x67 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0xa894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa892));
        EXPECT(0x67, gbc.readMem(0xa893));
        // 38 0237
        gbc.setState(0x7071, 0xbece, 0x8be0, 0x5a68, 0x49, 0x571a, 0x1, 0x0);
        gbc.writeMem(0x7071, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbece, gbc.sp());
        EXPECT(0x7073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0238
        gbc.setState(0x1640, 0x16fb, 0x5510, 0x1dd8, 0x6819, 0x9e27, 0x0, 0x0);
        gbc.writeMem(0x1640, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x16fb, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0239
        gbc.setState(0xa4d, 0xfd, 0xacc0, 0x81d0, 0xc6c7, 0xc06f, 0x1, 0x0);
        gbc.writeMem(0xa4d, { 0x38, 0xbc });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfd, gbc.sp());
        EXPECT(0xa4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 023A
        gbc.setState(0x57c1, 0x50b6, 0x4550, 0x15f1, 0x723a, 0xc58f, 0x0, 0x0);
        gbc.writeMem(0x57c1, { 0x38, 0x3a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x50b6, gbc.sp());
        EXPECT(0x57fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 023B
        gbc.setState(0x5b14, 0x9101, 0x7410, 0x14d9, 0x4a, 0x214d, 0x1, 0x0);
        gbc.writeMem(0x5b14, { 0x38, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9101, gbc.sp());
        EXPECT(0x5b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 023C
        gbc.setState(0x1b25, 0x5e75, 0xe730, 0xd0f4, 0x1b5b, 0x2b8b, 0x1, 0x1);
        gbc.writeMem(0x1b25, { 0x38, 0xd4 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0x1afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 023D
        gbc.setState(0x6e31, 0xea8a, 0xfb10, 0xa464, 0x5dda, 0xfdd9, 0x0, 0x1);
        gbc.writeMem(0x6e31, { 0x38, 0x5b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x6e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 023E
        gbc.setState(0xe00b, 0x81e1, 0x4300, 0x3af0, 0x7da6, 0xf7db, 0x0, 0x1);
        gbc.writeMem(0xe00b, { 0x38, 0xd8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x81e1, gbc.sp());
        EXPECT(0xe00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe00b));
        EXPECT(0xd8, gbc.readMem(0xe00c));
        // 38 023F
        gbc.setState(0x2e81, 0xf506, 0x3480, 0x392f, 0xf84d, 0x593a, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf506, gbc.sp());
        EXPECT(0x2e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0240
        gbc.setState(0x4e08, 0x4554, 0xbf30, 0x68cf, 0x7fe3, 0x7bde, 0x0, 0x0);
        gbc.writeMem(0x4e08, { 0x38, 0x24 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4554, gbc.sp());
        EXPECT(0x4e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0241
        gbc.setState(0x82f, 0x76ad, 0xd750, 0x3693, 0x9a20, 0x749d, 0x0, 0x1);
        gbc.writeMem(0x82f, { 0x38, 0x29 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x76ad, gbc.sp());
        EXPECT(0x85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0242
        gbc.setState(0x65d1, 0x70dd, 0x6380, 0x9e60, 0xecc6, 0xe0fd, 0x0, 0x1);
        gbc.writeMem(0x65d1, { 0x38, 0x39 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x70dd, gbc.sp());
        EXPECT(0x65d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0243
        gbc.setState(0x91f2, 0x4342, 0x4f00, 0x81a1, 0xa79c, 0x38cc, 0x0, 0x1);
        gbc.writeMem(0x91f2, { 0x38, 0xaa });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4342, gbc.sp());
        EXPECT(0x91f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x91f2));
        EXPECT(0xaa, gbc.readMem(0x91f3));
        // 38 0244
        gbc.setState(0x5312, 0xfff8, 0x41e0, 0xae8b, 0xd325, 0xf916, 0x1, 0x0);
        gbc.writeMem(0x5312, { 0x38, 0xf8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfff8, gbc.sp());
        EXPECT(0x5314, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0245
        gbc.setState(0x23b1, 0x2a9c, 0x950, 0x739b, 0x68d9, 0x3ff5, 0x1, 0x1);
        gbc.writeMem(0x23b1, { 0x38, 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2a9c, gbc.sp());
        EXPECT(0x2418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0246
        gbc.setState(0xbaf3, 0xc4e8, 0x3ef0, 0xb83b, 0x3990, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0xbaf3, { 0x38, 0x13 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc4e8, gbc.sp());
        EXPECT(0xbb08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbaf3));
        EXPECT(0x13, gbc.readMem(0xbaf4));
        // 38 0247
        gbc.setState(0xa67e, 0x6edf, 0x9d20, 0x95d2, 0x2a7a, 0x3da9, 0x0, 0x1);
        gbc.writeMem(0xa67e, { 0x38, 0x8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6edf, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa67e));
        EXPECT(0x8, gbc.readMem(0xa67f));
        // 38 0248
        gbc.setState(0xa1ad, 0xa67b, 0x8b20, 0xd832, 0xbca1, 0x8df3, 0x0, 0x1);
        gbc.writeMem(0xa1ad, { 0x38, 0xd1 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa67b, gbc.sp());
        EXPECT(0xa1af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa1ad));
        EXPECT(0xd1, gbc.readMem(0xa1ae));
        // 38 0249
        gbc.setState(0x920f, 0x7e2d, 0xfbd0, 0x24f5, 0x4490, 0x1e49, 0x0, 0x0);
        gbc.writeMem(0x920f, { 0x38, 0xf8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7e2d, gbc.sp());
        EXPECT(0x9209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x920f));
        EXPECT(0xf8, gbc.readMem(0x9210));
        // 38 024A
        gbc.setState(0x8231, 0x8e9b, 0xe350, 0xa004, 0x9ba7, 0x3efd, 0x0, 0x0);
        gbc.writeMem(0x8231, { 0x38, 0x83 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8e9b, gbc.sp());
        EXPECT(0x81b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8231));
        EXPECT(0x83, gbc.readMem(0x8232));
        // 38 024B
        gbc.setState(0x6b50, 0x87f8, 0x61c0, 0xdf53, 0x4bac, 0xe2c9, 0x0, 0x0);
        gbc.writeMem(0x6b50, { 0x38, 0xb5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x87f8, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 024C
        gbc.setState(0xd5e5, 0x2aa3, 0x31f0, 0x1a67, 0x3279, 0x8440, 0x1, 0x1);
        gbc.writeMem(0xd5e5, { 0x38, 0x33 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2aa3, gbc.sp());
        EXPECT(0xd61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd5e5));
        EXPECT(0x33, gbc.readMem(0xd5e6));
        // 38 024D
        gbc.setState(0xaab9, 0xef13, 0xb5a0, 0x253e, 0x289a, 0xca64, 0x0, 0x0);
        gbc.writeMem(0xaab9, { 0x38, 0x56 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xef13, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaab9));
        EXPECT(0x56, gbc.readMem(0xaaba));
        // 38 024E
        gbc.setState(0x12d6, 0x6ac7, 0xf200, 0x6ef6, 0x1ecb, 0x9bfd, 0x0, 0x1);
        gbc.writeMem(0x12d6, { 0x38, 0x33 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6ac7, gbc.sp());
        EXPECT(0x12d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 024F
        gbc.setState(0x5334, 0x128a, 0x5040, 0xc236, 0x478b, 0xd420, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0x38, 0x42 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x128a, gbc.sp());
        EXPECT(0x5336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0250
        gbc.setState(0x5c70, 0xd7ea, 0x7290, 0x3171, 0x4215, 0x1348, 0x1, 0x1);
        gbc.writeMem(0x5c70, { 0x38, 0xc2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd7ea, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0251
        gbc.setState(0xdedf, 0xc06c, 0xc640, 0x3928, 0xc109, 0xe341, 0x0, 0x1);
        gbc.writeMem(0xdedf, { 0x38, 0xf8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc06c, gbc.sp());
        EXPECT(0xdee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdedf));
        EXPECT(0xf8, gbc.readMem(0xdee0));
        // 38 0252
        gbc.setState(0x4068, 0x452d, 0x2d40, 0xcb26, 0xa3c0, 0xad5f, 0x0, 0x1);
        gbc.writeMem(0x4068, { 0x38, 0xbb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0x406a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0253
        gbc.setState(0xbb5e, 0xf988, 0x7030, 0xee4c, 0x9a87, 0x2c08, 0x0, 0x0);
        gbc.writeMem(0xbb5e, { 0x38, 0x31 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf988, gbc.sp());
        EXPECT(0xbb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbb5e));
        EXPECT(0x31, gbc.readMem(0xbb5f));
        // 38 0254
        gbc.setState(0x6efd, 0xd7d6, 0xabc0, 0xc631, 0x53d, 0x1ccf, 0x1, 0x1);
        gbc.writeMem(0x6efd, { 0x38, 0xfd });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd7d6, gbc.sp());
        EXPECT(0x6eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0255
        gbc.setState(0xd350, 0x7647, 0xe70, 0xa2f3, 0x7e3c, 0x1dea, 0x0, 0x0);
        gbc.writeMem(0xd350, { 0x38, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7647, gbc.sp());
        EXPECT(0xd35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd350));
        EXPECT(0x8, gbc.readMem(0xd351));
        // 38 0256
        gbc.setState(0xd63b, 0x7baf, 0x67a0, 0x134c, 0xac8d, 0x996e, 0x0, 0x0);
        gbc.writeMem(0xd63b, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0xd63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd63b));
        EXPECT(0x9a, gbc.readMem(0xd63c));
        // 38 0257
        gbc.setState(0x1244, 0x49d5, 0xa100, 0xe17e, 0x16c3, 0x9c5e, 0x1, 0x1);
        gbc.writeMem(0x1244, { 0x38, 0xed });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x49d5, gbc.sp());
        EXPECT(0x1246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0258
        gbc.setState(0x401b, 0xf084, 0xa080, 0x5999, 0x94c0, 0xf880, 0x1, 0x1);
        gbc.writeMem(0x401b, { 0x38, 0x2f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf084, gbc.sp());
        EXPECT(0x401d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0259
        gbc.setState(0x144d, 0x4a12, 0x31b0, 0x4a57, 0x392f, 0xbc0b, 0x1, 0x0);
        gbc.writeMem(0x144d, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4a12, gbc.sp());
        EXPECT(0x14cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 025A
        gbc.setState(0x5800, 0x29a6, 0x5e90, 0x743c, 0xa589, 0x1cff, 0x0, 0x0);
        gbc.writeMem(0x5800, { 0x38, 0xa3 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x29a6, gbc.sp());
        EXPECT(0x57a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 025B
        gbc.setState(0x52e5, 0x5c91, 0x7250, 0x14a1, 0x79fa, 0xaf6d, 0x1, 0x1);
        gbc.writeMem(0x52e5, { 0x38, 0xcf });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5c91, gbc.sp());
        EXPECT(0x52b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 025C
        gbc.setState(0x2040, 0x56e9, 0xdf0, 0x3dc3, 0xf7cf, 0x1968, 0x1, 0x1);
        gbc.writeMem(0x2040, { 0x38, 0x4e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x56e9, gbc.sp());
        EXPECT(0x2090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 025D
        gbc.setState(0x3b75, 0x4032, 0x93f0, 0xf7a4, 0x7512, 0xcf98, 0x0, 0x1);
        gbc.writeMem(0x3b75, { 0x38, 0xfe });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4032, gbc.sp());
        EXPECT(0x3b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 025E
        gbc.setState(0x880f, 0xb7a, 0xce20, 0x239b, 0xadcc, 0x8a94, 0x1, 0x1);
        gbc.writeMem(0x880f, { 0x38, 0x84 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0x8811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x880f));
        EXPECT(0x84, gbc.readMem(0x8810));
        // 38 025F
        gbc.setState(0x2b58, 0xf80, 0x3f30, 0xe60c, 0x607b, 0xd493, 0x0, 0x0);
        gbc.writeMem(0x2b58, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf80, gbc.sp());
        EXPECT(0x2b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0260
        gbc.setState(0x8650, 0xcb82, 0xe610, 0xee06, 0xd491, 0x6843, 0x1, 0x0);
        gbc.writeMem(0x8650, { 0x38, 0x55 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0x86a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8650));
        EXPECT(0x55, gbc.readMem(0x8651));
        // 38 0261
        gbc.setState(0xb230, 0x5b50, 0xb4a0, 0x69e5, 0xea79, 0x598a, 0x1, 0x0);
        gbc.writeMem(0xb230, { 0x38, 0x7c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0xb232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb230));
        EXPECT(0x7c, gbc.readMem(0xb231));
        // 38 0262
        gbc.setState(0xbb96, 0x5f62, 0xc370, 0xd502, 0x2d42, 0xc133, 0x0, 0x0);
        gbc.writeMem(0xbb96, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5f62, gbc.sp());
        EXPECT(0xbbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbb96));
        EXPECT(0x2a, gbc.readMem(0xbb97));
        // 38 0263
        gbc.setState(0x5043, 0xa0eb, 0x12f0, 0x4327, 0x1ad0, 0x3e4f, 0x1, 0x0);
        gbc.writeMem(0x5043, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0x5061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0264
        gbc.setState(0x453, 0x2107, 0xdfb0, 0x4dbf, 0xbea9, 0x626b, 0x1, 0x1);
        gbc.writeMem(0x453, { 0x38, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2107, gbc.sp());
        EXPECT(0x499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0265
        gbc.setState(0x9225, 0xf2c1, 0xdab0, 0xeab0, 0xaab9, 0x1583, 0x0, 0x0);
        gbc.writeMem(0x9225, { 0x38, 0x21 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf2c1, gbc.sp());
        EXPECT(0x9248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9225));
        EXPECT(0x21, gbc.readMem(0x9226));
        // 38 0266
        gbc.setState(0x4034, 0xc5b4, 0xc100, 0x9914, 0xff3e, 0x774d, 0x0, 0x1);
        gbc.writeMem(0x4034, { 0x38, 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc5b4, gbc.sp());
        EXPECT(0x4036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0267
        gbc.setState(0x76f1, 0x1ea4, 0x1860, 0xcbe6, 0x54ca, 0x237a, 0x1, 0x1);
        gbc.writeMem(0x76f1, { 0x38, 0x5f });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1ea4, gbc.sp());
        EXPECT(0x76f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0268
        gbc.setState(0xa76a, 0x26cf, 0x56b0, 0x9498, 0x8954, 0xd4b7, 0x0, 0x0);
        gbc.writeMem(0xa76a, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x26cf, gbc.sp());
        EXPECT(0xa6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa76a));
        EXPECT(0x88, gbc.readMem(0xa76b));
        // 38 0269
        gbc.setState(0x1fc9, 0x9467, 0x2be0, 0x64ff, 0xccce, 0xe80, 0x0, 0x1);
        gbc.writeMem(0x1fc9, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 026A
        gbc.setState(0x87f7, 0xaf89, 0xba90, 0xe90a, 0x91fa, 0x4dce, 0x0, 0x0);
        gbc.writeMem(0x87f7, { 0x38, 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaf89, gbc.sp());
        EXPECT(0x8849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x87f7));
        EXPECT(0x50, gbc.readMem(0x87f8));
        // 38 026B
        gbc.setState(0x8b12, 0x89b5, 0x9b20, 0x7580, 0xc146, 0xb8e0, 0x0, 0x0);
        gbc.writeMem(0x8b12, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0x8b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8b12));
        EXPECT(0xc7, gbc.readMem(0x8b13));
        // 38 026C
        gbc.setState(0xa37, 0xf8b5, 0x7b0, 0xd06, 0x4c32, 0x80c4, 0x1, 0x1);
        gbc.writeMem(0xa37, { 0x38, 0xd0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf8b5, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 026D
        gbc.setState(0x7a32, 0xf120, 0x7ef0, 0x118f, 0xd182, 0x88ac, 0x0, 0x0);
        gbc.writeMem(0x7a32, { 0x38, 0x3e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf120, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 026E
        gbc.setState(0x7d55, 0x2492, 0xde70, 0x5a6, 0xeea6, 0x3f8f, 0x1, 0x1);
        gbc.writeMem(0x7d55, { 0x38, 0x79 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2492, gbc.sp());
        EXPECT(0x7dd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 026F
        gbc.setState(0x437d, 0x11d6, 0x97c0, 0x5d24, 0x9d9c, 0x2ae9, 0x0, 0x0);
        gbc.writeMem(0x437d, { 0x38, 0x8a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x11d6, gbc.sp());
        EXPECT(0x437f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0271
        gbc.setState(0x5d5d, 0xe8a8, 0x9180, 0xa9ef, 0x75f1, 0xe1a0, 0x1, 0x0);
        gbc.writeMem(0x5d5d, { 0x38, 0x2e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0x5d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0273
        gbc.setState(0x82b3, 0xe832, 0xe380, 0x6e78, 0x42bc, 0xb23, 0x1, 0x1);
        gbc.writeMem(0x82b3, { 0x38, 0x59 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe832, gbc.sp());
        EXPECT(0x82b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x82b3));
        EXPECT(0x59, gbc.readMem(0x82b4));
        // 38 0274
        gbc.setState(0x5dc2, 0x48d2, 0xdf20, 0x40cf, 0xb0bb, 0x982a, 0x0, 0x0);
        gbc.writeMem(0x5dc2, { 0x38, 0x63 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x48d2, gbc.sp());
        EXPECT(0x5dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0275
        gbc.setState(0xcef8, 0x1920, 0x6bb0, 0x321b, 0x6f07, 0x50f3, 0x1, 0x1);
        gbc.writeMem(0xcef8, { 0x38, 0x59 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1920, gbc.sp());
        EXPECT(0xcf53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcef8));
        EXPECT(0x59, gbc.readMem(0xcef9));
        // 38 0276
        gbc.setState(0x4c94, 0x4b23, 0x16b0, 0xd420, 0x3157, 0xb4b, 0x0, 0x1);
        gbc.writeMem(0x4c94, { 0x38, 0xe1 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4b23, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0277
        gbc.setState(0xa6de, 0x1932, 0x43b0, 0xe689, 0x501, 0xa76c, 0x0, 0x1);
        gbc.writeMem(0xa6de, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0xa6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa6de));
        EXPECT(0xc7, gbc.readMem(0xa6df));
        // 38 0278
        gbc.setState(0x1ad7, 0x6fb1, 0xc090, 0x5092, 0x6786, 0xbc61, 0x0, 0x1);
        gbc.writeMem(0x1ad7, { 0x38, 0xac });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6fb1, gbc.sp());
        EXPECT(0x1a85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0279
        gbc.setState(0x3d6c, 0x7e3f, 0xf120, 0x9283, 0x61dd, 0x7d78, 0x0, 0x1);
        gbc.writeMem(0x3d6c, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7e3f, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 027A
        gbc.setState(0x4ae1, 0x15bd, 0x4d30, 0x4338, 0xbb63, 0x5d0b, 0x1, 0x0);
        gbc.writeMem(0x4ae1, { 0x38, 0xfb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x15bd, gbc.sp());
        EXPECT(0x4ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 027B
        gbc.setState(0x4b13, 0xa8c, 0x4b60, 0x5542, 0x82d2, 0xac80, 0x0, 0x1);
        gbc.writeMem(0x4b13, { 0x38, 0x19 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa8c, gbc.sp());
        EXPECT(0x4b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 027C
        gbc.setState(0xe1e6, 0x5ff9, 0xb4c0, 0x4c09, 0x9e36, 0xc06c, 0x1, 0x0);
        gbc.writeMem(0xe1e6, { 0x38, 0x48 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5ff9, gbc.sp());
        EXPECT(0xe1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe1e6));
        EXPECT(0x48, gbc.readMem(0xe1e7));
        // 38 027D
        gbc.setState(0xdef7, 0x412a, 0x5390, 0x43b3, 0x833, 0x4590, 0x1, 0x0);
        gbc.writeMem(0xdef7, { 0x38, 0x36 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x412a, gbc.sp());
        EXPECT(0xdf2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdef7));
        EXPECT(0x36, gbc.readMem(0xdef8));
        // 38 027F
        gbc.setState(0x8eea, 0x3013, 0xfd10, 0x72d9, 0xda9f, 0xe57b, 0x1, 0x1);
        gbc.writeMem(0x8eea, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3013, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8eea));
        EXPECT(0x60, gbc.readMem(0x8eeb));
        // 38 0280
        gbc.setState(0xe8fb, 0xa773, 0x4f70, 0xba60, 0x5599, 0x7fea, 0x1, 0x0);
        gbc.writeMem(0xe8fb, { 0x38, 0xe9 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa773, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe8fb));
        EXPECT(0xe9, gbc.readMem(0xe8fc));
        // 38 0281
        gbc.setState(0x35c7, 0x462e, 0xcf10, 0x96f3, 0x66b5, 0x26b7, 0x1, 0x1);
        gbc.writeMem(0x35c7, { 0x38, 0x3e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x462e, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0283
        gbc.setState(0x262d, 0x93a8, 0xdbf0, 0x22b0, 0xb70f, 0x2cfd, 0x1, 0x1);
        gbc.writeMem(0x262d, { 0x38, 0xb7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x93a8, gbc.sp());
        EXPECT(0x25e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0284
        gbc.setState(0x8eb8, 0x8ef, 0x7cb0, 0x59d7, 0xcd21, 0x168d, 0x0, 0x0);
        gbc.writeMem(0x8eb8, { 0x38, 0xe9 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8ef, gbc.sp());
        EXPECT(0x8ea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8eb8));
        EXPECT(0xe9, gbc.readMem(0x8eb9));
        // 38 0285
        gbc.setState(0x7703, 0x657c, 0x5810, 0x2aef, 0xbd5d, 0xa1fd, 0x0, 0x1);
        gbc.writeMem(0x7703, { 0x38, 0x28 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x657c, gbc.sp());
        EXPECT(0x772d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0286
        gbc.setState(0x60ff, 0xe841, 0xa8a0, 0x6317, 0xac45, 0x282b, 0x0, 0x0);
        gbc.writeMem(0x60ff, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0x6101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0287
        gbc.setState(0x773e, 0x7db7, 0xca0, 0xdede, 0x3fc0, 0x9ed8, 0x1, 0x0);
        gbc.writeMem(0x773e, { 0x38, 0x47 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7db7, gbc.sp());
        EXPECT(0x7740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0288
        gbc.setState(0xb5f, 0xc5e6, 0x46d0, 0xe413, 0xdab3, 0x8ffa, 0x1, 0x1);
        gbc.writeMem(0xb5f, { 0x38, 0x51 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0xbb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0289
        gbc.setState(0x447b, 0x5e92, 0x8700, 0x6ed2, 0x8898, 0x5252, 0x0, 0x1);
        gbc.writeMem(0x447b, { 0x38, 0x14 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5e92, gbc.sp());
        EXPECT(0x447d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 028A
        gbc.setState(0x979c, 0x6a5d, 0x28d0, 0xbe3a, 0x8034, 0xb1de, 0x0, 0x0);
        gbc.writeMem(0x979c, { 0x38, 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6a5d, gbc.sp());
        EXPECT(0x97da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x979c));
        EXPECT(0x3c, gbc.readMem(0x979d));
        // 38 028B
        gbc.setState(0x58cd, 0x7577, 0xe770, 0x1ffa, 0x50be, 0xad87, 0x0, 0x0);
        gbc.writeMem(0x58cd, { 0x38, 0xd7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7577, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 028C
        gbc.setState(0x3521, 0x92fe, 0x3040, 0x2625, 0x8b2a, 0x97f0, 0x0, 0x0);
        gbc.writeMem(0x3521, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x92fe, gbc.sp());
        EXPECT(0x3523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 028D
        gbc.setState(0x7292, 0xbecb, 0x3e40, 0xd197, 0x238d, 0xdb06, 0x0, 0x0);
        gbc.writeMem(0x7292, { 0x38, 0xfa });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbecb, gbc.sp());
        EXPECT(0x7294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 028E
        gbc.setState(0xa381, 0x1b68, 0xcd90, 0x40c3, 0x81ab, 0x2c99, 0x0, 0x1);
        gbc.writeMem(0xa381, { 0x38, 0xd9 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1b68, gbc.sp());
        EXPECT(0xa35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa381));
        EXPECT(0xd9, gbc.readMem(0xa382));
        // 38 028F
        gbc.setState(0xe222, 0xbdbd, 0x8800, 0xea6c, 0x9024, 0xd992, 0x0, 0x0);
        gbc.writeMem(0xe222, { 0x38, 0xa2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbdbd, gbc.sp());
        EXPECT(0xe224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe222));
        EXPECT(0xa2, gbc.readMem(0xe223));
        // 38 0290
        gbc.setState(0xa680, 0x9c23, 0xf080, 0xc4f2, 0x48bf, 0xc4e9, 0x1, 0x0);
        gbc.writeMem(0xa680, { 0x38, 0xa9 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9c23, gbc.sp());
        EXPECT(0xa682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa680));
        EXPECT(0xa9, gbc.readMem(0xa681));
        // 38 0291
        gbc.setState(0x7a86, 0x97dc, 0x820, 0x7dd2, 0x88a2, 0x39b0, 0x1, 0x1);
        gbc.writeMem(0x7a86, { 0x38, 0xbe });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x97dc, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0292
        gbc.setState(0x4a96, 0xa04e, 0x3be0, 0xc4de, 0xa6a0, 0xc74b, 0x0, 0x0);
        gbc.writeMem(0x4a96, { 0x38, 0x55 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0x4a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0293
        gbc.setState(0x2632, 0xa86d, 0x7f90, 0xa6fe, 0xded6, 0x1ba9, 0x0, 0x0);
        gbc.writeMem(0x2632, { 0x38, 0x63 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa86d, gbc.sp());
        EXPECT(0x2697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0294
        gbc.setState(0xe91b, 0xe92c, 0x7260, 0xa6b3, 0x4e27, 0x51f, 0x1, 0x1);
        gbc.writeMem(0xe91b, { 0x38, 0xb7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe92c, gbc.sp());
        EXPECT(0xe91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe91b));
        EXPECT(0xb7, gbc.readMem(0xe91c));
        // 38 0295
        gbc.setState(0x8a04, 0xc7e7, 0x7c60, 0x6435, 0x94f1, 0x6ea, 0x1, 0x0);
        gbc.writeMem(0x8a04, { 0x38, 0x46 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc7e7, gbc.sp());
        EXPECT(0x8a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8a04));
        EXPECT(0x46, gbc.readMem(0x8a05));
        // 38 0296
        gbc.setState(0x3034, 0x7c07, 0x7720, 0xb72c, 0x7297, 0xbc39, 0x1, 0x0);
        gbc.writeMem(0x3034, { 0x38, 0x1a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7c07, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0297
        gbc.setState(0x10ad, 0x618e, 0xe150, 0xd2b0, 0x24c8, 0xb7fb, 0x1, 0x0);
        gbc.writeMem(0x10ad, { 0x38, 0x58 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x618e, gbc.sp());
        EXPECT(0x1107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0298
        gbc.setState(0x2bef, 0x9a04, 0x25c0, 0x7f5b, 0xdf03, 0x805b, 0x0, 0x0);
        gbc.writeMem(0x2bef, { 0x38, 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9a04, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0299
        gbc.setState(0x670f, 0xa17f, 0x42b0, 0x67e8, 0xcf82, 0x9d9e, 0x1, 0x0);
        gbc.writeMem(0x670f, { 0x38, 0x6e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa17f, gbc.sp());
        EXPECT(0x677f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 029A
        gbc.setState(0x792c, 0x2697, 0xaf80, 0xc8f5, 0x35a0, 0xdf3d, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0x38, 0xce });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2697, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 029B
        gbc.setState(0x4274, 0x4f0c, 0x7b80, 0xda67, 0x89b6, 0xe201, 0x1, 0x1);
        gbc.writeMem(0x4274, { 0x38, 0x7d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4f0c, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 029C
        gbc.setState(0xf16, 0xf41e, 0xe330, 0x8d61, 0x455d, 0xfb74, 0x0, 0x0);
        gbc.writeMem(0xf16, { 0x38, 0xea });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf41e, gbc.sp());
        EXPECT(0xf02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 029D
        gbc.setState(0x91be, 0x9e6a, 0x7820, 0x9406, 0x8bbf, 0xcc38, 0x0, 0x0);
        gbc.writeMem(0x91be, { 0x38, 0x6a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9e6a, gbc.sp());
        EXPECT(0x91c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x91be));
        EXPECT(0x6a, gbc.readMem(0x91bf));
        // 38 029E
        gbc.setState(0x5d9a, 0x7f69, 0x55f0, 0xdd2c, 0xe93a, 0xfbbb, 0x1, 0x0);
        gbc.writeMem(0x5d9a, { 0x38, 0x5c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7f69, gbc.sp());
        EXPECT(0x5df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 029F
        gbc.setState(0x3737, 0xdb53, 0xa8b0, 0xff5b, 0x2d1d, 0xa4f6, 0x0, 0x1);
        gbc.writeMem(0x3737, { 0x38, 0x9d });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdb53, gbc.sp());
        EXPECT(0x36d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02A0
        gbc.setState(0xb8e3, 0x44bc, 0x6160, 0x314b, 0xcba5, 0x60f4, 0x1, 0x1);
        gbc.writeMem(0xb8e3, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x44bc, gbc.sp());
        EXPECT(0xb8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb8e3));
        EXPECT(0x5e, gbc.readMem(0xb8e4));
        // 38 02A1
        gbc.setState(0x329f, 0x26ee, 0xc090, 0x6664, 0xa342, 0x2f9e, 0x0, 0x0);
        gbc.writeMem(0x329f, { 0x38, 0xf9 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x26ee, gbc.sp());
        EXPECT(0x329a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02A2
        gbc.setState(0xab10, 0x295d, 0xdfd0, 0xf52c, 0x53e3, 0xbf91, 0x0, 0x0);
        gbc.writeMem(0xab10, { 0x38, 0xf3 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x295d, gbc.sp());
        EXPECT(0xab05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xab10));
        EXPECT(0xf3, gbc.readMem(0xab11));
        // 38 02A3
        gbc.setState(0xefd3, 0xac32, 0x2f00, 0x18d, 0x39a2, 0x26d3, 0x0, 0x0);
        gbc.writeMem(0xefd3, { 0x38, 0x2f });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0xefd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xefd3));
        EXPECT(0x2f, gbc.readMem(0xefd4));
        // 38 02A4
        gbc.setState(0xa37d, 0xc6c6, 0x80f0, 0x9e91, 0xd77, 0x56ed, 0x0, 0x0);
        gbc.writeMem(0xa37d, { 0x38, 0x45 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc6c6, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa37d));
        EXPECT(0x45, gbc.readMem(0xa37e));
        // 38 02A5
        gbc.setState(0xe803, 0x1175, 0xded0, 0xfb2f, 0x45f3, 0x8434, 0x1, 0x0);
        gbc.writeMem(0xe803, { 0x38, 0xc3 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe803));
        EXPECT(0xc3, gbc.readMem(0xe804));
        // 38 02A6
        gbc.setState(0x97c8, 0x9f16, 0x3780, 0x2b42, 0xe3d9, 0x8d1c, 0x0, 0x1);
        gbc.writeMem(0x97c8, { 0x38, 0xbe });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9f16, gbc.sp());
        EXPECT(0x97ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x97c8));
        EXPECT(0xbe, gbc.readMem(0x97c9));
        // 38 02A7
        gbc.setState(0x1c16, 0x6de1, 0x6da0, 0x5eae, 0x7dc7, 0xfa74, 0x1, 0x0);
        gbc.writeMem(0x1c16, { 0x38, 0x3b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6de1, gbc.sp());
        EXPECT(0x1c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02A8
        gbc.setState(0x7075, 0xca21, 0xbf30, 0xfa72, 0x48e9, 0xd54, 0x1, 0x1);
        gbc.writeMem(0x7075, { 0x38, 0x1 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xca21, gbc.sp());
        EXPECT(0x7078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02A9
        gbc.setState(0x61ab, 0xe777, 0xad0, 0x524a, 0xccb, 0x5e29, 0x1, 0x1);
        gbc.writeMem(0x61ab, { 0x38, 0x9e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0x614b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02AA
        gbc.setState(0xe3bd, 0x8aaf, 0x7c40, 0x3dd2, 0x2fcd, 0xec95, 0x0, 0x0);
        gbc.writeMem(0xe3bd, { 0x38, 0x1e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8aaf, gbc.sp());
        EXPECT(0xe3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe3bd));
        EXPECT(0x1e, gbc.readMem(0xe3be));
        // 38 02AB
        gbc.setState(0x74b4, 0xa374, 0xd340, 0x63ee, 0xbed7, 0xc993, 0x0, 0x1);
        gbc.writeMem(0x74b4, { 0x38, 0x1f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa374, gbc.sp());
        EXPECT(0x74b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02AC
        gbc.setState(0xce49, 0xdc10, 0x7530, 0xd4d4, 0x928b, 0x81b3, 0x0, 0x0);
        gbc.writeMem(0xce49, { 0x38, 0x20 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdc10, gbc.sp());
        EXPECT(0xce6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xce49));
        EXPECT(0x20, gbc.readMem(0xce4a));
        // 38 02AD
        gbc.setState(0x7401, 0xba18, 0x47b0, 0x8470, 0x1137, 0xb274, 0x1, 0x0);
        gbc.writeMem(0x7401, { 0x38, 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xba18, gbc.sp());
        EXPECT(0x7455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02AE
        gbc.setState(0x485e, 0x7097, 0xd8a0, 0x2d23, 0xbcac, 0x857d, 0x0, 0x1);
        gbc.writeMem(0x485e, { 0x38, 0xee });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7097, gbc.sp());
        EXPECT(0x4860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02AF
        gbc.setState(0x9a93, 0x68bd, 0x73d0, 0x6e95, 0x7eba, 0x7b79, 0x1, 0x1);
        gbc.writeMem(0x9a93, { 0x38, 0xb0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x68bd, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9a93));
        EXPECT(0xb0, gbc.readMem(0x9a94));
        // 38 02B0
        gbc.setState(0x271e, 0xc4da, 0x480, 0x43c9, 0x2e91, 0xc5c6, 0x1, 0x0);
        gbc.writeMem(0x271e, { 0x38, 0xd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc4da, gbc.sp());
        EXPECT(0x2720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02B1
        gbc.setState(0xef66, 0x77a6, 0x35a0, 0x5ddf, 0xd5b2, 0x9945, 0x1, 0x1);
        gbc.writeMem(0xef66, { 0x38, 0x9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x77a6, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xef66));
        EXPECT(0x9, gbc.readMem(0xef67));
        // 38 02B2
        gbc.setState(0x4b62, 0x2ff3, 0xbba0, 0x94da, 0x5a7, 0x5e1d, 0x1, 0x1);
        gbc.writeMem(0x4b62, { 0x38, 0x13 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02B4
        gbc.setState(0xdec3, 0xc6cc, 0x2830, 0xdc8c, 0xc602, 0x43fb, 0x1, 0x0);
        gbc.writeMem(0xdec3, { 0x38, 0x57 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc6cc, gbc.sp());
        EXPECT(0xdf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdec3));
        EXPECT(0x57, gbc.readMem(0xdec4));
        // 38 02B5
        gbc.setState(0x7ef0, 0x4dcf, 0x4850, 0x1055, 0x3ca8, 0xa078, 0x1, 0x1);
        gbc.writeMem(0x7ef0, { 0x38, 0xb7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4dcf, gbc.sp());
        EXPECT(0x7ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02B6
        gbc.setState(0x172, 0xed49, 0x9860, 0x5669, 0x528a, 0x9d1a, 0x0, 0x1);
        gbc.writeMem(0x172, { 0x38, 0x6a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0x174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02B7
        gbc.setState(0x7ecb, 0x1d60, 0xd090, 0xeef, 0x18d8, 0x1ca9, 0x0, 0x0);
        gbc.writeMem(0x7ecb, { 0x38, 0x6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1d60, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02B8
        gbc.setState(0xc376, 0xd7a6, 0xa960, 0xb8e8, 0xe2de, 0x635b, 0x0, 0x1);
        gbc.writeMem(0xc376, { 0x38, 0xc9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd7a6, gbc.sp());
        EXPECT(0xc378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc376));
        EXPECT(0xc9, gbc.readMem(0xc377));
        // 38 02B9
        gbc.setState(0x9fdd, 0xffe, 0xe2e0, 0x6093, 0xb78a, 0xc5a0, 0x0, 0x0);
        gbc.writeMem(0x9fdd, { 0x38, 0xaa });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xffe, gbc.sp());
        EXPECT(0x9fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9fdd));
        EXPECT(0xaa, gbc.readMem(0x9fde));
        // 38 02BA
        gbc.setState(0xe237, 0x6da2, 0xbb90, 0xc93, 0xf2d7, 0x7e4d, 0x1, 0x0);
        gbc.writeMem(0xe237, { 0x38, 0x84 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6da2, gbc.sp());
        EXPECT(0xe1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe237));
        EXPECT(0x84, gbc.readMem(0xe238));
        // 38 02BB
        gbc.setState(0xd841, 0x431, 0x95d0, 0x44c0, 0x25f8, 0xfef0, 0x1, 0x1);
        gbc.writeMem(0xd841, { 0x38, 0xc5 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x431, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd841));
        EXPECT(0xc5, gbc.readMem(0xd842));
        // 38 02BC
        gbc.setState(0x2d8c, 0xe76e, 0xc3e0, 0x9a75, 0x4bbb, 0xef31, 0x0, 0x1);
        gbc.writeMem(0x2d8c, { 0x38, 0x5a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe76e, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02BD
        gbc.setState(0x2846, 0x50d7, 0x5c10, 0x574e, 0x5052, 0x21b8, 0x1, 0x0);
        gbc.writeMem(0x2846, { 0x38, 0xe0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x50d7, gbc.sp());
        EXPECT(0x2828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02BE
        gbc.setState(0x6a29, 0xdfd1, 0xecf0, 0xbad2, 0x7167, 0xbb93, 0x1, 0x1);
        gbc.writeMem(0x6a29, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdfd1, gbc.sp());
        EXPECT(0x69b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02BF
        gbc.setState(0x85cc, 0x1ca5, 0xab20, 0x99ea, 0xde91, 0x1e2, 0x1, 0x1);
        gbc.writeMem(0x85cc, { 0x38, 0x1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1ca5, gbc.sp());
        EXPECT(0x85ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x85cc));
        EXPECT(0x1, gbc.readMem(0x85cd));
        // 38 02C1
        gbc.setState(0x853d, 0x70e, 0x2a0, 0x7423, 0xd85e, 0xe89e, 0x1, 0x1);
        gbc.writeMem(0x853d, { 0x38, 0x30 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x70e, gbc.sp());
        EXPECT(0x853f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x853d));
        EXPECT(0x30, gbc.readMem(0x853e));
        // 38 02C2
        gbc.setState(0x80d2, 0xc1a7, 0x9db0, 0x933c, 0x53e3, 0x7bd7, 0x0, 0x0);
        gbc.writeMem(0x80d2, { 0x38, 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc1a7, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x80d2));
        EXPECT(0x9b, gbc.readMem(0x80d3));
        // 38 02C3
        gbc.setState(0x931e, 0x3de8, 0xd0, 0x1d7c, 0xea23, 0xd732, 0x0, 0x0);
        gbc.writeMem(0x931e, { 0x38, 0xd8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3de8, gbc.sp());
        EXPECT(0x92f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x931e));
        EXPECT(0xd8, gbc.readMem(0x931f));
        // 38 02C4
        gbc.setState(0xc26a, 0x8dce, 0xb8f0, 0xdb8b, 0x422d, 0xae0c, 0x1, 0x0);
        gbc.writeMem(0xc26a, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8dce, gbc.sp());
        EXPECT(0xc288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc26a));
        EXPECT(0x1c, gbc.readMem(0xc26b));
        // 38 02C5
        gbc.setState(0x3e3a, 0x33ed, 0xdd70, 0xb480, 0x981c, 0xe473, 0x0, 0x0);
        gbc.writeMem(0x3e3a, { 0x38, 0xc0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x33ed, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02C6
        gbc.setState(0xc8a0, 0x5670, 0xafe0, 0x7867, 0x102f, 0x6e8d, 0x1, 0x0);
        gbc.writeMem(0xc8a0, { 0x38, 0x42 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5670, gbc.sp());
        EXPECT(0xc8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc8a0));
        EXPECT(0x42, gbc.readMem(0xc8a1));
        // 38 02C7
        gbc.setState(0x5a7b, 0xccc7, 0xb870, 0xefb9, 0x3def, 0xb938, 0x0, 0x1);
        gbc.writeMem(0x5a7b, { 0x38, 0x85 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0x5a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02C8
        gbc.setState(0x8695, 0x408c, 0xb50, 0xae81, 0xe2e7, 0x30f4, 0x0, 0x1);
        gbc.writeMem(0x8695, { 0x38, 0x5f });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x408c, gbc.sp());
        EXPECT(0x86f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8695));
        EXPECT(0x5f, gbc.readMem(0x8696));
        // 38 02C9
        gbc.setState(0xb948, 0x1774, 0x7550, 0x2d3c, 0x99e0, 0xdbd6, 0x0, 0x1);
        gbc.writeMem(0xb948, { 0x38, 0xd3 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1774, gbc.sp());
        EXPECT(0xb91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb948));
        EXPECT(0xd3, gbc.readMem(0xb949));
        // 38 02CA
        gbc.setState(0x1dc1, 0x193c, 0x96b0, 0x4996, 0xcf55, 0x1c1, 0x0, 0x1);
        gbc.writeMem(0x1dc1, { 0x38, 0xdd });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x193c, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02CB
        gbc.setState(0x208c, 0xff1c, 0x62b0, 0x5d67, 0xf790, 0xd481, 0x1, 0x0);
        gbc.writeMem(0x208c, { 0x38, 0x24 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xff1c, gbc.sp());
        EXPECT(0x20b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02CC
        gbc.setState(0x662c, 0x3de, 0xa860, 0x302f, 0xbb9c, 0x31d1, 0x0, 0x0);
        gbc.writeMem(0x662c, { 0x38, 0xa });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3de, gbc.sp());
        EXPECT(0x662e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02CD
        gbc.setState(0xe328, 0xda84, 0x3140, 0x9d48, 0xba05, 0xcfe0, 0x0, 0x0);
        gbc.writeMem(0xe328, { 0x38, 0x4a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0xe32a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe328));
        EXPECT(0x4a, gbc.readMem(0xe329));
        // 38 02CE
        gbc.setState(0x53, 0x58a9, 0xd6d0, 0x4779, 0x33e9, 0x7bb7, 0x1, 0x0);
        gbc.writeMem(0x53, { 0x38, 0xf1 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x58a9, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02CF
        gbc.setState(0xa70b, 0xb3b9, 0xcd00, 0xaff4, 0x7ee1, 0x903b, 0x1, 0x1);
        gbc.writeMem(0xa70b, { 0x38, 0x1f });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb3b9, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa70b));
        EXPECT(0x1f, gbc.readMem(0xa70c));
        // 38 02D0
        gbc.setState(0x6a25, 0xb24a, 0xa4c0, 0x2aaa, 0xac73, 0x5b08, 0x0, 0x1);
        gbc.writeMem(0x6a25, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x6a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02D1
        gbc.setState(0x2262, 0x438c, 0x7130, 0x40b6, 0xf3e8, 0x165f, 0x0, 0x0);
        gbc.writeMem(0x2262, { 0x38, 0xd7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x438c, gbc.sp());
        EXPECT(0x223b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02D2
        gbc.setState(0xc539, 0xc543, 0x5680, 0x3f76, 0xb7ab, 0x3792, 0x0, 0x0);
        gbc.writeMem(0xc539, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc543, gbc.sp());
        EXPECT(0xc53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc539));
        EXPECT(0x60, gbc.readMem(0xc53a));
        // 38 02D3
        gbc.setState(0x8415, 0xa140, 0xd770, 0x478d, 0x2010, 0x8a14, 0x1, 0x0);
        gbc.writeMem(0x8415, { 0x38, 0x63 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa140, gbc.sp());
        EXPECT(0x847a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8415));
        EXPECT(0x63, gbc.readMem(0x8416));
        // 38 02D4
        gbc.setState(0x8ea0, 0x247, 0xda90, 0x94e6, 0xd746, 0xf191, 0x1, 0x0);
        gbc.writeMem(0x8ea0, { 0x38, 0xad });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x247, gbc.sp());
        EXPECT(0x8e4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8ea0));
        EXPECT(0xad, gbc.readMem(0x8ea1));
        // 38 02D5
        gbc.setState(0xee45, 0x7c54, 0x37e0, 0x5c6e, 0xc241, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0xee45, { 0x38, 0x69 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0xee47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xee45));
        EXPECT(0x69, gbc.readMem(0xee46));
        // 38 02D6
        gbc.setState(0x932, 0x6f30, 0xc90, 0x5ca, 0x4161, 0x84b2, 0x1, 0x1);
        gbc.writeMem(0x932, { 0x38, 0x3b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0x96f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02D7
        gbc.setState(0xac01, 0x239a, 0xcf40, 0x119b, 0x34dd, 0xa561, 0x0, 0x1);
        gbc.writeMem(0xac01, { 0x38, 0x18 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0xac03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xac01));
        EXPECT(0x18, gbc.readMem(0xac02));
        // 38 02D8
        gbc.setState(0x4ae4, 0xe831, 0x2450, 0xda4e, 0xef77, 0xf4c1, 0x1, 0x0);
        gbc.writeMem(0x4ae4, { 0x38, 0x47 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0x4b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02D9
        gbc.setState(0x27c4, 0xcd50, 0xc7a0, 0x1916, 0x854e, 0x6269, 0x0, 0x1);
        gbc.writeMem(0x27c4, { 0x38, 0x35 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02DA
        gbc.setState(0xe73b, 0xd828, 0x2300, 0x7f85, 0xddce, 0xec69, 0x1, 0x1);
        gbc.writeMem(0xe73b, { 0x38, 0x84 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd828, gbc.sp());
        EXPECT(0xe73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe73b));
        EXPECT(0x84, gbc.readMem(0xe73c));
        // 38 02DB
        gbc.setState(0x8d39, 0x1c29, 0xfe30, 0xcca1, 0x6935, 0x5c69, 0x0, 0x1);
        gbc.writeMem(0x8d39, { 0x38, 0xe3 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1c29, gbc.sp());
        EXPECT(0x8d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8d39));
        EXPECT(0xe3, gbc.readMem(0x8d3a));
        // 38 02DC
        gbc.setState(0x5254, 0xb884, 0xdcd0, 0x1a0e, 0x7f70, 0xb455, 0x1, 0x1);
        gbc.writeMem(0x5254, { 0x38, 0xcc });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb884, gbc.sp());
        EXPECT(0x5222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02DD
        gbc.setState(0x95d7, 0xecd6, 0x3c10, 0xac29, 0xdf07, 0xa37a, 0x0, 0x1);
        gbc.writeMem(0x95d7, { 0x38, 0x6f });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xecd6, gbc.sp());
        EXPECT(0x9648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x95d7));
        EXPECT(0x6f, gbc.readMem(0x95d8));
        // 38 02DE
        gbc.setState(0x67ad, 0xddc2, 0xfd90, 0x5d55, 0x993a, 0x7d9d, 0x0, 0x0);
        gbc.writeMem(0x67ad, { 0x38, 0xdb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xddc2, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02DF
        gbc.setState(0x55b8, 0x6f66, 0xd7a0, 0xa66, 0x1b26, 0x597f, 0x0, 0x0);
        gbc.writeMem(0x55b8, { 0x38, 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x6f66, gbc.sp());
        EXPECT(0x55ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02E0
        gbc.setState(0xc26b, 0x9dfc, 0x93f0, 0x844a, 0xfb73, 0x78, 0x1, 0x0);
        gbc.writeMem(0xc26b, { 0x38, 0x67 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9dfc, gbc.sp());
        EXPECT(0xc2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc26b));
        EXPECT(0x67, gbc.readMem(0xc26c));
        // 38 02E1
        gbc.setState(0xa598, 0x749f, 0xd390, 0x5e45, 0xc558, 0xfabe, 0x1, 0x0);
        gbc.writeMem(0xa598, { 0x38, 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x749f, gbc.sp());
        EXPECT(0xa5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa598));
        EXPECT(0x2c, gbc.readMem(0xa599));
        // 38 02E2
        gbc.setState(0x4b96, 0x126f, 0x5a30, 0xe2a7, 0x3113, 0x99ab, 0x1, 0x0);
        gbc.writeMem(0x4b96, { 0x38, 0x64 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x126f, gbc.sp());
        EXPECT(0x4bfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02E3
        gbc.setState(0xe4ed, 0x7bf, 0x4ca0, 0xcd9c, 0x7f9, 0x98d8, 0x0, 0x0);
        gbc.writeMem(0xe4ed, { 0x38, 0xe6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7bf, gbc.sp());
        EXPECT(0xe4ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe4ed));
        EXPECT(0xe6, gbc.readMem(0xe4ee));
        // 38 02E4
        gbc.setState(0x1934, 0x44d6, 0xfde0, 0xc3ce, 0x2d66, 0x6b9f, 0x0, 0x1);
        gbc.writeMem(0x1934, { 0x38, 0xc4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x44d6, gbc.sp());
        EXPECT(0x1936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02E5
        gbc.setState(0x773d, 0x9047, 0x3110, 0xc4eb, 0x1c9b, 0x20c3, 0x1, 0x1);
        gbc.writeMem(0x773d, { 0x38, 0x75 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9047, gbc.sp());
        EXPECT(0x77b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02E6
        gbc.setState(0x71c5, 0x8309, 0x5f00, 0x6343, 0xb5d1, 0xf7c0, 0x0, 0x0);
        gbc.writeMem(0x71c5, { 0x38, 0x61 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x71c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02E7
        gbc.setState(0x4379, 0xee21, 0xfd40, 0x6302, 0x95d0, 0xf044, 0x1, 0x1);
        gbc.writeMem(0x4379, { 0x38, 0x92 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xee21, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02E8
        gbc.setState(0x44b2, 0xcbd2, 0x1700, 0x18de, 0xa75e, 0x5f45, 0x1, 0x0);
        gbc.writeMem(0x44b2, { 0x38, 0xc4 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcbd2, gbc.sp());
        EXPECT(0x44b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02E9
        gbc.setState(0x5f97, 0x41a5, 0x1790, 0x5d48, 0x1932, 0xf3e1, 0x0, 0x1);
        gbc.writeMem(0x5f97, { 0x38, 0xe });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x41a5, gbc.sp());
        EXPECT(0x5fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02EA
        gbc.setState(0xe422, 0xf278, 0xab30, 0xb675, 0xad2e, 0x9bd6, 0x1, 0x1);
        gbc.writeMem(0xe422, { 0x38, 0xe });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0xe432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe422));
        EXPECT(0xe, gbc.readMem(0xe423));
        // 38 02EC
        gbc.setState(0x6399, 0xccb3, 0x47b0, 0xbd86, 0x90b8, 0x4385, 0x1, 0x0);
        gbc.writeMem(0x6399, { 0x38, 0x67 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xccb3, gbc.sp());
        EXPECT(0x6402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02ED
        gbc.setState(0x5663, 0xdf6c, 0x7b90, 0xdddb, 0x3a98, 0x49fa, 0x1, 0x1);
        gbc.writeMem(0x5663, { 0x38, 0x7e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdf6c, gbc.sp());
        EXPECT(0x56e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02EE
        gbc.setState(0x6d5c, 0x905e, 0xb010, 0xc6eb, 0x6d10, 0x384b, 0x1, 0x0);
        gbc.writeMem(0x6d5c, { 0x38, 0x22 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x905e, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02EF
        gbc.setState(0x71f0, 0x7e24, 0x1d40, 0xb7e5, 0x9a63, 0xa7e6, 0x1, 0x0);
        gbc.writeMem(0x71f0, { 0x38, 0xd6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x71f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02F0
        gbc.setState(0x386f, 0x433b, 0x6cb0, 0xb180, 0x8b5a, 0x8478, 0x1, 0x1);
        gbc.writeMem(0x386f, { 0x38, 0x2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x433b, gbc.sp());
        EXPECT(0x3873, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02F1
        gbc.setState(0x447f, 0xefeb, 0x39a0, 0xa5ed, 0x5a63, 0xeaa2, 0x0, 0x1);
        gbc.writeMem(0x447f, { 0x38, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0x4481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02F2
        gbc.setState(0xa657, 0x8ccb, 0x73f0, 0x1d98, 0x9425, 0xabc6, 0x1, 0x0);
        gbc.writeMem(0xa657, { 0x38, 0x5c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8ccb, gbc.sp());
        EXPECT(0xa6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa657));
        EXPECT(0x5c, gbc.readMem(0xa658));
        // 38 02F3
        gbc.setState(0x12dc, 0xacda, 0x5940, 0xd286, 0x4122, 0x47, 0x0, 0x1);
        gbc.writeMem(0x12dc, { 0x38, 0x8f });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xacda, gbc.sp());
        EXPECT(0x12de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02F4
        gbc.setState(0x11d0, 0x3a03, 0xa200, 0x12c5, 0x4007, 0x4f33, 0x1, 0x0);
        gbc.writeMem(0x11d0, { 0x38, 0x35 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3a03, gbc.sp());
        EXPECT(0x11d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02F5
        gbc.setState(0x2b7b, 0x3029, 0x3af0, 0x197f, 0x2083, 0x5704, 0x1, 0x1);
        gbc.writeMem(0x2b7b, { 0x38, 0x23 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3029, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02F6
        gbc.setState(0xb70, 0xf4a6, 0x8d60, 0xc084, 0x9bfb, 0x5a1d, 0x1, 0x0);
        gbc.writeMem(0xb70, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0xb72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02F7
        gbc.setState(0x4518, 0xe565, 0x9c70, 0x2b13, 0x4a2f, 0x36ef, 0x0, 0x0);
        gbc.writeMem(0x4518, { 0x38, 0xf });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe565, gbc.sp());
        EXPECT(0x4529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02F9
        gbc.setState(0xc085, 0x3abe, 0xa980, 0xf491, 0x5093, 0xae9, 0x1, 0x1);
        gbc.writeMem(0xc085, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3abe, gbc.sp());
        EXPECT(0xc087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc085));
        EXPECT(0x5e, gbc.readMem(0xc086));
        // 38 02FA
        gbc.setState(0xe0b, 0xe7b6, 0xd620, 0xeb77, 0xe56c, 0x1082, 0x0, 0x1);
        gbc.writeMem(0xe0b, { 0x38, 0x66 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe7b6, gbc.sp());
        EXPECT(0xe0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02FC
        gbc.setState(0x602c, 0xbcde, 0x61d0, 0x92ae, 0xc2a0, 0xc786, 0x0, 0x0);
        gbc.writeMem(0x602c, { 0x38, 0x91 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbcde, gbc.sp());
        EXPECT(0x5fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 02FD
        gbc.setState(0xecbb, 0x5890, 0xe0c0, 0xa58a, 0x6968, 0x474e, 0x1, 0x1);
        gbc.writeMem(0xecbb, { 0x38, 0x97 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5890, gbc.sp());
        EXPECT(0xecbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xecbb));
        EXPECT(0x97, gbc.readMem(0xecbc));
        // 38 02FE
        gbc.setState(0x3777, 0x5ca6, 0xc020, 0xc8, 0x8b2c, 0x3366, 0x1, 0x1);
        gbc.writeMem(0x3777, { 0x38, 0x33 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5ca6, gbc.sp());
        EXPECT(0x3779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 02FF
        gbc.setState(0x9d92, 0xafba, 0x2ce0, 0xaf01, 0xf066, 0x17fc, 0x0, 0x0);
        gbc.writeMem(0x9d92, { 0x38, 0x1d });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0x9d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9d92));
        EXPECT(0x1d, gbc.readMem(0x9d93));
        // 38 0300
        gbc.setState(0x4be, 0x7e74, 0x5920, 0xcd92, 0x298a, 0xd858, 0x0, 0x1);
        gbc.writeMem(0x4be, { 0x38, 0x7b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7e74, gbc.sp());
        EXPECT(0x4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0301
        gbc.setState(0xc00, 0x56cd, 0x1220, 0x3744, 0x8a1c, 0x5cd8, 0x1, 0x1);
        gbc.writeMem(0xc00, { 0x38, 0x8b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x56cd, gbc.sp());
        EXPECT(0xc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0302
        gbc.setState(0x768a, 0x861c, 0x7a0, 0x9f81, 0x7f54, 0x8304, 0x1, 0x0);
        gbc.writeMem(0x768a, { 0x38, 0x6a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x861c, gbc.sp());
        EXPECT(0x768c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0303
        gbc.setState(0xb80f, 0x6a3b, 0xa9b0, 0x1818, 0xdee9, 0x763, 0x1, 0x1);
        gbc.writeMem(0xb80f, { 0x38, 0x73 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6a3b, gbc.sp());
        EXPECT(0xb884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb80f));
        EXPECT(0x73, gbc.readMem(0xb810));
        // 38 0304
        gbc.setState(0x2c3a, 0x8838, 0xc3f0, 0x2b25, 0xb862, 0xd24c, 0x1, 0x1);
        gbc.writeMem(0x2c3a, { 0x38, 0xca });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8838, gbc.sp());
        EXPECT(0x2c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0305
        gbc.setState(0x98dd, 0xee67, 0x66e0, 0xab01, 0x90cb, 0x9381, 0x1, 0x0);
        gbc.writeMem(0x98dd, { 0x38, 0x85 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xee67, gbc.sp());
        EXPECT(0x98df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x98dd));
        EXPECT(0x85, gbc.readMem(0x98de));
        // 38 0306
        gbc.setState(0x7d1e, 0xb56d, 0xa40, 0x5a3b, 0xf809, 0x7a41, 0x1, 0x1);
        gbc.writeMem(0x7d1e, { 0x38, 0x51 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb56d, gbc.sp());
        EXPECT(0x7d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0307
        gbc.setState(0xa8c0, 0x3d2, 0xd960, 0xf0b4, 0x4c61, 0x2a27, 0x0, 0x0);
        gbc.writeMem(0xa8c0, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3d2, gbc.sp());
        EXPECT(0xa8c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa8c0));
        EXPECT(0x5e, gbc.readMem(0xa8c1));
        // 38 0308
        gbc.setState(0x30b8, 0xa8bc, 0xa530, 0xefb8, 0x1beb, 0x3489, 0x1, 0x1);
        gbc.writeMem(0x30b8, { 0x38, 0x5 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x30bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0309
        gbc.setState(0x332a, 0x49b5, 0x6790, 0x4246, 0xe8c9, 0x23d5, 0x0, 0x1);
        gbc.writeMem(0x332a, { 0x38, 0x6b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x49b5, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 030A
        gbc.setState(0x521, 0x361e, 0x220, 0x8421, 0x2322, 0xaae8, 0x1, 0x1);
        gbc.writeMem(0x521, { 0x38, 0xcf });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x361e, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 030B
        gbc.setState(0x666a, 0xab39, 0x6bc0, 0x202a, 0xb5cf, 0x8355, 0x0, 0x0);
        gbc.writeMem(0x666a, { 0x38, 0x11 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xab39, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 030C
        gbc.setState(0xa7f9, 0xa8d7, 0xf0b0, 0xbc44, 0xf1cd, 0xdfc4, 0x0, 0x1);
        gbc.writeMem(0xa7f9, { 0x38, 0x63 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0xa85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa7f9));
        EXPECT(0x63, gbc.readMem(0xa7fa));
        // 38 030D
        gbc.setState(0x6b23, 0xfacb, 0xd8d0, 0xb885, 0xe61f, 0x4cc5, 0x0, 0x1);
        gbc.writeMem(0x6b23, { 0x38, 0x3 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x6b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 030E
        gbc.setState(0x920e, 0xd4bc, 0xd000, 0x55c4, 0x3c9b, 0xf3bf, 0x0, 0x0);
        gbc.writeMem(0x920e, { 0x38, 0x6a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd4bc, gbc.sp());
        EXPECT(0x9210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x920e));
        EXPECT(0x6a, gbc.readMem(0x920f));
        // 38 030F
        gbc.setState(0xe111, 0xe038, 0x7a0, 0x2ef1, 0x5049, 0x2c0b, 0x0, 0x1);
        gbc.writeMem(0xe111, { 0x38, 0xc3 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe038, gbc.sp());
        EXPECT(0xe113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe111));
        EXPECT(0xc3, gbc.readMem(0xe112));
        // 38 0310
        gbc.setState(0x7a28, 0x1e60, 0x7bc0, 0xb2d1, 0xf125, 0xc6ab, 0x0, 0x0);
        gbc.writeMem(0x7a28, { 0x38, 0x6d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1e60, gbc.sp());
        EXPECT(0x7a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0311
        gbc.setState(0x46f7, 0x474f, 0x29a0, 0xf2ed, 0xc97, 0xa5cd, 0x1, 0x0);
        gbc.writeMem(0x46f7, { 0x38, 0x27 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x474f, gbc.sp());
        EXPECT(0x46f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0312
        gbc.setState(0x24ad, 0x14ad, 0x5f30, 0xffc0, 0xa8fa, 0xdfcc, 0x0, 0x0);
        gbc.writeMem(0x24ad, { 0x38, 0xe0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x14ad, gbc.sp());
        EXPECT(0x248f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0313
        gbc.setState(0x15a, 0x4a1a, 0x1c40, 0x171a, 0x1514, 0x6288, 0x1, 0x0);
        gbc.writeMem(0x15a, { 0x38, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4a1a, gbc.sp());
        EXPECT(0x15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0314
        gbc.setState(0x8717, 0x162b, 0x8320, 0x92db, 0x2ebe, 0x4b48, 0x0, 0x0);
        gbc.writeMem(0x8717, { 0x38, 0x52 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x162b, gbc.sp());
        EXPECT(0x8719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8717));
        EXPECT(0x52, gbc.readMem(0x8718));
        // 38 0315
        gbc.setState(0x871e, 0x82bf, 0xead0, 0x87fa, 0x5ad8, 0x3fbf, 0x1, 0x0);
        gbc.writeMem(0x871e, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x82bf, gbc.sp());
        EXPECT(0x86c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x871e));
        EXPECT(0xa1, gbc.readMem(0x871f));
        // 38 0316
        gbc.setState(0x7b17, 0x74dc, 0x9ca0, 0x1b9d, 0x5a4d, 0x9935, 0x1, 0x1);
        gbc.writeMem(0x7b17, { 0x38, 0x2f });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x74dc, gbc.sp());
        EXPECT(0x7b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0317
        gbc.setState(0x805a, 0x2128, 0x7110, 0xd077, 0x85cb, 0x3213, 0x1, 0x1);
        gbc.writeMem(0x805a, { 0x38, 0xbe });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2128, gbc.sp());
        EXPECT(0x801a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x805a));
        EXPECT(0xbe, gbc.readMem(0x805b));
        // 38 0318
        gbc.setState(0x2ec7, 0x7a45, 0x6930, 0xd26a, 0x7484, 0x4424, 0x0, 0x0);
        gbc.writeMem(0x2ec7, { 0x38, 0xe8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7a45, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0319
        gbc.setState(0xa98b, 0xeda7, 0x25a0, 0x1e57, 0x46d5, 0x47b1, 0x1, 0x0);
        gbc.writeMem(0xa98b, { 0x38, 0x54 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeda7, gbc.sp());
        EXPECT(0xa98d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa98b));
        EXPECT(0x54, gbc.readMem(0xa98c));
        // 38 031A
        gbc.setState(0xce69, 0x5158, 0xfe10, 0x5463, 0x873c, 0x3a70, 0x0, 0x1);
        gbc.writeMem(0xce69, { 0x38, 0x4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5158, gbc.sp());
        EXPECT(0xce6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xce69));
        EXPECT(0x4, gbc.readMem(0xce6a));
        // 38 031B
        gbc.setState(0xcde8, 0xf648, 0xbac0, 0xd96b, 0x9c4, 0x6ed1, 0x1, 0x1);
        gbc.writeMem(0xcde8, { 0x38, 0x78 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf648, gbc.sp());
        EXPECT(0xcdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcde8));
        EXPECT(0x78, gbc.readMem(0xcde9));
        // 38 031C
        gbc.setState(0x3d5f, 0xcb0c, 0x56c0, 0x1d89, 0xf3c5, 0xa056, 0x1, 0x1);
        gbc.writeMem(0x3d5f, { 0x38, 0x49 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcb0c, gbc.sp());
        EXPECT(0x3d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 031D
        gbc.setState(0xcd11, 0xa438, 0x8e0, 0x1006, 0x6eca, 0xd3b8, 0x0, 0x1);
        gbc.writeMem(0xcd11, { 0x38, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa438, gbc.sp());
        EXPECT(0xcd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd11));
        EXPECT(0x0, gbc.readMem(0xcd12));
        // 38 031E
        gbc.setState(0xce6f, 0x51f2, 0x900, 0xaac8, 0x39cc, 0x80c7, 0x0, 0x1);
        gbc.writeMem(0xce6f, { 0x38, 0x31 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x51f2, gbc.sp());
        EXPECT(0xce71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xce6f));
        EXPECT(0x31, gbc.readMem(0xce70));
        // 38 031F
        gbc.setState(0x294d, 0xc905, 0x74d0, 0xf496, 0xa40c, 0xc38d, 0x1, 0x1);
        gbc.writeMem(0x294d, { 0x38, 0xdc });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0x292b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0320
        gbc.setState(0x4b7f, 0x31b, 0x4be0, 0x326d, 0x838e, 0x1551, 0x1, 0x0);
        gbc.writeMem(0x4b7f, { 0x38, 0xb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x31b, gbc.sp());
        EXPECT(0x4b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0321
        gbc.setState(0x5c16, 0xcfb8, 0xf900, 0x37b2, 0xc13e, 0xc3ba, 0x0, 0x1);
        gbc.writeMem(0x5c16, { 0x38, 0x2f });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcfb8, gbc.sp());
        EXPECT(0x5c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0322
        gbc.setState(0x7925, 0xe374, 0x8b60, 0x8ae4, 0x7b9c, 0xee29, 0x1, 0x0);
        gbc.writeMem(0x7925, { 0x38, 0xaa });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe374, gbc.sp());
        EXPECT(0x7927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0323
        gbc.setState(0x1637, 0xd4f, 0xb050, 0x4df5, 0xb19a, 0xede, 0x1, 0x1);
        gbc.writeMem(0x1637, { 0x38, 0xcd });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x1606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0324
        gbc.setState(0xc28b, 0x855e, 0xbed0, 0x6dd2, 0x559e, 0xc3f6, 0x1, 0x1);
        gbc.writeMem(0xc28b, { 0x38, 0x29 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x855e, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc28b));
        EXPECT(0x29, gbc.readMem(0xc28c));
        // 38 0325
        gbc.setState(0xcd16, 0xfdea, 0x6990, 0xcc42, 0xc7f8, 0x5d80, 0x1, 0x1);
        gbc.writeMem(0xcd16, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfdea, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd16));
        EXPECT(0x96, gbc.readMem(0xcd17));
        // 38 0326
        gbc.setState(0x4386, 0x4267, 0xd620, 0x6f12, 0x60ae, 0x8aaa, 0x0, 0x1);
        gbc.writeMem(0x4386, { 0x38, 0x4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4267, gbc.sp());
        EXPECT(0x4388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0327
        gbc.setState(0xb6b7, 0x7910, 0xca40, 0x6050, 0x2f6e, 0x955b, 0x1, 0x0);
        gbc.writeMem(0xb6b7, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7910, gbc.sp());
        EXPECT(0xb6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb6b7));
        EXPECT(0x4f, gbc.readMem(0xb6b8));
        // 38 0328
        gbc.setState(0xe8a3, 0x7949, 0xc390, 0x527e, 0xd66, 0xa6d9, 0x1, 0x1);
        gbc.writeMem(0xe8a3, { 0x38, 0x8c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7949, gbc.sp());
        EXPECT(0xe831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe8a3));
        EXPECT(0x8c, gbc.readMem(0xe8a4));
        // 38 0329
        gbc.setState(0x505, 0xbf0f, 0xc3d0, 0xda39, 0xbeb6, 0x296d, 0x1, 0x0);
        gbc.writeMem(0x505, { 0x38, 0x13 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0x51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 032A
        gbc.setState(0xa82, 0xc4e0, 0x18b0, 0x799a, 0x5682, 0xcdfd, 0x1, 0x0);
        gbc.writeMem(0xa82, { 0x38, 0x13 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc4e0, gbc.sp());
        EXPECT(0xa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 032B
        gbc.setState(0xc51a, 0xb0b7, 0xa340, 0xce2b, 0x2f79, 0xb931, 0x0, 0x1);
        gbc.writeMem(0xc51a, { 0x38, 0xb3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb0b7, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc51a));
        EXPECT(0xb3, gbc.readMem(0xc51b));
        // 38 032C
        gbc.setState(0xb02d, 0x8e95, 0x7100, 0x3356, 0x8d9a, 0x2345, 0x0, 0x1);
        gbc.writeMem(0xb02d, { 0x38, 0xb8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8e95, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb02d));
        EXPECT(0xb8, gbc.readMem(0xb02e));
        // 38 032D
        gbc.setState(0x48f6, 0x1fba, 0x3c20, 0x1ab, 0x2799, 0x5a27, 0x1, 0x1);
        gbc.writeMem(0x48f6, { 0x38, 0x2d });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1fba, gbc.sp());
        EXPECT(0x48f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 032E
        gbc.setState(0x575e, 0x1c64, 0x3850, 0x6495, 0x9aa, 0x9c6f, 0x1, 0x1);
        gbc.writeMem(0x575e, { 0x38, 0xd0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1c64, gbc.sp());
        EXPECT(0x5730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 032F
        gbc.setState(0xd27c, 0x9603, 0x6040, 0x92c3, 0x8b69, 0xf0f9, 0x1, 0x0);
        gbc.writeMem(0xd27c, { 0x38, 0xc9 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9603, gbc.sp());
        EXPECT(0xd27e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd27c));
        EXPECT(0xc9, gbc.readMem(0xd27d));
        // 38 0330
        gbc.setState(0x6522, 0x2fab, 0xe1c0, 0x901c, 0x99c5, 0x4ad0, 0x1, 0x0);
        gbc.writeMem(0x6522, { 0x38, 0xc0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2fab, gbc.sp());
        EXPECT(0x6524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0331
        gbc.setState(0xde21, 0xa387, 0xb270, 0xafa9, 0x5877, 0x5c8a, 0x1, 0x1);
        gbc.writeMem(0xde21, { 0x38, 0x20 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa387, gbc.sp());
        EXPECT(0xde43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xde21));
        EXPECT(0x20, gbc.readMem(0xde22));
        // 38 0332
        gbc.setState(0x5dd5, 0x8397, 0xc100, 0x9269, 0xe442, 0xcab, 0x0, 0x1);
        gbc.writeMem(0x5dd5, { 0x38, 0x2d });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8397, gbc.sp());
        EXPECT(0x5dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0333
        gbc.setState(0x9a30, 0xa91b, 0x6020, 0xcec3, 0xe75b, 0xd721, 0x0, 0x1);
        gbc.writeMem(0x9a30, { 0x38, 0xfe });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x9a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9a30));
        EXPECT(0xfe, gbc.readMem(0x9a31));
        // 38 0334
        gbc.setState(0x1768, 0xc001, 0x3ad0, 0xb0ea, 0x63e7, 0xb7a, 0x1, 0x0);
        gbc.writeMem(0x1768, { 0x38, 0x84 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc001, gbc.sp());
        EXPECT(0x16ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0335
        gbc.setState(0x63ff, 0x81df, 0x5e0, 0x7f29, 0x9570, 0x3f21, 0x0, 0x1);
        gbc.writeMem(0x63ff, { 0x38, 0x91 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x81df, gbc.sp());
        EXPECT(0x6401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0336
        gbc.setState(0x2553, 0xb5e7, 0xd980, 0x5a2a, 0xc391, 0x2c99, 0x0, 0x0);
        gbc.writeMem(0x2553, { 0x38, 0xf0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0x2555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0337
        gbc.setState(0x21f6, 0x1e8f, 0xea00, 0x5e5b, 0x8621, 0x6315, 0x1, 0x0);
        gbc.writeMem(0x21f6, { 0x38, 0x7f });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1e8f, gbc.sp());
        EXPECT(0x21f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0338
        gbc.setState(0xc8cb, 0x63c9, 0x4dc0, 0xe3d5, 0x3600, 0x8c57, 0x1, 0x0);
        gbc.writeMem(0xc8cb, { 0x38, 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0xc8cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc8cb));
        EXPECT(0xaa, gbc.readMem(0xc8cc));
        // 38 0339
        gbc.setState(0x67aa, 0xcd26, 0xe620, 0xc974, 0x3247, 0xbe4a, 0x0, 0x0);
        gbc.writeMem(0x67aa, { 0x38, 0x9d });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcd26, gbc.sp());
        EXPECT(0x67ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 033A
        gbc.setState(0x1b99, 0x86d0, 0x4120, 0xe14b, 0x80ed, 0x939e, 0x0, 0x0);
        gbc.writeMem(0x1b99, { 0x38, 0x26 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0x1b9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 033B
        gbc.setState(0x83b7, 0x1ab9, 0xc830, 0x2140, 0x63bb, 0xe033, 0x1, 0x0);
        gbc.writeMem(0x83b7, { 0x38, 0x3 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1ab9, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x83b7));
        EXPECT(0x3, gbc.readMem(0x83b8));
        // 38 033C
        gbc.setState(0xa5fd, 0xea6f, 0xde90, 0xf70b, 0x3f04, 0x85a3, 0x0, 0x0);
        gbc.writeMem(0xa5fd, { 0x38, 0x6b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xea6f, gbc.sp());
        EXPECT(0xa66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa5fd));
        EXPECT(0x6b, gbc.readMem(0xa5fe));
        // 38 033D
        gbc.setState(0xcbf6, 0x7d7d, 0x13c0, 0x3a59, 0xe5db, 0x8e7e, 0x0, 0x1);
        gbc.writeMem(0xcbf6, { 0x38, 0xa5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0xcbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcbf6));
        EXPECT(0xa5, gbc.readMem(0xcbf7));
        // 38 033E
        gbc.setState(0x98bc, 0x66fe, 0xd430, 0x8961, 0x662d, 0x93aa, 0x0, 0x1);
        gbc.writeMem(0x98bc, { 0x38, 0x21 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x66fe, gbc.sp());
        EXPECT(0x98df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x98bc));
        EXPECT(0x21, gbc.readMem(0x98bd));
        // 38 033F
        gbc.setState(0x778b, 0x44dd, 0x37a0, 0xc238, 0xc7f0, 0x9c5c, 0x1, 0x1);
        gbc.writeMem(0x778b, { 0x38, 0x38 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x44dd, gbc.sp());
        EXPECT(0x778d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0340
        gbc.setState(0xae30, 0x28b2, 0xefa0, 0xfa1, 0x4c4e, 0x3ed8, 0x0, 0x1);
        gbc.writeMem(0xae30, { 0x38, 0xd0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0xae32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xae30));
        EXPECT(0xd0, gbc.readMem(0xae31));
        // 38 0341
        gbc.setState(0x982, 0x3b86, 0xd930, 0x7a10, 0xf45, 0xda5a, 0x0, 0x0);
        gbc.writeMem(0x982, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3b86, gbc.sp());
        EXPECT(0x912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0342
        gbc.setState(0x2f8, 0x2925, 0xf120, 0xdf84, 0xb948, 0xd58e, 0x1, 0x1);
        gbc.writeMem(0x2f8, { 0x38, 0x60 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2925, gbc.sp());
        EXPECT(0x2fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0343
        gbc.setState(0x6c03, 0xef8e, 0xf000, 0xa65c, 0x5d77, 0x4a56, 0x0, 0x0);
        gbc.writeMem(0x6c03, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xef8e, gbc.sp());
        EXPECT(0x6c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0344
        gbc.setState(0xc8ab, 0x71ba, 0xfdc0, 0xa5ab, 0x82bf, 0x6302, 0x0, 0x1);
        gbc.writeMem(0xc8ab, { 0x38, 0x1f });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x71ba, gbc.sp());
        EXPECT(0xc8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc8ab));
        EXPECT(0x1f, gbc.readMem(0xc8ac));
        // 38 0345
        gbc.setState(0xd817, 0x57b4, 0xf860, 0x7d6f, 0x7b67, 0xd7cb, 0x1, 0x0);
        gbc.writeMem(0xd817, { 0x38, 0x41 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x57b4, gbc.sp());
        EXPECT(0xd819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd817));
        EXPECT(0x41, gbc.readMem(0xd818));
        // 38 0346
        gbc.setState(0xe59f, 0xb13c, 0x2a10, 0x51ef, 0xd84a, 0x4926, 0x1, 0x0);
        gbc.writeMem(0xe59f, { 0x38, 0x84 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb13c, gbc.sp());
        EXPECT(0xe525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe59f));
        EXPECT(0x84, gbc.readMem(0xe5a0));
        // 38 0347
        gbc.setState(0x7786, 0xec12, 0xc190, 0x1614, 0xc1a0, 0x92d4, 0x0, 0x0);
        gbc.writeMem(0x7786, { 0x38, 0x92 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xec12, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0348
        gbc.setState(0x1e20, 0x7dcb, 0x1f60, 0x98cd, 0x6d67, 0x4867, 0x1, 0x1);
        gbc.writeMem(0x1e20, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7dcb, gbc.sp());
        EXPECT(0x1e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0349
        gbc.setState(0x5eec, 0x4c82, 0xeff0, 0x11e4, 0x8af9, 0xef35, 0x1, 0x1);
        gbc.writeMem(0x5eec, { 0x38, 0x6c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4c82, gbc.sp());
        EXPECT(0x5f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 034A
        gbc.setState(0xac37, 0xac07, 0xd2f0, 0x76e5, 0xc1cf, 0xf096, 0x0, 0x1);
        gbc.writeMem(0xac37, { 0x38, 0x16 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xac07, gbc.sp());
        EXPECT(0xac4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xac37));
        EXPECT(0x16, gbc.readMem(0xac38));
        // 38 034B
        gbc.setState(0x38ac, 0x61fb, 0xdcc0, 0x5f61, 0x5eef, 0x60e7, 0x0, 0x1);
        gbc.writeMem(0x38ac, { 0x38, 0xaf });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x61fb, gbc.sp());
        EXPECT(0x38ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 034C
        gbc.setState(0xef7c, 0x7b99, 0x7860, 0xced4, 0xf20f, 0xd7f0, 0x1, 0x1);
        gbc.writeMem(0xef7c, { 0x38, 0x94 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7b99, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xef7c));
        EXPECT(0x94, gbc.readMem(0xef7d));
        // 38 034D
        gbc.setState(0xcb7c, 0x8485, 0x2a20, 0x51e1, 0x8a77, 0x518a, 0x0, 0x1);
        gbc.writeMem(0xcb7c, { 0x38, 0x16 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8485, gbc.sp());
        EXPECT(0xcb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcb7c));
        EXPECT(0x16, gbc.readMem(0xcb7d));
        // 38 034E
        gbc.setState(0x1291, 0xa222, 0xbcf0, 0xd0cd, 0xc78f, 0x2d6, 0x0, 0x1);
        gbc.writeMem(0x1291, { 0x38, 0xd7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa222, gbc.sp());
        EXPECT(0x126a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0350
        gbc.setState(0x6f53, 0xf5ad, 0xdd40, 0x471f, 0x5bf6, 0xaf23, 0x1, 0x0);
        gbc.writeMem(0x6f53, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf5ad, gbc.sp());
        EXPECT(0x6f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0352
        gbc.setState(0x19f5, 0xfa0c, 0x9700, 0x23ea, 0x9b8e, 0xa1d4, 0x0, 0x0);
        gbc.writeMem(0x19f5, { 0x38, 0x1d });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfa0c, gbc.sp());
        EXPECT(0x19f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0353
        gbc.setState(0xdc77, 0x2075, 0x22e0, 0xcd34, 0xb42f, 0x165a, 0x1, 0x1);
        gbc.writeMem(0xdc77, { 0x38, 0xe });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2075, gbc.sp());
        EXPECT(0xdc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdc77));
        EXPECT(0xe, gbc.readMem(0xdc78));
        // 38 0354
        gbc.setState(0xca3d, 0xa17d, 0xfd90, 0x752e, 0x55d6, 0x89dc, 0x1, 0x0);
        gbc.writeMem(0xca3d, { 0x38, 0xb4 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa17d, gbc.sp());
        EXPECT(0xc9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xca3d));
        EXPECT(0xb4, gbc.readMem(0xca3e));
        // 38 0356
        gbc.setState(0xbf5d, 0xdf94, 0xb650, 0xa109, 0x2337, 0x3d9, 0x0, 0x0);
        gbc.writeMem(0xbf5d, { 0x38, 0x8b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdf94, gbc.sp());
        EXPECT(0xbeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbf5d));
        EXPECT(0x8b, gbc.readMem(0xbf5e));
        // 38 0357
        gbc.setState(0x4510, 0xeba7, 0xc20, 0xbe97, 0x3e84, 0xf3c1, 0x0, 0x1);
        gbc.writeMem(0x4510, { 0x38, 0x10 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeba7, gbc.sp());
        EXPECT(0x4512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0358
        gbc.setState(0xbfcd, 0x66e1, 0xe100, 0x8e74, 0xb3b7, 0xcbf8, 0x1, 0x1);
        gbc.writeMem(0xbfcd, { 0x38, 0x34 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x66e1, gbc.sp());
        EXPECT(0xbfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbfcd));
        EXPECT(0x34, gbc.readMem(0xbfce));
        // 38 0359
        gbc.setState(0x5c3, 0x687, 0xf260, 0x739d, 0x2d04, 0xbe65, 0x1, 0x1);
        gbc.writeMem(0x5c3, { 0x38, 0x7f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x687, gbc.sp());
        EXPECT(0x5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 035A
        gbc.setState(0xa796, 0x5f22, 0xeb60, 0xaa2e, 0x294e, 0xf49d, 0x1, 0x1);
        gbc.writeMem(0xa796, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5f22, gbc.sp());
        EXPECT(0xa798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa796));
        EXPECT(0x5e, gbc.readMem(0xa797));
        // 38 035B
        gbc.setState(0xcf2b, 0x775b, 0x42b0, 0xbf8e, 0x2810, 0xb02, 0x0, 0x1);
        gbc.writeMem(0xcf2b, { 0x38, 0x49 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x775b, gbc.sp());
        EXPECT(0xcf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcf2b));
        EXPECT(0x49, gbc.readMem(0xcf2c));
        // 38 035C
        gbc.setState(0x4493, 0xfd40, 0xfce0, 0xbc32, 0xbcbc, 0xd03, 0x1, 0x1);
        gbc.writeMem(0x4493, { 0x38, 0x43 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0x4495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 035D
        gbc.setState(0x53be, 0xc99d, 0xfec0, 0x72fe, 0xfd25, 0xfb07, 0x0, 0x1);
        gbc.writeMem(0x53be, { 0x38, 0xd4 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc99d, gbc.sp());
        EXPECT(0x53c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 035F
        gbc.setState(0xcd72, 0x8edc, 0x4860, 0x279a, 0x6ed8, 0xfefb, 0x1, 0x1);
        gbc.writeMem(0xcd72, { 0x38, 0x88 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8edc, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcd72));
        EXPECT(0x88, gbc.readMem(0xcd73));
        // 38 0360
        gbc.setState(0x3a9a, 0xcdc7, 0x3c40, 0x2380, 0x3903, 0x5b66, 0x1, 0x1);
        gbc.writeMem(0x3a9a, { 0x38, 0xec });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcdc7, gbc.sp());
        EXPECT(0x3a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0361
        gbc.setState(0xe557, 0xda98, 0xfe80, 0x9724, 0x1beb, 0x6d3, 0x0, 0x0);
        gbc.writeMem(0xe557, { 0x38, 0x16 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0xe559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe557));
        EXPECT(0x16, gbc.readMem(0xe558));
        // 38 0362
        gbc.setState(0x8500, 0x5476, 0xbc00, 0x30a6, 0xf0ca, 0xba80, 0x0, 0x0);
        gbc.writeMem(0x8500, { 0x38, 0xe6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5476, gbc.sp());
        EXPECT(0x8502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8500));
        EXPECT(0xe6, gbc.readMem(0x8501));
        // 38 0363
        gbc.setState(0x19dc, 0x2b50, 0x5400, 0x1de4, 0xdd96, 0xf73c, 0x0, 0x0);
        gbc.writeMem(0x19dc, { 0x38, 0x4a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2b50, gbc.sp());
        EXPECT(0x19de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0364
        gbc.setState(0x2f36, 0xc6b4, 0x77a0, 0x4aa1, 0xecad, 0xc421, 0x1, 0x0);
        gbc.writeMem(0x2f36, { 0x38, 0xb9 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc6b4, gbc.sp());
        EXPECT(0x2f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0365
        gbc.setState(0xe34f, 0x5650, 0xd000, 0xe746, 0x1748, 0x39e, 0x0, 0x1);
        gbc.writeMem(0xe34f, { 0x38, 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5650, gbc.sp());
        EXPECT(0xe351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe34f));
        EXPECT(0xd5, gbc.readMem(0xe350));
        // 38 0366
        gbc.setState(0xedf5, 0xd3e2, 0x6590, 0x25b0, 0x1654, 0xf75b, 0x0, 0x0);
        gbc.writeMem(0xedf5, { 0x38, 0x46 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd3e2, gbc.sp());
        EXPECT(0xee3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xedf5));
        EXPECT(0x46, gbc.readMem(0xedf6));
        // 38 0367
        gbc.setState(0x8726, 0xb4e3, 0x96e0, 0xe2a, 0x83a, 0x62e8, 0x0, 0x0);
        gbc.writeMem(0x8726, { 0x38, 0x11 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x8728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8726));
        EXPECT(0x11, gbc.readMem(0x8727));
        // 38 0368
        gbc.setState(0xc015, 0x1540, 0x3860, 0xf54e, 0xafaf, 0xfc8d, 0x1, 0x0);
        gbc.writeMem(0xc015, { 0x38, 0x9 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0xc017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc015));
        EXPECT(0x9, gbc.readMem(0xc016));
        // 38 0369
        gbc.setState(0x57bf, 0xd682, 0xe540, 0x2d5f, 0x4f29, 0xfbaf, 0x0, 0x1);
        gbc.writeMem(0x57bf, { 0x38, 0x8b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd682, gbc.sp());
        EXPECT(0x57c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 036A
        gbc.setState(0xae37, 0x17a1, 0x8f50, 0xfa05, 0x5074, 0xda39, 0x1, 0x0);
        gbc.writeMem(0xae37, { 0x38, 0x82 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x17a1, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xae37));
        EXPECT(0x82, gbc.readMem(0xae38));
        // 38 036B
        gbc.setState(0x66b, 0x87e2, 0x20b0, 0x9f11, 0x9138, 0xdac2, 0x1, 0x1);
        gbc.writeMem(0x66b, { 0x38, 0x4a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x87e2, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 036C
        gbc.setState(0xee8d, 0x85b1, 0xc340, 0xff7, 0x90bc, 0x704b, 0x1, 0x1);
        gbc.writeMem(0xee8d, { 0x38, 0x90 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0xee8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xee8d));
        EXPECT(0x90, gbc.readMem(0xee8e));
        // 38 036D
        gbc.setState(0xb6d8, 0x5994, 0xb930, 0x62b0, 0xb9d7, 0x6a0c, 0x0, 0x1);
        gbc.writeMem(0xb6d8, { 0x38, 0x45 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5994, gbc.sp());
        EXPECT(0xb71f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb6d8));
        EXPECT(0x45, gbc.readMem(0xb6d9));
        // 38 036E
        gbc.setState(0x761d, 0xf582, 0xdea0, 0x366e, 0x9c6, 0x1d9a, 0x1, 0x1);
        gbc.writeMem(0x761d, { 0x38, 0x82 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0x761f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 036F
        gbc.setState(0x5808, 0x3ddc, 0x42b0, 0xb808, 0x9797, 0xe8b3, 0x0, 0x0);
        gbc.writeMem(0x5808, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0x57ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0371
        gbc.setState(0xe425, 0xc5d4, 0xf4b0, 0x98a4, 0x6e71, 0xf29b, 0x1, 0x0);
        gbc.writeMem(0xe425, { 0x38, 0xb9 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc5d4, gbc.sp());
        EXPECT(0xe3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe425));
        EXPECT(0xb9, gbc.readMem(0xe426));
        // 38 0372
        gbc.setState(0x418a, 0xa55d, 0xf8f0, 0xfd3d, 0x211d, 0x5be8, 0x0, 0x0);
        gbc.writeMem(0x418a, { 0x38, 0x68 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa55d, gbc.sp());
        EXPECT(0x41f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0373
        gbc.setState(0x8c53, 0x7581, 0xabb0, 0x1d11, 0x56d8, 0x2a77, 0x0, 0x0);
        gbc.writeMem(0x8c53, { 0x38, 0xa1 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7581, gbc.sp());
        EXPECT(0x8bf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8c53));
        EXPECT(0xa1, gbc.readMem(0x8c54));
        // 38 0375
        gbc.setState(0xcb73, 0x7cda, 0x3ff0, 0xea45, 0x1258, 0xc20a, 0x1, 0x0);
        gbc.writeMem(0xcb73, { 0x38, 0xa8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7cda, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcb73));
        EXPECT(0xa8, gbc.readMem(0xcb74));
        // 38 0376
        gbc.setState(0x66a6, 0xebe8, 0x1160, 0x3f38, 0x4373, 0x7982, 0x0, 0x0);
        gbc.writeMem(0x66a6, { 0x38, 0x40 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xebe8, gbc.sp());
        EXPECT(0x66a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0377
        gbc.setState(0xc932, 0xce3, 0x8360, 0xbf0b, 0x62df, 0xff47, 0x0, 0x0);
        gbc.writeMem(0xc932, { 0x38, 0xc7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xce3, gbc.sp());
        EXPECT(0xc934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc932));
        EXPECT(0xc7, gbc.readMem(0xc933));
        // 38 0378
        gbc.setState(0x13e3, 0xc692, 0x9240, 0xf481, 0x219e, 0x85be, 0x1, 0x1);
        gbc.writeMem(0x13e3, { 0x38, 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc692, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0379
        gbc.setState(0x744, 0x2611, 0x4590, 0x350c, 0x33f8, 0x9e44, 0x1, 0x1);
        gbc.writeMem(0x744, { 0x38, 0xf8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2611, gbc.sp());
        EXPECT(0x73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 037B
        gbc.setState(0x58db, 0xc304, 0xec10, 0xf68e, 0x3481, 0xfaf5, 0x0, 0x0);
        gbc.writeMem(0x58db, { 0x38, 0x97 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc304, gbc.sp());
        EXPECT(0x5874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 037C
        gbc.setState(0x7560, 0x3bf2, 0xdc50, 0x24a1, 0x5f7d, 0x3828, 0x0, 0x0);
        gbc.writeMem(0x7560, { 0x38, 0x24 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3bf2, gbc.sp());
        EXPECT(0x7586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 037D
        gbc.setState(0xda0f, 0x65ea, 0x9fe0, 0x1060, 0x8c92, 0x9a45, 0x0, 0x0);
        gbc.writeMem(0xda0f, { 0x38, 0x8b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x65ea, gbc.sp());
        EXPECT(0xda11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xda0f));
        EXPECT(0x8b, gbc.readMem(0xda10));
        // 38 037E
        gbc.setState(0x186b, 0x7515, 0x31d0, 0xf94d, 0xde1d, 0xb79, 0x0, 0x1);
        gbc.writeMem(0x186b, { 0x38, 0x45 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7515, gbc.sp());
        EXPECT(0x18b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 037F
        gbc.setState(0x441b, 0x3bc5, 0x7160, 0xb486, 0xcdf1, 0x27b6, 0x1, 0x0);
        gbc.writeMem(0x441b, { 0x38, 0xe5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3bc5, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0380
        gbc.setState(0x3b8, 0xf8f8, 0x55a0, 0xa148, 0xbb74, 0x6509, 0x1, 0x0);
        gbc.writeMem(0x3b8, { 0x38, 0x87 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf8f8, gbc.sp());
        EXPECT(0x3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0381
        gbc.setState(0xa467, 0xfd8c, 0x35b0, 0x1248, 0x8274, 0x342, 0x1, 0x0);
        gbc.writeMem(0xa467, { 0x38, 0xf9 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfd8c, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa467));
        EXPECT(0xf9, gbc.readMem(0xa468));
        // 38 0382
        gbc.setState(0xcf99, 0x33de, 0x81f0, 0x1615, 0x2d5d, 0x2574, 0x1, 0x0);
        gbc.writeMem(0xcf99, { 0x38, 0xb3 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x33de, gbc.sp());
        EXPECT(0xcf4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcf99));
        EXPECT(0xb3, gbc.readMem(0xcf9a));
        // 38 0383
        gbc.setState(0xbac9, 0x5ec, 0x6700, 0xadb0, 0xd6a6, 0x1050, 0x1, 0x0);
        gbc.writeMem(0xbac9, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbac9));
        EXPECT(0x8e, gbc.readMem(0xbaca));
        // 38 0384
        gbc.setState(0x5cc7, 0x5f7a, 0x6410, 0xef6a, 0x92f9, 0xcb0f, 0x0, 0x0);
        gbc.writeMem(0x5cc7, { 0x38, 0x2b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5f7a, gbc.sp());
        EXPECT(0x5cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0386
        gbc.setState(0xd720, 0x2e47, 0xb2f0, 0xf208, 0xe85e, 0xe901, 0x1, 0x0);
        gbc.writeMem(0xd720, { 0x38, 0x83 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2e47, gbc.sp());
        EXPECT(0xd6a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd720));
        EXPECT(0x83, gbc.readMem(0xd721));
        // 38 0387
        gbc.setState(0x3dd6, 0x5d8a, 0xc230, 0xfdad, 0x1d04, 0x4005, 0x0, 0x1);
        gbc.writeMem(0x3dd6, { 0x38, 0xd5 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0x3dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0388
        gbc.setState(0xa439, 0x80ec, 0xdd30, 0x9e43, 0x2a58, 0xbdb6, 0x1, 0x0);
        gbc.writeMem(0xa439, { 0x38, 0x71 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0xa4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa439));
        EXPECT(0x71, gbc.readMem(0xa43a));
        // 38 0389
        gbc.setState(0x4e5e, 0x70ed, 0x3700, 0x606a, 0x7e4f, 0x2a4e, 0x0, 0x0);
        gbc.writeMem(0x4e5e, { 0x38, 0xed });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0x4e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 038A
        gbc.setState(0xedf0, 0xd412, 0x55a0, 0xfb27, 0x4f33, 0xf947, 0x1, 0x1);
        gbc.writeMem(0xedf0, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0xedf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xedf0));
        EXPECT(0x53, gbc.readMem(0xedf1));
        // 38 038B
        gbc.setState(0xcdca, 0x9384, 0xeba0, 0xd91b, 0x9f5, 0x2ace, 0x0, 0x0);
        gbc.writeMem(0xcdca, { 0x38, 0xb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9384, gbc.sp());
        EXPECT(0xcdcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xcdca));
        EXPECT(0xb, gbc.readMem(0xcdcb));
        // 38 038C
        gbc.setState(0xd12, 0x5b16, 0xfa80, 0xbf68, 0x23b5, 0xb119, 0x1, 0x0);
        gbc.writeMem(0xd12, { 0x38, 0x8a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5b16, gbc.sp());
        EXPECT(0xd14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 038D
        gbc.setState(0x28e, 0xd277, 0xd790, 0xebd9, 0xee65, 0xb65a, 0x0, 0x0);
        gbc.writeMem(0x28e, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd277, gbc.sp());
        EXPECT(0x226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 038E
        gbc.setState(0xdbec, 0xbda6, 0x5290, 0x605b, 0x400, 0x7470, 0x0, 0x0);
        gbc.writeMem(0xdbec, { 0x38, 0xde });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbda6, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdbec));
        EXPECT(0xde, gbc.readMem(0xdbed));
        // 38 0390
        gbc.setState(0xc64, 0xf5b6, 0x9310, 0x6357, 0x5a12, 0x531, 0x0, 0x0);
        gbc.writeMem(0xc64, { 0x38, 0xaf });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf5b6, gbc.sp());
        EXPECT(0xc15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 0392
        gbc.setState(0x96d, 0x808b, 0xf580, 0x12c5, 0x6f2a, 0xa43d, 0x0, 0x0);
        gbc.writeMem(0x96d, { 0x38, 0xec });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x808b, gbc.sp());
        EXPECT(0x96f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0393
        gbc.setState(0x8610, 0xe246, 0x5f70, 0x34a3, 0x6901, 0xa0d6, 0x1, 0x0);
        gbc.writeMem(0x8610, { 0x38, 0xe1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe246, gbc.sp());
        EXPECT(0x85f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8610));
        EXPECT(0xe1, gbc.readMem(0x8611));
        // 38 0394
        gbc.setState(0x6286, 0xb0be, 0x1cc0, 0x720b, 0xb91f, 0xadc6, 0x1, 0x0);
        gbc.writeMem(0x6286, { 0x38, 0x56 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb0be, gbc.sp());
        EXPECT(0x6288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0395
        gbc.setState(0xb068, 0x463e, 0x6000, 0xd93c, 0xa6e6, 0x567b, 0x1, 0x1);
        gbc.writeMem(0xb068, { 0x38, 0x2a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0xb06a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb068));
        EXPECT(0x2a, gbc.readMem(0xb069));
        // 38 0396
        gbc.setState(0xe77e, 0x9958, 0x430, 0x5c24, 0x96ee, 0xc1e3, 0x1, 0x1);
        gbc.writeMem(0xe77e, { 0x38, 0x61 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9958, gbc.sp());
        EXPECT(0xe7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe77e));
        EXPECT(0x61, gbc.readMem(0xe77f));
        // 38 0397
        gbc.setState(0xe7f5, 0xead5, 0xcaf0, 0xd96d, 0x5b53, 0x9b2f, 0x1, 0x1);
        gbc.writeMem(0xe7f5, { 0x38, 0x9 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xead5, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe7f5));
        EXPECT(0x9, gbc.readMem(0xe7f6));
        // 38 0398
        gbc.setState(0x7080, 0xd66, 0x22e0, 0xf4c5, 0xaa8e, 0xc70f, 0x1, 0x0);
        gbc.writeMem(0x7080, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd66, gbc.sp());
        EXPECT(0x7082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 0399
        gbc.setState(0xbb17, 0xb37e, 0x9360, 0xdd2d, 0x32a5, 0xf0a2, 0x1, 0x1);
        gbc.writeMem(0xbb17, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb37e, gbc.sp());
        EXPECT(0xbb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbb17));
        EXPECT(0x53, gbc.readMem(0xbb18));
        // 38 039A
        gbc.setState(0xc48b, 0xff71, 0x8340, 0x8d44, 0xcca9, 0xf073, 0x1, 0x0);
        gbc.writeMem(0xc48b, { 0x38, 0x32 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xff71, gbc.sp());
        EXPECT(0xc48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc48b));
        EXPECT(0x32, gbc.readMem(0xc48c));
        // 38 039B
        gbc.setState(0x21c5, 0x3fbe, 0xbef0, 0xcff2, 0x68b4, 0x9aa8, 0x0, 0x0);
        gbc.writeMem(0x21c5, { 0x38, 0xf4 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0x21bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 039C
        gbc.setState(0xdbd3, 0x8972, 0x72d0, 0x25fb, 0xc505, 0x7d3e, 0x1, 0x0);
        gbc.writeMem(0xdbd3, { 0x38, 0x76 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8972, gbc.sp());
        EXPECT(0xdc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdbd3));
        EXPECT(0x76, gbc.readMem(0xdbd4));
        // 38 039D
        gbc.setState(0x85f6, 0x56b2, 0x5030, 0xfc2a, 0x8da1, 0x1e8b, 0x0, 0x1);
        gbc.writeMem(0x85f6, { 0x38, 0x52 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x56b2, gbc.sp());
        EXPECT(0x864a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x85f6));
        EXPECT(0x52, gbc.readMem(0x85f7));
        // 38 039E
        gbc.setState(0x194a, 0x6a99, 0xf860, 0x3e0e, 0x416, 0x7f9c, 0x0, 0x0);
        gbc.writeMem(0x194a, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6a99, gbc.sp());
        EXPECT(0x194c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 039F
        gbc.setState(0x6776, 0x2d9d, 0x1650, 0x2191, 0x537d, 0xc7c7, 0x0, 0x0);
        gbc.writeMem(0x6776, { 0x38, 0xc2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2d9d, gbc.sp());
        EXPECT(0x673a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03A0
        gbc.setState(0xa8ac, 0x8051, 0xb90, 0xdef3, 0x699b, 0xc25, 0x1, 0x0);
        gbc.writeMem(0xa8ac, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8051, gbc.sp());
        EXPECT(0xa901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa8ac));
        EXPECT(0x53, gbc.readMem(0xa8ad));
        // 38 03A1
        gbc.setState(0x77e7, 0x23fa, 0x2ec0, 0x310a, 0x84c8, 0xe2ed, 0x1, 0x0);
        gbc.writeMem(0x77e7, { 0x38, 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x23fa, gbc.sp());
        EXPECT(0x77e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03A2
        gbc.setState(0xd7a1, 0x4880, 0x51e0, 0xdaee, 0xdfca, 0xa556, 0x1, 0x1);
        gbc.writeMem(0xd7a1, { 0x38, 0x76 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4880, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd7a1));
        EXPECT(0x76, gbc.readMem(0xd7a2));
        // 38 03A3
        gbc.setState(0x3a3e, 0x4a07, 0x1330, 0xc00, 0x4a4c, 0xb68e, 0x1, 0x0);
        gbc.writeMem(0x3a3e, { 0x38, 0x3a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4a07, gbc.sp());
        EXPECT(0x3a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03A5
        gbc.setState(0xe09e, 0xa14b, 0x5b30, 0x398b, 0x78f0, 0xcf0d, 0x0, 0x0);
        gbc.writeMem(0xe09e, { 0x38, 0x13 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0xe0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe09e));
        EXPECT(0x13, gbc.readMem(0xe09f));
        // 38 03A6
        gbc.setState(0xda91, 0xfda5, 0x6350, 0x54f8, 0x71a4, 0x73ec, 0x0, 0x0);
        gbc.writeMem(0xda91, { 0x38, 0xee });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0xda81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xda91));
        EXPECT(0xee, gbc.readMem(0xda92));
        // 38 03A7
        gbc.setState(0xd949, 0x8ed5, 0x2260, 0xcb85, 0xa37c, 0xc87, 0x0, 0x0);
        gbc.writeMem(0xd949, { 0x38, 0x4a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd949));
        EXPECT(0x4a, gbc.readMem(0xd94a));
        // 38 03A8
        gbc.setState(0x134b, 0xcc1e, 0xc800, 0x5ef5, 0xf036, 0xbe1a, 0x0, 0x1);
        gbc.writeMem(0x134b, { 0x38, 0x46 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcc1e, gbc.sp());
        EXPECT(0x134d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03A9
        gbc.setState(0x37fe, 0x75b6, 0x5fa0, 0x91a6, 0xf6ff, 0x3e83, 0x0, 0x1);
        gbc.writeMem(0x37fe, { 0x38, 0x9e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x75b6, gbc.sp());
        EXPECT(0x3800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03AA
        gbc.setState(0xbf56, 0x8b37, 0x2b70, 0x4f78, 0x8f4a, 0x47cd, 0x1, 0x0);
        gbc.writeMem(0xbf56, { 0x38, 0x8f });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8b37, gbc.sp());
        EXPECT(0xbee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbf56));
        EXPECT(0x8f, gbc.readMem(0xbf57));
        // 38 03AB
        gbc.setState(0x4588, 0xce64, 0x1870, 0xb5e3, 0x5f35, 0x4af, 0x0, 0x0);
        gbc.writeMem(0x4588, { 0x38, 0x9 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xce64, gbc.sp());
        EXPECT(0x4593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03AC
        gbc.setState(0xa94f, 0x2a73, 0x4b50, 0x9cc1, 0x7101, 0x1689, 0x0, 0x0);
        gbc.writeMem(0xa94f, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2a73, gbc.sp());
        EXPECT(0xa9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa94f));
        EXPECT(0x53, gbc.readMem(0xa950));
        // 38 03AD
        gbc.setState(0xb880, 0x80ff, 0xabb0, 0xb80c, 0x626b, 0xca2f, 0x0, 0x0);
        gbc.writeMem(0xb880, { 0x38, 0x1c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x80ff, gbc.sp());
        EXPECT(0xb89e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb880));
        EXPECT(0x1c, gbc.readMem(0xb881));
        // 38 03AE
        gbc.setState(0x16c3, 0xc552, 0x98a0, 0xd874, 0x8e08, 0xd209, 0x0, 0x0);
        gbc.writeMem(0x16c3, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc552, gbc.sp());
        EXPECT(0x16c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03AF
        gbc.setState(0x1f01, 0xdace, 0x4020, 0x2fb3, 0x82bf, 0xbd2, 0x1, 0x1);
        gbc.writeMem(0x1f01, { 0x38, 0xc2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdace, gbc.sp());
        EXPECT(0x1f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03B0
        gbc.setState(0xa63a, 0xf31, 0x88b0, 0xdc55, 0xad0, 0x3afa, 0x0, 0x0);
        gbc.writeMem(0xa63a, { 0x38, 0xb1 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0xa5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xa63a));
        EXPECT(0xb1, gbc.readMem(0xa63b));
        // 38 03B1
        gbc.setState(0x62c0, 0x66f6, 0xc480, 0x7edc, 0x375, 0x17e7, 0x0, 0x0);
        gbc.writeMem(0x62c0, { 0x38, 0xa3 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x66f6, gbc.sp());
        EXPECT(0x62c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03B2
        gbc.setState(0xb3c, 0xf671, 0x48c0, 0xe93f, 0xde01, 0x2da8, 0x1, 0x1);
        gbc.writeMem(0xb3c, { 0x38, 0xc2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf671, gbc.sp());
        EXPECT(0xb3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03B3
        gbc.setState(0x990d, 0xac6f, 0x54e0, 0xfacf, 0x847, 0x7aba, 0x0, 0x1);
        gbc.writeMem(0x990d, { 0x38, 0xe1 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0x990f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x990d));
        EXPECT(0xe1, gbc.readMem(0x990e));
        // 38 03B4
        gbc.setState(0xd386, 0x38d7, 0xc7b0, 0xa76d, 0x1dbf, 0x1d6d, 0x0, 0x0);
        gbc.writeMem(0xd386, { 0x38, 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0xd39d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd386));
        EXPECT(0x15, gbc.readMem(0xd387));
        // 38 03B5
        gbc.setState(0xdc1b, 0xb8d8, 0x2d0, 0xfe2c, 0xadbb, 0x1117, 0x0, 0x1);
        gbc.writeMem(0xdc1b, { 0x38, 0x5b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb8d8, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xdc1b));
        EXPECT(0x5b, gbc.readMem(0xdc1c));
        // 38 03B6
        gbc.setState(0x1a29, 0x4c0d, 0x8950, 0x966c, 0x5ba2, 0xb466, 0x0, 0x1);
        gbc.writeMem(0x1a29, { 0x38, 0x91 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4c0d, gbc.sp());
        EXPECT(0x19bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03B7
        gbc.setState(0xbac9, 0x87a8, 0xfaa0, 0xe645, 0x704a, 0xffa1, 0x0, 0x0);
        gbc.writeMem(0xbac9, { 0x38, 0x8e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x87a8, gbc.sp());
        EXPECT(0xbacb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbac9));
        EXPECT(0x8e, gbc.readMem(0xbaca));
        // 38 03B8
        gbc.setState(0x4aa3, 0xa38c, 0xf9d0, 0xdb3a, 0x2aca, 0xcc96, 0x1, 0x1);
        gbc.writeMem(0x4aa3, { 0x38, 0x53 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa38c, gbc.sp());
        EXPECT(0x4af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03B9
        gbc.setState(0xd956, 0x27a6, 0x87e0, 0xab26, 0xad1d, 0x7c00, 0x0, 0x1);
        gbc.writeMem(0xd956, { 0x38, 0xd9 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x27a6, gbc.sp());
        EXPECT(0xd958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd956));
        EXPECT(0xd9, gbc.readMem(0xd957));
        // 38 03BB
        gbc.setState(0x4065, 0x224c, 0x9f80, 0xef0a, 0x98f2, 0xbb16, 0x0, 0x1);
        gbc.writeMem(0x4065, { 0x38, 0x1f });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x224c, gbc.sp());
        EXPECT(0x4067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03BC
        gbc.setState(0x38f1, 0x3865, 0x76d0, 0x38ff, 0xa171, 0xcf48, 0x1, 0x0);
        gbc.writeMem(0x38f1, { 0x38, 0x31 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3865, gbc.sp());
        EXPECT(0x3924, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03BD
        gbc.setState(0xc08a, 0xbe2a, 0x3b40, 0xe476, 0x172c, 0xaa52, 0x1, 0x0);
        gbc.writeMem(0xc08a, { 0x38, 0x64 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbe2a, gbc.sp());
        EXPECT(0xc08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc08a));
        EXPECT(0x64, gbc.readMem(0xc08b));
        // 38 03BE
        gbc.setState(0x79a0, 0xcdb, 0x37b0, 0xff9, 0xe45e, 0xa1ea, 0x0, 0x1);
        gbc.writeMem(0x79a0, { 0x38, 0xfb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcdb, gbc.sp());
        EXPECT(0x799d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03BF
        gbc.setState(0xe93, 0x225a, 0x5930, 0xf7bc, 0x254c, 0x9bc7, 0x0, 0x1);
        gbc.writeMem(0xe93, { 0x38, 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x225a, gbc.sp());
        EXPECT(0xe1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03C0
        gbc.setState(0xeb9a, 0xbe11, 0xac70, 0x7834, 0xbcd2, 0x2b40, 0x0, 0x0);
        gbc.writeMem(0xeb9a, { 0x38, 0x54 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbe11, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xeb9a));
        EXPECT(0x54, gbc.readMem(0xeb9b));
        // 38 03C1
        gbc.setState(0x3870, 0x9f7, 0xbf40, 0x5046, 0x99f2, 0xac58, 0x0, 0x1);
        gbc.writeMem(0x3870, { 0x38, 0x73 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9f7, gbc.sp());
        EXPECT(0x3872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03C2
        gbc.setState(0xc755, 0x6a37, 0xb8c0, 0xe15c, 0xca2f, 0x7b61, 0x0, 0x0);
        gbc.writeMem(0xc755, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6a37, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc755));
        EXPECT(0x96, gbc.readMem(0xc756));
        // 38 03C3
        gbc.setState(0x1181, 0x56bd, 0x6f80, 0x2d6b, 0xe7e9, 0xfb7d, 0x0, 0x0);
        gbc.writeMem(0x1181, { 0x38, 0x74 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x56bd, gbc.sp());
        EXPECT(0x1183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03C4
        gbc.setState(0xac80, 0xa9a7, 0xdee0, 0xf0d4, 0x71dd, 0xa83b, 0x1, 0x0);
        gbc.writeMem(0xac80, { 0x38, 0x27 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa9a7, gbc.sp());
        EXPECT(0xac82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xac80));
        EXPECT(0x27, gbc.readMem(0xac81));
        // 38 03C5
        gbc.setState(0x91e5, 0x2904, 0xfc60, 0x7df, 0x2a5a, 0xb79f, 0x0, 0x1);
        gbc.writeMem(0x91e5, { 0x38, 0xe1 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2904, gbc.sp());
        EXPECT(0x91e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x91e5));
        EXPECT(0xe1, gbc.readMem(0x91e6));
        // 38 03C6
        gbc.setState(0x9666, 0xebe1, 0x7e90, 0x255a, 0x2323, 0xf5ab, 0x0, 0x0);
        gbc.writeMem(0x9666, { 0x38, 0xf6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x965e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9666));
        EXPECT(0xf6, gbc.readMem(0x9667));
        // 38 03C7
        gbc.setState(0xac11, 0x358, 0x8c40, 0x86b3, 0xadc6, 0xcaee, 0x1, 0x0);
        gbc.writeMem(0xac11, { 0x38, 0x5e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x358, gbc.sp());
        EXPECT(0xac13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xac11));
        EXPECT(0x5e, gbc.readMem(0xac12));
        // 38 03C8
        gbc.setState(0xd8c0, 0x9bff, 0xb790, 0xe6c6, 0x8d91, 0x7bae, 0x1, 0x1);
        gbc.writeMem(0xd8c0, { 0x38, 0x65 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9bff, gbc.sp());
        EXPECT(0xd927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xd8c0));
        EXPECT(0x65, gbc.readMem(0xd8c1));
        // 38 03CA
        gbc.setState(0x1159, 0xb46e, 0x7570, 0x7efd, 0x46fb, 0xbc60, 0x1, 0x1);
        gbc.writeMem(0x1159, { 0x38, 0xab });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb46e, gbc.sp());
        EXPECT(0x1106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03CB
        gbc.setState(0x165a, 0x6083, 0x9320, 0xac23, 0x35c3, 0x7863, 0x1, 0x1);
        gbc.writeMem(0x165a, { 0x38, 0x2b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6083, gbc.sp());
        EXPECT(0x165c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03CC
        gbc.setState(0x337a, 0x4b3a, 0xbfc0, 0x3fb9, 0x18ba, 0xee4e, 0x1, 0x0);
        gbc.writeMem(0x337a, { 0x38, 0x45 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4b3a, gbc.sp());
        EXPECT(0x337c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03CD
        gbc.setState(0x99c5, 0x7425, 0x50f0, 0x3746, 0x48b9, 0x8621, 0x0, 0x0);
        gbc.writeMem(0x99c5, { 0x38, 0x41 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7425, gbc.sp());
        EXPECT(0x9a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x99c5));
        EXPECT(0x41, gbc.readMem(0x99c6));
        // 38 03CE
        gbc.setState(0x937, 0xa2b0, 0xd600, 0xbfd3, 0x4b58, 0xa7d2, 0x0, 0x1);
        gbc.writeMem(0x937, { 0x38, 0xbd });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa2b0, gbc.sp());
        EXPECT(0x939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03CF
        gbc.setState(0x575d, 0x7f51, 0x8310, 0x5675, 0x7556, 0x5869, 0x0, 0x1);
        gbc.writeMem(0x575d, { 0x38, 0x96 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7f51, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03D0
        gbc.setState(0x2306, 0xff2b, 0x3200, 0x135e, 0x874f, 0x9489, 0x0, 0x1);
        gbc.writeMem(0x2306, { 0x38, 0x92 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xff2b, gbc.sp());
        EXPECT(0x2308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03D1
        gbc.setState(0x9210, 0xfe52, 0x3310, 0x173, 0x607b, 0xf538, 0x0, 0x1);
        gbc.writeMem(0x9210, { 0x38, 0x6f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfe52, gbc.sp());
        EXPECT(0x9281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9210));
        EXPECT(0x6f, gbc.readMem(0x9211));
        // 38 03D2
        gbc.setState(0x54c4, 0x3990, 0x5540, 0x2a90, 0x466, 0x473e, 0x1, 0x1);
        gbc.writeMem(0x54c4, { 0x38, 0xc6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3990, gbc.sp());
        EXPECT(0x54c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03D4
        gbc.setState(0xc742, 0xa321, 0x2a0, 0x3954, 0x8da0, 0x6ae6, 0x0, 0x0);
        gbc.writeMem(0xc742, { 0x38, 0x4f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0xc744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xc742));
        EXPECT(0x4f, gbc.readMem(0xc743));
        // 38 03D5
        gbc.setState(0x2eed, 0xdea9, 0x3610, 0x5306, 0x1738, 0xf13a, 0x1, 0x1);
        gbc.writeMem(0x2eed, { 0x38, 0xf6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdea9, gbc.sp());
        EXPECT(0x2ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03D6
        gbc.setState(0xe860, 0x2adc, 0xd220, 0xe300, 0xb34d, 0xf6a2, 0x0, 0x1);
        gbc.writeMem(0xe860, { 0x38, 0x44 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0xe862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe860));
        EXPECT(0x44, gbc.readMem(0xe861));
        // 38 03D7
        gbc.setState(0x4b0c, 0xf76c, 0x26c0, 0xd1c7, 0x31c, 0xcea7, 0x0, 0x1);
        gbc.writeMem(0x4b0c, { 0x38, 0xf5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf76c, gbc.sp());
        EXPECT(0x4b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03D8
        gbc.setState(0xb2d2, 0xf8f, 0xe520, 0x6484, 0x863b, 0xbd24, 0x0, 0x1);
        gbc.writeMem(0xb2d2, { 0x38, 0x4a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf8f, gbc.sp());
        EXPECT(0xb2d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb2d2));
        EXPECT(0x4a, gbc.readMem(0xb2d3));
        // 38 03D9
        gbc.setState(0x7017, 0xd70f, 0x4140, 0xe7af, 0x441f, 0xdd46, 0x1, 0x1);
        gbc.writeMem(0x7017, { 0x38, 0x92 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd70f, gbc.sp());
        EXPECT(0x7019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03DA
        gbc.setState(0x85bb, 0xb1ed, 0x7510, 0xb0d1, 0x1a26, 0xf58, 0x0, 0x0);
        gbc.writeMem(0x85bb, { 0x38, 0x9a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb1ed, gbc.sp());
        EXPECT(0x8557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x85bb));
        EXPECT(0x9a, gbc.readMem(0x85bc));
        // 38 03DB
        gbc.setState(0x9769, 0xc15f, 0x7630, 0x1e17, 0x6eed, 0x37d5, 0x0, 0x0);
        gbc.writeMem(0x9769, { 0x38, 0xc1 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc15f, gbc.sp());
        EXPECT(0x972c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x9769));
        EXPECT(0xc1, gbc.readMem(0x976a));
        // 38 03DC
        gbc.setState(0xbe17, 0xd201, 0x5330, 0x165c, 0xd0ac, 0x6eba, 0x1, 0x0);
        gbc.writeMem(0xbe17, { 0x38, 0xd1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0xbdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xbe17));
        EXPECT(0xd1, gbc.readMem(0xbe18));
        // 38 03DD
        gbc.setState(0x69cb, 0x95cb, 0xb5a0, 0xc69c, 0xfba3, 0x8d19, 0x1, 0x0);
        gbc.writeMem(0x69cb, { 0x38, 0x6b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x95cb, gbc.sp());
        EXPECT(0x69cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03DE
        gbc.setState(0x7a8b, 0x6b82, 0x5c50, 0x6137, 0x1e2d, 0xae98, 0x0, 0x1);
        gbc.writeMem(0x7a8b, { 0x38, 0xf3 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6b82, gbc.sp());
        EXPECT(0x7a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03DF
        gbc.setState(0x6dc8, 0x19bc, 0x7390, 0xc74b, 0xce13, 0x6c1e, 0x0, 0x0);
        gbc.writeMem(0x6dc8, { 0x38, 0x1d });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x19bc, gbc.sp());
        EXPECT(0x6de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03E0
        gbc.setState(0x5842, 0xc25a, 0x4b80, 0xf051, 0xc49d, 0xd349, 0x1, 0x0);
        gbc.writeMem(0x5842, { 0x38, 0xe6 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x5844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03E2
        gbc.setState(0xc29, 0xe342, 0xbeb0, 0x7efd, 0xcc8b, 0x8010, 0x0, 0x0);
        gbc.writeMem(0xc29, { 0x38, 0x47 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe342, gbc.sp());
        EXPECT(0xc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03E3
        gbc.setState(0x7d26, 0x35fe, 0x34a0, 0x8bde, 0x2c02, 0x67e5, 0x0, 0x1);
        gbc.writeMem(0x7d26, { 0x38, 0xfc });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x35fe, gbc.sp());
        EXPECT(0x7d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 38 03E4
        gbc.setState(0xea23, 0xe099, 0xd1a0, 0x3db9, 0xdeee, 0x2f67, 0x1, 0x0);
        gbc.writeMem(0xea23, { 0x38, 0xec });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe099, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xea23));
        EXPECT(0xec, gbc.readMem(0xea24));
        // 38 03E5
        gbc.setState(0xaee3, 0x93d0, 0xc0f0, 0x4a57, 0x178c, 0x13ea, 0x0, 0x0);
        gbc.writeMem(0xaee3, { 0x38, 0xbb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x93d0, gbc.sp());
        EXPECT(0xaea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xaee3));
        EXPECT(0xbb, gbc.readMem(0xaee4));
        // 38 03E6
        gbc.setState(0x4dbb, 0x6546, 0x41f0, 0xf126, 0xe05f, 0x8527, 0x0, 0x0);
        gbc.writeMem(0x4dbb, { 0x38, 0xc8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6546, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 38 03E7
        gbc.setState(0x60cd, 0xff53, 0xf490, 0x1be, 0xa2eb, 0x1dd9, 0x1, 0x1);
        gbc.writeMem(0x60cd, { 0x38, 0x90 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xff53, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
