    TEST(gbcemu, opcode_cb_10) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 10 0000
        gbc.setState(0x98f9, 0x2b26, 0x1580, 0x1f62, 0x6476, 0xb3e7, 0x1, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2b26);
        EXPECT(gbc.pc(), 0x98fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f9), 0xcb);
        EXPECT(gbc.readMem(0x98fa), 0x10);
        // CB 10 0001
        gbc.setState(0xe4b4, 0xf502, 0x6a80, 0xce9f, 0x85ef, 0x46e5, 0x1, 0x1);
        gbc.writeMem(0xe4b4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf502);
        EXPECT(gbc.pc(), 0xe4b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4b4), 0xcb);
        EXPECT(gbc.readMem(0xe4b5), 0x10);
        // CB 10 0002
        gbc.setState(0x2ec, 0x175e, 0x34e0, 0xb7fc, 0xdca4, 0xc596, 0x0, 0x0);
        gbc.writeMem(0x2ec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x175e);
        EXPECT(gbc.pc(), 0x2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0003
        gbc.setState(0x9446, 0x6a5f, 0x20b0, 0x8f86, 0x7e7d, 0x464d, 0x0, 0x1);
        gbc.writeMem(0x9446, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6a5f);
        EXPECT(gbc.pc(), 0x9448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9446), 0xcb);
        EXPECT(gbc.readMem(0x9447), 0x10);
        // CB 10 0004
        gbc.setState(0x25d9, 0xa0ae, 0x2dd0, 0x6a12, 0x9366, 0x6021, 0x0, 0x1);
        gbc.writeMem(0x25d9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa0ae);
        EXPECT(gbc.pc(), 0x25db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0005
        gbc.setState(0xae6b, 0x2659, 0xad40, 0x2504, 0x1641, 0xc4a2, 0x1, 0x0);
        gbc.writeMem(0xae6b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2659);
        EXPECT(gbc.pc(), 0xae6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae6b), 0xcb);
        EXPECT(gbc.readMem(0xae6c), 0x10);
        // CB 10 0006
        gbc.setState(0x1469, 0x7a19, 0xb290, 0x373, 0xcc1d, 0x5c9, 0x0, 0x0);
        gbc.writeMem(0x1469, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7a19);
        EXPECT(gbc.pc(), 0x146b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0007
        gbc.setState(0xa43a, 0xa05, 0xcd80, 0x526d, 0x35bd, 0x6d59, 0x1, 0x1);
        gbc.writeMem(0xa43a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa05);
        EXPECT(gbc.pc(), 0xa43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43a), 0xcb);
        EXPECT(gbc.readMem(0xa43b), 0x10);
        // CB 10 0008
        gbc.setState(0x5c77, 0xc9a8, 0xcec0, 0x88f, 0xecc7, 0x7442, 0x0, 0x1);
        gbc.writeMem(0x5c77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xc9a8);
        EXPECT(gbc.pc(), 0x5c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0009
        gbc.setState(0xe7e8, 0x6279, 0xf550, 0x225c, 0x1837, 0x862e, 0x0, 0x1);
        gbc.writeMem(0xe7e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6279);
        EXPECT(gbc.pc(), 0xe7ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e8), 0xcb);
        EXPECT(gbc.readMem(0xe7e9), 0x10);
        // CB 10 000A
        gbc.setState(0xef23, 0x1405, 0x72e0, 0x2a64, 0xfef2, 0x69e0, 0x0, 0x0);
        gbc.writeMem(0xef23, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1405);
        EXPECT(gbc.pc(), 0xef25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef23), 0xcb);
        EXPECT(gbc.readMem(0xef24), 0x10);
        // CB 10 000B
        gbc.setState(0x346d, 0x99d2, 0xb0b0, 0xa8ad, 0x11e1, 0xe3cf, 0x1, 0x0);
        gbc.writeMem(0x346d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x99d2);
        EXPECT(gbc.pc(), 0x346f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 000C
        gbc.setState(0x2062, 0x331c, 0x4b70, 0x4f90, 0xcc14, 0xa38a, 0x1, 0x0);
        gbc.writeMem(0x2062, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x331c);
        EXPECT(gbc.pc(), 0x2064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 000D
        gbc.setState(0x1e0b, 0x249c, 0x6590, 0x7f8e, 0x953d, 0x10e3, 0x1, 0x0);
        gbc.writeMem(0x1e0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x249c);
        EXPECT(gbc.pc(), 0x1e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 000E
        gbc.setState(0xb33c, 0xb1b5, 0xe200, 0x6307, 0x7afe, 0x5b4b, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb1b5);
        EXPECT(gbc.pc(), 0xb33e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb33c), 0xcb);
        EXPECT(gbc.readMem(0xb33d), 0x10);
        // CB 10 000F
        gbc.setState(0xa943, 0x6dfb, 0xf0e0, 0xf551, 0x7a90, 0xe828, 0x1, 0x1);
        gbc.writeMem(0xa943, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6dfb);
        EXPECT(gbc.pc(), 0xa945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa943), 0xcb);
        EXPECT(gbc.readMem(0xa944), 0x10);
        // CB 10 0010
        gbc.setState(0x3e79, 0xe2c6, 0x4b50, 0x90d0, 0xc2a9, 0x2d6b, 0x0, 0x1);
        gbc.writeMem(0x3e79, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe2c6);
        EXPECT(gbc.pc(), 0x3e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0011
        gbc.setState(0x1c1a, 0xe12d, 0xc30, 0x7594, 0x5638, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0x1c1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe12d);
        EXPECT(gbc.pc(), 0x1c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0012
        gbc.setState(0x24b8, 0x1476, 0xd00, 0xfd28, 0x32aa, 0x9573, 0x0, 0x1);
        gbc.writeMem(0x24b8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1476);
        EXPECT(gbc.pc(), 0x24ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0013
        gbc.setState(0x7313, 0xdfe9, 0x83e0, 0xd41, 0xd821, 0x5dd9, 0x1, 0x1);
        gbc.writeMem(0x7313, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xdfe9);
        EXPECT(gbc.pc(), 0x7315);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0015
        gbc.setState(0x7132, 0x58fc, 0xbc10, 0x2094, 0xd9f8, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x7132, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x58fc);
        EXPECT(gbc.pc(), 0x7134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0016
        gbc.setState(0xc8ce, 0x9b2f, 0x5ef0, 0xf265, 0xe760, 0x76ca, 0x1, 0x0);
        gbc.writeMem(0xc8ce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9b2f);
        EXPECT(gbc.pc(), 0xc8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ce), 0xcb);
        EXPECT(gbc.readMem(0xc8cf), 0x10);
        // CB 10 0017
        gbc.setState(0x38ba, 0xb0f5, 0x91f0, 0xaea3, 0x78, 0x1f60, 0x0, 0x1);
        gbc.writeMem(0x38ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0x38bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0018
        gbc.setState(0x814d, 0xeb54, 0x32b0, 0x422b, 0x20f2, 0xc13, 0x0, 0x1);
        gbc.writeMem(0x814d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeb54);
        EXPECT(gbc.pc(), 0x814f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x814d), 0xcb);
        EXPECT(gbc.readMem(0x814e), 0x10);
        // CB 10 0019
        gbc.setState(0x9e93, 0xc927, 0x3df0, 0x99ef, 0xf013, 0x7436, 0x0, 0x1);
        gbc.writeMem(0x9e93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xc927);
        EXPECT(gbc.pc(), 0x9e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e93), 0xcb);
        EXPECT(gbc.readMem(0x9e94), 0x10);
        // CB 10 001A
        gbc.setState(0x5522, 0x25b0, 0xd60, 0xc404, 0xa38b, 0x680e, 0x0, 0x1);
        gbc.writeMem(0x5522, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x25b0);
        EXPECT(gbc.pc(), 0x5524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 001B
        gbc.setState(0x2525, 0x459f, 0x62f0, 0xdd97, 0x6896, 0x1c06, 0x0, 0x1);
        gbc.writeMem(0x2525, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x459f);
        EXPECT(gbc.pc(), 0x2527);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 001C
        gbc.setState(0xdb01, 0x27bd, 0xbce0, 0x86a5, 0x8872, 0xb5e9, 0x1, 0x0);
        gbc.writeMem(0xdb01, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x27bd);
        EXPECT(gbc.pc(), 0xdb03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb01), 0xcb);
        EXPECT(gbc.readMem(0xdb02), 0x10);
        // CB 10 001D
        gbc.setState(0x42c, 0x9e16, 0x3300, 0xc692, 0xd475, 0xaf9d, 0x0, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9e16);
        EXPECT(gbc.pc(), 0x42e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 001E
        gbc.setState(0x2d86, 0x58c1, 0x84b0, 0x138c, 0xc50d, 0x9504, 0x0, 0x0);
        gbc.writeMem(0x2d86, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x58c1);
        EXPECT(gbc.pc(), 0x2d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 001F
        gbc.setState(0xb78, 0x5a2d, 0x6cc0, 0xf6cf, 0xf4fb, 0x2af4, 0x1, 0x0);
        gbc.writeMem(0xb78, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5a2d);
        EXPECT(gbc.pc(), 0xb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0020
        gbc.setState(0x30ae, 0x6418, 0x18c0, 0x21b2, 0x7de6, 0xbb1a, 0x0, 0x1);
        gbc.writeMem(0x30ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6418);
        EXPECT(gbc.pc(), 0x30b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0021
        gbc.setState(0x60ef, 0x9e2a, 0x3270, 0xd62, 0x9f23, 0xc54d, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9e2a);
        EXPECT(gbc.pc(), 0x60f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0022
        gbc.setState(0x6f0, 0xc5de, 0x4600, 0xeea0, 0x3d69, 0x49fe, 0x0, 0x0);
        gbc.writeMem(0x6f0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc5de);
        EXPECT(gbc.pc(), 0x6f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0023
        gbc.setState(0x35ce, 0xed97, 0xaba0, 0x772f, 0x6a92, 0xc2db, 0x1, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xed97);
        EXPECT(gbc.pc(), 0x35d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0024
        gbc.setState(0x9270, 0xc717, 0xe40, 0x8b5a, 0xd623, 0x6813, 0x1, 0x0);
        gbc.writeMem(0x9270, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc717);
        EXPECT(gbc.pc(), 0x9272);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9270), 0xcb);
        EXPECT(gbc.readMem(0x9271), 0x10);
        // CB 10 0025
        gbc.setState(0xc45e, 0xa4ca, 0x71e0, 0xa0e2, 0xb86, 0xd23f, 0x0, 0x1);
        gbc.writeMem(0xc45e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa4ca);
        EXPECT(gbc.pc(), 0xc460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45e), 0xcb);
        EXPECT(gbc.readMem(0xc45f), 0x10);
        // CB 10 0026
        gbc.setState(0x95e, 0x3f06, 0x2900, 0x56bb, 0xd7a, 0x1367, 0x0, 0x1);
        gbc.writeMem(0x95e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3f06);
        EXPECT(gbc.pc(), 0x960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0027
        gbc.setState(0x404b, 0xd1cc, 0xbb70, 0x650, 0xbb47, 0x1983, 0x0, 0x1);
        gbc.writeMem(0x404b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd1cc);
        EXPECT(gbc.pc(), 0x404d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0028
        gbc.setState(0x9c99, 0x541c, 0x72f0, 0x7849, 0x2a2d, 0x72d2, 0x1, 0x1);
        gbc.writeMem(0x9c99, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x541c);
        EXPECT(gbc.pc(), 0x9c9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c99), 0xcb);
        EXPECT(gbc.readMem(0x9c9a), 0x10);
        // CB 10 0029
        gbc.setState(0xd5ff, 0x53cc, 0xcf40, 0x8bc8, 0x8e27, 0x6620, 0x1, 0x0);
        gbc.writeMem(0xd5ff, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x53cc);
        EXPECT(gbc.pc(), 0xd601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ff), 0xcb);
        EXPECT(gbc.readMem(0xd600), 0x10);
        // CB 10 002A
        gbc.setState(0x2814, 0x4553, 0x5a90, 0x9a3b, 0xdb37, 0xbb3b, 0x1, 0x0);
        gbc.writeMem(0x2814, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4553);
        EXPECT(gbc.pc(), 0x2816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 002B
        gbc.setState(0x889b, 0x91e3, 0xaa00, 0xafb2, 0x6833, 0xf620, 0x0, 0x0);
        gbc.writeMem(0x889b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x91e3);
        EXPECT(gbc.pc(), 0x889d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889b), 0xcb);
        EXPECT(gbc.readMem(0x889c), 0x10);
        // CB 10 002C
        gbc.setState(0x6bb9, 0x11e2, 0xbe20, 0xb5c9, 0x8632, 0x98a0, 0x0, 0x1);
        gbc.writeMem(0x6bb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x11e2);
        EXPECT(gbc.pc(), 0x6bbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 002D
        gbc.setState(0x9886, 0x2e5a, 0xffc0, 0xb4c9, 0xe0a, 0xf460, 0x0, 0x1);
        gbc.writeMem(0x9886, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2e5a);
        EXPECT(gbc.pc(), 0x9888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9886), 0xcb);
        EXPECT(gbc.readMem(0x9887), 0x10);
        // CB 10 002E
        gbc.setState(0x990d, 0xc1ca, 0x1a30, 0xc207, 0x532d, 0x2cfd, 0x1, 0x0);
        gbc.writeMem(0x990d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc1ca);
        EXPECT(gbc.pc(), 0x990f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990d), 0xcb);
        EXPECT(gbc.readMem(0x990e), 0x10);
        // CB 10 002F
        gbc.setState(0x5af7, 0x1c2, 0x6ce0, 0x1be, 0xa9c1, 0x2416, 0x0, 0x1);
        gbc.writeMem(0x5af7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1c2);
        EXPECT(gbc.pc(), 0x5af9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0030
        gbc.setState(0x175, 0xdd3b, 0xedf0, 0x4b0b, 0x45bf, 0x4971, 0x1, 0x0);
        gbc.writeMem(0x175, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdd3b);
        EXPECT(gbc.pc(), 0x177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0032
        gbc.setState(0xb158, 0x458c, 0x2070, 0x3bf2, 0xcc98, 0x4372, 0x1, 0x1);
        gbc.writeMem(0xb158, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x458c);
        EXPECT(gbc.pc(), 0xb15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb158), 0xcb);
        EXPECT(gbc.readMem(0xb159), 0x10);
        // CB 10 0033
        gbc.setState(0xd968, 0x2d86, 0xe3c0, 0x73d, 0x2ca3, 0x1a9a, 0x0, 0x0);
        gbc.writeMem(0xd968, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x2d86);
        EXPECT(gbc.pc(), 0xd96a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd968), 0xcb);
        EXPECT(gbc.readMem(0xd969), 0x10);
        // CB 10 0034
        gbc.setState(0x2474, 0xa7d2, 0x45c0, 0x8130, 0x561c, 0xc7aa, 0x1, 0x1);
        gbc.writeMem(0x2474, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa7d2);
        EXPECT(gbc.pc(), 0x2476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0035
        gbc.setState(0x675a, 0xdee8, 0x7bd0, 0x6d7e, 0xc3a1, 0x1637, 0x1, 0x0);
        gbc.writeMem(0x675a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdee8);
        EXPECT(gbc.pc(), 0x675c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0036
        gbc.setState(0x6304, 0x9a3, 0xf270, 0x4d1e, 0x46ec, 0xdca9, 0x1, 0x1);
        gbc.writeMem(0x6304, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9a3);
        EXPECT(gbc.pc(), 0x6306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0037
        gbc.setState(0xd927, 0x2186, 0x86e0, 0xfae7, 0x177d, 0x1d38, 0x1, 0x1);
        gbc.writeMem(0xd927, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2186);
        EXPECT(gbc.pc(), 0xd929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd927), 0xcb);
        EXPECT(gbc.readMem(0xd928), 0x10);
        // CB 10 0038
        gbc.setState(0x19c7, 0xa7df, 0xf970, 0x76e5, 0x3704, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0x19c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa7df);
        EXPECT(gbc.pc(), 0x19c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0039
        gbc.setState(0xccf1, 0x557b, 0x7770, 0xfba6, 0x251a, 0x2d17, 0x0, 0x1);
        gbc.writeMem(0xccf1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x557b);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf1), 0xcb);
        EXPECT(gbc.readMem(0xccf2), 0x10);
        // CB 10 003A
        gbc.setState(0x8968, 0x605e, 0x69a0, 0xe793, 0x11a6, 0x5303, 0x1, 0x0);
        gbc.writeMem(0x8968, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x605e);
        EXPECT(gbc.pc(), 0x896a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8968), 0xcb);
        EXPECT(gbc.readMem(0x8969), 0x10);
        // CB 10 003B
        gbc.setState(0x9c28, 0x6849, 0xf910, 0xc96e, 0x218e, 0xc611, 0x1, 0x0);
        gbc.writeMem(0x9c28, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6849);
        EXPECT(gbc.pc(), 0x9c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c28), 0xcb);
        EXPECT(gbc.readMem(0x9c29), 0x10);
        // CB 10 003C
        gbc.setState(0xe4, 0xd57, 0xbc40, 0x7ea2, 0x7e19, 0xd36c, 0x1, 0x1);
        gbc.writeMem(0xe4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xd57);
        EXPECT(gbc.pc(), 0xe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 003D
        gbc.setState(0xc497, 0x9d22, 0x52d0, 0x4dba, 0x593b, 0xdc8d, 0x1, 0x0);
        gbc.writeMem(0xc497, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9d22);
        EXPECT(gbc.pc(), 0xc499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc497), 0xcb);
        EXPECT(gbc.readMem(0xc498), 0x10);
        // CB 10 003E
        gbc.setState(0xc9c8, 0xdf69, 0x9290, 0xbe7e, 0xfeb6, 0x83f5, 0x1, 0x0);
        gbc.writeMem(0xc9c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdf69);
        EXPECT(gbc.pc(), 0xc9ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c8), 0xcb);
        EXPECT(gbc.readMem(0xc9c9), 0x10);
        // CB 10 003F
        gbc.setState(0x9f80, 0x57c0, 0x53f0, 0xbf84, 0x3881, 0xafde, 0x0, 0x1);
        gbc.writeMem(0x9f80, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x57c0);
        EXPECT(gbc.pc(), 0x9f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f80), 0xcb);
        EXPECT(gbc.readMem(0x9f81), 0x10);
        // CB 10 0041
        gbc.setState(0x1a8b, 0xa5f0, 0xb640, 0x2d3b, 0x489a, 0x4cb1, 0x0, 0x1);
        gbc.writeMem(0x1a8b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa5f0);
        EXPECT(gbc.pc(), 0x1a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0042
        gbc.setState(0xdcac, 0xfb71, 0xe970, 0x721d, 0x7ec9, 0xdc26, 0x0, 0x0);
        gbc.writeMem(0xdcac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfb71);
        EXPECT(gbc.pc(), 0xdcae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcac), 0xcb);
        EXPECT(gbc.readMem(0xdcad), 0x10);
        // CB 10 0043
        gbc.setState(0xae68, 0xe43e, 0x4720, 0xf105, 0x4019, 0x3d62, 0x1, 0x1);
        gbc.writeMem(0xae68, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe43e);
        EXPECT(gbc.pc(), 0xae6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae68), 0xcb);
        EXPECT(gbc.readMem(0xae69), 0x10);
        // CB 10 0044
        gbc.setState(0x8811, 0x7649, 0xe2d0, 0x4811, 0x7b6f, 0x8239, 0x0, 0x1);
        gbc.writeMem(0x8811, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7649);
        EXPECT(gbc.pc(), 0x8813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8811), 0xcb);
        EXPECT(gbc.readMem(0x8812), 0x10);
        // CB 10 0045
        gbc.setState(0xe9c9, 0x18b1, 0x5c80, 0xd39d, 0xdc95, 0x3dd6, 0x1, 0x1);
        gbc.writeMem(0xe9c9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x18b1);
        EXPECT(gbc.pc(), 0xe9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9c9), 0xcb);
        EXPECT(gbc.readMem(0xe9ca), 0x10);
        // CB 10 0046
        gbc.setState(0x58c4, 0xc499, 0xd60, 0x216, 0x9a0a, 0x5eb6, 0x0, 0x1);
        gbc.writeMem(0x58c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc499);
        EXPECT(gbc.pc(), 0x58c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0047
        gbc.setState(0x301d, 0xb4ce, 0xd510, 0x92d2, 0x3451, 0x1b60, 0x1, 0x1);
        gbc.writeMem(0x301d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb4ce);
        EXPECT(gbc.pc(), 0x301f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0048
        gbc.setState(0x89bd, 0xa0c7, 0xae0, 0x7e20, 0xb7f2, 0x555d, 0x1, 0x0);
        gbc.writeMem(0x89bd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa0c7);
        EXPECT(gbc.pc(), 0x89bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89bd), 0xcb);
        EXPECT(gbc.readMem(0x89be), 0x10);
        // CB 10 0049
        gbc.setState(0x6e69, 0x9008, 0x8860, 0x8333, 0xb995, 0x4fe6, 0x1, 0x1);
        gbc.writeMem(0x6e69, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9008);
        EXPECT(gbc.pc(), 0x6e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 004A
        gbc.setState(0x78dc, 0xa475, 0x98f0, 0x4ce, 0xe115, 0x845c, 0x0, 0x1);
        gbc.writeMem(0x78dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa475);
        EXPECT(gbc.pc(), 0x78de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 004B
        gbc.setState(0xd1bf, 0x5ca7, 0xfdc0, 0x59ec, 0xdb03, 0xd709, 0x0, 0x1);
        gbc.writeMem(0xd1bf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5ca7);
        EXPECT(gbc.pc(), 0xd1c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bf), 0xcb);
        EXPECT(gbc.readMem(0xd1c0), 0x10);
        // CB 10 004D
        gbc.setState(0x7b77, 0x971c, 0x25c0, 0x9199, 0x60ce, 0x5988, 0x1, 0x1);
        gbc.writeMem(0x7b77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x971c);
        EXPECT(gbc.pc(), 0x7b79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 004E
        gbc.setState(0x9464, 0x6d09, 0x43d0, 0x4e4a, 0x3d4b, 0x4e26, 0x1, 0x0);
        gbc.writeMem(0x9464, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6d09);
        EXPECT(gbc.pc(), 0x9466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9464), 0xcb);
        EXPECT(gbc.readMem(0x9465), 0x10);
        // CB 10 004F
        gbc.setState(0xb423, 0x3523, 0x3c20, 0xebdf, 0xed02, 0x4a7e, 0x1, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3523);
        EXPECT(gbc.pc(), 0xb425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb423), 0xcb);
        EXPECT(gbc.readMem(0xb424), 0x10);
        // CB 10 0050
        gbc.setState(0xe4e1, 0xf060, 0xf40, 0x3e0f, 0x236b, 0xb1af, 0x1, 0x1);
        gbc.writeMem(0xe4e1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf060);
        EXPECT(gbc.pc(), 0xe4e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e1), 0xcb);
        EXPECT(gbc.readMem(0xe4e2), 0x10);
        // CB 10 0051
        gbc.setState(0x586e, 0x701f, 0xbcc0, 0xd5f6, 0x43a0, 0xf58d, 0x1, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x701f);
        EXPECT(gbc.pc(), 0x5870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0052
        gbc.setState(0x5eb1, 0xda31, 0x55d0, 0x4910, 0xfba7, 0x654d, 0x0, 0x0);
        gbc.writeMem(0x5eb1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xda31);
        EXPECT(gbc.pc(), 0x5eb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0053
        gbc.setState(0xe956, 0xaef6, 0x80d0, 0xce60, 0xc2b9, 0xaf01, 0x1, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xaef6);
        EXPECT(gbc.pc(), 0xe958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe956), 0xcb);
        EXPECT(gbc.readMem(0xe957), 0x10);
        // CB 10 0054
        gbc.setState(0x4650, 0xfb3d, 0x70b0, 0x92a0, 0xdd5c, 0x7a25, 0x1, 0x1);
        gbc.writeMem(0x4650, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfb3d);
        EXPECT(gbc.pc(), 0x4652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0055
        gbc.setState(0xd49a, 0x454f, 0xdf0, 0x8bef, 0x4bb4, 0xb849, 0x1, 0x1);
        gbc.writeMem(0xd49a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x454f);
        EXPECT(gbc.pc(), 0xd49c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49a), 0xcb);
        EXPECT(gbc.readMem(0xd49b), 0x10);
        // CB 10 0056
        gbc.setState(0x6459, 0x10b4, 0x7080, 0x2858, 0xcc92, 0xb9e7, 0x1, 0x0);
        gbc.writeMem(0x6459, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x10b4);
        EXPECT(gbc.pc(), 0x645b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0057
        gbc.setState(0x7c7e, 0xd8b8, 0x7060, 0x77bc, 0x7608, 0x8cbf, 0x0, 0x0);
        gbc.writeMem(0x7c7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd8b8);
        EXPECT(gbc.pc(), 0x7c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0058
        gbc.setState(0xc67d, 0xcc6d, 0x5e10, 0x9fa0, 0x37d0, 0x1aea, 0x0, 0x1);
        gbc.writeMem(0xc67d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcc6d);
        EXPECT(gbc.pc(), 0xc67f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67d), 0xcb);
        EXPECT(gbc.readMem(0xc67e), 0x10);
        // CB 10 0059
        gbc.setState(0x421, 0x6ed6, 0xa5a0, 0x28b9, 0xe3c0, 0x44f8, 0x1, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6ed6);
        EXPECT(gbc.pc(), 0x423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 005A
        gbc.setState(0x686a, 0xd380, 0xd940, 0x112d, 0xf61, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x686a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd380);
        EXPECT(gbc.pc(), 0x686c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 005B
        gbc.setState(0x3da1, 0x13c3, 0x3bf0, 0x9ca6, 0x122f, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0x3da1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x13c3);
        EXPECT(gbc.pc(), 0x3da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 005C
        gbc.setState(0x953c, 0xf071, 0xf500, 0xcbbb, 0x7887, 0x9e87, 0x0, 0x0);
        gbc.writeMem(0x953c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf071);
        EXPECT(gbc.pc(), 0x953e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x953c), 0xcb);
        EXPECT(gbc.readMem(0x953d), 0x10);
        // CB 10 005D
        gbc.setState(0x194a, 0xf136, 0xa5a0, 0x63a, 0xdda9, 0x2b39, 0x0, 0x1);
        gbc.writeMem(0x194a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xf136);
        EXPECT(gbc.pc(), 0x194c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 005E
        gbc.setState(0x1055, 0xf366, 0x3de0, 0x4e99, 0x8710, 0x3dce, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf366);
        EXPECT(gbc.pc(), 0x1057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 005F
        gbc.setState(0x319e, 0x95e5, 0xcb20, 0xb83e, 0xde2c, 0x305f, 0x1, 0x0);
        gbc.writeMem(0x319e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x95e5);
        EXPECT(gbc.pc(), 0x31a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0060
        gbc.setState(0xe587, 0x13e2, 0x28f0, 0xde80, 0xd516, 0x8bc5, 0x0, 0x0);
        gbc.writeMem(0xe587, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x13e2);
        EXPECT(gbc.pc(), 0xe589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe587), 0xcb);
        EXPECT(gbc.readMem(0xe588), 0x10);
        // CB 10 0061
        gbc.setState(0x6886, 0xa858, 0x1cf0, 0x29e8, 0x2760, 0xf39, 0x1, 0x1);
        gbc.writeMem(0x6886, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa858);
        EXPECT(gbc.pc(), 0x6888);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0062
        gbc.setState(0xc5c3, 0xcca5, 0x4090, 0xd46f, 0x8955, 0x5a5f, 0x0, 0x1);
        gbc.writeMem(0xc5c3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcca5);
        EXPECT(gbc.pc(), 0xc5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5c3), 0xcb);
        EXPECT(gbc.readMem(0xc5c4), 0x10);
        // CB 10 0063
        gbc.setState(0x351c, 0xe259, 0x7220, 0xf800, 0xdfa2, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0x351c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe259);
        EXPECT(gbc.pc(), 0x351e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0064
        gbc.setState(0xc8ec, 0x5c2, 0xcd70, 0x2247, 0x8bd0, 0xc105, 0x1, 0x1);
        gbc.writeMem(0xc8ec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5c2);
        EXPECT(gbc.pc(), 0xc8ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ec), 0xcb);
        EXPECT(gbc.readMem(0xc8ed), 0x10);
        // CB 10 0065
        gbc.setState(0x55d8, 0xeecb, 0xe420, 0xd0e3, 0x79d3, 0x9cc2, 0x1, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xeecb);
        EXPECT(gbc.pc(), 0x55da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0066
        gbc.setState(0x3cf8, 0x1578, 0x90e0, 0xebd7, 0x1699, 0x8588, 0x0, 0x0);
        gbc.writeMem(0x3cf8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1578);
        EXPECT(gbc.pc(), 0x3cfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0067
        gbc.setState(0x7ec1, 0xa2e1, 0xc8c0, 0x5f83, 0xb3a4, 0x6def, 0x0, 0x0);
        gbc.writeMem(0x7ec1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa2e1);
        EXPECT(gbc.pc(), 0x7ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0068
        gbc.setState(0x48cf, 0xa140, 0xabc0, 0x1d0b, 0xbaee, 0x4adc, 0x0, 0x1);
        gbc.writeMem(0x48cf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa140);
        EXPECT(gbc.pc(), 0x48d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0069
        gbc.setState(0x9f0d, 0x9ae4, 0x9fa0, 0x105f, 0x9acc, 0xf8f7, 0x0, 0x1);
        gbc.writeMem(0x9f0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9ae4);
        EXPECT(gbc.pc(), 0x9f0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0d), 0xcb);
        EXPECT(gbc.readMem(0x9f0e), 0x10);
        // CB 10 006A
        gbc.setState(0x53bb, 0xfcf3, 0x1c80, 0xdcec, 0x88b6, 0xf7c1, 0x1, 0x0);
        gbc.writeMem(0x53bb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xfcf3);
        EXPECT(gbc.pc(), 0x53bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 006B
        gbc.setState(0x42de, 0x4e29, 0xf340, 0x2173, 0x4551, 0xa389, 0x0, 0x1);
        gbc.writeMem(0x42de, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4e29);
        EXPECT(gbc.pc(), 0x42e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 006C
        gbc.setState(0x1c6f, 0x3166, 0xaa20, 0x421f, 0xdd5d, 0xc5ad, 0x1, 0x0);
        gbc.writeMem(0x1c6f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3166);
        EXPECT(gbc.pc(), 0x1c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 006D
        gbc.setState(0x7816, 0xe235, 0xdfe0, 0xf798, 0x9b01, 0xe370, 0x0, 0x1);
        gbc.writeMem(0x7816, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe235);
        EXPECT(gbc.pc(), 0x7818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 006E
        gbc.setState(0xb412, 0x12c6, 0xed30, 0x8d33, 0xbef0, 0x3195, 0x0, 0x1);
        gbc.writeMem(0xb412, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x12c6);
        EXPECT(gbc.pc(), 0xb414);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb412), 0xcb);
        EXPECT(gbc.readMem(0xb413), 0x10);
        // CB 10 006F
        gbc.setState(0xc020, 0x64f5, 0xc5b0, 0x7f82, 0xe008, 0xfa0c, 0x0, 0x0);
        gbc.writeMem(0xc020, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x64f5);
        EXPECT(gbc.pc(), 0xc022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc020), 0xcb);
        EXPECT(gbc.readMem(0xc021), 0x10);
        // CB 10 0070
        gbc.setState(0x4fde, 0x342d, 0x43d0, 0xc0c1, 0xe6f4, 0x83ca, 0x1, 0x1);
        gbc.writeMem(0x4fde, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x342d);
        EXPECT(gbc.pc(), 0x4fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0071
        gbc.setState(0x2116, 0xb684, 0x8cf0, 0x7aa, 0x1584, 0x1e10, 0x1, 0x1);
        gbc.writeMem(0x2116, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb684);
        EXPECT(gbc.pc(), 0x2118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0072
        gbc.setState(0x25b7, 0x5092, 0x3e00, 0xee65, 0x9d5d, 0x93e9, 0x0, 0x0);
        gbc.writeMem(0x25b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5092);
        EXPECT(gbc.pc(), 0x25b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0073
        gbc.setState(0xe7c7, 0x770d, 0x32c0, 0xb4b3, 0x1be3, 0xb0b7, 0x0, 0x0);
        gbc.writeMem(0xe7c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x770d);
        EXPECT(gbc.pc(), 0xe7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c7), 0xcb);
        EXPECT(gbc.readMem(0xe7c8), 0x10);
        // CB 10 0074
        gbc.setState(0x79a3, 0x42ad, 0xdb60, 0x2227, 0xae6a, 0x80bd, 0x0, 0x1);
        gbc.writeMem(0x79a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x42ad);
        EXPECT(gbc.pc(), 0x79a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0075
        gbc.setState(0xee1b, 0x5594, 0xa730, 0x388, 0x75a3, 0xa467, 0x0, 0x1);
        gbc.writeMem(0xee1b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5594);
        EXPECT(gbc.pc(), 0xee1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1b), 0xcb);
        EXPECT(gbc.readMem(0xee1c), 0x10);
        // CB 10 0076
        gbc.setState(0x7c2d, 0x5db4, 0x4c0, 0xa1c5, 0xc7a6, 0x5ec5, 0x1, 0x1);
        gbc.writeMem(0x7c2d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5db4);
        EXPECT(gbc.pc(), 0x7c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0077
        gbc.setState(0x3bd1, 0xd758, 0xe210, 0x12b7, 0xfee5, 0x60, 0x0, 0x0);
        gbc.writeMem(0x3bd1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd758);
        EXPECT(gbc.pc(), 0x3bd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0078
        gbc.setState(0x6f11, 0xa900, 0x330, 0xcfa, 0x47e5, 0xe831, 0x0, 0x0);
        gbc.writeMem(0x6f11, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa900);
        EXPECT(gbc.pc(), 0x6f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0079
        gbc.setState(0x4467, 0x7958, 0xc230, 0x7857, 0x1096, 0xf414, 0x0, 0x0);
        gbc.writeMem(0x4467, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7958);
        EXPECT(gbc.pc(), 0x4469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 007B
        gbc.setState(0xb6e1, 0xc9ab, 0xf880, 0xc1c4, 0xd9a6, 0xc162, 0x0, 0x1);
        gbc.writeMem(0xb6e1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc9ab);
        EXPECT(gbc.pc(), 0xb6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e1), 0xcb);
        EXPECT(gbc.readMem(0xb6e2), 0x10);
        // CB 10 007C
        gbc.setState(0x36b4, 0xf71b, 0xa580, 0x44b, 0x3f36, 0x6b8a, 0x0, 0x0);
        gbc.writeMem(0x36b4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf71b);
        EXPECT(gbc.pc(), 0x36b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 007D
        gbc.setState(0x4b23, 0x560d, 0x4e40, 0xc99e, 0x431c, 0xae75, 0x0, 0x1);
        gbc.writeMem(0x4b23, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x560d);
        EXPECT(gbc.pc(), 0x4b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 007E
        gbc.setState(0x5da0, 0xe5b9, 0x2190, 0x5189, 0xdf32, 0xd737, 0x0, 0x1);
        gbc.writeMem(0x5da0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe5b9);
        EXPECT(gbc.pc(), 0x5da2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 007F
        gbc.setState(0x800f, 0xf298, 0x58f0, 0xab8b, 0x7e68, 0xbfce, 0x1, 0x1);
        gbc.writeMem(0x800f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf298);
        EXPECT(gbc.pc(), 0x8011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x800f), 0xcb);
        EXPECT(gbc.readMem(0x8010), 0x10);
        // CB 10 0080
        gbc.setState(0xdfc5, 0x23e3, 0xb20, 0x8b7c, 0x4725, 0x930, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x23e3);
        EXPECT(gbc.pc(), 0xdfc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc5), 0xcb);
        EXPECT(gbc.readMem(0xdfc6), 0x10);
        // CB 10 0081
        gbc.setState(0x389e, 0x9385, 0xd000, 0xbdb9, 0x2395, 0x74e9, 0x1, 0x0);
        gbc.writeMem(0x389e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0x38a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0082
        gbc.setState(0x4041, 0x7d59, 0x37e0, 0x4820, 0xdd90, 0x32dd, 0x0, 0x1);
        gbc.writeMem(0x4041, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7d59);
        EXPECT(gbc.pc(), 0x4043);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0083
        gbc.setState(0x659e, 0x6620, 0x2560, 0xcee0, 0xf7f0, 0xd185, 0x1, 0x0);
        gbc.writeMem(0x659e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6620);
        EXPECT(gbc.pc(), 0x65a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0084
        gbc.setState(0x36e9, 0xbbc7, 0x9b40, 0x33cf, 0x2bd3, 0xeb90, 0x0, 0x0);
        gbc.writeMem(0x36e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbbc7);
        EXPECT(gbc.pc(), 0x36eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0086
        gbc.setState(0x6cda, 0xbe8f, 0xbf20, 0xb2d0, 0x8c36, 0xe7b6, 0x1, 0x0);
        gbc.writeMem(0x6cda, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbe8f);
        EXPECT(gbc.pc(), 0x6cdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0087
        gbc.setState(0x59c1, 0xd69b, 0x9c70, 0xd10e, 0x2c5, 0x3c3c, 0x0, 0x1);
        gbc.writeMem(0x59c1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd69b);
        EXPECT(gbc.pc(), 0x59c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0088
        gbc.setState(0xe594, 0x95fd, 0x2970, 0x229c, 0x1b90, 0x44c5, 0x0, 0x1);
        gbc.writeMem(0xe594, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x95fd);
        EXPECT(gbc.pc(), 0xe596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe594), 0xcb);
        EXPECT(gbc.readMem(0xe595), 0x10);
        // CB 10 0089
        gbc.setState(0x2225, 0x2a15, 0xf070, 0xb90c, 0xd8ec, 0xe904, 0x0, 0x0);
        gbc.writeMem(0x2225, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2a15);
        EXPECT(gbc.pc(), 0x2227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 008A
        gbc.setState(0xcf57, 0xe64e, 0x1090, 0x44d2, 0xb41, 0xc9d3, 0x1, 0x1);
        gbc.writeMem(0xcf57, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0xcf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf57), 0xcb);
        EXPECT(gbc.readMem(0xcf58), 0x10);
        // CB 10 008B
        gbc.setState(0x1858, 0xa9d4, 0x5530, 0x7894, 0x6d43, 0xeac4, 0x0, 0x1);
        gbc.writeMem(0x1858, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa9d4);
        EXPECT(gbc.pc(), 0x185a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 008C
        gbc.setState(0x3bcc, 0xc5ad, 0x20a0, 0xe406, 0x85c2, 0x4494, 0x1, 0x1);
        gbc.writeMem(0x3bcc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc5ad);
        EXPECT(gbc.pc(), 0x3bce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 008D
        gbc.setState(0xba3, 0xdce, 0x4d10, 0x64f, 0x6c0e, 0x7306, 0x0, 0x1);
        gbc.writeMem(0xba3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdce);
        EXPECT(gbc.pc(), 0xba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 008E
        gbc.setState(0x42ae, 0x1899, 0xc7a0, 0xdfb, 0x69e7, 0x1fa1, 0x0, 0x0);
        gbc.writeMem(0x42ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1899);
        EXPECT(gbc.pc(), 0x42b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 008F
        gbc.setState(0x5a33, 0x6a02, 0xef10, 0x58e1, 0x2ed6, 0xb93c, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6a02);
        EXPECT(gbc.pc(), 0x5a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0090
        gbc.setState(0xc419, 0x41c6, 0xf760, 0x266f, 0xb003, 0xbf68, 0x0, 0x1);
        gbc.writeMem(0xc419, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x41c6);
        EXPECT(gbc.pc(), 0xc41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc419), 0xcb);
        EXPECT(gbc.readMem(0xc41a), 0x10);
        // CB 10 0091
        gbc.setState(0x4815, 0x800f, 0x6390, 0xcd9e, 0x9494, 0x5d6f, 0x1, 0x1);
        gbc.writeMem(0x4815, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x800f);
        EXPECT(gbc.pc(), 0x4817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0092
        gbc.setState(0x797c, 0x2fd8, 0xe470, 0x5fbf, 0x2331, 0x618, 0x1, 0x0);
        gbc.writeMem(0x797c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2fd8);
        EXPECT(gbc.pc(), 0x797e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0093
        gbc.setState(0xde76, 0x48d2, 0x4fe0, 0x9702, 0x2e9a, 0x94e7, 0x1, 0x0);
        gbc.writeMem(0xde76, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x48d2);
        EXPECT(gbc.pc(), 0xde78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde76), 0xcb);
        EXPECT(gbc.readMem(0xde77), 0x10);
        // CB 10 0094
        gbc.setState(0xa6c6, 0x4446, 0xb870, 0x1a43, 0x3814, 0x53ea, 0x0, 0x0);
        gbc.writeMem(0xa6c6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4446);
        EXPECT(gbc.pc(), 0xa6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c6), 0xcb);
        EXPECT(gbc.readMem(0xa6c7), 0x10);
        // CB 10 0095
        gbc.setState(0xc1a, 0xf712, 0xb770, 0x50d4, 0x5b33, 0x3c27, 0x1, 0x1);
        gbc.writeMem(0xc1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf712);
        EXPECT(gbc.pc(), 0xc1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0096
        gbc.setState(0x36db, 0x1177, 0xab30, 0xf7da, 0x7e8c, 0xa7a4, 0x1, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1177);
        EXPECT(gbc.pc(), 0x36dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0097
        gbc.setState(0x7473, 0x3ad8, 0x7800, 0x3f6d, 0x4d53, 0x31c3, 0x1, 0x1);
        gbc.writeMem(0x7473, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3ad8);
        EXPECT(gbc.pc(), 0x7475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0098
        gbc.setState(0x87f5, 0x7ecf, 0xd040, 0xff11, 0xdb4f, 0x3727, 0x1, 0x1);
        gbc.writeMem(0x87f5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7ecf);
        EXPECT(gbc.pc(), 0x87f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f5), 0xcb);
        EXPECT(gbc.readMem(0x87f6), 0x10);
        // CB 10 0099
        gbc.setState(0xce94, 0x206, 0x13e0, 0xbd82, 0x5479, 0x9551, 0x0, 0x0);
        gbc.writeMem(0xce94, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x206);
        EXPECT(gbc.pc(), 0xce96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce94), 0xcb);
        EXPECT(gbc.readMem(0xce95), 0x10);
        // CB 10 009A
        gbc.setState(0x7ce6, 0xe18c, 0x7e90, 0x1558, 0x73c4, 0x86ca, 0x0, 0x1);
        gbc.writeMem(0x7ce6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe18c);
        EXPECT(gbc.pc(), 0x7ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 009B
        gbc.setState(0xaec0, 0x3070, 0xde60, 0xc92c, 0x930e, 0xa8fc, 0x0, 0x0);
        gbc.writeMem(0xaec0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3070);
        EXPECT(gbc.pc(), 0xaec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec0), 0xcb);
        EXPECT(gbc.readMem(0xaec1), 0x10);
        // CB 10 009C
        gbc.setState(0x80df, 0x84a5, 0xd200, 0x966e, 0xf82d, 0x25e7, 0x1, 0x1);
        gbc.writeMem(0x80df, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x84a5);
        EXPECT(gbc.pc(), 0x80e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80df), 0xcb);
        EXPECT(gbc.readMem(0x80e0), 0x10);
        // CB 10 009D
        gbc.setState(0x3f87, 0xf38a, 0x5260, 0xa6d2, 0xdfc4, 0x1ba8, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf38a);
        EXPECT(gbc.pc(), 0x3f89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 009E
        gbc.setState(0x536f, 0x9f9e, 0x2140, 0xc975, 0x5d43, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x536f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9f9e);
        EXPECT(gbc.pc(), 0x5371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00A0
        gbc.setState(0xea75, 0x86c0, 0xce30, 0x9675, 0x39e2, 0x8928, 0x1, 0x1);
        gbc.writeMem(0xea75, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x86c0);
        EXPECT(gbc.pc(), 0xea77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea75), 0xcb);
        EXPECT(gbc.readMem(0xea76), 0x10);
        // CB 10 00A1
        gbc.setState(0xc3b2, 0x84b4, 0xbd10, 0xa656, 0xb530, 0x27f0, 0x0, 0x1);
        gbc.writeMem(0xc3b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x84b4);
        EXPECT(gbc.pc(), 0xc3b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b2), 0xcb);
        EXPECT(gbc.readMem(0xc3b3), 0x10);
        // CB 10 00A3
        gbc.setState(0x9ca6, 0x88e1, 0x5fc0, 0x43c0, 0x81de, 0x14b2, 0x1, 0x0);
        gbc.writeMem(0x9ca6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x88e1);
        EXPECT(gbc.pc(), 0x9ca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca6), 0xcb);
        EXPECT(gbc.readMem(0x9ca7), 0x10);
        // CB 10 00A4
        gbc.setState(0xdeb7, 0x2b35, 0x4e00, 0x7549, 0x5701, 0x505d, 0x0, 0x0);
        gbc.writeMem(0xdeb7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2b35);
        EXPECT(gbc.pc(), 0xdeb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb7), 0xcb);
        EXPECT(gbc.readMem(0xdeb8), 0x10);
        // CB 10 00A6
        gbc.setState(0xaf38, 0x387, 0xf200, 0xe1e8, 0x60a5, 0x81d0, 0x1, 0x1);
        gbc.writeMem(0xaf38, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x387);
        EXPECT(gbc.pc(), 0xaf3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf38), 0xcb);
        EXPECT(gbc.readMem(0xaf39), 0x10);
        // CB 10 00A7
        gbc.setState(0xaae8, 0x73a3, 0x4fd0, 0xd038, 0x2618, 0x59db, 0x0, 0x1);
        gbc.writeMem(0xaae8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x73a3);
        EXPECT(gbc.pc(), 0xaaea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae8), 0xcb);
        EXPECT(gbc.readMem(0xaae9), 0x10);
        // CB 10 00A8
        gbc.setState(0x5fd3, 0x4b6, 0x8750, 0x35b3, 0x6541, 0x2bd2, 0x1, 0x0);
        gbc.writeMem(0x5fd3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4b6);
        EXPECT(gbc.pc(), 0x5fd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00A9
        gbc.setState(0xafca, 0xa3ed, 0xcdc0, 0x3ed6, 0xada, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa3ed);
        EXPECT(gbc.pc(), 0xafcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafca), 0xcb);
        EXPECT(gbc.readMem(0xafcb), 0x10);
        // CB 10 00AA
        gbc.setState(0x3c5a, 0xe7c7, 0x29d0, 0xe68a, 0x103d, 0x975b, 0x0, 0x1);
        gbc.writeMem(0x3c5a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe7c7);
        EXPECT(gbc.pc(), 0x3c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00AB
        gbc.setState(0x5104, 0x8d0, 0xe450, 0x4963, 0x8cd6, 0x868a, 0x1, 0x1);
        gbc.writeMem(0x5104, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x8d0);
        EXPECT(gbc.pc(), 0x5106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00AC
        gbc.setState(0x22dc, 0x58b9, 0x13e0, 0x3c89, 0xe548, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x22dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x58b9);
        EXPECT(gbc.pc(), 0x22de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00AD
        gbc.setState(0xa5ed, 0x9ee7, 0xc6a0, 0x42b9, 0xadd2, 0xb9b9, 0x0, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9ee7);
        EXPECT(gbc.pc(), 0xa5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ed), 0xcb);
        EXPECT(gbc.readMem(0xa5ee), 0x10);
        // CB 10 00AE
        gbc.setState(0x9206, 0x15d5, 0x7740, 0xde7a, 0xe8cf, 0x47c8, 0x0, 0x1);
        gbc.writeMem(0x9206, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x15d5);
        EXPECT(gbc.pc(), 0x9208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9206), 0xcb);
        EXPECT(gbc.readMem(0x9207), 0x10);
        // CB 10 00AF
        gbc.setState(0x73e7, 0xf36c, 0xf910, 0x4924, 0x6f60, 0x818e, 0x0, 0x1);
        gbc.writeMem(0x73e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf36c);
        EXPECT(gbc.pc(), 0x73e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00B0
        gbc.setState(0xc1b7, 0xfb34, 0xa090, 0xab16, 0xb82b, 0x891e, 0x1, 0x1);
        gbc.writeMem(0xc1b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfb34);
        EXPECT(gbc.pc(), 0xc1b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1b7), 0xcb);
        EXPECT(gbc.readMem(0xc1b8), 0x10);
        // CB 10 00B1
        gbc.setState(0x5e55, 0x5384, 0x79b0, 0xa4b5, 0xa67f, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x5e55, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5384);
        EXPECT(gbc.pc(), 0x5e57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00B2
        gbc.setState(0xea1a, 0xe04f, 0x6460, 0x6cea, 0xdfbe, 0xd3f1, 0x0, 0x0);
        gbc.writeMem(0xea1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe04f);
        EXPECT(gbc.pc(), 0xea1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1a), 0xcb);
        EXPECT(gbc.readMem(0xea1b), 0x10);
        // CB 10 00B3
        gbc.setState(0x5025, 0xcf78, 0x11f0, 0x96da, 0x7dab, 0x22e9, 0x0, 0x1);
        gbc.writeMem(0x5025, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcf78);
        EXPECT(gbc.pc(), 0x5027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00B5
        gbc.setState(0xd32, 0x99f5, 0xae80, 0x594d, 0x3ad2, 0x9376, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x99f5);
        EXPECT(gbc.pc(), 0xd34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00B6
        gbc.setState(0x507c, 0xc5c0, 0x7eb0, 0x7090, 0x1457, 0xf4bc, 0x0, 0x0);
        gbc.writeMem(0x507c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc5c0);
        EXPECT(gbc.pc(), 0x507e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00B7
        gbc.setState(0x6962, 0xaef2, 0x9b60, 0xcb85, 0x2996, 0xe149, 0x1, 0x0);
        gbc.writeMem(0x6962, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaef2);
        EXPECT(gbc.pc(), 0x6964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00B8
        gbc.setState(0xa7c, 0x2fbd, 0xcd10, 0x4e95, 0x4b1d, 0xf35f, 0x1, 0x0);
        gbc.writeMem(0xa7c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2fbd);
        EXPECT(gbc.pc(), 0xa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00B9
        gbc.setState(0x21c4, 0xb3f9, 0xf4b0, 0xeb7f, 0xb6b, 0xaff6, 0x1, 0x0);
        gbc.writeMem(0x21c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb3f9);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00BA
        gbc.setState(0xcee2, 0xff22, 0x23e0, 0x129a, 0x380d, 0xb4c4, 0x0, 0x0);
        gbc.writeMem(0xcee2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xff22);
        EXPECT(gbc.pc(), 0xcee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee2), 0xcb);
        EXPECT(gbc.readMem(0xcee3), 0x10);
        // CB 10 00BB
        gbc.setState(0x59ac, 0x3ec2, 0x5190, 0xf7cf, 0xb894, 0x6d59, 0x0, 0x1);
        gbc.writeMem(0x59ac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3ec2);
        EXPECT(gbc.pc(), 0x59ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00BC
        gbc.setState(0x7c2, 0x87a9, 0x3ed0, 0x63c5, 0xf9e6, 0xae1b, 0x0, 0x1);
        gbc.writeMem(0x7c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x87a9);
        EXPECT(gbc.pc(), 0x7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00BE
        gbc.setState(0x68ca, 0xafd9, 0xa9f0, 0x9e41, 0x20b7, 0x6079, 0x0, 0x1);
        gbc.writeMem(0x68ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xafd9);
        EXPECT(gbc.pc(), 0x68cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00BF
        gbc.setState(0xba2a, 0x1350, 0x3d70, 0x85ee, 0xef22, 0x5e57, 0x0, 0x0);
        gbc.writeMem(0xba2a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1350);
        EXPECT(gbc.pc(), 0xba2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2a), 0xcb);
        EXPECT(gbc.readMem(0xba2b), 0x10);
        // CB 10 00C0
        gbc.setState(0xac18, 0xa02d, 0xd190, 0x9f91, 0x961f, 0x3e6c, 0x1, 0x0);
        gbc.writeMem(0xac18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa02d);
        EXPECT(gbc.pc(), 0xac1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac18), 0xcb);
        EXPECT(gbc.readMem(0xac19), 0x10);
        // CB 10 00C1
        gbc.setState(0x60c2, 0x4aaf, 0xdb00, 0x20fa, 0xaa7b, 0x963d, 0x1, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4aaf);
        EXPECT(gbc.pc(), 0x60c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00C2
        gbc.setState(0xc7d4, 0x2906, 0x8ac0, 0x26e5, 0x5360, 0xf9ef, 0x0, 0x1);
        gbc.writeMem(0xc7d4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2906);
        EXPECT(gbc.pc(), 0xc7d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d4), 0xcb);
        EXPECT(gbc.readMem(0xc7d5), 0x10);
        // CB 10 00C3
        gbc.setState(0x636b, 0x600f, 0xfd20, 0x43b8, 0x85b2, 0x3034, 0x1, 0x1);
        gbc.writeMem(0x636b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x600f);
        EXPECT(gbc.pc(), 0x636d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00C4
        gbc.setState(0xeff6, 0xe3a2, 0x3bc0, 0x4441, 0x4d12, 0x9b11, 0x0, 0x1);
        gbc.writeMem(0xeff6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe3a2);
        EXPECT(gbc.pc(), 0xeff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff6), 0xcb);
        EXPECT(gbc.readMem(0xeff7), 0x10);
        // CB 10 00C5
        gbc.setState(0x91d5, 0xf753, 0xe510, 0x4a92, 0x10f7, 0xe3b9, 0x1, 0x1);
        gbc.writeMem(0x91d5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf753);
        EXPECT(gbc.pc(), 0x91d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d5), 0xcb);
        EXPECT(gbc.readMem(0x91d6), 0x10);
        // CB 10 00C6
        gbc.setState(0xe53a, 0xcfde, 0x6710, 0x65d5, 0x4de9, 0x31e, 0x1, 0x1);
        gbc.writeMem(0xe53a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcfde);
        EXPECT(gbc.pc(), 0xe53c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe53a), 0xcb);
        EXPECT(gbc.readMem(0xe53b), 0x10);
        // CB 10 00C7
        gbc.setState(0xee5f, 0x9a1, 0x4730, 0xd185, 0x3a05, 0xddc, 0x0, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9a1);
        EXPECT(gbc.pc(), 0xee61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5f), 0xcb);
        EXPECT(gbc.readMem(0xee60), 0x10);
        // CB 10 00C8
        gbc.setState(0xd6ba, 0x3b8e, 0xf2c0, 0x210a, 0xebd9, 0x5644, 0x0, 0x1);
        gbc.writeMem(0xd6ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3b8e);
        EXPECT(gbc.pc(), 0xd6bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ba), 0xcb);
        EXPECT(gbc.readMem(0xd6bb), 0x10);
        // CB 10 00C9
        gbc.setState(0x1a0b, 0xac34, 0xc20, 0xfc67, 0xdae7, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x1a0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xac34);
        EXPECT(gbc.pc(), 0x1a0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00CA
        gbc.setState(0x4ac4, 0xee5, 0x81c0, 0x1308, 0xdf8f, 0x3069, 0x1, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xee5);
        EXPECT(gbc.pc(), 0x4ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00CB
        gbc.setState(0x316a, 0x55f4, 0x7040, 0x7426, 0x28c9, 0xcab8, 0x0, 0x1);
        gbc.writeMem(0x316a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x55f4);
        EXPECT(gbc.pc(), 0x316c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00CC
        gbc.setState(0x4d1e, 0x8bd1, 0x36e0, 0xb5bb, 0x28f0, 0x6b6b, 0x1, 0x1);
        gbc.writeMem(0x4d1e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8bd1);
        EXPECT(gbc.pc(), 0x4d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00CD
        gbc.setState(0x4cad, 0x4fde, 0xcc40, 0x26c9, 0x9a, 0x820b, 0x1, 0x1);
        gbc.writeMem(0x4cad, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4fde);
        EXPECT(gbc.pc(), 0x4caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00CE
        gbc.setState(0x779e, 0xc670, 0x63c0, 0x1764, 0x8a18, 0xc47, 0x1, 0x1);
        gbc.writeMem(0x779e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xc670);
        EXPECT(gbc.pc(), 0x77a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00CF
        gbc.setState(0x3057, 0x53d0, 0x5770, 0xbdbb, 0xade, 0x68c5, 0x1, 0x1);
        gbc.writeMem(0x3057, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x53d0);
        EXPECT(gbc.pc(), 0x3059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00D0
        gbc.setState(0x86b6, 0xcf35, 0x1c40, 0x5a9d, 0x8f8a, 0xae4f, 0x1, 0x1);
        gbc.writeMem(0x86b6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcf35);
        EXPECT(gbc.pc(), 0x86b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b6), 0xcb);
        EXPECT(gbc.readMem(0x86b7), 0x10);
        // CB 10 00D1
        gbc.setState(0x837, 0x9fe6, 0x6280, 0x2f17, 0x60bb, 0xc70f, 0x0, 0x0);
        gbc.writeMem(0x837, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9fe6);
        EXPECT(gbc.pc(), 0x839);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00D2
        gbc.setState(0x198b, 0x54f7, 0x20c0, 0x1f3e, 0xc7ce, 0x12d, 0x1, 0x1);
        gbc.writeMem(0x198b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0x198d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00D3
        gbc.setState(0x50fa, 0x2ddd, 0x2f50, 0xb547, 0x1b40, 0x707, 0x0, 0x0);
        gbc.writeMem(0x50fa, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2ddd);
        EXPECT(gbc.pc(), 0x50fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00D4
        gbc.setState(0x1595, 0x3515, 0xc4e0, 0x7c49, 0x84d, 0x7a0e, 0x0, 0x1);
        gbc.writeMem(0x1595, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3515);
        EXPECT(gbc.pc(), 0x1597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00D5
        gbc.setState(0x6a0d, 0x767b, 0x8700, 0x6c59, 0x4799, 0x21f8, 0x0, 0x0);
        gbc.writeMem(0x6a0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x767b);
        EXPECT(gbc.pc(), 0x6a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00D6
        gbc.setState(0x2535, 0x8560, 0x5a30, 0x1be7, 0x1cf7, 0xb2f3, 0x1, 0x0);
        gbc.writeMem(0x2535, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8560);
        EXPECT(gbc.pc(), 0x2537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00D7
        gbc.setState(0xdf25, 0x4196, 0xff90, 0x9ef, 0x49ee, 0x8225, 0x1, 0x1);
        gbc.writeMem(0xdf25, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4196);
        EXPECT(gbc.pc(), 0xdf27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf25), 0xcb);
        EXPECT(gbc.readMem(0xdf26), 0x10);
        // CB 10 00D8
        gbc.setState(0x367c, 0x806f, 0xc010, 0x4d4b, 0xc49a, 0x52ae, 0x1, 0x1);
        gbc.writeMem(0x367c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x806f);
        EXPECT(gbc.pc(), 0x367e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00D9
        gbc.setState(0xe0e8, 0x99c5, 0xebf0, 0xc2c, 0xdb3, 0xccdf, 0x1, 0x1);
        gbc.writeMem(0xe0e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x99c5);
        EXPECT(gbc.pc(), 0xe0ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e8), 0xcb);
        EXPECT(gbc.readMem(0xe0e9), 0x10);
        // CB 10 00DA
        gbc.setState(0x8175, 0xd0fe, 0x5200, 0x8986, 0x55cc, 0x9cbc, 0x0, 0x0);
        gbc.writeMem(0x8175, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd0fe);
        EXPECT(gbc.pc(), 0x8177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8175), 0xcb);
        EXPECT(gbc.readMem(0x8176), 0x10);
        // CB 10 00DB
        gbc.setState(0xbb63, 0x4241, 0x28c0, 0xc57b, 0x57cc, 0x4535, 0x0, 0x1);
        gbc.writeMem(0xbb63, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4241);
        EXPECT(gbc.pc(), 0xbb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb63), 0xcb);
        EXPECT(gbc.readMem(0xbb64), 0x10);
        // CB 10 00DD
        gbc.setState(0xe7f5, 0x7d98, 0xc150, 0x5b86, 0x3be2, 0x42ea, 0x0, 0x0);
        gbc.writeMem(0xe7f5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x7d98);
        EXPECT(gbc.pc(), 0xe7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f5), 0xcb);
        EXPECT(gbc.readMem(0xe7f6), 0x10);
        // CB 10 00DE
        gbc.setState(0x30ef, 0xb3b6, 0x5a60, 0x503a, 0xeb17, 0x7bbf, 0x1, 0x0);
        gbc.writeMem(0x30ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb3b6);
        EXPECT(gbc.pc(), 0x30f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00DF
        gbc.setState(0x990e, 0x2487, 0xe530, 0x4856, 0xfdaa, 0x60b4, 0x0, 0x1);
        gbc.writeMem(0x990e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2487);
        EXPECT(gbc.pc(), 0x9910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990e), 0xcb);
        EXPECT(gbc.readMem(0x990f), 0x10);
        // CB 10 00E0
        gbc.setState(0xb6bc, 0xf3a7, 0xbf10, 0xcc37, 0x19, 0x8cc1, 0x1, 0x0);
        gbc.writeMem(0xb6bc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf3a7);
        EXPECT(gbc.pc(), 0xb6be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bc), 0xcb);
        EXPECT(gbc.readMem(0xb6bd), 0x10);
        // CB 10 00E1
        gbc.setState(0xc3fe, 0x3710, 0xe8d0, 0xd35d, 0xdec3, 0xe7a, 0x1, 0x1);
        gbc.writeMem(0xc3fe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3710);
        EXPECT(gbc.pc(), 0xc400);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3fe), 0xcb);
        EXPECT(gbc.readMem(0xc3ff), 0x10);
        // CB 10 00E2
        gbc.setState(0xc0d2, 0x6ba8, 0xdaf0, 0x7e0d, 0xe50b, 0x2696, 0x1, 0x1);
        gbc.writeMem(0xc0d2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6ba8);
        EXPECT(gbc.pc(), 0xc0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d2), 0xcb);
        EXPECT(gbc.readMem(0xc0d3), 0x10);
        // CB 10 00E3
        gbc.setState(0x8972, 0x3a8d, 0x7e90, 0x4a5c, 0x9e8f, 0x92fa, 0x0, 0x1);
        gbc.writeMem(0x8972, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3a8d);
        EXPECT(gbc.pc(), 0x8974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8972), 0xcb);
        EXPECT(gbc.readMem(0x8973), 0x10);
        // CB 10 00E4
        gbc.setState(0x9e18, 0x613a, 0x9790, 0x92be, 0x6b81, 0xfeb4, 0x1, 0x1);
        gbc.writeMem(0x9e18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x613a);
        EXPECT(gbc.pc(), 0x9e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e18), 0xcb);
        EXPECT(gbc.readMem(0x9e19), 0x10);
        // CB 10 00E5
        gbc.setState(0x3dc7, 0x1303, 0x7020, 0x9af6, 0x6514, 0x57b1, 0x1, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1303);
        EXPECT(gbc.pc(), 0x3dc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00E6
        gbc.setState(0x3572, 0x69d0, 0xb4a0, 0x7ca1, 0x2283, 0x9cc2, 0x0, 0x0);
        gbc.writeMem(0x3572, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x69d0);
        EXPECT(gbc.pc(), 0x3574);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00E7
        gbc.setState(0x6c51, 0x527a, 0x8ff0, 0x788d, 0xf19, 0xc5b3, 0x0, 0x1);
        gbc.writeMem(0x6c51, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x527a);
        EXPECT(gbc.pc(), 0x6c53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00E8
        gbc.setState(0xce35, 0x166a, 0x3370, 0xcd7, 0x3177, 0x812, 0x0, 0x0);
        gbc.writeMem(0xce35, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x166a);
        EXPECT(gbc.pc(), 0xce37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce35), 0xcb);
        EXPECT(gbc.readMem(0xce36), 0x10);
        // CB 10 00E9
        gbc.setState(0x8677, 0xac24, 0x2920, 0x288, 0xc3bb, 0x3650, 0x0, 0x1);
        gbc.writeMem(0x8677, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xac24);
        EXPECT(gbc.pc(), 0x8679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8677), 0xcb);
        EXPECT(gbc.readMem(0x8678), 0x10);
        // CB 10 00EA
        gbc.setState(0xe013, 0x678a, 0xd860, 0x36e5, 0x1fdc, 0xfbca, 0x0, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x678a);
        EXPECT(gbc.pc(), 0xe015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe013), 0xcb);
        EXPECT(gbc.readMem(0xe014), 0x10);
        // CB 10 00EB
        gbc.setState(0xbace, 0x72f4, 0xe920, 0x9e7d, 0x5346, 0x32c7, 0x1, 0x1);
        gbc.writeMem(0xbace, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x72f4);
        EXPECT(gbc.pc(), 0xbad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbace), 0xcb);
        EXPECT(gbc.readMem(0xbacf), 0x10);
        // CB 10 00EC
        gbc.setState(0x6f8, 0xca97, 0x9350, 0xcf, 0x25be, 0x7d9, 0x0, 0x0);
        gbc.writeMem(0x6f8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xca97);
        EXPECT(gbc.pc(), 0x6fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00ED
        gbc.setState(0x1dbc, 0xdcf9, 0xe9b0, 0x2a4d, 0xf80f, 0xed26, 0x0, 0x1);
        gbc.writeMem(0x1dbc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xdcf9);
        EXPECT(gbc.pc(), 0x1dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00EF
        gbc.setState(0xa81d, 0x950, 0x5720, 0x396f, 0xb53f, 0xa63f, 0x0, 0x0);
        gbc.writeMem(0xa81d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x950);
        EXPECT(gbc.pc(), 0xa81f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81d), 0xcb);
        EXPECT(gbc.readMem(0xa81e), 0x10);
        // CB 10 00F0
        gbc.setState(0x7dcd, 0xbcff, 0x5f40, 0x1777, 0x66a8, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x7dcd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbcff);
        EXPECT(gbc.pc(), 0x7dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00F1
        gbc.setState(0x1b60, 0xe2d6, 0x5e30, 0xd21e, 0xd76c, 0xc062, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe2d6);
        EXPECT(gbc.pc(), 0x1b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00F3
        gbc.setState(0x1d33, 0xe31d, 0xafe0, 0xa4ce, 0x649a, 0xfec6, 0x0, 0x0);
        gbc.writeMem(0x1d33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe31d);
        EXPECT(gbc.pc(), 0x1d35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00F4
        gbc.setState(0x1d1, 0xc8f2, 0x5760, 0x4af9, 0xb68c, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0x1d1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc8f2);
        EXPECT(gbc.pc(), 0x1d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00F5
        gbc.setState(0xe7ea, 0xfb5, 0x17b0, 0x47e0, 0x7431, 0x5cd4, 0x1, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfb5);
        EXPECT(gbc.pc(), 0xe7ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7ea), 0xcb);
        EXPECT(gbc.readMem(0xe7eb), 0x10);
        // CB 10 00F7
        gbc.setState(0x53ca, 0x84d9, 0x2e50, 0xc754, 0xe3aa, 0x83a3, 0x1, 0x0);
        gbc.writeMem(0x53ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x84d9);
        EXPECT(gbc.pc(), 0x53cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00F9
        gbc.setState(0x61fa, 0x344d, 0x5f10, 0xa2a0, 0xe880, 0x242d, 0x0, 0x0);
        gbc.writeMem(0x61fa, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x344d);
        EXPECT(gbc.pc(), 0x61fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 00FA
        gbc.setState(0x9fb5, 0xc87, 0x1020, 0x39c6, 0x1fd8, 0x1e43, 0x1, 0x0);
        gbc.writeMem(0x9fb5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc87);
        EXPECT(gbc.pc(), 0x9fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb5), 0xcb);
        EXPECT(gbc.readMem(0x9fb6), 0x10);
        // CB 10 00FB
        gbc.setState(0xbc77, 0x9d67, 0x2680, 0xf5f2, 0x2c43, 0x18dc, 0x1, 0x1);
        gbc.writeMem(0xbc77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9d67);
        EXPECT(gbc.pc(), 0xbc79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc77), 0xcb);
        EXPECT(gbc.readMem(0xbc78), 0x10);
        // CB 10 00FC
        gbc.setState(0xb89d, 0xc90a, 0xee10, 0x2133, 0xdd1f, 0x1c46, 0x1, 0x1);
        gbc.writeMem(0xb89d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc90a);
        EXPECT(gbc.pc(), 0xb89f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb89d), 0xcb);
        EXPECT(gbc.readMem(0xb89e), 0x10);
        // CB 10 00FD
        gbc.setState(0xbfb6, 0x1ea2, 0x1360, 0x68b3, 0x38c4, 0x167b, 0x0, 0x0);
        gbc.writeMem(0xbfb6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1ea2);
        EXPECT(gbc.pc(), 0xbfb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb6), 0xcb);
        EXPECT(gbc.readMem(0xbfb7), 0x10);
        // CB 10 00FE
        gbc.setState(0x3129, 0xf3f1, 0xb4a0, 0x31dd, 0x6c4b, 0x9615, 0x0, 0x0);
        gbc.writeMem(0x3129, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xf3f1);
        EXPECT(gbc.pc(), 0x312b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 00FF
        gbc.setState(0xeb44, 0x11da, 0x110, 0xe2bd, 0x65d3, 0xc8d1, 0x1, 0x1);
        gbc.writeMem(0xeb44, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x11da);
        EXPECT(gbc.pc(), 0xeb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb44), 0xcb);
        EXPECT(gbc.readMem(0xeb45), 0x10);
        // CB 10 0100
        gbc.setState(0x8bc2, 0x32e8, 0xd9f0, 0x76ef, 0x367d, 0x6578, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x32e8);
        EXPECT(gbc.pc(), 0x8bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc2), 0xcb);
        EXPECT(gbc.readMem(0x8bc3), 0x10);
        // CB 10 0101
        gbc.setState(0xc470, 0xda78, 0x1a10, 0xcf39, 0xb0af, 0xfdbc, 0x0, 0x1);
        gbc.writeMem(0xc470, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xda78);
        EXPECT(gbc.pc(), 0xc472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc470), 0xcb);
        EXPECT(gbc.readMem(0xc471), 0x10);
        // CB 10 0102
        gbc.setState(0xebed, 0x3953, 0x7bf0, 0x1976, 0x4f6e, 0xfdc3, 0x0, 0x0);
        gbc.writeMem(0xebed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3953);
        EXPECT(gbc.pc(), 0xebef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebed), 0xcb);
        EXPECT(gbc.readMem(0xebee), 0x10);
        // CB 10 0103
        gbc.setState(0x416e, 0xb090, 0xd1b0, 0x4408, 0x6f82, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0x416e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb090);
        EXPECT(gbc.pc(), 0x4170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0104
        gbc.setState(0x2cc, 0x7ae2, 0x3c70, 0x1adb, 0x6838, 0x2cc9, 0x1, 0x1);
        gbc.writeMem(0x2cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7ae2);
        EXPECT(gbc.pc(), 0x2ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0105
        gbc.setState(0x8ff2, 0xd12b, 0x97a0, 0x1f09, 0xf8ae, 0x6ccb, 0x0, 0x0);
        gbc.writeMem(0x8ff2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd12b);
        EXPECT(gbc.pc(), 0x8ff4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff2), 0xcb);
        EXPECT(gbc.readMem(0x8ff3), 0x10);
        // CB 10 0106
        gbc.setState(0x6d93, 0xd788, 0xd8b0, 0xd901, 0xa0f7, 0xa9ee, 0x1, 0x1);
        gbc.writeMem(0x6d93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd788);
        EXPECT(gbc.pc(), 0x6d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0107
        gbc.setState(0xa2b0, 0x6234, 0xb850, 0xfdd4, 0x396d, 0xbe4e, 0x0, 0x0);
        gbc.writeMem(0xa2b0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6234);
        EXPECT(gbc.pc(), 0xa2b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2b0), 0xcb);
        EXPECT(gbc.readMem(0xa2b1), 0x10);
        // CB 10 0108
        gbc.setState(0x3ae1, 0x8654, 0xcb80, 0x5ee8, 0xd5f0, 0xe2c5, 0x0, 0x1);
        gbc.writeMem(0x3ae1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8654);
        EXPECT(gbc.pc(), 0x3ae3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0109
        gbc.setState(0x327a, 0x9955, 0xf960, 0xb5e1, 0xff1f, 0x9e07, 0x0, 0x1);
        gbc.writeMem(0x327a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9955);
        EXPECT(gbc.pc(), 0x327c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 010A
        gbc.setState(0xa682, 0xb0be, 0x1e0, 0x6844, 0x8923, 0x1948, 0x1, 0x0);
        gbc.writeMem(0xa682, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb0be);
        EXPECT(gbc.pc(), 0xa684);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa682), 0xcb);
        EXPECT(gbc.readMem(0xa683), 0x10);
        // CB 10 010B
        gbc.setState(0x41ec, 0x9029, 0xcda0, 0x1da2, 0x39f5, 0x5084, 0x1, 0x1);
        gbc.writeMem(0x41ec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9029);
        EXPECT(gbc.pc(), 0x41ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 010C
        gbc.setState(0xdbef, 0x4ac0, 0xf0d0, 0x4628, 0x175b, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0xdbef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4ac0);
        EXPECT(gbc.pc(), 0xdbf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbef), 0xcb);
        EXPECT(gbc.readMem(0xdbf0), 0x10);
        // CB 10 010D
        gbc.setState(0x604b, 0xbfd9, 0xbbd0, 0xa4fa, 0x3af6, 0x1576, 0x1, 0x1);
        gbc.writeMem(0x604b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xbfd9);
        EXPECT(gbc.pc(), 0x604d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 010E
        gbc.setState(0x7b85, 0xc9da, 0x93e0, 0x5bb0, 0x4d49, 0x44af, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc9da);
        EXPECT(gbc.pc(), 0x7b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 010F
        gbc.setState(0x62c4, 0xb00b, 0x2fe0, 0x5bf4, 0x2f7, 0x7d5, 0x0, 0x1);
        gbc.writeMem(0x62c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb00b);
        EXPECT(gbc.pc(), 0x62c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0110
        gbc.setState(0xe09, 0x8035, 0xca20, 0xd959, 0x93c0, 0xca18, 0x1, 0x1);
        gbc.writeMem(0xe09, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8035);
        EXPECT(gbc.pc(), 0xe0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0111
        gbc.setState(0x4b39, 0x21b6, 0xf2e0, 0xd9d7, 0x1bf8, 0x5ea0, 0x0, 0x0);
        gbc.writeMem(0x4b39, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x21b6);
        EXPECT(gbc.pc(), 0x4b3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0112
        gbc.setState(0xd1e2, 0x1ff4, 0xc1d0, 0xd250, 0x12be, 0x23bb, 0x0, 0x1);
        gbc.writeMem(0xd1e2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1ff4);
        EXPECT(gbc.pc(), 0xd1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e2), 0xcb);
        EXPECT(gbc.readMem(0xd1e3), 0x10);
        // CB 10 0113
        gbc.setState(0x628f, 0x6a16, 0x61f0, 0x9841, 0x5d5f, 0xa82b, 0x0, 0x0);
        gbc.writeMem(0x628f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6a16);
        EXPECT(gbc.pc(), 0x6291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0114
        gbc.setState(0xc370, 0x8e24, 0x3fa0, 0xc0bf, 0xfff, 0xccf0, 0x1, 0x1);
        gbc.writeMem(0xc370, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8e24);
        EXPECT(gbc.pc(), 0xc372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc370), 0xcb);
        EXPECT(gbc.readMem(0xc371), 0x10);
        // CB 10 0116
        gbc.setState(0x6346, 0xb1c2, 0xb800, 0x520, 0xc271, 0x331d, 0x0, 0x0);
        gbc.writeMem(0x6346, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb1c2);
        EXPECT(gbc.pc(), 0x6348);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0117
        gbc.setState(0x8000, 0x94d4, 0xdf80, 0x958e, 0xf206, 0x7f4b, 0x0, 0x1);
        gbc.writeMem(0x8000, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x94d4);
        EXPECT(gbc.pc(), 0x8002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8000), 0xcb);
        EXPECT(gbc.readMem(0x8001), 0x10);
        // CB 10 0118
        gbc.setState(0x6441, 0xb715, 0xee80, 0x2e06, 0xa257, 0x62a8, 0x1, 0x1);
        gbc.writeMem(0x6441, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb715);
        EXPECT(gbc.pc(), 0x6443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0119
        gbc.setState(0x7f2c, 0x4196, 0xc380, 0xf771, 0x4911, 0x3de9, 0x0, 0x0);
        gbc.writeMem(0x7f2c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4196);
        EXPECT(gbc.pc(), 0x7f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 011A
        gbc.setState(0x67c6, 0xa22b, 0x1530, 0x7125, 0x2674, 0xa09, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa22b);
        EXPECT(gbc.pc(), 0x67c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 011B
        gbc.setState(0x8bb9, 0x8933, 0x2ec0, 0x8c6c, 0xbc6e, 0xeb69, 0x1, 0x0);
        gbc.writeMem(0x8bb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8933);
        EXPECT(gbc.pc(), 0x8bbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb9), 0xcb);
        EXPECT(gbc.readMem(0x8bba), 0x10);
        // CB 10 011C
        gbc.setState(0x7d92, 0x8d05, 0x3b30, 0x295d, 0xf1a2, 0x12b3, 0x0, 0x1);
        gbc.writeMem(0x7d92, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8d05);
        EXPECT(gbc.pc(), 0x7d94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 011D
        gbc.setState(0xa3a1, 0x75c1, 0xcc90, 0x82ed, 0x8df7, 0xb988, 0x1, 0x0);
        gbc.writeMem(0xa3a1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x75c1);
        EXPECT(gbc.pc(), 0xa3a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a1), 0xcb);
        EXPECT(gbc.readMem(0xa3a2), 0x10);
        // CB 10 011E
        gbc.setState(0x69ef, 0x1af, 0x71a0, 0x2caf, 0xaaee, 0x6fb2, 0x1, 0x1);
        gbc.writeMem(0x69ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1af);
        EXPECT(gbc.pc(), 0x69f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 011F
        gbc.setState(0xcd91, 0x4d34, 0x9e20, 0x94a5, 0xb302, 0x9c0e, 0x1, 0x1);
        gbc.writeMem(0xcd91, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4d34);
        EXPECT(gbc.pc(), 0xcd93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd91), 0xcb);
        EXPECT(gbc.readMem(0xcd92), 0x10);
        // CB 10 0120
        gbc.setState(0x8a1c, 0x92e0, 0xa620, 0xea57, 0xceb9, 0xfe95, 0x1, 0x0);
        gbc.writeMem(0x8a1c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x92e0);
        EXPECT(gbc.pc(), 0x8a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a1c), 0xcb);
        EXPECT(gbc.readMem(0x8a1d), 0x10);
        // CB 10 0121
        gbc.setState(0x48d6, 0x750b, 0xc130, 0xc998, 0x3059, 0x2f05, 0x0, 0x1);
        gbc.writeMem(0x48d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x750b);
        EXPECT(gbc.pc(), 0x48d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0122
        gbc.setState(0x3e3, 0x5ad1, 0x2680, 0x4bbf, 0x5917, 0xca08, 0x0, 0x1);
        gbc.writeMem(0x3e3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5ad1);
        EXPECT(gbc.pc(), 0x3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0123
        gbc.setState(0xb75e, 0xeff9, 0x7320, 0x338, 0x42d6, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0xb75e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xeff9);
        EXPECT(gbc.pc(), 0xb760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75e), 0xcb);
        EXPECT(gbc.readMem(0xb75f), 0x10);
        // CB 10 0124
        gbc.setState(0x5762, 0x1f73, 0xaba0, 0x47c6, 0xa28, 0xaa8d, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1f73);
        EXPECT(gbc.pc(), 0x5764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0125
        gbc.setState(0xb9f6, 0x8027, 0xec00, 0x2152, 0xfcee, 0x7feb, 0x1, 0x0);
        gbc.writeMem(0xb9f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8027);
        EXPECT(gbc.pc(), 0xb9f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f6), 0xcb);
        EXPECT(gbc.readMem(0xb9f7), 0x10);
        // CB 10 0128
        gbc.setState(0xbd10, 0xd248, 0x2f0, 0x946f, 0x5883, 0xd4ed, 0x1, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd248);
        EXPECT(gbc.pc(), 0xbd12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd10), 0xcb);
        EXPECT(gbc.readMem(0xbd11), 0x10);
        // CB 10 0129
        gbc.setState(0x6b88, 0xee06, 0x44c0, 0x75b1, 0xaa0e, 0xb7be, 0x1, 0x0);
        gbc.writeMem(0x6b88, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xee06);
        EXPECT(gbc.pc(), 0x6b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 012A
        gbc.setState(0x75b9, 0xe266, 0x6700, 0xbba0, 0x589a, 0x85bf, 0x0, 0x1);
        gbc.writeMem(0x75b9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe266);
        EXPECT(gbc.pc(), 0x75bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 012B
        gbc.setState(0xbdd6, 0xf8e4, 0x92d0, 0x4a1b, 0x4fd7, 0xc694, 0x0, 0x0);
        gbc.writeMem(0xbdd6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf8e4);
        EXPECT(gbc.pc(), 0xbdd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdd6), 0xcb);
        EXPECT(gbc.readMem(0xbdd7), 0x10);
        // CB 10 012C
        gbc.setState(0xef01, 0x94bc, 0xc340, 0x4622, 0x56c1, 0x9cb5, 0x1, 0x1);
        gbc.writeMem(0xef01, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x94bc);
        EXPECT(gbc.pc(), 0xef03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef01), 0xcb);
        EXPECT(gbc.readMem(0xef02), 0x10);
        // CB 10 012D
        gbc.setState(0xae0b, 0x4ec0, 0x6730, 0x5403, 0x608, 0x548e, 0x1, 0x1);
        gbc.writeMem(0xae0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4ec0);
        EXPECT(gbc.pc(), 0xae0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0b), 0xcb);
        EXPECT(gbc.readMem(0xae0c), 0x10);
        // CB 10 012E
        gbc.setState(0xad63, 0xcec3, 0x870, 0x76d8, 0xc45c, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0xad63, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcec3);
        EXPECT(gbc.pc(), 0xad65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad63), 0xcb);
        EXPECT(gbc.readMem(0xad64), 0x10);
        // CB 10 012F
        gbc.setState(0x755b, 0xcd12, 0xbe00, 0x97f, 0xa3a5, 0xf705, 0x0, 0x0);
        gbc.writeMem(0x755b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xcd12);
        EXPECT(gbc.pc(), 0x755d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0130
        gbc.setState(0xa43, 0x9330, 0x4b80, 0xeb6a, 0xba36, 0x64ac, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9330);
        EXPECT(gbc.pc(), 0xa45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0131
        gbc.setState(0x43f5, 0x7af4, 0x4460, 0x6865, 0x7670, 0xeaf8, 0x0, 0x0);
        gbc.writeMem(0x43f5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7af4);
        EXPECT(gbc.pc(), 0x43f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0132
        gbc.setState(0x4cdf, 0xd3f4, 0x8060, 0x6ef3, 0xacbc, 0xa67b, 0x1, 0x1);
        gbc.writeMem(0x4cdf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd3f4);
        EXPECT(gbc.pc(), 0x4ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0133
        gbc.setState(0xa4a3, 0xbdea, 0x5790, 0xe5b2, 0x563d, 0xcfce, 0x0, 0x0);
        gbc.writeMem(0xa4a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbdea);
        EXPECT(gbc.pc(), 0xa4a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a3), 0xcb);
        EXPECT(gbc.readMem(0xa4a4), 0x10);
        // CB 10 0134
        gbc.setState(0x9393, 0xa0e0, 0x8970, 0x9157, 0xb697, 0xa510, 0x0, 0x0);
        gbc.writeMem(0x9393, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa0e0);
        EXPECT(gbc.pc(), 0x9395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9393), 0xcb);
        EXPECT(gbc.readMem(0x9394), 0x10);
        // CB 10 0135
        gbc.setState(0xc9f3, 0x9f20, 0x9d60, 0xaf65, 0x3c5b, 0x663, 0x0, 0x1);
        gbc.writeMem(0xc9f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9f20);
        EXPECT(gbc.pc(), 0xc9f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f3), 0xcb);
        EXPECT(gbc.readMem(0xc9f4), 0x10);
        // CB 10 0136
        gbc.setState(0x92c7, 0xd562, 0x9aa0, 0x25c9, 0xe7b0, 0x3a82, 0x0, 0x0);
        gbc.writeMem(0x92c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd562);
        EXPECT(gbc.pc(), 0x92c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c7), 0xcb);
        EXPECT(gbc.readMem(0x92c8), 0x10);
        // CB 10 0137
        gbc.setState(0x71cc, 0x7e7b, 0x65a0, 0xd08b, 0x820, 0xf9d9, 0x1, 0x0);
        gbc.writeMem(0x71cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7e7b);
        EXPECT(gbc.pc(), 0x71ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0138
        gbc.setState(0x3fd6, 0xf2eb, 0x9e80, 0x5386, 0x6dd0, 0xf105, 0x0, 0x0);
        gbc.writeMem(0x3fd6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf2eb);
        EXPECT(gbc.pc(), 0x3fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0139
        gbc.setState(0x2fd9, 0x7059, 0x8e60, 0xc088, 0x8ace, 0x72ab, 0x1, 0x0);
        gbc.writeMem(0x2fd9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x7059);
        EXPECT(gbc.pc(), 0x2fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 013A
        gbc.setState(0x1c42, 0x9f1a, 0xa040, 0xda24, 0x471e, 0xf496, 0x1, 0x1);
        gbc.writeMem(0x1c42, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9f1a);
        EXPECT(gbc.pc(), 0x1c44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 013B
        gbc.setState(0x12b7, 0x7d5d, 0x15c0, 0xb88c, 0xd4fb, 0x2bf7, 0x1, 0x0);
        gbc.writeMem(0x12b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7d5d);
        EXPECT(gbc.pc(), 0x12b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 013C
        gbc.setState(0xe728, 0xf88e, 0x4a40, 0xbe89, 0x135d, 0x7059, 0x0, 0x0);
        gbc.writeMem(0xe728, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf88e);
        EXPECT(gbc.pc(), 0xe72a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe728), 0xcb);
        EXPECT(gbc.readMem(0xe729), 0x10);
        // CB 10 013D
        gbc.setState(0x7ef4, 0x7e43, 0xbf10, 0xb86d, 0xa8d1, 0xa40e, 0x1, 0x1);
        gbc.writeMem(0x7ef4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7e43);
        EXPECT(gbc.pc(), 0x7ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 013E
        gbc.setState(0x1f7d, 0xd5d1, 0x26b0, 0x40c9, 0xda20, 0xc71c, 0x0, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd5d1);
        EXPECT(gbc.pc(), 0x1f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 013F
        gbc.setState(0x7361, 0xe092, 0x7050, 0x1ac1, 0xdb1f, 0xfff9, 0x1, 0x0);
        gbc.writeMem(0x7361, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe092);
        EXPECT(gbc.pc(), 0x7363);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0140
        gbc.setState(0xa84, 0x57f2, 0x9490, 0x9fc3, 0xd2da, 0x977, 0x1, 0x0);
        gbc.writeMem(0xa84, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x57f2);
        EXPECT(gbc.pc(), 0xa86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0141
        gbc.setState(0x9424, 0x3b30, 0x43c0, 0x4891, 0xe655, 0x5e7b, 0x1, 0x1);
        gbc.writeMem(0x9424, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3b30);
        EXPECT(gbc.pc(), 0x9426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9424), 0xcb);
        EXPECT(gbc.readMem(0x9425), 0x10);
        // CB 10 0142
        gbc.setState(0x1872, 0xe007, 0xeee0, 0x3da9, 0x154c, 0xcf73, 0x0, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe007);
        EXPECT(gbc.pc(), 0x1874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0143
        gbc.setState(0x12a8, 0x17d8, 0xd080, 0x99db, 0xd213, 0xddbf, 0x0, 0x1);
        gbc.writeMem(0x12a8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x17d8);
        EXPECT(gbc.pc(), 0x12aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0144
        gbc.setState(0x1fee, 0x1b36, 0xaa70, 0xbc48, 0x167, 0xb1a4, 0x1, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1b36);
        EXPECT(gbc.pc(), 0x1ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0145
        gbc.setState(0x3811, 0x583b, 0xddb0, 0xe484, 0x1e3a, 0x28c0, 0x0, 0x1);
        gbc.writeMem(0x3811, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x583b);
        EXPECT(gbc.pc(), 0x3813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0146
        gbc.setState(0x41b1, 0xf7, 0xfd40, 0xae6b, 0x1990, 0x3c36, 0x0, 0x1);
        gbc.writeMem(0x41b1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf7);
        EXPECT(gbc.pc(), 0x41b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0147
        gbc.setState(0x5ee7, 0x375f, 0x4480, 0xab41, 0xd371, 0xfe, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x375f);
        EXPECT(gbc.pc(), 0x5ee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0148
        gbc.setState(0x9f21, 0xace1, 0xc820, 0x27b3, 0x7a3, 0x5886, 0x0, 0x0);
        gbc.writeMem(0x9f21, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xace1);
        EXPECT(gbc.pc(), 0x9f23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f21), 0xcb);
        EXPECT(gbc.readMem(0x9f22), 0x10);
        // CB 10 0149
        gbc.setState(0x778e, 0xec69, 0x89c0, 0x840e, 0x6abe, 0x8a7d, 0x1, 0x0);
        gbc.writeMem(0x778e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xec69);
        EXPECT(gbc.pc(), 0x7790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 014A
        gbc.setState(0x947e, 0xfb32, 0x7190, 0x7eaf, 0x3a9f, 0xb8e4, 0x0, 0x1);
        gbc.writeMem(0x947e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfb32);
        EXPECT(gbc.pc(), 0x9480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x947e), 0xcb);
        EXPECT(gbc.readMem(0x947f), 0x10);
        // CB 10 014B
        gbc.setState(0xc6c9, 0x6095, 0x3a20, 0xd4e0, 0x95ac, 0xd82a, 0x1, 0x0);
        gbc.writeMem(0xc6c9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6095);
        EXPECT(gbc.pc(), 0xc6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c9), 0xcb);
        EXPECT(gbc.readMem(0xc6ca), 0x10);
        // CB 10 014C
        gbc.setState(0x6f2f, 0x35d9, 0x6b0, 0xc81c, 0xe0cc, 0xf17a, 0x0, 0x0);
        gbc.writeMem(0x6f2f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x35d9);
        EXPECT(gbc.pc(), 0x6f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 014E
        gbc.setState(0x22e7, 0xf6d, 0xbda0, 0xb964, 0xfdf9, 0x2889, 0x1, 0x1);
        gbc.writeMem(0x22e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf6d);
        EXPECT(gbc.pc(), 0x22e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 014F
        gbc.setState(0x739a, 0xc66d, 0xf3e0, 0x574a, 0x6262, 0xeb13, 0x1, 0x1);
        gbc.writeMem(0x739a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc66d);
        EXPECT(gbc.pc(), 0x739c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0150
        gbc.setState(0x6079, 0x9235, 0x5f90, 0xaf94, 0x1b7f, 0x970c, 0x1, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9235);
        EXPECT(gbc.pc(), 0x607b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0151
        gbc.setState(0x4f1e, 0x178f, 0x9710, 0x294d, 0x2bbf, 0x7765, 0x1, 0x0);
        gbc.writeMem(0x4f1e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x178f);
        EXPECT(gbc.pc(), 0x4f20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0152
        gbc.setState(0x3daf, 0xd73e, 0x3840, 0xc9a9, 0xff25, 0x9b52, 0x1, 0x1);
        gbc.writeMem(0x3daf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd73e);
        EXPECT(gbc.pc(), 0x3db1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0153
        gbc.setState(0x8749, 0x6125, 0xe7c0, 0x5109, 0x6439, 0x326, 0x1, 0x0);
        gbc.writeMem(0x8749, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6125);
        EXPECT(gbc.pc(), 0x874b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8749), 0xcb);
        EXPECT(gbc.readMem(0x874a), 0x10);
        // CB 10 0154
        gbc.setState(0x7d5d, 0x1aa3, 0x8ad0, 0x450f, 0xd4e5, 0x92d5, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1aa3);
        EXPECT(gbc.pc(), 0x7d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0155
        gbc.setState(0xc2e9, 0x5172, 0x25e0, 0x8f14, 0x2f9a, 0x3f4c, 0x1, 0x1);
        gbc.writeMem(0xc2e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x5172);
        EXPECT(gbc.pc(), 0xc2eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e9), 0xcb);
        EXPECT(gbc.readMem(0xc2ea), 0x10);
        // CB 10 0156
        gbc.setState(0xb726, 0xc608, 0xedf0, 0x4bc3, 0x6472, 0x90a, 0x1, 0x1);
        gbc.writeMem(0xb726, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc608);
        EXPECT(gbc.pc(), 0xb728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb726), 0xcb);
        EXPECT(gbc.readMem(0xb727), 0x10);
        // CB 10 0158
        gbc.setState(0x802f, 0xeb45, 0xc410, 0x3579, 0x5ed3, 0x3c13, 0x0, 0x1);
        gbc.writeMem(0x802f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeb45);
        EXPECT(gbc.pc(), 0x8031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802f), 0xcb);
        EXPECT(gbc.readMem(0x8030), 0x10);
        // CB 10 0159
        gbc.setState(0x2ddc, 0xb97, 0x4540, 0x5a5a, 0x6d06, 0xdbb9, 0x1, 0x0);
        gbc.writeMem(0x2ddc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb97);
        EXPECT(gbc.pc(), 0x2dde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 015A
        gbc.setState(0x1870, 0xc76a, 0x68b0, 0xbec5, 0x25ef, 0x95ac, 0x1, 0x0);
        gbc.writeMem(0x1870, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc76a);
        EXPECT(gbc.pc(), 0x1872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 015B
        gbc.setState(0x87e, 0xbb14, 0x9eb0, 0xac57, 0x934, 0x2105, 0x0, 0x0);
        gbc.writeMem(0x87e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbb14);
        EXPECT(gbc.pc(), 0x880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 015C
        gbc.setState(0xee0d, 0xb843, 0x2390, 0xa5e0, 0x5df6, 0x7abd, 0x1, 0x0);
        gbc.writeMem(0xee0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb843);
        EXPECT(gbc.pc(), 0xee0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee0d), 0xcb);
        EXPECT(gbc.readMem(0xee0e), 0x10);
        // CB 10 015D
        gbc.setState(0x358b, 0xa928, 0xd5c0, 0x3258, 0xb434, 0xfba3, 0x1, 0x0);
        gbc.writeMem(0x358b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa928);
        EXPECT(gbc.pc(), 0x358d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 015E
        gbc.setState(0x787c, 0x28a0, 0x8900, 0xa6c6, 0x71ff, 0x1211, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x28a0);
        EXPECT(gbc.pc(), 0x787e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 015F
        gbc.setState(0x4b1, 0x147, 0x2ad0, 0x85c8, 0x5962, 0xf3c2, 0x0, 0x1);
        gbc.writeMem(0x4b1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x147);
        EXPECT(gbc.pc(), 0x4b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0160
        gbc.setState(0x3638, 0xdd94, 0x2920, 0x871d, 0xa5e1, 0xd4e2, 0x1, 0x0);
        gbc.writeMem(0x3638, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xdd94);
        EXPECT(gbc.pc(), 0x363a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0161
        gbc.setState(0xb483, 0xeee0, 0x46b0, 0xf805, 0x644d, 0x4b50, 0x1, 0x0);
        gbc.writeMem(0xb483, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xeee0);
        EXPECT(gbc.pc(), 0xb485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb483), 0xcb);
        EXPECT(gbc.readMem(0xb484), 0x10);
        // CB 10 0162
        gbc.setState(0x47db, 0xb781, 0x8550, 0xafc, 0xe282, 0xcf, 0x1, 0x0);
        gbc.writeMem(0x47db, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb781);
        EXPECT(gbc.pc(), 0x47dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0163
        gbc.setState(0x91c8, 0x71cb, 0x85f0, 0x46ee, 0x2114, 0xe03f, 0x0, 0x1);
        gbc.writeMem(0x91c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x71cb);
        EXPECT(gbc.pc(), 0x91ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c8), 0xcb);
        EXPECT(gbc.readMem(0x91c9), 0x10);
        // CB 10 0164
        gbc.setState(0xce1a, 0xa323, 0x3270, 0x83c9, 0x80e4, 0x5d80, 0x1, 0x1);
        gbc.writeMem(0xce1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa323);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1a), 0xcb);
        EXPECT(gbc.readMem(0xce1b), 0x10);
        // CB 10 0165
        gbc.setState(0x688b, 0xcf03, 0xe2a0, 0x9504, 0xb322, 0x4779, 0x1, 0x1);
        gbc.writeMem(0x688b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xcf03);
        EXPECT(gbc.pc(), 0x688d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0167
        gbc.setState(0x94f8, 0x7a17, 0xc730, 0xbb0b, 0x450e, 0x1cd3, 0x0, 0x1);
        gbc.writeMem(0x94f8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7a17);
        EXPECT(gbc.pc(), 0x94fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f8), 0xcb);
        EXPECT(gbc.readMem(0x94f9), 0x10);
        // CB 10 0168
        gbc.setState(0x63e7, 0xb68f, 0xe5a0, 0x2ff4, 0x31d, 0xdaa6, 0x1, 0x0);
        gbc.writeMem(0x63e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb68f);
        EXPECT(gbc.pc(), 0x63e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0169
        gbc.setState(0x8d04, 0x3348, 0x67e0, 0x61e5, 0xc131, 0x9391, 0x0, 0x1);
        gbc.writeMem(0x8d04, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3348);
        EXPECT(gbc.pc(), 0x8d06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d04), 0xcb);
        EXPECT(gbc.readMem(0x8d05), 0x10);
        // CB 10 016A
        gbc.setState(0x6760, 0x9e08, 0x1f70, 0xcd2, 0xd287, 0xda8e, 0x0, 0x1);
        gbc.writeMem(0x6760, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x9e08);
        EXPECT(gbc.pc(), 0x6762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 016B
        gbc.setState(0xc22, 0xdbb1, 0x4570, 0x35e, 0xbf5, 0xa8da, 0x0, 0x0);
        gbc.writeMem(0xc22, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdbb1);
        EXPECT(gbc.pc(), 0xc24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 016C
        gbc.setState(0x970d, 0xa242, 0xc020, 0x3c16, 0x62c8, 0x79cf, 0x1, 0x0);
        gbc.writeMem(0x970d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa242);
        EXPECT(gbc.pc(), 0x970f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970d), 0xcb);
        EXPECT(gbc.readMem(0x970e), 0x10);
        // CB 10 016E
        gbc.setState(0xdc85, 0x5bf7, 0xf990, 0x5169, 0x87f1, 0x6173, 0x1, 0x1);
        gbc.writeMem(0xdc85, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5bf7);
        EXPECT(gbc.pc(), 0xdc87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc85), 0xcb);
        EXPECT(gbc.readMem(0xdc86), 0x10);
        // CB 10 016F
        gbc.setState(0x7a81, 0x6135, 0xb30, 0xc678, 0x7092, 0xac8a, 0x0, 0x0);
        gbc.writeMem(0x7a81, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6135);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0171
        gbc.setState(0x8f8, 0xc48a, 0xea80, 0xce6c, 0x4246, 0xffdc, 0x1, 0x0);
        gbc.writeMem(0x8f8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc48a);
        EXPECT(gbc.pc(), 0x8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0172
        gbc.setState(0xfad, 0x8ce1, 0xda00, 0x6774, 0xf3e0, 0x6f31, 0x0, 0x1);
        gbc.writeMem(0xfad, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8ce1);
        EXPECT(gbc.pc(), 0xfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0173
        gbc.setState(0x201b, 0x90d7, 0x7a40, 0xbca, 0x58a8, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x201b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x90d7);
        EXPECT(gbc.pc(), 0x201d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0174
        gbc.setState(0xcab7, 0x52ed, 0x6d0, 0x479, 0x3172, 0x6650, 0x0, 0x1);
        gbc.writeMem(0xcab7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x52ed);
        EXPECT(gbc.pc(), 0xcab9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab7), 0xcb);
        EXPECT(gbc.readMem(0xcab8), 0x10);
        // CB 10 0175
        gbc.setState(0x1020, 0xd5, 0xc970, 0xfff9, 0xdd88, 0x3779, 0x1, 0x0);
        gbc.writeMem(0x1020, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd5);
        EXPECT(gbc.pc(), 0x1022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0176
        gbc.setState(0x3a93, 0x9bf1, 0xeba0, 0xdbd8, 0x3879, 0x693, 0x0, 0x1);
        gbc.writeMem(0x3a93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0x3a95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0177
        gbc.setState(0xdb7c, 0x765e, 0x4c50, 0x51fa, 0xea75, 0x1c26, 0x1, 0x0);
        gbc.writeMem(0xdb7c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x765e);
        EXPECT(gbc.pc(), 0xdb7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb7c), 0xcb);
        EXPECT(gbc.readMem(0xdb7d), 0x10);
        // CB 10 0178
        gbc.setState(0xbcf1, 0xf724, 0x3cc0, 0xdcf9, 0xd5ba, 0x2f67, 0x0, 0x0);
        gbc.writeMem(0xbcf1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf724);
        EXPECT(gbc.pc(), 0xbcf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf1), 0xcb);
        EXPECT(gbc.readMem(0xbcf2), 0x10);
        // CB 10 0179
        gbc.setState(0x88f6, 0x13e2, 0x70c0, 0x6a71, 0x2fd9, 0x96c3, 0x0, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x13e2);
        EXPECT(gbc.pc(), 0x88f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88f6), 0xcb);
        EXPECT(gbc.readMem(0x88f7), 0x10);
        // CB 10 017A
        gbc.setState(0xed09, 0x2c48, 0x78b0, 0x84a5, 0xb303, 0xc898, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2c48);
        EXPECT(gbc.pc(), 0xed0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed09), 0xcb);
        EXPECT(gbc.readMem(0xed0a), 0x10);
        // CB 10 017B
        gbc.setState(0x843b, 0xa0f8, 0x160, 0x22f3, 0x4075, 0xbe41, 0x1, 0x1);
        gbc.writeMem(0x843b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa0f8);
        EXPECT(gbc.pc(), 0x843d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x843b), 0xcb);
        EXPECT(gbc.readMem(0x843c), 0x10);
        // CB 10 017C
        gbc.setState(0x6305, 0xcd94, 0xd2f0, 0xccd3, 0x50a2, 0x7aad, 0x0, 0x0);
        gbc.writeMem(0x6305, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcd94);
        EXPECT(gbc.pc(), 0x6307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 017D
        gbc.setState(0x276e, 0x57b4, 0x3ff0, 0x1092, 0x2829, 0x17d3, 0x1, 0x0);
        gbc.writeMem(0x276e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x57b4);
        EXPECT(gbc.pc(), 0x2770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 017E
        gbc.setState(0x5314, 0x2604, 0x39e0, 0x4e6d, 0xd00a, 0x741f, 0x1, 0x0);
        gbc.writeMem(0x5314, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x2604);
        EXPECT(gbc.pc(), 0x5316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 017F
        gbc.setState(0xa792, 0xf2fa, 0xad0, 0xc24a, 0x7e86, 0x7b28, 0x0, 0x0);
        gbc.writeMem(0xa792, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf2fa);
        EXPECT(gbc.pc(), 0xa794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa792), 0xcb);
        EXPECT(gbc.readMem(0xa793), 0x10);
        // CB 10 0181
        gbc.setState(0x1d4f, 0xd885, 0x6f0, 0xd21d, 0x7157, 0xcfb4, 0x1, 0x0);
        gbc.writeMem(0x1d4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xd885);
        EXPECT(gbc.pc(), 0x1d51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0182
        gbc.setState(0x4699, 0x197d, 0x8500, 0xc80c, 0x6769, 0x2574, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x197d);
        EXPECT(gbc.pc(), 0x469b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0183
        gbc.setState(0x8138, 0xd5ea, 0xf520, 0xbcc9, 0x2e08, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x8138, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xd5ea);
        EXPECT(gbc.pc(), 0x813a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8138), 0xcb);
        EXPECT(gbc.readMem(0x8139), 0x10);
        // CB 10 0184
        gbc.setState(0xd130, 0x8efa, 0x6850, 0xe98b, 0xd2bc, 0x457b, 0x1, 0x0);
        gbc.writeMem(0xd130, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8efa);
        EXPECT(gbc.pc(), 0xd132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd130), 0xcb);
        EXPECT(gbc.readMem(0xd131), 0x10);
        // CB 10 0185
        gbc.setState(0x231f, 0xd329, 0x4450, 0xa8ca, 0x9e32, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd329);
        EXPECT(gbc.pc(), 0x2321);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0186
        gbc.setState(0x6b37, 0x2db9, 0x6b50, 0xfa32, 0x5dcb, 0x5ada, 0x0, 0x0);
        gbc.writeMem(0x6b37, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2db9);
        EXPECT(gbc.pc(), 0x6b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0187
        gbc.setState(0x7e32, 0x9cf1, 0xf0e0, 0x92b0, 0x51e7, 0xce9a, 0x1, 0x1);
        gbc.writeMem(0x7e32, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9cf1);
        EXPECT(gbc.pc(), 0x7e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0188
        gbc.setState(0x9ae9, 0xfa8e, 0x6200, 0xcba6, 0xb86d, 0xad8, 0x1, 0x0);
        gbc.writeMem(0x9ae9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfa8e);
        EXPECT(gbc.pc(), 0x9aeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae9), 0xcb);
        EXPECT(gbc.readMem(0x9aea), 0x10);
        // CB 10 0189
        gbc.setState(0x9bcb, 0x83e0, 0xf5d0, 0x9cd8, 0x103f, 0xd818, 0x1, 0x0);
        gbc.writeMem(0x9bcb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x83e0);
        EXPECT(gbc.pc(), 0x9bcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bcb), 0xcb);
        EXPECT(gbc.readMem(0x9bcc), 0x10);
        // CB 10 018A
        gbc.setState(0x1709, 0x485c, 0xe1c0, 0xf167, 0x8249, 0x4765, 0x1, 0x1);
        gbc.writeMem(0x1709, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x485c);
        EXPECT(gbc.pc(), 0x170b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 018B
        gbc.setState(0x3623, 0x90b9, 0x33f0, 0xd5dd, 0xf, 0xe710, 0x0, 0x1);
        gbc.writeMem(0x3623, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0x3625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 018C
        gbc.setState(0x36c9, 0x97a9, 0x6780, 0xcee0, 0xb242, 0xf1c3, 0x1, 0x0);
        gbc.writeMem(0x36c9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x97a9);
        EXPECT(gbc.pc(), 0x36cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 018D
        gbc.setState(0x4b9, 0xeccf, 0xd0, 0x127c, 0x3344, 0x1a37, 0x1, 0x0);
        gbc.writeMem(0x4b9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xeccf);
        EXPECT(gbc.pc(), 0x4bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 018E
        gbc.setState(0x2f27, 0x3517, 0xfc90, 0xcfee, 0xe295, 0x25c0, 0x1, 0x0);
        gbc.writeMem(0x2f27, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3517);
        EXPECT(gbc.pc(), 0x2f29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 018F
        gbc.setState(0x1580, 0x7e01, 0xb210, 0x5baa, 0xff27, 0xc488, 0x1, 0x0);
        gbc.writeMem(0x1580, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7e01);
        EXPECT(gbc.pc(), 0x1582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0190
        gbc.setState(0xdd18, 0x85a0, 0x1f60, 0x2648, 0x270e, 0xe08f, 0x1, 0x1);
        gbc.writeMem(0xdd18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x85a0);
        EXPECT(gbc.pc(), 0xdd1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd18), 0xcb);
        EXPECT(gbc.readMem(0xdd19), 0x10);
        // CB 10 0191
        gbc.setState(0x156b, 0xea07, 0x9830, 0x8fc1, 0xb9d, 0xbc08, 0x1, 0x0);
        gbc.writeMem(0x156b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xea07);
        EXPECT(gbc.pc(), 0x156d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0192
        gbc.setState(0x7aca, 0x77f3, 0x3890, 0x3193, 0x3b8e, 0x465b, 0x0, 0x1);
        gbc.writeMem(0x7aca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x77f3);
        EXPECT(gbc.pc(), 0x7acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0193
        gbc.setState(0x2993, 0xe608, 0x39a0, 0x67f5, 0x3e8b, 0xdcc4, 0x0, 0x0);
        gbc.writeMem(0x2993, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe608);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0194
        gbc.setState(0x1b6a, 0x3106, 0x97b0, 0x582a, 0xfc0, 0x385e, 0x1, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3106);
        EXPECT(gbc.pc(), 0x1b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0195
        gbc.setState(0xa199, 0x996a, 0x4020, 0xd545, 0x1b80, 0x82e7, 0x1, 0x1);
        gbc.writeMem(0xa199, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x996a);
        EXPECT(gbc.pc(), 0xa19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa199), 0xcb);
        EXPECT(gbc.readMem(0xa19a), 0x10);
        // CB 10 0196
        gbc.setState(0x49e8, 0x5a20, 0xf100, 0x83d2, 0x4beb, 0x3c70, 0x0, 0x0);
        gbc.writeMem(0x49e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5a20);
        EXPECT(gbc.pc(), 0x49ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0197
        gbc.setState(0xafc9, 0x7f, 0x4c40, 0x1f36, 0x6d5f, 0x6569, 0x0, 0x0);
        gbc.writeMem(0xafc9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7f);
        EXPECT(gbc.pc(), 0xafcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafc9), 0xcb);
        EXPECT(gbc.readMem(0xafca), 0x10);
        // CB 10 0198
        gbc.setState(0xccfb, 0xcda9, 0xbae0, 0x4ff5, 0xa27a, 0x6606, 0x1, 0x0);
        gbc.writeMem(0xccfb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xcda9);
        EXPECT(gbc.pc(), 0xccfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccfb), 0xcb);
        EXPECT(gbc.readMem(0xccfc), 0x10);
        // CB 10 019A
        gbc.setState(0x2753, 0x8b43, 0x410, 0xc94c, 0x83f6, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0x2753, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8b43);
        EXPECT(gbc.pc(), 0x2755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 019B
        gbc.setState(0xa75d, 0x7bc6, 0x28a0, 0x82f9, 0xba37, 0x92e9, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7bc6);
        EXPECT(gbc.pc(), 0xa75f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa75d), 0xcb);
        EXPECT(gbc.readMem(0xa75e), 0x10);
        // CB 10 019C
        gbc.setState(0xdefe, 0xbc51, 0xe6a0, 0xdfc6, 0xd72b, 0x7d8c, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbc51);
        EXPECT(gbc.pc(), 0xdf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdefe), 0xcb);
        EXPECT(gbc.readMem(0xdeff), 0x10);
        // CB 10 019D
        gbc.setState(0xcc26, 0x5bcb, 0x5ac0, 0x4623, 0x31a5, 0x378e, 0x1, 0x1);
        gbc.writeMem(0xcc26, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5bcb);
        EXPECT(gbc.pc(), 0xcc28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc26), 0xcb);
        EXPECT(gbc.readMem(0xcc27), 0x10);
        // CB 10 019E
        gbc.setState(0x5e71, 0x11ac, 0x4af0, 0x42ff, 0x5156, 0xf057, 0x0, 0x0);
        gbc.writeMem(0x5e71, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x11ac);
        EXPECT(gbc.pc(), 0x5e73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 019F
        gbc.setState(0x9dbc, 0x3c0f, 0x4b80, 0xbc94, 0x881f, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0x9dbc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3c0f);
        EXPECT(gbc.pc(), 0x9dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dbc), 0xcb);
        EXPECT(gbc.readMem(0x9dbd), 0x10);
        // CB 10 01A0
        gbc.setState(0x4903, 0x14fd, 0x5220, 0xe33f, 0x1bed, 0x3ed7, 0x1, 0x0);
        gbc.writeMem(0x4903, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x14fd);
        EXPECT(gbc.pc(), 0x4905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01A1
        gbc.setState(0x8b7a, 0xaa61, 0xb4a0, 0x1feb, 0x91fb, 0xa34c, 0x0, 0x0);
        gbc.writeMem(0x8b7a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xaa61);
        EXPECT(gbc.pc(), 0x8b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b7a), 0xcb);
        EXPECT(gbc.readMem(0x8b7b), 0x10);
        // CB 10 01A2
        gbc.setState(0xa932, 0xe978, 0xd810, 0x9f90, 0xb470, 0xa040, 0x1, 0x1);
        gbc.writeMem(0xa932, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe978);
        EXPECT(gbc.pc(), 0xa934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa932), 0xcb);
        EXPECT(gbc.readMem(0xa933), 0x10);
        // CB 10 01A3
        gbc.setState(0x1a4e, 0xfb2f, 0x6e0, 0xcf6a, 0xb94c, 0x5642, 0x0, 0x1);
        gbc.writeMem(0x1a4e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfb2f);
        EXPECT(gbc.pc(), 0x1a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01A4
        gbc.setState(0xabb9, 0x5d32, 0x75d0, 0x71dc, 0xf7cf, 0x27ee, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5d32);
        EXPECT(gbc.pc(), 0xabbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb9), 0xcb);
        EXPECT(gbc.readMem(0xabba), 0x10);
        // CB 10 01A5
        gbc.setState(0xb116, 0x7a6e, 0x9e20, 0xdd1c, 0x539f, 0xab63, 0x1, 0x0);
        gbc.writeMem(0xb116, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7a6e);
        EXPECT(gbc.pc(), 0xb118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb116), 0xcb);
        EXPECT(gbc.readMem(0xb117), 0x10);
        // CB 10 01A6
        gbc.setState(0x96d6, 0x84e1, 0xfbd0, 0xbb0, 0x3ec0, 0xd2eb, 0x1, 0x1);
        gbc.writeMem(0x96d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x84e1);
        EXPECT(gbc.pc(), 0x96d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d6), 0xcb);
        EXPECT(gbc.readMem(0x96d7), 0x10);
        // CB 10 01A7
        gbc.setState(0xbb27, 0x9eab, 0xd750, 0x70fc, 0x7a9e, 0x96a6, 0x0, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9eab);
        EXPECT(gbc.pc(), 0xbb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb27), 0xcb);
        EXPECT(gbc.readMem(0xbb28), 0x10);
        // CB 10 01A8
        gbc.setState(0x55b7, 0xf05b, 0x27b0, 0x4ac7, 0x5c5e, 0xabf9, 0x1, 0x1);
        gbc.writeMem(0x55b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xf05b);
        EXPECT(gbc.pc(), 0x55b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01A9
        gbc.setState(0x90c7, 0x6cd2, 0x13f0, 0x1642, 0x2e8d, 0xe0b6, 0x1, 0x1);
        gbc.writeMem(0x90c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6cd2);
        EXPECT(gbc.pc(), 0x90c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c7), 0xcb);
        EXPECT(gbc.readMem(0x90c8), 0x10);
        // CB 10 01AA
        gbc.setState(0xc6fa, 0x76b6, 0xc160, 0x6315, 0xd84, 0x2f01, 0x0, 0x1);
        gbc.writeMem(0xc6fa, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x76b6);
        EXPECT(gbc.pc(), 0xc6fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fa), 0xcb);
        EXPECT(gbc.readMem(0xc6fb), 0x10);
        // CB 10 01AB
        gbc.setState(0x8372, 0xa14f, 0x9360, 0x9023, 0xa856, 0x4426, 0x1, 0x0);
        gbc.writeMem(0x8372, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa14f);
        EXPECT(gbc.pc(), 0x8374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8372), 0xcb);
        EXPECT(gbc.readMem(0x8373), 0x10);
        // CB 10 01AC
        gbc.setState(0xe180, 0xe650, 0x4700, 0x5e05, 0x19e5, 0x1a4d, 0x0, 0x0);
        gbc.writeMem(0xe180, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe650);
        EXPECT(gbc.pc(), 0xe182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe180), 0xcb);
        EXPECT(gbc.readMem(0xe181), 0x10);
        // CB 10 01AD
        gbc.setState(0x662, 0x43c, 0x9610, 0x1dc0, 0x913, 0xe405, 0x1, 0x1);
        gbc.writeMem(0x662, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x43c);
        EXPECT(gbc.pc(), 0x664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01AE
        gbc.setState(0x2175, 0x43a5, 0x8380, 0x5c10, 0x461c, 0x731, 0x0, 0x0);
        gbc.writeMem(0x2175, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x43a5);
        EXPECT(gbc.pc(), 0x2177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01AF
        gbc.setState(0x242d, 0x1b18, 0x7020, 0x7c10, 0x6f2b, 0x2640, 0x1, 0x0);
        gbc.writeMem(0x242d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1b18);
        EXPECT(gbc.pc(), 0x242f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01B0
        gbc.setState(0x9a78, 0x450e, 0xa850, 0x459a, 0xd01b, 0xf2a1, 0x0, 0x1);
        gbc.writeMem(0x9a78, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x450e);
        EXPECT(gbc.pc(), 0x9a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a78), 0xcb);
        EXPECT(gbc.readMem(0x9a79), 0x10);
        // CB 10 01B1
        gbc.setState(0x5fa1, 0xda75, 0x90a0, 0xc006, 0xa80c, 0xd4db, 0x1, 0x1);
        gbc.writeMem(0x5fa1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xda75);
        EXPECT(gbc.pc(), 0x5fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01B2
        gbc.setState(0x6d7f, 0x452e, 0x6050, 0x73a7, 0x8b4b, 0xa9bc, 0x1, 0x1);
        gbc.writeMem(0x6d7f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x452e);
        EXPECT(gbc.pc(), 0x6d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01B3
        gbc.setState(0xdcf, 0xb6b5, 0xdb80, 0x6a7c, 0xabe9, 0x9274, 0x1, 0x0);
        gbc.writeMem(0xdcf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb6b5);
        EXPECT(gbc.pc(), 0xdd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01B4
        gbc.setState(0xd42d, 0xda2e, 0x8540, 0x57b0, 0x66a5, 0x84c8, 0x1, 0x0);
        gbc.writeMem(0xd42d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xda2e);
        EXPECT(gbc.pc(), 0xd42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd42d), 0xcb);
        EXPECT(gbc.readMem(0xd42e), 0x10);
        // CB 10 01B5
        gbc.setState(0x56de, 0x4717, 0x3a20, 0xb5b3, 0x13cc, 0x5654, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4717);
        EXPECT(gbc.pc(), 0x56e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01B6
        gbc.setState(0x81f2, 0x9198, 0x5700, 0xd8fe, 0xcc99, 0x1516, 0x1, 0x0);
        gbc.writeMem(0x81f2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9198);
        EXPECT(gbc.pc(), 0x81f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f2), 0xcb);
        EXPECT(gbc.readMem(0x81f3), 0x10);
        // CB 10 01B7
        gbc.setState(0x8da5, 0x83b5, 0x1850, 0xf17c, 0x5ee0, 0xa768, 0x1, 0x0);
        gbc.writeMem(0x8da5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x83b5);
        EXPECT(gbc.pc(), 0x8da7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da5), 0xcb);
        EXPECT(gbc.readMem(0x8da6), 0x10);
        // CB 10 01B8
        gbc.setState(0xb661, 0x99e6, 0xbfb0, 0x6701, 0x7191, 0xb048, 0x0, 0x1);
        gbc.writeMem(0xb661, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x99e6);
        EXPECT(gbc.pc(), 0xb663);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb661), 0xcb);
        EXPECT(gbc.readMem(0xb662), 0x10);
        // CB 10 01B9
        gbc.setState(0x3674, 0x235e, 0x5fe0, 0x986d, 0xea63, 0xe7af, 0x0, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x235e);
        EXPECT(gbc.pc(), 0x3676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01BA
        gbc.setState(0x4cf3, 0x56b5, 0x1e00, 0xb1b3, 0x415a, 0x2699, 0x1, 0x0);
        gbc.writeMem(0x4cf3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x56b5);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01BC
        gbc.setState(0x9541, 0xf4f4, 0x5700, 0xc9be, 0xde3c, 0x6f50, 0x1, 0x0);
        gbc.writeMem(0x9541, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf4f4);
        EXPECT(gbc.pc(), 0x9543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9541), 0xcb);
        EXPECT(gbc.readMem(0x9542), 0x10);
        // CB 10 01BD
        gbc.setState(0xe044, 0x9c38, 0xe450, 0xfb2d, 0xe013, 0xd401, 0x0, 0x0);
        gbc.writeMem(0xe044, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9c38);
        EXPECT(gbc.pc(), 0xe046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe044), 0xcb);
        EXPECT(gbc.readMem(0xe045), 0x10);
        // CB 10 01BE
        gbc.setState(0x8f88, 0xe07, 0x3300, 0x9e02, 0xeb0f, 0x4b0e, 0x1, 0x0);
        gbc.writeMem(0x8f88, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe07);
        EXPECT(gbc.pc(), 0x8f8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f88), 0xcb);
        EXPECT(gbc.readMem(0x8f89), 0x10);
        // CB 10 01BF
        gbc.setState(0xe6e9, 0x47b0, 0xb870, 0x6291, 0xcab9, 0x68ac, 0x0, 0x1);
        gbc.writeMem(0xe6e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x47b0);
        EXPECT(gbc.pc(), 0xe6eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e9), 0xcb);
        EXPECT(gbc.readMem(0xe6ea), 0x10);
        // CB 10 01C0
        gbc.setState(0x62d8, 0x552c, 0x1fa0, 0xcf98, 0xa89e, 0x3954, 0x0, 0x0);
        gbc.writeMem(0x62d8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x552c);
        EXPECT(gbc.pc(), 0x62da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01C2
        gbc.setState(0x310f, 0xf4a6, 0x4520, 0x1364, 0x311a, 0x1f59, 0x0, 0x0);
        gbc.writeMem(0x310f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf4a6);
        EXPECT(gbc.pc(), 0x3111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01C3
        gbc.setState(0x5c9a, 0x8c4d, 0x1d00, 0xa0b8, 0xc5c2, 0x8dd4, 0x0, 0x1);
        gbc.writeMem(0x5c9a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8c4d);
        EXPECT(gbc.pc(), 0x5c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01C4
        gbc.setState(0x7625, 0x2a0b, 0xa370, 0xfbe8, 0x979d, 0xa75b, 0x0, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2a0b);
        EXPECT(gbc.pc(), 0x7627);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01C5
        gbc.setState(0x36a3, 0x9c9b, 0x9bf0, 0x2e41, 0x6545, 0x4033, 0x0, 0x1);
        gbc.writeMem(0x36a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9c9b);
        EXPECT(gbc.pc(), 0x36a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01C6
        gbc.setState(0x71d7, 0xbed2, 0xc530, 0x763a, 0x271b, 0xa3d9, 0x1, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbed2);
        EXPECT(gbc.pc(), 0x71d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01C7
        gbc.setState(0xe5dd, 0x8aa4, 0xfc80, 0xa278, 0x8f2f, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0xe5dd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8aa4);
        EXPECT(gbc.pc(), 0xe5df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5dd), 0xcb);
        EXPECT(gbc.readMem(0xe5de), 0x10);
        // CB 10 01C9
        gbc.setState(0x8eeb, 0xdd7e, 0x7250, 0x2b4d, 0xde2, 0x9b8, 0x0, 0x1);
        gbc.writeMem(0x8eeb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdd7e);
        EXPECT(gbc.pc(), 0x8eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eeb), 0xcb);
        EXPECT(gbc.readMem(0x8eec), 0x10);
        // CB 10 01CA
        gbc.setState(0xb6dc, 0xbba8, 0x4010, 0xaecb, 0x18da, 0xc2b4, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbba8);
        EXPECT(gbc.pc(), 0xb6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6dc), 0xcb);
        EXPECT(gbc.readMem(0xb6dd), 0x10);
        // CB 10 01CB
        gbc.setState(0xc1c3, 0x765d, 0x4de0, 0x2c76, 0xad2a, 0xa4f8, 0x0, 0x1);
        gbc.writeMem(0xc1c3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x765d);
        EXPECT(gbc.pc(), 0xc1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c3), 0xcb);
        EXPECT(gbc.readMem(0xc1c4), 0x10);
        // CB 10 01CC
        gbc.setState(0xcde2, 0x3499, 0x9780, 0xb7c2, 0x139c, 0xe0e7, 0x1, 0x1);
        gbc.writeMem(0xcde2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3499);
        EXPECT(gbc.pc(), 0xcde4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde2), 0xcb);
        EXPECT(gbc.readMem(0xcde3), 0x10);
        // CB 10 01CD
        gbc.setState(0xcd64, 0xb0de, 0x9a30, 0x36ea, 0xd94, 0x8922, 0x1, 0x0);
        gbc.writeMem(0xcd64, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb0de);
        EXPECT(gbc.pc(), 0xcd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd64), 0xcb);
        EXPECT(gbc.readMem(0xcd65), 0x10);
        // CB 10 01CE
        gbc.setState(0xec33, 0x6c89, 0xbf60, 0xbf6c, 0xd549, 0x74fd, 0x1, 0x0);
        gbc.writeMem(0xec33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x6c89);
        EXPECT(gbc.pc(), 0xec35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec33), 0xcb);
        EXPECT(gbc.readMem(0xec34), 0x10);
        // CB 10 01CF
        gbc.setState(0xef70, 0xc2ea, 0x8c0, 0x6e99, 0x540f, 0x46d, 0x0, 0x1);
        gbc.writeMem(0xef70, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc2ea);
        EXPECT(gbc.pc(), 0xef72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef70), 0xcb);
        EXPECT(gbc.readMem(0xef71), 0x10);
        // CB 10 01D1
        gbc.setState(0xb2b3, 0x4c7f, 0x39c0, 0x7d88, 0xccfb, 0x3b90, 0x0, 0x1);
        gbc.writeMem(0xb2b3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4c7f);
        EXPECT(gbc.pc(), 0xb2b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b3), 0xcb);
        EXPECT(gbc.readMem(0xb2b4), 0x10);
        // CB 10 01D3
        gbc.setState(0x3996, 0xcf8e, 0x59d0, 0x67a2, 0xf61b, 0xa8e7, 0x1, 0x1);
        gbc.writeMem(0x3996, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcf8e);
        EXPECT(gbc.pc(), 0x3998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01D5
        gbc.setState(0xa53c, 0x8976, 0x4f70, 0x45a0, 0x1c17, 0x7169, 0x1, 0x0);
        gbc.writeMem(0xa53c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8976);
        EXPECT(gbc.pc(), 0xa53e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa53c), 0xcb);
        EXPECT(gbc.readMem(0xa53d), 0x10);
        // CB 10 01D6
        gbc.setState(0x1e4c, 0x5003, 0x2310, 0x445f, 0xa84e, 0xeb97, 0x0, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5003);
        EXPECT(gbc.pc(), 0x1e4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01D7
        gbc.setState(0xb39e, 0x2040, 0xe760, 0x9175, 0x966b, 0x4daa, 0x1, 0x0);
        gbc.writeMem(0xb39e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2040);
        EXPECT(gbc.pc(), 0xb3a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb39e), 0xcb);
        EXPECT(gbc.readMem(0xb39f), 0x10);
        // CB 10 01D8
        gbc.setState(0x47fb, 0x760, 0xe2f0, 0xad3d, 0xb34, 0xcc67, 0x0, 0x0);
        gbc.writeMem(0x47fb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0x47fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01D9
        gbc.setState(0x7b6e, 0x86c1, 0xfcf0, 0x4718, 0xf8a9, 0x2089, 0x1, 0x0);
        gbc.writeMem(0x7b6e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x86c1);
        EXPECT(gbc.pc(), 0x7b70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01DA
        gbc.setState(0xeb10, 0x866b, 0x8a90, 0x859a, 0x29ce, 0x3375, 0x1, 0x1);
        gbc.writeMem(0xeb10, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x866b);
        EXPECT(gbc.pc(), 0xeb12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb10), 0xcb);
        EXPECT(gbc.readMem(0xeb11), 0x10);
        // CB 10 01DB
        gbc.setState(0xe224, 0x6f93, 0x3830, 0x5261, 0xe702, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0xe224, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6f93);
        EXPECT(gbc.pc(), 0xe226);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe224), 0xcb);
        EXPECT(gbc.readMem(0xe225), 0x10);
        // CB 10 01DC
        gbc.setState(0x3035, 0x227c, 0x4730, 0xb3a7, 0xdf0d, 0xa7b7, 0x1, 0x1);
        gbc.writeMem(0x3035, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x227c);
        EXPECT(gbc.pc(), 0x3037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01DD
        gbc.setState(0xd41d, 0xe9a6, 0xf480, 0xa95c, 0x19f, 0xcdf0, 0x0, 0x1);
        gbc.writeMem(0xd41d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe9a6);
        EXPECT(gbc.pc(), 0xd41f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd41d), 0xcb);
        EXPECT(gbc.readMem(0xd41e), 0x10);
        // CB 10 01DE
        gbc.setState(0x99a5, 0x5f88, 0x7090, 0xefac, 0x1b15, 0xde98, 0x1, 0x1);
        gbc.writeMem(0x99a5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5f88);
        EXPECT(gbc.pc(), 0x99a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a5), 0xcb);
        EXPECT(gbc.readMem(0x99a6), 0x10);
        // CB 10 01DF
        gbc.setState(0x34cf, 0x5153, 0x3060, 0x3db3, 0x41c1, 0xf45d, 0x0, 0x0);
        gbc.writeMem(0x34cf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5153);
        EXPECT(gbc.pc(), 0x34d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01E0
        gbc.setState(0xe2ca, 0x9cd0, 0x270, 0x75d4, 0xf241, 0xe2b2, 0x1, 0x1);
        gbc.writeMem(0xe2ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9cd0);
        EXPECT(gbc.pc(), 0xe2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ca), 0xcb);
        EXPECT(gbc.readMem(0xe2cb), 0x10);
        // CB 10 01E1
        gbc.setState(0xe75a, 0xca03, 0x20f0, 0x509b, 0x6e34, 0x6f30, 0x1, 0x1);
        gbc.writeMem(0xe75a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xca03);
        EXPECT(gbc.pc(), 0xe75c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75a), 0xcb);
        EXPECT(gbc.readMem(0xe75b), 0x10);
        // CB 10 01E2
        gbc.setState(0x8af8, 0xec35, 0xb7b0, 0x5c83, 0x30cb, 0x2e0c, 0x1, 0x0);
        gbc.writeMem(0x8af8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xec35);
        EXPECT(gbc.pc(), 0x8afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af8), 0xcb);
        EXPECT(gbc.readMem(0x8af9), 0x10);
        // CB 10 01E3
        gbc.setState(0xb17c, 0x86e6, 0xf310, 0x318f, 0x3439, 0x145b, 0x1, 0x0);
        gbc.writeMem(0xb17c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x86e6);
        EXPECT(gbc.pc(), 0xb17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb17c), 0xcb);
        EXPECT(gbc.readMem(0xb17d), 0x10);
        // CB 10 01E4
        gbc.setState(0x5e87, 0x2f70, 0x5e20, 0x8a46, 0x691c, 0x1c87, 0x0, 0x0);
        gbc.writeMem(0x5e87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2f70);
        EXPECT(gbc.pc(), 0x5e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01E5
        gbc.setState(0xc3b9, 0x8812, 0xd3a0, 0xaecd, 0xc3a3, 0xb156, 0x0, 0x0);
        gbc.writeMem(0xc3b9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8812);
        EXPECT(gbc.pc(), 0xc3bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3b9), 0xcb);
        EXPECT(gbc.readMem(0xc3ba), 0x10);
        // CB 10 01E6
        gbc.setState(0x9cfc, 0xa0e8, 0xeff0, 0x9b41, 0x3a42, 0x20fb, 0x1, 0x0);
        gbc.writeMem(0x9cfc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa0e8);
        EXPECT(gbc.pc(), 0x9cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cfc), 0xcb);
        EXPECT(gbc.readMem(0x9cfd), 0x10);
        // CB 10 01E7
        gbc.setState(0xc8ed, 0xd8ca, 0x45e0, 0x39d6, 0xb007, 0x8ff, 0x1, 0x0);
        gbc.writeMem(0xc8ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd8ca);
        EXPECT(gbc.pc(), 0xc8ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ed), 0xcb);
        EXPECT(gbc.readMem(0xc8ee), 0x10);
        // CB 10 01E8
        gbc.setState(0x31ae, 0xc519, 0xed80, 0x30b6, 0x9337, 0x5dd6, 0x0, 0x1);
        gbc.writeMem(0x31ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc519);
        EXPECT(gbc.pc(), 0x31b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01E9
        gbc.setState(0x31ca, 0xf09c, 0x8450, 0x2ac, 0x6b94, 0x1592, 0x0, 0x1);
        gbc.writeMem(0x31ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf09c);
        EXPECT(gbc.pc(), 0x31cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01EA
        gbc.setState(0x4e95, 0x672c, 0x3f70, 0x756f, 0xda51, 0x88ff, 0x1, 0x0);
        gbc.writeMem(0x4e95, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x672c);
        EXPECT(gbc.pc(), 0x4e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01EB
        gbc.setState(0xccf7, 0xc32c, 0xeb00, 0x2387, 0x2381, 0x75f3, 0x0, 0x0);
        gbc.writeMem(0xccf7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc32c);
        EXPECT(gbc.pc(), 0xccf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccf7), 0xcb);
        EXPECT(gbc.readMem(0xccf8), 0x10);
        // CB 10 01EC
        gbc.setState(0xdc18, 0x82f0, 0x1350, 0xf5f3, 0x7f7d, 0x1c72, 0x1, 0x0);
        gbc.writeMem(0xdc18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x82f0);
        EXPECT(gbc.pc(), 0xdc1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc18), 0xcb);
        EXPECT(gbc.readMem(0xdc19), 0x10);
        // CB 10 01ED
        gbc.setState(0x65a4, 0x4094, 0x8a70, 0xdc53, 0x2490, 0xb10, 0x1, 0x0);
        gbc.writeMem(0x65a4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4094);
        EXPECT(gbc.pc(), 0x65a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01EE
        gbc.setState(0x57a7, 0x592, 0x6090, 0x20ee, 0x7890, 0x31c6, 0x1, 0x1);
        gbc.writeMem(0x57a7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x592);
        EXPECT(gbc.pc(), 0x57a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01EF
        gbc.setState(0x1404, 0xbc3d, 0xc250, 0x5145, 0x44f9, 0xd061, 0x0, 0x0);
        gbc.writeMem(0x1404, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbc3d);
        EXPECT(gbc.pc(), 0x1406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01F0
        gbc.setState(0xb43f, 0x6ddd, 0x1b40, 0x462b, 0x326e, 0x92a8, 0x0, 0x0);
        gbc.writeMem(0xb43f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6ddd);
        EXPECT(gbc.pc(), 0xb441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43f), 0xcb);
        EXPECT(gbc.readMem(0xb440), 0x10);
        // CB 10 01F1
        gbc.setState(0x6ef7, 0xb2f9, 0x6160, 0x9f04, 0xfa29, 0x785c, 0x0, 0x1);
        gbc.writeMem(0x6ef7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb2f9);
        EXPECT(gbc.pc(), 0x6ef9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01F2
        gbc.setState(0x1bf, 0x5fc8, 0x7350, 0xb45, 0x30ad, 0x5b05, 0x1, 0x0);
        gbc.writeMem(0x1bf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5fc8);
        EXPECT(gbc.pc(), 0x1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01F3
        gbc.setState(0x363a, 0x5ef0, 0xef40, 0x2cd1, 0xb231, 0xeb0b, 0x1, 0x1);
        gbc.writeMem(0x363a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5ef0);
        EXPECT(gbc.pc(), 0x363c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01F4
        gbc.setState(0x8513, 0x5305, 0x9ff0, 0x9e61, 0xc283, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0x8513, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5305);
        EXPECT(gbc.pc(), 0x8515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8513), 0xcb);
        EXPECT(gbc.readMem(0x8514), 0x10);
        // CB 10 01F5
        gbc.setState(0x6ccb, 0x530c, 0xc650, 0x5611, 0xa7e1, 0xb822, 0x1, 0x0);
        gbc.writeMem(0x6ccb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x530c);
        EXPECT(gbc.pc(), 0x6ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01F6
        gbc.setState(0xe772, 0x2be9, 0x7f10, 0xdb93, 0x4e0a, 0x28a, 0x0, 0x0);
        gbc.writeMem(0xe772, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2be9);
        EXPECT(gbc.pc(), 0xe774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe772), 0xcb);
        EXPECT(gbc.readMem(0xe773), 0x10);
        // CB 10 01F7
        gbc.setState(0xce0b, 0xefd8, 0xad70, 0x96b1, 0x9791, 0xa560, 0x0, 0x0);
        gbc.writeMem(0xce0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xefd8);
        EXPECT(gbc.pc(), 0xce0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce0b), 0xcb);
        EXPECT(gbc.readMem(0xce0c), 0x10);
        // CB 10 01F8
        gbc.setState(0xca4f, 0xd4f2, 0xf0, 0xbf72, 0xa8e2, 0x2918, 0x1, 0x0);
        gbc.writeMem(0xca4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd4f2);
        EXPECT(gbc.pc(), 0xca51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca4f), 0xcb);
        EXPECT(gbc.readMem(0xca50), 0x10);
        // CB 10 01F9
        gbc.setState(0x6cc1, 0xc60c, 0x9a0, 0xa509, 0xe6e2, 0xc94c, 0x0, 0x0);
        gbc.writeMem(0x6cc1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc60c);
        EXPECT(gbc.pc(), 0x6cc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01FA
        gbc.setState(0x4a7a, 0x37da, 0xd2c0, 0x5f41, 0x2e3d, 0x358b, 0x1, 0x1);
        gbc.writeMem(0x4a7a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x37da);
        EXPECT(gbc.pc(), 0x4a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01FB
        gbc.setState(0xa74, 0x164a, 0x7170, 0x4c2b, 0x2874, 0x5d9f, 0x1, 0x0);
        gbc.writeMem(0xa74, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x164a);
        EXPECT(gbc.pc(), 0xa76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 01FC
        gbc.setState(0xa7cc, 0x36dc, 0xfaa0, 0xab1b, 0x839c, 0xd1, 0x1, 0x0);
        gbc.writeMem(0xa7cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x36dc);
        EXPECT(gbc.pc(), 0xa7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7cc), 0xcb);
        EXPECT(gbc.readMem(0xa7cd), 0x10);
        // CB 10 01FD
        gbc.setState(0x8e9c, 0xc969, 0x3d90, 0x8bb8, 0x377b, 0xe3dd, 0x0, 0x1);
        gbc.writeMem(0x8e9c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc969);
        EXPECT(gbc.pc(), 0x8e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e9c), 0xcb);
        EXPECT(gbc.readMem(0x8e9d), 0x10);
        // CB 10 01FE
        gbc.setState(0x1aaf, 0x49ed, 0x2420, 0x9594, 0x7465, 0xbe90, 0x0, 0x0);
        gbc.writeMem(0x1aaf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x49ed);
        EXPECT(gbc.pc(), 0x1ab1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 01FF
        gbc.setState(0x2d3f, 0xa697, 0x99e0, 0x7a8, 0x9758, 0x4116, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa697);
        EXPECT(gbc.pc(), 0x2d41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0200
        gbc.setState(0xa69f, 0xafe8, 0xee30, 0x27f9, 0xfadd, 0x1ce8, 0x0, 0x0);
        gbc.writeMem(0xa69f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xafe8);
        EXPECT(gbc.pc(), 0xa6a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa69f), 0xcb);
        EXPECT(gbc.readMem(0xa6a0), 0x10);
        // CB 10 0201
        gbc.setState(0x8c43, 0xc253, 0x1870, 0x7b95, 0x45d9, 0xa8, 0x0, 0x0);
        gbc.writeMem(0x8c43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc253);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c43), 0xcb);
        EXPECT(gbc.readMem(0x8c44), 0x10);
        // CB 10 0202
        gbc.setState(0x3c97, 0x4c17, 0x11a0, 0x66c7, 0x6265, 0x5901, 0x1, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4c17);
        EXPECT(gbc.pc(), 0x3c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0203
        gbc.setState(0x69c5, 0x803b, 0x3560, 0x28ad, 0xc8b9, 0xd3c, 0x1, 0x0);
        gbc.writeMem(0x69c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x803b);
        EXPECT(gbc.pc(), 0x69c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0204
        gbc.setState(0x37f1, 0xe115, 0xfa00, 0xa00e, 0x857b, 0x1d26, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe115);
        EXPECT(gbc.pc(), 0x37f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0205
        gbc.setState(0xb03a, 0xde7, 0x6640, 0x8f57, 0xcca8, 0x6b00, 0x0, 0x1);
        gbc.writeMem(0xb03a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xde7);
        EXPECT(gbc.pc(), 0xb03c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb03a), 0xcb);
        EXPECT(gbc.readMem(0xb03b), 0x10);
        // CB 10 0206
        gbc.setState(0x421f, 0x6957, 0xcad0, 0x7f4e, 0x7c86, 0xfc12, 0x0, 0x1);
        gbc.writeMem(0x421f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6957);
        EXPECT(gbc.pc(), 0x4221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0207
        gbc.setState(0x8a64, 0xf0f3, 0x4870, 0xb424, 0x2937, 0xeeb8, 0x1, 0x0);
        gbc.writeMem(0x8a64, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf0f3);
        EXPECT(gbc.pc(), 0x8a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a64), 0xcb);
        EXPECT(gbc.readMem(0x8a65), 0x10);
        // CB 10 0208
        gbc.setState(0x6b40, 0x5f5b, 0x5c0, 0x46d2, 0xfe5c, 0xa61d, 0x1, 0x0);
        gbc.writeMem(0x6b40, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5f5b);
        EXPECT(gbc.pc(), 0x6b42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0209
        gbc.setState(0x73ae, 0x534d, 0x2f90, 0xf6d4, 0xbfa3, 0x60a5, 0x1, 0x0);
        gbc.writeMem(0x73ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x534d);
        EXPECT(gbc.pc(), 0x73b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 020A
        gbc.setState(0xe5b2, 0x73f7, 0xb930, 0x5579, 0xa022, 0x5ad4, 0x0, 0x1);
        gbc.writeMem(0xe5b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x73f7);
        EXPECT(gbc.pc(), 0xe5b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5b2), 0xcb);
        EXPECT(gbc.readMem(0xe5b3), 0x10);
        // CB 10 020B
        gbc.setState(0xf8a, 0x292b, 0x94b0, 0xd5e2, 0xc0b1, 0xfdc9, 0x0, 0x0);
        gbc.writeMem(0xf8a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x292b);
        EXPECT(gbc.pc(), 0xf8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 020C
        gbc.setState(0xa946, 0xf494, 0x1750, 0x5a8d, 0xbec, 0x2d26, 0x0, 0x0);
        gbc.writeMem(0xa946, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf494);
        EXPECT(gbc.pc(), 0xa948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa946), 0xcb);
        EXPECT(gbc.readMem(0xa947), 0x10);
        // CB 10 020D
        gbc.setState(0xdce8, 0x2046, 0xe420, 0x1019, 0x5604, 0xdd34, 0x1, 0x1);
        gbc.writeMem(0xdce8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2046);
        EXPECT(gbc.pc(), 0xdcea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdce8), 0xcb);
        EXPECT(gbc.readMem(0xdce9), 0x10);
        // CB 10 020F
        gbc.setState(0x4e98, 0xdd81, 0xa910, 0x63bb, 0x835a, 0x936e, 0x0, 0x0);
        gbc.writeMem(0x4e98, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdd81);
        EXPECT(gbc.pc(), 0x4e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0210
        gbc.setState(0x754f, 0xf1f1, 0xb2b0, 0x7327, 0x7fb2, 0xa364, 0x0, 0x1);
        gbc.writeMem(0x754f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf1f1);
        EXPECT(gbc.pc(), 0x7551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0211
        gbc.setState(0x8392, 0x1c55, 0xa100, 0xe6ff, 0x151d, 0xde6d, 0x0, 0x0);
        gbc.writeMem(0x8392, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0x8394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8392), 0xcb);
        EXPECT(gbc.readMem(0x8393), 0x10);
        // CB 10 0212
        gbc.setState(0x9ad5, 0x1268, 0x78b0, 0x4b7f, 0x2c04, 0xa078, 0x1, 0x0);
        gbc.writeMem(0x9ad5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1268);
        EXPECT(gbc.pc(), 0x9ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad5), 0xcb);
        EXPECT(gbc.readMem(0x9ad6), 0x10);
        // CB 10 0213
        gbc.setState(0x37d7, 0x8929, 0xb220, 0xe8bf, 0xb663, 0x92c4, 0x1, 0x0);
        gbc.writeMem(0x37d7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8929);
        EXPECT(gbc.pc(), 0x37d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0214
        gbc.setState(0xa49c, 0x1d43, 0xd6e0, 0xf5a4, 0x7442, 0x9826, 0x1, 0x0);
        gbc.writeMem(0xa49c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1d43);
        EXPECT(gbc.pc(), 0xa49e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49c), 0xcb);
        EXPECT(gbc.readMem(0xa49d), 0x10);
        // CB 10 0215
        gbc.setState(0x2b4b, 0xd730, 0x31c0, 0x8aa3, 0x193f, 0x2f3f, 0x0, 0x0);
        gbc.writeMem(0x2b4b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd730);
        EXPECT(gbc.pc(), 0x2b4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0216
        gbc.setState(0x3248, 0x6d94, 0x7820, 0x73fe, 0xf10e, 0x992, 0x1, 0x1);
        gbc.writeMem(0x3248, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6d94);
        EXPECT(gbc.pc(), 0x324a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0217
        gbc.setState(0x9741, 0x8f7a, 0x5f30, 0x4466, 0x77ab, 0xbbd, 0x1, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8f7a);
        EXPECT(gbc.pc(), 0x9743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9741), 0xcb);
        EXPECT(gbc.readMem(0x9742), 0x10);
        // CB 10 0218
        gbc.setState(0x5d43, 0x9931, 0x2750, 0x22db, 0x922f, 0xfda5, 0x0, 0x0);
        gbc.writeMem(0x5d43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9931);
        EXPECT(gbc.pc(), 0x5d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0219
        gbc.setState(0x51fc, 0x6a88, 0xf540, 0x2db2, 0xf5fb, 0x42b3, 0x1, 0x0);
        gbc.writeMem(0x51fc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0x51fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 021A
        gbc.setState(0x9bdd, 0x6a86, 0x6910, 0x91ad, 0xae28, 0xe019, 0x0, 0x0);
        gbc.writeMem(0x9bdd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6a86);
        EXPECT(gbc.pc(), 0x9bdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bdd), 0xcb);
        EXPECT(gbc.readMem(0x9bde), 0x10);
        // CB 10 021B
        gbc.setState(0x5d1a, 0x7dfe, 0xf010, 0x88ef, 0xcee7, 0xbded, 0x0, 0x1);
        gbc.writeMem(0x5d1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7dfe);
        EXPECT(gbc.pc(), 0x5d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 021C
        gbc.setState(0x1629, 0x5e7e, 0xbe00, 0xadda, 0x3880, 0x30de, 0x0, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5e7e);
        EXPECT(gbc.pc(), 0x162b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 021D
        gbc.setState(0xc046, 0x72d, 0x8b90, 0x52f2, 0x8c82, 0x464b, 0x0, 0x1);
        gbc.writeMem(0xc046, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x72d);
        EXPECT(gbc.pc(), 0xc048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc046), 0xcb);
        EXPECT(gbc.readMem(0xc047), 0x10);
        // CB 10 021E
        gbc.setState(0x7554, 0x2d7b, 0xa330, 0x246a, 0xb70, 0xb467, 0x0, 0x0);
        gbc.writeMem(0x7554, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2d7b);
        EXPECT(gbc.pc(), 0x7556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 021F
        gbc.setState(0x4c4c, 0x1194, 0x5af0, 0xcf1b, 0x5133, 0x6157, 0x0, 0x1);
        gbc.writeMem(0x4c4c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1194);
        EXPECT(gbc.pc(), 0x4c4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0220
        gbc.setState(0xa1e6, 0x390c, 0x25c0, 0x3074, 0x718c, 0x75c1, 0x1, 0x0);
        gbc.writeMem(0xa1e6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x390c);
        EXPECT(gbc.pc(), 0xa1e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1e6), 0xcb);
        EXPECT(gbc.readMem(0xa1e7), 0x10);
        // CB 10 0221
        gbc.setState(0x53f1, 0x3936, 0x4b30, 0x4b5f, 0x3466, 0xb04a, 0x1, 0x0);
        gbc.writeMem(0x53f1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3936);
        EXPECT(gbc.pc(), 0x53f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0222
        gbc.setState(0x25b3, 0x426, 0xd210, 0xea3f, 0xb49c, 0x6cc6, 0x0, 0x0);
        gbc.writeMem(0x25b3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x426);
        EXPECT(gbc.pc(), 0x25b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0223
        gbc.setState(0x666c, 0xfccf, 0x8d50, 0x62d3, 0x1270, 0x17eb, 0x0, 0x1);
        gbc.writeMem(0x666c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfccf);
        EXPECT(gbc.pc(), 0x666e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0224
        gbc.setState(0x69ed, 0xc611, 0x8ac0, 0x8541, 0x8eef, 0x1511, 0x1, 0x1);
        gbc.writeMem(0x69ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xc611);
        EXPECT(gbc.pc(), 0x69ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0225
        gbc.setState(0xef69, 0x8856, 0x95d0, 0xa414, 0x337a, 0xc96e, 0x1, 0x0);
        gbc.writeMem(0xef69, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8856);
        EXPECT(gbc.pc(), 0xef6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef69), 0xcb);
        EXPECT(gbc.readMem(0xef6a), 0x10);
        // CB 10 0226
        gbc.setState(0xc3e8, 0x6f4a, 0xf2d0, 0xee07, 0xcbb2, 0x7add, 0x0, 0x1);
        gbc.writeMem(0xc3e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6f4a);
        EXPECT(gbc.pc(), 0xc3ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3e8), 0xcb);
        EXPECT(gbc.readMem(0xc3e9), 0x10);
        // CB 10 0227
        gbc.setState(0xa1fc, 0x1631, 0xac80, 0x3e15, 0xdc12, 0x898e, 0x0, 0x0);
        gbc.writeMem(0xa1fc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1631);
        EXPECT(gbc.pc(), 0xa1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1fc), 0xcb);
        EXPECT(gbc.readMem(0xa1fd), 0x10);
        // CB 10 0228
        gbc.setState(0x2c5a, 0x68dd, 0xf700, 0x3eab, 0x397f, 0xa870, 0x0, 0x0);
        gbc.writeMem(0x2c5a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x68dd);
        EXPECT(gbc.pc(), 0x2c5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0229
        gbc.setState(0xb1bf, 0x25cb, 0xa2d0, 0x468e, 0x7e74, 0x3a98, 0x1, 0x1);
        gbc.writeMem(0xb1bf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x25cb);
        EXPECT(gbc.pc(), 0xb1c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1bf), 0xcb);
        EXPECT(gbc.readMem(0xb1c0), 0x10);
        // CB 10 022A
        gbc.setState(0xd88b, 0x26f, 0x5d00, 0xfb59, 0x1277, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0xd88b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x26f);
        EXPECT(gbc.pc(), 0xd88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88b), 0xcb);
        EXPECT(gbc.readMem(0xd88c), 0x10);
        // CB 10 022B
        gbc.setState(0x3217, 0x4b77, 0x3bf0, 0x9495, 0x6ef6, 0x93a6, 0x1, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4b77);
        EXPECT(gbc.pc(), 0x3219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 022C
        gbc.setState(0x1b7f, 0x93a5, 0x3050, 0x52f3, 0x29d3, 0x8348, 0x1, 0x1);
        gbc.writeMem(0x1b7f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x93a5);
        EXPECT(gbc.pc(), 0x1b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 022D
        gbc.setState(0xb7f3, 0x65f7, 0xfb40, 0xda72, 0x6a3f, 0xfc85, 0x1, 0x0);
        gbc.writeMem(0xb7f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x65f7);
        EXPECT(gbc.pc(), 0xb7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f3), 0xcb);
        EXPECT(gbc.readMem(0xb7f4), 0x10);
        // CB 10 022E
        gbc.setState(0x5ed6, 0x9b0a, 0xdc80, 0x228c, 0xe87b, 0xa4b9, 0x1, 0x1);
        gbc.writeMem(0x5ed6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9b0a);
        EXPECT(gbc.pc(), 0x5ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 022F
        gbc.setState(0x6d40, 0x28ef, 0x7700, 0x5e34, 0x4d59, 0x8ca8, 0x0, 0x0);
        gbc.writeMem(0x6d40, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x28ef);
        EXPECT(gbc.pc(), 0x6d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0230
        gbc.setState(0x4e62, 0x855a, 0xadb0, 0xeab1, 0x2b28, 0x9ef2, 0x0, 0x1);
        gbc.writeMem(0x4e62, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x855a);
        EXPECT(gbc.pc(), 0x4e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0231
        gbc.setState(0x2d99, 0xa9f, 0x5e60, 0xce56, 0x9a62, 0xa421, 0x1, 0x0);
        gbc.writeMem(0x2d99, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa9f);
        EXPECT(gbc.pc(), 0x2d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0232
        gbc.setState(0xbb92, 0xdf8a, 0xc40, 0xc289, 0xdc26, 0xbfb4, 0x0, 0x0);
        gbc.writeMem(0xbb92, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdf8a);
        EXPECT(gbc.pc(), 0xbb94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb92), 0xcb);
        EXPECT(gbc.readMem(0xbb93), 0x10);
        // CB 10 0233
        gbc.setState(0xc9c2, 0xe3ce, 0x7b20, 0xe612, 0xde51, 0xeb39, 0x0, 0x1);
        gbc.writeMem(0xc9c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe3ce);
        EXPECT(gbc.pc(), 0xc9c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c2), 0xcb);
        EXPECT(gbc.readMem(0xc9c3), 0x10);
        // CB 10 0234
        gbc.setState(0x22e4, 0x23ea, 0x3e20, 0x5d9e, 0x9aa0, 0x6ffc, 0x0, 0x0);
        gbc.writeMem(0x22e4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x23ea);
        EXPECT(gbc.pc(), 0x22e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0235
        gbc.setState(0x6f51, 0xff26, 0x2980, 0x54e2, 0x2667, 0x5c3, 0x1, 0x0);
        gbc.writeMem(0x6f51, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xff26);
        EXPECT(gbc.pc(), 0x6f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0236
        gbc.setState(0x6490, 0x16eb, 0x81d0, 0x1b92, 0x791a, 0x3f9b, 0x0, 0x1);
        gbc.writeMem(0x6490, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x16eb);
        EXPECT(gbc.pc(), 0x6492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0237
        gbc.setState(0xeae7, 0xe0c7, 0xab50, 0xee59, 0x8140, 0xa748, 0x1, 0x0);
        gbc.writeMem(0xeae7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe0c7);
        EXPECT(gbc.pc(), 0xeae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae7), 0xcb);
        EXPECT(gbc.readMem(0xeae8), 0x10);
        // CB 10 0238
        gbc.setState(0x3a0, 0x6f83, 0xc3d0, 0x2ece, 0x159c, 0xc2e2, 0x0, 0x1);
        gbc.writeMem(0x3a0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6f83);
        EXPECT(gbc.pc(), 0x3a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0239
        gbc.setState(0x1892, 0x5943, 0x4ea0, 0xa813, 0xcedd, 0x657f, 0x0, 0x1);
        gbc.writeMem(0x1892, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5943);
        EXPECT(gbc.pc(), 0x1894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 023A
        gbc.setState(0x537a, 0x29e1, 0x2f0, 0xe0eb, 0xcd1b, 0xa860, 0x1, 0x1);
        gbc.writeMem(0x537a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x29e1);
        EXPECT(gbc.pc(), 0x537c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 023B
        gbc.setState(0x1926, 0x9cf, 0x9a10, 0x8292, 0xae4f, 0x83e2, 0x1, 0x1);
        gbc.writeMem(0x1926, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9cf);
        EXPECT(gbc.pc(), 0x1928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 023C
        gbc.setState(0x37e4, 0xe481, 0x5200, 0x31ed, 0x9092, 0x8efd, 0x0, 0x1);
        gbc.writeMem(0x37e4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe481);
        EXPECT(gbc.pc(), 0x37e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 023D
        gbc.setState(0xfcd, 0xbc23, 0x9b70, 0xaf8c, 0x553c, 0x79d8, 0x1, 0x0);
        gbc.writeMem(0xfcd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbc23);
        EXPECT(gbc.pc(), 0xfcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 023E
        gbc.setState(0xa75f, 0xf72e, 0xdaf0, 0x6c16, 0x9fdb, 0x278e, 0x0, 0x0);
        gbc.writeMem(0xa75f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf72e);
        EXPECT(gbc.pc(), 0xa761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa75f), 0xcb);
        EXPECT(gbc.readMem(0xa760), 0x10);
        // CB 10 023F
        gbc.setState(0x79b7, 0xc78e, 0x1cc0, 0x21ac, 0x75be, 0x8f35, 0x1, 0x0);
        gbc.writeMem(0x79b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc78e);
        EXPECT(gbc.pc(), 0x79b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0240
        gbc.setState(0x18ac, 0x2969, 0x32a0, 0xbf39, 0xb5b1, 0x37b3, 0x0, 0x1);
        gbc.writeMem(0x18ac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2969);
        EXPECT(gbc.pc(), 0x18ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0241
        gbc.setState(0x5acc, 0x72fc, 0xcbc0, 0xbfc0, 0xca68, 0x3952, 0x0, 0x0);
        gbc.writeMem(0x5acc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x72fc);
        EXPECT(gbc.pc(), 0x5ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0242
        gbc.setState(0xa05, 0x649c, 0x46d0, 0xd2cd, 0xd270, 0x7ef2, 0x0, 0x0);
        gbc.writeMem(0xa05, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x649c);
        EXPECT(gbc.pc(), 0xa07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0243
        gbc.setState(0x1805, 0xb849, 0x7cb0, 0x8393, 0x7b29, 0x7de8, 0x1, 0x1);
        gbc.writeMem(0x1805, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb849);
        EXPECT(gbc.pc(), 0x1807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0244
        gbc.setState(0xd24f, 0x7981, 0x3980, 0x914c, 0x4a8d, 0x6c32, 0x0, 0x0);
        gbc.writeMem(0xd24f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7981);
        EXPECT(gbc.pc(), 0xd251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24f), 0xcb);
        EXPECT(gbc.readMem(0xd250), 0x10);
        // CB 10 0245
        gbc.setState(0xdc76, 0x146c, 0x4a0, 0xc2ae, 0x8ab9, 0x14f1, 0x1, 0x1);
        gbc.writeMem(0xdc76, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x146c);
        EXPECT(gbc.pc(), 0xdc78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc76), 0xcb);
        EXPECT(gbc.readMem(0xdc77), 0x10);
        // CB 10 0246
        gbc.setState(0xac8b, 0xa31c, 0x6590, 0xc66, 0xbe74, 0x9e5f, 0x0, 0x0);
        gbc.writeMem(0xac8b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa31c);
        EXPECT(gbc.pc(), 0xac8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac8b), 0xcb);
        EXPECT(gbc.readMem(0xac8c), 0x10);
        // CB 10 0247
        gbc.setState(0x540f, 0xcddf, 0x3b60, 0xb280, 0x2557, 0xe77c, 0x1, 0x1);
        gbc.writeMem(0x540f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xcddf);
        EXPECT(gbc.pc(), 0x5411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0248
        gbc.setState(0x76fe, 0x53fe, 0x34d0, 0x1950, 0x9234, 0xcab0, 0x0, 0x0);
        gbc.writeMem(0x76fe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x53fe);
        EXPECT(gbc.pc(), 0x7700);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0249
        gbc.setState(0x644f, 0x40c2, 0x9f50, 0xf79f, 0xcd0d, 0x1c85, 0x0, 0x1);
        gbc.writeMem(0x644f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x40c2);
        EXPECT(gbc.pc(), 0x6451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 024A
        gbc.setState(0x3006, 0xa1e5, 0xea70, 0x719f, 0xb7f5, 0x205c, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa1e5);
        EXPECT(gbc.pc(), 0x3008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 024B
        gbc.setState(0x10c2, 0xa30, 0x4990, 0x439a, 0x3cde, 0xbc6d, 0x1, 0x0);
        gbc.writeMem(0x10c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa30);
        EXPECT(gbc.pc(), 0x10c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 024C
        gbc.setState(0x6be2, 0x102a, 0x73f0, 0x4ef8, 0xeb12, 0xca24, 0x0, 0x1);
        gbc.writeMem(0x6be2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x102a);
        EXPECT(gbc.pc(), 0x6be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 024D
        gbc.setState(0x3b43, 0x4ec8, 0x16a0, 0x9b77, 0xc287, 0xa632, 0x1, 0x1);
        gbc.writeMem(0x3b43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4ec8);
        EXPECT(gbc.pc(), 0x3b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 024E
        gbc.setState(0x8d29, 0x1348, 0xc040, 0xf313, 0xa447, 0x1d5, 0x1, 0x1);
        gbc.writeMem(0x8d29, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1348);
        EXPECT(gbc.pc(), 0x8d2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d29), 0xcb);
        EXPECT(gbc.readMem(0x8d2a), 0x10);
        // CB 10 024F
        gbc.setState(0xadb9, 0xdcc8, 0x2c10, 0xc88b, 0xda9a, 0x18c1, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xdcc8);
        EXPECT(gbc.pc(), 0xadbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb9), 0xcb);
        EXPECT(gbc.readMem(0xadba), 0x10);
        // CB 10 0250
        gbc.setState(0x73ca, 0x8442, 0x43e0, 0x2683, 0xbd53, 0xce49, 0x0, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8442);
        EXPECT(gbc.pc(), 0x73cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0251
        gbc.setState(0xdbbd, 0x89bf, 0xd3d0, 0x1788, 0x240a, 0x9ca2, 0x1, 0x1);
        gbc.writeMem(0xdbbd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x89bf);
        EXPECT(gbc.pc(), 0xdbbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbbd), 0xcb);
        EXPECT(gbc.readMem(0xdbbe), 0x10);
        // CB 10 0252
        gbc.setState(0x9ab3, 0x763a, 0xb430, 0x69de, 0x9ee5, 0x4ed4, 0x0, 0x1);
        gbc.writeMem(0x9ab3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x763a);
        EXPECT(gbc.pc(), 0x9ab5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab3), 0xcb);
        EXPECT(gbc.readMem(0x9ab4), 0x10);
        // CB 10 0253
        gbc.setState(0x1170, 0x60a0, 0x8ff0, 0x563f, 0xe222, 0x5683, 0x1, 0x0);
        gbc.writeMem(0x1170, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x60a0);
        EXPECT(gbc.pc(), 0x1172);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0254
        gbc.setState(0x2d09, 0xee39, 0xe530, 0x1f3d, 0x49cc, 0xec17, 0x1, 0x1);
        gbc.writeMem(0x2d09, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xee39);
        EXPECT(gbc.pc(), 0x2d0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0256
        gbc.setState(0x6be8, 0x6cf1, 0xbe00, 0x4617, 0xfad7, 0x7cfc, 0x0, 0x1);
        gbc.writeMem(0x6be8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x6cf1);
        EXPECT(gbc.pc(), 0x6bea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0257
        gbc.setState(0xe206, 0xd81b, 0xb760, 0x9e50, 0x6cac, 0xc03f, 0x1, 0x0);
        gbc.writeMem(0xe206, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd81b);
        EXPECT(gbc.pc(), 0xe208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe206), 0xcb);
        EXPECT(gbc.readMem(0xe207), 0x10);
        // CB 10 0258
        gbc.setState(0xb799, 0x2998, 0x9f30, 0x3846, 0x22d0, 0x830d, 0x1, 0x0);
        gbc.writeMem(0xb799, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2998);
        EXPECT(gbc.pc(), 0xb79b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb799), 0xcb);
        EXPECT(gbc.readMem(0xb79a), 0x10);
        // CB 10 0259
        gbc.setState(0xd4b7, 0xa83d, 0x7b40, 0x490, 0x9593, 0xcf4c, 0x0, 0x0);
        gbc.writeMem(0xd4b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa83d);
        EXPECT(gbc.pc(), 0xd4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b7), 0xcb);
        EXPECT(gbc.readMem(0xd4b8), 0x10);
        // CB 10 025A
        gbc.setState(0x4971, 0x9a76, 0x280, 0x7dbe, 0x6081, 0xaf52, 0x0, 0x1);
        gbc.writeMem(0x4971, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9a76);
        EXPECT(gbc.pc(), 0x4973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 025B
        gbc.setState(0x7769, 0xf9e3, 0x10d0, 0x4442, 0xb3e, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0x7769, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf9e3);
        EXPECT(gbc.pc(), 0x776b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 025C
        gbc.setState(0xb8ac, 0x2e9d, 0x2490, 0x931e, 0x34d0, 0x8c55, 0x1, 0x0);
        gbc.writeMem(0xb8ac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2e9d);
        EXPECT(gbc.pc(), 0xb8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ac), 0xcb);
        EXPECT(gbc.readMem(0xb8ad), 0x10);
        // CB 10 025D
        gbc.setState(0x9898, 0x9b70, 0x1a0, 0x374b, 0x94ec, 0x151b, 0x1, 0x0);
        gbc.writeMem(0x9898, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9b70);
        EXPECT(gbc.pc(), 0x989a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9898), 0xcb);
        EXPECT(gbc.readMem(0x9899), 0x10);
        // CB 10 025E
        gbc.setState(0x2f43, 0x4b38, 0x7750, 0xfdc8, 0xf9c8, 0xb404, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4b38);
        EXPECT(gbc.pc(), 0x2f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 025F
        gbc.setState(0x9366, 0xdd9b, 0xdd40, 0x48fe, 0x1ea1, 0x12f6, 0x1, 0x1);
        gbc.writeMem(0x9366, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdd9b);
        EXPECT(gbc.pc(), 0x9368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9366), 0xcb);
        EXPECT(gbc.readMem(0x9367), 0x10);
        // CB 10 0260
        gbc.setState(0x5129, 0x3437, 0x7530, 0x1527, 0xe278, 0x1b24, 0x0, 0x0);
        gbc.writeMem(0x5129, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3437);
        EXPECT(gbc.pc(), 0x512b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0261
        gbc.setState(0xcac2, 0xe311, 0x94d0, 0x87fc, 0x2450, 0x11ef, 0x0, 0x0);
        gbc.writeMem(0xcac2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe311);
        EXPECT(gbc.pc(), 0xcac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcac2), 0xcb);
        EXPECT(gbc.readMem(0xcac3), 0x10);
        // CB 10 0262
        gbc.setState(0x4b71, 0x858, 0xb1f0, 0x1cd5, 0x2d91, 0x7588, 0x1, 0x0);
        gbc.writeMem(0x4b71, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x858);
        EXPECT(gbc.pc(), 0x4b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0263
        gbc.setState(0x3663, 0x52b3, 0xc0e0, 0x3320, 0xf520, 0x17b1, 0x0, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x52b3);
        EXPECT(gbc.pc(), 0x3665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0264
        gbc.setState(0x22d4, 0x2534, 0x9ff0, 0x691, 0xeff8, 0xbc17, 0x1, 0x0);
        gbc.writeMem(0x22d4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2534);
        EXPECT(gbc.pc(), 0x22d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0267
        gbc.setState(0x6e05, 0x34ec, 0x74a0, 0x6eee, 0xb091, 0xddde, 0x1, 0x1);
        gbc.writeMem(0x6e05, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x34ec);
        EXPECT(gbc.pc(), 0x6e07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0268
        gbc.setState(0xbebe, 0xb860, 0x2630, 0x81b7, 0x7f53, 0x273c, 0x1, 0x1);
        gbc.writeMem(0xbebe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xb860);
        EXPECT(gbc.pc(), 0xbec0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbebe), 0xcb);
        EXPECT(gbc.readMem(0xbebf), 0x10);
        // CB 10 0269
        gbc.setState(0xaa95, 0xaed6, 0x8a90, 0x3330, 0xfef3, 0xdfca, 0x1, 0x1);
        gbc.writeMem(0xaa95, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xaed6);
        EXPECT(gbc.pc(), 0xaa97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa95), 0xcb);
        EXPECT(gbc.readMem(0xaa96), 0x10);
        // CB 10 026A
        gbc.setState(0x4c5b, 0xab0b, 0xed80, 0xf59d, 0xa69b, 0xab89, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xab0b);
        EXPECT(gbc.pc(), 0x4c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 026B
        gbc.setState(0xeeda, 0xf904, 0x7830, 0x8af, 0xeaf0, 0xeda8, 0x0, 0x0);
        gbc.writeMem(0xeeda, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf904);
        EXPECT(gbc.pc(), 0xeedc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeda), 0xcb);
        EXPECT(gbc.readMem(0xeedb), 0x10);
        // CB 10 026C
        gbc.setState(0x5af8, 0xcabe, 0x4930, 0x9cca, 0xe3eb, 0xfeb9, 0x0, 0x1);
        gbc.writeMem(0x5af8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xcabe);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 026D
        gbc.setState(0x476b, 0x87fc, 0x4bd0, 0xb808, 0xfb7, 0xaf27, 0x1, 0x1);
        gbc.writeMem(0x476b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x87fc);
        EXPECT(gbc.pc(), 0x476d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 026F
        gbc.setState(0x5d89, 0x5527, 0x2ca0, 0xee06, 0x5265, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0x5d89, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x5527);
        EXPECT(gbc.pc(), 0x5d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0270
        gbc.setState(0x2136, 0x10fe, 0xa830, 0xf629, 0x188e, 0xfc5c, 0x1, 0x1);
        gbc.writeMem(0x2136, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x10fe);
        EXPECT(gbc.pc(), 0x2138);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0271
        gbc.setState(0xc449, 0xcdf5, 0x3c30, 0x7cd3, 0xdf52, 0xf8da, 0x0, 0x1);
        gbc.writeMem(0xc449, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcdf5);
        EXPECT(gbc.pc(), 0xc44b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc449), 0xcb);
        EXPECT(gbc.readMem(0xc44a), 0x10);
        // CB 10 0272
        gbc.setState(0xe84b, 0x549c, 0x9d50, 0x68b5, 0x181e, 0xf678, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x549c);
        EXPECT(gbc.pc(), 0xe84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe84b), 0xcb);
        EXPECT(gbc.readMem(0xe84c), 0x10);
        // CB 10 0273
        gbc.setState(0x541e, 0x429d, 0x4940, 0x83bb, 0x4cd2, 0xf778, 0x1, 0x0);
        gbc.writeMem(0x541e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x5420);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0274
        gbc.setState(0xdea0, 0x6fe9, 0x8df0, 0x167, 0xe0ce, 0x276d, 0x1, 0x1);
        gbc.writeMem(0xdea0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x6fe9);
        EXPECT(gbc.pc(), 0xdea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea0), 0xcb);
        EXPECT(gbc.readMem(0xdea1), 0x10);
        // CB 10 0275
        gbc.setState(0x1fae, 0x7b7, 0x8040, 0xaa63, 0x7f37, 0xccb0, 0x0, 0x1);
        gbc.writeMem(0x1fae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7b7);
        EXPECT(gbc.pc(), 0x1fb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0276
        gbc.setState(0x1843, 0x23b, 0xb160, 0x4add, 0xd67a, 0x65d, 0x1, 0x0);
        gbc.writeMem(0x1843, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x23b);
        EXPECT(gbc.pc(), 0x1845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0277
        gbc.setState(0xc0fd, 0x60b6, 0x16e0, 0xd27b, 0xac05, 0x6da5, 0x0, 0x0);
        gbc.writeMem(0xc0fd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x60b6);
        EXPECT(gbc.pc(), 0xc0ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0fd), 0xcb);
        EXPECT(gbc.readMem(0xc0fe), 0x10);
        // CB 10 0278
        gbc.setState(0x75b, 0x2448, 0x9db0, 0xcf2, 0x6c6a, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2448);
        EXPECT(gbc.pc(), 0x75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0279
        gbc.setState(0xe6b, 0x92ea, 0xec70, 0xf49b, 0x1e5f, 0xdc27, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x92ea);
        EXPECT(gbc.pc(), 0xe6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 027A
        gbc.setState(0x1496, 0xf7c5, 0xa0, 0x3b7d, 0xf26e, 0xa2a9, 0x1, 0x1);
        gbc.writeMem(0x1496, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf7c5);
        EXPECT(gbc.pc(), 0x1498);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 027B
        gbc.setState(0x532b, 0x9771, 0x9540, 0xa3b5, 0xebac, 0x5793, 0x0, 0x0);
        gbc.writeMem(0x532b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9771);
        EXPECT(gbc.pc(), 0x532d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 027C
        gbc.setState(0x494a, 0xda1, 0x3ff0, 0x24df, 0x361a, 0xde07, 0x1, 0x0);
        gbc.writeMem(0x494a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0x494c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 027D
        gbc.setState(0x867e, 0x5210, 0x6d30, 0x305a, 0x227c, 0x125c, 0x0, 0x0);
        gbc.writeMem(0x867e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5210);
        EXPECT(gbc.pc(), 0x8680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x867e), 0xcb);
        EXPECT(gbc.readMem(0x867f), 0x10);
        // CB 10 027E
        gbc.setState(0x9889, 0x7a6f, 0xeae0, 0xa691, 0x6d1e, 0x95e5, 0x1, 0x1);
        gbc.writeMem(0x9889, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7a6f);
        EXPECT(gbc.pc(), 0x988b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9889), 0xcb);
        EXPECT(gbc.readMem(0x988a), 0x10);
        // CB 10 027F
        gbc.setState(0x520, 0xdece, 0xec80, 0xb871, 0xeb1f, 0x7960, 0x1, 0x0);
        gbc.writeMem(0x520, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdece);
        EXPECT(gbc.pc(), 0x522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0280
        gbc.setState(0x299d, 0x87ae, 0xe2a0, 0x29b2, 0x5498, 0xf353, 0x0, 0x1);
        gbc.writeMem(0x299d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x87ae);
        EXPECT(gbc.pc(), 0x299f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0281
        gbc.setState(0x696c, 0xeef0, 0xf9c0, 0xbfbb, 0xe439, 0x2f20, 0x0, 0x0);
        gbc.writeMem(0x696c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xeef0);
        EXPECT(gbc.pc(), 0x696e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0282
        gbc.setState(0xc9ba, 0x7328, 0x61e0, 0x1137, 0xccbf, 0xefd8, 0x0, 0x0);
        gbc.writeMem(0xc9ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7328);
        EXPECT(gbc.pc(), 0xc9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9ba), 0xcb);
        EXPECT(gbc.readMem(0xc9bb), 0x10);
        // CB 10 0283
        gbc.setState(0x5ca3, 0x13f2, 0xd440, 0xae25, 0x506a, 0xde8e, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x13f2);
        EXPECT(gbc.pc(), 0x5ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0284
        gbc.setState(0x746b, 0xd581, 0x1b90, 0xdd00, 0x1185, 0x5c33, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd581);
        EXPECT(gbc.pc(), 0x746d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0285
        gbc.setState(0xc718, 0x6cb9, 0x4cc0, 0xabaf, 0x64ea, 0xf763, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6cb9);
        EXPECT(gbc.pc(), 0xc71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc718), 0xcb);
        EXPECT(gbc.readMem(0xc719), 0x10);
        // CB 10 0286
        gbc.setState(0x9854, 0x9fa9, 0x4400, 0x32b0, 0x6cbc, 0x42ca, 0x0, 0x1);
        gbc.writeMem(0x9854, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9fa9);
        EXPECT(gbc.pc(), 0x9856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9854), 0xcb);
        EXPECT(gbc.readMem(0x9855), 0x10);
        // CB 10 0287
        gbc.setState(0x4162, 0x7d9d, 0xbc10, 0xe622, 0x45b7, 0x534b, 0x1, 0x1);
        gbc.writeMem(0x4162, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7d9d);
        EXPECT(gbc.pc(), 0x4164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0288
        gbc.setState(0x5a0f, 0xea2a, 0xafa0, 0x4219, 0x9833, 0xe0ac, 0x0, 0x0);
        gbc.writeMem(0x5a0f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xea2a);
        EXPECT(gbc.pc(), 0x5a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0289
        gbc.setState(0xd764, 0xe43b, 0xd130, 0x809d, 0xaed8, 0x22e1, 0x1, 0x1);
        gbc.writeMem(0xd764, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe43b);
        EXPECT(gbc.pc(), 0xd766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd764), 0xcb);
        EXPECT(gbc.readMem(0xd765), 0x10);
        // CB 10 028B
        gbc.setState(0xdc4e, 0x4df4, 0xed60, 0x4b9b, 0xaa73, 0x1dc4, 0x1, 0x1);
        gbc.writeMem(0xdc4e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4df4);
        EXPECT(gbc.pc(), 0xdc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4e), 0xcb);
        EXPECT(gbc.readMem(0xdc4f), 0x10);
        // CB 10 028C
        gbc.setState(0x9727, 0x44ce, 0x2c0, 0xec75, 0xc5c2, 0x1431, 0x1, 0x1);
        gbc.writeMem(0x9727, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x44ce);
        EXPECT(gbc.pc(), 0x9729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9727), 0xcb);
        EXPECT(gbc.readMem(0x9728), 0x10);
        // CB 10 028D
        gbc.setState(0x66, 0x48fd, 0xee80, 0xdcd2, 0x8fc8, 0xdf49, 0x1, 0x1);
        gbc.writeMem(0x66, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x48fd);
        EXPECT(gbc.pc(), 0x68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 028E
        gbc.setState(0x3e47, 0x5c0a, 0xfa80, 0x87ea, 0x3e99, 0xcf0b, 0x0, 0x1);
        gbc.writeMem(0x3e47, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5c0a);
        EXPECT(gbc.pc(), 0x3e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 028F
        gbc.setState(0x12c8, 0x9792, 0xac0, 0x9ef1, 0xe14, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x12c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9792);
        EXPECT(gbc.pc(), 0x12ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0290
        gbc.setState(0x4817, 0xdeef, 0xbb40, 0x3d3, 0x2b84, 0x1d29, 0x1, 0x1);
        gbc.writeMem(0x4817, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdeef);
        EXPECT(gbc.pc(), 0x4819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0291
        gbc.setState(0x1a4f, 0xae9, 0xe730, 0x1a4e, 0xf430, 0x6065, 0x0, 0x0);
        gbc.writeMem(0x1a4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xae9);
        EXPECT(gbc.pc(), 0x1a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0292
        gbc.setState(0x2708, 0xc45b, 0xa960, 0xf82f, 0xe3c1, 0xbefb, 0x1, 0x1);
        gbc.writeMem(0x2708, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc45b);
        EXPECT(gbc.pc(), 0x270a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0293
        gbc.setState(0x1702, 0x44ff, 0x6070, 0x8cc4, 0xc34e, 0x537c, 0x0, 0x1);
        gbc.writeMem(0x1702, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x44ff);
        EXPECT(gbc.pc(), 0x1704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0294
        gbc.setState(0x3ba5, 0x9e3, 0x14e0, 0x36a8, 0x43f4, 0x1e18, 0x1, 0x0);
        gbc.writeMem(0x3ba5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9e3);
        EXPECT(gbc.pc(), 0x3ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0295
        gbc.setState(0xd995, 0x372f, 0x70, 0x34b8, 0xe354, 0x4f05, 0x1, 0x0);
        gbc.writeMem(0xd995, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x372f);
        EXPECT(gbc.pc(), 0xd997);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd995), 0xcb);
        EXPECT(gbc.readMem(0xd996), 0x10);
        // CB 10 0296
        gbc.setState(0x41d6, 0xb4b8, 0xea40, 0xffc2, 0x67f2, 0x4087, 0x0, 0x1);
        gbc.writeMem(0x41d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb4b8);
        EXPECT(gbc.pc(), 0x41d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0297
        gbc.setState(0x4dc3, 0xe3fc, 0x1750, 0x7be1, 0x98a, 0x7a02, 0x0, 0x1);
        gbc.writeMem(0x4dc3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe3fc);
        EXPECT(gbc.pc(), 0x4dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0298
        gbc.setState(0x611c, 0x7711, 0xdca0, 0xb643, 0x3366, 0xa67b, 0x1, 0x0);
        gbc.writeMem(0x611c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7711);
        EXPECT(gbc.pc(), 0x611e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0299
        gbc.setState(0x43dc, 0x78eb, 0x440, 0xc4, 0x496, 0xae28, 0x1, 0x0);
        gbc.writeMem(0x43dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x78eb);
        EXPECT(gbc.pc(), 0x43de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 029A
        gbc.setState(0xeba3, 0x6ed, 0xcc20, 0xd728, 0xe881, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0xeba3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6ed);
        EXPECT(gbc.pc(), 0xeba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba3), 0xcb);
        EXPECT(gbc.readMem(0xeba4), 0x10);
        // CB 10 029B
        gbc.setState(0xa67e, 0xf733, 0xd340, 0x9f7a, 0x87dc, 0x9bd, 0x1, 0x0);
        gbc.writeMem(0xa67e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf733);
        EXPECT(gbc.pc(), 0xa680);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67e), 0xcb);
        EXPECT(gbc.readMem(0xa67f), 0x10);
        // CB 10 029C
        gbc.setState(0x9d93, 0x784b, 0xc0f0, 0xf66c, 0x401d, 0x28fe, 0x0, 0x0);
        gbc.writeMem(0x9d93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x784b);
        EXPECT(gbc.pc(), 0x9d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d93), 0xcb);
        EXPECT(gbc.readMem(0x9d94), 0x10);
        // CB 10 029D
        gbc.setState(0xccc2, 0xe2b9, 0x3e80, 0x60b, 0x2c6f, 0x8f8e, 0x1, 0x0);
        gbc.writeMem(0xccc2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe2b9);
        EXPECT(gbc.pc(), 0xccc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccc2), 0xcb);
        EXPECT(gbc.readMem(0xccc3), 0x10);
        // CB 10 029E
        gbc.setState(0x95fc, 0x2285, 0x5580, 0xdc40, 0xb618, 0xff8c, 0x0, 0x0);
        gbc.writeMem(0x95fc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2285);
        EXPECT(gbc.pc(), 0x95fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fc), 0xcb);
        EXPECT(gbc.readMem(0x95fd), 0x10);
        // CB 10 029F
        gbc.setState(0xbd06, 0x579, 0xf390, 0x121c, 0x999d, 0x2e7c, 0x1, 0x0);
        gbc.writeMem(0xbd06, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x579);
        EXPECT(gbc.pc(), 0xbd08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd06), 0xcb);
        EXPECT(gbc.readMem(0xbd07), 0x10);
        // CB 10 02A0
        gbc.setState(0x800, 0xe5c, 0x16e0, 0x1234, 0x4061, 0xa97a, 0x1, 0x1);
        gbc.writeMem(0x800, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe5c);
        EXPECT(gbc.pc(), 0x802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02A1
        gbc.setState(0x4dcc, 0x7d1c, 0xed40, 0x1602, 0x7214, 0x6b71, 0x1, 0x0);
        gbc.writeMem(0x4dcc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7d1c);
        EXPECT(gbc.pc(), 0x4dce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02A2
        gbc.setState(0x1a24, 0xf8a5, 0xa1b0, 0x220a, 0x30ad, 0x92e2, 0x1, 0x0);
        gbc.writeMem(0x1a24, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf8a5);
        EXPECT(gbc.pc(), 0x1a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02A3
        gbc.setState(0x8807, 0x9274, 0x2460, 0x81dc, 0xf0a, 0x86c1, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9274);
        EXPECT(gbc.pc(), 0x8809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8807), 0xcb);
        EXPECT(gbc.readMem(0x8808), 0x10);
        // CB 10 02A4
        gbc.setState(0xcec5, 0x15fe, 0x7e0, 0xb1b0, 0x3875, 0x863c, 0x0, 0x0);
        gbc.writeMem(0xcec5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x15fe);
        EXPECT(gbc.pc(), 0xcec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcec5), 0xcb);
        EXPECT(gbc.readMem(0xcec6), 0x10);
        // CB 10 02A5
        gbc.setState(0xa6d6, 0xc191, 0x9200, 0xcd27, 0xa7aa, 0x48ee, 0x1, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc191);
        EXPECT(gbc.pc(), 0xa6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6d6), 0xcb);
        EXPECT(gbc.readMem(0xa6d7), 0x10);
        // CB 10 02A6
        gbc.setState(0x55f4, 0x9e8c, 0x10a0, 0x3fe2, 0x3fff, 0x62c3, 0x0, 0x0);
        gbc.writeMem(0x55f4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9e8c);
        EXPECT(gbc.pc(), 0x55f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02A7
        gbc.setState(0x2531, 0xf9ba, 0x47c0, 0x5b62, 0x87ab, 0x8738, 0x1, 0x0);
        gbc.writeMem(0x2531, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf9ba);
        EXPECT(gbc.pc(), 0x2533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02A8
        gbc.setState(0x27c5, 0x913c, 0x94e0, 0x84e, 0x63bf, 0xfad3, 0x0, 0x1);
        gbc.writeMem(0x27c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x913c);
        EXPECT(gbc.pc(), 0x27c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02AA
        gbc.setState(0x4fd9, 0x5a26, 0xc850, 0x5430, 0x82ce, 0xb304, 0x1, 0x1);
        gbc.writeMem(0x4fd9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5a26);
        EXPECT(gbc.pc(), 0x4fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02AB
        gbc.setState(0x3e7, 0x9b19, 0xa530, 0xa5, 0xf30e, 0x8a11, 0x1, 0x0);
        gbc.writeMem(0x3e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9b19);
        EXPECT(gbc.pc(), 0x3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02AC
        gbc.setState(0x9ac4, 0xa9d2, 0xa8b0, 0x37c8, 0x52a2, 0x35c8, 0x1, 0x1);
        gbc.writeMem(0x9ac4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa9d2);
        EXPECT(gbc.pc(), 0x9ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac4), 0xcb);
        EXPECT(gbc.readMem(0x9ac5), 0x10);
        // CB 10 02AD
        gbc.setState(0xbc18, 0xa012, 0x8480, 0xdd54, 0xc851, 0x8c80, 0x0, 0x0);
        gbc.writeMem(0xbc18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa012);
        EXPECT(gbc.pc(), 0xbc1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc18), 0xcb);
        EXPECT(gbc.readMem(0xbc19), 0x10);
        // CB 10 02AE
        gbc.setState(0xc3bd, 0x3e03, 0x9630, 0x42a3, 0xa915, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0xc3bd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3e03);
        EXPECT(gbc.pc(), 0xc3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3bd), 0xcb);
        EXPECT(gbc.readMem(0xc3be), 0x10);
        // CB 10 02AF
        gbc.setState(0x666, 0xe00, 0x81f0, 0xad73, 0x2f3c, 0x185b, 0x1, 0x1);
        gbc.writeMem(0x666, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0x668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02B0
        gbc.setState(0x19f3, 0xd132, 0x2dd0, 0xc476, 0xfda2, 0xc4a4, 0x1, 0x0);
        gbc.writeMem(0x19f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd132);
        EXPECT(gbc.pc(), 0x19f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02B2
        gbc.setState(0x48b, 0x411c, 0xe0a0, 0xba70, 0x12c6, 0xcc9c, 0x1, 0x1);
        gbc.writeMem(0x48b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x411c);
        EXPECT(gbc.pc(), 0x48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02B3
        gbc.setState(0xb9cb, 0xa670, 0x5aa0, 0xfb2a, 0x79e9, 0xad43, 0x0, 0x1);
        gbc.writeMem(0xb9cb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa670);
        EXPECT(gbc.pc(), 0xb9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9cb), 0xcb);
        EXPECT(gbc.readMem(0xb9cc), 0x10);
        // CB 10 02B4
        gbc.setState(0x2b9f, 0x463e, 0x3140, 0x57b9, 0xc79b, 0x5921, 0x1, 0x1);
        gbc.writeMem(0x2b9f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x463e);
        EXPECT(gbc.pc(), 0x2ba1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02B5
        gbc.setState(0x967a, 0x3f1e, 0x72c0, 0x25b8, 0x7628, 0x546e, 0x1, 0x0);
        gbc.writeMem(0x967a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3f1e);
        EXPECT(gbc.pc(), 0x967c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x967a), 0xcb);
        EXPECT(gbc.readMem(0x967b), 0x10);
        // CB 10 02B6
        gbc.setState(0x3a30, 0x9e37, 0x7a0, 0xa270, 0xe29, 0x1b66, 0x1, 0x1);
        gbc.writeMem(0x3a30, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9e37);
        EXPECT(gbc.pc(), 0x3a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02B7
        gbc.setState(0x95e9, 0xe8a7, 0x1e30, 0x4c9b, 0xb0b8, 0xf2c9, 0x1, 0x0);
        gbc.writeMem(0x95e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe8a7);
        EXPECT(gbc.pc(), 0x95eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e9), 0xcb);
        EXPECT(gbc.readMem(0x95ea), 0x10);
        // CB 10 02B8
        gbc.setState(0x15d5, 0xd9d7, 0x22e0, 0xd1e4, 0xec97, 0x4269, 0x1, 0x0);
        gbc.writeMem(0x15d5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd9d7);
        EXPECT(gbc.pc(), 0x15d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02B9
        gbc.setState(0xac33, 0xd012, 0x5010, 0xc027, 0x9bfb, 0x5a41, 0x1, 0x1);
        gbc.writeMem(0xac33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd012);
        EXPECT(gbc.pc(), 0xac35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac33), 0xcb);
        EXPECT(gbc.readMem(0xac34), 0x10);
        // CB 10 02BA
        gbc.setState(0xd327, 0xc9e7, 0x7940, 0xcd15, 0x93a7, 0x2d48, 0x1, 0x0);
        gbc.writeMem(0xd327, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc9e7);
        EXPECT(gbc.pc(), 0xd329);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd327), 0xcb);
        EXPECT(gbc.readMem(0xd328), 0x10);
        // CB 10 02BB
        gbc.setState(0x663, 0xa7cb, 0x56b0, 0x653e, 0xe2b3, 0xb6c2, 0x0, 0x0);
        gbc.writeMem(0x663, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa7cb);
        EXPECT(gbc.pc(), 0x665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02BC
        gbc.setState(0xa6d9, 0xe606, 0x78d0, 0x565c, 0x4378, 0x45f8, 0x1, 0x1);
        gbc.writeMem(0xa6d9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe606);
        EXPECT(gbc.pc(), 0xa6db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d9), 0xcb);
        EXPECT(gbc.readMem(0xa6da), 0x10);
        // CB 10 02BD
        gbc.setState(0x7e17, 0xa06, 0x3520, 0xc568, 0x8d0c, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0x7e17, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa06);
        EXPECT(gbc.pc(), 0x7e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02BE
        gbc.setState(0x30a3, 0x2c2, 0x7a30, 0xea46, 0xf157, 0x2036, 0x0, 0x0);
        gbc.writeMem(0x30a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2c2);
        EXPECT(gbc.pc(), 0x30a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02BF
        gbc.setState(0xdc8f, 0x3b46, 0x7ab0, 0x8b, 0xf0d5, 0x670e, 0x0, 0x0);
        gbc.writeMem(0xdc8f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3b46);
        EXPECT(gbc.pc(), 0xdc91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc8f), 0xcb);
        EXPECT(gbc.readMem(0xdc90), 0x10);
        // CB 10 02C0
        gbc.setState(0xaf0d, 0x9f91, 0x4740, 0x2f28, 0x76c, 0x5c07, 0x0, 0x0);
        gbc.writeMem(0xaf0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9f91);
        EXPECT(gbc.pc(), 0xaf0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0d), 0xcb);
        EXPECT(gbc.readMem(0xaf0e), 0x10);
        // CB 10 02C1
        gbc.setState(0xe47f, 0xc8e5, 0xf700, 0xff02, 0x9c98, 0x2d5b, 0x0, 0x1);
        gbc.writeMem(0xe47f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc8e5);
        EXPECT(gbc.pc(), 0xe481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe47f), 0xcb);
        EXPECT(gbc.readMem(0xe480), 0x10);
        // CB 10 02C2
        gbc.setState(0x4bb7, 0x42cc, 0xb530, 0xe4f3, 0x2d96, 0x3500, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x42cc);
        EXPECT(gbc.pc(), 0x4bb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02C3
        gbc.setState(0xb498, 0x5def, 0xf950, 0x60c6, 0x74b0, 0xc4b1, 0x1, 0x1);
        gbc.writeMem(0xb498, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5def);
        EXPECT(gbc.pc(), 0xb49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb498), 0xcb);
        EXPECT(gbc.readMem(0xb499), 0x10);
        // CB 10 02C4
        gbc.setState(0xe06b, 0x48e6, 0xf1a0, 0xd954, 0x81c1, 0x286f, 0x1, 0x1);
        gbc.writeMem(0xe06b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x48e6);
        EXPECT(gbc.pc(), 0xe06d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06b), 0xcb);
        EXPECT(gbc.readMem(0xe06c), 0x10);
        // CB 10 02C5
        gbc.setState(0x603d, 0x6245, 0x1fc0, 0xbfdf, 0xc6c8, 0x5841, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6245);
        EXPECT(gbc.pc(), 0x603f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02C6
        gbc.setState(0x94ab, 0x8523, 0x6fe0, 0x76d2, 0x6aa, 0xfc28, 0x1, 0x0);
        gbc.writeMem(0x94ab, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8523);
        EXPECT(gbc.pc(), 0x94ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ab), 0xcb);
        EXPECT(gbc.readMem(0x94ac), 0x10);
        // CB 10 02C7
        gbc.setState(0x18b2, 0x6d81, 0x54f0, 0x8093, 0x2030, 0x9c2c, 0x0, 0x1);
        gbc.writeMem(0x18b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x18b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02C8
        gbc.setState(0x495a, 0x6fd2, 0xc0c0, 0xe599, 0x4f0a, 0xde00, 0x0, 0x1);
        gbc.writeMem(0x495a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0x495c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02C9
        gbc.setState(0x2a1a, 0xdaa2, 0x40d0, 0xde6e, 0xb11, 0xea3f, 0x0, 0x0);
        gbc.writeMem(0x2a1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02CA
        gbc.setState(0x141b, 0xdecc, 0x4690, 0xb0d3, 0xa78c, 0xfeb7, 0x0, 0x1);
        gbc.writeMem(0x141b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdecc);
        EXPECT(gbc.pc(), 0x141d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02CB
        gbc.setState(0xa597, 0xe94e, 0xef90, 0x325b, 0xefd4, 0x3243, 0x1, 0x1);
        gbc.writeMem(0xa597, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe94e);
        EXPECT(gbc.pc(), 0xa599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa597), 0xcb);
        EXPECT(gbc.readMem(0xa598), 0x10);
        // CB 10 02CC
        gbc.setState(0x28c, 0x698c, 0xa1d0, 0x144e, 0xdec4, 0xd7b1, 0x1, 0x1);
        gbc.writeMem(0x28c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x698c);
        EXPECT(gbc.pc(), 0x28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02CD
        gbc.setState(0x9a57, 0x721, 0x98a0, 0x9e4a, 0xe9d5, 0x3afc, 0x0, 0x0);
        gbc.writeMem(0x9a57, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x721);
        EXPECT(gbc.pc(), 0x9a59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a57), 0xcb);
        EXPECT(gbc.readMem(0x9a58), 0x10);
        // CB 10 02CE
        gbc.setState(0x206, 0x30ac, 0x52e0, 0x4101, 0x7a8f, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x206, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x30ac);
        EXPECT(gbc.pc(), 0x208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02CF
        gbc.setState(0x6028, 0x282f, 0x9d80, 0x6b2c, 0x7ac4, 0xbf85, 0x0, 0x1);
        gbc.writeMem(0x6028, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x282f);
        EXPECT(gbc.pc(), 0x602a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02D0
        gbc.setState(0x4a1a, 0x3dd, 0xccb0, 0xc054, 0xeb0, 0xb749, 0x1, 0x1);
        gbc.writeMem(0x4a1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3dd);
        EXPECT(gbc.pc(), 0x4a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02D1
        gbc.setState(0x4505, 0x2f1d, 0x7740, 0x1849, 0xca0f, 0x79b4, 0x0, 0x1);
        gbc.writeMem(0x4505, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2f1d);
        EXPECT(gbc.pc(), 0x4507);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02D2
        gbc.setState(0x3fcd, 0xab8, 0x220, 0xa562, 0x5712, 0x68c0, 0x1, 0x0);
        gbc.writeMem(0x3fcd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xab8);
        EXPECT(gbc.pc(), 0x3fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02D3
        gbc.setState(0xea45, 0x2dfb, 0x2fa0, 0xdf89, 0x61fa, 0x56ac, 0x1, 0x1);
        gbc.writeMem(0xea45, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2dfb);
        EXPECT(gbc.pc(), 0xea47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea45), 0xcb);
        EXPECT(gbc.readMem(0xea46), 0x10);
        // CB 10 02D4
        gbc.setState(0x2ec5, 0xc760, 0xd780, 0x60a6, 0xd592, 0x8b17, 0x0, 0x0);
        gbc.writeMem(0x2ec5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc760);
        EXPECT(gbc.pc(), 0x2ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02D5
        gbc.setState(0x529a, 0xafbd, 0x8e80, 0xc199, 0x7949, 0x97ea, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xafbd);
        EXPECT(gbc.pc(), 0x529c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02D6
        gbc.setState(0x3cb7, 0x2aa8, 0xb210, 0xfbaf, 0x977e, 0x46a3, 0x0, 0x1);
        gbc.writeMem(0x3cb7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2aa8);
        EXPECT(gbc.pc(), 0x3cb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02D7
        gbc.setState(0x7a81, 0xca4a, 0x2cd0, 0xc66e, 0x5570, 0xfe47, 0x0, 0x1);
        gbc.writeMem(0x7a81, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xca4a);
        EXPECT(gbc.pc(), 0x7a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02D8
        gbc.setState(0x68a0, 0x1d35, 0x2710, 0x308c, 0xd8b3, 0x9d08, 0x1, 0x0);
        gbc.writeMem(0x68a0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1d35);
        EXPECT(gbc.pc(), 0x68a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02D9
        gbc.setState(0x1550, 0x17f7, 0xa100, 0x1795, 0x98db, 0x9c8f, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x17f7);
        EXPECT(gbc.pc(), 0x1552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02DA
        gbc.setState(0x6dab, 0x5d78, 0x1690, 0xdbcc, 0x3af2, 0x189d, 0x0, 0x1);
        gbc.writeMem(0x6dab, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5d78);
        EXPECT(gbc.pc(), 0x6dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02DB
        gbc.setState(0x39, 0xdab5, 0xb770, 0xd556, 0x4259, 0xca66, 0x1, 0x0);
        gbc.writeMem(0x39, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdab5);
        EXPECT(gbc.pc(), 0x3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02DC
        gbc.setState(0xbef, 0xae5e, 0xfad0, 0x1f53, 0xcf0d, 0xf932, 0x1, 0x1);
        gbc.writeMem(0xbef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xae5e);
        EXPECT(gbc.pc(), 0xbf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02DD
        gbc.setState(0xd7e9, 0x7e9d, 0xb0c0, 0x7f7e, 0x4415, 0xbef7, 0x0, 0x0);
        gbc.writeMem(0xd7e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7e9d);
        EXPECT(gbc.pc(), 0xd7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e9), 0xcb);
        EXPECT(gbc.readMem(0xd7ea), 0x10);
        // CB 10 02DE
        gbc.setState(0xaa77, 0x2958, 0xa040, 0x30b4, 0xf75d, 0x27b1, 0x0, 0x1);
        gbc.writeMem(0xaa77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2958);
        EXPECT(gbc.pc(), 0xaa79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa77), 0xcb);
        EXPECT(gbc.readMem(0xaa78), 0x10);
        // CB 10 02DF
        gbc.setState(0x8b3b, 0x8ed6, 0xed50, 0xf893, 0xc638, 0x6eda, 0x1, 0x1);
        gbc.writeMem(0x8b3b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8ed6);
        EXPECT(gbc.pc(), 0x8b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b3b), 0xcb);
        EXPECT(gbc.readMem(0x8b3c), 0x10);
        // CB 10 02E0
        gbc.setState(0xb1b5, 0x4a5c, 0xbf60, 0xaee7, 0x72a3, 0x58cb, 0x0, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4a5c);
        EXPECT(gbc.pc(), 0xb1b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b5), 0xcb);
        EXPECT(gbc.readMem(0xb1b6), 0x10);
        // CB 10 02E2
        gbc.setState(0x8256, 0x53ce, 0x6420, 0xca0c, 0x207e, 0x1067, 0x0, 0x0);
        gbc.writeMem(0x8256, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x53ce);
        EXPECT(gbc.pc(), 0x8258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8256), 0xcb);
        EXPECT(gbc.readMem(0x8257), 0x10);
        // CB 10 02E3
        gbc.setState(0x4241, 0xab8b, 0x3660, 0xa6e4, 0x97be, 0xec42, 0x0, 0x0);
        gbc.writeMem(0x4241, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xab8b);
        EXPECT(gbc.pc(), 0x4243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02E4
        gbc.setState(0xb8d9, 0xedda, 0xb690, 0x46a2, 0xf3d2, 0xa159, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xedda);
        EXPECT(gbc.pc(), 0xb8db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8d9), 0xcb);
        EXPECT(gbc.readMem(0xb8da), 0x10);
        // CB 10 02E5
        gbc.setState(0x961e, 0x3ebb, 0xb160, 0xf6c, 0x37d6, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0x961e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3ebb);
        EXPECT(gbc.pc(), 0x9620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x961e), 0xcb);
        EXPECT(gbc.readMem(0x961f), 0x10);
        // CB 10 02E6
        gbc.setState(0xc151, 0xfadb, 0xbb20, 0x5c71, 0x7cd, 0x2132, 0x0, 0x1);
        gbc.writeMem(0xc151, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfadb);
        EXPECT(gbc.pc(), 0xc153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc151), 0xcb);
        EXPECT(gbc.readMem(0xc152), 0x10);
        // CB 10 02E7
        gbc.setState(0x5de0, 0xbf10, 0x6a40, 0xc95d, 0xf03d, 0xb91d, 0x1, 0x0);
        gbc.writeMem(0x5de0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbf10);
        EXPECT(gbc.pc(), 0x5de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02E8
        gbc.setState(0xd989, 0x111b, 0x27d0, 0x2684, 0x4736, 0x7640, 0x0, 0x0);
        gbc.writeMem(0xd989, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x111b);
        EXPECT(gbc.pc(), 0xd98b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd989), 0xcb);
        EXPECT(gbc.readMem(0xd98a), 0x10);
        // CB 10 02EA
        gbc.setState(0x397c, 0x279f, 0x690, 0xf0e1, 0xa778, 0xab27, 0x0, 0x1);
        gbc.writeMem(0x397c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x279f);
        EXPECT(gbc.pc(), 0x397e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02EB
        gbc.setState(0x75c8, 0x1f8f, 0x150, 0xd64f, 0xe19e, 0x46a3, 0x0, 0x0);
        gbc.writeMem(0x75c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x1f8f);
        EXPECT(gbc.pc(), 0x75ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02ED
        gbc.setState(0x79fe, 0xa759, 0x52a0, 0x5059, 0x4d8c, 0xe765, 0x0, 0x1);
        gbc.writeMem(0x79fe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xa759);
        EXPECT(gbc.pc(), 0x7a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02EE
        gbc.setState(0x49ff, 0x5358, 0xdb60, 0xff98, 0x4da8, 0x8010, 0x1, 0x1);
        gbc.writeMem(0x49ff, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5358);
        EXPECT(gbc.pc(), 0x4a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02EF
        gbc.setState(0x8f71, 0x4b0c, 0xb320, 0x2fb5, 0x8a99, 0xd195, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4b0c);
        EXPECT(gbc.pc(), 0x8f73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f71), 0xcb);
        EXPECT(gbc.readMem(0x8f72), 0x10);
        // CB 10 02F0
        gbc.setState(0x5502, 0xafb6, 0xb450, 0x3ca3, 0xfb1e, 0xc141, 0x0, 0x0);
        gbc.writeMem(0x5502, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xafb6);
        EXPECT(gbc.pc(), 0x5504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02F1
        gbc.setState(0x4411, 0x75f9, 0x5ca0, 0x8160, 0x4735, 0x2f8e, 0x1, 0x1);
        gbc.writeMem(0x4411, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x75f9);
        EXPECT(gbc.pc(), 0x4413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02F2
        gbc.setState(0x6339, 0xb629, 0x7580, 0x6de0, 0xc3d7, 0xae08, 0x0, 0x1);
        gbc.writeMem(0x6339, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xb629);
        EXPECT(gbc.pc(), 0x633b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02F3
        gbc.setState(0x4a0a, 0x8cc6, 0x8140, 0xf323, 0xa43f, 0xa989, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8cc6);
        EXPECT(gbc.pc(), 0x4a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02F4
        gbc.setState(0x8cce, 0x291e, 0x6040, 0xb4dd, 0xa69c, 0xd8ef, 0x0, 0x1);
        gbc.writeMem(0x8cce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x291e);
        EXPECT(gbc.pc(), 0x8cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cce), 0xcb);
        EXPECT(gbc.readMem(0x8ccf), 0x10);
        // CB 10 02F5
        gbc.setState(0x4ded, 0xe531, 0x510, 0x8a5f, 0x2204, 0xa773, 0x1, 0x0);
        gbc.writeMem(0x4ded, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe531);
        EXPECT(gbc.pc(), 0x4def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 02F6
        gbc.setState(0xb502, 0x5f71, 0x9fc0, 0x43fb, 0xe17c, 0xa90c, 0x0, 0x1);
        gbc.writeMem(0xb502, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5f71);
        EXPECT(gbc.pc(), 0xb504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb502), 0xcb);
        EXPECT(gbc.readMem(0xb503), 0x10);
        // CB 10 02F7
        gbc.setState(0xe959, 0x497d, 0x3a20, 0xe499, 0xe28d, 0x5ca8, 0x0, 0x1);
        gbc.writeMem(0xe959, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x497d);
        EXPECT(gbc.pc(), 0xe95b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe959), 0xcb);
        EXPECT(gbc.readMem(0xe95a), 0x10);
        // CB 10 02F8
        gbc.setState(0x98f7, 0xc45e, 0xc7a0, 0x38a9, 0x31af, 0x5678, 0x0, 0x1);
        gbc.writeMem(0x98f7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc45e);
        EXPECT(gbc.pc(), 0x98f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98f7), 0xcb);
        EXPECT(gbc.readMem(0x98f8), 0x10);
        // CB 10 02F9
        gbc.setState(0xeec7, 0x8046, 0x2520, 0x5053, 0x9ef1, 0xafd1, 0x1, 0x1);
        gbc.writeMem(0xeec7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8046);
        EXPECT(gbc.pc(), 0xeec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeec7), 0xcb);
        EXPECT(gbc.readMem(0xeec8), 0x10);
        // CB 10 02FA
        gbc.setState(0x65a5, 0x6e9b, 0xdc20, 0x3533, 0x22e, 0xc1fa, 0x0, 0x1);
        gbc.writeMem(0x65a5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6e9b);
        EXPECT(gbc.pc(), 0x65a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02FB
        gbc.setState(0xa537, 0x9cff, 0xf230, 0x5c82, 0x26f7, 0x2fce, 0x1, 0x1);
        gbc.writeMem(0xa537, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9cff);
        EXPECT(gbc.pc(), 0xa539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa537), 0xcb);
        EXPECT(gbc.readMem(0xa538), 0x10);
        // CB 10 02FC
        gbc.setState(0x32d3, 0x79ef, 0x9f50, 0x60e8, 0xc30f, 0x23c5, 0x0, 0x0);
        gbc.writeMem(0x32d3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x79ef);
        EXPECT(gbc.pc(), 0x32d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 02FD
        gbc.setState(0xafbf, 0x923a, 0xd0e0, 0x19be, 0xee3e, 0x7bfc, 0x1, 0x0);
        gbc.writeMem(0xafbf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x923a);
        EXPECT(gbc.pc(), 0xafc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbf), 0xcb);
        EXPECT(gbc.readMem(0xafc0), 0x10);
        // CB 10 02FE
        gbc.setState(0x90e0, 0xfbcb, 0x5680, 0x8277, 0xe142, 0x7fe3, 0x1, 0x1);
        gbc.writeMem(0x90e0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfbcb);
        EXPECT(gbc.pc(), 0x90e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e0), 0xcb);
        EXPECT(gbc.readMem(0x90e1), 0x10);
        // CB 10 02FF
        gbc.setState(0x1f2f, 0xc56a, 0xb310, 0x44ba, 0xe3a7, 0xd690, 0x1, 0x0);
        gbc.writeMem(0x1f2f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc56a);
        EXPECT(gbc.pc(), 0x1f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0300
        gbc.setState(0x7a69, 0xe82f, 0x1ad0, 0x8916, 0x14a1, 0xc173, 0x0, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe82f);
        EXPECT(gbc.pc(), 0x7a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0301
        gbc.setState(0xcbb5, 0xcbb9, 0x9d80, 0xd0b8, 0x40dd, 0xb1ec, 0x1, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcbb9);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0x10);
        // CB 10 0302
        gbc.setState(0xa660, 0x75e7, 0xaf80, 0x7623, 0x6298, 0xb437, 0x1, 0x0);
        gbc.writeMem(0xa660, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x75e7);
        EXPECT(gbc.pc(), 0xa662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa660), 0xcb);
        EXPECT(gbc.readMem(0xa661), 0x10);
        // CB 10 0304
        gbc.setState(0x594e, 0x4745, 0x4890, 0x3a27, 0x7886, 0xf531, 0x1, 0x1);
        gbc.writeMem(0x594e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4745);
        EXPECT(gbc.pc(), 0x5950);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0305
        gbc.setState(0xb197, 0x1c90, 0xa920, 0xc025, 0x3c94, 0x2015, 0x1, 0x0);
        gbc.writeMem(0xb197, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1c90);
        EXPECT(gbc.pc(), 0xb199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb197), 0xcb);
        EXPECT(gbc.readMem(0xb198), 0x10);
        // CB 10 0306
        gbc.setState(0x2e66, 0x66d9, 0x6d30, 0xaedb, 0xadb5, 0x9b3f, 0x0, 0x1);
        gbc.writeMem(0x2e66, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x66d9);
        EXPECT(gbc.pc(), 0x2e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0307
        gbc.setState(0x6a1e, 0x7f8, 0x1050, 0x89ab, 0x4127, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x6a1e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7f8);
        EXPECT(gbc.pc(), 0x6a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0308
        gbc.setState(0xb87, 0x36ee, 0xca00, 0x9227, 0x8d17, 0x5d96, 0x1, 0x0);
        gbc.writeMem(0xb87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x36ee);
        EXPECT(gbc.pc(), 0xb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0309
        gbc.setState(0x9168, 0x8e40, 0xcda0, 0x5911, 0x2cfa, 0xa955, 0x0, 0x0);
        gbc.writeMem(0x9168, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x8e40);
        EXPECT(gbc.pc(), 0x916a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9168), 0xcb);
        EXPECT(gbc.readMem(0x9169), 0x10);
        // CB 10 030A
        gbc.setState(0xda72, 0x9ff6, 0x1930, 0x5876, 0x3206, 0x2107, 0x0, 0x0);
        gbc.writeMem(0xda72, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9ff6);
        EXPECT(gbc.pc(), 0xda74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda72), 0xcb);
        EXPECT(gbc.readMem(0xda73), 0x10);
        // CB 10 030B
        gbc.setState(0x4e9d, 0xf8ab, 0x53c0, 0x40da, 0x25fd, 0x7dba, 0x1, 0x1);
        gbc.writeMem(0x4e9d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf8ab);
        EXPECT(gbc.pc(), 0x4e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 030C
        gbc.setState(0x7687, 0xab22, 0xed20, 0xb6ee, 0x602c, 0xef76, 0x0, 0x1);
        gbc.writeMem(0x7687, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xab22);
        EXPECT(gbc.pc(), 0x7689);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 030D
        gbc.setState(0xad50, 0x50ce, 0x760, 0xbb3c, 0x70f8, 0xb12f, 0x0, 0x0);
        gbc.writeMem(0xad50, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x50ce);
        EXPECT(gbc.pc(), 0xad52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad50), 0xcb);
        EXPECT(gbc.readMem(0xad51), 0x10);
        // CB 10 030E
        gbc.setState(0xc531, 0x40c3, 0x1930, 0xaa80, 0x6b43, 0xc3a7, 0x0, 0x1);
        gbc.writeMem(0xc531, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x40c3);
        EXPECT(gbc.pc(), 0xc533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc531), 0xcb);
        EXPECT(gbc.readMem(0xc532), 0x10);
        // CB 10 030F
        gbc.setState(0x90f6, 0x9cdb, 0x45c0, 0x1828, 0xc4d, 0xab46, 0x1, 0x1);
        gbc.writeMem(0x90f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9cdb);
        EXPECT(gbc.pc(), 0x90f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90f6), 0xcb);
        EXPECT(gbc.readMem(0x90f7), 0x10);
        // CB 10 0310
        gbc.setState(0x3e34, 0xfc57, 0xa1c0, 0x3b6d, 0x59b5, 0x961d, 0x1, 0x1);
        gbc.writeMem(0x3e34, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfc57);
        EXPECT(gbc.pc(), 0x3e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0311
        gbc.setState(0x778b, 0x204c, 0xb060, 0x4c94, 0x1e84, 0x8304, 0x0, 0x0);
        gbc.writeMem(0x778b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0x778d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0312
        gbc.setState(0x4246, 0x1f4f, 0x4220, 0xa4e4, 0x8ae, 0x89a9, 0x1, 0x0);
        gbc.writeMem(0x4246, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1f4f);
        EXPECT(gbc.pc(), 0x4248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0313
        gbc.setState(0x5e37, 0xd05c, 0x1a80, 0xe5d7, 0xcac8, 0xfb76, 0x0, 0x0);
        gbc.writeMem(0x5e37, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd05c);
        EXPECT(gbc.pc(), 0x5e39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0314
        gbc.setState(0xe531, 0x49a8, 0x9530, 0xc64e, 0xe494, 0x6b8d, 0x1, 0x1);
        gbc.writeMem(0xe531, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x49a8);
        EXPECT(gbc.pc(), 0xe533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe531), 0xcb);
        EXPECT(gbc.readMem(0xe532), 0x10);
        // CB 10 0315
        gbc.setState(0xa49d, 0x2f1e, 0x5a70, 0x82d9, 0x5905, 0xb9e3, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x2f1e);
        EXPECT(gbc.pc(), 0xa49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa49d), 0xcb);
        EXPECT(gbc.readMem(0xa49e), 0x10);
        // CB 10 0316
        gbc.setState(0x44b2, 0x4922, 0xc000, 0x9d24, 0x9794, 0xbafe, 0x1, 0x1);
        gbc.writeMem(0x44b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4922);
        EXPECT(gbc.pc(), 0x44b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0317
        gbc.setState(0xcf30, 0xe852, 0x4e20, 0xefd5, 0x5389, 0x8277, 0x0, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe852);
        EXPECT(gbc.pc(), 0xcf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf30), 0xcb);
        EXPECT(gbc.readMem(0xcf31), 0x10);
        // CB 10 0318
        gbc.setState(0xb506, 0xbf67, 0xd530, 0x40f1, 0x6cb4, 0xe932, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbf67);
        EXPECT(gbc.pc(), 0xb508);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb506), 0xcb);
        EXPECT(gbc.readMem(0xb507), 0x10);
        // CB 10 0319
        gbc.setState(0x6e05, 0x1701, 0xf560, 0xa68d, 0xc3d5, 0x4ba1, 0x0, 0x0);
        gbc.writeMem(0x6e05, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1701);
        EXPECT(gbc.pc(), 0x6e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 031A
        gbc.setState(0xcb7e, 0xfb, 0x4180, 0x45bd, 0x9a13, 0xf8eb, 0x0, 0x1);
        gbc.writeMem(0xcb7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xfb);
        EXPECT(gbc.pc(), 0xcb80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb7e), 0xcb);
        EXPECT(gbc.readMem(0xcb7f), 0x10);
        // CB 10 031B
        gbc.setState(0x725, 0x8760, 0x2370, 0xd0e0, 0x4cd, 0x747a, 0x0, 0x0);
        gbc.writeMem(0x725, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8760);
        EXPECT(gbc.pc(), 0x727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 031C
        gbc.setState(0x677b, 0x9d08, 0x3860, 0xa902, 0x6e8e, 0x83f9, 0x0, 0x1);
        gbc.writeMem(0x677b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9d08);
        EXPECT(gbc.pc(), 0x677d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 031D
        gbc.setState(0x4cc8, 0x2c6d, 0x5860, 0xc9d3, 0xcdde, 0x78d5, 0x1, 0x1);
        gbc.writeMem(0x4cc8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0x4cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 031E
        gbc.setState(0xa6ba, 0xcfb4, 0xaa70, 0x185b, 0xd259, 0x367b, 0x1, 0x1);
        gbc.writeMem(0xa6ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xcfb4);
        EXPECT(gbc.pc(), 0xa6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ba), 0xcb);
        EXPECT(gbc.readMem(0xa6bb), 0x10);
        // CB 10 031F
        gbc.setState(0x13c2, 0x1998, 0x1120, 0xeb9, 0x40ea, 0x2e1a, 0x1, 0x0);
        gbc.writeMem(0x13c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1998);
        EXPECT(gbc.pc(), 0x13c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0321
        gbc.setState(0x2f18, 0x896c, 0x3780, 0x521d, 0xdef9, 0x981d, 0x0, 0x1);
        gbc.writeMem(0x2f18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x896c);
        EXPECT(gbc.pc(), 0x2f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0322
        gbc.setState(0x1807, 0x1d7a, 0x6760, 0x2e92, 0x5634, 0x576d, 0x1, 0x1);
        gbc.writeMem(0x1807, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1d7a);
        EXPECT(gbc.pc(), 0x1809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0323
        gbc.setState(0x2a91, 0xba04, 0x4e90, 0x83e2, 0xf253, 0x377c, 0x0, 0x0);
        gbc.writeMem(0x2a91, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xba04);
        EXPECT(gbc.pc(), 0x2a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0324
        gbc.setState(0x5316, 0x9447, 0x6bd0, 0x4aa4, 0x6ba7, 0xce16, 0x0, 0x0);
        gbc.writeMem(0x5316, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9447);
        EXPECT(gbc.pc(), 0x5318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0325
        gbc.setState(0xa48, 0x2e9d, 0x2fd0, 0x2cc9, 0x264f, 0x8a55, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2e9d);
        EXPECT(gbc.pc(), 0xa4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0326
        gbc.setState(0x4a67, 0xec22, 0x1b60, 0x231f, 0xd48e, 0x6732, 0x0, 0x0);
        gbc.writeMem(0x4a67, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xec22);
        EXPECT(gbc.pc(), 0x4a69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0327
        gbc.setState(0xbca3, 0x97e, 0x1ef0, 0x2e9, 0xb02c, 0x689f, 0x1, 0x0);
        gbc.writeMem(0xbca3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x97e);
        EXPECT(gbc.pc(), 0xbca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbca3), 0xcb);
        EXPECT(gbc.readMem(0xbca4), 0x10);
        // CB 10 0328
        gbc.setState(0x5e4f, 0xe7bb, 0xc000, 0xade4, 0xca, 0x9f0c, 0x1, 0x1);
        gbc.writeMem(0x5e4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe7bb);
        EXPECT(gbc.pc(), 0x5e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0329
        gbc.setState(0x1932, 0xdbac, 0xa330, 0x74ae, 0x43c7, 0x4ec7, 0x0, 0x0);
        gbc.writeMem(0x1932, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdbac);
        EXPECT(gbc.pc(), 0x1934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 032A
        gbc.setState(0x2f82, 0x535b, 0x1090, 0x5151, 0xc5b5, 0x517c, 0x0, 0x1);
        gbc.writeMem(0x2f82, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x535b);
        EXPECT(gbc.pc(), 0x2f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 032B
        gbc.setState(0x68df, 0x3c6b, 0x85e0, 0x328b, 0x4179, 0x7e65, 0x1, 0x0);
        gbc.writeMem(0x68df, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3c6b);
        EXPECT(gbc.pc(), 0x68e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 032C
        gbc.setState(0x2176, 0x4d79, 0x1c70, 0xf7da, 0x322f, 0xd872, 0x1, 0x0);
        gbc.writeMem(0x2176, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4d79);
        EXPECT(gbc.pc(), 0x2178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 032D
        gbc.setState(0xaa87, 0x99b5, 0x3c90, 0xe06f, 0x7500, 0xd7ef, 0x1, 0x1);
        gbc.writeMem(0xaa87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x99b5);
        EXPECT(gbc.pc(), 0xaa89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa87), 0xcb);
        EXPECT(gbc.readMem(0xaa88), 0x10);
        // CB 10 032E
        gbc.setState(0xda60, 0xe303, 0x6af0, 0x14ae, 0xfc87, 0x15f0, 0x1, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe303);
        EXPECT(gbc.pc(), 0xda62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda60), 0xcb);
        EXPECT(gbc.readMem(0xda61), 0x10);
        // CB 10 032F
        gbc.setState(0xbbec, 0x9ac9, 0x40b0, 0x4f84, 0x23e5, 0xdcde, 0x0, 0x0);
        gbc.writeMem(0xbbec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9ac9);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbec), 0xcb);
        EXPECT(gbc.readMem(0xbbed), 0x10);
        // CB 10 0330
        gbc.setState(0x2d94, 0xf3fb, 0x13c0, 0x8b9c, 0xcde7, 0x347d, 0x0, 0x0);
        gbc.writeMem(0x2d94, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf3fb);
        EXPECT(gbc.pc(), 0x2d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0331
        gbc.setState(0x4ca3, 0xa147, 0x6c20, 0x16ce, 0x4cef, 0xa526, 0x1, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa147);
        EXPECT(gbc.pc(), 0x4ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0332
        gbc.setState(0xc650, 0x40ac, 0x7270, 0x3787, 0xaad0, 0x4757, 0x0, 0x1);
        gbc.writeMem(0xc650, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x40ac);
        EXPECT(gbc.pc(), 0xc652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc650), 0xcb);
        EXPECT(gbc.readMem(0xc651), 0x10);
        // CB 10 0333
        gbc.setState(0xb40a, 0x51af, 0x650, 0x9a27, 0x3b9b, 0xce92, 0x0, 0x0);
        gbc.writeMem(0xb40a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x51af);
        EXPECT(gbc.pc(), 0xb40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb40a), 0xcb);
        EXPECT(gbc.readMem(0xb40b), 0x10);
        // CB 10 0334
        gbc.setState(0x5673, 0x4ccf, 0x4c90, 0xba92, 0x2aa5, 0xb66b, 0x0, 0x0);
        gbc.writeMem(0x5673, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4ccf);
        EXPECT(gbc.pc(), 0x5675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0335
        gbc.setState(0x2e7e, 0x5b1b, 0xc530, 0xfe8e, 0x3ee5, 0xf2b4, 0x0, 0x1);
        gbc.writeMem(0x2e7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5b1b);
        EXPECT(gbc.pc(), 0x2e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0336
        gbc.setState(0x9407, 0xe057, 0x1190, 0x3876, 0x6a49, 0x5b32, 0x0, 0x0);
        gbc.writeMem(0x9407, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe057);
        EXPECT(gbc.pc(), 0x9409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9407), 0xcb);
        EXPECT(gbc.readMem(0x9408), 0x10);
        // CB 10 0337
        gbc.setState(0x6003, 0xa651, 0xac20, 0xebf7, 0x34e2, 0xd87c, 0x0, 0x0);
        gbc.writeMem(0x6003, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa651);
        EXPECT(gbc.pc(), 0x6005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0338
        gbc.setState(0xee33, 0x3879, 0x2ca0, 0xe510, 0x60a9, 0x9424, 0x1, 0x1);
        gbc.writeMem(0xee33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3879);
        EXPECT(gbc.pc(), 0xee35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee33), 0xcb);
        EXPECT(gbc.readMem(0xee34), 0x10);
        // CB 10 0339
        gbc.setState(0xa17d, 0x9df2, 0x3750, 0xf1a8, 0xfe73, 0xbac5, 0x1, 0x1);
        gbc.writeMem(0xa17d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9df2);
        EXPECT(gbc.pc(), 0xa17f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17d), 0xcb);
        EXPECT(gbc.readMem(0xa17e), 0x10);
        // CB 10 033A
        gbc.setState(0x12a3, 0x9026, 0xeca0, 0x2, 0x1f59, 0x23ac, 0x0, 0x1);
        gbc.writeMem(0x12a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9026);
        EXPECT(gbc.pc(), 0x12a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 033B
        gbc.setState(0x3e76, 0xc105, 0x6550, 0xe9d, 0xc8b5, 0x55e1, 0x0, 0x0);
        gbc.writeMem(0x3e76, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc105);
        EXPECT(gbc.pc(), 0x3e78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 033C
        gbc.setState(0x1a8, 0xcef5, 0x6a80, 0x56a5, 0x56c, 0xc578, 0x1, 0x0);
        gbc.writeMem(0x1a8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xcef5);
        EXPECT(gbc.pc(), 0x1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 033D
        gbc.setState(0x1b8f, 0x9301, 0xebd0, 0x4a81, 0x44a, 0xa3d5, 0x1, 0x0);
        gbc.writeMem(0x1b8f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9301);
        EXPECT(gbc.pc(), 0x1b91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 033F
        gbc.setState(0x42fb, 0x4419, 0xf8d0, 0xe00e, 0x4fc7, 0x7c97, 0x1, 0x1);
        gbc.writeMem(0x42fb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4419);
        EXPECT(gbc.pc(), 0x42fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0340
        gbc.setState(0xe3b5, 0x744b, 0x7a70, 0x7186, 0xd5f, 0xc330, 0x0, 0x0);
        gbc.writeMem(0xe3b5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x744b);
        EXPECT(gbc.pc(), 0xe3b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b5), 0xcb);
        EXPECT(gbc.readMem(0xe3b6), 0x10);
        // CB 10 0341
        gbc.setState(0xa26e, 0x6b3e, 0x25a0, 0x619c, 0x4d4a, 0xa541, 0x0, 0x0);
        gbc.writeMem(0xa26e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6b3e);
        EXPECT(gbc.pc(), 0xa270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa26e), 0xcb);
        EXPECT(gbc.readMem(0xa26f), 0x10);
        // CB 10 0343
        gbc.setState(0x26f9, 0x2ca3, 0x9990, 0xb9db, 0x8b45, 0x99f4, 0x0, 0x0);
        gbc.writeMem(0x26f9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2ca3);
        EXPECT(gbc.pc(), 0x26fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0344
        gbc.setState(0x5346, 0x60ee, 0x1850, 0xa6d8, 0xb2de, 0xc103, 0x1, 0x1);
        gbc.writeMem(0x5346, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x60ee);
        EXPECT(gbc.pc(), 0x5348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0345
        gbc.setState(0xd244, 0x9611, 0xc0, 0x12bb, 0x41ed, 0x236b, 0x0, 0x1);
        gbc.writeMem(0xd244, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x9611);
        EXPECT(gbc.pc(), 0xd246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd244), 0xcb);
        EXPECT(gbc.readMem(0xd245), 0x10);
        // CB 10 0346
        gbc.setState(0xdcea, 0x89b5, 0x9be0, 0x8239, 0x619d, 0x80fc, 0x1, 0x0);
        gbc.writeMem(0xdcea, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x89b5);
        EXPECT(gbc.pc(), 0xdcec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcea), 0xcb);
        EXPECT(gbc.readMem(0xdceb), 0x10);
        // CB 10 0347
        gbc.setState(0x50e9, 0x97ce, 0xabe0, 0xfb4, 0xd4d8, 0xc90e, 0x1, 0x0);
        gbc.writeMem(0x50e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x97ce);
        EXPECT(gbc.pc(), 0x50eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0348
        gbc.setState(0xae15, 0xfff3, 0x210, 0x6c34, 0xd894, 0x8dc9, 0x0, 0x1);
        gbc.writeMem(0xae15, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfff3);
        EXPECT(gbc.pc(), 0xae17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae15), 0xcb);
        EXPECT(gbc.readMem(0xae16), 0x10);
        // CB 10 0349
        gbc.setState(0x4ba3, 0xdfe9, 0x1a50, 0x88f8, 0x6a5d, 0xc269, 0x0, 0x0);
        gbc.writeMem(0x4ba3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdfe9);
        EXPECT(gbc.pc(), 0x4ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 034A
        gbc.setState(0x294e, 0x291e, 0xb280, 0xe55e, 0x984a, 0xfa5, 0x0, 0x0);
        gbc.writeMem(0x294e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x291e);
        EXPECT(gbc.pc(), 0x2950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 034B
        gbc.setState(0x7903, 0xf5f5, 0xf5b0, 0xacb5, 0x2ede, 0x7bdb, 0x0, 0x0);
        gbc.writeMem(0x7903, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0x7905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 034D
        gbc.setState(0x8c1c, 0x4eb9, 0x7160, 0x515c, 0xdbbe, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0x8c1c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x4eb9);
        EXPECT(gbc.pc(), 0x8c1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c1c), 0xcb);
        EXPECT(gbc.readMem(0x8c1d), 0x10);
        // CB 10 034E
        gbc.setState(0xa586, 0x6336, 0x1e50, 0x7e14, 0xd072, 0xc8a3, 0x1, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6336);
        EXPECT(gbc.pc(), 0xa588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa586), 0xcb);
        EXPECT(gbc.readMem(0xa587), 0x10);
        // CB 10 034F
        gbc.setState(0x3bd1, 0x79a2, 0x9450, 0xeee8, 0x4a2c, 0x89c3, 0x1, 0x1);
        gbc.writeMem(0x3bd1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x79a2);
        EXPECT(gbc.pc(), 0x3bd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0350
        gbc.setState(0x2ce9, 0xa358, 0xd110, 0x9dfa, 0x6b58, 0x7ad, 0x0, 0x1);
        gbc.writeMem(0x2ce9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa358);
        EXPECT(gbc.pc(), 0x2ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0351
        gbc.setState(0x64d2, 0xbe20, 0x6d30, 0xdf9b, 0x16cb, 0x968d, 0x0, 0x0);
        gbc.writeMem(0x64d2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0x64d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0352
        gbc.setState(0x11c0, 0x58d2, 0xbc30, 0x7db6, 0xed1b, 0xcb7c, 0x1, 0x1);
        gbc.writeMem(0x11c0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x58d2);
        EXPECT(gbc.pc(), 0x11c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0353
        gbc.setState(0xe956, 0xaa37, 0x94f0, 0x9ce8, 0xbb89, 0xe82, 0x1, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xaa37);
        EXPECT(gbc.pc(), 0xe958);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe956), 0xcb);
        EXPECT(gbc.readMem(0xe957), 0x10);
        // CB 10 0354
        gbc.setState(0x8de1, 0xb82e, 0xa810, 0x8f9e, 0x48c3, 0x58a4, 0x1, 0x1);
        gbc.writeMem(0x8de1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xb82e);
        EXPECT(gbc.pc(), 0x8de3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de1), 0xcb);
        EXPECT(gbc.readMem(0x8de2), 0x10);
        // CB 10 0355
        gbc.setState(0xa25c, 0x6e31, 0xb350, 0x884d, 0x9390, 0x370f, 0x0, 0x0);
        gbc.writeMem(0xa25c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x6e31);
        EXPECT(gbc.pc(), 0xa25e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa25c), 0xcb);
        EXPECT(gbc.readMem(0xa25d), 0x10);
        // CB 10 0356
        gbc.setState(0x827e, 0x7302, 0x920, 0xb120, 0x9fb6, 0x69f7, 0x1, 0x0);
        gbc.writeMem(0x827e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7302);
        EXPECT(gbc.pc(), 0x8280);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827e), 0xcb);
        EXPECT(gbc.readMem(0x827f), 0x10);
        // CB 10 0357
        gbc.setState(0x692f, 0x8878, 0xd530, 0x9c20, 0x3ae0, 0x93d5, 0x0, 0x0);
        gbc.writeMem(0x692f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8878);
        EXPECT(gbc.pc(), 0x6931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0358
        gbc.setState(0x81bb, 0xa432, 0xdc70, 0xa292, 0x4837, 0x79f5, 0x1, 0x0);
        gbc.writeMem(0x81bb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa432);
        EXPECT(gbc.pc(), 0x81bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81bb), 0xcb);
        EXPECT(gbc.readMem(0x81bc), 0x10);
        // CB 10 0359
        gbc.setState(0x5cd, 0x710a, 0xf8f0, 0x6958, 0xf250, 0x5357, 0x0, 0x0);
        gbc.writeMem(0x5cd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x710a);
        EXPECT(gbc.pc(), 0x5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 035A
        gbc.setState(0xbd57, 0x7d40, 0x2e30, 0x8ab2, 0x7999, 0xbb17, 0x1, 0x0);
        gbc.writeMem(0xbd57, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7d40);
        EXPECT(gbc.pc(), 0xbd59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd57), 0xcb);
        EXPECT(gbc.readMem(0xbd58), 0x10);
        // CB 10 035B
        gbc.setState(0xb33d, 0xecf7, 0xc960, 0xec66, 0xdd37, 0x627d, 0x0, 0x0);
        gbc.writeMem(0xb33d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xecf7);
        EXPECT(gbc.pc(), 0xb33f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb33d), 0xcb);
        EXPECT(gbc.readMem(0xb33e), 0x10);
        // CB 10 035C
        gbc.setState(0x65f3, 0x2636, 0x6c0, 0x432c, 0x6785, 0x1f84, 0x0, 0x1);
        gbc.writeMem(0x65f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2636);
        EXPECT(gbc.pc(), 0x65f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 035D
        gbc.setState(0x4ac9, 0xb67c, 0x5370, 0x4388, 0xf3ea, 0x6b4b, 0x0, 0x0);
        gbc.writeMem(0x4ac9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb67c);
        EXPECT(gbc.pc(), 0x4acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 035E
        gbc.setState(0x53d3, 0x1f58, 0xdd0, 0xc1fd, 0xa9f2, 0x186f, 0x0, 0x0);
        gbc.writeMem(0x53d3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1f58);
        EXPECT(gbc.pc(), 0x53d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 035F
        gbc.setState(0x8225, 0xf5d9, 0xb450, 0x31f, 0x94f9, 0x947a, 0x1, 0x0);
        gbc.writeMem(0x8225, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf5d9);
        EXPECT(gbc.pc(), 0x8227);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8225), 0xcb);
        EXPECT(gbc.readMem(0x8226), 0x10);
        // CB 10 0360
        gbc.setState(0x1232, 0x3363, 0x2bf0, 0xa314, 0xd8b2, 0xd09c, 0x0, 0x1);
        gbc.writeMem(0x1232, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3363);
        EXPECT(gbc.pc(), 0x1234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0361
        gbc.setState(0x4835, 0xfda5, 0x26b0, 0xab9e, 0x677, 0x45c8, 0x1, 0x0);
        gbc.writeMem(0x4835, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfda5);
        EXPECT(gbc.pc(), 0x4837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0362
        gbc.setState(0xe639, 0x8902, 0x730, 0x5c3a, 0xec67, 0x53e3, 0x0, 0x1);
        gbc.writeMem(0xe639, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8902);
        EXPECT(gbc.pc(), 0xe63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe639), 0xcb);
        EXPECT(gbc.readMem(0xe63a), 0x10);
        // CB 10 0363
        gbc.setState(0xa6c4, 0x8f68, 0x51d0, 0x5c4e, 0x7c05, 0xe74d, 0x1, 0x0);
        gbc.writeMem(0xa6c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8f68);
        EXPECT(gbc.pc(), 0xa6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c4), 0xcb);
        EXPECT(gbc.readMem(0xa6c5), 0x10);
        // CB 10 0364
        gbc.setState(0x5c7b, 0x61f2, 0x9d40, 0xaca7, 0xf21c, 0x47c6, 0x0, 0x0);
        gbc.writeMem(0x5c7b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x61f2);
        EXPECT(gbc.pc(), 0x5c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0365
        gbc.setState(0xd093, 0x14a7, 0x3f90, 0xc229, 0x2d74, 0x17bf, 0x0, 0x1);
        gbc.writeMem(0xd093, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x14a7);
        EXPECT(gbc.pc(), 0xd095);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd093), 0xcb);
        EXPECT(gbc.readMem(0xd094), 0x10);
        // CB 10 0366
        gbc.setState(0x5660, 0x47d3, 0x3730, 0x72af, 0xf85b, 0xc2, 0x1, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x47d3);
        EXPECT(gbc.pc(), 0x5662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0367
        gbc.setState(0x2b16, 0x85c6, 0x6fd0, 0xa1e1, 0x3c4b, 0xf72c, 0x1, 0x0);
        gbc.writeMem(0x2b16, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x85c6);
        EXPECT(gbc.pc(), 0x2b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0369
        gbc.setState(0xcec0, 0xd56a, 0xb820, 0x15d1, 0x98a2, 0x2c2d, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd56a);
        EXPECT(gbc.pc(), 0xcec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec0), 0xcb);
        EXPECT(gbc.readMem(0xcec1), 0x10);
        // CB 10 036A
        gbc.setState(0x5627, 0x68a8, 0x5650, 0xc16e, 0xbc2f, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x5627, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x68a8);
        EXPECT(gbc.pc(), 0x5629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 036B
        gbc.setState(0xa0d2, 0xfc4e, 0x12d0, 0xb1fb, 0xa779, 0x6998, 0x0, 0x0);
        gbc.writeMem(0xa0d2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xfc4e);
        EXPECT(gbc.pc(), 0xa0d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d2), 0xcb);
        EXPECT(gbc.readMem(0xa0d3), 0x10);
        // CB 10 036C
        gbc.setState(0xafbf, 0xf005, 0xbb30, 0x8cc0, 0x213f, 0x4318, 0x0, 0x0);
        gbc.writeMem(0xafbf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf005);
        EXPECT(gbc.pc(), 0xafc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafbf), 0xcb);
        EXPECT(gbc.readMem(0xafc0), 0x10);
        // CB 10 036D
        gbc.setState(0x57bd, 0x53f3, 0xca60, 0x35c1, 0x75bc, 0xf1ad, 0x0, 0x1);
        gbc.writeMem(0x57bd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x53f3);
        EXPECT(gbc.pc(), 0x57bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 036E
        gbc.setState(0xaa81, 0x26ad, 0x8050, 0x3468, 0x3e6b, 0x6ee4, 0x0, 0x1);
        gbc.writeMem(0xaa81, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x26ad);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa81), 0xcb);
        EXPECT(gbc.readMem(0xaa82), 0x10);
        // CB 10 036F
        gbc.setState(0xcd03, 0x9051, 0xc780, 0xd414, 0x60e4, 0x8257, 0x0, 0x1);
        gbc.writeMem(0xcd03, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9051);
        EXPECT(gbc.pc(), 0xcd05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd03), 0xcb);
        EXPECT(gbc.readMem(0xcd04), 0x10);
        // CB 10 0370
        gbc.setState(0xa317, 0xd8fe, 0x8360, 0xfa64, 0xc694, 0x4733, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd8fe);
        EXPECT(gbc.pc(), 0xa319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa317), 0xcb);
        EXPECT(gbc.readMem(0xa318), 0x10);
        // CB 10 0371
        gbc.setState(0xe0c5, 0xca75, 0x9230, 0x629e, 0x17a5, 0x136c, 0x0, 0x0);
        gbc.writeMem(0xe0c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xca75);
        EXPECT(gbc.pc(), 0xe0c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0c5), 0xcb);
        EXPECT(gbc.readMem(0xe0c6), 0x10);
        // CB 10 0372
        gbc.setState(0x2b67, 0xde38, 0xf60, 0xbf10, 0x78b3, 0x189c, 0x0, 0x1);
        gbc.writeMem(0x2b67, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xde38);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0373
        gbc.setState(0xa726, 0xbc4b, 0xf090, 0xb91a, 0x9332, 0xe469, 0x1, 0x0);
        gbc.writeMem(0xa726, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbc4b);
        EXPECT(gbc.pc(), 0xa728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa726), 0xcb);
        EXPECT(gbc.readMem(0xa727), 0x10);
        // CB 10 0374
        gbc.setState(0x98d, 0x1ab3, 0x7e70, 0x835, 0x4d36, 0x3368, 0x1, 0x1);
        gbc.writeMem(0x98d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1ab3);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0375
        gbc.setState(0x20c8, 0x392c, 0x8ff0, 0x8272, 0x55ec, 0xf787, 0x1, 0x1);
        gbc.writeMem(0x20c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x392c);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0376
        gbc.setState(0xaf46, 0xb52a, 0x7190, 0x6828, 0xf382, 0x9fee, 0x1, 0x0);
        gbc.writeMem(0xaf46, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb52a);
        EXPECT(gbc.pc(), 0xaf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf46), 0xcb);
        EXPECT(gbc.readMem(0xaf47), 0x10);
        // CB 10 0377
        gbc.setState(0x9845, 0xc97b, 0x4630, 0x9df4, 0xe8f0, 0xf997, 0x1, 0x0);
        gbc.writeMem(0x9845, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc97b);
        EXPECT(gbc.pc(), 0x9847);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9845), 0xcb);
        EXPECT(gbc.readMem(0x9846), 0x10);
        // CB 10 0378
        gbc.setState(0xd2cc, 0xa902, 0xdc30, 0xecff, 0x3ec6, 0xe348, 0x1, 0x0);
        gbc.writeMem(0xd2cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa902);
        EXPECT(gbc.pc(), 0xd2ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2cc), 0xcb);
        EXPECT(gbc.readMem(0xd2cd), 0x10);
        // CB 10 0379
        gbc.setState(0xcd9c, 0x5d8f, 0x1f00, 0x249b, 0x7f4, 0xa6, 0x1, 0x1);
        gbc.writeMem(0xcd9c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5d8f);
        EXPECT(gbc.pc(), 0xcd9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd9c), 0xcb);
        EXPECT(gbc.readMem(0xcd9d), 0x10);
        // CB 10 037A
        gbc.setState(0x3822, 0xbc16, 0xf750, 0xa6ca, 0x80b6, 0xa6e8, 0x0, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbc16);
        EXPECT(gbc.pc(), 0x3824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 037B
        gbc.setState(0x2046, 0x89f7, 0xe840, 0xb3df, 0x5ff6, 0xc087, 0x0, 0x1);
        gbc.writeMem(0x2046, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x89f7);
        EXPECT(gbc.pc(), 0x2048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 037C
        gbc.setState(0x6cbc, 0x9d46, 0x6900, 0x6368, 0xabed, 0xa47e, 0x0, 0x1);
        gbc.writeMem(0x6cbc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9d46);
        EXPECT(gbc.pc(), 0x6cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 037D
        gbc.setState(0xb997, 0x2edd, 0xa410, 0xba0b, 0x5680, 0xb0b5, 0x0, 0x1);
        gbc.writeMem(0xb997, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2edd);
        EXPECT(gbc.pc(), 0xb999);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb997), 0xcb);
        EXPECT(gbc.readMem(0xb998), 0x10);
        // CB 10 037F
        gbc.setState(0x2f1a, 0xd5c, 0x7a00, 0xe380, 0xe3f1, 0xe052, 0x0, 0x0);
        gbc.writeMem(0x2f1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd5c);
        EXPECT(gbc.pc(), 0x2f1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0380
        gbc.setState(0x27a8, 0x9857, 0x2370, 0xa4e6, 0x23a2, 0x428d, 0x0, 0x1);
        gbc.writeMem(0x27a8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x9857);
        EXPECT(gbc.pc(), 0x27aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0381
        gbc.setState(0xc249, 0x7d1a, 0x21b0, 0xdbf5, 0x41fd, 0xd32c, 0x0, 0x1);
        gbc.writeMem(0xc249, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7d1a);
        EXPECT(gbc.pc(), 0xc24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc249), 0xcb);
        EXPECT(gbc.readMem(0xc24a), 0x10);
        // CB 10 0382
        gbc.setState(0x9970, 0x1002, 0x33c0, 0x473b, 0xda8c, 0x65a6, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1002);
        EXPECT(gbc.pc(), 0x9972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9970), 0xcb);
        EXPECT(gbc.readMem(0x9971), 0x10);
        // CB 10 0383
        gbc.setState(0x3c54, 0x7261, 0x1820, 0x85b7, 0x3d26, 0xb1ff, 0x0, 0x1);
        gbc.writeMem(0x3c54, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7261);
        EXPECT(gbc.pc(), 0x3c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0384
        gbc.setState(0x98d, 0xeb2c, 0x8b80, 0xb77d, 0x651c, 0xa532, 0x0, 0x0);
        gbc.writeMem(0x98d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xeb2c);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0385
        gbc.setState(0x6140, 0x703d, 0xc760, 0x4858, 0x89ac, 0x6c56, 0x1, 0x1);
        gbc.writeMem(0x6140, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x703d);
        EXPECT(gbc.pc(), 0x6142);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0387
        gbc.setState(0x59ea, 0xdd43, 0x29e0, 0xb6cc, 0xb239, 0x6ec7, 0x1, 0x0);
        gbc.writeMem(0x59ea, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdd43);
        EXPECT(gbc.pc(), 0x59ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0388
        gbc.setState(0x7fe8, 0x84d8, 0xa100, 0xcaae, 0x8a86, 0xeb41, 0x0, 0x1);
        gbc.writeMem(0x7fe8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x84d8);
        EXPECT(gbc.pc(), 0x7fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0389
        gbc.setState(0x9373, 0xa3d3, 0x1680, 0x771, 0xadb5, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0x9373, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa3d3);
        EXPECT(gbc.pc(), 0x9375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9373), 0xcb);
        EXPECT(gbc.readMem(0x9374), 0x10);
        // CB 10 038A
        gbc.setState(0xd1ef, 0x3066, 0x5c00, 0xa317, 0x3b64, 0xe8f6, 0x0, 0x1);
        gbc.writeMem(0xd1ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3066);
        EXPECT(gbc.pc(), 0xd1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ef), 0xcb);
        EXPECT(gbc.readMem(0xd1f0), 0x10);
        // CB 10 038B
        gbc.setState(0x793, 0x35d8, 0xe050, 0x6f00, 0xa53f, 0x4a1d, 0x1, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0x795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 038C
        gbc.setState(0xd996, 0x231d, 0xc1f0, 0xd98f, 0x3d0b, 0x1ea3, 0x0, 0x1);
        gbc.writeMem(0xd996, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x231d);
        EXPECT(gbc.pc(), 0xd998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd996), 0xcb);
        EXPECT(gbc.readMem(0xd997), 0x10);
        // CB 10 038D
        gbc.setState(0x3e84, 0xf19f, 0x1f70, 0x6d6, 0x9ed2, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0x3e84, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf19f);
        EXPECT(gbc.pc(), 0x3e86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 038E
        gbc.setState(0x55c5, 0x7ecb, 0xaa90, 0xd456, 0x4649, 0x97fc, 0x1, 0x1);
        gbc.writeMem(0x55c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7ecb);
        EXPECT(gbc.pc(), 0x55c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 038F
        gbc.setState(0xc256, 0x3b68, 0x57f0, 0x9eb1, 0x7508, 0x9aff, 0x1, 0x1);
        gbc.writeMem(0xc256, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3b68);
        EXPECT(gbc.pc(), 0xc258);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc256), 0xcb);
        EXPECT(gbc.readMem(0xc257), 0x10);
        // CB 10 0390
        gbc.setState(0x7bb8, 0x33ee, 0xfcd0, 0x1690, 0xdc1c, 0xc51a, 0x0, 0x1);
        gbc.writeMem(0x7bb8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x33ee);
        EXPECT(gbc.pc(), 0x7bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0391
        gbc.setState(0xa724, 0xce4e, 0x7210, 0x6ba6, 0x15eb, 0x1821, 0x0, 0x1);
        gbc.writeMem(0xa724, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xce4e);
        EXPECT(gbc.pc(), 0xa726);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa724), 0xcb);
        EXPECT(gbc.readMem(0xa725), 0x10);
        // CB 10 0392
        gbc.setState(0x35b0, 0xe220, 0x6de0, 0x997c, 0xe5eb, 0x112b, 0x0, 0x1);
        gbc.writeMem(0x35b0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe220);
        EXPECT(gbc.pc(), 0x35b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0393
        gbc.setState(0x4091, 0x12fe, 0xb1a0, 0x44dd, 0x6400, 0xacae, 0x1, 0x0);
        gbc.writeMem(0x4091, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x12fe);
        EXPECT(gbc.pc(), 0x4093);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0394
        gbc.setState(0x8083, 0xbf3c, 0x770, 0xb442, 0xd5e1, 0xce49, 0x0, 0x1);
        gbc.writeMem(0x8083, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbf3c);
        EXPECT(gbc.pc(), 0x8085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8083), 0xcb);
        EXPECT(gbc.readMem(0x8084), 0x10);
        // CB 10 0395
        gbc.setState(0x3ef0, 0xe313, 0x9860, 0x76cf, 0x32a9, 0x277e, 0x1, 0x1);
        gbc.writeMem(0x3ef0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe313);
        EXPECT(gbc.pc(), 0x3ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 0396
        gbc.setState(0x8ef8, 0x9e15, 0x4400, 0xb26, 0x7043, 0xc662, 0x0, 0x1);
        gbc.writeMem(0x8ef8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9e15);
        EXPECT(gbc.pc(), 0x8efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef8), 0xcb);
        EXPECT(gbc.readMem(0x8ef9), 0x10);
        // CB 10 0397
        gbc.setState(0xaaad, 0x1f9e, 0x7000, 0xf8e8, 0x69e7, 0x318c, 0x1, 0x1);
        gbc.writeMem(0xaaad, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1f9e);
        EXPECT(gbc.pc(), 0xaaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaad), 0xcb);
        EXPECT(gbc.readMem(0xaaae), 0x10);
        // CB 10 0398
        gbc.setState(0x1cf5, 0x6b13, 0xd530, 0xfd97, 0xe6b5, 0xdced, 0x1, 0x1);
        gbc.writeMem(0x1cf5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0x1cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 0399
        gbc.setState(0xe3b4, 0xad93, 0xf610, 0x9b22, 0x8159, 0x275a, 0x1, 0x1);
        gbc.writeMem(0xe3b4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xad93);
        EXPECT(gbc.pc(), 0xe3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3b4), 0xcb);
        EXPECT(gbc.readMem(0xe3b5), 0x10);
        // CB 10 039A
        gbc.setState(0x3f6a, 0xf42e, 0xa10, 0x574a, 0x2a31, 0xeff, 0x1, 0x1);
        gbc.writeMem(0x3f6a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf42e);
        EXPECT(gbc.pc(), 0x3f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 039B
        gbc.setState(0x34a1, 0x99c7, 0xb0, 0xc87c, 0x7bc2, 0x2df0, 0x1, 0x1);
        gbc.writeMem(0x34a1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x99c7);
        EXPECT(gbc.pc(), 0x34a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 039C
        gbc.setState(0xc777, 0xa4e9, 0x42e0, 0x482b, 0x9c35, 0xe7c9, 0x0, 0x1);
        gbc.writeMem(0xc777, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa4e9);
        EXPECT(gbc.pc(), 0xc779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc777), 0xcb);
        EXPECT(gbc.readMem(0xc778), 0x10);
        // CB 10 039D
        gbc.setState(0xb697, 0xb273, 0x4430, 0x603a, 0x1c9b, 0xe299, 0x1, 0x1);
        gbc.writeMem(0xb697, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb273);
        EXPECT(gbc.pc(), 0xb699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb697), 0xcb);
        EXPECT(gbc.readMem(0xb698), 0x10);
        // CB 10 039E
        gbc.setState(0x2479, 0xf154, 0xa4a0, 0x4969, 0xc0f1, 0xe42d, 0x1, 0x1);
        gbc.writeMem(0x2479, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf154);
        EXPECT(gbc.pc(), 0x247b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 039F
        gbc.setState(0x39c8, 0x88e9, 0x6a80, 0x414d, 0xe544, 0x522, 0x0, 0x1);
        gbc.writeMem(0x39c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x88e9);
        EXPECT(gbc.pc(), 0x39ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03A0
        gbc.setState(0xcdb2, 0xfef4, 0x7b50, 0x8978, 0x868d, 0x20e, 0x0, 0x0);
        gbc.writeMem(0xcdb2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xfef4);
        EXPECT(gbc.pc(), 0xcdb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb2), 0xcb);
        EXPECT(gbc.readMem(0xcdb3), 0x10);
        // CB 10 03A1
        gbc.setState(0x7e70, 0xce7c, 0x6cb0, 0x1f87, 0x2950, 0x30ef, 0x1, 0x1);
        gbc.writeMem(0x7e70, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xce7c);
        EXPECT(gbc.pc(), 0x7e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03A2
        gbc.setState(0x42ed, 0xe349, 0xa800, 0x263f, 0x3283, 0x9f16, 0x0, 0x1);
        gbc.writeMem(0x42ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe349);
        EXPECT(gbc.pc(), 0x42ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03A3
        gbc.setState(0x4001, 0x748f, 0xd560, 0x17b7, 0xe866, 0xc42f, 0x0, 0x1);
        gbc.writeMem(0x4001, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x748f);
        EXPECT(gbc.pc(), 0x4003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03A4
        gbc.setState(0x1e99, 0x63ba, 0xf600, 0xee13, 0xb100, 0x9ba6, 0x0, 0x0);
        gbc.writeMem(0x1e99, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x63ba);
        EXPECT(gbc.pc(), 0x1e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03A5
        gbc.setState(0xbdfb, 0xccf5, 0x6e80, 0xe2d7, 0x1f09, 0x5b71, 0x1, 0x0);
        gbc.writeMem(0xbdfb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xccf5);
        EXPECT(gbc.pc(), 0xbdfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdfb), 0xcb);
        EXPECT(gbc.readMem(0xbdfc), 0x10);
        // CB 10 03A6
        gbc.setState(0xdfab, 0xd7c9, 0x33d0, 0x674d, 0xcbe5, 0xde93, 0x1, 0x1);
        gbc.writeMem(0xdfab, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xd7c9);
        EXPECT(gbc.pc(), 0xdfad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfab), 0xcb);
        EXPECT(gbc.readMem(0xdfac), 0x10);
        // CB 10 03A7
        gbc.setState(0xb82b, 0x1247, 0xa740, 0xf1d8, 0x832, 0x7c25, 0x0, 0x0);
        gbc.writeMem(0xb82b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x1247);
        EXPECT(gbc.pc(), 0xb82d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82b), 0xcb);
        EXPECT(gbc.readMem(0xb82c), 0x10);
        // CB 10 03A8
        gbc.setState(0x8c50, 0x4884, 0xa210, 0x6cea, 0xc967, 0x8c49, 0x0, 0x1);
        gbc.writeMem(0x8c50, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4884);
        EXPECT(gbc.pc(), 0x8c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c50), 0xcb);
        EXPECT(gbc.readMem(0x8c51), 0x10);
        // CB 10 03A9
        gbc.setState(0x4e2f, 0xef8d, 0x1740, 0xb484, 0xe7d, 0x1f2a, 0x1, 0x1);
        gbc.writeMem(0x4e2f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xef8d);
        EXPECT(gbc.pc(), 0x4e31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03AA
        gbc.setState(0xa364, 0xcff6, 0xbd20, 0xdf2e, 0x9b06, 0x7f9b, 0x1, 0x1);
        gbc.writeMem(0xa364, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcff6);
        EXPECT(gbc.pc(), 0xa366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa364), 0xcb);
        EXPECT(gbc.readMem(0xa365), 0x10);
        // CB 10 03AB
        gbc.setState(0x66a, 0x8df2, 0x12c0, 0xd3ac, 0x3d70, 0xd7e2, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8df2);
        EXPECT(gbc.pc(), 0x66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03AC
        gbc.setState(0x9118, 0xd27e, 0x6770, 0x3b8, 0xc836, 0xe24e, 0x0, 0x1);
        gbc.writeMem(0x9118, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd27e);
        EXPECT(gbc.pc(), 0x911a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9118), 0xcb);
        EXPECT(gbc.readMem(0x9119), 0x10);
        // CB 10 03AD
        gbc.setState(0x1a39, 0x816d, 0x6740, 0xa647, 0xd96a, 0xbae2, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x816d);
        EXPECT(gbc.pc(), 0x1a3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03AE
        gbc.setState(0x7c97, 0xb3c7, 0xe0d0, 0x2d8c, 0x8736, 0x466e, 0x0, 0x1);
        gbc.writeMem(0x7c97, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb3c7);
        EXPECT(gbc.pc(), 0x7c99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03AF
        gbc.setState(0x6eb3, 0xe8e5, 0x2640, 0x4f68, 0x1446, 0xdf29, 0x1, 0x0);
        gbc.writeMem(0x6eb3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe8e5);
        EXPECT(gbc.pc(), 0x6eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03B0
        gbc.setState(0x5ed9, 0x1f1f, 0xb2b0, 0xd41d, 0xe768, 0xa485, 0x1, 0x1);
        gbc.writeMem(0x5ed9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1f1f);
        EXPECT(gbc.pc(), 0x5edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03B1
        gbc.setState(0x4c53, 0xe9c1, 0x46d0, 0xa90b, 0xec93, 0xcad9, 0x0, 0x0);
        gbc.writeMem(0x4c53, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe9c1);
        EXPECT(gbc.pc(), 0x4c55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03B2
        gbc.setState(0xc500, 0x9648, 0x32b0, 0x657c, 0x1989, 0xa431, 0x0, 0x0);
        gbc.writeMem(0xc500, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9648);
        EXPECT(gbc.pc(), 0xc502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc500), 0xcb);
        EXPECT(gbc.readMem(0xc501), 0x10);
        // CB 10 03B3
        gbc.setState(0x9741, 0xfc4d, 0x1b10, 0x906e, 0xd37e, 0x11c9, 0x1, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xfc4d);
        EXPECT(gbc.pc(), 0x9743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9741), 0xcb);
        EXPECT(gbc.readMem(0x9742), 0x10);
        // CB 10 03B4
        gbc.setState(0xd48f, 0x64ad, 0xe60, 0x38ea, 0x866, 0x735d, 0x1, 0x1);
        gbc.writeMem(0xd48f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x64ad);
        EXPECT(gbc.pc(), 0xd491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48f), 0xcb);
        EXPECT(gbc.readMem(0xd490), 0x10);
        // CB 10 03B5
        gbc.setState(0x9959, 0x78ab, 0x7d40, 0x78e, 0x5395, 0x6ed8, 0x1, 0x0);
        gbc.writeMem(0x9959, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x78ab);
        EXPECT(gbc.pc(), 0x995b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9959), 0xcb);
        EXPECT(gbc.readMem(0x995a), 0x10);
        // CB 10 03B6
        gbc.setState(0xbf4d, 0x8be1, 0xd7e0, 0xb97c, 0x4dcc, 0x532a, 0x0, 0x0);
        gbc.writeMem(0xbf4d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8be1);
        EXPECT(gbc.pc(), 0xbf4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf4d), 0xcb);
        EXPECT(gbc.readMem(0xbf4e), 0x10);
        // CB 10 03B7
        gbc.setState(0xc9a0, 0x3162, 0x8fa0, 0x7a00, 0x4a9f, 0x8ead, 0x0, 0x0);
        gbc.writeMem(0xc9a0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3162);
        EXPECT(gbc.pc(), 0xc9a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a0), 0xcb);
        EXPECT(gbc.readMem(0xc9a1), 0x10);
        // CB 10 03B9
        gbc.setState(0xa7f6, 0x670f, 0xe9e0, 0xe144, 0x85d1, 0x4844, 0x0, 0x1);
        gbc.writeMem(0xa7f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x670f);
        EXPECT(gbc.pc(), 0xa7f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f6), 0xcb);
        EXPECT(gbc.readMem(0xa7f7), 0x10);
        // CB 10 03BA
        gbc.setState(0x2f86, 0x75e, 0xc890, 0xbf1b, 0x1461, 0xf521, 0x0, 0x1);
        gbc.writeMem(0x2f86, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x75e);
        EXPECT(gbc.pc(), 0x2f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03BB
        gbc.setState(0xe498, 0x4c09, 0x3f10, 0x14c3, 0xd11b, 0xb9b, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4c09);
        EXPECT(gbc.pc(), 0xe49a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe498), 0xcb);
        EXPECT(gbc.readMem(0xe499), 0x10);
        // CB 10 03BC
        gbc.setState(0xfd, 0x6473, 0x9390, 0xef80, 0x1ca7, 0xa197, 0x1, 0x0);
        gbc.writeMem(0xfd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6473);
        EXPECT(gbc.pc(), 0xff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03BD
        gbc.setState(0xe3ce, 0xf721, 0xefb0, 0x508a, 0x30c6, 0x457f, 0x1, 0x1);
        gbc.writeMem(0xe3ce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf721);
        EXPECT(gbc.pc(), 0xe3d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3ce), 0xcb);
        EXPECT(gbc.readMem(0xe3cf), 0x10);
        // CB 10 03BF
        gbc.setState(0xb4f1, 0x977f, 0x8530, 0xafd5, 0xce5e, 0x65a8, 0x0, 0x0);
        gbc.writeMem(0xb4f1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x977f);
        EXPECT(gbc.pc(), 0xb4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4f1), 0xcb);
        EXPECT(gbc.readMem(0xb4f2), 0x10);
        // CB 10 03C0
        gbc.setState(0x746b, 0x60af, 0xb810, 0x9b26, 0x89d5, 0x7ba3, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x60af);
        EXPECT(gbc.pc(), 0x746d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03C1
        gbc.setState(0x2df1, 0x4c9a, 0xb5e0, 0x9b58, 0x9b04, 0xbbfe, 0x1, 0x1);
        gbc.writeMem(0x2df1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4c9a);
        EXPECT(gbc.pc(), 0x2df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03C2
        gbc.setState(0x4553, 0x2888, 0x4270, 0x6e95, 0x31de, 0x126d, 0x1, 0x1);
        gbc.writeMem(0x4553, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2888);
        EXPECT(gbc.pc(), 0x4555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03C3
        gbc.setState(0xa9b, 0xa1a6, 0xc810, 0x33b0, 0x3cc5, 0xfd39, 0x1, 0x1);
        gbc.writeMem(0xa9b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa1a6);
        EXPECT(gbc.pc(), 0xa9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03C4
        gbc.setState(0x8488, 0xbfe3, 0x28e0, 0xd4ce, 0xbe96, 0x86d1, 0x0, 0x1);
        gbc.writeMem(0x8488, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbfe3);
        EXPECT(gbc.pc(), 0x848a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8488), 0xcb);
        EXPECT(gbc.readMem(0x8489), 0x10);
        // CB 10 03C5
        gbc.setState(0x2251, 0x58b6, 0xec80, 0x8d4c, 0x8bda, 0xd231, 0x0, 0x1);
        gbc.writeMem(0x2251, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x58b6);
        EXPECT(gbc.pc(), 0x2253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03C6
        gbc.setState(0x81f6, 0x9fa9, 0x33c0, 0xe4a0, 0x6143, 0xf91a, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x9fa9);
        EXPECT(gbc.pc(), 0x81f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f6), 0xcb);
        EXPECT(gbc.readMem(0x81f7), 0x10);
        // CB 10 03C7
        gbc.setState(0x2ea3, 0x6d9b, 0xdb0, 0x5adb, 0xa90e, 0x224, 0x0, 0x0);
        gbc.writeMem(0x2ea3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6d9b);
        EXPECT(gbc.pc(), 0x2ea5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03C8
        gbc.setState(0x1262, 0xfcd4, 0x5c0, 0x6dd9, 0x2da4, 0x304a, 0x0, 0x0);
        gbc.writeMem(0x1262, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xfcd4);
        EXPECT(gbc.pc(), 0x1264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03C9
        gbc.setState(0x2d45, 0x32ed, 0x9350, 0xa68c, 0xa2ce, 0xbdcb, 0x0, 0x1);
        gbc.writeMem(0x2d45, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x32ed);
        EXPECT(gbc.pc(), 0x2d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03CA
        gbc.setState(0x632c, 0xaef6, 0xf8b0, 0x4e70, 0x6a45, 0x40b1, 0x1, 0x0);
        gbc.writeMem(0x632c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaef6);
        EXPECT(gbc.pc(), 0x632e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03CB
        gbc.setState(0xcbed, 0x3e6c, 0xb640, 0xdee8, 0x5f6d, 0xe7a2, 0x1, 0x0);
        gbc.writeMem(0xcbed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3e6c);
        EXPECT(gbc.pc(), 0xcbef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbed), 0xcb);
        EXPECT(gbc.readMem(0xcbee), 0x10);
        // CB 10 03CC
        gbc.setState(0xd600, 0xb7d7, 0xe550, 0x9815, 0xeb49, 0x65bb, 0x0, 0x0);
        gbc.writeMem(0xd600, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb7d7);
        EXPECT(gbc.pc(), 0xd602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd600), 0xcb);
        EXPECT(gbc.readMem(0xd601), 0x10);
        // CB 10 03CD
        gbc.setState(0xba67, 0xef47, 0xead0, 0x67f1, 0xbdf1, 0x1c0d, 0x1, 0x0);
        gbc.writeMem(0xba67, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xef47);
        EXPECT(gbc.pc(), 0xba69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba67), 0xcb);
        EXPECT(gbc.readMem(0xba68), 0x10);
        // CB 10 03CE
        gbc.setState(0x9c80, 0x324a, 0x7570, 0x19be, 0x4741, 0x35c3, 0x0, 0x0);
        gbc.writeMem(0x9c80, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x324a);
        EXPECT(gbc.pc(), 0x9c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c80), 0xcb);
        EXPECT(gbc.readMem(0x9c81), 0x10);
        // CB 10 03CF
        gbc.setState(0x69e2, 0xf7c3, 0x7270, 0x678d, 0x4277, 0x2ca2, 0x1, 0x0);
        gbc.writeMem(0x69e2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf7c3);
        EXPECT(gbc.pc(), 0x69e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03D0
        gbc.setState(0xaa56, 0x7890, 0xa920, 0x20dc, 0x58c8, 0x3721, 0x1, 0x1);
        gbc.writeMem(0xaa56, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7890);
        EXPECT(gbc.pc(), 0xaa58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa56), 0xcb);
        EXPECT(gbc.readMem(0xaa57), 0x10);
        // CB 10 03D1
        gbc.setState(0xd494, 0x67f6, 0x5530, 0xf614, 0xeff, 0xd875, 0x0, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x67f6);
        EXPECT(gbc.pc(), 0xd496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd494), 0xcb);
        EXPECT(gbc.readMem(0xd495), 0x10);
        // CB 10 03D2
        gbc.setState(0x5257, 0x3ab3, 0xd8f0, 0xffd5, 0xb023, 0x1f3, 0x1, 0x0);
        gbc.writeMem(0x5257, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3ab3);
        EXPECT(gbc.pc(), 0x5259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03D3
        gbc.setState(0x6a9c, 0xc945, 0x45e0, 0xbb37, 0x299d, 0x2de7, 0x0, 0x1);
        gbc.writeMem(0x6a9c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc945);
        EXPECT(gbc.pc(), 0x6a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03D4
        gbc.setState(0xa3b, 0x22ef, 0xc210, 0xf7d0, 0x8e32, 0x4da2, 0x0, 0x0);
        gbc.writeMem(0xa3b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x22ef);
        EXPECT(gbc.pc(), 0xa3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03D5
        gbc.setState(0xda60, 0x2dfe, 0xade0, 0xe457, 0x769e, 0x3fb6, 0x0, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2dfe);
        EXPECT(gbc.pc(), 0xda62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda60), 0xcb);
        EXPECT(gbc.readMem(0xda61), 0x10);
        // CB 10 03D6
        gbc.setState(0xb265, 0x7e83, 0xfd80, 0x8092, 0x4e44, 0x4aae, 0x1, 0x1);
        gbc.writeMem(0xb265, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7e83);
        EXPECT(gbc.pc(), 0xb267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb265), 0xcb);
        EXPECT(gbc.readMem(0xb266), 0x10);
        // CB 10 03D7
        gbc.setState(0x8b7e, 0xb3ea, 0x1460, 0x9970, 0x6df7, 0x3bfb, 0x0, 0x1);
        gbc.writeMem(0x8b7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb3ea);
        EXPECT(gbc.pc(), 0x8b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7e), 0xcb);
        EXPECT(gbc.readMem(0x8b7f), 0x10);
        // CB 10 03D8
        gbc.setState(0xd096, 0x761c, 0x3470, 0x9552, 0x1f58, 0xf17c, 0x1, 0x0);
        gbc.writeMem(0xd096, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x761c);
        EXPECT(gbc.pc(), 0xd098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd096), 0xcb);
        EXPECT(gbc.readMem(0xd097), 0x10);
        // CB 10 03D9
        gbc.setState(0x537f, 0xe040, 0x830, 0x112d, 0x1987, 0xd6bc, 0x0, 0x1);
        gbc.writeMem(0x537f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe040);
        EXPECT(gbc.pc(), 0x5381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03DA
        gbc.setState(0x9a03, 0xaba9, 0x1040, 0xf12d, 0xf463, 0xb25e, 0x1, 0x1);
        gbc.writeMem(0x9a03, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xaba9);
        EXPECT(gbc.pc(), 0x9a05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a03), 0xcb);
        EXPECT(gbc.readMem(0x9a04), 0x10);
        // CB 10 03DB
        gbc.setState(0xd647, 0xe59b, 0x87b0, 0xaec8, 0x3678, 0x8637, 0x1, 0x0);
        gbc.writeMem(0xd647, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe59b);
        EXPECT(gbc.pc(), 0xd649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd647), 0xcb);
        EXPECT(gbc.readMem(0xd648), 0x10);
        // CB 10 03DC
        gbc.setState(0x68e1, 0xe3be, 0x1e60, 0x865b, 0xa0b6, 0xf747, 0x0, 0x1);
        gbc.writeMem(0x68e1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xe3be);
        EXPECT(gbc.pc(), 0x68e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03DD
        gbc.setState(0xa9de, 0x1048, 0xaea0, 0xc517, 0xff98, 0xdd46, 0x0, 0x0);
        gbc.writeMem(0xa9de, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1048);
        EXPECT(gbc.pc(), 0xa9e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9de), 0xcb);
        EXPECT(gbc.readMem(0xa9df), 0x10);
        // CB 10 03DE
        gbc.setState(0x41a7, 0xe8ee, 0x1d0, 0x6245, 0xc0a7, 0xa4e2, 0x0, 0x1);
        gbc.writeMem(0x41a7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe8ee);
        EXPECT(gbc.pc(), 0x41a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03DF
        gbc.setState(0xdf01, 0xf87a, 0x660, 0xe082, 0x193f, 0x8c75, 0x1, 0x1);
        gbc.writeMem(0xdf01, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf87a);
        EXPECT(gbc.pc(), 0xdf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf01), 0xcb);
        EXPECT(gbc.readMem(0xdf02), 0x10);
        // CB 10 03E0
        gbc.setState(0x1d16, 0x53c0, 0xf20, 0xf59c, 0x27a4, 0x51b0, 0x0, 0x1);
        gbc.writeMem(0x1d16, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x53c0);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03E1
        gbc.setState(0x3174, 0xc9c8, 0x60e0, 0xbec0, 0x99d5, 0x44c7, 0x1, 0x0);
        gbc.writeMem(0x3174, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc9c8);
        EXPECT(gbc.pc(), 0x3176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03E2
        gbc.setState(0xaef2, 0xbf05, 0xc0, 0x2dfe, 0xeef7, 0xd24d, 0x1, 0x1);
        gbc.writeMem(0xaef2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbf05);
        EXPECT(gbc.pc(), 0xaef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef2), 0xcb);
        EXPECT(gbc.readMem(0xaef3), 0x10);
        // CB 10 03E3
        gbc.setState(0x5631, 0x2403, 0xfc60, 0xab67, 0xd395, 0xa6b9, 0x1, 0x1);
        gbc.writeMem(0x5631, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2403);
        EXPECT(gbc.pc(), 0x5633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03E4
        gbc.setState(0x7fe6, 0x6d61, 0xf080, 0x35d5, 0x9bcb, 0xdc9a, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6d61);
        EXPECT(gbc.pc(), 0x7fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 10 03E5
        gbc.setState(0x5446, 0x5ebf, 0x2840, 0xe5d5, 0xf36d, 0x152b, 0x0, 0x1);
        gbc.writeMem(0x5446, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5ebf);
        EXPECT(gbc.pc(), 0x5448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03E6
        gbc.setState(0x6f5a, 0x3711, 0xbe00, 0xe777, 0x9922, 0xefae, 0x0, 0x1);
        gbc.writeMem(0x6f5a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3711);
        EXPECT(gbc.pc(), 0x6f5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 10 03E7
        gbc.setState(0x9279, 0x4395, 0xa060, 0xdea8, 0xe163, 0x4f87, 0x1, 0x1);
        gbc.writeMem(0x9279, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4395);
        EXPECT(gbc.pc(), 0x927b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9279), 0xcb);
        EXPECT(gbc.readMem(0x927a), 0x10);
    }
