    TEST(gbcemu, opcode_cb_10) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 10 0000
        gbc.setState(0x98f9, 0x2b26, 0x1580, 0x1f62, 0x6476, 0xb3e7, 0x1, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f9));
        EXPECT(0x10, gbc.readMem(0x98fa));
        // CB 10 0001
        gbc.setState(0xe4b4, 0xf502, 0x6a80, 0xce9f, 0x85ef, 0x46e5, 0x1, 0x1);
        gbc.writeMem(0xe4b4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf502, gbc.sp());
        EXPECT(0xe4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b4));
        EXPECT(0x10, gbc.readMem(0xe4b5));
        // CB 10 0002
        gbc.setState(0x2ec, 0x175e, 0x34e0, 0xb7fc, 0xdca4, 0xc596, 0x0, 0x0);
        gbc.writeMem(0x2ec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x175e, gbc.sp());
        EXPECT(0x2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0003
        gbc.setState(0x9446, 0x6a5f, 0x20b0, 0x8f86, 0x7e7d, 0x464d, 0x0, 0x1);
        gbc.writeMem(0x9446, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6a5f, gbc.sp());
        EXPECT(0x9448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9446));
        EXPECT(0x10, gbc.readMem(0x9447));
        // CB 10 0004
        gbc.setState(0x25d9, 0xa0ae, 0x2dd0, 0x6a12, 0x9366, 0x6021, 0x0, 0x1);
        gbc.writeMem(0x25d9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa0ae, gbc.sp());
        EXPECT(0x25db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0005
        gbc.setState(0xae6b, 0x2659, 0xad40, 0x2504, 0x1641, 0xc4a2, 0x1, 0x0);
        gbc.writeMem(0xae6b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xae6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6b));
        EXPECT(0x10, gbc.readMem(0xae6c));
        // CB 10 0006
        gbc.setState(0x1469, 0x7a19, 0xb290, 0x373, 0xcc1d, 0x5c9, 0x0, 0x0);
        gbc.writeMem(0x1469, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7a19, gbc.sp());
        EXPECT(0x146b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0007
        gbc.setState(0xa43a, 0xa05, 0xcd80, 0x526d, 0x35bd, 0x6d59, 0x1, 0x1);
        gbc.writeMem(0xa43a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0xa43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43a));
        EXPECT(0x10, gbc.readMem(0xa43b));
        // CB 10 0008
        gbc.setState(0x5c77, 0xc9a8, 0xcec0, 0x88f, 0xecc7, 0x7442, 0x0, 0x1);
        gbc.writeMem(0x5c77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc9a8, gbc.sp());
        EXPECT(0x5c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0009
        gbc.setState(0xe7e8, 0x6279, 0xf550, 0x225c, 0x1837, 0x862e, 0x0, 0x1);
        gbc.writeMem(0xe7e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6279, gbc.sp());
        EXPECT(0xe7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e8));
        EXPECT(0x10, gbc.readMem(0xe7e9));
        // CB 10 000A
        gbc.setState(0xef23, 0x1405, 0x72e0, 0x2a64, 0xfef2, 0x69e0, 0x0, 0x0);
        gbc.writeMem(0xef23, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1405, gbc.sp());
        EXPECT(0xef25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef23));
        EXPECT(0x10, gbc.readMem(0xef24));
        // CB 10 000B
        gbc.setState(0x346d, 0x99d2, 0xb0b0, 0xa8ad, 0x11e1, 0xe3cf, 0x1, 0x0);
        gbc.writeMem(0x346d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x99d2, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 000C
        gbc.setState(0x2062, 0x331c, 0x4b70, 0x4f90, 0xcc14, 0xa38a, 0x1, 0x0);
        gbc.writeMem(0x2062, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x331c, gbc.sp());
        EXPECT(0x2064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 000D
        gbc.setState(0x1e0b, 0x249c, 0x6590, 0x7f8e, 0x953d, 0x10e3, 0x1, 0x0);
        gbc.writeMem(0x1e0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x249c, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 000E
        gbc.setState(0xb33c, 0xb1b5, 0xe200, 0x6307, 0x7afe, 0x5b4b, 0x0, 0x1);
        gbc.writeMem(0xb33c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb1b5, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33c));
        EXPECT(0x10, gbc.readMem(0xb33d));
        // CB 10 000F
        gbc.setState(0xa943, 0x6dfb, 0xf0e0, 0xf551, 0x7a90, 0xe828, 0x1, 0x1);
        gbc.writeMem(0xa943, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6dfb, gbc.sp());
        EXPECT(0xa945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa943));
        EXPECT(0x10, gbc.readMem(0xa944));
        // CB 10 0010
        gbc.setState(0x3e79, 0xe2c6, 0x4b50, 0x90d0, 0xc2a9, 0x2d6b, 0x0, 0x1);
        gbc.writeMem(0x3e79, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe2c6, gbc.sp());
        EXPECT(0x3e7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0011
        gbc.setState(0x1c1a, 0xe12d, 0xc30, 0x7594, 0x5638, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0x1c1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe12d, gbc.sp());
        EXPECT(0x1c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0012
        gbc.setState(0x24b8, 0x1476, 0xd00, 0xfd28, 0x32aa, 0x9573, 0x0, 0x1);
        gbc.writeMem(0x24b8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1476, gbc.sp());
        EXPECT(0x24ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0013
        gbc.setState(0x7313, 0xdfe9, 0x83e0, 0xd41, 0xd821, 0x5dd9, 0x1, 0x1);
        gbc.writeMem(0x7313, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0015
        gbc.setState(0x7132, 0x58fc, 0xbc10, 0x2094, 0xd9f8, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x7132, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x58fc, gbc.sp());
        EXPECT(0x7134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0016
        gbc.setState(0xc8ce, 0x9b2f, 0x5ef0, 0xf265, 0xe760, 0x76ca, 0x1, 0x0);
        gbc.writeMem(0xc8ce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9b2f, gbc.sp());
        EXPECT(0xc8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ce));
        EXPECT(0x10, gbc.readMem(0xc8cf));
        // CB 10 0017
        gbc.setState(0x38ba, 0xb0f5, 0x91f0, 0xaea3, 0x78, 0x1f60, 0x0, 0x1);
        gbc.writeMem(0x38ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb0f5, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0018
        gbc.setState(0x814d, 0xeb54, 0x32b0, 0x422b, 0x20f2, 0xc13, 0x0, 0x1);
        gbc.writeMem(0x814d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeb54, gbc.sp());
        EXPECT(0x814f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x814d));
        EXPECT(0x10, gbc.readMem(0x814e));
        // CB 10 0019
        gbc.setState(0x9e93, 0xc927, 0x3df0, 0x99ef, 0xf013, 0x7436, 0x0, 0x1);
        gbc.writeMem(0x9e93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc927, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e93));
        EXPECT(0x10, gbc.readMem(0x9e94));
        // CB 10 001A
        gbc.setState(0x5522, 0x25b0, 0xd60, 0xc404, 0xa38b, 0x680e, 0x0, 0x1);
        gbc.writeMem(0x5522, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x25b0, gbc.sp());
        EXPECT(0x5524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 001B
        gbc.setState(0x2525, 0x459f, 0x62f0, 0xdd97, 0x6896, 0x1c06, 0x0, 0x1);
        gbc.writeMem(0x2525, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x459f, gbc.sp());
        EXPECT(0x2527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 001C
        gbc.setState(0xdb01, 0x27bd, 0xbce0, 0x86a5, 0x8872, 0xb5e9, 0x1, 0x0);
        gbc.writeMem(0xdb01, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x27bd, gbc.sp());
        EXPECT(0xdb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb01));
        EXPECT(0x10, gbc.readMem(0xdb02));
        // CB 10 001D
        gbc.setState(0x42c, 0x9e16, 0x3300, 0xc692, 0xd475, 0xaf9d, 0x0, 0x1);
        gbc.writeMem(0x42c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9e16, gbc.sp());
        EXPECT(0x42e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 001E
        gbc.setState(0x2d86, 0x58c1, 0x84b0, 0x138c, 0xc50d, 0x9504, 0x0, 0x0);
        gbc.writeMem(0x2d86, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x58c1, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 001F
        gbc.setState(0xb78, 0x5a2d, 0x6cc0, 0xf6cf, 0xf4fb, 0x2af4, 0x1, 0x0);
        gbc.writeMem(0xb78, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5a2d, gbc.sp());
        EXPECT(0xb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0020
        gbc.setState(0x30ae, 0x6418, 0x18c0, 0x21b2, 0x7de6, 0xbb1a, 0x0, 0x1);
        gbc.writeMem(0x30ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6418, gbc.sp());
        EXPECT(0x30b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0021
        gbc.setState(0x60ef, 0x9e2a, 0x3270, 0xd62, 0x9f23, 0xc54d, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9e2a, gbc.sp());
        EXPECT(0x60f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0022
        gbc.setState(0x6f0, 0xc5de, 0x4600, 0xeea0, 0x3d69, 0x49fe, 0x0, 0x0);
        gbc.writeMem(0x6f0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc5de, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0023
        gbc.setState(0x35ce, 0xed97, 0xaba0, 0x772f, 0x6a92, 0xc2db, 0x1, 0x0);
        gbc.writeMem(0x35ce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0024
        gbc.setState(0x9270, 0xc717, 0xe40, 0x8b5a, 0xd623, 0x6813, 0x1, 0x0);
        gbc.writeMem(0x9270, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc717, gbc.sp());
        EXPECT(0x9272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9270));
        EXPECT(0x10, gbc.readMem(0x9271));
        // CB 10 0025
        gbc.setState(0xc45e, 0xa4ca, 0x71e0, 0xa0e2, 0xb86, 0xd23f, 0x0, 0x1);
        gbc.writeMem(0xc45e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa4ca, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45e));
        EXPECT(0x10, gbc.readMem(0xc45f));
        // CB 10 0026
        gbc.setState(0x95e, 0x3f06, 0x2900, 0x56bb, 0xd7a, 0x1367, 0x0, 0x1);
        gbc.writeMem(0x95e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3f06, gbc.sp());
        EXPECT(0x960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0027
        gbc.setState(0x404b, 0xd1cc, 0xbb70, 0x650, 0xbb47, 0x1983, 0x0, 0x1);
        gbc.writeMem(0x404b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd1cc, gbc.sp());
        EXPECT(0x404d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0028
        gbc.setState(0x9c99, 0x541c, 0x72f0, 0x7849, 0x2a2d, 0x72d2, 0x1, 0x1);
        gbc.writeMem(0x9c99, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x541c, gbc.sp());
        EXPECT(0x9c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c99));
        EXPECT(0x10, gbc.readMem(0x9c9a));
        // CB 10 0029
        gbc.setState(0xd5ff, 0x53cc, 0xcf40, 0x8bc8, 0x8e27, 0x6620, 0x1, 0x0);
        gbc.writeMem(0xd5ff, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x53cc, gbc.sp());
        EXPECT(0xd601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ff));
        EXPECT(0x10, gbc.readMem(0xd600));
        // CB 10 002A
        gbc.setState(0x2814, 0x4553, 0x5a90, 0x9a3b, 0xdb37, 0xbb3b, 0x1, 0x0);
        gbc.writeMem(0x2814, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4553, gbc.sp());
        EXPECT(0x2816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 002B
        gbc.setState(0x889b, 0x91e3, 0xaa00, 0xafb2, 0x6833, 0xf620, 0x0, 0x0);
        gbc.writeMem(0x889b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x91e3, gbc.sp());
        EXPECT(0x889d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x889b));
        EXPECT(0x10, gbc.readMem(0x889c));
        // CB 10 002C
        gbc.setState(0x6bb9, 0x11e2, 0xbe20, 0xb5c9, 0x8632, 0x98a0, 0x0, 0x1);
        gbc.writeMem(0x6bb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0x6bbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 002D
        gbc.setState(0x9886, 0x2e5a, 0xffc0, 0xb4c9, 0xe0a, 0xf460, 0x0, 0x1);
        gbc.writeMem(0x9886, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0x9888, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9886));
        EXPECT(0x10, gbc.readMem(0x9887));
        // CB 10 002E
        gbc.setState(0x990d, 0xc1ca, 0x1a30, 0xc207, 0x532d, 0x2cfd, 0x1, 0x0);
        gbc.writeMem(0x990d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc1ca, gbc.sp());
        EXPECT(0x990f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990d));
        EXPECT(0x10, gbc.readMem(0x990e));
        // CB 10 002F
        gbc.setState(0x5af7, 0x1c2, 0x6ce0, 0x1be, 0xa9c1, 0x2416, 0x0, 0x1);
        gbc.writeMem(0x5af7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1c2, gbc.sp());
        EXPECT(0x5af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0030
        gbc.setState(0x175, 0xdd3b, 0xedf0, 0x4b0b, 0x45bf, 0x4971, 0x1, 0x0);
        gbc.writeMem(0x175, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdd3b, gbc.sp());
        EXPECT(0x177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0032
        gbc.setState(0xb158, 0x458c, 0x2070, 0x3bf2, 0xcc98, 0x4372, 0x1, 0x1);
        gbc.writeMem(0xb158, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0xb15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb158));
        EXPECT(0x10, gbc.readMem(0xb159));
        // CB 10 0033
        gbc.setState(0xd968, 0x2d86, 0xe3c0, 0x73d, 0x2ca3, 0x1a9a, 0x0, 0x0);
        gbc.writeMem(0xd968, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2d86, gbc.sp());
        EXPECT(0xd96a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd968));
        EXPECT(0x10, gbc.readMem(0xd969));
        // CB 10 0034
        gbc.setState(0x2474, 0xa7d2, 0x45c0, 0x8130, 0x561c, 0xc7aa, 0x1, 0x1);
        gbc.writeMem(0x2474, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa7d2, gbc.sp());
        EXPECT(0x2476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0035
        gbc.setState(0x675a, 0xdee8, 0x7bd0, 0x6d7e, 0xc3a1, 0x1637, 0x1, 0x0);
        gbc.writeMem(0x675a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0036
        gbc.setState(0x6304, 0x9a3, 0xf270, 0x4d1e, 0x46ec, 0xdca9, 0x1, 0x1);
        gbc.writeMem(0x6304, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9a3, gbc.sp());
        EXPECT(0x6306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0037
        gbc.setState(0xd927, 0x2186, 0x86e0, 0xfae7, 0x177d, 0x1d38, 0x1, 0x1);
        gbc.writeMem(0xd927, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2186, gbc.sp());
        EXPECT(0xd929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd927));
        EXPECT(0x10, gbc.readMem(0xd928));
        // CB 10 0038
        gbc.setState(0x19c7, 0xa7df, 0xf970, 0x76e5, 0x3704, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0x19c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0x19c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0039
        gbc.setState(0xccf1, 0x557b, 0x7770, 0xfba6, 0x251a, 0x2d17, 0x0, 0x1);
        gbc.writeMem(0xccf1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x557b, gbc.sp());
        EXPECT(0xccf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf1));
        EXPECT(0x10, gbc.readMem(0xccf2));
        // CB 10 003A
        gbc.setState(0x8968, 0x605e, 0x69a0, 0xe793, 0x11a6, 0x5303, 0x1, 0x0);
        gbc.writeMem(0x8968, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x605e, gbc.sp());
        EXPECT(0x896a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8968));
        EXPECT(0x10, gbc.readMem(0x8969));
        // CB 10 003B
        gbc.setState(0x9c28, 0x6849, 0xf910, 0xc96e, 0x218e, 0xc611, 0x1, 0x0);
        gbc.writeMem(0x9c28, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6849, gbc.sp());
        EXPECT(0x9c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c28));
        EXPECT(0x10, gbc.readMem(0x9c29));
        // CB 10 003C
        gbc.setState(0xe4, 0xd57, 0xbc40, 0x7ea2, 0x7e19, 0xd36c, 0x1, 0x1);
        gbc.writeMem(0xe4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd57, gbc.sp());
        EXPECT(0xe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 003D
        gbc.setState(0xc497, 0x9d22, 0x52d0, 0x4dba, 0x593b, 0xdc8d, 0x1, 0x0);
        gbc.writeMem(0xc497, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9d22, gbc.sp());
        EXPECT(0xc499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc497));
        EXPECT(0x10, gbc.readMem(0xc498));
        // CB 10 003E
        gbc.setState(0xc9c8, 0xdf69, 0x9290, 0xbe7e, 0xfeb6, 0x83f5, 0x1, 0x0);
        gbc.writeMem(0xc9c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdf69, gbc.sp());
        EXPECT(0xc9ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c8));
        EXPECT(0x10, gbc.readMem(0xc9c9));
        // CB 10 003F
        gbc.setState(0x9f80, 0x57c0, 0x53f0, 0xbf84, 0x3881, 0xafde, 0x0, 0x1);
        gbc.writeMem(0x9f80, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x57c0, gbc.sp());
        EXPECT(0x9f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f80));
        EXPECT(0x10, gbc.readMem(0x9f81));
        // CB 10 0041
        gbc.setState(0x1a8b, 0xa5f0, 0xb640, 0x2d3b, 0x489a, 0x4cb1, 0x0, 0x1);
        gbc.writeMem(0x1a8b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa5f0, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0042
        gbc.setState(0xdcac, 0xfb71, 0xe970, 0x721d, 0x7ec9, 0xdc26, 0x0, 0x0);
        gbc.writeMem(0xdcac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0xdcae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcac));
        EXPECT(0x10, gbc.readMem(0xdcad));
        // CB 10 0043
        gbc.setState(0xae68, 0xe43e, 0x4720, 0xf105, 0x4019, 0x3d62, 0x1, 0x1);
        gbc.writeMem(0xae68, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe43e, gbc.sp());
        EXPECT(0xae6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae68));
        EXPECT(0x10, gbc.readMem(0xae69));
        // CB 10 0044
        gbc.setState(0x8811, 0x7649, 0xe2d0, 0x4811, 0x7b6f, 0x8239, 0x0, 0x1);
        gbc.writeMem(0x8811, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7649, gbc.sp());
        EXPECT(0x8813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8811));
        EXPECT(0x10, gbc.readMem(0x8812));
        // CB 10 0045
        gbc.setState(0xe9c9, 0x18b1, 0x5c80, 0xd39d, 0xdc95, 0x3dd6, 0x1, 0x1);
        gbc.writeMem(0xe9c9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x18b1, gbc.sp());
        EXPECT(0xe9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c9));
        EXPECT(0x10, gbc.readMem(0xe9ca));
        // CB 10 0046
        gbc.setState(0x58c4, 0xc499, 0xd60, 0x216, 0x9a0a, 0x5eb6, 0x0, 0x1);
        gbc.writeMem(0x58c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc499, gbc.sp());
        EXPECT(0x58c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0047
        gbc.setState(0x301d, 0xb4ce, 0xd510, 0x92d2, 0x3451, 0x1b60, 0x1, 0x1);
        gbc.writeMem(0x301d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb4ce, gbc.sp());
        EXPECT(0x301f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0048
        gbc.setState(0x89bd, 0xa0c7, 0xae0, 0x7e20, 0xb7f2, 0x555d, 0x1, 0x0);
        gbc.writeMem(0x89bd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa0c7, gbc.sp());
        EXPECT(0x89bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bd));
        EXPECT(0x10, gbc.readMem(0x89be));
        // CB 10 0049
        gbc.setState(0x6e69, 0x9008, 0x8860, 0x8333, 0xb995, 0x4fe6, 0x1, 0x1);
        gbc.writeMem(0x6e69, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9008, gbc.sp());
        EXPECT(0x6e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 004A
        gbc.setState(0x78dc, 0xa475, 0x98f0, 0x4ce, 0xe115, 0x845c, 0x0, 0x1);
        gbc.writeMem(0x78dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa475, gbc.sp());
        EXPECT(0x78de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 004B
        gbc.setState(0xd1bf, 0x5ca7, 0xfdc0, 0x59ec, 0xdb03, 0xd709, 0x0, 0x1);
        gbc.writeMem(0xd1bf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5ca7, gbc.sp());
        EXPECT(0xd1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bf));
        EXPECT(0x10, gbc.readMem(0xd1c0));
        // CB 10 004D
        gbc.setState(0x7b77, 0x971c, 0x25c0, 0x9199, 0x60ce, 0x5988, 0x1, 0x1);
        gbc.writeMem(0x7b77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x971c, gbc.sp());
        EXPECT(0x7b79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 004E
        gbc.setState(0x9464, 0x6d09, 0x43d0, 0x4e4a, 0x3d4b, 0x4e26, 0x1, 0x0);
        gbc.writeMem(0x9464, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6d09, gbc.sp());
        EXPECT(0x9466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9464));
        EXPECT(0x10, gbc.readMem(0x9465));
        // CB 10 004F
        gbc.setState(0xb423, 0x3523, 0x3c20, 0xebdf, 0xed02, 0x4a7e, 0x1, 0x0);
        gbc.writeMem(0xb423, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3523, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb423));
        EXPECT(0x10, gbc.readMem(0xb424));
        // CB 10 0050
        gbc.setState(0xe4e1, 0xf060, 0xf40, 0x3e0f, 0x236b, 0xb1af, 0x1, 0x1);
        gbc.writeMem(0xe4e1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0xe4e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e1));
        EXPECT(0x10, gbc.readMem(0xe4e2));
        // CB 10 0051
        gbc.setState(0x586e, 0x701f, 0xbcc0, 0xd5f6, 0x43a0, 0xf58d, 0x1, 0x0);
        gbc.writeMem(0x586e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x701f, gbc.sp());
        EXPECT(0x5870, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0052
        gbc.setState(0x5eb1, 0xda31, 0x55d0, 0x4910, 0xfba7, 0x654d, 0x0, 0x0);
        gbc.writeMem(0x5eb1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xda31, gbc.sp());
        EXPECT(0x5eb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0053
        gbc.setState(0xe956, 0xaef6, 0x80d0, 0xce60, 0xc2b9, 0xaf01, 0x1, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xaef6, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe956));
        EXPECT(0x10, gbc.readMem(0xe957));
        // CB 10 0054
        gbc.setState(0x4650, 0xfb3d, 0x70b0, 0x92a0, 0xdd5c, 0x7a25, 0x1, 0x1);
        gbc.writeMem(0x4650, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0x4652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0055
        gbc.setState(0xd49a, 0x454f, 0xdf0, 0x8bef, 0x4bb4, 0xb849, 0x1, 0x1);
        gbc.writeMem(0xd49a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0xd49c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49a));
        EXPECT(0x10, gbc.readMem(0xd49b));
        // CB 10 0056
        gbc.setState(0x6459, 0x10b4, 0x7080, 0x2858, 0xcc92, 0xb9e7, 0x1, 0x0);
        gbc.writeMem(0x6459, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x10b4, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0057
        gbc.setState(0x7c7e, 0xd8b8, 0x7060, 0x77bc, 0x7608, 0x8cbf, 0x0, 0x0);
        gbc.writeMem(0x7c7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd8b8, gbc.sp());
        EXPECT(0x7c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0058
        gbc.setState(0xc67d, 0xcc6d, 0x5e10, 0x9fa0, 0x37d0, 0x1aea, 0x0, 0x1);
        gbc.writeMem(0xc67d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcc6d, gbc.sp());
        EXPECT(0xc67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67d));
        EXPECT(0x10, gbc.readMem(0xc67e));
        // CB 10 0059
        gbc.setState(0x421, 0x6ed6, 0xa5a0, 0x28b9, 0xe3c0, 0x44f8, 0x1, 0x1);
        gbc.writeMem(0x421, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6ed6, gbc.sp());
        EXPECT(0x423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 005A
        gbc.setState(0x686a, 0xd380, 0xd940, 0x112d, 0xf61, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x686a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd380, gbc.sp());
        EXPECT(0x686c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 005B
        gbc.setState(0x3da1, 0x13c3, 0x3bf0, 0x9ca6, 0x122f, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0x3da1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x13c3, gbc.sp());
        EXPECT(0x3da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 005C
        gbc.setState(0x953c, 0xf071, 0xf500, 0xcbbb, 0x7887, 0x9e87, 0x0, 0x0);
        gbc.writeMem(0x953c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf071, gbc.sp());
        EXPECT(0x953e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953c));
        EXPECT(0x10, gbc.readMem(0x953d));
        // CB 10 005D
        gbc.setState(0x194a, 0xf136, 0xa5a0, 0x63a, 0xdda9, 0x2b39, 0x0, 0x1);
        gbc.writeMem(0x194a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0x194c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 005E
        gbc.setState(0x1055, 0xf366, 0x3de0, 0x4e99, 0x8710, 0x3dce, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf366, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 005F
        gbc.setState(0x319e, 0x95e5, 0xcb20, 0xb83e, 0xde2c, 0x305f, 0x1, 0x0);
        gbc.writeMem(0x319e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x95e5, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0060
        gbc.setState(0xe587, 0x13e2, 0x28f0, 0xde80, 0xd516, 0x8bc5, 0x0, 0x0);
        gbc.writeMem(0xe587, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0xe589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe587));
        EXPECT(0x10, gbc.readMem(0xe588));
        // CB 10 0061
        gbc.setState(0x6886, 0xa858, 0x1cf0, 0x29e8, 0x2760, 0xf39, 0x1, 0x1);
        gbc.writeMem(0x6886, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa858, gbc.sp());
        EXPECT(0x6888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0062
        gbc.setState(0xc5c3, 0xcca5, 0x4090, 0xd46f, 0x8955, 0x5a5f, 0x0, 0x1);
        gbc.writeMem(0xc5c3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcca5, gbc.sp());
        EXPECT(0xc5c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c3));
        EXPECT(0x10, gbc.readMem(0xc5c4));
        // CB 10 0063
        gbc.setState(0x351c, 0xe259, 0x7220, 0xf800, 0xdfa2, 0xf1f3, 0x1, 0x0);
        gbc.writeMem(0x351c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe259, gbc.sp());
        EXPECT(0x351e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0064
        gbc.setState(0xc8ec, 0x5c2, 0xcd70, 0x2247, 0x8bd0, 0xc105, 0x1, 0x1);
        gbc.writeMem(0xc8ec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5c2, gbc.sp());
        EXPECT(0xc8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ec));
        EXPECT(0x10, gbc.readMem(0xc8ed));
        // CB 10 0065
        gbc.setState(0x55d8, 0xeecb, 0xe420, 0xd0e3, 0x79d3, 0x9cc2, 0x1, 0x1);
        gbc.writeMem(0x55d8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xeecb, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0066
        gbc.setState(0x3cf8, 0x1578, 0x90e0, 0xebd7, 0x1699, 0x8588, 0x0, 0x0);
        gbc.writeMem(0x3cf8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1578, gbc.sp());
        EXPECT(0x3cfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0067
        gbc.setState(0x7ec1, 0xa2e1, 0xc8c0, 0x5f83, 0xb3a4, 0x6def, 0x0, 0x0);
        gbc.writeMem(0x7ec1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa2e1, gbc.sp());
        EXPECT(0x7ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0068
        gbc.setState(0x48cf, 0xa140, 0xabc0, 0x1d0b, 0xbaee, 0x4adc, 0x0, 0x1);
        gbc.writeMem(0x48cf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa140, gbc.sp());
        EXPECT(0x48d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0069
        gbc.setState(0x9f0d, 0x9ae4, 0x9fa0, 0x105f, 0x9acc, 0xf8f7, 0x0, 0x1);
        gbc.writeMem(0x9f0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9ae4, gbc.sp());
        EXPECT(0x9f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f0d));
        EXPECT(0x10, gbc.readMem(0x9f0e));
        // CB 10 006A
        gbc.setState(0x53bb, 0xfcf3, 0x1c80, 0xdcec, 0x88b6, 0xf7c1, 0x1, 0x0);
        gbc.writeMem(0x53bb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xfcf3, gbc.sp());
        EXPECT(0x53bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 006B
        gbc.setState(0x42de, 0x4e29, 0xf340, 0x2173, 0x4551, 0xa389, 0x0, 0x1);
        gbc.writeMem(0x42de, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4e29, gbc.sp());
        EXPECT(0x42e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 006C
        gbc.setState(0x1c6f, 0x3166, 0xaa20, 0x421f, 0xdd5d, 0xc5ad, 0x1, 0x0);
        gbc.writeMem(0x1c6f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3166, gbc.sp());
        EXPECT(0x1c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 006D
        gbc.setState(0x7816, 0xe235, 0xdfe0, 0xf798, 0x9b01, 0xe370, 0x0, 0x1);
        gbc.writeMem(0x7816, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe235, gbc.sp());
        EXPECT(0x7818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 006E
        gbc.setState(0xb412, 0x12c6, 0xed30, 0x8d33, 0xbef0, 0x3195, 0x0, 0x1);
        gbc.writeMem(0xb412, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x12c6, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb412));
        EXPECT(0x10, gbc.readMem(0xb413));
        // CB 10 006F
        gbc.setState(0xc020, 0x64f5, 0xc5b0, 0x7f82, 0xe008, 0xfa0c, 0x0, 0x0);
        gbc.writeMem(0xc020, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x64f5, gbc.sp());
        EXPECT(0xc022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc020));
        EXPECT(0x10, gbc.readMem(0xc021));
        // CB 10 0070
        gbc.setState(0x4fde, 0x342d, 0x43d0, 0xc0c1, 0xe6f4, 0x83ca, 0x1, 0x1);
        gbc.writeMem(0x4fde, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0x4fe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0071
        gbc.setState(0x2116, 0xb684, 0x8cf0, 0x7aa, 0x1584, 0x1e10, 0x1, 0x1);
        gbc.writeMem(0x2116, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0x2118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0072
        gbc.setState(0x25b7, 0x5092, 0x3e00, 0xee65, 0x9d5d, 0x93e9, 0x0, 0x0);
        gbc.writeMem(0x25b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0x25b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0073
        gbc.setState(0xe7c7, 0x770d, 0x32c0, 0xb4b3, 0x1be3, 0xb0b7, 0x0, 0x0);
        gbc.writeMem(0xe7c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x770d, gbc.sp());
        EXPECT(0xe7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7c7));
        EXPECT(0x10, gbc.readMem(0xe7c8));
        // CB 10 0074
        gbc.setState(0x79a3, 0x42ad, 0xdb60, 0x2227, 0xae6a, 0x80bd, 0x0, 0x1);
        gbc.writeMem(0x79a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0x79a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0075
        gbc.setState(0xee1b, 0x5594, 0xa730, 0x388, 0x75a3, 0xa467, 0x0, 0x1);
        gbc.writeMem(0xee1b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5594, gbc.sp());
        EXPECT(0xee1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee1b));
        EXPECT(0x10, gbc.readMem(0xee1c));
        // CB 10 0076
        gbc.setState(0x7c2d, 0x5db4, 0x4c0, 0xa1c5, 0xc7a6, 0x5ec5, 0x1, 0x1);
        gbc.writeMem(0x7c2d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5db4, gbc.sp());
        EXPECT(0x7c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0077
        gbc.setState(0x3bd1, 0xd758, 0xe210, 0x12b7, 0xfee5, 0x60, 0x0, 0x0);
        gbc.writeMem(0x3bd1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd758, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0078
        gbc.setState(0x6f11, 0xa900, 0x330, 0xcfa, 0x47e5, 0xe831, 0x0, 0x0);
        gbc.writeMem(0x6f11, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa900, gbc.sp());
        EXPECT(0x6f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0079
        gbc.setState(0x4467, 0x7958, 0xc230, 0x7857, 0x1096, 0xf414, 0x0, 0x0);
        gbc.writeMem(0x4467, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7958, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 007B
        gbc.setState(0xb6e1, 0xc9ab, 0xf880, 0xc1c4, 0xd9a6, 0xc162, 0x0, 0x1);
        gbc.writeMem(0xb6e1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc9ab, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0x10, gbc.readMem(0xb6e2));
        // CB 10 007C
        gbc.setState(0x36b4, 0xf71b, 0xa580, 0x44b, 0x3f36, 0x6b8a, 0x0, 0x0);
        gbc.writeMem(0x36b4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf71b, gbc.sp());
        EXPECT(0x36b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 007D
        gbc.setState(0x4b23, 0x560d, 0x4e40, 0xc99e, 0x431c, 0xae75, 0x0, 0x1);
        gbc.writeMem(0x4b23, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x560d, gbc.sp());
        EXPECT(0x4b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 007E
        gbc.setState(0x5da0, 0xe5b9, 0x2190, 0x5189, 0xdf32, 0xd737, 0x0, 0x1);
        gbc.writeMem(0x5da0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe5b9, gbc.sp());
        EXPECT(0x5da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 007F
        gbc.setState(0x800f, 0xf298, 0x58f0, 0xab8b, 0x7e68, 0xbfce, 0x1, 0x1);
        gbc.writeMem(0x800f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf298, gbc.sp());
        EXPECT(0x8011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800f));
        EXPECT(0x10, gbc.readMem(0x8010));
        // CB 10 0080
        gbc.setState(0xdfc5, 0x23e3, 0xb20, 0x8b7c, 0x4725, 0x930, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0xdfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfc5));
        EXPECT(0x10, gbc.readMem(0xdfc6));
        // CB 10 0081
        gbc.setState(0x389e, 0x9385, 0xd000, 0xbdb9, 0x2395, 0x74e9, 0x1, 0x0);
        gbc.writeMem(0x389e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x38a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0082
        gbc.setState(0x4041, 0x7d59, 0x37e0, 0x4820, 0xdd90, 0x32dd, 0x0, 0x1);
        gbc.writeMem(0x4041, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7d59, gbc.sp());
        EXPECT(0x4043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0083
        gbc.setState(0x659e, 0x6620, 0x2560, 0xcee0, 0xf7f0, 0xd185, 0x1, 0x0);
        gbc.writeMem(0x659e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0x65a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0084
        gbc.setState(0x36e9, 0xbbc7, 0x9b40, 0x33cf, 0x2bd3, 0xeb90, 0x0, 0x0);
        gbc.writeMem(0x36e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbbc7, gbc.sp());
        EXPECT(0x36eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0086
        gbc.setState(0x6cda, 0xbe8f, 0xbf20, 0xb2d0, 0x8c36, 0xe7b6, 0x1, 0x0);
        gbc.writeMem(0x6cda, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbe8f, gbc.sp());
        EXPECT(0x6cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0087
        gbc.setState(0x59c1, 0xd69b, 0x9c70, 0xd10e, 0x2c5, 0x3c3c, 0x0, 0x1);
        gbc.writeMem(0x59c1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd69b, gbc.sp());
        EXPECT(0x59c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0088
        gbc.setState(0xe594, 0x95fd, 0x2970, 0x229c, 0x1b90, 0x44c5, 0x0, 0x1);
        gbc.writeMem(0xe594, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x95fd, gbc.sp());
        EXPECT(0xe596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe594));
        EXPECT(0x10, gbc.readMem(0xe595));
        // CB 10 0089
        gbc.setState(0x2225, 0x2a15, 0xf070, 0xb90c, 0xd8ec, 0xe904, 0x0, 0x0);
        gbc.writeMem(0x2225, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2a15, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 008A
        gbc.setState(0xcf57, 0xe64e, 0x1090, 0x44d2, 0xb41, 0xc9d3, 0x1, 0x1);
        gbc.writeMem(0xcf57, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe64e, gbc.sp());
        EXPECT(0xcf59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf57));
        EXPECT(0x10, gbc.readMem(0xcf58));
        // CB 10 008B
        gbc.setState(0x1858, 0xa9d4, 0x5530, 0x7894, 0x6d43, 0xeac4, 0x0, 0x1);
        gbc.writeMem(0x1858, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa9d4, gbc.sp());
        EXPECT(0x185a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 008C
        gbc.setState(0x3bcc, 0xc5ad, 0x20a0, 0xe406, 0x85c2, 0x4494, 0x1, 0x1);
        gbc.writeMem(0x3bcc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc5ad, gbc.sp());
        EXPECT(0x3bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 008D
        gbc.setState(0xba3, 0xdce, 0x4d10, 0x64f, 0x6c0e, 0x7306, 0x0, 0x1);
        gbc.writeMem(0xba3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdce, gbc.sp());
        EXPECT(0xba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 008E
        gbc.setState(0x42ae, 0x1899, 0xc7a0, 0xdfb, 0x69e7, 0x1fa1, 0x0, 0x0);
        gbc.writeMem(0x42ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1899, gbc.sp());
        EXPECT(0x42b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 008F
        gbc.setState(0x5a33, 0x6a02, 0xef10, 0x58e1, 0x2ed6, 0xb93c, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6a02, gbc.sp());
        EXPECT(0x5a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0090
        gbc.setState(0xc419, 0x41c6, 0xf760, 0x266f, 0xb003, 0xbf68, 0x0, 0x1);
        gbc.writeMem(0xc419, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc419));
        EXPECT(0x10, gbc.readMem(0xc41a));
        // CB 10 0091
        gbc.setState(0x4815, 0x800f, 0x6390, 0xcd9e, 0x9494, 0x5d6f, 0x1, 0x1);
        gbc.writeMem(0x4815, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x800f, gbc.sp());
        EXPECT(0x4817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0092
        gbc.setState(0x797c, 0x2fd8, 0xe470, 0x5fbf, 0x2331, 0x618, 0x1, 0x0);
        gbc.writeMem(0x797c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0x797e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0093
        gbc.setState(0xde76, 0x48d2, 0x4fe0, 0x9702, 0x2e9a, 0x94e7, 0x1, 0x0);
        gbc.writeMem(0xde76, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x48d2, gbc.sp());
        EXPECT(0xde78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde76));
        EXPECT(0x10, gbc.readMem(0xde77));
        // CB 10 0094
        gbc.setState(0xa6c6, 0x4446, 0xb870, 0x1a43, 0x3814, 0x53ea, 0x0, 0x0);
        gbc.writeMem(0xa6c6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4446, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c6));
        EXPECT(0x10, gbc.readMem(0xa6c7));
        // CB 10 0095
        gbc.setState(0xc1a, 0xf712, 0xb770, 0x50d4, 0x5b33, 0x3c27, 0x1, 0x1);
        gbc.writeMem(0xc1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf712, gbc.sp());
        EXPECT(0xc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0096
        gbc.setState(0x36db, 0x1177, 0xab30, 0xf7da, 0x7e8c, 0xa7a4, 0x1, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1177, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0097
        gbc.setState(0x7473, 0x3ad8, 0x7800, 0x3f6d, 0x4d53, 0x31c3, 0x1, 0x1);
        gbc.writeMem(0x7473, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3ad8, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0098
        gbc.setState(0x87f5, 0x7ecf, 0xd040, 0xff11, 0xdb4f, 0x3727, 0x1, 0x1);
        gbc.writeMem(0x87f5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7ecf, gbc.sp());
        EXPECT(0x87f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f5));
        EXPECT(0x10, gbc.readMem(0x87f6));
        // CB 10 0099
        gbc.setState(0xce94, 0x206, 0x13e0, 0xbd82, 0x5479, 0x9551, 0x0, 0x0);
        gbc.writeMem(0xce94, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x206, gbc.sp());
        EXPECT(0xce96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce94));
        EXPECT(0x10, gbc.readMem(0xce95));
        // CB 10 009A
        gbc.setState(0x7ce6, 0xe18c, 0x7e90, 0x1558, 0x73c4, 0x86ca, 0x0, 0x1);
        gbc.writeMem(0x7ce6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe18c, gbc.sp());
        EXPECT(0x7ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 009B
        gbc.setState(0xaec0, 0x3070, 0xde60, 0xc92c, 0x930e, 0xa8fc, 0x0, 0x0);
        gbc.writeMem(0xaec0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3070, gbc.sp());
        EXPECT(0xaec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec0));
        EXPECT(0x10, gbc.readMem(0xaec1));
        // CB 10 009C
        gbc.setState(0x80df, 0x84a5, 0xd200, 0x966e, 0xf82d, 0x25e7, 0x1, 0x1);
        gbc.writeMem(0x80df, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x84a5, gbc.sp());
        EXPECT(0x80e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80df));
        EXPECT(0x10, gbc.readMem(0x80e0));
        // CB 10 009D
        gbc.setState(0x3f87, 0xf38a, 0x5260, 0xa6d2, 0xdfc4, 0x1ba8, 0x1, 0x0);
        gbc.writeMem(0x3f87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf38a, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 009E
        gbc.setState(0x536f, 0x9f9e, 0x2140, 0xc975, 0x5d43, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x536f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0x5371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00A0
        gbc.setState(0xea75, 0x86c0, 0xce30, 0x9675, 0x39e2, 0x8928, 0x1, 0x1);
        gbc.writeMem(0xea75, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x86c0, gbc.sp());
        EXPECT(0xea77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea75));
        EXPECT(0x10, gbc.readMem(0xea76));
        // CB 10 00A1
        gbc.setState(0xc3b2, 0x84b4, 0xbd10, 0xa656, 0xb530, 0x27f0, 0x0, 0x1);
        gbc.writeMem(0xc3b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x84b4, gbc.sp());
        EXPECT(0xc3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b2));
        EXPECT(0x10, gbc.readMem(0xc3b3));
        // CB 10 00A3
        gbc.setState(0x9ca6, 0x88e1, 0x5fc0, 0x43c0, 0x81de, 0x14b2, 0x1, 0x0);
        gbc.writeMem(0x9ca6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x88e1, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca6));
        EXPECT(0x10, gbc.readMem(0x9ca7));
        // CB 10 00A4
        gbc.setState(0xdeb7, 0x2b35, 0x4e00, 0x7549, 0x5701, 0x505d, 0x0, 0x0);
        gbc.writeMem(0xdeb7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2b35, gbc.sp());
        EXPECT(0xdeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb7));
        EXPECT(0x10, gbc.readMem(0xdeb8));
        // CB 10 00A6
        gbc.setState(0xaf38, 0x387, 0xf200, 0xe1e8, 0x60a5, 0x81d0, 0x1, 0x1);
        gbc.writeMem(0xaf38, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x387, gbc.sp());
        EXPECT(0xaf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf38));
        EXPECT(0x10, gbc.readMem(0xaf39));
        // CB 10 00A7
        gbc.setState(0xaae8, 0x73a3, 0x4fd0, 0xd038, 0x2618, 0x59db, 0x0, 0x1);
        gbc.writeMem(0xaae8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x73a3, gbc.sp());
        EXPECT(0xaaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae8));
        EXPECT(0x10, gbc.readMem(0xaae9));
        // CB 10 00A8
        gbc.setState(0x5fd3, 0x4b6, 0x8750, 0x35b3, 0x6541, 0x2bd2, 0x1, 0x0);
        gbc.writeMem(0x5fd3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4b6, gbc.sp());
        EXPECT(0x5fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00A9
        gbc.setState(0xafca, 0xa3ed, 0xcdc0, 0x3ed6, 0xada, 0xd9e8, 0x1, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa3ed, gbc.sp());
        EXPECT(0xafcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafca));
        EXPECT(0x10, gbc.readMem(0xafcb));
        // CB 10 00AA
        gbc.setState(0x3c5a, 0xe7c7, 0x29d0, 0xe68a, 0x103d, 0x975b, 0x0, 0x1);
        gbc.writeMem(0x3c5a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe7c7, gbc.sp());
        EXPECT(0x3c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00AB
        gbc.setState(0x5104, 0x8d0, 0xe450, 0x4963, 0x8cd6, 0x868a, 0x1, 0x1);
        gbc.writeMem(0x5104, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8d0, gbc.sp());
        EXPECT(0x5106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00AC
        gbc.setState(0x22dc, 0x58b9, 0x13e0, 0x3c89, 0xe548, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x22dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x58b9, gbc.sp());
        EXPECT(0x22de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00AD
        gbc.setState(0xa5ed, 0x9ee7, 0xc6a0, 0x42b9, 0xadd2, 0xb9b9, 0x0, 0x0);
        gbc.writeMem(0xa5ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9ee7, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ed));
        EXPECT(0x10, gbc.readMem(0xa5ee));
        // CB 10 00AE
        gbc.setState(0x9206, 0x15d5, 0x7740, 0xde7a, 0xe8cf, 0x47c8, 0x0, 0x1);
        gbc.writeMem(0x9206, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0x9208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9206));
        EXPECT(0x10, gbc.readMem(0x9207));
        // CB 10 00AF
        gbc.setState(0x73e7, 0xf36c, 0xf910, 0x4924, 0x6f60, 0x818e, 0x0, 0x1);
        gbc.writeMem(0x73e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf36c, gbc.sp());
        EXPECT(0x73e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00B0
        gbc.setState(0xc1b7, 0xfb34, 0xa090, 0xab16, 0xb82b, 0x891e, 0x1, 0x1);
        gbc.writeMem(0xc1b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfb34, gbc.sp());
        EXPECT(0xc1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1b7));
        EXPECT(0x10, gbc.readMem(0xc1b8));
        // CB 10 00B1
        gbc.setState(0x5e55, 0x5384, 0x79b0, 0xa4b5, 0xa67f, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x5e55, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5384, gbc.sp());
        EXPECT(0x5e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00B2
        gbc.setState(0xea1a, 0xe04f, 0x6460, 0x6cea, 0xdfbe, 0xd3f1, 0x0, 0x0);
        gbc.writeMem(0xea1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea1a));
        EXPECT(0x10, gbc.readMem(0xea1b));
        // CB 10 00B3
        gbc.setState(0x5025, 0xcf78, 0x11f0, 0x96da, 0x7dab, 0x22e9, 0x0, 0x1);
        gbc.writeMem(0x5025, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcf78, gbc.sp());
        EXPECT(0x5027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00B5
        gbc.setState(0xd32, 0x99f5, 0xae80, 0x594d, 0x3ad2, 0x9376, 0x0, 0x1);
        gbc.writeMem(0xd32, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x99f5, gbc.sp());
        EXPECT(0xd34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00B6
        gbc.setState(0x507c, 0xc5c0, 0x7eb0, 0x7090, 0x1457, 0xf4bc, 0x0, 0x0);
        gbc.writeMem(0x507c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc5c0, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00B7
        gbc.setState(0x6962, 0xaef2, 0x9b60, 0xcb85, 0x2996, 0xe149, 0x1, 0x0);
        gbc.writeMem(0x6962, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaef2, gbc.sp());
        EXPECT(0x6964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00B8
        gbc.setState(0xa7c, 0x2fbd, 0xcd10, 0x4e95, 0x4b1d, 0xf35f, 0x1, 0x0);
        gbc.writeMem(0xa7c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2fbd, gbc.sp());
        EXPECT(0xa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00B9
        gbc.setState(0x21c4, 0xb3f9, 0xf4b0, 0xeb7f, 0xb6b, 0xaff6, 0x1, 0x0);
        gbc.writeMem(0x21c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb3f9, gbc.sp());
        EXPECT(0x21c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00BA
        gbc.setState(0xcee2, 0xff22, 0x23e0, 0x129a, 0x380d, 0xb4c4, 0x0, 0x0);
        gbc.writeMem(0xcee2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xff22, gbc.sp());
        EXPECT(0xcee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcee2));
        EXPECT(0x10, gbc.readMem(0xcee3));
        // CB 10 00BB
        gbc.setState(0x59ac, 0x3ec2, 0x5190, 0xf7cf, 0xb894, 0x6d59, 0x0, 0x1);
        gbc.writeMem(0x59ac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3ec2, gbc.sp());
        EXPECT(0x59ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00BC
        gbc.setState(0x7c2, 0x87a9, 0x3ed0, 0x63c5, 0xf9e6, 0xae1b, 0x0, 0x1);
        gbc.writeMem(0x7c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x87a9, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00BE
        gbc.setState(0x68ca, 0xafd9, 0xa9f0, 0x9e41, 0x20b7, 0x6079, 0x0, 0x1);
        gbc.writeMem(0x68ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xafd9, gbc.sp());
        EXPECT(0x68cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00BF
        gbc.setState(0xba2a, 0x1350, 0x3d70, 0x85ee, 0xef22, 0x5e57, 0x0, 0x0);
        gbc.writeMem(0xba2a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1350, gbc.sp());
        EXPECT(0xba2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2a));
        EXPECT(0x10, gbc.readMem(0xba2b));
        // CB 10 00C0
        gbc.setState(0xac18, 0xa02d, 0xd190, 0x9f91, 0x961f, 0x3e6c, 0x1, 0x0);
        gbc.writeMem(0xac18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa02d, gbc.sp());
        EXPECT(0xac1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac18));
        EXPECT(0x10, gbc.readMem(0xac19));
        // CB 10 00C1
        gbc.setState(0x60c2, 0x4aaf, 0xdb00, 0x20fa, 0xaa7b, 0x963d, 0x1, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4aaf, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00C2
        gbc.setState(0xc7d4, 0x2906, 0x8ac0, 0x26e5, 0x5360, 0xf9ef, 0x0, 0x1);
        gbc.writeMem(0xc7d4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2906, gbc.sp());
        EXPECT(0xc7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d4));
        EXPECT(0x10, gbc.readMem(0xc7d5));
        // CB 10 00C3
        gbc.setState(0x636b, 0x600f, 0xfd20, 0x43b8, 0x85b2, 0x3034, 0x1, 0x1);
        gbc.writeMem(0x636b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x600f, gbc.sp());
        EXPECT(0x636d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00C4
        gbc.setState(0xeff6, 0xe3a2, 0x3bc0, 0x4441, 0x4d12, 0x9b11, 0x0, 0x1);
        gbc.writeMem(0xeff6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe3a2, gbc.sp());
        EXPECT(0xeff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff6));
        EXPECT(0x10, gbc.readMem(0xeff7));
        // CB 10 00C5
        gbc.setState(0x91d5, 0xf753, 0xe510, 0x4a92, 0x10f7, 0xe3b9, 0x1, 0x1);
        gbc.writeMem(0x91d5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf753, gbc.sp());
        EXPECT(0x91d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d5));
        EXPECT(0x10, gbc.readMem(0x91d6));
        // CB 10 00C6
        gbc.setState(0xe53a, 0xcfde, 0x6710, 0x65d5, 0x4de9, 0x31e, 0x1, 0x1);
        gbc.writeMem(0xe53a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcfde, gbc.sp());
        EXPECT(0xe53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe53a));
        EXPECT(0x10, gbc.readMem(0xe53b));
        // CB 10 00C7
        gbc.setState(0xee5f, 0x9a1, 0x4730, 0xd185, 0x3a05, 0xddc, 0x0, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9a1, gbc.sp());
        EXPECT(0xee61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5f));
        EXPECT(0x10, gbc.readMem(0xee60));
        // CB 10 00C8
        gbc.setState(0xd6ba, 0x3b8e, 0xf2c0, 0x210a, 0xebd9, 0x5644, 0x0, 0x1);
        gbc.writeMem(0xd6ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3b8e, gbc.sp());
        EXPECT(0xd6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6ba));
        EXPECT(0x10, gbc.readMem(0xd6bb));
        // CB 10 00C9
        gbc.setState(0x1a0b, 0xac34, 0xc20, 0xfc67, 0xdae7, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x1a0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xac34, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00CA
        gbc.setState(0x4ac4, 0xee5, 0x81c0, 0x1308, 0xdf8f, 0x3069, 0x1, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xee5, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00CB
        gbc.setState(0x316a, 0x55f4, 0x7040, 0x7426, 0x28c9, 0xcab8, 0x0, 0x1);
        gbc.writeMem(0x316a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x55f4, gbc.sp());
        EXPECT(0x316c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00CC
        gbc.setState(0x4d1e, 0x8bd1, 0x36e0, 0xb5bb, 0x28f0, 0x6b6b, 0x1, 0x1);
        gbc.writeMem(0x4d1e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8bd1, gbc.sp());
        EXPECT(0x4d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00CD
        gbc.setState(0x4cad, 0x4fde, 0xcc40, 0x26c9, 0x9a, 0x820b, 0x1, 0x1);
        gbc.writeMem(0x4cad, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4fde, gbc.sp());
        EXPECT(0x4caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00CE
        gbc.setState(0x779e, 0xc670, 0x63c0, 0x1764, 0x8a18, 0xc47, 0x1, 0x1);
        gbc.writeMem(0x779e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc670, gbc.sp());
        EXPECT(0x77a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00CF
        gbc.setState(0x3057, 0x53d0, 0x5770, 0xbdbb, 0xade, 0x68c5, 0x1, 0x1);
        gbc.writeMem(0x3057, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x53d0, gbc.sp());
        EXPECT(0x3059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00D0
        gbc.setState(0x86b6, 0xcf35, 0x1c40, 0x5a9d, 0x8f8a, 0xae4f, 0x1, 0x1);
        gbc.writeMem(0x86b6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcf35, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86b6));
        EXPECT(0x10, gbc.readMem(0x86b7));
        // CB 10 00D1
        gbc.setState(0x837, 0x9fe6, 0x6280, 0x2f17, 0x60bb, 0xc70f, 0x0, 0x0);
        gbc.writeMem(0x837, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9fe6, gbc.sp());
        EXPECT(0x839, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00D2
        gbc.setState(0x198b, 0x54f7, 0x20c0, 0x1f3e, 0xc7ce, 0x12d, 0x1, 0x1);
        gbc.writeMem(0x198b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x54f7, gbc.sp());
        EXPECT(0x198d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00D3
        gbc.setState(0x50fa, 0x2ddd, 0x2f50, 0xb547, 0x1b40, 0x707, 0x0, 0x0);
        gbc.writeMem(0x50fa, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2ddd, gbc.sp());
        EXPECT(0x50fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00D4
        gbc.setState(0x1595, 0x3515, 0xc4e0, 0x7c49, 0x84d, 0x7a0e, 0x0, 0x1);
        gbc.writeMem(0x1595, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3515, gbc.sp());
        EXPECT(0x1597, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00D5
        gbc.setState(0x6a0d, 0x767b, 0x8700, 0x6c59, 0x4799, 0x21f8, 0x0, 0x0);
        gbc.writeMem(0x6a0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x767b, gbc.sp());
        EXPECT(0x6a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00D6
        gbc.setState(0x2535, 0x8560, 0x5a30, 0x1be7, 0x1cf7, 0xb2f3, 0x1, 0x0);
        gbc.writeMem(0x2535, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8560, gbc.sp());
        EXPECT(0x2537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00D7
        gbc.setState(0xdf25, 0x4196, 0xff90, 0x9ef, 0x49ee, 0x8225, 0x1, 0x1);
        gbc.writeMem(0xdf25, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4196, gbc.sp());
        EXPECT(0xdf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf25));
        EXPECT(0x10, gbc.readMem(0xdf26));
        // CB 10 00D8
        gbc.setState(0x367c, 0x806f, 0xc010, 0x4d4b, 0xc49a, 0x52ae, 0x1, 0x1);
        gbc.writeMem(0x367c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x806f, gbc.sp());
        EXPECT(0x367e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00D9
        gbc.setState(0xe0e8, 0x99c5, 0xebf0, 0xc2c, 0xdb3, 0xccdf, 0x1, 0x1);
        gbc.writeMem(0xe0e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x99c5, gbc.sp());
        EXPECT(0xe0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e8));
        EXPECT(0x10, gbc.readMem(0xe0e9));
        // CB 10 00DA
        gbc.setState(0x8175, 0xd0fe, 0x5200, 0x8986, 0x55cc, 0x9cbc, 0x0, 0x0);
        gbc.writeMem(0x8175, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd0fe, gbc.sp());
        EXPECT(0x8177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8175));
        EXPECT(0x10, gbc.readMem(0x8176));
        // CB 10 00DB
        gbc.setState(0xbb63, 0x4241, 0x28c0, 0xc57b, 0x57cc, 0x4535, 0x0, 0x1);
        gbc.writeMem(0xbb63, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0xbb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb63));
        EXPECT(0x10, gbc.readMem(0xbb64));
        // CB 10 00DD
        gbc.setState(0xe7f5, 0x7d98, 0xc150, 0x5b86, 0x3be2, 0x42ea, 0x0, 0x0);
        gbc.writeMem(0xe7f5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7d98, gbc.sp());
        EXPECT(0xe7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f5));
        EXPECT(0x10, gbc.readMem(0xe7f6));
        // CB 10 00DE
        gbc.setState(0x30ef, 0xb3b6, 0x5a60, 0x503a, 0xeb17, 0x7bbf, 0x1, 0x0);
        gbc.writeMem(0x30ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb3b6, gbc.sp());
        EXPECT(0x30f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00DF
        gbc.setState(0x990e, 0x2487, 0xe530, 0x4856, 0xfdaa, 0x60b4, 0x0, 0x1);
        gbc.writeMem(0x990e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2487, gbc.sp());
        EXPECT(0x9910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990e));
        EXPECT(0x10, gbc.readMem(0x990f));
        // CB 10 00E0
        gbc.setState(0xb6bc, 0xf3a7, 0xbf10, 0xcc37, 0x19, 0x8cc1, 0x1, 0x0);
        gbc.writeMem(0xb6bc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf3a7, gbc.sp());
        EXPECT(0xb6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bc));
        EXPECT(0x10, gbc.readMem(0xb6bd));
        // CB 10 00E1
        gbc.setState(0xc3fe, 0x3710, 0xe8d0, 0xd35d, 0xdec3, 0xe7a, 0x1, 0x1);
        gbc.writeMem(0xc3fe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3710, gbc.sp());
        EXPECT(0xc400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3fe));
        EXPECT(0x10, gbc.readMem(0xc3ff));
        // CB 10 00E2
        gbc.setState(0xc0d2, 0x6ba8, 0xdaf0, 0x7e0d, 0xe50b, 0x2696, 0x1, 0x1);
        gbc.writeMem(0xc0d2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6ba8, gbc.sp());
        EXPECT(0xc0d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d2));
        EXPECT(0x10, gbc.readMem(0xc0d3));
        // CB 10 00E3
        gbc.setState(0x8972, 0x3a8d, 0x7e90, 0x4a5c, 0x9e8f, 0x92fa, 0x0, 0x1);
        gbc.writeMem(0x8972, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3a8d, gbc.sp());
        EXPECT(0x8974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8972));
        EXPECT(0x10, gbc.readMem(0x8973));
        // CB 10 00E4
        gbc.setState(0x9e18, 0x613a, 0x9790, 0x92be, 0x6b81, 0xfeb4, 0x1, 0x1);
        gbc.writeMem(0x9e18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x613a, gbc.sp());
        EXPECT(0x9e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e18));
        EXPECT(0x10, gbc.readMem(0x9e19));
        // CB 10 00E5
        gbc.setState(0x3dc7, 0x1303, 0x7020, 0x9af6, 0x6514, 0x57b1, 0x1, 0x0);
        gbc.writeMem(0x3dc7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1303, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00E6
        gbc.setState(0x3572, 0x69d0, 0xb4a0, 0x7ca1, 0x2283, 0x9cc2, 0x0, 0x0);
        gbc.writeMem(0x3572, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x69d0, gbc.sp());
        EXPECT(0x3574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00E7
        gbc.setState(0x6c51, 0x527a, 0x8ff0, 0x788d, 0xf19, 0xc5b3, 0x0, 0x1);
        gbc.writeMem(0x6c51, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x527a, gbc.sp());
        EXPECT(0x6c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00E8
        gbc.setState(0xce35, 0x166a, 0x3370, 0xcd7, 0x3177, 0x812, 0x0, 0x0);
        gbc.writeMem(0xce35, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x166a, gbc.sp());
        EXPECT(0xce37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce35));
        EXPECT(0x10, gbc.readMem(0xce36));
        // CB 10 00E9
        gbc.setState(0x8677, 0xac24, 0x2920, 0x288, 0xc3bb, 0x3650, 0x0, 0x1);
        gbc.writeMem(0x8677, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xac24, gbc.sp());
        EXPECT(0x8679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8677));
        EXPECT(0x10, gbc.readMem(0x8678));
        // CB 10 00EA
        gbc.setState(0xe013, 0x678a, 0xd860, 0x36e5, 0x1fdc, 0xfbca, 0x0, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x678a, gbc.sp());
        EXPECT(0xe015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe013));
        EXPECT(0x10, gbc.readMem(0xe014));
        // CB 10 00EB
        gbc.setState(0xbace, 0x72f4, 0xe920, 0x9e7d, 0x5346, 0x32c7, 0x1, 0x1);
        gbc.writeMem(0xbace, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x72f4, gbc.sp());
        EXPECT(0xbad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbace));
        EXPECT(0x10, gbc.readMem(0xbacf));
        // CB 10 00EC
        gbc.setState(0x6f8, 0xca97, 0x9350, 0xcf, 0x25be, 0x7d9, 0x0, 0x0);
        gbc.writeMem(0x6f8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xca97, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00ED
        gbc.setState(0x1dbc, 0xdcf9, 0xe9b0, 0x2a4d, 0xf80f, 0xed26, 0x0, 0x1);
        gbc.writeMem(0x1dbc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdcf9, gbc.sp());
        EXPECT(0x1dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00EF
        gbc.setState(0xa81d, 0x950, 0x5720, 0x396f, 0xb53f, 0xa63f, 0x0, 0x0);
        gbc.writeMem(0xa81d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x950, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81d));
        EXPECT(0x10, gbc.readMem(0xa81e));
        // CB 10 00F0
        gbc.setState(0x7dcd, 0xbcff, 0x5f40, 0x1777, 0x66a8, 0x7bcb, 0x1, 0x1);
        gbc.writeMem(0x7dcd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbcff, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00F1
        gbc.setState(0x1b60, 0xe2d6, 0x5e30, 0xd21e, 0xd76c, 0xc062, 0x1, 0x0);
        gbc.writeMem(0x1b60, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe2d6, gbc.sp());
        EXPECT(0x1b62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00F3
        gbc.setState(0x1d33, 0xe31d, 0xafe0, 0xa4ce, 0x649a, 0xfec6, 0x0, 0x0);
        gbc.writeMem(0x1d33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe31d, gbc.sp());
        EXPECT(0x1d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00F4
        gbc.setState(0x1d1, 0xc8f2, 0x5760, 0x4af9, 0xb68c, 0x5e38, 0x1, 0x1);
        gbc.writeMem(0x1d1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc8f2, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00F5
        gbc.setState(0xe7ea, 0xfb5, 0x17b0, 0x47e0, 0x7431, 0x5cd4, 0x1, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfb5, gbc.sp());
        EXPECT(0xe7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ea));
        EXPECT(0x10, gbc.readMem(0xe7eb));
        // CB 10 00F7
        gbc.setState(0x53ca, 0x84d9, 0x2e50, 0xc754, 0xe3aa, 0x83a3, 0x1, 0x0);
        gbc.writeMem(0x53ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0x53cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00F9
        gbc.setState(0x61fa, 0x344d, 0x5f10, 0xa2a0, 0xe880, 0x242d, 0x0, 0x0);
        gbc.writeMem(0x61fa, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x344d, gbc.sp());
        EXPECT(0x61fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 00FA
        gbc.setState(0x9fb5, 0xc87, 0x1020, 0x39c6, 0x1fd8, 0x1e43, 0x1, 0x0);
        gbc.writeMem(0x9fb5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc87, gbc.sp());
        EXPECT(0x9fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb5));
        EXPECT(0x10, gbc.readMem(0x9fb6));
        // CB 10 00FB
        gbc.setState(0xbc77, 0x9d67, 0x2680, 0xf5f2, 0x2c43, 0x18dc, 0x1, 0x1);
        gbc.writeMem(0xbc77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d67, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc77));
        EXPECT(0x10, gbc.readMem(0xbc78));
        // CB 10 00FC
        gbc.setState(0xb89d, 0xc90a, 0xee10, 0x2133, 0xdd1f, 0x1c46, 0x1, 0x1);
        gbc.writeMem(0xb89d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc90a, gbc.sp());
        EXPECT(0xb89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89d));
        EXPECT(0x10, gbc.readMem(0xb89e));
        // CB 10 00FD
        gbc.setState(0xbfb6, 0x1ea2, 0x1360, 0x68b3, 0x38c4, 0x167b, 0x0, 0x0);
        gbc.writeMem(0xbfb6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1ea2, gbc.sp());
        EXPECT(0xbfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb6));
        EXPECT(0x10, gbc.readMem(0xbfb7));
        // CB 10 00FE
        gbc.setState(0x3129, 0xf3f1, 0xb4a0, 0x31dd, 0x6c4b, 0x9615, 0x0, 0x0);
        gbc.writeMem(0x3129, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf3f1, gbc.sp());
        EXPECT(0x312b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 00FF
        gbc.setState(0xeb44, 0x11da, 0x110, 0xe2bd, 0x65d3, 0xc8d1, 0x1, 0x1);
        gbc.writeMem(0xeb44, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x11da, gbc.sp());
        EXPECT(0xeb46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb44));
        EXPECT(0x10, gbc.readMem(0xeb45));
        // CB 10 0100
        gbc.setState(0x8bc2, 0x32e8, 0xd9f0, 0x76ef, 0x367d, 0x6578, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x32e8, gbc.sp());
        EXPECT(0x8bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc2));
        EXPECT(0x10, gbc.readMem(0x8bc3));
        // CB 10 0101
        gbc.setState(0xc470, 0xda78, 0x1a10, 0xcf39, 0xb0af, 0xfdbc, 0x0, 0x1);
        gbc.writeMem(0xc470, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xda78, gbc.sp());
        EXPECT(0xc472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc470));
        EXPECT(0x10, gbc.readMem(0xc471));
        // CB 10 0102
        gbc.setState(0xebed, 0x3953, 0x7bf0, 0x1976, 0x4f6e, 0xfdc3, 0x0, 0x0);
        gbc.writeMem(0xebed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3953, gbc.sp());
        EXPECT(0xebef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebed));
        EXPECT(0x10, gbc.readMem(0xebee));
        // CB 10 0103
        gbc.setState(0x416e, 0xb090, 0xd1b0, 0x4408, 0x6f82, 0x4e55, 0x0, 0x1);
        gbc.writeMem(0x416e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb090, gbc.sp());
        EXPECT(0x4170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0104
        gbc.setState(0x2cc, 0x7ae2, 0x3c70, 0x1adb, 0x6838, 0x2cc9, 0x1, 0x1);
        gbc.writeMem(0x2cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7ae2, gbc.sp());
        EXPECT(0x2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0105
        gbc.setState(0x8ff2, 0xd12b, 0x97a0, 0x1f09, 0xf8ae, 0x6ccb, 0x0, 0x0);
        gbc.writeMem(0x8ff2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd12b, gbc.sp());
        EXPECT(0x8ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff2));
        EXPECT(0x10, gbc.readMem(0x8ff3));
        // CB 10 0106
        gbc.setState(0x6d93, 0xd788, 0xd8b0, 0xd901, 0xa0f7, 0xa9ee, 0x1, 0x1);
        gbc.writeMem(0x6d93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd788, gbc.sp());
        EXPECT(0x6d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0107
        gbc.setState(0xa2b0, 0x6234, 0xb850, 0xfdd4, 0x396d, 0xbe4e, 0x0, 0x0);
        gbc.writeMem(0xa2b0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6234, gbc.sp());
        EXPECT(0xa2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b0));
        EXPECT(0x10, gbc.readMem(0xa2b1));
        // CB 10 0108
        gbc.setState(0x3ae1, 0x8654, 0xcb80, 0x5ee8, 0xd5f0, 0xe2c5, 0x0, 0x1);
        gbc.writeMem(0x3ae1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8654, gbc.sp());
        EXPECT(0x3ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0109
        gbc.setState(0x327a, 0x9955, 0xf960, 0xb5e1, 0xff1f, 0x9e07, 0x0, 0x1);
        gbc.writeMem(0x327a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9955, gbc.sp());
        EXPECT(0x327c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 010A
        gbc.setState(0xa682, 0xb0be, 0x1e0, 0x6844, 0x8923, 0x1948, 0x1, 0x0);
        gbc.writeMem(0xa682, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb0be, gbc.sp());
        EXPECT(0xa684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa682));
        EXPECT(0x10, gbc.readMem(0xa683));
        // CB 10 010B
        gbc.setState(0x41ec, 0x9029, 0xcda0, 0x1da2, 0x39f5, 0x5084, 0x1, 0x1);
        gbc.writeMem(0x41ec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9029, gbc.sp());
        EXPECT(0x41ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 010C
        gbc.setState(0xdbef, 0x4ac0, 0xf0d0, 0x4628, 0x175b, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0xdbef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4ac0, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbef));
        EXPECT(0x10, gbc.readMem(0xdbf0));
        // CB 10 010D
        gbc.setState(0x604b, 0xbfd9, 0xbbd0, 0xa4fa, 0x3af6, 0x1576, 0x1, 0x1);
        gbc.writeMem(0x604b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbfd9, gbc.sp());
        EXPECT(0x604d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 010E
        gbc.setState(0x7b85, 0xc9da, 0x93e0, 0x5bb0, 0x4d49, 0x44af, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc9da, gbc.sp());
        EXPECT(0x7b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 010F
        gbc.setState(0x62c4, 0xb00b, 0x2fe0, 0x5bf4, 0x2f7, 0x7d5, 0x0, 0x1);
        gbc.writeMem(0x62c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb00b, gbc.sp());
        EXPECT(0x62c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0110
        gbc.setState(0xe09, 0x8035, 0xca20, 0xd959, 0x93c0, 0xca18, 0x1, 0x1);
        gbc.writeMem(0xe09, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8035, gbc.sp());
        EXPECT(0xe0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0111
        gbc.setState(0x4b39, 0x21b6, 0xf2e0, 0xd9d7, 0x1bf8, 0x5ea0, 0x0, 0x0);
        gbc.writeMem(0x4b39, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x21b6, gbc.sp());
        EXPECT(0x4b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0112
        gbc.setState(0xd1e2, 0x1ff4, 0xc1d0, 0xd250, 0x12be, 0x23bb, 0x0, 0x1);
        gbc.writeMem(0xd1e2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0xd1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e2));
        EXPECT(0x10, gbc.readMem(0xd1e3));
        // CB 10 0113
        gbc.setState(0x628f, 0x6a16, 0x61f0, 0x9841, 0x5d5f, 0xa82b, 0x0, 0x0);
        gbc.writeMem(0x628f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0x6291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0114
        gbc.setState(0xc370, 0x8e24, 0x3fa0, 0xc0bf, 0xfff, 0xccf0, 0x1, 0x1);
        gbc.writeMem(0xc370, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8e24, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc370));
        EXPECT(0x10, gbc.readMem(0xc371));
        // CB 10 0116
        gbc.setState(0x6346, 0xb1c2, 0xb800, 0x520, 0xc271, 0x331d, 0x0, 0x0);
        gbc.writeMem(0x6346, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb1c2, gbc.sp());
        EXPECT(0x6348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0117
        gbc.setState(0x8000, 0x94d4, 0xdf80, 0x958e, 0xf206, 0x7f4b, 0x0, 0x1);
        gbc.writeMem(0x8000, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x94d4, gbc.sp());
        EXPECT(0x8002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8000));
        EXPECT(0x10, gbc.readMem(0x8001));
        // CB 10 0118
        gbc.setState(0x6441, 0xb715, 0xee80, 0x2e06, 0xa257, 0x62a8, 0x1, 0x1);
        gbc.writeMem(0x6441, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb715, gbc.sp());
        EXPECT(0x6443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0119
        gbc.setState(0x7f2c, 0x4196, 0xc380, 0xf771, 0x4911, 0x3de9, 0x0, 0x0);
        gbc.writeMem(0x7f2c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4196, gbc.sp());
        EXPECT(0x7f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 011A
        gbc.setState(0x67c6, 0xa22b, 0x1530, 0x7125, 0x2674, 0xa09, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa22b, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 011B
        gbc.setState(0x8bb9, 0x8933, 0x2ec0, 0x8c6c, 0xbc6e, 0xeb69, 0x1, 0x0);
        gbc.writeMem(0x8bb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8933, gbc.sp());
        EXPECT(0x8bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb9));
        EXPECT(0x10, gbc.readMem(0x8bba));
        // CB 10 011C
        gbc.setState(0x7d92, 0x8d05, 0x3b30, 0x295d, 0xf1a2, 0x12b3, 0x0, 0x1);
        gbc.writeMem(0x7d92, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8d05, gbc.sp());
        EXPECT(0x7d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 011D
        gbc.setState(0xa3a1, 0x75c1, 0xcc90, 0x82ed, 0x8df7, 0xb988, 0x1, 0x0);
        gbc.writeMem(0xa3a1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x75c1, gbc.sp());
        EXPECT(0xa3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a1));
        EXPECT(0x10, gbc.readMem(0xa3a2));
        // CB 10 011E
        gbc.setState(0x69ef, 0x1af, 0x71a0, 0x2caf, 0xaaee, 0x6fb2, 0x1, 0x1);
        gbc.writeMem(0x69ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1af, gbc.sp());
        EXPECT(0x69f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 011F
        gbc.setState(0xcd91, 0x4d34, 0x9e20, 0x94a5, 0xb302, 0x9c0e, 0x1, 0x1);
        gbc.writeMem(0xcd91, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4d34, gbc.sp());
        EXPECT(0xcd93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd91));
        EXPECT(0x10, gbc.readMem(0xcd92));
        // CB 10 0120
        gbc.setState(0x8a1c, 0x92e0, 0xa620, 0xea57, 0xceb9, 0xfe95, 0x1, 0x0);
        gbc.writeMem(0x8a1c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0x8a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1c));
        EXPECT(0x10, gbc.readMem(0x8a1d));
        // CB 10 0121
        gbc.setState(0x48d6, 0x750b, 0xc130, 0xc998, 0x3059, 0x2f05, 0x0, 0x1);
        gbc.writeMem(0x48d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x750b, gbc.sp());
        EXPECT(0x48d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0122
        gbc.setState(0x3e3, 0x5ad1, 0x2680, 0x4bbf, 0x5917, 0xca08, 0x0, 0x1);
        gbc.writeMem(0x3e3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5ad1, gbc.sp());
        EXPECT(0x3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0123
        gbc.setState(0xb75e, 0xeff9, 0x7320, 0x338, 0x42d6, 0x7ed2, 0x0, 0x0);
        gbc.writeMem(0xb75e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeff9, gbc.sp());
        EXPECT(0xb760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75e));
        EXPECT(0x10, gbc.readMem(0xb75f));
        // CB 10 0124
        gbc.setState(0x5762, 0x1f73, 0xaba0, 0x47c6, 0xa28, 0xaa8d, 0x1, 0x1);
        gbc.writeMem(0x5762, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1f73, gbc.sp());
        EXPECT(0x5764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0125
        gbc.setState(0xb9f6, 0x8027, 0xec00, 0x2152, 0xfcee, 0x7feb, 0x1, 0x0);
        gbc.writeMem(0xb9f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0xb9f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f6));
        EXPECT(0x10, gbc.readMem(0xb9f7));
        // CB 10 0128
        gbc.setState(0xbd10, 0xd248, 0x2f0, 0x946f, 0x5883, 0xd4ed, 0x1, 0x0);
        gbc.writeMem(0xbd10, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd248, gbc.sp());
        EXPECT(0xbd12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd10));
        EXPECT(0x10, gbc.readMem(0xbd11));
        // CB 10 0129
        gbc.setState(0x6b88, 0xee06, 0x44c0, 0x75b1, 0xaa0e, 0xb7be, 0x1, 0x0);
        gbc.writeMem(0x6b88, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0x6b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 012A
        gbc.setState(0x75b9, 0xe266, 0x6700, 0xbba0, 0x589a, 0x85bf, 0x0, 0x1);
        gbc.writeMem(0x75b9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0x75bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 012B
        gbc.setState(0xbdd6, 0xf8e4, 0x92d0, 0x4a1b, 0x4fd7, 0xc694, 0x0, 0x0);
        gbc.writeMem(0xbdd6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf8e4, gbc.sp());
        EXPECT(0xbdd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd6));
        EXPECT(0x10, gbc.readMem(0xbdd7));
        // CB 10 012C
        gbc.setState(0xef01, 0x94bc, 0xc340, 0x4622, 0x56c1, 0x9cb5, 0x1, 0x1);
        gbc.writeMem(0xef01, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x94bc, gbc.sp());
        EXPECT(0xef03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef01));
        EXPECT(0x10, gbc.readMem(0xef02));
        // CB 10 012D
        gbc.setState(0xae0b, 0x4ec0, 0x6730, 0x5403, 0x608, 0x548e, 0x1, 0x1);
        gbc.writeMem(0xae0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4ec0, gbc.sp());
        EXPECT(0xae0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0b));
        EXPECT(0x10, gbc.readMem(0xae0c));
        // CB 10 012E
        gbc.setState(0xad63, 0xcec3, 0x870, 0x76d8, 0xc45c, 0x45bb, 0x1, 0x1);
        gbc.writeMem(0xad63, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcec3, gbc.sp());
        EXPECT(0xad65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad63));
        EXPECT(0x10, gbc.readMem(0xad64));
        // CB 10 012F
        gbc.setState(0x755b, 0xcd12, 0xbe00, 0x97f, 0xa3a5, 0xf705, 0x0, 0x0);
        gbc.writeMem(0x755b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcd12, gbc.sp());
        EXPECT(0x755d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0130
        gbc.setState(0xa43, 0x9330, 0x4b80, 0xeb6a, 0xba36, 0x64ac, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9330, gbc.sp());
        EXPECT(0xa45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0131
        gbc.setState(0x43f5, 0x7af4, 0x4460, 0x6865, 0x7670, 0xeaf8, 0x0, 0x0);
        gbc.writeMem(0x43f5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7af4, gbc.sp());
        EXPECT(0x43f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0132
        gbc.setState(0x4cdf, 0xd3f4, 0x8060, 0x6ef3, 0xacbc, 0xa67b, 0x1, 0x1);
        gbc.writeMem(0x4cdf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd3f4, gbc.sp());
        EXPECT(0x4ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0133
        gbc.setState(0xa4a3, 0xbdea, 0x5790, 0xe5b2, 0x563d, 0xcfce, 0x0, 0x0);
        gbc.writeMem(0xa4a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0xa4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a3));
        EXPECT(0x10, gbc.readMem(0xa4a4));
        // CB 10 0134
        gbc.setState(0x9393, 0xa0e0, 0x8970, 0x9157, 0xb697, 0xa510, 0x0, 0x0);
        gbc.writeMem(0x9393, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa0e0, gbc.sp());
        EXPECT(0x9395, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9393));
        EXPECT(0x10, gbc.readMem(0x9394));
        // CB 10 0135
        gbc.setState(0xc9f3, 0x9f20, 0x9d60, 0xaf65, 0x3c5b, 0x663, 0x0, 0x1);
        gbc.writeMem(0xc9f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0xc9f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f3));
        EXPECT(0x10, gbc.readMem(0xc9f4));
        // CB 10 0136
        gbc.setState(0x92c7, 0xd562, 0x9aa0, 0x25c9, 0xe7b0, 0x3a82, 0x0, 0x0);
        gbc.writeMem(0x92c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd562, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c7));
        EXPECT(0x10, gbc.readMem(0x92c8));
        // CB 10 0137
        gbc.setState(0x71cc, 0x7e7b, 0x65a0, 0xd08b, 0x820, 0xf9d9, 0x1, 0x0);
        gbc.writeMem(0x71cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7e7b, gbc.sp());
        EXPECT(0x71ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0138
        gbc.setState(0x3fd6, 0xf2eb, 0x9e80, 0x5386, 0x6dd0, 0xf105, 0x0, 0x0);
        gbc.writeMem(0x3fd6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x3fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0139
        gbc.setState(0x2fd9, 0x7059, 0x8e60, 0xc088, 0x8ace, 0x72ab, 0x1, 0x0);
        gbc.writeMem(0x2fd9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0x2fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 013A
        gbc.setState(0x1c42, 0x9f1a, 0xa040, 0xda24, 0x471e, 0xf496, 0x1, 0x1);
        gbc.writeMem(0x1c42, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9f1a, gbc.sp());
        EXPECT(0x1c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 013B
        gbc.setState(0x12b7, 0x7d5d, 0x15c0, 0xb88c, 0xd4fb, 0x2bf7, 0x1, 0x0);
        gbc.writeMem(0x12b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0x12b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 013C
        gbc.setState(0xe728, 0xf88e, 0x4a40, 0xbe89, 0x135d, 0x7059, 0x0, 0x0);
        gbc.writeMem(0xe728, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf88e, gbc.sp());
        EXPECT(0xe72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe728));
        EXPECT(0x10, gbc.readMem(0xe729));
        // CB 10 013D
        gbc.setState(0x7ef4, 0x7e43, 0xbf10, 0xb86d, 0xa8d1, 0xa40e, 0x1, 0x1);
        gbc.writeMem(0x7ef4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7e43, gbc.sp());
        EXPECT(0x7ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 013E
        gbc.setState(0x1f7d, 0xd5d1, 0x26b0, 0x40c9, 0xda20, 0xc71c, 0x0, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd5d1, gbc.sp());
        EXPECT(0x1f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 013F
        gbc.setState(0x7361, 0xe092, 0x7050, 0x1ac1, 0xdb1f, 0xfff9, 0x1, 0x0);
        gbc.writeMem(0x7361, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe092, gbc.sp());
        EXPECT(0x7363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0140
        gbc.setState(0xa84, 0x57f2, 0x9490, 0x9fc3, 0xd2da, 0x977, 0x1, 0x0);
        gbc.writeMem(0xa84, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x57f2, gbc.sp());
        EXPECT(0xa86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0141
        gbc.setState(0x9424, 0x3b30, 0x43c0, 0x4891, 0xe655, 0x5e7b, 0x1, 0x1);
        gbc.writeMem(0x9424, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3b30, gbc.sp());
        EXPECT(0x9426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9424));
        EXPECT(0x10, gbc.readMem(0x9425));
        // CB 10 0142
        gbc.setState(0x1872, 0xe007, 0xeee0, 0x3da9, 0x154c, 0xcf73, 0x0, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe007, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0143
        gbc.setState(0x12a8, 0x17d8, 0xd080, 0x99db, 0xd213, 0xddbf, 0x0, 0x1);
        gbc.writeMem(0x12a8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x17d8, gbc.sp());
        EXPECT(0x12aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0144
        gbc.setState(0x1fee, 0x1b36, 0xaa70, 0xbc48, 0x167, 0xb1a4, 0x1, 0x0);
        gbc.writeMem(0x1fee, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1b36, gbc.sp());
        EXPECT(0x1ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0145
        gbc.setState(0x3811, 0x583b, 0xddb0, 0xe484, 0x1e3a, 0x28c0, 0x0, 0x1);
        gbc.writeMem(0x3811, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x583b, gbc.sp());
        EXPECT(0x3813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0146
        gbc.setState(0x41b1, 0xf7, 0xfd40, 0xae6b, 0x1990, 0x3c36, 0x0, 0x1);
        gbc.writeMem(0x41b1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf7, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0147
        gbc.setState(0x5ee7, 0x375f, 0x4480, 0xab41, 0xd371, 0xfe, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x375f, gbc.sp());
        EXPECT(0x5ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0148
        gbc.setState(0x9f21, 0xace1, 0xc820, 0x27b3, 0x7a3, 0x5886, 0x0, 0x0);
        gbc.writeMem(0x9f21, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xace1, gbc.sp());
        EXPECT(0x9f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f21));
        EXPECT(0x10, gbc.readMem(0x9f22));
        // CB 10 0149
        gbc.setState(0x778e, 0xec69, 0x89c0, 0x840e, 0x6abe, 0x8a7d, 0x1, 0x0);
        gbc.writeMem(0x778e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xec69, gbc.sp());
        EXPECT(0x7790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 014A
        gbc.setState(0x947e, 0xfb32, 0x7190, 0x7eaf, 0x3a9f, 0xb8e4, 0x0, 0x1);
        gbc.writeMem(0x947e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfb32, gbc.sp());
        EXPECT(0x9480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947e));
        EXPECT(0x10, gbc.readMem(0x947f));
        // CB 10 014B
        gbc.setState(0xc6c9, 0x6095, 0x3a20, 0xd4e0, 0x95ac, 0xd82a, 0x1, 0x0);
        gbc.writeMem(0xc6c9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6095, gbc.sp());
        EXPECT(0xc6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c9));
        EXPECT(0x10, gbc.readMem(0xc6ca));
        // CB 10 014C
        gbc.setState(0x6f2f, 0x35d9, 0x6b0, 0xc81c, 0xe0cc, 0xf17a, 0x0, 0x0);
        gbc.writeMem(0x6f2f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x35d9, gbc.sp());
        EXPECT(0x6f31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 014E
        gbc.setState(0x22e7, 0xf6d, 0xbda0, 0xb964, 0xfdf9, 0x2889, 0x1, 0x1);
        gbc.writeMem(0x22e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf6d, gbc.sp());
        EXPECT(0x22e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 014F
        gbc.setState(0x739a, 0xc66d, 0xf3e0, 0x574a, 0x6262, 0xeb13, 0x1, 0x1);
        gbc.writeMem(0x739a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc66d, gbc.sp());
        EXPECT(0x739c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0150
        gbc.setState(0x6079, 0x9235, 0x5f90, 0xaf94, 0x1b7f, 0x970c, 0x1, 0x1);
        gbc.writeMem(0x6079, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9235, gbc.sp());
        EXPECT(0x607b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0151
        gbc.setState(0x4f1e, 0x178f, 0x9710, 0x294d, 0x2bbf, 0x7765, 0x1, 0x0);
        gbc.writeMem(0x4f1e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x178f, gbc.sp());
        EXPECT(0x4f20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0152
        gbc.setState(0x3daf, 0xd73e, 0x3840, 0xc9a9, 0xff25, 0x9b52, 0x1, 0x1);
        gbc.writeMem(0x3daf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd73e, gbc.sp());
        EXPECT(0x3db1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0153
        gbc.setState(0x8749, 0x6125, 0xe7c0, 0x5109, 0x6439, 0x326, 0x1, 0x0);
        gbc.writeMem(0x8749, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6125, gbc.sp());
        EXPECT(0x874b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8749));
        EXPECT(0x10, gbc.readMem(0x874a));
        // CB 10 0154
        gbc.setState(0x7d5d, 0x1aa3, 0x8ad0, 0x450f, 0xd4e5, 0x92d5, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1aa3, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0155
        gbc.setState(0xc2e9, 0x5172, 0x25e0, 0x8f14, 0x2f9a, 0x3f4c, 0x1, 0x1);
        gbc.writeMem(0xc2e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5172, gbc.sp());
        EXPECT(0xc2eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e9));
        EXPECT(0x10, gbc.readMem(0xc2ea));
        // CB 10 0156
        gbc.setState(0xb726, 0xc608, 0xedf0, 0x4bc3, 0x6472, 0x90a, 0x1, 0x1);
        gbc.writeMem(0xb726, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc608, gbc.sp());
        EXPECT(0xb728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb726));
        EXPECT(0x10, gbc.readMem(0xb727));
        // CB 10 0158
        gbc.setState(0x802f, 0xeb45, 0xc410, 0x3579, 0x5ed3, 0x3c13, 0x0, 0x1);
        gbc.writeMem(0x802f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xeb45, gbc.sp());
        EXPECT(0x8031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802f));
        EXPECT(0x10, gbc.readMem(0x8030));
        // CB 10 0159
        gbc.setState(0x2ddc, 0xb97, 0x4540, 0x5a5a, 0x6d06, 0xdbb9, 0x1, 0x0);
        gbc.writeMem(0x2ddc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb97, gbc.sp());
        EXPECT(0x2dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 015A
        gbc.setState(0x1870, 0xc76a, 0x68b0, 0xbec5, 0x25ef, 0x95ac, 0x1, 0x0);
        gbc.writeMem(0x1870, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc76a, gbc.sp());
        EXPECT(0x1872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 015B
        gbc.setState(0x87e, 0xbb14, 0x9eb0, 0xac57, 0x934, 0x2105, 0x0, 0x0);
        gbc.writeMem(0x87e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbb14, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 015C
        gbc.setState(0xee0d, 0xb843, 0x2390, 0xa5e0, 0x5df6, 0x7abd, 0x1, 0x0);
        gbc.writeMem(0xee0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb843, gbc.sp());
        EXPECT(0xee0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee0d));
        EXPECT(0x10, gbc.readMem(0xee0e));
        // CB 10 015D
        gbc.setState(0x358b, 0xa928, 0xd5c0, 0x3258, 0xb434, 0xfba3, 0x1, 0x0);
        gbc.writeMem(0x358b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa928, gbc.sp());
        EXPECT(0x358d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 015E
        gbc.setState(0x787c, 0x28a0, 0x8900, 0xa6c6, 0x71ff, 0x1211, 0x0, 0x1);
        gbc.writeMem(0x787c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x28a0, gbc.sp());
        EXPECT(0x787e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 015F
        gbc.setState(0x4b1, 0x147, 0x2ad0, 0x85c8, 0x5962, 0xf3c2, 0x0, 0x1);
        gbc.writeMem(0x4b1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x147, gbc.sp());
        EXPECT(0x4b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0160
        gbc.setState(0x3638, 0xdd94, 0x2920, 0x871d, 0xa5e1, 0xd4e2, 0x1, 0x0);
        gbc.writeMem(0x3638, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdd94, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0161
        gbc.setState(0xb483, 0xeee0, 0x46b0, 0xf805, 0x644d, 0x4b50, 0x1, 0x0);
        gbc.writeMem(0xb483, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xeee0, gbc.sp());
        EXPECT(0xb485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb483));
        EXPECT(0x10, gbc.readMem(0xb484));
        // CB 10 0162
        gbc.setState(0x47db, 0xb781, 0x8550, 0xafc, 0xe282, 0xcf, 0x1, 0x0);
        gbc.writeMem(0x47db, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb781, gbc.sp());
        EXPECT(0x47dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0163
        gbc.setState(0x91c8, 0x71cb, 0x85f0, 0x46ee, 0x2114, 0xe03f, 0x0, 0x1);
        gbc.writeMem(0x91c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x71cb, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c8));
        EXPECT(0x10, gbc.readMem(0x91c9));
        // CB 10 0164
        gbc.setState(0xce1a, 0xa323, 0x3270, 0x83c9, 0x80e4, 0x5d80, 0x1, 0x1);
        gbc.writeMem(0xce1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa323, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0x10, gbc.readMem(0xce1b));
        // CB 10 0165
        gbc.setState(0x688b, 0xcf03, 0xe2a0, 0x9504, 0xb322, 0x4779, 0x1, 0x1);
        gbc.writeMem(0x688b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcf03, gbc.sp());
        EXPECT(0x688d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0167
        gbc.setState(0x94f8, 0x7a17, 0xc730, 0xbb0b, 0x450e, 0x1cd3, 0x0, 0x1);
        gbc.writeMem(0x94f8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a17, gbc.sp());
        EXPECT(0x94fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f8));
        EXPECT(0x10, gbc.readMem(0x94f9));
        // CB 10 0168
        gbc.setState(0x63e7, 0xb68f, 0xe5a0, 0x2ff4, 0x31d, 0xdaa6, 0x1, 0x0);
        gbc.writeMem(0x63e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb68f, gbc.sp());
        EXPECT(0x63e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0169
        gbc.setState(0x8d04, 0x3348, 0x67e0, 0x61e5, 0xc131, 0x9391, 0x0, 0x1);
        gbc.writeMem(0x8d04, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3348, gbc.sp());
        EXPECT(0x8d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d04));
        EXPECT(0x10, gbc.readMem(0x8d05));
        // CB 10 016A
        gbc.setState(0x6760, 0x9e08, 0x1f70, 0xcd2, 0xd287, 0xda8e, 0x0, 0x1);
        gbc.writeMem(0x6760, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9e08, gbc.sp());
        EXPECT(0x6762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 016B
        gbc.setState(0xc22, 0xdbb1, 0x4570, 0x35e, 0xbf5, 0xa8da, 0x0, 0x0);
        gbc.writeMem(0xc22, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdbb1, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 016C
        gbc.setState(0x970d, 0xa242, 0xc020, 0x3c16, 0x62c8, 0x79cf, 0x1, 0x0);
        gbc.writeMem(0x970d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x970f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x970d));
        EXPECT(0x10, gbc.readMem(0x970e));
        // CB 10 016E
        gbc.setState(0xdc85, 0x5bf7, 0xf990, 0x5169, 0x87f1, 0x6173, 0x1, 0x1);
        gbc.writeMem(0xdc85, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5bf7, gbc.sp());
        EXPECT(0xdc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc85));
        EXPECT(0x10, gbc.readMem(0xdc86));
        // CB 10 016F
        gbc.setState(0x7a81, 0x6135, 0xb30, 0xc678, 0x7092, 0xac8a, 0x0, 0x0);
        gbc.writeMem(0x7a81, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0171
        gbc.setState(0x8f8, 0xc48a, 0xea80, 0xce6c, 0x4246, 0xffdc, 0x1, 0x0);
        gbc.writeMem(0x8f8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc48a, gbc.sp());
        EXPECT(0x8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0172
        gbc.setState(0xfad, 0x8ce1, 0xda00, 0x6774, 0xf3e0, 0x6f31, 0x0, 0x1);
        gbc.writeMem(0xfad, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0xfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0173
        gbc.setState(0x201b, 0x90d7, 0x7a40, 0xbca, 0x58a8, 0x58e9, 0x1, 0x1);
        gbc.writeMem(0x201b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x90d7, gbc.sp());
        EXPECT(0x201d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0174
        gbc.setState(0xcab7, 0x52ed, 0x6d0, 0x479, 0x3172, 0x6650, 0x0, 0x1);
        gbc.writeMem(0xcab7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x52ed, gbc.sp());
        EXPECT(0xcab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab7));
        EXPECT(0x10, gbc.readMem(0xcab8));
        // CB 10 0175
        gbc.setState(0x1020, 0xd5, 0xc970, 0xfff9, 0xdd88, 0x3779, 0x1, 0x0);
        gbc.writeMem(0x1020, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0x1022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0176
        gbc.setState(0x3a93, 0x9bf1, 0xeba0, 0xdbd8, 0x3879, 0x693, 0x0, 0x1);
        gbc.writeMem(0x3a93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0x3a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0177
        gbc.setState(0xdb7c, 0x765e, 0x4c50, 0x51fa, 0xea75, 0x1c26, 0x1, 0x0);
        gbc.writeMem(0xdb7c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x765e, gbc.sp());
        EXPECT(0xdb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7c));
        EXPECT(0x10, gbc.readMem(0xdb7d));
        // CB 10 0178
        gbc.setState(0xbcf1, 0xf724, 0x3cc0, 0xdcf9, 0xd5ba, 0x2f67, 0x0, 0x0);
        gbc.writeMem(0xbcf1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xbcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf1));
        EXPECT(0x10, gbc.readMem(0xbcf2));
        // CB 10 0179
        gbc.setState(0x88f6, 0x13e2, 0x70c0, 0x6a71, 0x2fd9, 0x96c3, 0x0, 0x1);
        gbc.writeMem(0x88f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x13e2, gbc.sp());
        EXPECT(0x88f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f6));
        EXPECT(0x10, gbc.readMem(0x88f7));
        // CB 10 017A
        gbc.setState(0xed09, 0x2c48, 0x78b0, 0x84a5, 0xb303, 0xc898, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2c48, gbc.sp());
        EXPECT(0xed0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed09));
        EXPECT(0x10, gbc.readMem(0xed0a));
        // CB 10 017B
        gbc.setState(0x843b, 0xa0f8, 0x160, 0x22f3, 0x4075, 0xbe41, 0x1, 0x1);
        gbc.writeMem(0x843b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0x843d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843b));
        EXPECT(0x10, gbc.readMem(0x843c));
        // CB 10 017C
        gbc.setState(0x6305, 0xcd94, 0xd2f0, 0xccd3, 0x50a2, 0x7aad, 0x0, 0x0);
        gbc.writeMem(0x6305, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcd94, gbc.sp());
        EXPECT(0x6307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 017D
        gbc.setState(0x276e, 0x57b4, 0x3ff0, 0x1092, 0x2829, 0x17d3, 0x1, 0x0);
        gbc.writeMem(0x276e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x57b4, gbc.sp());
        EXPECT(0x2770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 017E
        gbc.setState(0x5314, 0x2604, 0x39e0, 0x4e6d, 0xd00a, 0x741f, 0x1, 0x0);
        gbc.writeMem(0x5314, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2604, gbc.sp());
        EXPECT(0x5316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 017F
        gbc.setState(0xa792, 0xf2fa, 0xad0, 0xc24a, 0x7e86, 0x7b28, 0x0, 0x0);
        gbc.writeMem(0xa792, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf2fa, gbc.sp());
        EXPECT(0xa794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa792));
        EXPECT(0x10, gbc.readMem(0xa793));
        // CB 10 0181
        gbc.setState(0x1d4f, 0xd885, 0x6f0, 0xd21d, 0x7157, 0xcfb4, 0x1, 0x0);
        gbc.writeMem(0x1d4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd885, gbc.sp());
        EXPECT(0x1d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0182
        gbc.setState(0x4699, 0x197d, 0x8500, 0xc80c, 0x6769, 0x2574, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x197d, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0183
        gbc.setState(0x8138, 0xd5ea, 0xf520, 0xbcc9, 0x2e08, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x8138, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd5ea, gbc.sp());
        EXPECT(0x813a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8138));
        EXPECT(0x10, gbc.readMem(0x8139));
        // CB 10 0184
        gbc.setState(0xd130, 0x8efa, 0x6850, 0xe98b, 0xd2bc, 0x457b, 0x1, 0x0);
        gbc.writeMem(0xd130, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd130));
        EXPECT(0x10, gbc.readMem(0xd131));
        // CB 10 0185
        gbc.setState(0x231f, 0xd329, 0x4450, 0xa8ca, 0x9e32, 0xef5d, 0x1, 0x1);
        gbc.writeMem(0x231f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd329, gbc.sp());
        EXPECT(0x2321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0186
        gbc.setState(0x6b37, 0x2db9, 0x6b50, 0xfa32, 0x5dcb, 0x5ada, 0x0, 0x0);
        gbc.writeMem(0x6b37, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2db9, gbc.sp());
        EXPECT(0x6b39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0187
        gbc.setState(0x7e32, 0x9cf1, 0xf0e0, 0x92b0, 0x51e7, 0xce9a, 0x1, 0x1);
        gbc.writeMem(0x7e32, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9cf1, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0188
        gbc.setState(0x9ae9, 0xfa8e, 0x6200, 0xcba6, 0xb86d, 0xad8, 0x1, 0x0);
        gbc.writeMem(0x9ae9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xfa8e, gbc.sp());
        EXPECT(0x9aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae9));
        EXPECT(0x10, gbc.readMem(0x9aea));
        // CB 10 0189
        gbc.setState(0x9bcb, 0x83e0, 0xf5d0, 0x9cd8, 0x103f, 0xd818, 0x1, 0x0);
        gbc.writeMem(0x9bcb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x83e0, gbc.sp());
        EXPECT(0x9bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcb));
        EXPECT(0x10, gbc.readMem(0x9bcc));
        // CB 10 018A
        gbc.setState(0x1709, 0x485c, 0xe1c0, 0xf167, 0x8249, 0x4765, 0x1, 0x1);
        gbc.writeMem(0x1709, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x485c, gbc.sp());
        EXPECT(0x170b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 018B
        gbc.setState(0x3623, 0x90b9, 0x33f0, 0xd5dd, 0xf, 0xe710, 0x0, 0x1);
        gbc.writeMem(0x3623, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x90b9, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 018C
        gbc.setState(0x36c9, 0x97a9, 0x6780, 0xcee0, 0xb242, 0xf1c3, 0x1, 0x0);
        gbc.writeMem(0x36c9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x97a9, gbc.sp());
        EXPECT(0x36cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 018D
        gbc.setState(0x4b9, 0xeccf, 0xd0, 0x127c, 0x3344, 0x1a37, 0x1, 0x0);
        gbc.writeMem(0x4b9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeccf, gbc.sp());
        EXPECT(0x4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 018E
        gbc.setState(0x2f27, 0x3517, 0xfc90, 0xcfee, 0xe295, 0x25c0, 0x1, 0x0);
        gbc.writeMem(0x2f27, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0x2f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 018F
        gbc.setState(0x1580, 0x7e01, 0xb210, 0x5baa, 0xff27, 0xc488, 0x1, 0x0);
        gbc.writeMem(0x1580, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0x1582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0190
        gbc.setState(0xdd18, 0x85a0, 0x1f60, 0x2648, 0x270e, 0xe08f, 0x1, 0x1);
        gbc.writeMem(0xdd18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0xdd1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd18));
        EXPECT(0x10, gbc.readMem(0xdd19));
        // CB 10 0191
        gbc.setState(0x156b, 0xea07, 0x9830, 0x8fc1, 0xb9d, 0xbc08, 0x1, 0x0);
        gbc.writeMem(0x156b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xea07, gbc.sp());
        EXPECT(0x156d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0192
        gbc.setState(0x7aca, 0x77f3, 0x3890, 0x3193, 0x3b8e, 0x465b, 0x0, 0x1);
        gbc.writeMem(0x7aca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x77f3, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0193
        gbc.setState(0x2993, 0xe608, 0x39a0, 0x67f5, 0x3e8b, 0xdcc4, 0x0, 0x0);
        gbc.writeMem(0x2993, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe608, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0194
        gbc.setState(0x1b6a, 0x3106, 0x97b0, 0x582a, 0xfc0, 0x385e, 0x1, 0x0);
        gbc.writeMem(0x1b6a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3106, gbc.sp());
        EXPECT(0x1b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0195
        gbc.setState(0xa199, 0x996a, 0x4020, 0xd545, 0x1b80, 0x82e7, 0x1, 0x1);
        gbc.writeMem(0xa199, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x996a, gbc.sp());
        EXPECT(0xa19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa199));
        EXPECT(0x10, gbc.readMem(0xa19a));
        // CB 10 0196
        gbc.setState(0x49e8, 0x5a20, 0xf100, 0x83d2, 0x4beb, 0x3c70, 0x0, 0x0);
        gbc.writeMem(0x49e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0x49ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0197
        gbc.setState(0xafc9, 0x7f, 0x4c40, 0x1f36, 0x6d5f, 0x6569, 0x0, 0x0);
        gbc.writeMem(0xafc9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7f, gbc.sp());
        EXPECT(0xafcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc9));
        EXPECT(0x10, gbc.readMem(0xafca));
        // CB 10 0198
        gbc.setState(0xccfb, 0xcda9, 0xbae0, 0x4ff5, 0xa27a, 0x6606, 0x1, 0x0);
        gbc.writeMem(0xccfb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcda9, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfb));
        EXPECT(0x10, gbc.readMem(0xccfc));
        // CB 10 019A
        gbc.setState(0x2753, 0x8b43, 0x410, 0xc94c, 0x83f6, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0x2753, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8b43, gbc.sp());
        EXPECT(0x2755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 019B
        gbc.setState(0xa75d, 0x7bc6, 0x28a0, 0x82f9, 0xba37, 0x92e9, 0x1, 0x1);
        gbc.writeMem(0xa75d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7bc6, gbc.sp());
        EXPECT(0xa75f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75d));
        EXPECT(0x10, gbc.readMem(0xa75e));
        // CB 10 019C
        gbc.setState(0xdefe, 0xbc51, 0xe6a0, 0xdfc6, 0xd72b, 0x7d8c, 0x0, 0x0);
        gbc.writeMem(0xdefe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0xdf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdefe));
        EXPECT(0x10, gbc.readMem(0xdeff));
        // CB 10 019D
        gbc.setState(0xcc26, 0x5bcb, 0x5ac0, 0x4623, 0x31a5, 0x378e, 0x1, 0x1);
        gbc.writeMem(0xcc26, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5bcb, gbc.sp());
        EXPECT(0xcc28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc26));
        EXPECT(0x10, gbc.readMem(0xcc27));
        // CB 10 019E
        gbc.setState(0x5e71, 0x11ac, 0x4af0, 0x42ff, 0x5156, 0xf057, 0x0, 0x0);
        gbc.writeMem(0x5e71, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x11ac, gbc.sp());
        EXPECT(0x5e73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 019F
        gbc.setState(0x9dbc, 0x3c0f, 0x4b80, 0xbc94, 0x881f, 0x1f83, 0x1, 0x1);
        gbc.writeMem(0x9dbc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3c0f, gbc.sp());
        EXPECT(0x9dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbc));
        EXPECT(0x10, gbc.readMem(0x9dbd));
        // CB 10 01A0
        gbc.setState(0x4903, 0x14fd, 0x5220, 0xe33f, 0x1bed, 0x3ed7, 0x1, 0x0);
        gbc.writeMem(0x4903, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x14fd, gbc.sp());
        EXPECT(0x4905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01A1
        gbc.setState(0x8b7a, 0xaa61, 0xb4a0, 0x1feb, 0x91fb, 0xa34c, 0x0, 0x0);
        gbc.writeMem(0x8b7a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaa61, gbc.sp());
        EXPECT(0x8b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7a));
        EXPECT(0x10, gbc.readMem(0x8b7b));
        // CB 10 01A2
        gbc.setState(0xa932, 0xe978, 0xd810, 0x9f90, 0xb470, 0xa040, 0x1, 0x1);
        gbc.writeMem(0xa932, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0xa934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa932));
        EXPECT(0x10, gbc.readMem(0xa933));
        // CB 10 01A3
        gbc.setState(0x1a4e, 0xfb2f, 0x6e0, 0xcf6a, 0xb94c, 0x5642, 0x0, 0x1);
        gbc.writeMem(0x1a4e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfb2f, gbc.sp());
        EXPECT(0x1a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01A4
        gbc.setState(0xabb9, 0x5d32, 0x75d0, 0x71dc, 0xf7cf, 0x27ee, 0x1, 0x0);
        gbc.writeMem(0xabb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5d32, gbc.sp());
        EXPECT(0xabbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb9));
        EXPECT(0x10, gbc.readMem(0xabba));
        // CB 10 01A5
        gbc.setState(0xb116, 0x7a6e, 0x9e20, 0xdd1c, 0x539f, 0xab63, 0x1, 0x0);
        gbc.writeMem(0xb116, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7a6e, gbc.sp());
        EXPECT(0xb118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb116));
        EXPECT(0x10, gbc.readMem(0xb117));
        // CB 10 01A6
        gbc.setState(0x96d6, 0x84e1, 0xfbd0, 0xbb0, 0x3ec0, 0xd2eb, 0x1, 0x1);
        gbc.writeMem(0x96d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x84e1, gbc.sp());
        EXPECT(0x96d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d6));
        EXPECT(0x10, gbc.readMem(0x96d7));
        // CB 10 01A7
        gbc.setState(0xbb27, 0x9eab, 0xd750, 0x70fc, 0x7a9e, 0x96a6, 0x0, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9eab, gbc.sp());
        EXPECT(0xbb29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb27));
        EXPECT(0x10, gbc.readMem(0xbb28));
        // CB 10 01A8
        gbc.setState(0x55b7, 0xf05b, 0x27b0, 0x4ac7, 0x5c5e, 0xabf9, 0x1, 0x1);
        gbc.writeMem(0x55b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf05b, gbc.sp());
        EXPECT(0x55b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01A9
        gbc.setState(0x90c7, 0x6cd2, 0x13f0, 0x1642, 0x2e8d, 0xe0b6, 0x1, 0x1);
        gbc.writeMem(0x90c7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6cd2, gbc.sp());
        EXPECT(0x90c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c7));
        EXPECT(0x10, gbc.readMem(0x90c8));
        // CB 10 01AA
        gbc.setState(0xc6fa, 0x76b6, 0xc160, 0x6315, 0xd84, 0x2f01, 0x0, 0x1);
        gbc.writeMem(0xc6fa, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x76b6, gbc.sp());
        EXPECT(0xc6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6fa));
        EXPECT(0x10, gbc.readMem(0xc6fb));
        // CB 10 01AB
        gbc.setState(0x8372, 0xa14f, 0x9360, 0x9023, 0xa856, 0x4426, 0x1, 0x0);
        gbc.writeMem(0x8372, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa14f, gbc.sp());
        EXPECT(0x8374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8372));
        EXPECT(0x10, gbc.readMem(0x8373));
        // CB 10 01AC
        gbc.setState(0xe180, 0xe650, 0x4700, 0x5e05, 0x19e5, 0x1a4d, 0x0, 0x0);
        gbc.writeMem(0xe180, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe650, gbc.sp());
        EXPECT(0xe182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe180));
        EXPECT(0x10, gbc.readMem(0xe181));
        // CB 10 01AD
        gbc.setState(0x662, 0x43c, 0x9610, 0x1dc0, 0x913, 0xe405, 0x1, 0x1);
        gbc.writeMem(0x662, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x43c, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01AE
        gbc.setState(0x2175, 0x43a5, 0x8380, 0x5c10, 0x461c, 0x731, 0x0, 0x0);
        gbc.writeMem(0x2175, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x43a5, gbc.sp());
        EXPECT(0x2177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01AF
        gbc.setState(0x242d, 0x1b18, 0x7020, 0x7c10, 0x6f2b, 0x2640, 0x1, 0x0);
        gbc.writeMem(0x242d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1b18, gbc.sp());
        EXPECT(0x242f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01B0
        gbc.setState(0x9a78, 0x450e, 0xa850, 0x459a, 0xd01b, 0xf2a1, 0x0, 0x1);
        gbc.writeMem(0x9a78, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x450e, gbc.sp());
        EXPECT(0x9a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a78));
        EXPECT(0x10, gbc.readMem(0x9a79));
        // CB 10 01B1
        gbc.setState(0x5fa1, 0xda75, 0x90a0, 0xc006, 0xa80c, 0xd4db, 0x1, 0x1);
        gbc.writeMem(0x5fa1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xda75, gbc.sp());
        EXPECT(0x5fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01B2
        gbc.setState(0x6d7f, 0x452e, 0x6050, 0x73a7, 0x8b4b, 0xa9bc, 0x1, 0x1);
        gbc.writeMem(0x6d7f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x452e, gbc.sp());
        EXPECT(0x6d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01B3
        gbc.setState(0xdcf, 0xb6b5, 0xdb80, 0x6a7c, 0xabe9, 0x9274, 0x1, 0x0);
        gbc.writeMem(0xdcf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb6b5, gbc.sp());
        EXPECT(0xdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01B4
        gbc.setState(0xd42d, 0xda2e, 0x8540, 0x57b0, 0x66a5, 0x84c8, 0x1, 0x0);
        gbc.writeMem(0xd42d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xda2e, gbc.sp());
        EXPECT(0xd42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42d));
        EXPECT(0x10, gbc.readMem(0xd42e));
        // CB 10 01B5
        gbc.setState(0x56de, 0x4717, 0x3a20, 0xb5b3, 0x13cc, 0x5654, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4717, gbc.sp());
        EXPECT(0x56e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01B6
        gbc.setState(0x81f2, 0x9198, 0x5700, 0xd8fe, 0xcc99, 0x1516, 0x1, 0x0);
        gbc.writeMem(0x81f2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9198, gbc.sp());
        EXPECT(0x81f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f2));
        EXPECT(0x10, gbc.readMem(0x81f3));
        // CB 10 01B7
        gbc.setState(0x8da5, 0x83b5, 0x1850, 0xf17c, 0x5ee0, 0xa768, 0x1, 0x0);
        gbc.writeMem(0x8da5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0x8da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da5));
        EXPECT(0x10, gbc.readMem(0x8da6));
        // CB 10 01B8
        gbc.setState(0xb661, 0x99e6, 0xbfb0, 0x6701, 0x7191, 0xb048, 0x0, 0x1);
        gbc.writeMem(0xb661, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x99e6, gbc.sp());
        EXPECT(0xb663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb661));
        EXPECT(0x10, gbc.readMem(0xb662));
        // CB 10 01B9
        gbc.setState(0x3674, 0x235e, 0x5fe0, 0x986d, 0xea63, 0xe7af, 0x0, 0x0);
        gbc.writeMem(0x3674, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x235e, gbc.sp());
        EXPECT(0x3676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01BA
        gbc.setState(0x4cf3, 0x56b5, 0x1e00, 0xb1b3, 0x415a, 0x2699, 0x1, 0x0);
        gbc.writeMem(0x4cf3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x56b5, gbc.sp());
        EXPECT(0x4cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01BC
        gbc.setState(0x9541, 0xf4f4, 0x5700, 0xc9be, 0xde3c, 0x6f50, 0x1, 0x0);
        gbc.writeMem(0x9541, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf4f4, gbc.sp());
        EXPECT(0x9543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9541));
        EXPECT(0x10, gbc.readMem(0x9542));
        // CB 10 01BD
        gbc.setState(0xe044, 0x9c38, 0xe450, 0xfb2d, 0xe013, 0xd401, 0x0, 0x0);
        gbc.writeMem(0xe044, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0xe046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe044));
        EXPECT(0x10, gbc.readMem(0xe045));
        // CB 10 01BE
        gbc.setState(0x8f88, 0xe07, 0x3300, 0x9e02, 0xeb0f, 0x4b0e, 0x1, 0x0);
        gbc.writeMem(0x8f88, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe07, gbc.sp());
        EXPECT(0x8f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f88));
        EXPECT(0x10, gbc.readMem(0x8f89));
        // CB 10 01BF
        gbc.setState(0xe6e9, 0x47b0, 0xb870, 0x6291, 0xcab9, 0x68ac, 0x0, 0x1);
        gbc.writeMem(0xe6e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x47b0, gbc.sp());
        EXPECT(0xe6eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e9));
        EXPECT(0x10, gbc.readMem(0xe6ea));
        // CB 10 01C0
        gbc.setState(0x62d8, 0x552c, 0x1fa0, 0xcf98, 0xa89e, 0x3954, 0x0, 0x0);
        gbc.writeMem(0x62d8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01C2
        gbc.setState(0x310f, 0xf4a6, 0x4520, 0x1364, 0x311a, 0x1f59, 0x0, 0x0);
        gbc.writeMem(0x310f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0x3111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01C3
        gbc.setState(0x5c9a, 0x8c4d, 0x1d00, 0xa0b8, 0xc5c2, 0x8dd4, 0x0, 0x1);
        gbc.writeMem(0x5c9a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x5c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01C4
        gbc.setState(0x7625, 0x2a0b, 0xa370, 0xfbe8, 0x979d, 0xa75b, 0x0, 0x0);
        gbc.writeMem(0x7625, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2a0b, gbc.sp());
        EXPECT(0x7627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01C5
        gbc.setState(0x36a3, 0x9c9b, 0x9bf0, 0x2e41, 0x6545, 0x4033, 0x0, 0x1);
        gbc.writeMem(0x36a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9c9b, gbc.sp());
        EXPECT(0x36a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01C6
        gbc.setState(0x71d7, 0xbed2, 0xc530, 0x763a, 0x271b, 0xa3d9, 0x1, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbed2, gbc.sp());
        EXPECT(0x71d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01C7
        gbc.setState(0xe5dd, 0x8aa4, 0xfc80, 0xa278, 0x8f2f, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0xe5dd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8aa4, gbc.sp());
        EXPECT(0xe5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5dd));
        EXPECT(0x10, gbc.readMem(0xe5de));
        // CB 10 01C9
        gbc.setState(0x8eeb, 0xdd7e, 0x7250, 0x2b4d, 0xde2, 0x9b8, 0x0, 0x1);
        gbc.writeMem(0x8eeb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdd7e, gbc.sp());
        EXPECT(0x8eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eeb));
        EXPECT(0x10, gbc.readMem(0x8eec));
        // CB 10 01CA
        gbc.setState(0xb6dc, 0xbba8, 0x4010, 0xaecb, 0x18da, 0xc2b4, 0x0, 0x1);
        gbc.writeMem(0xb6dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0xb6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6dc));
        EXPECT(0x10, gbc.readMem(0xb6dd));
        // CB 10 01CB
        gbc.setState(0xc1c3, 0x765d, 0x4de0, 0x2c76, 0xad2a, 0xa4f8, 0x0, 0x1);
        gbc.writeMem(0xc1c3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x765d, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c3));
        EXPECT(0x10, gbc.readMem(0xc1c4));
        // CB 10 01CC
        gbc.setState(0xcde2, 0x3499, 0x9780, 0xb7c2, 0x139c, 0xe0e7, 0x1, 0x1);
        gbc.writeMem(0xcde2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3499, gbc.sp());
        EXPECT(0xcde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde2));
        EXPECT(0x10, gbc.readMem(0xcde3));
        // CB 10 01CD
        gbc.setState(0xcd64, 0xb0de, 0x9a30, 0x36ea, 0xd94, 0x8922, 0x1, 0x0);
        gbc.writeMem(0xcd64, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0xcd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd64));
        EXPECT(0x10, gbc.readMem(0xcd65));
        // CB 10 01CE
        gbc.setState(0xec33, 0x6c89, 0xbf60, 0xbf6c, 0xd549, 0x74fd, 0x1, 0x0);
        gbc.writeMem(0xec33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6c89, gbc.sp());
        EXPECT(0xec35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec33));
        EXPECT(0x10, gbc.readMem(0xec34));
        // CB 10 01CF
        gbc.setState(0xef70, 0xc2ea, 0x8c0, 0x6e99, 0x540f, 0x46d, 0x0, 0x1);
        gbc.writeMem(0xef70, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc2ea, gbc.sp());
        EXPECT(0xef72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef70));
        EXPECT(0x10, gbc.readMem(0xef71));
        // CB 10 01D1
        gbc.setState(0xb2b3, 0x4c7f, 0x39c0, 0x7d88, 0xccfb, 0x3b90, 0x0, 0x1);
        gbc.writeMem(0xb2b3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0xb2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b3));
        EXPECT(0x10, gbc.readMem(0xb2b4));
        // CB 10 01D3
        gbc.setState(0x3996, 0xcf8e, 0x59d0, 0x67a2, 0xf61b, 0xa8e7, 0x1, 0x1);
        gbc.writeMem(0x3996, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcf8e, gbc.sp());
        EXPECT(0x3998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01D5
        gbc.setState(0xa53c, 0x8976, 0x4f70, 0x45a0, 0x1c17, 0x7169, 0x1, 0x0);
        gbc.writeMem(0xa53c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8976, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa53c));
        EXPECT(0x10, gbc.readMem(0xa53d));
        // CB 10 01D6
        gbc.setState(0x1e4c, 0x5003, 0x2310, 0x445f, 0xa84e, 0xeb97, 0x0, 0x1);
        gbc.writeMem(0x1e4c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5003, gbc.sp());
        EXPECT(0x1e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01D7
        gbc.setState(0xb39e, 0x2040, 0xe760, 0x9175, 0x966b, 0x4daa, 0x1, 0x0);
        gbc.writeMem(0xb39e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2040, gbc.sp());
        EXPECT(0xb3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39e));
        EXPECT(0x10, gbc.readMem(0xb39f));
        // CB 10 01D8
        gbc.setState(0x47fb, 0x760, 0xe2f0, 0xad3d, 0xb34, 0xcc67, 0x0, 0x0);
        gbc.writeMem(0x47fb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x760, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01D9
        gbc.setState(0x7b6e, 0x86c1, 0xfcf0, 0x4718, 0xf8a9, 0x2089, 0x1, 0x0);
        gbc.writeMem(0x7b6e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x86c1, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01DA
        gbc.setState(0xeb10, 0x866b, 0x8a90, 0x859a, 0x29ce, 0x3375, 0x1, 0x1);
        gbc.writeMem(0xeb10, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x866b, gbc.sp());
        EXPECT(0xeb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb10));
        EXPECT(0x10, gbc.readMem(0xeb11));
        // CB 10 01DB
        gbc.setState(0xe224, 0x6f93, 0x3830, 0x5261, 0xe702, 0xfa20, 0x1, 0x0);
        gbc.writeMem(0xe224, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6f93, gbc.sp());
        EXPECT(0xe226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe224));
        EXPECT(0x10, gbc.readMem(0xe225));
        // CB 10 01DC
        gbc.setState(0x3035, 0x227c, 0x4730, 0xb3a7, 0xdf0d, 0xa7b7, 0x1, 0x1);
        gbc.writeMem(0x3035, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01DD
        gbc.setState(0xd41d, 0xe9a6, 0xf480, 0xa95c, 0x19f, 0xcdf0, 0x0, 0x1);
        gbc.writeMem(0xd41d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe9a6, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41d));
        EXPECT(0x10, gbc.readMem(0xd41e));
        // CB 10 01DE
        gbc.setState(0x99a5, 0x5f88, 0x7090, 0xefac, 0x1b15, 0xde98, 0x1, 0x1);
        gbc.writeMem(0x99a5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5f88, gbc.sp());
        EXPECT(0x99a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a5));
        EXPECT(0x10, gbc.readMem(0x99a6));
        // CB 10 01DF
        gbc.setState(0x34cf, 0x5153, 0x3060, 0x3db3, 0x41c1, 0xf45d, 0x0, 0x0);
        gbc.writeMem(0x34cf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5153, gbc.sp());
        EXPECT(0x34d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01E0
        gbc.setState(0xe2ca, 0x9cd0, 0x270, 0x75d4, 0xf241, 0xe2b2, 0x1, 0x1);
        gbc.writeMem(0xe2ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9cd0, gbc.sp());
        EXPECT(0xe2cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ca));
        EXPECT(0x10, gbc.readMem(0xe2cb));
        // CB 10 01E1
        gbc.setState(0xe75a, 0xca03, 0x20f0, 0x509b, 0x6e34, 0x6f30, 0x1, 0x1);
        gbc.writeMem(0xe75a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xca03, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75a));
        EXPECT(0x10, gbc.readMem(0xe75b));
        // CB 10 01E2
        gbc.setState(0x8af8, 0xec35, 0xb7b0, 0x5c83, 0x30cb, 0x2e0c, 0x1, 0x0);
        gbc.writeMem(0x8af8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xec35, gbc.sp());
        EXPECT(0x8afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af8));
        EXPECT(0x10, gbc.readMem(0x8af9));
        // CB 10 01E3
        gbc.setState(0xb17c, 0x86e6, 0xf310, 0x318f, 0x3439, 0x145b, 0x1, 0x0);
        gbc.writeMem(0xb17c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0xb17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb17c));
        EXPECT(0x10, gbc.readMem(0xb17d));
        // CB 10 01E4
        gbc.setState(0x5e87, 0x2f70, 0x5e20, 0x8a46, 0x691c, 0x1c87, 0x0, 0x0);
        gbc.writeMem(0x5e87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2f70, gbc.sp());
        EXPECT(0x5e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01E5
        gbc.setState(0xc3b9, 0x8812, 0xd3a0, 0xaecd, 0xc3a3, 0xb156, 0x0, 0x0);
        gbc.writeMem(0xc3b9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0xc3bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b9));
        EXPECT(0x10, gbc.readMem(0xc3ba));
        // CB 10 01E6
        gbc.setState(0x9cfc, 0xa0e8, 0xeff0, 0x9b41, 0x3a42, 0x20fb, 0x1, 0x0);
        gbc.writeMem(0x9cfc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa0e8, gbc.sp());
        EXPECT(0x9cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cfc));
        EXPECT(0x10, gbc.readMem(0x9cfd));
        // CB 10 01E7
        gbc.setState(0xc8ed, 0xd8ca, 0x45e0, 0x39d6, 0xb007, 0x8ff, 0x1, 0x0);
        gbc.writeMem(0xc8ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd8ca, gbc.sp());
        EXPECT(0xc8ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ed));
        EXPECT(0x10, gbc.readMem(0xc8ee));
        // CB 10 01E8
        gbc.setState(0x31ae, 0xc519, 0xed80, 0x30b6, 0x9337, 0x5dd6, 0x0, 0x1);
        gbc.writeMem(0x31ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0x31b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01E9
        gbc.setState(0x31ca, 0xf09c, 0x8450, 0x2ac, 0x6b94, 0x1592, 0x0, 0x1);
        gbc.writeMem(0x31ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf09c, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01EA
        gbc.setState(0x4e95, 0x672c, 0x3f70, 0x756f, 0xda51, 0x88ff, 0x1, 0x0);
        gbc.writeMem(0x4e95, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x672c, gbc.sp());
        EXPECT(0x4e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01EB
        gbc.setState(0xccf7, 0xc32c, 0xeb00, 0x2387, 0x2381, 0x75f3, 0x0, 0x0);
        gbc.writeMem(0xccf7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc32c, gbc.sp());
        EXPECT(0xccf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf7));
        EXPECT(0x10, gbc.readMem(0xccf8));
        // CB 10 01EC
        gbc.setState(0xdc18, 0x82f0, 0x1350, 0xf5f3, 0x7f7d, 0x1c72, 0x1, 0x0);
        gbc.writeMem(0xdc18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x82f0, gbc.sp());
        EXPECT(0xdc1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc18));
        EXPECT(0x10, gbc.readMem(0xdc19));
        // CB 10 01ED
        gbc.setState(0x65a4, 0x4094, 0x8a70, 0xdc53, 0x2490, 0xb10, 0x1, 0x0);
        gbc.writeMem(0x65a4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0x65a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01EE
        gbc.setState(0x57a7, 0x592, 0x6090, 0x20ee, 0x7890, 0x31c6, 0x1, 0x1);
        gbc.writeMem(0x57a7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x592, gbc.sp());
        EXPECT(0x57a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01EF
        gbc.setState(0x1404, 0xbc3d, 0xc250, 0x5145, 0x44f9, 0xd061, 0x0, 0x0);
        gbc.writeMem(0x1404, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbc3d, gbc.sp());
        EXPECT(0x1406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01F0
        gbc.setState(0xb43f, 0x6ddd, 0x1b40, 0x462b, 0x326e, 0x92a8, 0x0, 0x0);
        gbc.writeMem(0xb43f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6ddd, gbc.sp());
        EXPECT(0xb441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43f));
        EXPECT(0x10, gbc.readMem(0xb440));
        // CB 10 01F1
        gbc.setState(0x6ef7, 0xb2f9, 0x6160, 0x9f04, 0xfa29, 0x785c, 0x0, 0x1);
        gbc.writeMem(0x6ef7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb2f9, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01F2
        gbc.setState(0x1bf, 0x5fc8, 0x7350, 0xb45, 0x30ad, 0x5b05, 0x1, 0x0);
        gbc.writeMem(0x1bf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5fc8, gbc.sp());
        EXPECT(0x1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01F3
        gbc.setState(0x363a, 0x5ef0, 0xef40, 0x2cd1, 0xb231, 0xeb0b, 0x1, 0x1);
        gbc.writeMem(0x363a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5ef0, gbc.sp());
        EXPECT(0x363c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01F4
        gbc.setState(0x8513, 0x5305, 0x9ff0, 0x9e61, 0xc283, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0x8513, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5305, gbc.sp());
        EXPECT(0x8515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8513));
        EXPECT(0x10, gbc.readMem(0x8514));
        // CB 10 01F5
        gbc.setState(0x6ccb, 0x530c, 0xc650, 0x5611, 0xa7e1, 0xb822, 0x1, 0x0);
        gbc.writeMem(0x6ccb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x530c, gbc.sp());
        EXPECT(0x6ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01F6
        gbc.setState(0xe772, 0x2be9, 0x7f10, 0xdb93, 0x4e0a, 0x28a, 0x0, 0x0);
        gbc.writeMem(0xe772, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0xe774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe772));
        EXPECT(0x10, gbc.readMem(0xe773));
        // CB 10 01F7
        gbc.setState(0xce0b, 0xefd8, 0xad70, 0x96b1, 0x9791, 0xa560, 0x0, 0x0);
        gbc.writeMem(0xce0b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xefd8, gbc.sp());
        EXPECT(0xce0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce0b));
        EXPECT(0x10, gbc.readMem(0xce0c));
        // CB 10 01F8
        gbc.setState(0xca4f, 0xd4f2, 0xf0, 0xbf72, 0xa8e2, 0x2918, 0x1, 0x0);
        gbc.writeMem(0xca4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0xca51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca4f));
        EXPECT(0x10, gbc.readMem(0xca50));
        // CB 10 01F9
        gbc.setState(0x6cc1, 0xc60c, 0x9a0, 0xa509, 0xe6e2, 0xc94c, 0x0, 0x0);
        gbc.writeMem(0x6cc1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc60c, gbc.sp());
        EXPECT(0x6cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01FA
        gbc.setState(0x4a7a, 0x37da, 0xd2c0, 0x5f41, 0x2e3d, 0x358b, 0x1, 0x1);
        gbc.writeMem(0x4a7a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0x4a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01FB
        gbc.setState(0xa74, 0x164a, 0x7170, 0x4c2b, 0x2874, 0x5d9f, 0x1, 0x0);
        gbc.writeMem(0xa74, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x164a, gbc.sp());
        EXPECT(0xa76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 01FC
        gbc.setState(0xa7cc, 0x36dc, 0xfaa0, 0xab1b, 0x839c, 0xd1, 0x1, 0x0);
        gbc.writeMem(0xa7cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x36dc, gbc.sp());
        EXPECT(0xa7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cc));
        EXPECT(0x10, gbc.readMem(0xa7cd));
        // CB 10 01FD
        gbc.setState(0x8e9c, 0xc969, 0x3d90, 0x8bb8, 0x377b, 0xe3dd, 0x0, 0x1);
        gbc.writeMem(0x8e9c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x8e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e9c));
        EXPECT(0x10, gbc.readMem(0x8e9d));
        // CB 10 01FE
        gbc.setState(0x1aaf, 0x49ed, 0x2420, 0x9594, 0x7465, 0xbe90, 0x0, 0x0);
        gbc.writeMem(0x1aaf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0x1ab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 01FF
        gbc.setState(0x2d3f, 0xa697, 0x99e0, 0x7a8, 0x9758, 0x4116, 0x1, 0x1);
        gbc.writeMem(0x2d3f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa697, gbc.sp());
        EXPECT(0x2d41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0200
        gbc.setState(0xa69f, 0xafe8, 0xee30, 0x27f9, 0xfadd, 0x1ce8, 0x0, 0x0);
        gbc.writeMem(0xa69f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xafe8, gbc.sp());
        EXPECT(0xa6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69f));
        EXPECT(0x10, gbc.readMem(0xa6a0));
        // CB 10 0201
        gbc.setState(0x8c43, 0xc253, 0x1870, 0x7b95, 0x45d9, 0xa8, 0x0, 0x0);
        gbc.writeMem(0x8c43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc253, gbc.sp());
        EXPECT(0x8c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c43));
        EXPECT(0x10, gbc.readMem(0x8c44));
        // CB 10 0202
        gbc.setState(0x3c97, 0x4c17, 0x11a0, 0x66c7, 0x6265, 0x5901, 0x1, 0x1);
        gbc.writeMem(0x3c97, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4c17, gbc.sp());
        EXPECT(0x3c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0203
        gbc.setState(0x69c5, 0x803b, 0x3560, 0x28ad, 0xc8b9, 0xd3c, 0x1, 0x0);
        gbc.writeMem(0x69c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x803b, gbc.sp());
        EXPECT(0x69c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0204
        gbc.setState(0x37f1, 0xe115, 0xfa00, 0xa00e, 0x857b, 0x1d26, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe115, gbc.sp());
        EXPECT(0x37f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0205
        gbc.setState(0xb03a, 0xde7, 0x6640, 0x8f57, 0xcca8, 0x6b00, 0x0, 0x1);
        gbc.writeMem(0xb03a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xde7, gbc.sp());
        EXPECT(0xb03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb03a));
        EXPECT(0x10, gbc.readMem(0xb03b));
        // CB 10 0206
        gbc.setState(0x421f, 0x6957, 0xcad0, 0x7f4e, 0x7c86, 0xfc12, 0x0, 0x1);
        gbc.writeMem(0x421f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6957, gbc.sp());
        EXPECT(0x4221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0207
        gbc.setState(0x8a64, 0xf0f3, 0x4870, 0xb424, 0x2937, 0xeeb8, 0x1, 0x0);
        gbc.writeMem(0x8a64, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf0f3, gbc.sp());
        EXPECT(0x8a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a64));
        EXPECT(0x10, gbc.readMem(0x8a65));
        // CB 10 0208
        gbc.setState(0x6b40, 0x5f5b, 0x5c0, 0x46d2, 0xfe5c, 0xa61d, 0x1, 0x0);
        gbc.writeMem(0x6b40, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5f5b, gbc.sp());
        EXPECT(0x6b42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0209
        gbc.setState(0x73ae, 0x534d, 0x2f90, 0xf6d4, 0xbfa3, 0x60a5, 0x1, 0x0);
        gbc.writeMem(0x73ae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x534d, gbc.sp());
        EXPECT(0x73b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 020A
        gbc.setState(0xe5b2, 0x73f7, 0xb930, 0x5579, 0xa022, 0x5ad4, 0x0, 0x1);
        gbc.writeMem(0xe5b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x73f7, gbc.sp());
        EXPECT(0xe5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b2));
        EXPECT(0x10, gbc.readMem(0xe5b3));
        // CB 10 020B
        gbc.setState(0xf8a, 0x292b, 0x94b0, 0xd5e2, 0xc0b1, 0xfdc9, 0x0, 0x0);
        gbc.writeMem(0xf8a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x292b, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 020C
        gbc.setState(0xa946, 0xf494, 0x1750, 0x5a8d, 0xbec, 0x2d26, 0x0, 0x0);
        gbc.writeMem(0xa946, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf494, gbc.sp());
        EXPECT(0xa948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa946));
        EXPECT(0x10, gbc.readMem(0xa947));
        // CB 10 020D
        gbc.setState(0xdce8, 0x2046, 0xe420, 0x1019, 0x5604, 0xdd34, 0x1, 0x1);
        gbc.writeMem(0xdce8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0xdcea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce8));
        EXPECT(0x10, gbc.readMem(0xdce9));
        // CB 10 020F
        gbc.setState(0x4e98, 0xdd81, 0xa910, 0x63bb, 0x835a, 0x936e, 0x0, 0x0);
        gbc.writeMem(0x4e98, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xdd81, gbc.sp());
        EXPECT(0x4e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0210
        gbc.setState(0x754f, 0xf1f1, 0xb2b0, 0x7327, 0x7fb2, 0xa364, 0x0, 0x1);
        gbc.writeMem(0x754f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf1f1, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0211
        gbc.setState(0x8392, 0x1c55, 0xa100, 0xe6ff, 0x151d, 0xde6d, 0x0, 0x0);
        gbc.writeMem(0x8392, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1c55, gbc.sp());
        EXPECT(0x8394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8392));
        EXPECT(0x10, gbc.readMem(0x8393));
        // CB 10 0212
        gbc.setState(0x9ad5, 0x1268, 0x78b0, 0x4b7f, 0x2c04, 0xa078, 0x1, 0x0);
        gbc.writeMem(0x9ad5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1268, gbc.sp());
        EXPECT(0x9ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad5));
        EXPECT(0x10, gbc.readMem(0x9ad6));
        // CB 10 0213
        gbc.setState(0x37d7, 0x8929, 0xb220, 0xe8bf, 0xb663, 0x92c4, 0x1, 0x0);
        gbc.writeMem(0x37d7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x37d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0214
        gbc.setState(0xa49c, 0x1d43, 0xd6e0, 0xf5a4, 0x7442, 0x9826, 0x1, 0x0);
        gbc.writeMem(0xa49c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1d43, gbc.sp());
        EXPECT(0xa49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49c));
        EXPECT(0x10, gbc.readMem(0xa49d));
        // CB 10 0215
        gbc.setState(0x2b4b, 0xd730, 0x31c0, 0x8aa3, 0x193f, 0x2f3f, 0x0, 0x0);
        gbc.writeMem(0x2b4b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd730, gbc.sp());
        EXPECT(0x2b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0216
        gbc.setState(0x3248, 0x6d94, 0x7820, 0x73fe, 0xf10e, 0x992, 0x1, 0x1);
        gbc.writeMem(0x3248, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6d94, gbc.sp());
        EXPECT(0x324a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0217
        gbc.setState(0x9741, 0x8f7a, 0x5f30, 0x4466, 0x77ab, 0xbbd, 0x1, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8f7a, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9741));
        EXPECT(0x10, gbc.readMem(0x9742));
        // CB 10 0218
        gbc.setState(0x5d43, 0x9931, 0x2750, 0x22db, 0x922f, 0xfda5, 0x0, 0x0);
        gbc.writeMem(0x5d43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9931, gbc.sp());
        EXPECT(0x5d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0219
        gbc.setState(0x51fc, 0x6a88, 0xf540, 0x2db2, 0xf5fb, 0x42b3, 0x1, 0x0);
        gbc.writeMem(0x51fc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6a88, gbc.sp());
        EXPECT(0x51fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 021A
        gbc.setState(0x9bdd, 0x6a86, 0x6910, 0x91ad, 0xae28, 0xe019, 0x0, 0x0);
        gbc.writeMem(0x9bdd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6a86, gbc.sp());
        EXPECT(0x9bdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdd));
        EXPECT(0x10, gbc.readMem(0x9bde));
        // CB 10 021B
        gbc.setState(0x5d1a, 0x7dfe, 0xf010, 0x88ef, 0xcee7, 0xbded, 0x0, 0x1);
        gbc.writeMem(0x5d1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7dfe, gbc.sp());
        EXPECT(0x5d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 021C
        gbc.setState(0x1629, 0x5e7e, 0xbe00, 0xadda, 0x3880, 0x30de, 0x0, 0x1);
        gbc.writeMem(0x1629, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5e7e, gbc.sp());
        EXPECT(0x162b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 021D
        gbc.setState(0xc046, 0x72d, 0x8b90, 0x52f2, 0x8c82, 0x464b, 0x0, 0x1);
        gbc.writeMem(0xc046, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0xc048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc046));
        EXPECT(0x10, gbc.readMem(0xc047));
        // CB 10 021E
        gbc.setState(0x7554, 0x2d7b, 0xa330, 0x246a, 0xb70, 0xb467, 0x0, 0x0);
        gbc.writeMem(0x7554, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2d7b, gbc.sp());
        EXPECT(0x7556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 021F
        gbc.setState(0x4c4c, 0x1194, 0x5af0, 0xcf1b, 0x5133, 0x6157, 0x0, 0x1);
        gbc.writeMem(0x4c4c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1194, gbc.sp());
        EXPECT(0x4c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0220
        gbc.setState(0xa1e6, 0x390c, 0x25c0, 0x3074, 0x718c, 0x75c1, 0x1, 0x0);
        gbc.writeMem(0xa1e6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x390c, gbc.sp());
        EXPECT(0xa1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e6));
        EXPECT(0x10, gbc.readMem(0xa1e7));
        // CB 10 0221
        gbc.setState(0x53f1, 0x3936, 0x4b30, 0x4b5f, 0x3466, 0xb04a, 0x1, 0x0);
        gbc.writeMem(0x53f1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3936, gbc.sp());
        EXPECT(0x53f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0222
        gbc.setState(0x25b3, 0x426, 0xd210, 0xea3f, 0xb49c, 0x6cc6, 0x0, 0x0);
        gbc.writeMem(0x25b3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x426, gbc.sp());
        EXPECT(0x25b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0223
        gbc.setState(0x666c, 0xfccf, 0x8d50, 0x62d3, 0x1270, 0x17eb, 0x0, 0x1);
        gbc.writeMem(0x666c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfccf, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0224
        gbc.setState(0x69ed, 0xc611, 0x8ac0, 0x8541, 0x8eef, 0x1511, 0x1, 0x1);
        gbc.writeMem(0x69ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc611, gbc.sp());
        EXPECT(0x69ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0225
        gbc.setState(0xef69, 0x8856, 0x95d0, 0xa414, 0x337a, 0xc96e, 0x1, 0x0);
        gbc.writeMem(0xef69, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8856, gbc.sp());
        EXPECT(0xef6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef69));
        EXPECT(0x10, gbc.readMem(0xef6a));
        // CB 10 0226
        gbc.setState(0xc3e8, 0x6f4a, 0xf2d0, 0xee07, 0xcbb2, 0x7add, 0x0, 0x1);
        gbc.writeMem(0xc3e8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6f4a, gbc.sp());
        EXPECT(0xc3ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e8));
        EXPECT(0x10, gbc.readMem(0xc3e9));
        // CB 10 0227
        gbc.setState(0xa1fc, 0x1631, 0xac80, 0x3e15, 0xdc12, 0x898e, 0x0, 0x0);
        gbc.writeMem(0xa1fc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1631, gbc.sp());
        EXPECT(0xa1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fc));
        EXPECT(0x10, gbc.readMem(0xa1fd));
        // CB 10 0228
        gbc.setState(0x2c5a, 0x68dd, 0xf700, 0x3eab, 0x397f, 0xa870, 0x0, 0x0);
        gbc.writeMem(0x2c5a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x68dd, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0229
        gbc.setState(0xb1bf, 0x25cb, 0xa2d0, 0x468e, 0x7e74, 0x3a98, 0x1, 0x1);
        gbc.writeMem(0xb1bf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x25cb, gbc.sp());
        EXPECT(0xb1c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bf));
        EXPECT(0x10, gbc.readMem(0xb1c0));
        // CB 10 022A
        gbc.setState(0xd88b, 0x26f, 0x5d00, 0xfb59, 0x1277, 0x3c7d, 0x1, 0x0);
        gbc.writeMem(0xd88b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0xd88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88b));
        EXPECT(0x10, gbc.readMem(0xd88c));
        // CB 10 022B
        gbc.setState(0x3217, 0x4b77, 0x3bf0, 0x9495, 0x6ef6, 0x93a6, 0x1, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4b77, gbc.sp());
        EXPECT(0x3219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 022C
        gbc.setState(0x1b7f, 0x93a5, 0x3050, 0x52f3, 0x29d3, 0x8348, 0x1, 0x1);
        gbc.writeMem(0x1b7f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x93a5, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 022D
        gbc.setState(0xb7f3, 0x65f7, 0xfb40, 0xda72, 0x6a3f, 0xfc85, 0x1, 0x0);
        gbc.writeMem(0xb7f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x65f7, gbc.sp());
        EXPECT(0xb7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f3));
        EXPECT(0x10, gbc.readMem(0xb7f4));
        // CB 10 022E
        gbc.setState(0x5ed6, 0x9b0a, 0xdc80, 0x228c, 0xe87b, 0xa4b9, 0x1, 0x1);
        gbc.writeMem(0x5ed6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9b0a, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 022F
        gbc.setState(0x6d40, 0x28ef, 0x7700, 0x5e34, 0x4d59, 0x8ca8, 0x0, 0x0);
        gbc.writeMem(0x6d40, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x28ef, gbc.sp());
        EXPECT(0x6d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0230
        gbc.setState(0x4e62, 0x855a, 0xadb0, 0xeab1, 0x2b28, 0x9ef2, 0x0, 0x1);
        gbc.writeMem(0x4e62, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x855a, gbc.sp());
        EXPECT(0x4e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0231
        gbc.setState(0x2d99, 0xa9f, 0x5e60, 0xce56, 0x9a62, 0xa421, 0x1, 0x0);
        gbc.writeMem(0x2d99, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa9f, gbc.sp());
        EXPECT(0x2d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0232
        gbc.setState(0xbb92, 0xdf8a, 0xc40, 0xc289, 0xdc26, 0xbfb4, 0x0, 0x0);
        gbc.writeMem(0xbb92, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xdf8a, gbc.sp());
        EXPECT(0xbb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb92));
        EXPECT(0x10, gbc.readMem(0xbb93));
        // CB 10 0233
        gbc.setState(0xc9c2, 0xe3ce, 0x7b20, 0xe612, 0xde51, 0xeb39, 0x0, 0x1);
        gbc.writeMem(0xc9c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe3ce, gbc.sp());
        EXPECT(0xc9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c2));
        EXPECT(0x10, gbc.readMem(0xc9c3));
        // CB 10 0234
        gbc.setState(0x22e4, 0x23ea, 0x3e20, 0x5d9e, 0x9aa0, 0x6ffc, 0x0, 0x0);
        gbc.writeMem(0x22e4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0x22e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0235
        gbc.setState(0x6f51, 0xff26, 0x2980, 0x54e2, 0x2667, 0x5c3, 0x1, 0x0);
        gbc.writeMem(0x6f51, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xff26, gbc.sp());
        EXPECT(0x6f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0236
        gbc.setState(0x6490, 0x16eb, 0x81d0, 0x1b92, 0x791a, 0x3f9b, 0x0, 0x1);
        gbc.writeMem(0x6490, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x16eb, gbc.sp());
        EXPECT(0x6492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0237
        gbc.setState(0xeae7, 0xe0c7, 0xab50, 0xee59, 0x8140, 0xa748, 0x1, 0x0);
        gbc.writeMem(0xeae7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae7));
        EXPECT(0x10, gbc.readMem(0xeae8));
        // CB 10 0238
        gbc.setState(0x3a0, 0x6f83, 0xc3d0, 0x2ece, 0x159c, 0xc2e2, 0x0, 0x1);
        gbc.writeMem(0x3a0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6f83, gbc.sp());
        EXPECT(0x3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0239
        gbc.setState(0x1892, 0x5943, 0x4ea0, 0xa813, 0xcedd, 0x657f, 0x0, 0x1);
        gbc.writeMem(0x1892, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0x1894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 023A
        gbc.setState(0x537a, 0x29e1, 0x2f0, 0xe0eb, 0xcd1b, 0xa860, 0x1, 0x1);
        gbc.writeMem(0x537a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x29e1, gbc.sp());
        EXPECT(0x537c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 023B
        gbc.setState(0x1926, 0x9cf, 0x9a10, 0x8292, 0xae4f, 0x83e2, 0x1, 0x1);
        gbc.writeMem(0x1926, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9cf, gbc.sp());
        EXPECT(0x1928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 023C
        gbc.setState(0x37e4, 0xe481, 0x5200, 0x31ed, 0x9092, 0x8efd, 0x0, 0x1);
        gbc.writeMem(0x37e4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe481, gbc.sp());
        EXPECT(0x37e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 023D
        gbc.setState(0xfcd, 0xbc23, 0x9b70, 0xaf8c, 0x553c, 0x79d8, 0x1, 0x0);
        gbc.writeMem(0xfcd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0xfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 023E
        gbc.setState(0xa75f, 0xf72e, 0xdaf0, 0x6c16, 0x9fdb, 0x278e, 0x0, 0x0);
        gbc.writeMem(0xa75f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf72e, gbc.sp());
        EXPECT(0xa761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75f));
        EXPECT(0x10, gbc.readMem(0xa760));
        // CB 10 023F
        gbc.setState(0x79b7, 0xc78e, 0x1cc0, 0x21ac, 0x75be, 0x8f35, 0x1, 0x0);
        gbc.writeMem(0x79b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc78e, gbc.sp());
        EXPECT(0x79b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0240
        gbc.setState(0x18ac, 0x2969, 0x32a0, 0xbf39, 0xb5b1, 0x37b3, 0x0, 0x1);
        gbc.writeMem(0x18ac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2969, gbc.sp());
        EXPECT(0x18ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0241
        gbc.setState(0x5acc, 0x72fc, 0xcbc0, 0xbfc0, 0xca68, 0x3952, 0x0, 0x0);
        gbc.writeMem(0x5acc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x72fc, gbc.sp());
        EXPECT(0x5ace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0242
        gbc.setState(0xa05, 0x649c, 0x46d0, 0xd2cd, 0xd270, 0x7ef2, 0x0, 0x0);
        gbc.writeMem(0xa05, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x649c, gbc.sp());
        EXPECT(0xa07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0243
        gbc.setState(0x1805, 0xb849, 0x7cb0, 0x8393, 0x7b29, 0x7de8, 0x1, 0x1);
        gbc.writeMem(0x1805, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb849, gbc.sp());
        EXPECT(0x1807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0244
        gbc.setState(0xd24f, 0x7981, 0x3980, 0x914c, 0x4a8d, 0x6c32, 0x0, 0x0);
        gbc.writeMem(0xd24f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7981, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0x10, gbc.readMem(0xd250));
        // CB 10 0245
        gbc.setState(0xdc76, 0x146c, 0x4a0, 0xc2ae, 0x8ab9, 0x14f1, 0x1, 0x1);
        gbc.writeMem(0xdc76, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x146c, gbc.sp());
        EXPECT(0xdc78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc76));
        EXPECT(0x10, gbc.readMem(0xdc77));
        // CB 10 0246
        gbc.setState(0xac8b, 0xa31c, 0x6590, 0xc66, 0xbe74, 0x9e5f, 0x0, 0x0);
        gbc.writeMem(0xac8b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa31c, gbc.sp());
        EXPECT(0xac8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8b));
        EXPECT(0x10, gbc.readMem(0xac8c));
        // CB 10 0247
        gbc.setState(0x540f, 0xcddf, 0x3b60, 0xb280, 0x2557, 0xe77c, 0x1, 0x1);
        gbc.writeMem(0x540f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcddf, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0248
        gbc.setState(0x76fe, 0x53fe, 0x34d0, 0x1950, 0x9234, 0xcab0, 0x0, 0x0);
        gbc.writeMem(0x76fe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x53fe, gbc.sp());
        EXPECT(0x7700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0249
        gbc.setState(0x644f, 0x40c2, 0x9f50, 0xf79f, 0xcd0d, 0x1c85, 0x0, 0x1);
        gbc.writeMem(0x644f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x40c2, gbc.sp());
        EXPECT(0x6451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 024A
        gbc.setState(0x3006, 0xa1e5, 0xea70, 0x719f, 0xb7f5, 0x205c, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa1e5, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 024B
        gbc.setState(0x10c2, 0xa30, 0x4990, 0x439a, 0x3cde, 0xbc6d, 0x1, 0x0);
        gbc.writeMem(0x10c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa30, gbc.sp());
        EXPECT(0x10c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 024C
        gbc.setState(0x6be2, 0x102a, 0x73f0, 0x4ef8, 0xeb12, 0xca24, 0x0, 0x1);
        gbc.writeMem(0x6be2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x102a, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 024D
        gbc.setState(0x3b43, 0x4ec8, 0x16a0, 0x9b77, 0xc287, 0xa632, 0x1, 0x1);
        gbc.writeMem(0x3b43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4ec8, gbc.sp());
        EXPECT(0x3b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 024E
        gbc.setState(0x8d29, 0x1348, 0xc040, 0xf313, 0xa447, 0x1d5, 0x1, 0x1);
        gbc.writeMem(0x8d29, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1348, gbc.sp());
        EXPECT(0x8d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d29));
        EXPECT(0x10, gbc.readMem(0x8d2a));
        // CB 10 024F
        gbc.setState(0xadb9, 0xdcc8, 0x2c10, 0xc88b, 0xda9a, 0x18c1, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdcc8, gbc.sp());
        EXPECT(0xadbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadb9));
        EXPECT(0x10, gbc.readMem(0xadba));
        // CB 10 0250
        gbc.setState(0x73ca, 0x8442, 0x43e0, 0x2683, 0xbd53, 0xce49, 0x0, 0x0);
        gbc.writeMem(0x73ca, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8442, gbc.sp());
        EXPECT(0x73cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0251
        gbc.setState(0xdbbd, 0x89bf, 0xd3d0, 0x1788, 0x240a, 0x9ca2, 0x1, 0x1);
        gbc.writeMem(0xdbbd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x89bf, gbc.sp());
        EXPECT(0xdbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbd));
        EXPECT(0x10, gbc.readMem(0xdbbe));
        // CB 10 0252
        gbc.setState(0x9ab3, 0x763a, 0xb430, 0x69de, 0x9ee5, 0x4ed4, 0x0, 0x1);
        gbc.writeMem(0x9ab3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x763a, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ab3));
        EXPECT(0x10, gbc.readMem(0x9ab4));
        // CB 10 0253
        gbc.setState(0x1170, 0x60a0, 0x8ff0, 0x563f, 0xe222, 0x5683, 0x1, 0x0);
        gbc.writeMem(0x1170, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x60a0, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0254
        gbc.setState(0x2d09, 0xee39, 0xe530, 0x1f3d, 0x49cc, 0xec17, 0x1, 0x1);
        gbc.writeMem(0x2d09, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xee39, gbc.sp());
        EXPECT(0x2d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0256
        gbc.setState(0x6be8, 0x6cf1, 0xbe00, 0x4617, 0xfad7, 0x7cfc, 0x0, 0x1);
        gbc.writeMem(0x6be8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6cf1, gbc.sp());
        EXPECT(0x6bea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0257
        gbc.setState(0xe206, 0xd81b, 0xb760, 0x9e50, 0x6cac, 0xc03f, 0x1, 0x0);
        gbc.writeMem(0xe206, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd81b, gbc.sp());
        EXPECT(0xe208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe206));
        EXPECT(0x10, gbc.readMem(0xe207));
        // CB 10 0258
        gbc.setState(0xb799, 0x2998, 0x9f30, 0x3846, 0x22d0, 0x830d, 0x1, 0x0);
        gbc.writeMem(0xb799, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2998, gbc.sp());
        EXPECT(0xb79b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb799));
        EXPECT(0x10, gbc.readMem(0xb79a));
        // CB 10 0259
        gbc.setState(0xd4b7, 0xa83d, 0x7b40, 0x490, 0x9593, 0xcf4c, 0x0, 0x0);
        gbc.writeMem(0xd4b7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa83d, gbc.sp());
        EXPECT(0xd4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b7));
        EXPECT(0x10, gbc.readMem(0xd4b8));
        // CB 10 025A
        gbc.setState(0x4971, 0x9a76, 0x280, 0x7dbe, 0x6081, 0xaf52, 0x0, 0x1);
        gbc.writeMem(0x4971, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9a76, gbc.sp());
        EXPECT(0x4973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 025B
        gbc.setState(0x7769, 0xf9e3, 0x10d0, 0x4442, 0xb3e, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0x7769, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf9e3, gbc.sp());
        EXPECT(0x776b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 025C
        gbc.setState(0xb8ac, 0x2e9d, 0x2490, 0x931e, 0x34d0, 0x8c55, 0x1, 0x0);
        gbc.writeMem(0xb8ac, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0xb8ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ac));
        EXPECT(0x10, gbc.readMem(0xb8ad));
        // CB 10 025D
        gbc.setState(0x9898, 0x9b70, 0x1a0, 0x374b, 0x94ec, 0x151b, 0x1, 0x0);
        gbc.writeMem(0x9898, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x989a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9898));
        EXPECT(0x10, gbc.readMem(0x9899));
        // CB 10 025E
        gbc.setState(0x2f43, 0x4b38, 0x7750, 0xfdc8, 0xf9c8, 0xb404, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4b38, gbc.sp());
        EXPECT(0x2f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 025F
        gbc.setState(0x9366, 0xdd9b, 0xdd40, 0x48fe, 0x1ea1, 0x12f6, 0x1, 0x1);
        gbc.writeMem(0x9366, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdd9b, gbc.sp());
        EXPECT(0x9368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9366));
        EXPECT(0x10, gbc.readMem(0x9367));
        // CB 10 0260
        gbc.setState(0x5129, 0x3437, 0x7530, 0x1527, 0xe278, 0x1b24, 0x0, 0x0);
        gbc.writeMem(0x5129, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3437, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0261
        gbc.setState(0xcac2, 0xe311, 0x94d0, 0x87fc, 0x2450, 0x11ef, 0x0, 0x0);
        gbc.writeMem(0xcac2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe311, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac2));
        EXPECT(0x10, gbc.readMem(0xcac3));
        // CB 10 0262
        gbc.setState(0x4b71, 0x858, 0xb1f0, 0x1cd5, 0x2d91, 0x7588, 0x1, 0x0);
        gbc.writeMem(0x4b71, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x4b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0263
        gbc.setState(0x3663, 0x52b3, 0xc0e0, 0x3320, 0xf520, 0x17b1, 0x0, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x52b3, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0264
        gbc.setState(0x22d4, 0x2534, 0x9ff0, 0x691, 0xeff8, 0xbc17, 0x1, 0x0);
        gbc.writeMem(0x22d4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2534, gbc.sp());
        EXPECT(0x22d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0267
        gbc.setState(0x6e05, 0x34ec, 0x74a0, 0x6eee, 0xb091, 0xddde, 0x1, 0x1);
        gbc.writeMem(0x6e05, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0x6e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0268
        gbc.setState(0xbebe, 0xb860, 0x2630, 0x81b7, 0x7f53, 0x273c, 0x1, 0x1);
        gbc.writeMem(0xbebe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb860, gbc.sp());
        EXPECT(0xbec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebe));
        EXPECT(0x10, gbc.readMem(0xbebf));
        // CB 10 0269
        gbc.setState(0xaa95, 0xaed6, 0x8a90, 0x3330, 0xfef3, 0xdfca, 0x1, 0x1);
        gbc.writeMem(0xaa95, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xaed6, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa95));
        EXPECT(0x10, gbc.readMem(0xaa96));
        // CB 10 026A
        gbc.setState(0x4c5b, 0xab0b, 0xed80, 0xf59d, 0xa69b, 0xab89, 0x0, 0x0);
        gbc.writeMem(0x4c5b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xab0b, gbc.sp());
        EXPECT(0x4c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 026B
        gbc.setState(0xeeda, 0xf904, 0x7830, 0x8af, 0xeaf0, 0xeda8, 0x0, 0x0);
        gbc.writeMem(0xeeda, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0xeedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeda));
        EXPECT(0x10, gbc.readMem(0xeedb));
        // CB 10 026C
        gbc.setState(0x5af8, 0xcabe, 0x4930, 0x9cca, 0xe3eb, 0xfeb9, 0x0, 0x1);
        gbc.writeMem(0x5af8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcabe, gbc.sp());
        EXPECT(0x5afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 026D
        gbc.setState(0x476b, 0x87fc, 0x4bd0, 0xb808, 0xfb7, 0xaf27, 0x1, 0x1);
        gbc.writeMem(0x476b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x87fc, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 026F
        gbc.setState(0x5d89, 0x5527, 0x2ca0, 0xee06, 0x5265, 0x6ef2, 0x0, 0x1);
        gbc.writeMem(0x5d89, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5527, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0270
        gbc.setState(0x2136, 0x10fe, 0xa830, 0xf629, 0x188e, 0xfc5c, 0x1, 0x1);
        gbc.writeMem(0x2136, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x10fe, gbc.sp());
        EXPECT(0x2138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0271
        gbc.setState(0xc449, 0xcdf5, 0x3c30, 0x7cd3, 0xdf52, 0xf8da, 0x0, 0x1);
        gbc.writeMem(0xc449, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcdf5, gbc.sp());
        EXPECT(0xc44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc449));
        EXPECT(0x10, gbc.readMem(0xc44a));
        // CB 10 0272
        gbc.setState(0xe84b, 0x549c, 0x9d50, 0x68b5, 0x181e, 0xf678, 0x1, 0x0);
        gbc.writeMem(0xe84b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x549c, gbc.sp());
        EXPECT(0xe84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe84b));
        EXPECT(0x10, gbc.readMem(0xe84c));
        // CB 10 0273
        gbc.setState(0x541e, 0x429d, 0x4940, 0x83bb, 0x4cd2, 0xf778, 0x1, 0x0);
        gbc.writeMem(0x541e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x429d, gbc.sp());
        EXPECT(0x5420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0274
        gbc.setState(0xdea0, 0x6fe9, 0x8df0, 0x167, 0xe0ce, 0x276d, 0x1, 0x1);
        gbc.writeMem(0xdea0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6fe9, gbc.sp());
        EXPECT(0xdea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea0));
        EXPECT(0x10, gbc.readMem(0xdea1));
        // CB 10 0275
        gbc.setState(0x1fae, 0x7b7, 0x8040, 0xaa63, 0x7f37, 0xccb0, 0x0, 0x1);
        gbc.writeMem(0x1fae, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7b7, gbc.sp());
        EXPECT(0x1fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0276
        gbc.setState(0x1843, 0x23b, 0xb160, 0x4add, 0xd67a, 0x65d, 0x1, 0x0);
        gbc.writeMem(0x1843, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0x1845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0277
        gbc.setState(0xc0fd, 0x60b6, 0x16e0, 0xd27b, 0xac05, 0x6da5, 0x0, 0x0);
        gbc.writeMem(0xc0fd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0xc0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0fd));
        EXPECT(0x10, gbc.readMem(0xc0fe));
        // CB 10 0278
        gbc.setState(0x75b, 0x2448, 0x9db0, 0xcf2, 0x6c6a, 0xb3d3, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2448, gbc.sp());
        EXPECT(0x75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0279
        gbc.setState(0xe6b, 0x92ea, 0xec70, 0xf49b, 0x1e5f, 0xdc27, 0x0, 0x1);
        gbc.writeMem(0xe6b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0xe6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 027A
        gbc.setState(0x1496, 0xf7c5, 0xa0, 0x3b7d, 0xf26e, 0xa2a9, 0x1, 0x1);
        gbc.writeMem(0x1496, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf7c5, gbc.sp());
        EXPECT(0x1498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 027B
        gbc.setState(0x532b, 0x9771, 0x9540, 0xa3b5, 0xebac, 0x5793, 0x0, 0x0);
        gbc.writeMem(0x532b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9771, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 027C
        gbc.setState(0x494a, 0xda1, 0x3ff0, 0x24df, 0x361a, 0xde07, 0x1, 0x0);
        gbc.writeMem(0x494a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x494c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 027D
        gbc.setState(0x867e, 0x5210, 0x6d30, 0x305a, 0x227c, 0x125c, 0x0, 0x0);
        gbc.writeMem(0x867e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5210, gbc.sp());
        EXPECT(0x8680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867e));
        EXPECT(0x10, gbc.readMem(0x867f));
        // CB 10 027E
        gbc.setState(0x9889, 0x7a6f, 0xeae0, 0xa691, 0x6d1e, 0x95e5, 0x1, 0x1);
        gbc.writeMem(0x9889, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a6f, gbc.sp());
        EXPECT(0x988b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9889));
        EXPECT(0x10, gbc.readMem(0x988a));
        // CB 10 027F
        gbc.setState(0x520, 0xdece, 0xec80, 0xb871, 0xeb1f, 0x7960, 0x1, 0x0);
        gbc.writeMem(0x520, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdece, gbc.sp());
        EXPECT(0x522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0280
        gbc.setState(0x299d, 0x87ae, 0xe2a0, 0x29b2, 0x5498, 0xf353, 0x0, 0x1);
        gbc.writeMem(0x299d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x87ae, gbc.sp());
        EXPECT(0x299f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0281
        gbc.setState(0x696c, 0xeef0, 0xf9c0, 0xbfbb, 0xe439, 0x2f20, 0x0, 0x0);
        gbc.writeMem(0x696c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xeef0, gbc.sp());
        EXPECT(0x696e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0282
        gbc.setState(0xc9ba, 0x7328, 0x61e0, 0x1137, 0xccbf, 0xefd8, 0x0, 0x0);
        gbc.writeMem(0xc9ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7328, gbc.sp());
        EXPECT(0xc9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ba));
        EXPECT(0x10, gbc.readMem(0xc9bb));
        // CB 10 0283
        gbc.setState(0x5ca3, 0x13f2, 0xd440, 0xae25, 0x506a, 0xde8e, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x13f2, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0284
        gbc.setState(0x746b, 0xd581, 0x1b90, 0xdd00, 0x1185, 0x5c33, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd581, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0285
        gbc.setState(0xc718, 0x6cb9, 0x4cc0, 0xabaf, 0x64ea, 0xf763, 0x1, 0x1);
        gbc.writeMem(0xc718, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0xc71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc718));
        EXPECT(0x10, gbc.readMem(0xc719));
        // CB 10 0286
        gbc.setState(0x9854, 0x9fa9, 0x4400, 0x32b0, 0x6cbc, 0x42ca, 0x0, 0x1);
        gbc.writeMem(0x9854, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0x9856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9854));
        EXPECT(0x10, gbc.readMem(0x9855));
        // CB 10 0287
        gbc.setState(0x4162, 0x7d9d, 0xbc10, 0xe622, 0x45b7, 0x534b, 0x1, 0x1);
        gbc.writeMem(0x4162, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7d9d, gbc.sp());
        EXPECT(0x4164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0288
        gbc.setState(0x5a0f, 0xea2a, 0xafa0, 0x4219, 0x9833, 0xe0ac, 0x0, 0x0);
        gbc.writeMem(0x5a0f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xea2a, gbc.sp());
        EXPECT(0x5a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0289
        gbc.setState(0xd764, 0xe43b, 0xd130, 0x809d, 0xaed8, 0x22e1, 0x1, 0x1);
        gbc.writeMem(0xd764, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe43b, gbc.sp());
        EXPECT(0xd766, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd764));
        EXPECT(0x10, gbc.readMem(0xd765));
        // CB 10 028B
        gbc.setState(0xdc4e, 0x4df4, 0xed60, 0x4b9b, 0xaa73, 0x1dc4, 0x1, 0x1);
        gbc.writeMem(0xdc4e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4df4, gbc.sp());
        EXPECT(0xdc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4e));
        EXPECT(0x10, gbc.readMem(0xdc4f));
        // CB 10 028C
        gbc.setState(0x9727, 0x44ce, 0x2c0, 0xec75, 0xc5c2, 0x1431, 0x1, 0x1);
        gbc.writeMem(0x9727, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x44ce, gbc.sp());
        EXPECT(0x9729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9727));
        EXPECT(0x10, gbc.readMem(0x9728));
        // CB 10 028D
        gbc.setState(0x66, 0x48fd, 0xee80, 0xdcd2, 0x8fc8, 0xdf49, 0x1, 0x1);
        gbc.writeMem(0x66, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x48fd, gbc.sp());
        EXPECT(0x68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 028E
        gbc.setState(0x3e47, 0x5c0a, 0xfa80, 0x87ea, 0x3e99, 0xcf0b, 0x0, 0x1);
        gbc.writeMem(0x3e47, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5c0a, gbc.sp());
        EXPECT(0x3e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 028F
        gbc.setState(0x12c8, 0x9792, 0xac0, 0x9ef1, 0xe14, 0x7c56, 0x0, 0x0);
        gbc.writeMem(0x12c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0290
        gbc.setState(0x4817, 0xdeef, 0xbb40, 0x3d3, 0x2b84, 0x1d29, 0x1, 0x1);
        gbc.writeMem(0x4817, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdeef, gbc.sp());
        EXPECT(0x4819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0291
        gbc.setState(0x1a4f, 0xae9, 0xe730, 0x1a4e, 0xf430, 0x6065, 0x0, 0x0);
        gbc.writeMem(0x1a4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xae9, gbc.sp());
        EXPECT(0x1a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0292
        gbc.setState(0x2708, 0xc45b, 0xa960, 0xf82f, 0xe3c1, 0xbefb, 0x1, 0x1);
        gbc.writeMem(0x2708, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc45b, gbc.sp());
        EXPECT(0x270a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0293
        gbc.setState(0x1702, 0x44ff, 0x6070, 0x8cc4, 0xc34e, 0x537c, 0x0, 0x1);
        gbc.writeMem(0x1702, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0x1704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0294
        gbc.setState(0x3ba5, 0x9e3, 0x14e0, 0x36a8, 0x43f4, 0x1e18, 0x1, 0x0);
        gbc.writeMem(0x3ba5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9e3, gbc.sp());
        EXPECT(0x3ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0295
        gbc.setState(0xd995, 0x372f, 0x70, 0x34b8, 0xe354, 0x4f05, 0x1, 0x0);
        gbc.writeMem(0xd995, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0xd997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd995));
        EXPECT(0x10, gbc.readMem(0xd996));
        // CB 10 0296
        gbc.setState(0x41d6, 0xb4b8, 0xea40, 0xffc2, 0x67f2, 0x4087, 0x0, 0x1);
        gbc.writeMem(0x41d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb4b8, gbc.sp());
        EXPECT(0x41d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0297
        gbc.setState(0x4dc3, 0xe3fc, 0x1750, 0x7be1, 0x98a, 0x7a02, 0x0, 0x1);
        gbc.writeMem(0x4dc3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe3fc, gbc.sp());
        EXPECT(0x4dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0298
        gbc.setState(0x611c, 0x7711, 0xdca0, 0xb643, 0x3366, 0xa67b, 0x1, 0x0);
        gbc.writeMem(0x611c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7711, gbc.sp());
        EXPECT(0x611e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0299
        gbc.setState(0x43dc, 0x78eb, 0x440, 0xc4, 0x496, 0xae28, 0x1, 0x0);
        gbc.writeMem(0x43dc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x78eb, gbc.sp());
        EXPECT(0x43de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 029A
        gbc.setState(0xeba3, 0x6ed, 0xcc20, 0xd728, 0xe881, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0xeba3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6ed, gbc.sp());
        EXPECT(0xeba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeba3));
        EXPECT(0x10, gbc.readMem(0xeba4));
        // CB 10 029B
        gbc.setState(0xa67e, 0xf733, 0xd340, 0x9f7a, 0x87dc, 0x9bd, 0x1, 0x0);
        gbc.writeMem(0xa67e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf733, gbc.sp());
        EXPECT(0xa680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67e));
        EXPECT(0x10, gbc.readMem(0xa67f));
        // CB 10 029C
        gbc.setState(0x9d93, 0x784b, 0xc0f0, 0xf66c, 0x401d, 0x28fe, 0x0, 0x0);
        gbc.writeMem(0x9d93, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x784b, gbc.sp());
        EXPECT(0x9d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d93));
        EXPECT(0x10, gbc.readMem(0x9d94));
        // CB 10 029D
        gbc.setState(0xccc2, 0xe2b9, 0x3e80, 0x60b, 0x2c6f, 0x8f8e, 0x1, 0x0);
        gbc.writeMem(0xccc2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe2b9, gbc.sp());
        EXPECT(0xccc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc2));
        EXPECT(0x10, gbc.readMem(0xccc3));
        // CB 10 029E
        gbc.setState(0x95fc, 0x2285, 0x5580, 0xdc40, 0xb618, 0xff8c, 0x0, 0x0);
        gbc.writeMem(0x95fc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x2285, gbc.sp());
        EXPECT(0x95fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fc));
        EXPECT(0x10, gbc.readMem(0x95fd));
        // CB 10 029F
        gbc.setState(0xbd06, 0x579, 0xf390, 0x121c, 0x999d, 0x2e7c, 0x1, 0x0);
        gbc.writeMem(0xbd06, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x579, gbc.sp());
        EXPECT(0xbd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd06));
        EXPECT(0x10, gbc.readMem(0xbd07));
        // CB 10 02A0
        gbc.setState(0x800, 0xe5c, 0x16e0, 0x1234, 0x4061, 0xa97a, 0x1, 0x1);
        gbc.writeMem(0x800, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe5c, gbc.sp());
        EXPECT(0x802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02A1
        gbc.setState(0x4dcc, 0x7d1c, 0xed40, 0x1602, 0x7214, 0x6b71, 0x1, 0x0);
        gbc.writeMem(0x4dcc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7d1c, gbc.sp());
        EXPECT(0x4dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02A2
        gbc.setState(0x1a24, 0xf8a5, 0xa1b0, 0x220a, 0x30ad, 0x92e2, 0x1, 0x0);
        gbc.writeMem(0x1a24, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf8a5, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02A3
        gbc.setState(0x8807, 0x9274, 0x2460, 0x81dc, 0xf0a, 0x86c1, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9274, gbc.sp());
        EXPECT(0x8809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8807));
        EXPECT(0x10, gbc.readMem(0x8808));
        // CB 10 02A4
        gbc.setState(0xcec5, 0x15fe, 0x7e0, 0xb1b0, 0x3875, 0x863c, 0x0, 0x0);
        gbc.writeMem(0xcec5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x15fe, gbc.sp());
        EXPECT(0xcec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec5));
        EXPECT(0x10, gbc.readMem(0xcec6));
        // CB 10 02A5
        gbc.setState(0xa6d6, 0xc191, 0x9200, 0xcd27, 0xa7aa, 0x48ee, 0x1, 0x0);
        gbc.writeMem(0xa6d6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc191, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d6));
        EXPECT(0x10, gbc.readMem(0xa6d7));
        // CB 10 02A6
        gbc.setState(0x55f4, 0x9e8c, 0x10a0, 0x3fe2, 0x3fff, 0x62c3, 0x0, 0x0);
        gbc.writeMem(0x55f4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9e8c, gbc.sp());
        EXPECT(0x55f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02A7
        gbc.setState(0x2531, 0xf9ba, 0x47c0, 0x5b62, 0x87ab, 0x8738, 0x1, 0x0);
        gbc.writeMem(0x2531, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf9ba, gbc.sp());
        EXPECT(0x2533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02A8
        gbc.setState(0x27c5, 0x913c, 0x94e0, 0x84e, 0x63bf, 0xfad3, 0x0, 0x1);
        gbc.writeMem(0x27c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x913c, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02AA
        gbc.setState(0x4fd9, 0x5a26, 0xc850, 0x5430, 0x82ce, 0xb304, 0x1, 0x1);
        gbc.writeMem(0x4fd9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5a26, gbc.sp());
        EXPECT(0x4fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02AB
        gbc.setState(0x3e7, 0x9b19, 0xa530, 0xa5, 0xf30e, 0x8a11, 0x1, 0x0);
        gbc.writeMem(0x3e7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02AC
        gbc.setState(0x9ac4, 0xa9d2, 0xa8b0, 0x37c8, 0x52a2, 0x35c8, 0x1, 0x1);
        gbc.writeMem(0x9ac4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa9d2, gbc.sp());
        EXPECT(0x9ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac4));
        EXPECT(0x10, gbc.readMem(0x9ac5));
        // CB 10 02AD
        gbc.setState(0xbc18, 0xa012, 0x8480, 0xdd54, 0xc851, 0x8c80, 0x0, 0x0);
        gbc.writeMem(0xbc18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa012, gbc.sp());
        EXPECT(0xbc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc18));
        EXPECT(0x10, gbc.readMem(0xbc19));
        // CB 10 02AE
        gbc.setState(0xc3bd, 0x3e03, 0x9630, 0x42a3, 0xa915, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0xc3bd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3e03, gbc.sp());
        EXPECT(0xc3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3bd));
        EXPECT(0x10, gbc.readMem(0xc3be));
        // CB 10 02AF
        gbc.setState(0x666, 0xe00, 0x81f0, 0xad73, 0x2f3c, 0x185b, 0x1, 0x1);
        gbc.writeMem(0x666, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe00, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02B0
        gbc.setState(0x19f3, 0xd132, 0x2dd0, 0xc476, 0xfda2, 0xc4a4, 0x1, 0x0);
        gbc.writeMem(0x19f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd132, gbc.sp());
        EXPECT(0x19f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02B2
        gbc.setState(0x48b, 0x411c, 0xe0a0, 0xba70, 0x12c6, 0xcc9c, 0x1, 0x1);
        gbc.writeMem(0x48b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x411c, gbc.sp());
        EXPECT(0x48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02B3
        gbc.setState(0xb9cb, 0xa670, 0x5aa0, 0xfb2a, 0x79e9, 0xad43, 0x0, 0x1);
        gbc.writeMem(0xb9cb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa670, gbc.sp());
        EXPECT(0xb9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cb));
        EXPECT(0x10, gbc.readMem(0xb9cc));
        // CB 10 02B4
        gbc.setState(0x2b9f, 0x463e, 0x3140, 0x57b9, 0xc79b, 0x5921, 0x1, 0x1);
        gbc.writeMem(0x2b9f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0x2ba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02B5
        gbc.setState(0x967a, 0x3f1e, 0x72c0, 0x25b8, 0x7628, 0x546e, 0x1, 0x0);
        gbc.writeMem(0x967a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3f1e, gbc.sp());
        EXPECT(0x967c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x967a));
        EXPECT(0x10, gbc.readMem(0x967b));
        // CB 10 02B6
        gbc.setState(0x3a30, 0x9e37, 0x7a0, 0xa270, 0xe29, 0x1b66, 0x1, 0x1);
        gbc.writeMem(0x3a30, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02B7
        gbc.setState(0x95e9, 0xe8a7, 0x1e30, 0x4c9b, 0xb0b8, 0xf2c9, 0x1, 0x0);
        gbc.writeMem(0x95e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe8a7, gbc.sp());
        EXPECT(0x95eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95e9));
        EXPECT(0x10, gbc.readMem(0x95ea));
        // CB 10 02B8
        gbc.setState(0x15d5, 0xd9d7, 0x22e0, 0xd1e4, 0xec97, 0x4269, 0x1, 0x0);
        gbc.writeMem(0x15d5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd9d7, gbc.sp());
        EXPECT(0x15d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02B9
        gbc.setState(0xac33, 0xd012, 0x5010, 0xc027, 0x9bfb, 0x5a41, 0x1, 0x1);
        gbc.writeMem(0xac33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xd012, gbc.sp());
        EXPECT(0xac35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac33));
        EXPECT(0x10, gbc.readMem(0xac34));
        // CB 10 02BA
        gbc.setState(0xd327, 0xc9e7, 0x7940, 0xcd15, 0x93a7, 0x2d48, 0x1, 0x0);
        gbc.writeMem(0xd327, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc9e7, gbc.sp());
        EXPECT(0xd329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd327));
        EXPECT(0x10, gbc.readMem(0xd328));
        // CB 10 02BB
        gbc.setState(0x663, 0xa7cb, 0x56b0, 0x653e, 0xe2b3, 0xb6c2, 0x0, 0x0);
        gbc.writeMem(0x663, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0x665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02BC
        gbc.setState(0xa6d9, 0xe606, 0x78d0, 0x565c, 0x4378, 0x45f8, 0x1, 0x1);
        gbc.writeMem(0xa6d9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe606, gbc.sp());
        EXPECT(0xa6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d9));
        EXPECT(0x10, gbc.readMem(0xa6da));
        // CB 10 02BD
        gbc.setState(0x7e17, 0xa06, 0x3520, 0xc568, 0x8d0c, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0x7e17, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa06, gbc.sp());
        EXPECT(0x7e19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02BE
        gbc.setState(0x30a3, 0x2c2, 0x7a30, 0xea46, 0xf157, 0x2036, 0x0, 0x0);
        gbc.writeMem(0x30a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2c2, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02BF
        gbc.setState(0xdc8f, 0x3b46, 0x7ab0, 0x8b, 0xf0d5, 0x670e, 0x0, 0x0);
        gbc.writeMem(0xdc8f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3b46, gbc.sp());
        EXPECT(0xdc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8f));
        EXPECT(0x10, gbc.readMem(0xdc90));
        // CB 10 02C0
        gbc.setState(0xaf0d, 0x9f91, 0x4740, 0x2f28, 0x76c, 0x5c07, 0x0, 0x0);
        gbc.writeMem(0xaf0d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9f91, gbc.sp());
        EXPECT(0xaf0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0d));
        EXPECT(0x10, gbc.readMem(0xaf0e));
        // CB 10 02C1
        gbc.setState(0xe47f, 0xc8e5, 0xf700, 0xff02, 0x9c98, 0x2d5b, 0x0, 0x1);
        gbc.writeMem(0xe47f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc8e5, gbc.sp());
        EXPECT(0xe481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47f));
        EXPECT(0x10, gbc.readMem(0xe480));
        // CB 10 02C2
        gbc.setState(0x4bb7, 0x42cc, 0xb530, 0xe4f3, 0x2d96, 0x3500, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x42cc, gbc.sp());
        EXPECT(0x4bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02C3
        gbc.setState(0xb498, 0x5def, 0xf950, 0x60c6, 0x74b0, 0xc4b1, 0x1, 0x1);
        gbc.writeMem(0xb498, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5def, gbc.sp());
        EXPECT(0xb49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb498));
        EXPECT(0x10, gbc.readMem(0xb499));
        // CB 10 02C4
        gbc.setState(0xe06b, 0x48e6, 0xf1a0, 0xd954, 0x81c1, 0x286f, 0x1, 0x1);
        gbc.writeMem(0xe06b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x48e6, gbc.sp());
        EXPECT(0xe06d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06b));
        EXPECT(0x10, gbc.readMem(0xe06c));
        // CB 10 02C5
        gbc.setState(0x603d, 0x6245, 0x1fc0, 0xbfdf, 0xc6c8, 0x5841, 0x1, 0x1);
        gbc.writeMem(0x603d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6245, gbc.sp());
        EXPECT(0x603f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02C6
        gbc.setState(0x94ab, 0x8523, 0x6fe0, 0x76d2, 0x6aa, 0xfc28, 0x1, 0x0);
        gbc.writeMem(0x94ab, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8523, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ab));
        EXPECT(0x10, gbc.readMem(0x94ac));
        // CB 10 02C7
        gbc.setState(0x18b2, 0x6d81, 0x54f0, 0x8093, 0x2030, 0x9c2c, 0x0, 0x1);
        gbc.writeMem(0x18b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6d81, gbc.sp());
        EXPECT(0x18b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02C8
        gbc.setState(0x495a, 0x6fd2, 0xc0c0, 0xe599, 0x4f0a, 0xde00, 0x0, 0x1);
        gbc.writeMem(0x495a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6fd2, gbc.sp());
        EXPECT(0x495c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02C9
        gbc.setState(0x2a1a, 0xdaa2, 0x40d0, 0xde6e, 0xb11, 0xea3f, 0x0, 0x0);
        gbc.writeMem(0x2a1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdaa2, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02CA
        gbc.setState(0x141b, 0xdecc, 0x4690, 0xb0d3, 0xa78c, 0xfeb7, 0x0, 0x1);
        gbc.writeMem(0x141b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x141d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02CB
        gbc.setState(0xa597, 0xe94e, 0xef90, 0x325b, 0xefd4, 0x3243, 0x1, 0x1);
        gbc.writeMem(0xa597, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe94e, gbc.sp());
        EXPECT(0xa599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa597));
        EXPECT(0x10, gbc.readMem(0xa598));
        // CB 10 02CC
        gbc.setState(0x28c, 0x698c, 0xa1d0, 0x144e, 0xdec4, 0xd7b1, 0x1, 0x1);
        gbc.writeMem(0x28c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x698c, gbc.sp());
        EXPECT(0x28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02CD
        gbc.setState(0x9a57, 0x721, 0x98a0, 0x9e4a, 0xe9d5, 0x3afc, 0x0, 0x0);
        gbc.writeMem(0x9a57, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x9a59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a57));
        EXPECT(0x10, gbc.readMem(0x9a58));
        // CB 10 02CE
        gbc.setState(0x206, 0x30ac, 0x52e0, 0x4101, 0x7a8f, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x206, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x30ac, gbc.sp());
        EXPECT(0x208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02CF
        gbc.setState(0x6028, 0x282f, 0x9d80, 0x6b2c, 0x7ac4, 0xbf85, 0x0, 0x1);
        gbc.writeMem(0x6028, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x282f, gbc.sp());
        EXPECT(0x602a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02D0
        gbc.setState(0x4a1a, 0x3dd, 0xccb0, 0xc054, 0xeb0, 0xb749, 0x1, 0x1);
        gbc.writeMem(0x4a1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3dd, gbc.sp());
        EXPECT(0x4a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02D1
        gbc.setState(0x4505, 0x2f1d, 0x7740, 0x1849, 0xca0f, 0x79b4, 0x0, 0x1);
        gbc.writeMem(0x4505, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2f1d, gbc.sp());
        EXPECT(0x4507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02D2
        gbc.setState(0x3fcd, 0xab8, 0x220, 0xa562, 0x5712, 0x68c0, 0x1, 0x0);
        gbc.writeMem(0x3fcd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xab8, gbc.sp());
        EXPECT(0x3fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02D3
        gbc.setState(0xea45, 0x2dfb, 0x2fa0, 0xdf89, 0x61fa, 0x56ac, 0x1, 0x1);
        gbc.writeMem(0xea45, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2dfb, gbc.sp());
        EXPECT(0xea47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea45));
        EXPECT(0x10, gbc.readMem(0xea46));
        // CB 10 02D4
        gbc.setState(0x2ec5, 0xc760, 0xd780, 0x60a6, 0xd592, 0x8b17, 0x0, 0x0);
        gbc.writeMem(0x2ec5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc760, gbc.sp());
        EXPECT(0x2ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02D5
        gbc.setState(0x529a, 0xafbd, 0x8e80, 0xc199, 0x7949, 0x97ea, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xafbd, gbc.sp());
        EXPECT(0x529c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02D6
        gbc.setState(0x3cb7, 0x2aa8, 0xb210, 0xfbaf, 0x977e, 0x46a3, 0x0, 0x1);
        gbc.writeMem(0x3cb7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2aa8, gbc.sp());
        EXPECT(0x3cb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02D7
        gbc.setState(0x7a81, 0xca4a, 0x2cd0, 0xc66e, 0x5570, 0xfe47, 0x0, 0x1);
        gbc.writeMem(0x7a81, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xca4a, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02D8
        gbc.setState(0x68a0, 0x1d35, 0x2710, 0x308c, 0xd8b3, 0x9d08, 0x1, 0x0);
        gbc.writeMem(0x68a0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1d35, gbc.sp());
        EXPECT(0x68a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02D9
        gbc.setState(0x1550, 0x17f7, 0xa100, 0x1795, 0x98db, 0x9c8f, 0x0, 0x0);
        gbc.writeMem(0x1550, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x17f7, gbc.sp());
        EXPECT(0x1552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02DA
        gbc.setState(0x6dab, 0x5d78, 0x1690, 0xdbcc, 0x3af2, 0x189d, 0x0, 0x1);
        gbc.writeMem(0x6dab, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5d78, gbc.sp());
        EXPECT(0x6dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02DB
        gbc.setState(0x39, 0xdab5, 0xb770, 0xd556, 0x4259, 0xca66, 0x1, 0x0);
        gbc.writeMem(0x39, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xdab5, gbc.sp());
        EXPECT(0x3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02DC
        gbc.setState(0xbef, 0xae5e, 0xfad0, 0x1f53, 0xcf0d, 0xf932, 0x1, 0x1);
        gbc.writeMem(0xbef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xae5e, gbc.sp());
        EXPECT(0xbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02DD
        gbc.setState(0xd7e9, 0x7e9d, 0xb0c0, 0x7f7e, 0x4415, 0xbef7, 0x0, 0x0);
        gbc.writeMem(0xd7e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7e9d, gbc.sp());
        EXPECT(0xd7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e9));
        EXPECT(0x10, gbc.readMem(0xd7ea));
        // CB 10 02DE
        gbc.setState(0xaa77, 0x2958, 0xa040, 0x30b4, 0xf75d, 0x27b1, 0x0, 0x1);
        gbc.writeMem(0xaa77, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2958, gbc.sp());
        EXPECT(0xaa79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa77));
        EXPECT(0x10, gbc.readMem(0xaa78));
        // CB 10 02DF
        gbc.setState(0x8b3b, 0x8ed6, 0xed50, 0xf893, 0xc638, 0x6eda, 0x1, 0x1);
        gbc.writeMem(0x8b3b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8ed6, gbc.sp());
        EXPECT(0x8b3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3b));
        EXPECT(0x10, gbc.readMem(0x8b3c));
        // CB 10 02E0
        gbc.setState(0xb1b5, 0x4a5c, 0xbf60, 0xaee7, 0x72a3, 0x58cb, 0x0, 0x1);
        gbc.writeMem(0xb1b5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0xb1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b5));
        EXPECT(0x10, gbc.readMem(0xb1b6));
        // CB 10 02E2
        gbc.setState(0x8256, 0x53ce, 0x6420, 0xca0c, 0x207e, 0x1067, 0x0, 0x0);
        gbc.writeMem(0x8256, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x53ce, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8256));
        EXPECT(0x10, gbc.readMem(0x8257));
        // CB 10 02E3
        gbc.setState(0x4241, 0xab8b, 0x3660, 0xa6e4, 0x97be, 0xec42, 0x0, 0x0);
        gbc.writeMem(0x4241, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xab8b, gbc.sp());
        EXPECT(0x4243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02E4
        gbc.setState(0xb8d9, 0xedda, 0xb690, 0x46a2, 0xf3d2, 0xa159, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xedda, gbc.sp());
        EXPECT(0xb8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d9));
        EXPECT(0x10, gbc.readMem(0xb8da));
        // CB 10 02E5
        gbc.setState(0x961e, 0x3ebb, 0xb160, 0xf6c, 0x37d6, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0x961e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0x9620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961e));
        EXPECT(0x10, gbc.readMem(0x961f));
        // CB 10 02E6
        gbc.setState(0xc151, 0xfadb, 0xbb20, 0x5c71, 0x7cd, 0x2132, 0x0, 0x1);
        gbc.writeMem(0xc151, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfadb, gbc.sp());
        EXPECT(0xc153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc151));
        EXPECT(0x10, gbc.readMem(0xc152));
        // CB 10 02E7
        gbc.setState(0x5de0, 0xbf10, 0x6a40, 0xc95d, 0xf03d, 0xb91d, 0x1, 0x0);
        gbc.writeMem(0x5de0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbf10, gbc.sp());
        EXPECT(0x5de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02E8
        gbc.setState(0xd989, 0x111b, 0x27d0, 0x2684, 0x4736, 0x7640, 0x0, 0x0);
        gbc.writeMem(0xd989, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x111b, gbc.sp());
        EXPECT(0xd98b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd989));
        EXPECT(0x10, gbc.readMem(0xd98a));
        // CB 10 02EA
        gbc.setState(0x397c, 0x279f, 0x690, 0xf0e1, 0xa778, 0xab27, 0x0, 0x1);
        gbc.writeMem(0x397c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x279f, gbc.sp());
        EXPECT(0x397e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02EB
        gbc.setState(0x75c8, 0x1f8f, 0x150, 0xd64f, 0xe19e, 0x46a3, 0x0, 0x0);
        gbc.writeMem(0x75c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1f8f, gbc.sp());
        EXPECT(0x75ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02ED
        gbc.setState(0x79fe, 0xa759, 0x52a0, 0x5059, 0x4d8c, 0xe765, 0x0, 0x1);
        gbc.writeMem(0x79fe, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa759, gbc.sp());
        EXPECT(0x7a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02EE
        gbc.setState(0x49ff, 0x5358, 0xdb60, 0xff98, 0x4da8, 0x8010, 0x1, 0x1);
        gbc.writeMem(0x49ff, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5358, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02EF
        gbc.setState(0x8f71, 0x4b0c, 0xb320, 0x2fb5, 0x8a99, 0xd195, 0x1, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4b0c, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0x10, gbc.readMem(0x8f72));
        // CB 10 02F0
        gbc.setState(0x5502, 0xafb6, 0xb450, 0x3ca3, 0xfb1e, 0xc141, 0x0, 0x0);
        gbc.writeMem(0x5502, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xafb6, gbc.sp());
        EXPECT(0x5504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02F1
        gbc.setState(0x4411, 0x75f9, 0x5ca0, 0x8160, 0x4735, 0x2f8e, 0x1, 0x1);
        gbc.writeMem(0x4411, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x75f9, gbc.sp());
        EXPECT(0x4413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02F2
        gbc.setState(0x6339, 0xb629, 0x7580, 0x6de0, 0xc3d7, 0xae08, 0x0, 0x1);
        gbc.writeMem(0x6339, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb629, gbc.sp());
        EXPECT(0x633b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02F3
        gbc.setState(0x4a0a, 0x8cc6, 0x8140, 0xf323, 0xa43f, 0xa989, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8cc6, gbc.sp());
        EXPECT(0x4a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02F4
        gbc.setState(0x8cce, 0x291e, 0x6040, 0xb4dd, 0xa69c, 0xd8ef, 0x0, 0x1);
        gbc.writeMem(0x8cce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x291e, gbc.sp());
        EXPECT(0x8cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cce));
        EXPECT(0x10, gbc.readMem(0x8ccf));
        // CB 10 02F5
        gbc.setState(0x4ded, 0xe531, 0x510, 0x8a5f, 0x2204, 0xa773, 0x1, 0x0);
        gbc.writeMem(0x4ded, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe531, gbc.sp());
        EXPECT(0x4def, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 02F6
        gbc.setState(0xb502, 0x5f71, 0x9fc0, 0x43fb, 0xe17c, 0xa90c, 0x0, 0x1);
        gbc.writeMem(0xb502, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5f71, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb502));
        EXPECT(0x10, gbc.readMem(0xb503));
        // CB 10 02F7
        gbc.setState(0xe959, 0x497d, 0x3a20, 0xe499, 0xe28d, 0x5ca8, 0x0, 0x1);
        gbc.writeMem(0xe959, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x497d, gbc.sp());
        EXPECT(0xe95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe959));
        EXPECT(0x10, gbc.readMem(0xe95a));
        // CB 10 02F8
        gbc.setState(0x98f7, 0xc45e, 0xc7a0, 0x38a9, 0x31af, 0x5678, 0x0, 0x1);
        gbc.writeMem(0x98f7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc45e, gbc.sp());
        EXPECT(0x98f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f7));
        EXPECT(0x10, gbc.readMem(0x98f8));
        // CB 10 02F9
        gbc.setState(0xeec7, 0x8046, 0x2520, 0x5053, 0x9ef1, 0xafd1, 0x1, 0x1);
        gbc.writeMem(0xeec7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8046, gbc.sp());
        EXPECT(0xeec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec7));
        EXPECT(0x10, gbc.readMem(0xeec8));
        // CB 10 02FA
        gbc.setState(0x65a5, 0x6e9b, 0xdc20, 0x3533, 0x22e, 0xc1fa, 0x0, 0x1);
        gbc.writeMem(0x65a5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6e9b, gbc.sp());
        EXPECT(0x65a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02FB
        gbc.setState(0xa537, 0x9cff, 0xf230, 0x5c82, 0x26f7, 0x2fce, 0x1, 0x1);
        gbc.writeMem(0xa537, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9cff, gbc.sp());
        EXPECT(0xa539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa537));
        EXPECT(0x10, gbc.readMem(0xa538));
        // CB 10 02FC
        gbc.setState(0x32d3, 0x79ef, 0x9f50, 0x60e8, 0xc30f, 0x23c5, 0x0, 0x0);
        gbc.writeMem(0x32d3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0x32d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 02FD
        gbc.setState(0xafbf, 0x923a, 0xd0e0, 0x19be, 0xee3e, 0x7bfc, 0x1, 0x0);
        gbc.writeMem(0xafbf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x923a, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbf));
        EXPECT(0x10, gbc.readMem(0xafc0));
        // CB 10 02FE
        gbc.setState(0x90e0, 0xfbcb, 0x5680, 0x8277, 0xe142, 0x7fe3, 0x1, 0x1);
        gbc.writeMem(0x90e0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfbcb, gbc.sp());
        EXPECT(0x90e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90e0));
        EXPECT(0x10, gbc.readMem(0x90e1));
        // CB 10 02FF
        gbc.setState(0x1f2f, 0xc56a, 0xb310, 0x44ba, 0xe3a7, 0xd690, 0x1, 0x0);
        gbc.writeMem(0x1f2f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc56a, gbc.sp());
        EXPECT(0x1f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0300
        gbc.setState(0x7a69, 0xe82f, 0x1ad0, 0x8916, 0x14a1, 0xc173, 0x0, 0x0);
        gbc.writeMem(0x7a69, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe82f, gbc.sp());
        EXPECT(0x7a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0301
        gbc.setState(0xcbb5, 0xcbb9, 0x9d80, 0xd0b8, 0x40dd, 0xb1ec, 0x1, 0x0);
        gbc.writeMem(0xcbb5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcbb9, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb5));
        EXPECT(0x10, gbc.readMem(0xcbb6));
        // CB 10 0302
        gbc.setState(0xa660, 0x75e7, 0xaf80, 0x7623, 0x6298, 0xb437, 0x1, 0x0);
        gbc.writeMem(0xa660, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x75e7, gbc.sp());
        EXPECT(0xa662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa660));
        EXPECT(0x10, gbc.readMem(0xa661));
        // CB 10 0304
        gbc.setState(0x594e, 0x4745, 0x4890, 0x3a27, 0x7886, 0xf531, 0x1, 0x1);
        gbc.writeMem(0x594e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x5950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0305
        gbc.setState(0xb197, 0x1c90, 0xa920, 0xc025, 0x3c94, 0x2015, 0x1, 0x0);
        gbc.writeMem(0xb197, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0xb199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb197));
        EXPECT(0x10, gbc.readMem(0xb198));
        // CB 10 0306
        gbc.setState(0x2e66, 0x66d9, 0x6d30, 0xaedb, 0xadb5, 0x9b3f, 0x0, 0x1);
        gbc.writeMem(0x2e66, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x66d9, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0307
        gbc.setState(0x6a1e, 0x7f8, 0x1050, 0x89ab, 0x4127, 0x4056, 0x1, 0x1);
        gbc.writeMem(0x6a1e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7f8, gbc.sp());
        EXPECT(0x6a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0308
        gbc.setState(0xb87, 0x36ee, 0xca00, 0x9227, 0x8d17, 0x5d96, 0x1, 0x0);
        gbc.writeMem(0xb87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x36ee, gbc.sp());
        EXPECT(0xb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0309
        gbc.setState(0x9168, 0x8e40, 0xcda0, 0x5911, 0x2cfa, 0xa955, 0x0, 0x0);
        gbc.writeMem(0x9168, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8e40, gbc.sp());
        EXPECT(0x916a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9168));
        EXPECT(0x10, gbc.readMem(0x9169));
        // CB 10 030A
        gbc.setState(0xda72, 0x9ff6, 0x1930, 0x5876, 0x3206, 0x2107, 0x0, 0x0);
        gbc.writeMem(0xda72, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0xda74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda72));
        EXPECT(0x10, gbc.readMem(0xda73));
        // CB 10 030B
        gbc.setState(0x4e9d, 0xf8ab, 0x53c0, 0x40da, 0x25fd, 0x7dba, 0x1, 0x1);
        gbc.writeMem(0x4e9d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf8ab, gbc.sp());
        EXPECT(0x4e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 030C
        gbc.setState(0x7687, 0xab22, 0xed20, 0xb6ee, 0x602c, 0xef76, 0x0, 0x1);
        gbc.writeMem(0x7687, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 030D
        gbc.setState(0xad50, 0x50ce, 0x760, 0xbb3c, 0x70f8, 0xb12f, 0x0, 0x0);
        gbc.writeMem(0xad50, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0xad52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad50));
        EXPECT(0x10, gbc.readMem(0xad51));
        // CB 10 030E
        gbc.setState(0xc531, 0x40c3, 0x1930, 0xaa80, 0x6b43, 0xc3a7, 0x0, 0x1);
        gbc.writeMem(0xc531, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x40c3, gbc.sp());
        EXPECT(0xc533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc531));
        EXPECT(0x10, gbc.readMem(0xc532));
        // CB 10 030F
        gbc.setState(0x90f6, 0x9cdb, 0x45c0, 0x1828, 0xc4d, 0xab46, 0x1, 0x1);
        gbc.writeMem(0x90f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9cdb, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f6));
        EXPECT(0x10, gbc.readMem(0x90f7));
        // CB 10 0310
        gbc.setState(0x3e34, 0xfc57, 0xa1c0, 0x3b6d, 0x59b5, 0x961d, 0x1, 0x1);
        gbc.writeMem(0x3e34, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfc57, gbc.sp());
        EXPECT(0x3e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0311
        gbc.setState(0x778b, 0x204c, 0xb060, 0x4c94, 0x1e84, 0x8304, 0x0, 0x0);
        gbc.writeMem(0x778b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0x778d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0312
        gbc.setState(0x4246, 0x1f4f, 0x4220, 0xa4e4, 0x8ae, 0x89a9, 0x1, 0x0);
        gbc.writeMem(0x4246, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1f4f, gbc.sp());
        EXPECT(0x4248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0313
        gbc.setState(0x5e37, 0xd05c, 0x1a80, 0xe5d7, 0xcac8, 0xfb76, 0x0, 0x0);
        gbc.writeMem(0x5e37, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xd05c, gbc.sp());
        EXPECT(0x5e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0314
        gbc.setState(0xe531, 0x49a8, 0x9530, 0xc64e, 0xe494, 0x6b8d, 0x1, 0x1);
        gbc.writeMem(0xe531, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x49a8, gbc.sp());
        EXPECT(0xe533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe531));
        EXPECT(0x10, gbc.readMem(0xe532));
        // CB 10 0315
        gbc.setState(0xa49d, 0x2f1e, 0x5a70, 0x82d9, 0x5905, 0xb9e3, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2f1e, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0x10, gbc.readMem(0xa49e));
        // CB 10 0316
        gbc.setState(0x44b2, 0x4922, 0xc000, 0x9d24, 0x9794, 0xbafe, 0x1, 0x1);
        gbc.writeMem(0x44b2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4922, gbc.sp());
        EXPECT(0x44b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0317
        gbc.setState(0xcf30, 0xe852, 0x4e20, 0xefd5, 0x5389, 0x8277, 0x0, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe852, gbc.sp());
        EXPECT(0xcf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf30));
        EXPECT(0x10, gbc.readMem(0xcf31));
        // CB 10 0318
        gbc.setState(0xb506, 0xbf67, 0xd530, 0x40f1, 0x6cb4, 0xe932, 0x1, 0x0);
        gbc.writeMem(0xb506, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbf67, gbc.sp());
        EXPECT(0xb508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb506));
        EXPECT(0x10, gbc.readMem(0xb507));
        // CB 10 0319
        gbc.setState(0x6e05, 0x1701, 0xf560, 0xa68d, 0xc3d5, 0x4ba1, 0x0, 0x0);
        gbc.writeMem(0x6e05, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1701, gbc.sp());
        EXPECT(0x6e07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 031A
        gbc.setState(0xcb7e, 0xfb, 0x4180, 0x45bd, 0x9a13, 0xf8eb, 0x0, 0x1);
        gbc.writeMem(0xcb7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfb, gbc.sp());
        EXPECT(0xcb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7e));
        EXPECT(0x10, gbc.readMem(0xcb7f));
        // CB 10 031B
        gbc.setState(0x725, 0x8760, 0x2370, 0xd0e0, 0x4cd, 0x747a, 0x0, 0x0);
        gbc.writeMem(0x725, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0x727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 031C
        gbc.setState(0x677b, 0x9d08, 0x3860, 0xa902, 0x6e8e, 0x83f9, 0x0, 0x1);
        gbc.writeMem(0x677b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9d08, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 031D
        gbc.setState(0x4cc8, 0x2c6d, 0x5860, 0xc9d3, 0xcdde, 0x78d5, 0x1, 0x1);
        gbc.writeMem(0x4cc8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2c6d, gbc.sp());
        EXPECT(0x4cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 031E
        gbc.setState(0xa6ba, 0xcfb4, 0xaa70, 0x185b, 0xd259, 0x367b, 0x1, 0x1);
        gbc.writeMem(0xa6ba, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcfb4, gbc.sp());
        EXPECT(0xa6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ba));
        EXPECT(0x10, gbc.readMem(0xa6bb));
        // CB 10 031F
        gbc.setState(0x13c2, 0x1998, 0x1120, 0xeb9, 0x40ea, 0x2e1a, 0x1, 0x0);
        gbc.writeMem(0x13c2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1998, gbc.sp());
        EXPECT(0x13c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0321
        gbc.setState(0x2f18, 0x896c, 0x3780, 0x521d, 0xdef9, 0x981d, 0x0, 0x1);
        gbc.writeMem(0x2f18, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x896c, gbc.sp());
        EXPECT(0x2f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0322
        gbc.setState(0x1807, 0x1d7a, 0x6760, 0x2e92, 0x5634, 0x576d, 0x1, 0x1);
        gbc.writeMem(0x1807, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1d7a, gbc.sp());
        EXPECT(0x1809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0323
        gbc.setState(0x2a91, 0xba04, 0x4e90, 0x83e2, 0xf253, 0x377c, 0x0, 0x0);
        gbc.writeMem(0x2a91, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xba04, gbc.sp());
        EXPECT(0x2a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0324
        gbc.setState(0x5316, 0x9447, 0x6bd0, 0x4aa4, 0x6ba7, 0xce16, 0x0, 0x0);
        gbc.writeMem(0x5316, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0x5318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0325
        gbc.setState(0xa48, 0x2e9d, 0x2fd0, 0x2cc9, 0x264f, 0x8a55, 0x0, 0x0);
        gbc.writeMem(0xa48, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0xa4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0326
        gbc.setState(0x4a67, 0xec22, 0x1b60, 0x231f, 0xd48e, 0x6732, 0x0, 0x0);
        gbc.writeMem(0x4a67, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xec22, gbc.sp());
        EXPECT(0x4a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0327
        gbc.setState(0xbca3, 0x97e, 0x1ef0, 0x2e9, 0xb02c, 0x689f, 0x1, 0x0);
        gbc.writeMem(0xbca3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x97e, gbc.sp());
        EXPECT(0xbca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca3));
        EXPECT(0x10, gbc.readMem(0xbca4));
        // CB 10 0328
        gbc.setState(0x5e4f, 0xe7bb, 0xc000, 0xade4, 0xca, 0x9f0c, 0x1, 0x1);
        gbc.writeMem(0x5e4f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe7bb, gbc.sp());
        EXPECT(0x5e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0329
        gbc.setState(0x1932, 0xdbac, 0xa330, 0x74ae, 0x43c7, 0x4ec7, 0x0, 0x0);
        gbc.writeMem(0x1932, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdbac, gbc.sp());
        EXPECT(0x1934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 032A
        gbc.setState(0x2f82, 0x535b, 0x1090, 0x5151, 0xc5b5, 0x517c, 0x0, 0x1);
        gbc.writeMem(0x2f82, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x535b, gbc.sp());
        EXPECT(0x2f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 032B
        gbc.setState(0x68df, 0x3c6b, 0x85e0, 0x328b, 0x4179, 0x7e65, 0x1, 0x0);
        gbc.writeMem(0x68df, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3c6b, gbc.sp());
        EXPECT(0x68e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 032C
        gbc.setState(0x2176, 0x4d79, 0x1c70, 0xf7da, 0x322f, 0xd872, 0x1, 0x0);
        gbc.writeMem(0x2176, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 032D
        gbc.setState(0xaa87, 0x99b5, 0x3c90, 0xe06f, 0x7500, 0xd7ef, 0x1, 0x1);
        gbc.writeMem(0xaa87, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x99b5, gbc.sp());
        EXPECT(0xaa89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa87));
        EXPECT(0x10, gbc.readMem(0xaa88));
        // CB 10 032E
        gbc.setState(0xda60, 0xe303, 0x6af0, 0x14ae, 0xfc87, 0x15f0, 0x1, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe303, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x10, gbc.readMem(0xda61));
        // CB 10 032F
        gbc.setState(0xbbec, 0x9ac9, 0x40b0, 0x4f84, 0x23e5, 0xdcde, 0x0, 0x0);
        gbc.writeMem(0xbbec, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9ac9, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbec));
        EXPECT(0x10, gbc.readMem(0xbbed));
        // CB 10 0330
        gbc.setState(0x2d94, 0xf3fb, 0x13c0, 0x8b9c, 0xcde7, 0x347d, 0x0, 0x0);
        gbc.writeMem(0x2d94, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf3fb, gbc.sp());
        EXPECT(0x2d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0331
        gbc.setState(0x4ca3, 0xa147, 0x6c20, 0x16ce, 0x4cef, 0xa526, 0x1, 0x1);
        gbc.writeMem(0x4ca3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa147, gbc.sp());
        EXPECT(0x4ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0332
        gbc.setState(0xc650, 0x40ac, 0x7270, 0x3787, 0xaad0, 0x4757, 0x0, 0x1);
        gbc.writeMem(0xc650, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x40ac, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc650));
        EXPECT(0x10, gbc.readMem(0xc651));
        // CB 10 0333
        gbc.setState(0xb40a, 0x51af, 0x650, 0x9a27, 0x3b9b, 0xce92, 0x0, 0x0);
        gbc.writeMem(0xb40a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0xb40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40a));
        EXPECT(0x10, gbc.readMem(0xb40b));
        // CB 10 0334
        gbc.setState(0x5673, 0x4ccf, 0x4c90, 0xba92, 0x2aa5, 0xb66b, 0x0, 0x0);
        gbc.writeMem(0x5673, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4ccf, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0335
        gbc.setState(0x2e7e, 0x5b1b, 0xc530, 0xfe8e, 0x3ee5, 0xf2b4, 0x0, 0x1);
        gbc.writeMem(0x2e7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5b1b, gbc.sp());
        EXPECT(0x2e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0336
        gbc.setState(0x9407, 0xe057, 0x1190, 0x3876, 0x6a49, 0x5b32, 0x0, 0x0);
        gbc.writeMem(0x9407, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe057, gbc.sp());
        EXPECT(0x9409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9407));
        EXPECT(0x10, gbc.readMem(0x9408));
        // CB 10 0337
        gbc.setState(0x6003, 0xa651, 0xac20, 0xebf7, 0x34e2, 0xd87c, 0x0, 0x0);
        gbc.writeMem(0x6003, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa651, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0338
        gbc.setState(0xee33, 0x3879, 0x2ca0, 0xe510, 0x60a9, 0x9424, 0x1, 0x1);
        gbc.writeMem(0xee33, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0xee35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee33));
        EXPECT(0x10, gbc.readMem(0xee34));
        // CB 10 0339
        gbc.setState(0xa17d, 0x9df2, 0x3750, 0xf1a8, 0xfe73, 0xbac5, 0x1, 0x1);
        gbc.writeMem(0xa17d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9df2, gbc.sp());
        EXPECT(0xa17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa17d));
        EXPECT(0x10, gbc.readMem(0xa17e));
        // CB 10 033A
        gbc.setState(0x12a3, 0x9026, 0xeca0, 0x2, 0x1f59, 0x23ac, 0x0, 0x1);
        gbc.writeMem(0x12a3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9026, gbc.sp());
        EXPECT(0x12a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 033B
        gbc.setState(0x3e76, 0xc105, 0x6550, 0xe9d, 0xc8b5, 0x55e1, 0x0, 0x0);
        gbc.writeMem(0x3e76, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc105, gbc.sp());
        EXPECT(0x3e78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 033C
        gbc.setState(0x1a8, 0xcef5, 0x6a80, 0x56a5, 0x56c, 0xc578, 0x1, 0x0);
        gbc.writeMem(0x1a8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcef5, gbc.sp());
        EXPECT(0x1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 033D
        gbc.setState(0x1b8f, 0x9301, 0xebd0, 0x4a81, 0x44a, 0xa3d5, 0x1, 0x0);
        gbc.writeMem(0x1b8f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0x1b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 033F
        gbc.setState(0x42fb, 0x4419, 0xf8d0, 0xe00e, 0x4fc7, 0x7c97, 0x1, 0x1);
        gbc.writeMem(0x42fb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4419, gbc.sp());
        EXPECT(0x42fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0340
        gbc.setState(0xe3b5, 0x744b, 0x7a70, 0x7186, 0xd5f, 0xc330, 0x0, 0x0);
        gbc.writeMem(0xe3b5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x744b, gbc.sp());
        EXPECT(0xe3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b5));
        EXPECT(0x10, gbc.readMem(0xe3b6));
        // CB 10 0341
        gbc.setState(0xa26e, 0x6b3e, 0x25a0, 0x619c, 0x4d4a, 0xa541, 0x0, 0x0);
        gbc.writeMem(0xa26e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6b3e, gbc.sp());
        EXPECT(0xa270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26e));
        EXPECT(0x10, gbc.readMem(0xa26f));
        // CB 10 0343
        gbc.setState(0x26f9, 0x2ca3, 0x9990, 0xb9db, 0x8b45, 0x99f4, 0x0, 0x0);
        gbc.writeMem(0x26f9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2ca3, gbc.sp());
        EXPECT(0x26fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0344
        gbc.setState(0x5346, 0x60ee, 0x1850, 0xa6d8, 0xb2de, 0xc103, 0x1, 0x1);
        gbc.writeMem(0x5346, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x60ee, gbc.sp());
        EXPECT(0x5348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0345
        gbc.setState(0xd244, 0x9611, 0xc0, 0x12bb, 0x41ed, 0x236b, 0x0, 0x1);
        gbc.writeMem(0xd244, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9611, gbc.sp());
        EXPECT(0xd246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd244));
        EXPECT(0x10, gbc.readMem(0xd245));
        // CB 10 0346
        gbc.setState(0xdcea, 0x89b5, 0x9be0, 0x8239, 0x619d, 0x80fc, 0x1, 0x0);
        gbc.writeMem(0xdcea, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x89b5, gbc.sp());
        EXPECT(0xdcec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcea));
        EXPECT(0x10, gbc.readMem(0xdceb));
        // CB 10 0347
        gbc.setState(0x50e9, 0x97ce, 0xabe0, 0xfb4, 0xd4d8, 0xc90e, 0x1, 0x0);
        gbc.writeMem(0x50e9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x97ce, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0348
        gbc.setState(0xae15, 0xfff3, 0x210, 0x6c34, 0xd894, 0x8dc9, 0x0, 0x1);
        gbc.writeMem(0xae15, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfff3, gbc.sp());
        EXPECT(0xae17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae15));
        EXPECT(0x10, gbc.readMem(0xae16));
        // CB 10 0349
        gbc.setState(0x4ba3, 0xdfe9, 0x1a50, 0x88f8, 0x6a5d, 0xc269, 0x0, 0x0);
        gbc.writeMem(0x4ba3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdfe9, gbc.sp());
        EXPECT(0x4ba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 034A
        gbc.setState(0x294e, 0x291e, 0xb280, 0xe55e, 0x984a, 0xfa5, 0x0, 0x0);
        gbc.writeMem(0x294e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x291e, gbc.sp());
        EXPECT(0x2950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 034B
        gbc.setState(0x7903, 0xf5f5, 0xf5b0, 0xacb5, 0x2ede, 0x7bdb, 0x0, 0x0);
        gbc.writeMem(0x7903, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf5f5, gbc.sp());
        EXPECT(0x7905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 034D
        gbc.setState(0x8c1c, 0x4eb9, 0x7160, 0x515c, 0xdbbe, 0x40b4, 0x0, 0x0);
        gbc.writeMem(0x8c1c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4eb9, gbc.sp());
        EXPECT(0x8c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1c));
        EXPECT(0x10, gbc.readMem(0x8c1d));
        // CB 10 034E
        gbc.setState(0xa586, 0x6336, 0x1e50, 0x7e14, 0xd072, 0xc8a3, 0x1, 0x0);
        gbc.writeMem(0xa586, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6336, gbc.sp());
        EXPECT(0xa588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa586));
        EXPECT(0x10, gbc.readMem(0xa587));
        // CB 10 034F
        gbc.setState(0x3bd1, 0x79a2, 0x9450, 0xeee8, 0x4a2c, 0x89c3, 0x1, 0x1);
        gbc.writeMem(0x3bd1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x79a2, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0350
        gbc.setState(0x2ce9, 0xa358, 0xd110, 0x9dfa, 0x6b58, 0x7ad, 0x0, 0x1);
        gbc.writeMem(0x2ce9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa358, gbc.sp());
        EXPECT(0x2ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0351
        gbc.setState(0x64d2, 0xbe20, 0x6d30, 0xdf9b, 0x16cb, 0x968d, 0x0, 0x0);
        gbc.writeMem(0x64d2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbe20, gbc.sp());
        EXPECT(0x64d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0352
        gbc.setState(0x11c0, 0x58d2, 0xbc30, 0x7db6, 0xed1b, 0xcb7c, 0x1, 0x1);
        gbc.writeMem(0x11c0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0x11c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0353
        gbc.setState(0xe956, 0xaa37, 0x94f0, 0x9ce8, 0xbb89, 0xe82, 0x1, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xaa37, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe956));
        EXPECT(0x10, gbc.readMem(0xe957));
        // CB 10 0354
        gbc.setState(0x8de1, 0xb82e, 0xa810, 0x8f9e, 0x48c3, 0x58a4, 0x1, 0x1);
        gbc.writeMem(0x8de1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb82e, gbc.sp());
        EXPECT(0x8de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de1));
        EXPECT(0x10, gbc.readMem(0x8de2));
        // CB 10 0355
        gbc.setState(0xa25c, 0x6e31, 0xb350, 0x884d, 0x9390, 0x370f, 0x0, 0x0);
        gbc.writeMem(0xa25c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0xa25e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25c));
        EXPECT(0x10, gbc.readMem(0xa25d));
        // CB 10 0356
        gbc.setState(0x827e, 0x7302, 0x920, 0xb120, 0x9fb6, 0x69f7, 0x1, 0x0);
        gbc.writeMem(0x827e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7302, gbc.sp());
        EXPECT(0x8280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827e));
        EXPECT(0x10, gbc.readMem(0x827f));
        // CB 10 0357
        gbc.setState(0x692f, 0x8878, 0xd530, 0x9c20, 0x3ae0, 0x93d5, 0x0, 0x0);
        gbc.writeMem(0x692f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8878, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0358
        gbc.setState(0x81bb, 0xa432, 0xdc70, 0xa292, 0x4837, 0x79f5, 0x1, 0x0);
        gbc.writeMem(0x81bb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0x81bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81bb));
        EXPECT(0x10, gbc.readMem(0x81bc));
        // CB 10 0359
        gbc.setState(0x5cd, 0x710a, 0xf8f0, 0x6958, 0xf250, 0x5357, 0x0, 0x0);
        gbc.writeMem(0x5cd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x710a, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 035A
        gbc.setState(0xbd57, 0x7d40, 0x2e30, 0x8ab2, 0x7999, 0xbb17, 0x1, 0x0);
        gbc.writeMem(0xbd57, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7d40, gbc.sp());
        EXPECT(0xbd59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd57));
        EXPECT(0x10, gbc.readMem(0xbd58));
        // CB 10 035B
        gbc.setState(0xb33d, 0xecf7, 0xc960, 0xec66, 0xdd37, 0x627d, 0x0, 0x0);
        gbc.writeMem(0xb33d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xecf7, gbc.sp());
        EXPECT(0xb33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33d));
        EXPECT(0x10, gbc.readMem(0xb33e));
        // CB 10 035C
        gbc.setState(0x65f3, 0x2636, 0x6c0, 0x432c, 0x6785, 0x1f84, 0x0, 0x1);
        gbc.writeMem(0x65f3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2636, gbc.sp());
        EXPECT(0x65f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 035D
        gbc.setState(0x4ac9, 0xb67c, 0x5370, 0x4388, 0xf3ea, 0x6b4b, 0x0, 0x0);
        gbc.writeMem(0x4ac9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb67c, gbc.sp());
        EXPECT(0x4acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 035E
        gbc.setState(0x53d3, 0x1f58, 0xdd0, 0xc1fd, 0xa9f2, 0x186f, 0x0, 0x0);
        gbc.writeMem(0x53d3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1f58, gbc.sp());
        EXPECT(0x53d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 035F
        gbc.setState(0x8225, 0xf5d9, 0xb450, 0x31f, 0x94f9, 0x947a, 0x1, 0x0);
        gbc.writeMem(0x8225, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0x8227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8225));
        EXPECT(0x10, gbc.readMem(0x8226));
        // CB 10 0360
        gbc.setState(0x1232, 0x3363, 0x2bf0, 0xa314, 0xd8b2, 0xd09c, 0x0, 0x1);
        gbc.writeMem(0x1232, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3363, gbc.sp());
        EXPECT(0x1234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0361
        gbc.setState(0x4835, 0xfda5, 0x26b0, 0xab9e, 0x677, 0x45c8, 0x1, 0x0);
        gbc.writeMem(0x4835, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfda5, gbc.sp());
        EXPECT(0x4837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0362
        gbc.setState(0xe639, 0x8902, 0x730, 0x5c3a, 0xec67, 0x53e3, 0x0, 0x1);
        gbc.writeMem(0xe639, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8902, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe639));
        EXPECT(0x10, gbc.readMem(0xe63a));
        // CB 10 0363
        gbc.setState(0xa6c4, 0x8f68, 0x51d0, 0x5c4e, 0x7c05, 0xe74d, 0x1, 0x0);
        gbc.writeMem(0xa6c4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8f68, gbc.sp());
        EXPECT(0xa6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6c4));
        EXPECT(0x10, gbc.readMem(0xa6c5));
        // CB 10 0364
        gbc.setState(0x5c7b, 0x61f2, 0x9d40, 0xaca7, 0xf21c, 0x47c6, 0x0, 0x0);
        gbc.writeMem(0x5c7b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0x5c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0365
        gbc.setState(0xd093, 0x14a7, 0x3f90, 0xc229, 0x2d74, 0x17bf, 0x0, 0x1);
        gbc.writeMem(0xd093, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x14a7, gbc.sp());
        EXPECT(0xd095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd093));
        EXPECT(0x10, gbc.readMem(0xd094));
        // CB 10 0366
        gbc.setState(0x5660, 0x47d3, 0x3730, 0x72af, 0xf85b, 0xc2, 0x1, 0x0);
        gbc.writeMem(0x5660, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x47d3, gbc.sp());
        EXPECT(0x5662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0367
        gbc.setState(0x2b16, 0x85c6, 0x6fd0, 0xa1e1, 0x3c4b, 0xf72c, 0x1, 0x0);
        gbc.writeMem(0x2b16, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x85c6, gbc.sp());
        EXPECT(0x2b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0369
        gbc.setState(0xcec0, 0xd56a, 0xb820, 0x15d1, 0x98a2, 0x2c2d, 0x0, 0x0);
        gbc.writeMem(0xcec0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd56a, gbc.sp());
        EXPECT(0xcec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec0));
        EXPECT(0x10, gbc.readMem(0xcec1));
        // CB 10 036A
        gbc.setState(0x5627, 0x68a8, 0x5650, 0xc16e, 0xbc2f, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x5627, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x68a8, gbc.sp());
        EXPECT(0x5629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 036B
        gbc.setState(0xa0d2, 0xfc4e, 0x12d0, 0xb1fb, 0xa779, 0x6998, 0x0, 0x0);
        gbc.writeMem(0xa0d2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfc4e, gbc.sp());
        EXPECT(0xa0d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d2));
        EXPECT(0x10, gbc.readMem(0xa0d3));
        // CB 10 036C
        gbc.setState(0xafbf, 0xf005, 0xbb30, 0x8cc0, 0x213f, 0x4318, 0x0, 0x0);
        gbc.writeMem(0xafbf, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf005, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbf));
        EXPECT(0x10, gbc.readMem(0xafc0));
        // CB 10 036D
        gbc.setState(0x57bd, 0x53f3, 0xca60, 0x35c1, 0x75bc, 0xf1ad, 0x0, 0x1);
        gbc.writeMem(0x57bd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x53f3, gbc.sp());
        EXPECT(0x57bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 036E
        gbc.setState(0xaa81, 0x26ad, 0x8050, 0x3468, 0x3e6b, 0x6ee4, 0x0, 0x1);
        gbc.writeMem(0xaa81, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x26ad, gbc.sp());
        EXPECT(0xaa83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa81));
        EXPECT(0x10, gbc.readMem(0xaa82));
        // CB 10 036F
        gbc.setState(0xcd03, 0x9051, 0xc780, 0xd414, 0x60e4, 0x8257, 0x0, 0x1);
        gbc.writeMem(0xcd03, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0xcd05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd03));
        EXPECT(0x10, gbc.readMem(0xcd04));
        // CB 10 0370
        gbc.setState(0xa317, 0xd8fe, 0x8360, 0xfa64, 0xc694, 0x4733, 0x0, 0x1);
        gbc.writeMem(0xa317, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd8fe, gbc.sp());
        EXPECT(0xa319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa317));
        EXPECT(0x10, gbc.readMem(0xa318));
        // CB 10 0371
        gbc.setState(0xe0c5, 0xca75, 0x9230, 0x629e, 0x17a5, 0x136c, 0x0, 0x0);
        gbc.writeMem(0xe0c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xca75, gbc.sp());
        EXPECT(0xe0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c5));
        EXPECT(0x10, gbc.readMem(0xe0c6));
        // CB 10 0372
        gbc.setState(0x2b67, 0xde38, 0xf60, 0xbf10, 0x78b3, 0x189c, 0x0, 0x1);
        gbc.writeMem(0x2b67, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xde38, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0373
        gbc.setState(0xa726, 0xbc4b, 0xf090, 0xb91a, 0x9332, 0xe469, 0x1, 0x0);
        gbc.writeMem(0xa726, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbc4b, gbc.sp());
        EXPECT(0xa728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa726));
        EXPECT(0x10, gbc.readMem(0xa727));
        // CB 10 0374
        gbc.setState(0x98d, 0x1ab3, 0x7e70, 0x835, 0x4d36, 0x3368, 0x1, 0x1);
        gbc.writeMem(0x98d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1ab3, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0375
        gbc.setState(0x20c8, 0x392c, 0x8ff0, 0x8272, 0x55ec, 0xf787, 0x1, 0x1);
        gbc.writeMem(0x20c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x392c, gbc.sp());
        EXPECT(0x20ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0376
        gbc.setState(0xaf46, 0xb52a, 0x7190, 0x6828, 0xf382, 0x9fee, 0x1, 0x0);
        gbc.writeMem(0xaf46, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0xaf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf46));
        EXPECT(0x10, gbc.readMem(0xaf47));
        // CB 10 0377
        gbc.setState(0x9845, 0xc97b, 0x4630, 0x9df4, 0xe8f0, 0xf997, 0x1, 0x0);
        gbc.writeMem(0x9845, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0x9847, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9845));
        EXPECT(0x10, gbc.readMem(0x9846));
        // CB 10 0378
        gbc.setState(0xd2cc, 0xa902, 0xdc30, 0xecff, 0x3ec6, 0xe348, 0x1, 0x0);
        gbc.writeMem(0xd2cc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa902, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2cc));
        EXPECT(0x10, gbc.readMem(0xd2cd));
        // CB 10 0379
        gbc.setState(0xcd9c, 0x5d8f, 0x1f00, 0x249b, 0x7f4, 0xa6, 0x1, 0x1);
        gbc.writeMem(0xcd9c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0xcd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9c));
        EXPECT(0x10, gbc.readMem(0xcd9d));
        // CB 10 037A
        gbc.setState(0x3822, 0xbc16, 0xf750, 0xa6ca, 0x80b6, 0xa6e8, 0x0, 0x1);
        gbc.writeMem(0x3822, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbc16, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 037B
        gbc.setState(0x2046, 0x89f7, 0xe840, 0xb3df, 0x5ff6, 0xc087, 0x0, 0x1);
        gbc.writeMem(0x2046, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x89f7, gbc.sp());
        EXPECT(0x2048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 037C
        gbc.setState(0x6cbc, 0x9d46, 0x6900, 0x6368, 0xabed, 0xa47e, 0x0, 0x1);
        gbc.writeMem(0x6cbc, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9d46, gbc.sp());
        EXPECT(0x6cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 037D
        gbc.setState(0xb997, 0x2edd, 0xa410, 0xba0b, 0x5680, 0xb0b5, 0x0, 0x1);
        gbc.writeMem(0xb997, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2edd, gbc.sp());
        EXPECT(0xb999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb997));
        EXPECT(0x10, gbc.readMem(0xb998));
        // CB 10 037F
        gbc.setState(0x2f1a, 0xd5c, 0x7a00, 0xe380, 0xe3f1, 0xe052, 0x0, 0x0);
        gbc.writeMem(0x2f1a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd5c, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0380
        gbc.setState(0x27a8, 0x9857, 0x2370, 0xa4e6, 0x23a2, 0x428d, 0x0, 0x1);
        gbc.writeMem(0x27a8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0381
        gbc.setState(0xc249, 0x7d1a, 0x21b0, 0xdbf5, 0x41fd, 0xd32c, 0x0, 0x1);
        gbc.writeMem(0xc249, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7d1a, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0x10, gbc.readMem(0xc24a));
        // CB 10 0382
        gbc.setState(0x9970, 0x1002, 0x33c0, 0x473b, 0xda8c, 0x65a6, 0x1, 0x1);
        gbc.writeMem(0x9970, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0x9972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9970));
        EXPECT(0x10, gbc.readMem(0x9971));
        // CB 10 0383
        gbc.setState(0x3c54, 0x7261, 0x1820, 0x85b7, 0x3d26, 0xb1ff, 0x0, 0x1);
        gbc.writeMem(0x3c54, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x7261, gbc.sp());
        EXPECT(0x3c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0384
        gbc.setState(0x98d, 0xeb2c, 0x8b80, 0xb77d, 0x651c, 0xa532, 0x0, 0x0);
        gbc.writeMem(0x98d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xeb2c, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0385
        gbc.setState(0x6140, 0x703d, 0xc760, 0x4858, 0x89ac, 0x6c56, 0x1, 0x1);
        gbc.writeMem(0x6140, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x703d, gbc.sp());
        EXPECT(0x6142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0387
        gbc.setState(0x59ea, 0xdd43, 0x29e0, 0xb6cc, 0xb239, 0x6ec7, 0x1, 0x0);
        gbc.writeMem(0x59ea, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdd43, gbc.sp());
        EXPECT(0x59ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0388
        gbc.setState(0x7fe8, 0x84d8, 0xa100, 0xcaae, 0x8a86, 0xeb41, 0x0, 0x1);
        gbc.writeMem(0x7fe8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x84d8, gbc.sp());
        EXPECT(0x7fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0389
        gbc.setState(0x9373, 0xa3d3, 0x1680, 0x771, 0xadb5, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0x9373, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa3d3, gbc.sp());
        EXPECT(0x9375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9373));
        EXPECT(0x10, gbc.readMem(0x9374));
        // CB 10 038A
        gbc.setState(0xd1ef, 0x3066, 0x5c00, 0xa317, 0x3b64, 0xe8f6, 0x0, 0x1);
        gbc.writeMem(0xd1ef, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3066, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ef));
        EXPECT(0x10, gbc.readMem(0xd1f0));
        // CB 10 038B
        gbc.setState(0x793, 0x35d8, 0xe050, 0x6f00, 0xa53f, 0x4a1d, 0x1, 0x1);
        gbc.writeMem(0x793, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x35d8, gbc.sp());
        EXPECT(0x795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 038C
        gbc.setState(0xd996, 0x231d, 0xc1f0, 0xd98f, 0x3d0b, 0x1ea3, 0x0, 0x1);
        gbc.writeMem(0xd996, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x231d, gbc.sp());
        EXPECT(0xd998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd996));
        EXPECT(0x10, gbc.readMem(0xd997));
        // CB 10 038D
        gbc.setState(0x3e84, 0xf19f, 0x1f70, 0x6d6, 0x9ed2, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0x3e84, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf19f, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 038E
        gbc.setState(0x55c5, 0x7ecb, 0xaa90, 0xd456, 0x4649, 0x97fc, 0x1, 0x1);
        gbc.writeMem(0x55c5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7ecb, gbc.sp());
        EXPECT(0x55c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 038F
        gbc.setState(0xc256, 0x3b68, 0x57f0, 0x9eb1, 0x7508, 0x9aff, 0x1, 0x1);
        gbc.writeMem(0xc256, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3b68, gbc.sp());
        EXPECT(0xc258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc256));
        EXPECT(0x10, gbc.readMem(0xc257));
        // CB 10 0390
        gbc.setState(0x7bb8, 0x33ee, 0xfcd0, 0x1690, 0xdc1c, 0xc51a, 0x0, 0x1);
        gbc.writeMem(0x7bb8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x33ee, gbc.sp());
        EXPECT(0x7bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0391
        gbc.setState(0xa724, 0xce4e, 0x7210, 0x6ba6, 0x15eb, 0x1821, 0x0, 0x1);
        gbc.writeMem(0xa724, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xce4e, gbc.sp());
        EXPECT(0xa726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa724));
        EXPECT(0x10, gbc.readMem(0xa725));
        // CB 10 0392
        gbc.setState(0x35b0, 0xe220, 0x6de0, 0x997c, 0xe5eb, 0x112b, 0x0, 0x1);
        gbc.writeMem(0x35b0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe220, gbc.sp());
        EXPECT(0x35b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0393
        gbc.setState(0x4091, 0x12fe, 0xb1a0, 0x44dd, 0x6400, 0xacae, 0x1, 0x0);
        gbc.writeMem(0x4091, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x12fe, gbc.sp());
        EXPECT(0x4093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0394
        gbc.setState(0x8083, 0xbf3c, 0x770, 0xb442, 0xd5e1, 0xce49, 0x0, 0x1);
        gbc.writeMem(0x8083, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbf3c, gbc.sp());
        EXPECT(0x8085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8083));
        EXPECT(0x10, gbc.readMem(0x8084));
        // CB 10 0395
        gbc.setState(0x3ef0, 0xe313, 0x9860, 0x76cf, 0x32a9, 0x277e, 0x1, 0x1);
        gbc.writeMem(0x3ef0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe313, gbc.sp());
        EXPECT(0x3ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 0396
        gbc.setState(0x8ef8, 0x9e15, 0x4400, 0xb26, 0x7043, 0xc662, 0x0, 0x1);
        gbc.writeMem(0x8ef8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e15, gbc.sp());
        EXPECT(0x8efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef8));
        EXPECT(0x10, gbc.readMem(0x8ef9));
        // CB 10 0397
        gbc.setState(0xaaad, 0x1f9e, 0x7000, 0xf8e8, 0x69e7, 0x318c, 0x1, 0x1);
        gbc.writeMem(0xaaad, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1f9e, gbc.sp());
        EXPECT(0xaaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaad));
        EXPECT(0x10, gbc.readMem(0xaaae));
        // CB 10 0398
        gbc.setState(0x1cf5, 0x6b13, 0xd530, 0xfd97, 0xe6b5, 0xdced, 0x1, 0x1);
        gbc.writeMem(0x1cf5, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6b13, gbc.sp());
        EXPECT(0x1cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 0399
        gbc.setState(0xe3b4, 0xad93, 0xf610, 0x9b22, 0x8159, 0x275a, 0x1, 0x1);
        gbc.writeMem(0xe3b4, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xad93, gbc.sp());
        EXPECT(0xe3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b4));
        EXPECT(0x10, gbc.readMem(0xe3b5));
        // CB 10 039A
        gbc.setState(0x3f6a, 0xf42e, 0xa10, 0x574a, 0x2a31, 0xeff, 0x1, 0x1);
        gbc.writeMem(0x3f6a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x3f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 039B
        gbc.setState(0x34a1, 0x99c7, 0xb0, 0xc87c, 0x7bc2, 0x2df0, 0x1, 0x1);
        gbc.writeMem(0x34a1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x99c7, gbc.sp());
        EXPECT(0x34a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 039C
        gbc.setState(0xc777, 0xa4e9, 0x42e0, 0x482b, 0x9c35, 0xe7c9, 0x0, 0x1);
        gbc.writeMem(0xc777, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa4e9, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc777));
        EXPECT(0x10, gbc.readMem(0xc778));
        // CB 10 039D
        gbc.setState(0xb697, 0xb273, 0x4430, 0x603a, 0x1c9b, 0xe299, 0x1, 0x1);
        gbc.writeMem(0xb697, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0xb699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb697));
        EXPECT(0x10, gbc.readMem(0xb698));
        // CB 10 039E
        gbc.setState(0x2479, 0xf154, 0xa4a0, 0x4969, 0xc0f1, 0xe42d, 0x1, 0x1);
        gbc.writeMem(0x2479, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf154, gbc.sp());
        EXPECT(0x247b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 039F
        gbc.setState(0x39c8, 0x88e9, 0x6a80, 0x414d, 0xe544, 0x522, 0x0, 0x1);
        gbc.writeMem(0x39c8, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0x39ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03A0
        gbc.setState(0xcdb2, 0xfef4, 0x7b50, 0x8978, 0x868d, 0x20e, 0x0, 0x0);
        gbc.writeMem(0xcdb2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfef4, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb2));
        EXPECT(0x10, gbc.readMem(0xcdb3));
        // CB 10 03A1
        gbc.setState(0x7e70, 0xce7c, 0x6cb0, 0x1f87, 0x2950, 0x30ef, 0x1, 0x1);
        gbc.writeMem(0x7e70, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xce7c, gbc.sp());
        EXPECT(0x7e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03A2
        gbc.setState(0x42ed, 0xe349, 0xa800, 0x263f, 0x3283, 0x9f16, 0x0, 0x1);
        gbc.writeMem(0x42ed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe349, gbc.sp());
        EXPECT(0x42ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03A3
        gbc.setState(0x4001, 0x748f, 0xd560, 0x17b7, 0xe866, 0xc42f, 0x0, 0x1);
        gbc.writeMem(0x4001, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x748f, gbc.sp());
        EXPECT(0x4003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03A4
        gbc.setState(0x1e99, 0x63ba, 0xf600, 0xee13, 0xb100, 0x9ba6, 0x0, 0x0);
        gbc.writeMem(0x1e99, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x63ba, gbc.sp());
        EXPECT(0x1e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03A5
        gbc.setState(0xbdfb, 0xccf5, 0x6e80, 0xe2d7, 0x1f09, 0x5b71, 0x1, 0x0);
        gbc.writeMem(0xbdfb, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xccf5, gbc.sp());
        EXPECT(0xbdfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfb));
        EXPECT(0x10, gbc.readMem(0xbdfc));
        // CB 10 03A6
        gbc.setState(0xdfab, 0xd7c9, 0x33d0, 0x674d, 0xcbe5, 0xde93, 0x1, 0x1);
        gbc.writeMem(0xdfab, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd7c9, gbc.sp());
        EXPECT(0xdfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfab));
        EXPECT(0x10, gbc.readMem(0xdfac));
        // CB 10 03A7
        gbc.setState(0xb82b, 0x1247, 0xa740, 0xf1d8, 0x832, 0x7c25, 0x0, 0x0);
        gbc.writeMem(0xb82b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1247, gbc.sp());
        EXPECT(0xb82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82b));
        EXPECT(0x10, gbc.readMem(0xb82c));
        // CB 10 03A8
        gbc.setState(0x8c50, 0x4884, 0xa210, 0x6cea, 0xc967, 0x8c49, 0x0, 0x1);
        gbc.writeMem(0x8c50, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4884, gbc.sp());
        EXPECT(0x8c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c50));
        EXPECT(0x10, gbc.readMem(0x8c51));
        // CB 10 03A9
        gbc.setState(0x4e2f, 0xef8d, 0x1740, 0xb484, 0xe7d, 0x1f2a, 0x1, 0x1);
        gbc.writeMem(0x4e2f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xef8d, gbc.sp());
        EXPECT(0x4e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03AA
        gbc.setState(0xa364, 0xcff6, 0xbd20, 0xdf2e, 0x9b06, 0x7f9b, 0x1, 0x1);
        gbc.writeMem(0xa364, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcff6, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa364));
        EXPECT(0x10, gbc.readMem(0xa365));
        // CB 10 03AB
        gbc.setState(0x66a, 0x8df2, 0x12c0, 0xd3ac, 0x3d70, 0xd7e2, 0x1, 0x0);
        gbc.writeMem(0x66a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8df2, gbc.sp());
        EXPECT(0x66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03AC
        gbc.setState(0x9118, 0xd27e, 0x6770, 0x3b8, 0xc836, 0xe24e, 0x0, 0x1);
        gbc.writeMem(0x9118, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd27e, gbc.sp());
        EXPECT(0x911a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9118));
        EXPECT(0x10, gbc.readMem(0x9119));
        // CB 10 03AD
        gbc.setState(0x1a39, 0x816d, 0x6740, 0xa647, 0xd96a, 0xbae2, 0x1, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x816d, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03AE
        gbc.setState(0x7c97, 0xb3c7, 0xe0d0, 0x2d8c, 0x8736, 0x466e, 0x0, 0x1);
        gbc.writeMem(0x7c97, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb3c7, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03AF
        gbc.setState(0x6eb3, 0xe8e5, 0x2640, 0x4f68, 0x1446, 0xdf29, 0x1, 0x0);
        gbc.writeMem(0x6eb3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe8e5, gbc.sp());
        EXPECT(0x6eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03B0
        gbc.setState(0x5ed9, 0x1f1f, 0xb2b0, 0xd41d, 0xe768, 0xa485, 0x1, 0x1);
        gbc.writeMem(0x5ed9, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1f1f, gbc.sp());
        EXPECT(0x5edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03B1
        gbc.setState(0x4c53, 0xe9c1, 0x46d0, 0xa90b, 0xec93, 0xcad9, 0x0, 0x0);
        gbc.writeMem(0x4c53, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe9c1, gbc.sp());
        EXPECT(0x4c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03B2
        gbc.setState(0xc500, 0x9648, 0x32b0, 0x657c, 0x1989, 0xa431, 0x0, 0x0);
        gbc.writeMem(0xc500, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9648, gbc.sp());
        EXPECT(0xc502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc500));
        EXPECT(0x10, gbc.readMem(0xc501));
        // CB 10 03B3
        gbc.setState(0x9741, 0xfc4d, 0x1b10, 0x906e, 0xd37e, 0x11c9, 0x1, 0x0);
        gbc.writeMem(0x9741, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfc4d, gbc.sp());
        EXPECT(0x9743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9741));
        EXPECT(0x10, gbc.readMem(0x9742));
        // CB 10 03B4
        gbc.setState(0xd48f, 0x64ad, 0xe60, 0x38ea, 0x866, 0x735d, 0x1, 0x1);
        gbc.writeMem(0xd48f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0xd491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48f));
        EXPECT(0x10, gbc.readMem(0xd490));
        // CB 10 03B5
        gbc.setState(0x9959, 0x78ab, 0x7d40, 0x78e, 0x5395, 0x6ed8, 0x1, 0x0);
        gbc.writeMem(0x9959, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x78ab, gbc.sp());
        EXPECT(0x995b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9959));
        EXPECT(0x10, gbc.readMem(0x995a));
        // CB 10 03B6
        gbc.setState(0xbf4d, 0x8be1, 0xd7e0, 0xb97c, 0x4dcc, 0x532a, 0x0, 0x0);
        gbc.writeMem(0xbf4d, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8be1, gbc.sp());
        EXPECT(0xbf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4d));
        EXPECT(0x10, gbc.readMem(0xbf4e));
        // CB 10 03B7
        gbc.setState(0xc9a0, 0x3162, 0x8fa0, 0x7a00, 0x4a9f, 0x8ead, 0x0, 0x0);
        gbc.writeMem(0xc9a0, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x3162, gbc.sp());
        EXPECT(0xc9a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a0));
        EXPECT(0x10, gbc.readMem(0xc9a1));
        // CB 10 03B9
        gbc.setState(0xa7f6, 0x670f, 0xe9e0, 0xe144, 0x85d1, 0x4844, 0x0, 0x1);
        gbc.writeMem(0xa7f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x670f, gbc.sp());
        EXPECT(0xa7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7f6));
        EXPECT(0x10, gbc.readMem(0xa7f7));
        // CB 10 03BA
        gbc.setState(0x2f86, 0x75e, 0xc890, 0xbf1b, 0x1461, 0xf521, 0x0, 0x1);
        gbc.writeMem(0x2f86, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x75e, gbc.sp());
        EXPECT(0x2f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03BB
        gbc.setState(0xe498, 0x4c09, 0x3f10, 0x14c3, 0xd11b, 0xb9b, 0x1, 0x1);
        gbc.writeMem(0xe498, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4c09, gbc.sp());
        EXPECT(0xe49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe498));
        EXPECT(0x10, gbc.readMem(0xe499));
        // CB 10 03BC
        gbc.setState(0xfd, 0x6473, 0x9390, 0xef80, 0x1ca7, 0xa197, 0x1, 0x0);
        gbc.writeMem(0xfd, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6473, gbc.sp());
        EXPECT(0xff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03BD
        gbc.setState(0xe3ce, 0xf721, 0xefb0, 0x508a, 0x30c6, 0x457f, 0x1, 0x1);
        gbc.writeMem(0xe3ce, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf721, gbc.sp());
        EXPECT(0xe3d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ce));
        EXPECT(0x10, gbc.readMem(0xe3cf));
        // CB 10 03BF
        gbc.setState(0xb4f1, 0x977f, 0x8530, 0xafd5, 0xce5e, 0x65a8, 0x0, 0x0);
        gbc.writeMem(0xb4f1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x977f, gbc.sp());
        EXPECT(0xb4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f1));
        EXPECT(0x10, gbc.readMem(0xb4f2));
        // CB 10 03C0
        gbc.setState(0x746b, 0x60af, 0xb810, 0x9b26, 0x89d5, 0x7ba3, 0x0, 0x0);
        gbc.writeMem(0x746b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x60af, gbc.sp());
        EXPECT(0x746d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03C1
        gbc.setState(0x2df1, 0x4c9a, 0xb5e0, 0x9b58, 0x9b04, 0xbbfe, 0x1, 0x1);
        gbc.writeMem(0x2df1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4c9a, gbc.sp());
        EXPECT(0x2df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03C2
        gbc.setState(0x4553, 0x2888, 0x4270, 0x6e95, 0x31de, 0x126d, 0x1, 0x1);
        gbc.writeMem(0x4553, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x4555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03C3
        gbc.setState(0xa9b, 0xa1a6, 0xc810, 0x33b0, 0x3cc5, 0xfd39, 0x1, 0x1);
        gbc.writeMem(0xa9b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa1a6, gbc.sp());
        EXPECT(0xa9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03C4
        gbc.setState(0x8488, 0xbfe3, 0x28e0, 0xd4ce, 0xbe96, 0x86d1, 0x0, 0x1);
        gbc.writeMem(0x8488, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbfe3, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8488));
        EXPECT(0x10, gbc.readMem(0x8489));
        // CB 10 03C5
        gbc.setState(0x2251, 0x58b6, 0xec80, 0x8d4c, 0x8bda, 0xd231, 0x0, 0x1);
        gbc.writeMem(0x2251, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x58b6, gbc.sp());
        EXPECT(0x2253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03C6
        gbc.setState(0x81f6, 0x9fa9, 0x33c0, 0xe4a0, 0x6143, 0xf91a, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f6));
        EXPECT(0x10, gbc.readMem(0x81f7));
        // CB 10 03C7
        gbc.setState(0x2ea3, 0x6d9b, 0xdb0, 0x5adb, 0xa90e, 0x224, 0x0, 0x0);
        gbc.writeMem(0x2ea3, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6d9b, gbc.sp());
        EXPECT(0x2ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03C8
        gbc.setState(0x1262, 0xfcd4, 0x5c0, 0x6dd9, 0x2da4, 0x304a, 0x0, 0x0);
        gbc.writeMem(0x1262, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfcd4, gbc.sp());
        EXPECT(0x1264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03C9
        gbc.setState(0x2d45, 0x32ed, 0x9350, 0xa68c, 0xa2ce, 0xbdcb, 0x0, 0x1);
        gbc.writeMem(0x2d45, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x32ed, gbc.sp());
        EXPECT(0x2d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03CA
        gbc.setState(0x632c, 0xaef6, 0xf8b0, 0x4e70, 0x6a45, 0x40b1, 0x1, 0x0);
        gbc.writeMem(0x632c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaef6, gbc.sp());
        EXPECT(0x632e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03CB
        gbc.setState(0xcbed, 0x3e6c, 0xb640, 0xdee8, 0x5f6d, 0xe7a2, 0x1, 0x0);
        gbc.writeMem(0xcbed, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3e6c, gbc.sp());
        EXPECT(0xcbef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbed));
        EXPECT(0x10, gbc.readMem(0xcbee));
        // CB 10 03CC
        gbc.setState(0xd600, 0xb7d7, 0xe550, 0x9815, 0xeb49, 0x65bb, 0x0, 0x0);
        gbc.writeMem(0xd600, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb7d7, gbc.sp());
        EXPECT(0xd602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd600));
        EXPECT(0x10, gbc.readMem(0xd601));
        // CB 10 03CD
        gbc.setState(0xba67, 0xef47, 0xead0, 0x67f1, 0xbdf1, 0x1c0d, 0x1, 0x0);
        gbc.writeMem(0xba67, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xef47, gbc.sp());
        EXPECT(0xba69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba67));
        EXPECT(0x10, gbc.readMem(0xba68));
        // CB 10 03CE
        gbc.setState(0x9c80, 0x324a, 0x7570, 0x19be, 0x4741, 0x35c3, 0x0, 0x0);
        gbc.writeMem(0x9c80, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x324a, gbc.sp());
        EXPECT(0x9c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c80));
        EXPECT(0x10, gbc.readMem(0x9c81));
        // CB 10 03CF
        gbc.setState(0x69e2, 0xf7c3, 0x7270, 0x678d, 0x4277, 0x2ca2, 0x1, 0x0);
        gbc.writeMem(0x69e2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf7c3, gbc.sp());
        EXPECT(0x69e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03D0
        gbc.setState(0xaa56, 0x7890, 0xa920, 0x20dc, 0x58c8, 0x3721, 0x1, 0x1);
        gbc.writeMem(0xaa56, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa56));
        EXPECT(0x10, gbc.readMem(0xaa57));
        // CB 10 03D1
        gbc.setState(0xd494, 0x67f6, 0x5530, 0xf614, 0xeff, 0xd875, 0x0, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd494));
        EXPECT(0x10, gbc.readMem(0xd495));
        // CB 10 03D2
        gbc.setState(0x5257, 0x3ab3, 0xd8f0, 0xffd5, 0xb023, 0x1f3, 0x1, 0x0);
        gbc.writeMem(0x5257, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3ab3, gbc.sp());
        EXPECT(0x5259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03D3
        gbc.setState(0x6a9c, 0xc945, 0x45e0, 0xbb37, 0x299d, 0x2de7, 0x0, 0x1);
        gbc.writeMem(0x6a9c, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0x6a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03D4
        gbc.setState(0xa3b, 0x22ef, 0xc210, 0xf7d0, 0x8e32, 0x4da2, 0x0, 0x0);
        gbc.writeMem(0xa3b, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x22ef, gbc.sp());
        EXPECT(0xa3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03D5
        gbc.setState(0xda60, 0x2dfe, 0xade0, 0xe457, 0x769e, 0x3fb6, 0x0, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2dfe, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x10, gbc.readMem(0xda61));
        // CB 10 03D6
        gbc.setState(0xb265, 0x7e83, 0xfd80, 0x8092, 0x4e44, 0x4aae, 0x1, 0x1);
        gbc.writeMem(0xb265, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7e83, gbc.sp());
        EXPECT(0xb267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb265));
        EXPECT(0x10, gbc.readMem(0xb266));
        // CB 10 03D7
        gbc.setState(0x8b7e, 0xb3ea, 0x1460, 0x9970, 0x6df7, 0x3bfb, 0x0, 0x1);
        gbc.writeMem(0x8b7e, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb3ea, gbc.sp());
        EXPECT(0x8b80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b7e));
        EXPECT(0x10, gbc.readMem(0x8b7f));
        // CB 10 03D8
        gbc.setState(0xd096, 0x761c, 0x3470, 0x9552, 0x1f58, 0xf17c, 0x1, 0x0);
        gbc.writeMem(0xd096, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x761c, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd096));
        EXPECT(0x10, gbc.readMem(0xd097));
        // CB 10 03D9
        gbc.setState(0x537f, 0xe040, 0x830, 0x112d, 0x1987, 0xd6bc, 0x0, 0x1);
        gbc.writeMem(0x537f, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe040, gbc.sp());
        EXPECT(0x5381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03DA
        gbc.setState(0x9a03, 0xaba9, 0x1040, 0xf12d, 0xf463, 0xb25e, 0x1, 0x1);
        gbc.writeMem(0x9a03, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xaba9, gbc.sp());
        EXPECT(0x9a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a03));
        EXPECT(0x10, gbc.readMem(0x9a04));
        // CB 10 03DB
        gbc.setState(0xd647, 0xe59b, 0x87b0, 0xaec8, 0x3678, 0x8637, 0x1, 0x0);
        gbc.writeMem(0xd647, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe59b, gbc.sp());
        EXPECT(0xd649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd647));
        EXPECT(0x10, gbc.readMem(0xd648));
        // CB 10 03DC
        gbc.setState(0x68e1, 0xe3be, 0x1e60, 0x865b, 0xa0b6, 0xf747, 0x0, 0x1);
        gbc.writeMem(0x68e1, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe3be, gbc.sp());
        EXPECT(0x68e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03DD
        gbc.setState(0xa9de, 0x1048, 0xaea0, 0xc517, 0xff98, 0xdd46, 0x0, 0x0);
        gbc.writeMem(0xa9de, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1048, gbc.sp());
        EXPECT(0xa9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9de));
        EXPECT(0x10, gbc.readMem(0xa9df));
        // CB 10 03DE
        gbc.setState(0x41a7, 0xe8ee, 0x1d0, 0x6245, 0xc0a7, 0xa4e2, 0x0, 0x1);
        gbc.writeMem(0x41a7, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0x41a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03DF
        gbc.setState(0xdf01, 0xf87a, 0x660, 0xe082, 0x193f, 0x8c75, 0x1, 0x1);
        gbc.writeMem(0xdf01, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0xdf03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf01));
        EXPECT(0x10, gbc.readMem(0xdf02));
        // CB 10 03E0
        gbc.setState(0x1d16, 0x53c0, 0xf20, 0xf59c, 0x27a4, 0x51b0, 0x0, 0x1);
        gbc.writeMem(0x1d16, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x53c0, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03E1
        gbc.setState(0x3174, 0xc9c8, 0x60e0, 0xbec0, 0x99d5, 0x44c7, 0x1, 0x0);
        gbc.writeMem(0x3174, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc9c8, gbc.sp());
        EXPECT(0x3176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03E2
        gbc.setState(0xaef2, 0xbf05, 0xc0, 0x2dfe, 0xeef7, 0xd24d, 0x1, 0x1);
        gbc.writeMem(0xaef2, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbf05, gbc.sp());
        EXPECT(0xaef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef2));
        EXPECT(0x10, gbc.readMem(0xaef3));
        // CB 10 03E3
        gbc.setState(0x5631, 0x2403, 0xfc60, 0xab67, 0xd395, 0xa6b9, 0x1, 0x1);
        gbc.writeMem(0x5631, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2403, gbc.sp());
        EXPECT(0x5633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03E4
        gbc.setState(0x7fe6, 0x6d61, 0xf080, 0x35d5, 0x9bcb, 0xdc9a, 0x1, 0x0);
        gbc.writeMem(0x7fe6, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6d61, gbc.sp());
        EXPECT(0x7fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 10 03E5
        gbc.setState(0x5446, 0x5ebf, 0x2840, 0xe5d5, 0xf36d, 0x152b, 0x0, 0x1);
        gbc.writeMem(0x5446, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0x5448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03E6
        gbc.setState(0x6f5a, 0x3711, 0xbe00, 0xe777, 0x9922, 0xefae, 0x0, 0x1);
        gbc.writeMem(0x6f5a, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3711, gbc.sp());
        EXPECT(0x6f5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 10 03E7
        gbc.setState(0x9279, 0x4395, 0xa060, 0xdea8, 0xe163, 0x4f87, 0x1, 0x1);
        gbc.writeMem(0x9279, { 0xcb, 0x10 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4395, gbc.sp());
        EXPECT(0x927b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9279));
        EXPECT(0x10, gbc.readMem(0x927a));
    }
