    TEST(gbcemu, opcode_cf) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CF 0000
        gbc.setState(0x59dd, 0xec30, 0x3180, 0xf646, 0x2899, 0x9bef, 0x0, 0x0);
        gbc.writeMem(0x59dd, { 0xcf });
        gbc.writeMem(0xec2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xec2e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2e), 0xde);
        EXPECT(gbc.readMem(0xec2f), 0x59);
        // CF 0002
        gbc.setState(0x12d0, 0xc295, 0x850, 0x883a, 0x46e3, 0xd80d, 0x1, 0x1);
        gbc.writeMem(0x12d0, { 0xcf });
        gbc.writeMem(0xc293, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc293);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc293), 0xd1);
        EXPECT(gbc.readMem(0xc294), 0x12);
        // CF 0006
        gbc.setState(0x4338, 0xaee2, 0x5590, 0x9157, 0x71e0, 0x22a2, 0x0, 0x0);
        gbc.writeMem(0x4338, { 0xcf });
        gbc.writeMem(0xaee0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaee0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee0), 0x39);
        EXPECT(gbc.readMem(0xaee1), 0x43);
        // CF 0007
        gbc.setState(0x414d, 0xa3ca, 0xb270, 0x3986, 0x10f5, 0x41e8, 0x1, 0x0);
        gbc.writeMem(0x414d, { 0xcf });
        gbc.writeMem(0xa3c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa3c8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c8), 0x4e);
        EXPECT(gbc.readMem(0xa3c9), 0x41);
        // CF 000B
        gbc.setState(0xaeec, 0xc824, 0xe120, 0xa2e3, 0xa218, 0x4ce3, 0x1, 0x1);
        gbc.writeMem(0xaeec, { 0xcf });
        gbc.writeMem(0xc822, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc822);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeec), 0xcf);
        EXPECT(gbc.readMem(0xc822), 0xed);
        EXPECT(gbc.readMem(0xc823), 0xae);
        // CF 000C
        gbc.setState(0xd553, 0xa69d, 0x9430, 0xffb5, 0x6464, 0x39d6, 0x0, 0x1);
        gbc.writeMem(0xa69b, { 0x0, 0x0 });
        gbc.writeMem(0xd553, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa69b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa69b), 0x54);
        EXPECT(gbc.readMem(0xa69c), 0xd5);
        EXPECT(gbc.readMem(0xd553), 0xcf);
        // CF 0011
        gbc.setState(0x3cba, 0xacab, 0x4880, 0x2bd8, 0xd3da, 0x5343, 0x0, 0x1);
        gbc.writeMem(0x3cba, { 0xcf });
        gbc.writeMem(0xaca9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xaca9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca9), 0xbb);
        EXPECT(gbc.readMem(0xacaa), 0x3c);
        // CF 0016
        gbc.setState(0xaf46, 0x9f20, 0xcfc0, 0x26eb, 0xa6c, 0x95f5, 0x0, 0x0);
        gbc.writeMem(0x9f1e, { 0x0, 0x0 });
        gbc.writeMem(0xaf46, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9f1e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1e), 0x47);
        EXPECT(gbc.readMem(0x9f1f), 0xaf);
        EXPECT(gbc.readMem(0xaf46), 0xcf);
        // CF 0018
        gbc.setState(0xed48, 0x89af, 0x6300, 0x4295, 0xff75, 0x5e22, 0x1, 0x1);
        gbc.writeMem(0x89ad, { 0x0, 0x0 });
        gbc.writeMem(0xed48, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x89ad);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ad), 0x49);
        EXPECT(gbc.readMem(0x89ae), 0xed);
        EXPECT(gbc.readMem(0xed48), 0xcf);
        // CF 001B
        gbc.setState(0x28c4, 0xd84d, 0x62f0, 0x30be, 0xed83, 0x884e, 0x1, 0x0);
        gbc.writeMem(0x28c4, { 0xcf });
        gbc.writeMem(0xd84b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd84b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84b), 0xc5);
        EXPECT(gbc.readMem(0xd84c), 0x28);
        // CF 001C
        gbc.setState(0x3e1e, 0xc927, 0xd3c0, 0xab25, 0x48d7, 0xc2e3, 0x1, 0x1);
        gbc.writeMem(0x3e1e, { 0xcf });
        gbc.writeMem(0xc925, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xc925);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc925), 0x1f);
        EXPECT(gbc.readMem(0xc926), 0x3e);
        // CF 001E
        gbc.setState(0x2930, 0xebe7, 0xc70, 0xe43a, 0x443a, 0xe8cf, 0x1, 0x1);
        gbc.writeMem(0x2930, { 0xcf });
        gbc.writeMem(0xebe5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xebe5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe5), 0x31);
        EXPECT(gbc.readMem(0xebe6), 0x29);
        // CF 0025
        gbc.setState(0xd3b1, 0xf063, 0xa20, 0x5725, 0xfa77, 0x52bb, 0x0, 0x0);
        gbc.writeMem(0xd3b1, { 0xcf });
        gbc.writeMem(0xf061, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf061);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3b1), 0xcf);
        EXPECT(gbc.readMem(0xf061), 0xb2);
        EXPECT(gbc.readMem(0xf062), 0xd3);
        // CF 0026
        gbc.setState(0x9282, 0xdd2c, 0x7d50, 0xff6a, 0x37ea, 0xe983, 0x0, 0x0);
        gbc.writeMem(0x9282, { 0xcf });
        gbc.writeMem(0xdd2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdd2a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9282), 0xcf);
        EXPECT(gbc.readMem(0xdd2a), 0x83);
        EXPECT(gbc.readMem(0xdd2b), 0x92);
        // CF 0027
        gbc.setState(0x95d4, 0xae1c, 0x1900, 0xd47f, 0x78ec, 0x7cee, 0x0, 0x1);
        gbc.writeMem(0x95d4, { 0xcf });
        gbc.writeMem(0xae1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xae1a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95d4), 0xcf);
        EXPECT(gbc.readMem(0xae1a), 0xd5);
        EXPECT(gbc.readMem(0xae1b), 0x95);
        // CF 0028
        gbc.setState(0x5ce1, 0x8e69, 0xb3e0, 0x2b39, 0xd102, 0xd628, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0xcf });
        gbc.writeMem(0x8e67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8e67);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e67), 0xe2);
        EXPECT(gbc.readMem(0x8e68), 0x5c);
        // CF 0029
        gbc.setState(0x99f1, 0xe093, 0x5980, 0xf2b5, 0x58cd, 0xc3e5, 0x1, 0x0);
        gbc.writeMem(0x99f1, { 0xcf });
        gbc.writeMem(0xe091, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe091);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f1), 0xcf);
        EXPECT(gbc.readMem(0xe091), 0xf2);
        EXPECT(gbc.readMem(0xe092), 0x99);
        // CF 002A
        gbc.setState(0xa4d8, 0x8729, 0x59b0, 0x92ec, 0xeb99, 0x9fbf, 0x0, 0x0);
        gbc.writeMem(0x8727, { 0x0, 0x0 });
        gbc.writeMem(0xa4d8, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8727);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8727), 0xd9);
        EXPECT(gbc.readMem(0x8728), 0xa4);
        EXPECT(gbc.readMem(0xa4d8), 0xcf);
        // CF 002C
        gbc.setState(0x8f0e, 0xc036, 0x8db0, 0xc2ef, 0x480e, 0xb282, 0x1, 0x0);
        gbc.writeMem(0x8f0e, { 0xcf });
        gbc.writeMem(0xc034, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc034);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f0e), 0xcf);
        EXPECT(gbc.readMem(0xc034), 0xf);
        EXPECT(gbc.readMem(0xc035), 0x8f);
        // CF 002E
        gbc.setState(0x25ad, 0xb966, 0xdcd0, 0x78db, 0x9570, 0x399e, 0x0, 0x1);
        gbc.writeMem(0x25ad, { 0xcf });
        gbc.writeMem(0xb964, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb964);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb964), 0xae);
        EXPECT(gbc.readMem(0xb965), 0x25);
        // CF 002F
        gbc.setState(0xe572, 0xdd06, 0x9620, 0x8901, 0x48d4, 0x3d63, 0x1, 0x1);
        gbc.writeMem(0xdd04, { 0x0, 0x0 });
        gbc.writeMem(0xe572, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdd04);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd04), 0x73);
        EXPECT(gbc.readMem(0xdd05), 0xe5);
        EXPECT(gbc.readMem(0xe572), 0xcf);
        // CF 0030
        gbc.setState(0x484b, 0xf1f4, 0x77b0, 0xee33, 0x2b7c, 0x2fcb, 0x0, 0x1);
        gbc.writeMem(0x484b, { 0xcf });
        gbc.writeMem(0xf1f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf1f2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf1f2), 0x4c);
        EXPECT(gbc.readMem(0xf1f3), 0x48);
        // CF 0032
        gbc.setState(0x5518, 0xff7e, 0xeb30, 0x7a04, 0x32d9, 0xb7bb, 0x1, 0x1);
        gbc.writeMem(0x5518, { 0xcf });
        gbc.writeMem(0xff7c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xff7c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff7c), 0x19);
        EXPECT(gbc.readMem(0xff7d), 0x55);
        // CF 0034
        gbc.setState(0x192e, 0xbe08, 0x67a0, 0x3971, 0x31db, 0x482c, 0x0, 0x0);
        gbc.writeMem(0x192e, { 0xcf });
        gbc.writeMem(0xbe06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbe06);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe06), 0x2f);
        EXPECT(gbc.readMem(0xbe07), 0x19);
        // CF 0037
        gbc.setState(0x750c, 0xe8e0, 0xce70, 0x8eb5, 0x26c2, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0x750c, { 0xcf });
        gbc.writeMem(0xe8de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe8de);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8de), 0xd);
        EXPECT(gbc.readMem(0xe8df), 0x75);
        // CF 003C
        gbc.setState(0x2c8c, 0xb023, 0x10f0, 0x4ba, 0x4c2a, 0x359c, 0x1, 0x1);
        gbc.writeMem(0x2c8c, { 0xcf });
        gbc.writeMem(0xb021, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb021);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb021), 0x8d);
        EXPECT(gbc.readMem(0xb022), 0x2c);
        // CF 003D
        gbc.setState(0x4903, 0xfe8c, 0x10, 0x7845, 0xfad3, 0xdb11, 0x0, 0x0);
        gbc.writeMem(0x4903, { 0xcf });
        gbc.writeMem(0xfe8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfe8a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe8a), 0x4);
        EXPECT(gbc.readMem(0xfe8b), 0x49);
        // CF 003E
        gbc.setState(0xc13, 0xfce8, 0x480, 0xd2b0, 0x8c90, 0xffac, 0x0, 0x0);
        gbc.writeMem(0xc13, { 0xcf });
        gbc.writeMem(0xfce6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xfce6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfce6), 0x14);
        EXPECT(gbc.readMem(0xfce7), 0xc);
        // CF 003F
        gbc.setState(0x77b3, 0xd5fa, 0x1350, 0x27a9, 0x25dd, 0x16bd, 0x0, 0x0);
        gbc.writeMem(0x77b3, { 0xcf });
        gbc.writeMem(0xd5f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd5f8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f8), 0xb4);
        EXPECT(gbc.readMem(0xd5f9), 0x77);
        // CF 0040
        gbc.setState(0x4e94, 0xd9d9, 0x25b0, 0xa03a, 0xa7b0, 0xdc19, 0x1, 0x1);
        gbc.writeMem(0x4e94, { 0xcf });
        gbc.writeMem(0xd9d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd9d7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d7), 0x95);
        EXPECT(gbc.readMem(0xd9d8), 0x4e);
        // CF 0041
        gbc.setState(0x3f37, 0x8eb9, 0xce60, 0x86ac, 0x6e5c, 0xf149, 0x0, 0x0);
        gbc.writeMem(0x3f37, { 0xcf });
        gbc.writeMem(0x8eb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8eb7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb7), 0x38);
        EXPECT(gbc.readMem(0x8eb8), 0x3f);
        // CF 0043
        gbc.setState(0x302, 0x82e2, 0x4d30, 0x546d, 0x956, 0xfb69, 0x1, 0x1);
        gbc.writeMem(0x302, { 0xcf });
        gbc.writeMem(0x82e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x82e0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e0), 0x3);
        EXPECT(gbc.readMem(0x82e1), 0x3);
        // CF 0044
        gbc.setState(0x8fa2, 0xe766, 0xb8f0, 0xcee3, 0xfd3c, 0x8bd7, 0x1, 0x0);
        gbc.writeMem(0x8fa2, { 0xcf });
        gbc.writeMem(0xe764, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe764);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa2), 0xcf);
        EXPECT(gbc.readMem(0xe764), 0xa3);
        EXPECT(gbc.readMem(0xe765), 0x8f);
        // CF 0045
        gbc.setState(0x4c39, 0xb5cf, 0xd380, 0xc9d7, 0x4285, 0xdd72, 0x1, 0x0);
        gbc.writeMem(0x4c39, { 0xcf });
        gbc.writeMem(0xb5cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb5cd);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5cd), 0x3a);
        EXPECT(gbc.readMem(0xb5ce), 0x4c);
        // CF 004A
        gbc.setState(0x5ad1, 0xd504, 0x8ee0, 0xce29, 0xb957, 0x7dcb, 0x1, 0x0);
        gbc.writeMem(0x5ad1, { 0xcf });
        gbc.writeMem(0xd502, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd502);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd502), 0xd2);
        EXPECT(gbc.readMem(0xd503), 0x5a);
        // CF 004B
        gbc.setState(0x96ea, 0x99a2, 0xf6c0, 0xad4a, 0x89c4, 0x66f0, 0x0, 0x0);
        gbc.writeMem(0x96ea, { 0xcf });
        gbc.writeMem(0x99a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x99a0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ea), 0xcf);
        EXPECT(gbc.readMem(0x99a0), 0xeb);
        EXPECT(gbc.readMem(0x99a1), 0x96);
        // CF 004C
        gbc.setState(0xbf9f, 0xe963, 0x4290, 0x23ca, 0x54b0, 0x7b57, 0x0, 0x1);
        gbc.writeMem(0xbf9f, { 0xcf });
        gbc.writeMem(0xe961, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe961);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf9f), 0xcf);
        EXPECT(gbc.readMem(0xe961), 0xa0);
        EXPECT(gbc.readMem(0xe962), 0xbf);
        // CF 0050
        gbc.setState(0xdf99, 0xee39, 0xd650, 0x233c, 0xb26, 0x9d2c, 0x0, 0x1);
        gbc.writeMem(0xdf99, { 0xcf });
        gbc.writeMem(0xee37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xee37);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf99), 0xcf);
        EXPECT(gbc.readMem(0xee37), 0x9a);
        EXPECT(gbc.readMem(0xee38), 0xdf);
        // CF 0053
        gbc.setState(0xafad, 0xdca5, 0xa9c0, 0xc9b7, 0x4512, 0x8dc0, 0x1, 0x0);
        gbc.writeMem(0xafad, { 0xcf });
        gbc.writeMem(0xdca3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdca3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafad), 0xcf);
        EXPECT(gbc.readMem(0xdca3), 0xae);
        EXPECT(gbc.readMem(0xdca4), 0xaf);
        // CF 0056
        gbc.setState(0x54cf, 0x99d1, 0x4980, 0x498c, 0x64af, 0xf97b, 0x1, 0x0);
        gbc.writeMem(0x54cf, { 0xcf });
        gbc.writeMem(0x99cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x99cf);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99cf), 0xd0);
        EXPECT(gbc.readMem(0x99d0), 0x54);
        // CF 0057
        gbc.setState(0x1817, 0x9b5b, 0x4a0, 0xcba1, 0x571c, 0x190b, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcf });
        gbc.writeMem(0x9b59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9b59);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b59), 0x18);
        EXPECT(gbc.readMem(0x9b5a), 0x18);
        // CF 0058
        gbc.setState(0xdfa4, 0x8015, 0xdf90, 0xf3e4, 0x1f13, 0x3a98, 0x1, 0x1);
        gbc.writeMem(0x8013, { 0x0, 0x0 });
        gbc.writeMem(0xdfa4, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8013);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8013), 0xa5);
        EXPECT(gbc.readMem(0x8014), 0xdf);
        EXPECT(gbc.readMem(0xdfa4), 0xcf);
        // CF 0059
        gbc.setState(0x80d1, 0xaa88, 0x5370, 0xfe7c, 0x3095, 0xda05, 0x1, 0x0);
        gbc.writeMem(0x80d1, { 0xcf });
        gbc.writeMem(0xaa86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xaa86);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d1), 0xcf);
        EXPECT(gbc.readMem(0xaa86), 0xd2);
        EXPECT(gbc.readMem(0xaa87), 0x80);
        // CF 005A
        gbc.setState(0x815b, 0x871a, 0xd130, 0x81a1, 0xfb69, 0x99e4, 0x0, 0x0);
        gbc.writeMem(0x815b, { 0xcf });
        gbc.writeMem(0x8718, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815b), 0xcf);
        EXPECT(gbc.readMem(0x8718), 0x5c);
        EXPECT(gbc.readMem(0x8719), 0x81);
        // CF 005B
        gbc.setState(0xcbf0, 0xf315, 0xbcb0, 0x8192, 0x9c14, 0x5d2e, 0x1, 0x1);
        gbc.writeMem(0xcbf0, { 0xcf });
        gbc.writeMem(0xf313, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf313);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbf0), 0xcf);
        EXPECT(gbc.readMem(0xf313), 0xf1);
        EXPECT(gbc.readMem(0xf314), 0xcb);
        // CF 005C
        gbc.setState(0xeee6, 0x84c9, 0x6100, 0x98b, 0xa845, 0x934a, 0x1, 0x1);
        gbc.writeMem(0x84c7, { 0x0, 0x0 });
        gbc.writeMem(0xeee6, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x84c7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c7), 0xe7);
        EXPECT(gbc.readMem(0x84c8), 0xee);
        EXPECT(gbc.readMem(0xeee6), 0xcf);
        // CF 005D
        gbc.setState(0x804, 0x91f3, 0x3120, 0x16d1, 0xa8eb, 0xdd23, 0x1, 0x0);
        gbc.writeMem(0x804, { 0xcf });
        gbc.writeMem(0x91f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x91f1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f1), 0x5);
        EXPECT(gbc.readMem(0x91f2), 0x8);
        // CF 005F
        gbc.setState(0xb36f, 0xbe62, 0x8dd0, 0x835b, 0xeb3d, 0x5b45, 0x1, 0x1);
        gbc.writeMem(0xb36f, { 0xcf });
        gbc.writeMem(0xbe60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xbe60);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb36f), 0xcf);
        EXPECT(gbc.readMem(0xbe60), 0x70);
        EXPECT(gbc.readMem(0xbe61), 0xb3);
        // CF 0061
        gbc.setState(0x73dc, 0xa8ed, 0xc210, 0x24d0, 0x8100, 0xed, 0x0, 0x1);
        gbc.writeMem(0x73dc, { 0xcf });
        gbc.writeMem(0xa8eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa8eb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8eb), 0xdd);
        EXPECT(gbc.readMem(0xa8ec), 0x73);
        // CF 0063
        gbc.setState(0xa67b, 0xfa53, 0x87b0, 0xf734, 0x4cb0, 0x2d48, 0x1, 0x0);
        gbc.writeMem(0xa67b, { 0xcf });
        gbc.writeMem(0xfa51, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfa51);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67b), 0xcf);
        EXPECT(gbc.readMem(0xfa51), 0x7c);
        EXPECT(gbc.readMem(0xfa52), 0xa6);
        // CF 0066
        gbc.setState(0x7056, 0xb300, 0x7aa0, 0x33bf, 0xc878, 0x9037, 0x0, 0x1);
        gbc.writeMem(0x7056, { 0xcf });
        gbc.writeMem(0xb2fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb2fe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2fe), 0x57);
        EXPECT(gbc.readMem(0xb2ff), 0x70);
        // CF 0068
        gbc.setState(0x356, 0x96fa, 0x9990, 0xb82c, 0x464e, 0x3e0c, 0x0, 0x1);
        gbc.writeMem(0x356, { 0xcf });
        gbc.writeMem(0x96f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x96f8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f8), 0x57);
        EXPECT(gbc.readMem(0x96f9), 0x3);
        // CF 0069
        gbc.setState(0xc2b3, 0xe5a5, 0x2c70, 0xcb06, 0xbea5, 0x361d, 0x1, 0x0);
        gbc.writeMem(0xc2b3, { 0xcf });
        gbc.writeMem(0xe5a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe5a3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b3), 0xcf);
        EXPECT(gbc.readMem(0xe5a3), 0xb4);
        EXPECT(gbc.readMem(0xe5a4), 0xc2);
        // CF 006A
        gbc.setState(0xc13e, 0xce98, 0x2fa0, 0xd813, 0x32b1, 0xf80e, 0x0, 0x1);
        gbc.writeMem(0xc13e, { 0xcf });
        gbc.writeMem(0xce96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xce96);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc13e), 0xcf);
        EXPECT(gbc.readMem(0xce96), 0x3f);
        EXPECT(gbc.readMem(0xce97), 0xc1);
        // CF 006B
        gbc.setState(0x3503, 0xc492, 0x770, 0x866, 0xfef7, 0x72c6, 0x0, 0x1);
        gbc.writeMem(0x3503, { 0xcf });
        gbc.writeMem(0xc490, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc490);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc490), 0x4);
        EXPECT(gbc.readMem(0xc491), 0x35);
        // CF 006C
        gbc.setState(0xabfb, 0xb67a, 0x8a50, 0xb320, 0x61f9, 0xecd0, 0x0, 0x1);
        gbc.writeMem(0xabfb, { 0xcf });
        gbc.writeMem(0xb678, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb678);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfb), 0xcf);
        EXPECT(gbc.readMem(0xb678), 0xfc);
        EXPECT(gbc.readMem(0xb679), 0xab);
        // CF 006D
        gbc.setState(0x781b, 0x9492, 0xee20, 0xc07a, 0x7a02, 0xf7b8, 0x0, 0x0);
        gbc.writeMem(0x781b, { 0xcf });
        gbc.writeMem(0x9490, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9490);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9490), 0x1c);
        EXPECT(gbc.readMem(0x9491), 0x78);
        // CF 0075
        gbc.setState(0xe24b, 0xb3eb, 0x7f00, 0x1dd1, 0xea8b, 0x518d, 0x0, 0x0);
        gbc.writeMem(0xb3e9, { 0x0, 0x0 });
        gbc.writeMem(0xe24b, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb3e9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3e9), 0x4c);
        EXPECT(gbc.readMem(0xb3ea), 0xe2);
        EXPECT(gbc.readMem(0xe24b), 0xcf);
        // CF 0076
        gbc.setState(0xb4a4, 0xf6b7, 0x9c90, 0xb81d, 0x6964, 0x3fd7, 0x1, 0x1);
        gbc.writeMem(0xb4a4, { 0xcf });
        gbc.writeMem(0xf6b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf6b5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a4), 0xcf);
        EXPECT(gbc.readMem(0xf6b5), 0xa5);
        EXPECT(gbc.readMem(0xf6b6), 0xb4);
        // CF 0077
        gbc.setState(0xeb06, 0xc425, 0x8ac0, 0xc3ac, 0x7869, 0x7a3c, 0x1, 0x1);
        gbc.writeMem(0xc423, { 0x0, 0x0 });
        gbc.writeMem(0xeb06, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc423);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc423), 0x7);
        EXPECT(gbc.readMem(0xc424), 0xeb);
        EXPECT(gbc.readMem(0xeb06), 0xcf);
        // CF 007C
        gbc.setState(0x48d0, 0xfcfe, 0xe740, 0x1ec0, 0x5bad, 0x1937, 0x0, 0x0);
        gbc.writeMem(0x48d0, { 0xcf });
        gbc.writeMem(0xfcfc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfcfc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcfc), 0xd1);
        EXPECT(gbc.readMem(0xfcfd), 0x48);
        // CF 007E
        gbc.setState(0x8d1c, 0x9253, 0x220, 0xb8da, 0xf230, 0x507, 0x1, 0x0);
        gbc.writeMem(0x8d1c, { 0xcf });
        gbc.writeMem(0x9251, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9251);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1c), 0xcf);
        EXPECT(gbc.readMem(0x9251), 0x1d);
        EXPECT(gbc.readMem(0x9252), 0x8d);
        // CF 0084
        gbc.setState(0x7fe4, 0xfd9e, 0x6a20, 0x75a9, 0x8589, 0xbd58, 0x0, 0x1);
        gbc.writeMem(0x7fe4, { 0xcf });
        gbc.writeMem(0xfd9c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfd9c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfd9c), 0xe5);
        EXPECT(gbc.readMem(0xfd9d), 0x7f);
        // CF 0085
        gbc.setState(0x102e, 0xf13b, 0xca60, 0x54e4, 0x4b89, 0xfbc4, 0x1, 0x1);
        gbc.writeMem(0x102e, { 0xcf });
        gbc.writeMem(0xf139, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf139);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf139), 0x2f);
        EXPECT(gbc.readMem(0xf13a), 0x10);
        // CF 0087
        gbc.setState(0xaef0, 0x9525, 0x4870, 0x59f2, 0xdcd6, 0x8991, 0x1, 0x1);
        gbc.writeMem(0x9523, { 0x0, 0x0 });
        gbc.writeMem(0xaef0, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9523);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9523), 0xf1);
        EXPECT(gbc.readMem(0x9524), 0xae);
        EXPECT(gbc.readMem(0xaef0), 0xcf);
        // CF 0088
        gbc.setState(0xb91e, 0xfcf9, 0xb120, 0xdcaf, 0x1d97, 0x98ff, 0x1, 0x1);
        gbc.writeMem(0xb91e, { 0xcf });
        gbc.writeMem(0xfcf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfcf7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb91e), 0xcf);
        EXPECT(gbc.readMem(0xfcf7), 0x1f);
        EXPECT(gbc.readMem(0xfcf8), 0xb9);
        // CF 008B
        gbc.setState(0xcaad, 0xc5ed, 0x9250, 0xd30f, 0x122a, 0x9c0f, 0x0, 0x0);
        gbc.writeMem(0xc5eb, { 0x0, 0x0 });
        gbc.writeMem(0xcaad, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc5eb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5eb), 0xae);
        EXPECT(gbc.readMem(0xc5ec), 0xca);
        EXPECT(gbc.readMem(0xcaad), 0xcf);
        // CF 008C
        gbc.setState(0x148a, 0x82f9, 0xdd00, 0xefc1, 0xe5d2, 0xb1d7, 0x0, 0x0);
        gbc.writeMem(0x148a, { 0xcf });
        gbc.writeMem(0x82f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x82f7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f7), 0x8b);
        EXPECT(gbc.readMem(0x82f8), 0x14);
        // CF 0093
        gbc.setState(0x7b3d, 0xb9cb, 0x9df0, 0x7c2b, 0x9a84, 0x3450, 0x0, 0x1);
        gbc.writeMem(0x7b3d, { 0xcf });
        gbc.writeMem(0xb9c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb9c9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c9), 0x3e);
        EXPECT(gbc.readMem(0xb9ca), 0x7b);
        // CF 0094
        gbc.setState(0xbadd, 0xb7a0, 0xd200, 0x6db3, 0xdf9e, 0x711d, 0x0, 0x1);
        gbc.writeMem(0xb79e, { 0x0, 0x0 });
        gbc.writeMem(0xbadd, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb79e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79e), 0xde);
        EXPECT(gbc.readMem(0xb79f), 0xba);
        EXPECT(gbc.readMem(0xbadd), 0xcf);
        // CF 0096
        gbc.setState(0x3330, 0xb372, 0x9090, 0xf7fd, 0xc4ec, 0xc6ab, 0x1, 0x1);
        gbc.writeMem(0x3330, { 0xcf });
        gbc.writeMem(0xb370, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb370);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb370), 0x31);
        EXPECT(gbc.readMem(0xb371), 0x33);
        // CF 0097
        gbc.setState(0xce9, 0xb7b2, 0x72f0, 0xc674, 0x5b9b, 0xd2c3, 0x1, 0x0);
        gbc.writeMem(0xce9, { 0xcf });
        gbc.writeMem(0xb7b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb7b0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b0), 0xea);
        EXPECT(gbc.readMem(0xb7b1), 0xc);
        // CF 0098
        gbc.setState(0xdb1, 0x8b9a, 0x16b0, 0x8bf8, 0x6422, 0x8311, 0x1, 0x1);
        gbc.writeMem(0xdb1, { 0xcf });
        gbc.writeMem(0x8b98, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x8b98);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b98), 0xb2);
        EXPECT(gbc.readMem(0x8b99), 0xd);
        // CF 009C
        gbc.setState(0xea32, 0xb798, 0xa530, 0x1bbb, 0x65e6, 0xdf48, 0x1, 0x0);
        gbc.writeMem(0xb796, { 0x0, 0x0 });
        gbc.writeMem(0xea32, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb796);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb796), 0x33);
        EXPECT(gbc.readMem(0xb797), 0xea);
        EXPECT(gbc.readMem(0xea32), 0xcf);
        // CF 009E
        gbc.setState(0x444b, 0x9882, 0x3f90, 0x9ac, 0x206f, 0x947d, 0x0, 0x1);
        gbc.writeMem(0x444b, { 0xcf });
        gbc.writeMem(0x9880, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x9880);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9880), 0x4c);
        EXPECT(gbc.readMem(0x9881), 0x44);
        // CF 00A0
        gbc.setState(0x9351, 0xc2d5, 0x8a90, 0x72a2, 0x745a, 0x98fb, 0x1, 0x1);
        gbc.writeMem(0x9351, { 0xcf });
        gbc.writeMem(0xc2d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc2d3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9351), 0xcf);
        EXPECT(gbc.readMem(0xc2d3), 0x52);
        EXPECT(gbc.readMem(0xc2d4), 0x93);
        // CF 00A1
        gbc.setState(0x6741, 0xd764, 0xdc40, 0x6741, 0x2c8b, 0x1efa, 0x0, 0x1);
        gbc.writeMem(0x6741, { 0xcf });
        gbc.writeMem(0xd762, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd762);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd762), 0x42);
        EXPECT(gbc.readMem(0xd763), 0x67);
        // CF 00A2
        gbc.setState(0x5931, 0xa184, 0x9be0, 0xe8eb, 0x6b0f, 0xc9f2, 0x1, 0x0);
        gbc.writeMem(0x5931, { 0xcf });
        gbc.writeMem(0xa182, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa182);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa182), 0x32);
        EXPECT(gbc.readMem(0xa183), 0x59);
        // CF 00A4
        gbc.setState(0x27dd, 0xc654, 0x1a70, 0x3cf1, 0x7895, 0xa34c, 0x1, 0x0);
        gbc.writeMem(0x27dd, { 0xcf });
        gbc.writeMem(0xc652, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xc652);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc652), 0xde);
        EXPECT(gbc.readMem(0xc653), 0x27);
        // CF 00A6
        gbc.setState(0x20b2, 0xd96e, 0x7850, 0x229, 0x8f69, 0xe5f, 0x1, 0x1);
        gbc.writeMem(0x20b2, { 0xcf });
        gbc.writeMem(0xd96c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd96c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96c), 0xb3);
        EXPECT(gbc.readMem(0xd96d), 0x20);
        // CF 00A8
        gbc.setState(0x9e24, 0xe75f, 0x1b80, 0x4334, 0x9d86, 0x403d, 0x0, 0x0);
        gbc.writeMem(0x9e24, { 0xcf });
        gbc.writeMem(0xe75d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe75d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e24), 0xcf);
        EXPECT(gbc.readMem(0xe75d), 0x25);
        EXPECT(gbc.readMem(0xe75e), 0x9e);
        // CF 00A9
        gbc.setState(0xe6ea, 0xc16f, 0xe300, 0xe199, 0xffd5, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0xc16d, { 0x0, 0x0 });
        gbc.writeMem(0xe6ea, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc16d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16d), 0xeb);
        EXPECT(gbc.readMem(0xc16e), 0xe6);
        EXPECT(gbc.readMem(0xe6ea), 0xcf);
        // CF 00AA
        gbc.setState(0x451, 0xd5fa, 0x5db0, 0xafab, 0xf19c, 0xeef7, 0x0, 0x0);
        gbc.writeMem(0x451, { 0xcf });
        gbc.writeMem(0xd5f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd5f8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f8), 0x52);
        EXPECT(gbc.readMem(0xd5f9), 0x4);
        // CF 00AB
        gbc.setState(0x7846, 0x89a3, 0xb640, 0x5899, 0x22b6, 0xa2c2, 0x0, 0x1);
        gbc.writeMem(0x7846, { 0xcf });
        gbc.writeMem(0x89a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x89a1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a1), 0x47);
        EXPECT(gbc.readMem(0x89a2), 0x78);
        // CF 00AC
        gbc.setState(0xb606, 0x9eb9, 0x5730, 0xa646, 0xccdc, 0x8447, 0x1, 0x0);
        gbc.writeMem(0x9eb7, { 0x0, 0x0 });
        gbc.writeMem(0xb606, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9eb7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb7), 0x7);
        EXPECT(gbc.readMem(0x9eb8), 0xb6);
        EXPECT(gbc.readMem(0xb606), 0xcf);
        // CF 00AD
        gbc.setState(0x80a0, 0xbfbb, 0xee20, 0x8552, 0x76a3, 0xe310, 0x1, 0x0);
        gbc.writeMem(0x80a0, { 0xcf });
        gbc.writeMem(0xbfb9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a0), 0xcf);
        EXPECT(gbc.readMem(0xbfb9), 0xa1);
        EXPECT(gbc.readMem(0xbfba), 0x80);
        // CF 00AE
        gbc.setState(0xa1b7, 0xcb95, 0x84f0, 0x8b39, 0xe0af, 0x26b0, 0x0, 0x0);
        gbc.writeMem(0xa1b7, { 0xcf });
        gbc.writeMem(0xcb93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcb93);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b7), 0xcf);
        EXPECT(gbc.readMem(0xcb93), 0xb8);
        EXPECT(gbc.readMem(0xcb94), 0xa1);
        // CF 00B0
        gbc.setState(0x5474, 0xc43f, 0xde0, 0x72e9, 0x1c7c, 0xe6e, 0x0, 0x1);
        gbc.writeMem(0x5474, { 0xcf });
        gbc.writeMem(0xc43d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc43d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc43d), 0x75);
        EXPECT(gbc.readMem(0xc43e), 0x54);
        // CF 00B1
        gbc.setState(0x671f, 0x9d3d, 0xf0a0, 0xf69e, 0xad9, 0x85aa, 0x1, 0x0);
        gbc.writeMem(0x671f, { 0xcf });
        gbc.writeMem(0x9d3b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9d3b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d3b), 0x20);
        EXPECT(gbc.readMem(0x9d3c), 0x67);
        // CF 00B2
        gbc.setState(0x14de, 0xe822, 0xc5d0, 0x1ab0, 0x6179, 0x3a76, 0x1, 0x0);
        gbc.writeMem(0x14de, { 0xcf });
        gbc.writeMem(0xe820, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe820);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe820), 0xdf);
        EXPECT(gbc.readMem(0xe821), 0x14);
        // CF 00B4
        gbc.setState(0x143f, 0x8c00, 0x43c0, 0x4267, 0xddb4, 0x1b09, 0x0, 0x1);
        gbc.writeMem(0x143f, { 0xcf });
        gbc.writeMem(0x8bfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8bfe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfe), 0x40);
        EXPECT(gbc.readMem(0x8bff), 0x14);
        // CF 00B5
        gbc.setState(0xc27c, 0x9b64, 0x9490, 0xe710, 0x1b7a, 0xcdb9, 0x1, 0x1);
        gbc.writeMem(0x9b62, { 0x0, 0x0 });
        gbc.writeMem(0xc27c, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9b62);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b62), 0x7d);
        EXPECT(gbc.readMem(0x9b63), 0xc2);
        EXPECT(gbc.readMem(0xc27c), 0xcf);
        // CF 00B6
        gbc.setState(0x5985, 0xeb3c, 0xe8f0, 0x3349, 0x60ee, 0x6c5, 0x0, 0x0);
        gbc.writeMem(0x5985, { 0xcf });
        gbc.writeMem(0xeb3a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xeb3a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3a), 0x86);
        EXPECT(gbc.readMem(0xeb3b), 0x59);
        // CF 00B7
        gbc.setState(0x397c, 0x9d94, 0x3950, 0xbeea, 0x1516, 0x6fa3, 0x0, 0x1);
        gbc.writeMem(0x397c, { 0xcf });
        gbc.writeMem(0x9d92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9d92);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d92), 0x7d);
        EXPECT(gbc.readMem(0x9d93), 0x39);
        // CF 00B9
        gbc.setState(0x1227, 0xd2c6, 0x8b40, 0x9cff, 0x6d79, 0x8f2, 0x1, 0x0);
        gbc.writeMem(0x1227, { 0xcf });
        gbc.writeMem(0xd2c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd2c4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c4), 0x28);
        EXPECT(gbc.readMem(0xd2c5), 0x12);
        // CF 00BD
        gbc.setState(0xa157, 0x91f9, 0xf220, 0x2f41, 0x1e9f, 0xfbec, 0x1, 0x0);
        gbc.writeMem(0x91f7, { 0x0, 0x0 });
        gbc.writeMem(0xa157, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x91f7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f7), 0x58);
        EXPECT(gbc.readMem(0x91f8), 0xa1);
        EXPECT(gbc.readMem(0xa157), 0xcf);
        // CF 00BE
        gbc.setState(0xe84c, 0x9d3d, 0x5150, 0x28c9, 0xe028, 0x3669, 0x0, 0x0);
        gbc.writeMem(0x9d3b, { 0x0, 0x0 });
        gbc.writeMem(0xe84c, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9d3b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d3b), 0x4d);
        EXPECT(gbc.readMem(0x9d3c), 0xe8);
        EXPECT(gbc.readMem(0xe84c), 0xcf);
        // CF 00C0
        gbc.setState(0xc5e9, 0xe7c2, 0xb260, 0x7183, 0x83f8, 0x88aa, 0x1, 0x1);
        gbc.writeMem(0xc5e9, { 0xcf });
        gbc.writeMem(0xe7c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe7c0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5e9), 0xcf);
        EXPECT(gbc.readMem(0xe7c0), 0xea);
        EXPECT(gbc.readMem(0xe7c1), 0xc5);
        // CF 00C2
        gbc.setState(0xc553, 0x8f15, 0xd2b0, 0xb976, 0x6525, 0x5f35, 0x0, 0x0);
        gbc.writeMem(0x8f13, { 0x0, 0x0 });
        gbc.writeMem(0xc553, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8f13);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f13), 0x54);
        EXPECT(gbc.readMem(0x8f14), 0xc5);
        EXPECT(gbc.readMem(0xc553), 0xcf);
        // CF 00C4
        gbc.setState(0x4e4e, 0xe031, 0xb420, 0x8fde, 0x601d, 0x2742, 0x1, 0x1);
        gbc.writeMem(0x4e4e, { 0xcf });
        gbc.writeMem(0xe02f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe02f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe02f), 0x4f);
        EXPECT(gbc.readMem(0xe030), 0x4e);
        // CF 00C5
        gbc.setState(0x2d9b, 0xc720, 0x90b0, 0x3bc6, 0x9fb9, 0xbaed, 0x1, 0x0);
        gbc.writeMem(0x2d9b, { 0xcf });
        gbc.writeMem(0xc71e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc71e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc71e), 0x9c);
        EXPECT(gbc.readMem(0xc71f), 0x2d);
        // CF 00C6
        gbc.setState(0xc23b, 0xf02c, 0xb770, 0xf819, 0xccf1, 0x328a, 0x0, 0x1);
        gbc.writeMem(0xc23b, { 0xcf });
        gbc.writeMem(0xf02a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf02a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23b), 0xcf);
        EXPECT(gbc.readMem(0xf02a), 0x3c);
        EXPECT(gbc.readMem(0xf02b), 0xc2);
        // CF 00C7
        gbc.setState(0x7344, 0xb59f, 0x90a0, 0x18e5, 0x88ec, 0xab22, 0x1, 0x1);
        gbc.writeMem(0x7344, { 0xcf });
        gbc.writeMem(0xb59d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb59d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb59d), 0x45);
        EXPECT(gbc.readMem(0xb59e), 0x73);
        // CF 00CA
        gbc.setState(0x2d13, 0xf9ce, 0xf60, 0x1922, 0x7b86, 0x3471, 0x0, 0x0);
        gbc.writeMem(0x2d13, { 0xcf });
        gbc.writeMem(0xf9cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf9cc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf9cc), 0x14);
        EXPECT(gbc.readMem(0xf9cd), 0x2d);
        // CF 00CB
        gbc.setState(0x34b0, 0xfc90, 0x31d0, 0xe08d, 0xe68d, 0x66df, 0x1, 0x1);
        gbc.writeMem(0x34b0, { 0xcf });
        gbc.writeMem(0xfc8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfc8e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc8e), 0xb1);
        EXPECT(gbc.readMem(0xfc8f), 0x34);
        // CF 00CC
        gbc.setState(0xc912, 0xc34e, 0x20a0, 0x161, 0x6171, 0xb6f5, 0x1, 0x0);
        gbc.writeMem(0xc34c, { 0x0, 0x0 });
        gbc.writeMem(0xc912, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc34c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc34c), 0x13);
        EXPECT(gbc.readMem(0xc34d), 0xc9);
        EXPECT(gbc.readMem(0xc912), 0xcf);
        // CF 00CE
        gbc.setState(0xb4b4, 0xc2f2, 0x7840, 0xeaa8, 0x9fed, 0x22ab, 0x0, 0x1);
        gbc.writeMem(0xb4b4, { 0xcf });
        gbc.writeMem(0xc2f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc2f0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b4), 0xcf);
        EXPECT(gbc.readMem(0xc2f0), 0xb5);
        EXPECT(gbc.readMem(0xc2f1), 0xb4);
        // CF 00D1
        gbc.setState(0x9f57, 0x9961, 0xd850, 0x2d3, 0x810a, 0xbbba, 0x0, 0x1);
        gbc.writeMem(0x995f, { 0x0, 0x0 });
        gbc.writeMem(0x9f57, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x995f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x995f), 0x58);
        EXPECT(gbc.readMem(0x9960), 0x9f);
        EXPECT(gbc.readMem(0x9f57), 0xcf);
        // CF 00D3
        gbc.setState(0x604, 0xf46f, 0x86a0, 0xc255, 0xefc2, 0xa0b6, 0x0, 0x1);
        gbc.writeMem(0x604, { 0xcf });
        gbc.writeMem(0xf46d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf46d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf46d), 0x5);
        EXPECT(gbc.readMem(0xf46e), 0x6);
        // CF 00D4
        gbc.setState(0xedad, 0x8fb0, 0x15f0, 0xa6c4, 0x58c8, 0xc982, 0x0, 0x0);
        gbc.writeMem(0x8fae, { 0x0, 0x0 });
        gbc.writeMem(0xedad, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8fae);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fae), 0xae);
        EXPECT(gbc.readMem(0x8faf), 0xed);
        EXPECT(gbc.readMem(0xedad), 0xcf);
        // CF 00D6
        gbc.setState(0xd8d6, 0xb7c8, 0xae50, 0x209a, 0x7c69, 0x956f, 0x0, 0x0);
        gbc.writeMem(0xb7c6, { 0x0, 0x0 });
        gbc.writeMem(0xd8d6, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb7c6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c6), 0xd7);
        EXPECT(gbc.readMem(0xb7c7), 0xd8);
        EXPECT(gbc.readMem(0xd8d6), 0xcf);
        // CF 00D7
        gbc.setState(0x9e88, 0xc41c, 0x6bf0, 0x94c7, 0x3263, 0x2dcc, 0x1, 0x0);
        gbc.writeMem(0x9e88, { 0xcf });
        gbc.writeMem(0xc41a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc41a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e88), 0xcf);
        EXPECT(gbc.readMem(0xc41a), 0x89);
        EXPECT(gbc.readMem(0xc41b), 0x9e);
        // CF 00D9
        gbc.setState(0x5d39, 0xea60, 0x9990, 0x7e11, 0xb201, 0xa8fd, 0x1, 0x1);
        gbc.writeMem(0x5d39, { 0xcf });
        gbc.writeMem(0xea5e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xea5e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea5e), 0x3a);
        EXPECT(gbc.readMem(0xea5f), 0x5d);
        // CF 00DA
        gbc.setState(0x22d9, 0xb01b, 0xa70, 0xfdb2, 0x6c7b, 0x622b, 0x1, 0x0);
        gbc.writeMem(0x22d9, { 0xcf });
        gbc.writeMem(0xb019, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb019);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb019), 0xda);
        EXPECT(gbc.readMem(0xb01a), 0x22);
        // CF 00DB
        gbc.setState(0x9023, 0x8b60, 0x3eb0, 0x3b7a, 0xc7b9, 0x935b, 0x0, 0x0);
        gbc.writeMem(0x8b5e, { 0x0, 0x0 });
        gbc.writeMem(0x9023, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8b5e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5e), 0x24);
        EXPECT(gbc.readMem(0x8b5f), 0x90);
        EXPECT(gbc.readMem(0x9023), 0xcf);
        // CF 00DC
        gbc.setState(0xe1b3, 0xc092, 0x7a00, 0x7f77, 0x7ec9, 0x768f, 0x0, 0x1);
        gbc.writeMem(0xc090, { 0x0, 0x0 });
        gbc.writeMem(0xe1b3, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc090);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc090), 0xb4);
        EXPECT(gbc.readMem(0xc091), 0xe1);
        EXPECT(gbc.readMem(0xe1b3), 0xcf);
        // CF 00DD
        gbc.setState(0x1717, 0x8fe6, 0x1400, 0x47e9, 0x4594, 0xdfa3, 0x0, 0x0);
        gbc.writeMem(0x1717, { 0xcf });
        gbc.writeMem(0x8fe4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x8fe4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe4), 0x18);
        EXPECT(gbc.readMem(0x8fe5), 0x17);
        // CF 00DE
        gbc.setState(0x5bab, 0x979c, 0x1e10, 0x56b3, 0x24f3, 0x7834, 0x0, 0x1);
        gbc.writeMem(0x5bab, { 0xcf });
        gbc.writeMem(0x979a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x979a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979a), 0xac);
        EXPECT(gbc.readMem(0x979b), 0x5b);
        // CF 00E2
        gbc.setState(0xdf9e, 0xc98b, 0xc6c0, 0xd214, 0x42a5, 0xf435, 0x0, 0x1);
        gbc.writeMem(0xc989, { 0x0, 0x0 });
        gbc.writeMem(0xdf9e, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc989);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc989), 0x9f);
        EXPECT(gbc.readMem(0xc98a), 0xdf);
        EXPECT(gbc.readMem(0xdf9e), 0xcf);
        // CF 00E3
        gbc.setState(0x567d, 0x9e0e, 0xf6f0, 0x290d, 0x4851, 0x12a9, 0x0, 0x0);
        gbc.writeMem(0x567d, { 0xcf });
        gbc.writeMem(0x9e0c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x9e0c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e0c), 0x7e);
        EXPECT(gbc.readMem(0x9e0d), 0x56);
        // CF 00E7
        gbc.setState(0x5de4, 0xc711, 0x3280, 0xb544, 0x4c63, 0xef1, 0x1, 0x1);
        gbc.writeMem(0x5de4, { 0xcf });
        gbc.writeMem(0xc70f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc70f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70f), 0xe5);
        EXPECT(gbc.readMem(0xc710), 0x5d);
        // CF 00E8
        gbc.setState(0x84fd, 0xe086, 0x3c60, 0x77e6, 0x1a03, 0x547d, 0x1, 0x1);
        gbc.writeMem(0x84fd, { 0xcf });
        gbc.writeMem(0xe084, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe084);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fd), 0xcf);
        EXPECT(gbc.readMem(0xe084), 0xfe);
        EXPECT(gbc.readMem(0xe085), 0x84);
        // CF 00E9
        gbc.setState(0x7950, 0xa6a3, 0x55e0, 0xc08c, 0xe338, 0x9ccd, 0x1, 0x1);
        gbc.writeMem(0x7950, { 0xcf });
        gbc.writeMem(0xa6a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa6a1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6a1), 0x51);
        EXPECT(gbc.readMem(0xa6a2), 0x79);
        // CF 00EB
        gbc.setState(0x6ea1, 0xb6a9, 0x2cd0, 0x7034, 0x1537, 0x8f1c, 0x0, 0x0);
        gbc.writeMem(0x6ea1, { 0xcf });
        gbc.writeMem(0xb6a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb6a7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a7), 0xa2);
        EXPECT(gbc.readMem(0xb6a8), 0x6e);
        // CF 00F2
        gbc.setState(0x6786, 0xe65a, 0xf460, 0x82b9, 0x5fa9, 0x3b82, 0x1, 0x1);
        gbc.writeMem(0x6786, { 0xcf });
        gbc.writeMem(0xe658, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe658);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe658), 0x87);
        EXPECT(gbc.readMem(0xe659), 0x67);
        // CF 00F5
        gbc.setState(0xb689, 0xc257, 0x72f0, 0x1e78, 0xce26, 0xbdf4, 0x0, 0x0);
        gbc.writeMem(0xb689, { 0xcf });
        gbc.writeMem(0xc255, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc255);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb689), 0xcf);
        EXPECT(gbc.readMem(0xc255), 0x8a);
        EXPECT(gbc.readMem(0xc256), 0xb6);
        // CF 00F7
        gbc.setState(0xca26, 0xd5a6, 0xa610, 0xae48, 0xcc38, 0x4e3f, 0x1, 0x1);
        gbc.writeMem(0xca26, { 0xcf });
        gbc.writeMem(0xd5a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd5a4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca26), 0xcf);
        EXPECT(gbc.readMem(0xd5a4), 0x27);
        EXPECT(gbc.readMem(0xd5a5), 0xca);
        // CF 00F8
        gbc.setState(0xd253, 0x96c9, 0xf660, 0xf615, 0xb4f, 0xd025, 0x0, 0x1);
        gbc.writeMem(0x96c7, { 0x0, 0x0 });
        gbc.writeMem(0xd253, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x96c7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c7), 0x54);
        EXPECT(gbc.readMem(0x96c8), 0xd2);
        EXPECT(gbc.readMem(0xd253), 0xcf);
        // CF 00F9
        gbc.setState(0x34a4, 0xfac4, 0xaf70, 0xe902, 0xb3d3, 0x76e5, 0x0, 0x0);
        gbc.writeMem(0x34a4, { 0xcf });
        gbc.writeMem(0xfac2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfac2), 0xa5);
        EXPECT(gbc.readMem(0xfac3), 0x34);
        // CF 00FB
        gbc.setState(0x1cc, 0xeaac, 0xd6f0, 0x9bb5, 0x30ad, 0x594, 0x0, 0x1);
        gbc.writeMem(0x1cc, { 0xcf });
        gbc.writeMem(0xeaaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xeaaa);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaaa), 0xcd);
        EXPECT(gbc.readMem(0xeaab), 0x1);
        // CF 0103
        gbc.setState(0xb7a1, 0xcee7, 0xb080, 0xdc88, 0x6541, 0x6c24, 0x1, 0x1);
        gbc.writeMem(0xb7a1, { 0xcf });
        gbc.writeMem(0xcee5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcee5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7a1), 0xcf);
        EXPECT(gbc.readMem(0xcee5), 0xa2);
        EXPECT(gbc.readMem(0xcee6), 0xb7);
        // CF 0104
        gbc.setState(0x4d8d, 0xcc73, 0x3730, 0x85b1, 0x4ff8, 0xa05b, 0x1, 0x1);
        gbc.writeMem(0x4d8d, { 0xcf });
        gbc.writeMem(0xcc71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xcc71);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc71), 0x8e);
        EXPECT(gbc.readMem(0xcc72), 0x4d);
        // CF 0105
        gbc.setState(0x80f6, 0x86c1, 0x4be0, 0xbb81, 0xdc95, 0xd2c8, 0x0, 0x0);
        gbc.writeMem(0x80f6, { 0xcf });
        gbc.writeMem(0x86bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x86bf);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f6), 0xcf);
        EXPECT(gbc.readMem(0x86bf), 0xf7);
        EXPECT(gbc.readMem(0x86c0), 0x80);
        // CF 010A
        gbc.setState(0xea00, 0xd36b, 0x32c0, 0xa35e, 0x9bb4, 0x2a35, 0x0, 0x1);
        gbc.writeMem(0xd369, { 0x0, 0x0 });
        gbc.writeMem(0xea00, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd369);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd369), 0x1);
        EXPECT(gbc.readMem(0xd36a), 0xea);
        EXPECT(gbc.readMem(0xea00), 0xcf);
        // CF 010C
        gbc.setState(0x3a1b, 0xd578, 0xee30, 0xcc84, 0xc191, 0xde94, 0x1, 0x1);
        gbc.writeMem(0x3a1b, { 0xcf });
        gbc.writeMem(0xd576, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd576);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd576), 0x1c);
        EXPECT(gbc.readMem(0xd577), 0x3a);
        // CF 010D
        gbc.setState(0x498c, 0x9c12, 0xa010, 0xc273, 0xa378, 0x5c47, 0x0, 0x0);
        gbc.writeMem(0x498c, { 0xcf });
        gbc.writeMem(0x9c10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9c10);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c10), 0x8d);
        EXPECT(gbc.readMem(0x9c11), 0x49);
        // CF 0113
        gbc.setState(0x4c88, 0xd3b1, 0x9130, 0x131f, 0x3a39, 0xcc2, 0x1, 0x0);
        gbc.writeMem(0x4c88, { 0xcf });
        gbc.writeMem(0xd3af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd3af);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3af), 0x89);
        EXPECT(gbc.readMem(0xd3b0), 0x4c);
        // CF 0114
        gbc.setState(0xd97, 0xb6de, 0xbff0, 0xddfd, 0xbba3, 0x7ef0, 0x1, 0x1);
        gbc.writeMem(0xd97, { 0xcf });
        gbc.writeMem(0xb6dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb6dc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6dc), 0x98);
        EXPECT(gbc.readMem(0xb6dd), 0xd);
        // CF 0116
        gbc.setState(0xde4b, 0xe9bd, 0xc7d0, 0x7a85, 0xfb35, 0x1a25, 0x0, 0x0);
        gbc.writeMem(0xde4b, { 0xcf });
        gbc.writeMem(0xe9bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe9bb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde4b), 0xcf);
        EXPECT(gbc.readMem(0xe9bb), 0x4c);
        EXPECT(gbc.readMem(0xe9bc), 0xde);
        // CF 0119
        gbc.setState(0xd5f6, 0xadbf, 0x79c0, 0x2701, 0x5d8e, 0x2adc, 0x0, 0x1);
        gbc.writeMem(0xadbd, { 0x0, 0x0 });
        gbc.writeMem(0xd5f6, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xadbd);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbd), 0xf7);
        EXPECT(gbc.readMem(0xadbe), 0xd5);
        EXPECT(gbc.readMem(0xd5f6), 0xcf);
        // CF 011C
        gbc.setState(0xb774, 0xc6c5, 0x9b70, 0xe802, 0xb830, 0x6686, 0x1, 0x0);
        gbc.writeMem(0xb774, { 0xcf });
        gbc.writeMem(0xc6c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc6c3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb774), 0xcf);
        EXPECT(gbc.readMem(0xc6c3), 0x75);
        EXPECT(gbc.readMem(0xc6c4), 0xb7);
        // CF 011E
        gbc.setState(0x25fe, 0x9710, 0x29c0, 0xcc37, 0xe687, 0x106d, 0x0, 0x0);
        gbc.writeMem(0x25fe, { 0xcf });
        gbc.writeMem(0x970e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x970e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x970e), 0xff);
        EXPECT(gbc.readMem(0x970f), 0x25);
        // CF 0120
        gbc.setState(0xab4b, 0x8b61, 0x42c0, 0x871, 0xf1f8, 0x3225, 0x1, 0x1);
        gbc.writeMem(0x8b5f, { 0x0, 0x0 });
        gbc.writeMem(0xab4b, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8b5f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5f), 0x4c);
        EXPECT(gbc.readMem(0x8b60), 0xab);
        EXPECT(gbc.readMem(0xab4b), 0xcf);
        // CF 0126
        gbc.setState(0xe629, 0xf239, 0xfed0, 0x3346, 0x1cbd, 0x9844, 0x1, 0x1);
        gbc.writeMem(0xe629, { 0xcf });
        gbc.writeMem(0xf237, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf237);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe629), 0xcf);
        EXPECT(gbc.readMem(0xf237), 0x2a);
        EXPECT(gbc.readMem(0xf238), 0xe6);
        // CF 0128
        gbc.setState(0x137a, 0xdf75, 0xc8c0, 0x80c0, 0x86f5, 0x37c8, 0x1, 0x0);
        gbc.writeMem(0x137a, { 0xcf });
        gbc.writeMem(0xdf73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdf73);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf73), 0x7b);
        EXPECT(gbc.readMem(0xdf74), 0x13);
        // CF 012D
        gbc.setState(0xb433, 0x91ab, 0x78f0, 0x2417, 0x8759, 0xce49, 0x1, 0x1);
        gbc.writeMem(0x91a9, { 0x0, 0x0 });
        gbc.writeMem(0xb433, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x91a9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a9), 0x34);
        EXPECT(gbc.readMem(0x91aa), 0xb4);
        EXPECT(gbc.readMem(0xb433), 0xcf);
        // CF 0131
        gbc.setState(0x93b3, 0xe7ec, 0x25f0, 0x2215, 0x12ac, 0xd633, 0x1, 0x0);
        gbc.writeMem(0x93b3, { 0xcf });
        gbc.writeMem(0xe7ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe7ea);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b3), 0xcf);
        EXPECT(gbc.readMem(0xe7ea), 0xb4);
        EXPECT(gbc.readMem(0xe7eb), 0x93);
        // CF 0132
        gbc.setState(0x6c9, 0xc077, 0x3010, 0x85e9, 0xc1f9, 0x26ed, 0x1, 0x0);
        gbc.writeMem(0x6c9, { 0xcf });
        gbc.writeMem(0xc075, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc075);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc075), 0xca);
        EXPECT(gbc.readMem(0xc076), 0x6);
        // CF 0133
        gbc.setState(0xc409, 0xfbc8, 0x7900, 0x1901, 0xf08c, 0x52c7, 0x1, 0x1);
        gbc.writeMem(0xc409, { 0xcf });
        gbc.writeMem(0xfbc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfbc6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc409), 0xcf);
        EXPECT(gbc.readMem(0xfbc6), 0xa);
        EXPECT(gbc.readMem(0xfbc7), 0xc4);
        // CF 0134
        gbc.setState(0x94a1, 0x8469, 0x7500, 0xb2, 0x88e7, 0x27b5, 0x0, 0x0);
        gbc.writeMem(0x8467, { 0x0, 0x0 });
        gbc.writeMem(0x94a1, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8467);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8467), 0xa2);
        EXPECT(gbc.readMem(0x8468), 0x94);
        EXPECT(gbc.readMem(0x94a1), 0xcf);
        // CF 0136
        gbc.setState(0xa494, 0xb066, 0xcd0, 0x137a, 0x8466, 0xea5a, 0x1, 0x1);
        gbc.writeMem(0xa494, { 0xcf });
        gbc.writeMem(0xb064, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb064);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa494), 0xcf);
        EXPECT(gbc.readMem(0xb064), 0x95);
        EXPECT(gbc.readMem(0xb065), 0xa4);
        // CF 0138
        gbc.setState(0x376c, 0xdcc8, 0x4ba0, 0xe843, 0x5893, 0xe80b, 0x0, 0x0);
        gbc.writeMem(0x376c, { 0xcf });
        gbc.writeMem(0xdcc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xdcc6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcc6), 0x6d);
        EXPECT(gbc.readMem(0xdcc7), 0x37);
        // CF 013A
        gbc.setState(0x76e2, 0xf19a, 0xfa0, 0xc98f, 0xe57d, 0xa981, 0x0, 0x0);
        gbc.writeMem(0x76e2, { 0xcf });
        gbc.writeMem(0xf198, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf198);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf198), 0xe3);
        EXPECT(gbc.readMem(0xf199), 0x76);
        // CF 013B
        gbc.setState(0xd250, 0x812f, 0x2e00, 0x3549, 0x13f5, 0x793b, 0x0, 0x1);
        gbc.writeMem(0x812d, { 0x0, 0x0 });
        gbc.writeMem(0xd250, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x812d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812d), 0x51);
        EXPECT(gbc.readMem(0x812e), 0xd2);
        EXPECT(gbc.readMem(0xd250), 0xcf);
        // CF 013C
        gbc.setState(0x6791, 0xe54c, 0xdb0, 0x6e9f, 0x84b2, 0x21d5, 0x0, 0x0);
        gbc.writeMem(0x6791, { 0xcf });
        gbc.writeMem(0xe54a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe54a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54a), 0x92);
        EXPECT(gbc.readMem(0xe54b), 0x67);
        // CF 013D
        gbc.setState(0x85a, 0xbf0d, 0x90c0, 0x4323, 0xf2e9, 0x78a8, 0x0, 0x1);
        gbc.writeMem(0x85a, { 0xcf });
        gbc.writeMem(0xbf0b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xbf0b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0b), 0x5b);
        EXPECT(gbc.readMem(0xbf0c), 0x8);
        // CF 013E
        gbc.setState(0x2bd8, 0xc960, 0xadf0, 0xa983, 0x17a5, 0xc29f, 0x0, 0x0);
        gbc.writeMem(0x2bd8, { 0xcf });
        gbc.writeMem(0xc95e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xc95e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95e), 0xd9);
        EXPECT(gbc.readMem(0xc95f), 0x2b);
        // CF 0142
        gbc.setState(0xcc33, 0x8507, 0x38b0, 0x8369, 0x5c72, 0x70bd, 0x0, 0x1);
        gbc.writeMem(0x8505, { 0x0, 0x0 });
        gbc.writeMem(0xcc33, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8505);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8505), 0x34);
        EXPECT(gbc.readMem(0x8506), 0xcc);
        EXPECT(gbc.readMem(0xcc33), 0xcf);
        // CF 0145
        gbc.setState(0x4403, 0xd69f, 0x7390, 0x4539, 0x17e8, 0xb43b, 0x0, 0x1);
        gbc.writeMem(0x4403, { 0xcf });
        gbc.writeMem(0xd69d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd69d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69d), 0x4);
        EXPECT(gbc.readMem(0xd69e), 0x44);
        // CF 014A
        gbc.setState(0xead1, 0xb844, 0x8710, 0x15b9, 0xc462, 0x8698, 0x1, 0x0);
        gbc.writeMem(0xb842, { 0x0, 0x0 });
        gbc.writeMem(0xead1, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb842);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb842), 0xd2);
        EXPECT(gbc.readMem(0xb843), 0xea);
        EXPECT(gbc.readMem(0xead1), 0xcf);
        // CF 014B
        gbc.setState(0x5797, 0xf3a3, 0x48e0, 0xd36a, 0xaa8d, 0x6c70, 0x1, 0x1);
        gbc.writeMem(0x5797, { 0xcf });
        gbc.writeMem(0xf3a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf3a1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf3a1), 0x98);
        EXPECT(gbc.readMem(0xf3a2), 0x57);
        // CF 0150
        gbc.setState(0x2cf1, 0xb86b, 0xf020, 0x8969, 0xe3a3, 0x4ad1, 0x1, 0x1);
        gbc.writeMem(0x2cf1, { 0xcf });
        gbc.writeMem(0xb869, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb869);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb869), 0xf2);
        EXPECT(gbc.readMem(0xb86a), 0x2c);
        // CF 0151
        gbc.setState(0xc2fd, 0xfc78, 0x9230, 0x6f4d, 0xbb22, 0x595, 0x1, 0x0);
        gbc.writeMem(0xc2fd, { 0xcf });
        gbc.writeMem(0xfc76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfc76);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fd), 0xcf);
        EXPECT(gbc.readMem(0xfc76), 0xfe);
        EXPECT(gbc.readMem(0xfc77), 0xc2);
        // CF 0152
        gbc.setState(0x24a2, 0xc464, 0xdd80, 0xd9bc, 0xdf8, 0xaf6e, 0x0, 0x1);
        gbc.writeMem(0x24a2, { 0xcf });
        gbc.writeMem(0xc462, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc462);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc462), 0xa3);
        EXPECT(gbc.readMem(0xc463), 0x24);
        // CF 0154
        gbc.setState(0x2d99, 0xd61b, 0xa500, 0xe51, 0x6e09, 0xb46b, 0x0, 0x1);
        gbc.writeMem(0x2d99, { 0xcf });
        gbc.writeMem(0xd619, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd619);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd619), 0x9a);
        EXPECT(gbc.readMem(0xd61a), 0x2d);
        // CF 0156
        gbc.setState(0xa1b2, 0xf57d, 0x2390, 0x9293, 0xe35d, 0x2feb, 0x1, 0x0);
        gbc.writeMem(0xa1b2, { 0xcf });
        gbc.writeMem(0xf57b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf57b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b2), 0xcf);
        EXPECT(gbc.readMem(0xf57b), 0xb3);
        EXPECT(gbc.readMem(0xf57c), 0xa1);
        // CF 0157
        gbc.setState(0x8432, 0x8eab, 0xfe00, 0x7d73, 0x7524, 0xc712, 0x1, 0x0);
        gbc.writeMem(0x8432, { 0xcf });
        gbc.writeMem(0x8ea9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8ea9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8432), 0xcf);
        EXPECT(gbc.readMem(0x8ea9), 0x33);
        EXPECT(gbc.readMem(0x8eaa), 0x84);
        // CF 0158
        gbc.setState(0xf20, 0xe0a3, 0xc5c0, 0x2338, 0xe263, 0xd573, 0x0, 0x1);
        gbc.writeMem(0xf20, { 0xcf });
        gbc.writeMem(0xe0a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe0a1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a1), 0x21);
        EXPECT(gbc.readMem(0xe0a2), 0xf);
        // CF 0159
        gbc.setState(0x29ef, 0xbffc, 0x9d20, 0x97d3, 0x5f05, 0x610d, 0x0, 0x1);
        gbc.writeMem(0x29ef, { 0xcf });
        gbc.writeMem(0xbffa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbffa);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffa), 0xf0);
        EXPECT(gbc.readMem(0xbffb), 0x29);
        // CF 015E
        gbc.setState(0x3b60, 0x8c00, 0xf100, 0xa8c1, 0xa7eb, 0xc948, 0x1, 0x0);
        gbc.writeMem(0x3b60, { 0xcf });
        gbc.writeMem(0x8bfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8bfe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfe), 0x61);
        EXPECT(gbc.readMem(0x8bff), 0x3b);
        // CF 015F
        gbc.setState(0x402d, 0x9d89, 0xe470, 0x116f, 0x9d53, 0xf872, 0x1, 0x0);
        gbc.writeMem(0x402d, { 0xcf });
        gbc.writeMem(0x9d87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9d87);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d87), 0x2e);
        EXPECT(gbc.readMem(0x9d88), 0x40);
        // CF 0162
        gbc.setState(0x6e0b, 0xc707, 0x1990, 0x1958, 0x8c80, 0x424d, 0x0, 0x0);
        gbc.writeMem(0x6e0b, { 0xcf });
        gbc.writeMem(0xc705, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc705);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc705), 0xc);
        EXPECT(gbc.readMem(0xc706), 0x6e);
        // CF 0164
        gbc.setState(0x438, 0x93ee, 0xc390, 0xe47b, 0xc2c1, 0x77ef, 0x0, 0x0);
        gbc.writeMem(0x438, { 0xcf });
        gbc.writeMem(0x93ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x93ec);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ec), 0x39);
        EXPECT(gbc.readMem(0x93ed), 0x4);
        // CF 0166
        gbc.setState(0x5c8, 0xc1ef, 0x32e0, 0x7116, 0xffc3, 0x9bbd, 0x0, 0x0);
        gbc.writeMem(0x5c8, { 0xcf });
        gbc.writeMem(0xc1ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc1ed);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ed), 0xc9);
        EXPECT(gbc.readMem(0xc1ee), 0x5);
        // CF 0169
        gbc.setState(0xb1b6, 0xdea5, 0xc0, 0xa023, 0xfd84, 0x2ed4, 0x0, 0x0);
        gbc.writeMem(0xb1b6, { 0xcf });
        gbc.writeMem(0xdea3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdea3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b6), 0xcf);
        EXPECT(gbc.readMem(0xdea3), 0xb7);
        EXPECT(gbc.readMem(0xdea4), 0xb1);
        // CF 016B
        gbc.setState(0x12b1, 0xe657, 0xe000, 0xb48e, 0x846d, 0x40b9, 0x0, 0x1);
        gbc.writeMem(0x12b1, { 0xcf });
        gbc.writeMem(0xe655, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe655);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe655), 0xb2);
        EXPECT(gbc.readMem(0xe656), 0x12);
        // CF 016E
        gbc.setState(0x978b, 0xc03c, 0x51e0, 0xc98, 0x44a2, 0xc523, 0x1, 0x0);
        gbc.writeMem(0x978b, { 0xcf });
        gbc.writeMem(0xc03a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc03a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x978b), 0xcf);
        EXPECT(gbc.readMem(0xc03a), 0x8c);
        EXPECT(gbc.readMem(0xc03b), 0x97);
        // CF 0175
        gbc.setState(0xe149, 0x8341, 0x9840, 0x3d2c, 0xad7c, 0xb036, 0x1, 0x0);
        gbc.writeMem(0x833f, { 0x0, 0x0 });
        gbc.writeMem(0xe149, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x833f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x833f), 0x4a);
        EXPECT(gbc.readMem(0x8340), 0xe1);
        EXPECT(gbc.readMem(0xe149), 0xcf);
        // CF 0178
        gbc.setState(0x69ac, 0xe8a7, 0x2db0, 0x2efb, 0x75be, 0x83c0, 0x0, 0x1);
        gbc.writeMem(0x69ac, { 0xcf });
        gbc.writeMem(0xe8a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe8a5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a5), 0xad);
        EXPECT(gbc.readMem(0xe8a6), 0x69);
        // CF 0179
        gbc.setState(0x2b30, 0xa49a, 0x650, 0xa9c8, 0xb16e, 0x1b1c, 0x0, 0x1);
        gbc.writeMem(0x2b30, { 0xcf });
        gbc.writeMem(0xa498, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xa498);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa498), 0x31);
        EXPECT(gbc.readMem(0xa499), 0x2b);
        // CF 017A
        gbc.setState(0x9ab5, 0x9efd, 0x1100, 0xfe14, 0xe77e, 0x325, 0x1, 0x1);
        gbc.writeMem(0x9ab5, { 0xcf });
        gbc.writeMem(0x9efb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9efb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab5), 0xcf);
        EXPECT(gbc.readMem(0x9efb), 0xb6);
        EXPECT(gbc.readMem(0x9efc), 0x9a);
        // CF 017B
        gbc.setState(0xd75c, 0xea84, 0xf250, 0xf505, 0xf609, 0x13a6, 0x1, 0x1);
        gbc.writeMem(0xd75c, { 0xcf });
        gbc.writeMem(0xea82, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xea82);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75c), 0xcf);
        EXPECT(gbc.readMem(0xea82), 0x5d);
        EXPECT(gbc.readMem(0xea83), 0xd7);
        // CF 017D
        gbc.setState(0xe379, 0xe2a1, 0x2c20, 0x9e54, 0x31ce, 0x1e1e, 0x1, 0x1);
        gbc.writeMem(0xe29f, { 0x0, 0x0 });
        gbc.writeMem(0xe379, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe29f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe29f), 0x7a);
        EXPECT(gbc.readMem(0xe2a0), 0xe3);
        EXPECT(gbc.readMem(0xe379), 0xcf);
        // CF 017F
        gbc.setState(0xb497, 0xb3b7, 0xe110, 0xcc2a, 0x92e6, 0x7220, 0x0, 0x1);
        gbc.writeMem(0xb3b5, { 0x0, 0x0 });
        gbc.writeMem(0xb497, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb3b5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3b5), 0x98);
        EXPECT(gbc.readMem(0xb3b6), 0xb4);
        EXPECT(gbc.readMem(0xb497), 0xcf);
        // CF 0181
        gbc.setState(0x8e7b, 0x8474, 0x99e0, 0xd769, 0x5455, 0x795d, 0x1, 0x0);
        gbc.writeMem(0x8472, { 0x0, 0x0 });
        gbc.writeMem(0x8e7b, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8472);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8472), 0x7c);
        EXPECT(gbc.readMem(0x8473), 0x8e);
        EXPECT(gbc.readMem(0x8e7b), 0xcf);
        // CF 0182
        gbc.setState(0x2060, 0xa8af, 0xd500, 0x739a, 0xf63b, 0x967d, 0x1, 0x0);
        gbc.writeMem(0x2060, { 0xcf });
        gbc.writeMem(0xa8ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa8ad);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ad), 0x61);
        EXPECT(gbc.readMem(0xa8ae), 0x20);
        // CF 0184
        gbc.setState(0x884a, 0xb1f4, 0x1f00, 0x133c, 0x9ce2, 0xfa01, 0x1, 0x1);
        gbc.writeMem(0x884a, { 0xcf });
        gbc.writeMem(0xb1f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb1f2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884a), 0xcf);
        EXPECT(gbc.readMem(0xb1f2), 0x4b);
        EXPECT(gbc.readMem(0xb1f3), 0x88);
        // CF 0187
        gbc.setState(0x9b36, 0xc47f, 0x6530, 0x7237, 0xa380, 0x7116, 0x0, 0x0);
        gbc.writeMem(0x9b36, { 0xcf });
        gbc.writeMem(0xc47d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc47d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b36), 0xcf);
        EXPECT(gbc.readMem(0xc47d), 0x37);
        EXPECT(gbc.readMem(0xc47e), 0x9b);
        // CF 0189
        gbc.setState(0x2c40, 0x9e0f, 0xcee0, 0xe716, 0xd502, 0x3f4b, 0x1, 0x1);
        gbc.writeMem(0x2c40, { 0xcf });
        gbc.writeMem(0x9e0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9e0d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0d), 0x41);
        EXPECT(gbc.readMem(0x9e0e), 0x2c);
        // CF 018A
        gbc.setState(0x10fd, 0x9bb0, 0xc7e0, 0x1752, 0x2abe, 0xbfb6, 0x0, 0x0);
        gbc.writeMem(0x10fd, { 0xcf });
        gbc.writeMem(0x9bae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9bae);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bae), 0xfe);
        EXPECT(gbc.readMem(0x9baf), 0x10);
        // CF 018E
        gbc.setState(0xad09, 0xcde8, 0x3530, 0x7bf1, 0xf24e, 0x4ee6, 0x1, 0x0);
        gbc.writeMem(0xad09, { 0xcf });
        gbc.writeMem(0xcde6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcde6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad09), 0xcf);
        EXPECT(gbc.readMem(0xcde6), 0xa);
        EXPECT(gbc.readMem(0xcde7), 0xad);
        // CF 0190
        gbc.setState(0xa4b8, 0xb606, 0xa850, 0x8403, 0x1bb6, 0x338, 0x0, 0x0);
        gbc.writeMem(0xa4b8, { 0xcf });
        gbc.writeMem(0xb604, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb604);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4b8), 0xcf);
        EXPECT(gbc.readMem(0xb604), 0xb9);
        EXPECT(gbc.readMem(0xb605), 0xa4);
        // CF 0191
        gbc.setState(0xe046, 0x9b6f, 0x3ef0, 0x2480, 0xaebc, 0x52f3, 0x1, 0x0);
        gbc.writeMem(0x9b6d, { 0x0, 0x0 });
        gbc.writeMem(0xe046, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9b6d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6d), 0x47);
        EXPECT(gbc.readMem(0x9b6e), 0xe0);
        EXPECT(gbc.readMem(0xe046), 0xcf);
        // CF 0192
        gbc.setState(0x81b7, 0xabe8, 0xed50, 0xfa3e, 0xa560, 0x9266, 0x0, 0x0);
        gbc.writeMem(0x81b7, { 0xcf });
        gbc.writeMem(0xabe6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xabe6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b7), 0xcf);
        EXPECT(gbc.readMem(0xabe6), 0xb8);
        EXPECT(gbc.readMem(0xabe7), 0x81);
        // CF 0194
        gbc.setState(0x6a0f, 0xaad4, 0x3c50, 0x9ab8, 0xa0b5, 0x9f01, 0x1, 0x1);
        gbc.writeMem(0x6a0f, { 0xcf });
        gbc.writeMem(0xaad2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xaad2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaad2), 0x10);
        EXPECT(gbc.readMem(0xaad3), 0x6a);
        // CF 0195
        gbc.setState(0xe8f6, 0xd7ea, 0xe0d0, 0x105b, 0x25fe, 0xbc90, 0x1, 0x1);
        gbc.writeMem(0xd7e8, { 0x0, 0x0 });
        gbc.writeMem(0xe8f6, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd7e8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7e8), 0xf7);
        EXPECT(gbc.readMem(0xd7e9), 0xe8);
        EXPECT(gbc.readMem(0xe8f6), 0xcf);
        // CF 0196
        gbc.setState(0x7a50, 0xb17d, 0xb050, 0x2dfc, 0x6761, 0x1bbf, 0x1, 0x0);
        gbc.writeMem(0x7a50, { 0xcf });
        gbc.writeMem(0xb17b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb17b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17b), 0x51);
        EXPECT(gbc.readMem(0xb17c), 0x7a);
        // CF 0197
        gbc.setState(0x5333, 0xdb32, 0x5d30, 0xb528, 0xb931, 0xf7a3, 0x1, 0x0);
        gbc.writeMem(0x5333, { 0xcf });
        gbc.writeMem(0xdb30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdb30);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb30), 0x34);
        EXPECT(gbc.readMem(0xdb31), 0x53);
        // CF 019C
        gbc.setState(0x516, 0xffbd, 0x39f0, 0x1615, 0x3996, 0x2026, 0x0, 0x0);
        gbc.writeMem(0x516, { 0xcf });
        gbc.writeMem(0xffbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xffbb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffbb), 0x17);
        EXPECT(gbc.readMem(0xffbc), 0x5);
        // CF 019D
        gbc.setState(0x59b5, 0x866e, 0x1750, 0xfd0, 0x7a53, 0x41f7, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0xcf });
        gbc.writeMem(0x866c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x866c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866c), 0xb6);
        EXPECT(gbc.readMem(0x866d), 0x59);
        // CF 01A2
        gbc.setState(0xef51, 0xf8a3, 0xb3d0, 0x7c37, 0x6d7d, 0x7a19, 0x0, 0x0);
        gbc.writeMem(0xef51, { 0xcf });
        gbc.writeMem(0xf8a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf8a1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef51), 0xcf);
        EXPECT(gbc.readMem(0xf8a1), 0x52);
        EXPECT(gbc.readMem(0xf8a2), 0xef);
        // CF 01A4
        gbc.setState(0xc54e, 0x846a, 0xb90, 0x89bb, 0x730, 0x311a, 0x1, 0x1);
        gbc.writeMem(0x8468, { 0x0, 0x0 });
        gbc.writeMem(0xc54e, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8468);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8468), 0x4f);
        EXPECT(gbc.readMem(0x8469), 0xc5);
        EXPECT(gbc.readMem(0xc54e), 0xcf);
        // CF 01A6
        gbc.setState(0x6374, 0xff2e, 0x20c0, 0x8571, 0xf51d, 0x545e, 0x1, 0x1);
        gbc.writeMem(0x6374, { 0xcf });
        gbc.writeMem(0xff2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xff2c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xff2c), 0x75);
        EXPECT(gbc.readMem(0xff2d), 0x63);
        // CF 01AF
        gbc.setState(0xe729, 0x82fa, 0x1960, 0xce94, 0xbc2d, 0x4c7c, 0x1, 0x1);
        gbc.writeMem(0x82f8, { 0x0, 0x0 });
        gbc.writeMem(0xe729, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x82f8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82f8), 0x2a);
        EXPECT(gbc.readMem(0x82f9), 0xe7);
        EXPECT(gbc.readMem(0xe729), 0xcf);
        // CF 01B3
        gbc.setState(0xb820, 0x8572, 0x3570, 0xab28, 0xab0a, 0x154b, 0x0, 0x1);
        gbc.writeMem(0x8570, { 0x0, 0x0 });
        gbc.writeMem(0xb820, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8570);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8570), 0x21);
        EXPECT(gbc.readMem(0x8571), 0xb8);
        EXPECT(gbc.readMem(0xb820), 0xcf);
        // CF 01B5
        gbc.setState(0x1e42, 0x8e93, 0x52c0, 0x22e7, 0x9ef5, 0xf9a5, 0x1, 0x0);
        gbc.writeMem(0x1e42, { 0xcf });
        gbc.writeMem(0x8e91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8e91);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e91), 0x43);
        EXPECT(gbc.readMem(0x8e92), 0x1e);
        // CF 01B9
        gbc.setState(0xe305, 0x8fcf, 0x77f0, 0x409d, 0x6039, 0xb885, 0x1, 0x1);
        gbc.writeMem(0x8fcd, { 0x0, 0x0 });
        gbc.writeMem(0xe305, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x8fcd);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcd), 0x6);
        EXPECT(gbc.readMem(0x8fce), 0xe3);
        EXPECT(gbc.readMem(0xe305), 0xcf);
        // CF 01BB
        gbc.setState(0x38ed, 0xe354, 0x8140, 0x316b, 0x7895, 0x4b41, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcf });
        gbc.writeMem(0xe352, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe352);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe352), 0xee);
        EXPECT(gbc.readMem(0xe353), 0x38);
        // CF 01BC
        gbc.setState(0xcfbe, 0xb688, 0xad90, 0xe745, 0xabe9, 0x6707, 0x0, 0x1);
        gbc.writeMem(0xb686, { 0x0, 0x0 });
        gbc.writeMem(0xcfbe, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb686);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb686), 0xbf);
        EXPECT(gbc.readMem(0xb687), 0xcf);
        EXPECT(gbc.readMem(0xcfbe), 0xcf);
        // CF 01BD
        gbc.setState(0xf84, 0xf928, 0x46d0, 0x207f, 0x7c15, 0x82f0, 0x1, 0x0);
        gbc.writeMem(0xf84, { 0xcf });
        gbc.writeMem(0xf926, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf926);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf926), 0x85);
        EXPECT(gbc.readMem(0xf927), 0xf);
        // CF 01BE
        gbc.setState(0x8613, 0xb962, 0x6f30, 0x4d54, 0xe5b8, 0x1fe7, 0x1, 0x1);
        gbc.writeMem(0x8613, { 0xcf });
        gbc.writeMem(0xb960, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb960);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8613), 0xcf);
        EXPECT(gbc.readMem(0xb960), 0x14);
        EXPECT(gbc.readMem(0xb961), 0x86);
        // CF 01BF
        gbc.setState(0x6ea6, 0x9f5e, 0xf120, 0x1aa1, 0xbc37, 0x2549, 0x0, 0x0);
        gbc.writeMem(0x6ea6, { 0xcf });
        gbc.writeMem(0x9f5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9f5c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5c), 0xa7);
        EXPECT(gbc.readMem(0x9f5d), 0x6e);
        // CF 01C0
        gbc.setState(0x2452, 0xaa1c, 0x6130, 0x1e42, 0x3c, 0x7a98, 0x1, 0x1);
        gbc.writeMem(0x2452, { 0xcf });
        gbc.writeMem(0xaa1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xaa1a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa1a), 0x53);
        EXPECT(gbc.readMem(0xaa1b), 0x24);
        // CF 01C1
        gbc.setState(0x242, 0x845e, 0xfae0, 0x4a96, 0xdf59, 0x4e4c, 0x0, 0x0);
        gbc.writeMem(0x242, { 0xcf });
        gbc.writeMem(0x845c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x845c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x845c), 0x43);
        EXPECT(gbc.readMem(0x845d), 0x2);
        // CF 01C2
        gbc.setState(0xcc9e, 0xd96f, 0xecb0, 0x33d3, 0xe893, 0x336d, 0x1, 0x0);
        gbc.writeMem(0xcc9e, { 0xcf });
        gbc.writeMem(0xd96d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xd96d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc9e), 0xcf);
        EXPECT(gbc.readMem(0xd96d), 0x9f);
        EXPECT(gbc.readMem(0xd96e), 0xcc);
        // CF 01C7
        gbc.setState(0x22ff, 0x89c4, 0xa1e0, 0xd3fd, 0x7b91, 0xe041, 0x0, 0x0);
        gbc.writeMem(0x22ff, { 0xcf });
        gbc.writeMem(0x89c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x89c2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c2), 0x0);
        EXPECT(gbc.readMem(0x89c3), 0x23);
        // CF 01CA
        gbc.setState(0xb3c8, 0xd985, 0x9c30, 0xed3e, 0x592f, 0xbe55, 0x1, 0x0);
        gbc.writeMem(0xb3c8, { 0xcf });
        gbc.writeMem(0xd983, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd983);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c8), 0xcf);
        EXPECT(gbc.readMem(0xd983), 0xc9);
        EXPECT(gbc.readMem(0xd984), 0xb3);
        // CF 01CB
        gbc.setState(0x4652, 0xad73, 0xe4e0, 0x7723, 0x12d9, 0x2ed7, 0x0, 0x0);
        gbc.writeMem(0x4652, { 0xcf });
        gbc.writeMem(0xad71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xad71);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad71), 0x53);
        EXPECT(gbc.readMem(0xad72), 0x46);
        // CF 01CC
        gbc.setState(0x623f, 0x8516, 0x94d0, 0x923, 0x1005, 0x42ef, 0x1, 0x0);
        gbc.writeMem(0x623f, { 0xcf });
        gbc.writeMem(0x8514, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8514);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8514), 0x40);
        EXPECT(gbc.readMem(0x8515), 0x62);
        // CF 01CD
        gbc.setState(0xa860, 0x99c3, 0xf50, 0xf80, 0x656a, 0xdd3, 0x0, 0x1);
        gbc.writeMem(0x99c1, { 0x0, 0x0 });
        gbc.writeMem(0xa860, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x99c1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c1), 0x61);
        EXPECT(gbc.readMem(0x99c2), 0xa8);
        EXPECT(gbc.readMem(0xa860), 0xcf);
        // CF 01CE
        gbc.setState(0x50be, 0xbe37, 0xffb0, 0xfec8, 0xd4cc, 0x4f4c, 0x0, 0x0);
        gbc.writeMem(0x50be, { 0xcf });
        gbc.writeMem(0xbe35, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbe35);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe35), 0xbf);
        EXPECT(gbc.readMem(0xbe36), 0x50);
        // CF 01CF
        gbc.setState(0x49da, 0xaa79, 0x2ac0, 0x6186, 0x200, 0xb318, 0x0, 0x1);
        gbc.writeMem(0x49da, { 0xcf });
        gbc.writeMem(0xaa77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xaa77);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa77), 0xdb);
        EXPECT(gbc.readMem(0xaa78), 0x49);
        // CF 01D1
        gbc.setState(0x873, 0xfb7f, 0x7320, 0x6609, 0xfbd4, 0x2d27, 0x1, 0x1);
        gbc.writeMem(0x873, { 0xcf });
        gbc.writeMem(0xfb7d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfb7d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb7d), 0x74);
        EXPECT(gbc.readMem(0xfb7e), 0x8);
        // CF 01D2
        gbc.setState(0x3e9e, 0xffaa, 0x1bc0, 0x2017, 0xd95d, 0x5135, 0x0, 0x0);
        gbc.writeMem(0x3e9e, { 0xcf });
        gbc.writeMem(0xffa8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xffa8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xffa8), 0x9f);
        EXPECT(gbc.readMem(0xffa9), 0x3e);
        // CF 01D3
        gbc.setState(0x9ba3, 0xa07a, 0x570, 0xc259, 0x187c, 0xa43e, 0x1, 0x1);
        gbc.writeMem(0x9ba3, { 0xcf });
        gbc.writeMem(0xa078, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa078);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ba3), 0xcf);
        EXPECT(gbc.readMem(0xa078), 0xa4);
        EXPECT(gbc.readMem(0xa079), 0x9b);
        // CF 01D4
        gbc.setState(0x7378, 0x8915, 0x51f0, 0x227c, 0x809a, 0x1a28, 0x0, 0x1);
        gbc.writeMem(0x7378, { 0xcf });
        gbc.writeMem(0x8913, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8913);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8913), 0x79);
        EXPECT(gbc.readMem(0x8914), 0x73);
        // CF 01D5
        gbc.setState(0xd6c, 0xbbd6, 0xd660, 0x7c45, 0x453, 0x6974, 0x1, 0x0);
        gbc.writeMem(0xd6c, { 0xcf });
        gbc.writeMem(0xbbd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbbd4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd4), 0x6d);
        EXPECT(gbc.readMem(0xbbd5), 0xd);
        // CF 01D9
        gbc.setState(0xe370, 0xe37c, 0x8dd0, 0xf183, 0x1a52, 0x9386, 0x1, 0x1);
        gbc.writeMem(0xe370, { 0xcf });
        gbc.writeMem(0xe37a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe37a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe370), 0xcf);
        EXPECT(gbc.readMem(0xe37a), 0x71);
        EXPECT(gbc.readMem(0xe37b), 0xe3);
        // CF 01DA
        gbc.setState(0x2848, 0xa1d3, 0xbe50, 0x4003, 0x9d96, 0x9a76, 0x1, 0x1);
        gbc.writeMem(0x2848, { 0xcf });
        gbc.writeMem(0xa1d1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xa1d1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d1), 0x49);
        EXPECT(gbc.readMem(0xa1d2), 0x28);
        // CF 01DB
        gbc.setState(0x5b25, 0xacc5, 0x7700, 0x5ea6, 0xfed4, 0xa2d0, 0x0, 0x0);
        gbc.writeMem(0x5b25, { 0xcf });
        gbc.writeMem(0xacc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xacc3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacc3), 0x26);
        EXPECT(gbc.readMem(0xacc4), 0x5b);
        // CF 01DC
        gbc.setState(0xc69f, 0x8c28, 0x9a30, 0x67e5, 0x9902, 0xd37b, 0x1, 0x1);
        gbc.writeMem(0x8c26, { 0x0, 0x0 });
        gbc.writeMem(0xc69f, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x8c26);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c26), 0xa0);
        EXPECT(gbc.readMem(0x8c27), 0xc6);
        EXPECT(gbc.readMem(0xc69f), 0xcf);
        // CF 01E5
        gbc.setState(0x752c, 0x9a10, 0x5480, 0x9c52, 0xcaae, 0x8141, 0x0, 0x0);
        gbc.writeMem(0x752c, { 0xcf });
        gbc.writeMem(0x9a0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9a0e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a0e), 0x2d);
        EXPECT(gbc.readMem(0x9a0f), 0x75);
        // CF 01E6
        gbc.setState(0x2614, 0xca2b, 0x7180, 0x915a, 0xc649, 0x21ff, 0x1, 0x0);
        gbc.writeMem(0x2614, { 0xcf });
        gbc.writeMem(0xca29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xca29);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca29), 0x15);
        EXPECT(gbc.readMem(0xca2a), 0x26);
        // CF 01E9
        gbc.setState(0xd4a0, 0xcdef, 0xe970, 0x83e4, 0xd135, 0xe8e6, 0x0, 0x0);
        gbc.writeMem(0xcded, { 0x0, 0x0 });
        gbc.writeMem(0xd4a0, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xcded);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcded), 0xa1);
        EXPECT(gbc.readMem(0xcdee), 0xd4);
        EXPECT(gbc.readMem(0xd4a0), 0xcf);
        // CF 01EB
        gbc.setState(0xea5d, 0xf700, 0x25f0, 0x185d, 0xab30, 0x1f97, 0x1, 0x0);
        gbc.writeMem(0xea5d, { 0xcf });
        gbc.writeMem(0xf6fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf6fe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea5d), 0xcf);
        EXPECT(gbc.readMem(0xf6fe), 0x5e);
        EXPECT(gbc.readMem(0xf6ff), 0xea);
        // CF 01ED
        gbc.setState(0x73f, 0xe7e7, 0xf250, 0xac92, 0x7ebf, 0xb6f3, 0x1, 0x0);
        gbc.writeMem(0x73f, { 0xcf });
        gbc.writeMem(0xe7e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe7e5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7e5), 0x40);
        EXPECT(gbc.readMem(0xe7e6), 0x7);
        // CF 01EE
        gbc.setState(0xccaa, 0xd121, 0xdd50, 0xfbd4, 0x61d6, 0x3a22, 0x0, 0x1);
        gbc.writeMem(0xccaa, { 0xcf });
        gbc.writeMem(0xd11f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd11f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccaa), 0xcf);
        EXPECT(gbc.readMem(0xd11f), 0xab);
        EXPECT(gbc.readMem(0xd120), 0xcc);
        // CF 01F1
        gbc.setState(0x6fbb, 0x9ede, 0x9760, 0x3d8a, 0x94e0, 0x34b7, 0x1, 0x1);
        gbc.writeMem(0x6fbb, { 0xcf });
        gbc.writeMem(0x9edc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9edc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9edc), 0xbc);
        EXPECT(gbc.readMem(0x9edd), 0x6f);
        // CF 01F6
        gbc.setState(0x710e, 0xd38a, 0xfdb0, 0xfd09, 0x7c00, 0xa476, 0x0, 0x0);
        gbc.writeMem(0x710e, { 0xcf });
        gbc.writeMem(0xd388, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd388);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd388), 0xf);
        EXPECT(gbc.readMem(0xd389), 0x71);
        // CF 01F7
        gbc.setState(0x6e21, 0xc7b7, 0x4310, 0x156d, 0x666d, 0x5a7f, 0x1, 0x1);
        gbc.writeMem(0x6e21, { 0xcf });
        gbc.writeMem(0xc7b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc7b5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b5), 0x22);
        EXPECT(gbc.readMem(0xc7b6), 0x6e);
        // CF 01FB
        gbc.setState(0x799c, 0xbe39, 0x65b0, 0x4cd7, 0xea72, 0xe0a5, 0x1, 0x0);
        gbc.writeMem(0x799c, { 0xcf });
        gbc.writeMem(0xbe37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbe37);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe37), 0x9d);
        EXPECT(gbc.readMem(0xbe38), 0x79);
        // CF 01FC
        gbc.setState(0xabb2, 0xcd7b, 0x5f20, 0x65bc, 0xdf69, 0x369f, 0x0, 0x1);
        gbc.writeMem(0xabb2, { 0xcf });
        gbc.writeMem(0xcd79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcd79);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb2), 0xcf);
        EXPECT(gbc.readMem(0xcd79), 0xb3);
        EXPECT(gbc.readMem(0xcd7a), 0xab);
        // CF 01FD
        gbc.setState(0xe2bf, 0x896c, 0xb000, 0x3740, 0xcabb, 0xc84d, 0x0, 0x1);
        gbc.writeMem(0x896a, { 0x0, 0x0 });
        gbc.writeMem(0xe2bf, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x896a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896a), 0xc0);
        EXPECT(gbc.readMem(0x896b), 0xe2);
        EXPECT(gbc.readMem(0xe2bf), 0xcf);
        // CF 01FE
        gbc.setState(0xc771, 0x92db, 0x4070, 0xc8c2, 0xc27f, 0xf924, 0x1, 0x1);
        gbc.writeMem(0x92d9, { 0x0, 0x0 });
        gbc.writeMem(0xc771, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x92d9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d9), 0x72);
        EXPECT(gbc.readMem(0x92da), 0xc7);
        EXPECT(gbc.readMem(0xc771), 0xcf);
        // CF 0201
        gbc.setState(0x538a, 0xfea4, 0xc5f0, 0x60ea, 0x6a57, 0x1615, 0x0, 0x1);
        gbc.writeMem(0x538a, { 0xcf });
        gbc.writeMem(0xfea2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfea2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfea2), 0x8b);
        EXPECT(gbc.readMem(0xfea3), 0x53);
        // CF 0202
        gbc.setState(0x1e03, 0xa3f8, 0xde20, 0x9595, 0x7b98, 0xbfde, 0x0, 0x1);
        gbc.writeMem(0x1e03, { 0xcf });
        gbc.writeMem(0xa3f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa3f6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f6), 0x4);
        EXPECT(gbc.readMem(0xa3f7), 0x1e);
        // CF 0203
        gbc.setState(0x449a, 0xec06, 0x33b0, 0x2369, 0x185a, 0xd3ed, 0x1, 0x0);
        gbc.writeMem(0x449a, { 0xcf });
        gbc.writeMem(0xec04, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xec04);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec04), 0x9b);
        EXPECT(gbc.readMem(0xec05), 0x44);
        // CF 0209
        gbc.setState(0x4d6f, 0x83cd, 0xad10, 0xf85d, 0x47fb, 0x6048, 0x1, 0x0);
        gbc.writeMem(0x4d6f, { 0xcf });
        gbc.writeMem(0x83cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x83cb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83cb), 0x70);
        EXPECT(gbc.readMem(0x83cc), 0x4d);
        // CF 020C
        gbc.setState(0xef9b, 0xfca2, 0x2370, 0x9a31, 0x823d, 0xe313, 0x1, 0x1);
        gbc.writeMem(0xef9b, { 0xcf });
        gbc.writeMem(0xfca0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfca0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef9b), 0xcf);
        EXPECT(gbc.readMem(0xfca0), 0x9c);
        EXPECT(gbc.readMem(0xfca1), 0xef);
        // CF 020D
        gbc.setState(0x8dd4, 0xb432, 0x2160, 0x114d, 0xe5e0, 0x9e87, 0x1, 0x1);
        gbc.writeMem(0x8dd4, { 0xcf });
        gbc.writeMem(0xb430, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb430);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dd4), 0xcf);
        EXPECT(gbc.readMem(0xb430), 0xd5);
        EXPECT(gbc.readMem(0xb431), 0x8d);
        // CF 020E
        gbc.setState(0x2d26, 0x90c5, 0x3ac0, 0x318f, 0x9393, 0x8b5e, 0x1, 0x1);
        gbc.writeMem(0x2d26, { 0xcf });
        gbc.writeMem(0x90c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x90c3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c3), 0x27);
        EXPECT(gbc.readMem(0x90c4), 0x2d);
        // CF 0210
        gbc.setState(0x8425, 0xec5e, 0xb680, 0x5361, 0x7e6c, 0x978f, 0x0, 0x1);
        gbc.writeMem(0x8425, { 0xcf });
        gbc.writeMem(0xec5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xec5c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8425), 0xcf);
        EXPECT(gbc.readMem(0xec5c), 0x26);
        EXPECT(gbc.readMem(0xec5d), 0x84);
        // CF 0214
        gbc.setState(0xac16, 0xa636, 0x66d0, 0x3e29, 0x917f, 0x2731, 0x0, 0x0);
        gbc.writeMem(0xa634, { 0x0, 0x0 });
        gbc.writeMem(0xac16, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xa634);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa634), 0x17);
        EXPECT(gbc.readMem(0xa635), 0xac);
        EXPECT(gbc.readMem(0xac16), 0xcf);
        // CF 0218
        gbc.setState(0x79a5, 0x8973, 0x1260, 0x9b63, 0x4f06, 0x828e, 0x0, 0x1);
        gbc.writeMem(0x79a5, { 0xcf });
        gbc.writeMem(0x8971, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8971);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8971), 0xa6);
        EXPECT(gbc.readMem(0x8972), 0x79);
        // CF 021A
        gbc.setState(0xde49, 0xf153, 0x3af0, 0x2305, 0xaf15, 0x5f0, 0x0, 0x1);
        gbc.writeMem(0xde49, { 0xcf });
        gbc.writeMem(0xf151, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf151);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde49), 0xcf);
        EXPECT(gbc.readMem(0xf151), 0x4a);
        EXPECT(gbc.readMem(0xf152), 0xde);
        // CF 021B
        gbc.setState(0x9036, 0xc81b, 0x1cf0, 0x5aaa, 0x4349, 0xfde, 0x0, 0x0);
        gbc.writeMem(0x9036, { 0xcf });
        gbc.writeMem(0xc819, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc819);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9036), 0xcf);
        EXPECT(gbc.readMem(0xc819), 0x37);
        EXPECT(gbc.readMem(0xc81a), 0x90);
        // CF 021D
        gbc.setState(0xdf8b, 0xcaf8, 0x4580, 0x9c5c, 0x3f49, 0x1d9b, 0x1, 0x0);
        gbc.writeMem(0xcaf6, { 0x0, 0x0 });
        gbc.writeMem(0xdf8b, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcaf6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf6), 0x8c);
        EXPECT(gbc.readMem(0xcaf7), 0xdf);
        EXPECT(gbc.readMem(0xdf8b), 0xcf);
        // CF 021E
        gbc.setState(0x1115, 0xae8d, 0x2190, 0xc2f4, 0x17e3, 0x7995, 0x1, 0x0);
        gbc.writeMem(0x1115, { 0xcf });
        gbc.writeMem(0xae8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xae8b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae8b), 0x16);
        EXPECT(gbc.readMem(0xae8c), 0x11);
        // CF 021F
        gbc.setState(0xb24f, 0xab65, 0x77f0, 0x2ff0, 0x6ea5, 0xff3c, 0x1, 0x0);
        gbc.writeMem(0xab63, { 0x0, 0x0 });
        gbc.writeMem(0xb24f, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xab63);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab63), 0x50);
        EXPECT(gbc.readMem(0xab64), 0xb2);
        EXPECT(gbc.readMem(0xb24f), 0xcf);
        // CF 0221
        gbc.setState(0x6b08, 0xddd6, 0x1e90, 0x2fd6, 0x89e1, 0xff40, 0x0, 0x1);
        gbc.writeMem(0x6b08, { 0xcf });
        gbc.writeMem(0xddd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xddd4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddd4), 0x9);
        EXPECT(gbc.readMem(0xddd5), 0x6b);
        // CF 0223
        gbc.setState(0xad5a, 0xedcd, 0x6fd0, 0x4d97, 0x1bdd, 0x80f9, 0x1, 0x1);
        gbc.writeMem(0xad5a, { 0xcf });
        gbc.writeMem(0xedcb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xedcb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5a), 0xcf);
        EXPECT(gbc.readMem(0xedcb), 0x5b);
        EXPECT(gbc.readMem(0xedcc), 0xad);
        // CF 0224
        gbc.setState(0xc2d8, 0xb692, 0xdc0, 0xd73d, 0xd1da, 0xbd48, 0x0, 0x0);
        gbc.writeMem(0xb690, { 0x0, 0x0 });
        gbc.writeMem(0xc2d8, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb690);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb690), 0xd9);
        EXPECT(gbc.readMem(0xb691), 0xc2);
        EXPECT(gbc.readMem(0xc2d8), 0xcf);
        // CF 0225
        gbc.setState(0x384b, 0xe682, 0x2310, 0x7d86, 0x1187, 0x229d, 0x0, 0x1);
        gbc.writeMem(0x384b, { 0xcf });
        gbc.writeMem(0xe680, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe680);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe680), 0x4c);
        EXPECT(gbc.readMem(0xe681), 0x38);
        // CF 0226
        gbc.setState(0x82e0, 0xd78e, 0xaea0, 0xef8d, 0x2a1d, 0xfbff, 0x0, 0x0);
        gbc.writeMem(0x82e0, { 0xcf });
        gbc.writeMem(0xd78c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd78c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e0), 0xcf);
        EXPECT(gbc.readMem(0xd78c), 0xe1);
        EXPECT(gbc.readMem(0xd78d), 0x82);
        // CF 0229
        gbc.setState(0x2a83, 0x951c, 0xe970, 0x631c, 0xf645, 0xdfda, 0x1, 0x0);
        gbc.writeMem(0x2a83, { 0xcf });
        gbc.writeMem(0x951a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x951a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x951a), 0x84);
        EXPECT(gbc.readMem(0x951b), 0x2a);
        // CF 022B
        gbc.setState(0x24b0, 0xeb8f, 0xb1d0, 0x76e3, 0x9139, 0x9d9e, 0x1, 0x1);
        gbc.writeMem(0x24b0, { 0xcf });
        gbc.writeMem(0xeb8d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xeb8d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb8d), 0xb1);
        EXPECT(gbc.readMem(0xeb8e), 0x24);
        // CF 022F
        gbc.setState(0xbae1, 0xda45, 0x6fd0, 0xee86, 0x9724, 0xac95, 0x1, 0x1);
        gbc.writeMem(0xbae1, { 0xcf });
        gbc.writeMem(0xda43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xda43);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae1), 0xcf);
        EXPECT(gbc.readMem(0xda43), 0xe2);
        EXPECT(gbc.readMem(0xda44), 0xba);
        // CF 0230
        gbc.setState(0x678e, 0x843e, 0x7830, 0x317e, 0x6a9f, 0xe464, 0x1, 0x0);
        gbc.writeMem(0x678e, { 0xcf });
        gbc.writeMem(0x843c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x843c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843c), 0x8f);
        EXPECT(gbc.readMem(0x843d), 0x67);
        // CF 0231
        gbc.setState(0x2842, 0xe13e, 0xe770, 0x749c, 0x77e2, 0xf2e3, 0x0, 0x1);
        gbc.writeMem(0x2842, { 0xcf });
        gbc.writeMem(0xe13c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe13c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13c), 0x43);
        EXPECT(gbc.readMem(0xe13d), 0x28);
        // CF 0233
        gbc.setState(0x41bc, 0xb2b7, 0xe0e0, 0x3c1f, 0x3e1f, 0x8e88, 0x0, 0x1);
        gbc.writeMem(0x41bc, { 0xcf });
        gbc.writeMem(0xb2b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb2b5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2b5), 0xbd);
        EXPECT(gbc.readMem(0xb2b6), 0x41);
        // CF 0234
        gbc.setState(0xc1dc, 0xd42d, 0x5730, 0xda1d, 0x98d, 0x87dd, 0x1, 0x1);
        gbc.writeMem(0xc1dc, { 0xcf });
        gbc.writeMem(0xd42b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd42b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1dc), 0xcf);
        EXPECT(gbc.readMem(0xd42b), 0xdd);
        EXPECT(gbc.readMem(0xd42c), 0xc1);
        // CF 0237
        gbc.setState(0x1731, 0xbffd, 0xe740, 0xcf9a, 0x4980, 0xa6de, 0x0, 0x1);
        gbc.writeMem(0x1731, { 0xcf });
        gbc.writeMem(0xbffb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbffb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffb), 0x32);
        EXPECT(gbc.readMem(0xbffc), 0x17);
        // CF 0239
        gbc.setState(0xe213, 0xe3bf, 0xe5e0, 0xb174, 0xd551, 0xc1e5, 0x1, 0x0);
        gbc.writeMem(0xe213, { 0xcf });
        gbc.writeMem(0xe3bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe3bd);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe213), 0xcf);
        EXPECT(gbc.readMem(0xe3bd), 0x14);
        EXPECT(gbc.readMem(0xe3be), 0xe2);
        // CF 023A
        gbc.setState(0x4aae, 0xa8a4, 0x44e0, 0xdfa7, 0x2407, 0xcb5b, 0x0, 0x0);
        gbc.writeMem(0x4aae, { 0xcf });
        gbc.writeMem(0xa8a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xa8a2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a2), 0xaf);
        EXPECT(gbc.readMem(0xa8a3), 0x4a);
        // CF 023B
        gbc.setState(0xb107, 0xef13, 0x2dc0, 0x1cb3, 0x10bb, 0x594b, 0x1, 0x0);
        gbc.writeMem(0xb107, { 0xcf });
        gbc.writeMem(0xef11, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xef11);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb107), 0xcf);
        EXPECT(gbc.readMem(0xef11), 0x8);
        EXPECT(gbc.readMem(0xef12), 0xb1);
        // CF 023C
        gbc.setState(0xb02, 0xab9c, 0xde20, 0xa185, 0xe2c7, 0xdc3f, 0x1, 0x0);
        gbc.writeMem(0xb02, { 0xcf });
        gbc.writeMem(0xab9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xab9a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab9a), 0x3);
        EXPECT(gbc.readMem(0xab9b), 0xb);
        // CF 023E
        gbc.setState(0xda85, 0xafee, 0x1600, 0x81cd, 0xf7bb, 0x3840, 0x1, 0x1);
        gbc.writeMem(0xafec, { 0x0, 0x0 });
        gbc.writeMem(0xda85, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xafec);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafec), 0x86);
        EXPECT(gbc.readMem(0xafed), 0xda);
        EXPECT(gbc.readMem(0xda85), 0xcf);
        // CF 0242
        gbc.setState(0x2873, 0xa21c, 0x3590, 0xc324, 0xecc4, 0x6bfe, 0x0, 0x0);
        gbc.writeMem(0x2873, { 0xcf });
        gbc.writeMem(0xa21a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa21a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21a), 0x74);
        EXPECT(gbc.readMem(0xa21b), 0x28);
        // CF 0248
        gbc.setState(0xc048, 0x82b4, 0xad20, 0x5c7f, 0x5090, 0x4ceb, 0x1, 0x0);
        gbc.writeMem(0x82b2, { 0x0, 0x0 });
        gbc.writeMem(0xc048, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x82b2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b2), 0x49);
        EXPECT(gbc.readMem(0x82b3), 0xc0);
        EXPECT(gbc.readMem(0xc048), 0xcf);
        // CF 0249
        gbc.setState(0x5e67, 0xb7b7, 0x56d0, 0x8855, 0x3fea, 0xa80f, 0x1, 0x1);
        gbc.writeMem(0x5e67, { 0xcf });
        gbc.writeMem(0xb7b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb7b5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b5), 0x68);
        EXPECT(gbc.readMem(0xb7b6), 0x5e);
        // CF 024E
        gbc.setState(0xc23a, 0xe0c8, 0x3470, 0xe7c, 0xabe3, 0x8b5c, 0x0, 0x0);
        gbc.writeMem(0xc23a, { 0xcf });
        gbc.writeMem(0xe0c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe0c6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23a), 0xcf);
        EXPECT(gbc.readMem(0xe0c6), 0x3b);
        EXPECT(gbc.readMem(0xe0c7), 0xc2);
        // CF 0250
        gbc.setState(0x5822, 0xa190, 0xc950, 0x791c, 0xfa93, 0xcc7d, 0x0, 0x0);
        gbc.writeMem(0x5822, { 0xcf });
        gbc.writeMem(0xa18e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa18e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa18e), 0x23);
        EXPECT(gbc.readMem(0xa18f), 0x58);
        // CF 0251
        gbc.setState(0x3431, 0xcf88, 0x5f20, 0xfe77, 0x58be, 0x5fd6, 0x1, 0x0);
        gbc.writeMem(0x3431, { 0xcf });
        gbc.writeMem(0xcf86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcf86);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf86), 0x32);
        EXPECT(gbc.readMem(0xcf87), 0x34);
        // CF 0255
        gbc.setState(0x2342, 0xb2f8, 0x3b50, 0xa087, 0x5ddb, 0xfa1b, 0x1, 0x0);
        gbc.writeMem(0x2342, { 0xcf });
        gbc.writeMem(0xb2f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb2f6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2f6), 0x43);
        EXPECT(gbc.readMem(0xb2f7), 0x23);
        // CF 0258
        gbc.setState(0xcb49, 0xb9c3, 0xde90, 0x1f4b, 0x4478, 0xa895, 0x1, 0x0);
        gbc.writeMem(0xb9c1, { 0x0, 0x0 });
        gbc.writeMem(0xcb49, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb9c1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c1), 0x4a);
        EXPECT(gbc.readMem(0xb9c2), 0xcb);
        EXPECT(gbc.readMem(0xcb49), 0xcf);
        // CF 0259
        gbc.setState(0x5cd4, 0xa5f3, 0x1a80, 0xf76e, 0xaf36, 0x15ba, 0x1, 0x1);
        gbc.writeMem(0x5cd4, { 0xcf });
        gbc.writeMem(0xa5f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa5f1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f1), 0xd5);
        EXPECT(gbc.readMem(0xa5f2), 0x5c);
        // CF 025A
        gbc.setState(0xa8ce, 0x850e, 0x540, 0xdf54, 0xb30a, 0xd96b, 0x1, 0x0);
        gbc.writeMem(0x850c, { 0x0, 0x0 });
        gbc.writeMem(0xa8ce, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x850c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850c), 0xcf);
        EXPECT(gbc.readMem(0x850d), 0xa8);
        EXPECT(gbc.readMem(0xa8ce), 0xcf);
        // CF 025B
        gbc.setState(0x64d0, 0xe706, 0xd2d0, 0x367f, 0x5865, 0x5274, 0x0, 0x1);
        gbc.writeMem(0x64d0, { 0xcf });
        gbc.writeMem(0xe704, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe704);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe704), 0xd1);
        EXPECT(gbc.readMem(0xe705), 0x64);
        // CF 025E
        gbc.setState(0xbf3c, 0xe75c, 0xb8f0, 0xb662, 0xc551, 0x71e4, 0x0, 0x0);
        gbc.writeMem(0xbf3c, { 0xcf });
        gbc.writeMem(0xe75a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe75a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf3c), 0xcf);
        EXPECT(gbc.readMem(0xe75a), 0x3d);
        EXPECT(gbc.readMem(0xe75b), 0xbf);
        // CF 025F
        gbc.setState(0x5c9f, 0xef5e, 0xd0d0, 0xc1e6, 0xf90, 0xee9b, 0x1, 0x1);
        gbc.writeMem(0x5c9f, { 0xcf });
        gbc.writeMem(0xef5c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xef5c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5c), 0xa0);
        EXPECT(gbc.readMem(0xef5d), 0x5c);
        // CF 0261
        gbc.setState(0x1615, 0xc0f9, 0xbc0, 0x8a67, 0xde0e, 0x4860, 0x1, 0x1);
        gbc.writeMem(0x1615, { 0xcf });
        gbc.writeMem(0xc0f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc0f7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f7), 0x16);
        EXPECT(gbc.readMem(0xc0f8), 0x16);
        // CF 0263
        gbc.setState(0x8685, 0xfdf2, 0x8800, 0x7989, 0x64d3, 0x9ee7, 0x1, 0x1);
        gbc.writeMem(0x8685, { 0xcf });
        gbc.writeMem(0xfdf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfdf0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8685), 0xcf);
        EXPECT(gbc.readMem(0xfdf0), 0x86);
        EXPECT(gbc.readMem(0xfdf1), 0x86);
        // CF 0266
        gbc.setState(0x28aa, 0x8351, 0x1ae0, 0x3531, 0x4a6c, 0x3075, 0x0, 0x0);
        gbc.writeMem(0x28aa, { 0xcf });
        gbc.writeMem(0x834f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x834f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x834f), 0xab);
        EXPECT(gbc.readMem(0x8350), 0x28);
        // CF 0267
        gbc.setState(0xd3b7, 0xf8e2, 0xc5b0, 0xa645, 0xc683, 0x8172, 0x1, 0x1);
        gbc.writeMem(0xd3b7, { 0xcf });
        gbc.writeMem(0xf8e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xf8e0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b7), 0xcf);
        EXPECT(gbc.readMem(0xf8e0), 0xb8);
        EXPECT(gbc.readMem(0xf8e1), 0xd3);
        // CF 0268
        gbc.setState(0x2da0, 0xb8b4, 0xcfc0, 0x77ab, 0x3269, 0xa849, 0x0, 0x0);
        gbc.writeMem(0x2da0, { 0xcf });
        gbc.writeMem(0xb8b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb8b2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b2), 0xa1);
        EXPECT(gbc.readMem(0xb8b3), 0x2d);
        // CF 026C
        gbc.setState(0x67f2, 0xcedc, 0xc290, 0xa1d7, 0xc5f3, 0x1252, 0x1, 0x0);
        gbc.writeMem(0x67f2, { 0xcf });
        gbc.writeMem(0xceda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xceda);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceda), 0xf3);
        EXPECT(gbc.readMem(0xcedb), 0x67);
        // CF 026D
        gbc.setState(0xc9e5, 0xd04b, 0x16b0, 0x68d2, 0x7362, 0x534c, 0x0, 0x0);
        gbc.writeMem(0xc9e5, { 0xcf });
        gbc.writeMem(0xd049, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xd049);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e5), 0xcf);
        EXPECT(gbc.readMem(0xd049), 0xe6);
        EXPECT(gbc.readMem(0xd04a), 0xc9);
        // CF 026E
        gbc.setState(0x7277, 0xa818, 0xdab0, 0x6f9a, 0x4c71, 0x45ed, 0x1, 0x1);
        gbc.writeMem(0x7277, { 0xcf });
        gbc.writeMem(0xa816, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa816);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa816), 0x78);
        EXPECT(gbc.readMem(0xa817), 0x72);
        // CF 0271
        gbc.setState(0x7208, 0xa5c7, 0xcb90, 0x5897, 0x3aac, 0x2545, 0x0, 0x0);
        gbc.writeMem(0x7208, { 0xcf });
        gbc.writeMem(0xa5c5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa5c5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c5), 0x9);
        EXPECT(gbc.readMem(0xa5c6), 0x72);
        // CF 0276
        gbc.setState(0x4832, 0x856a, 0x5390, 0x527, 0x78fd, 0x5875, 0x0, 0x0);
        gbc.writeMem(0x4832, { 0xcf });
        gbc.writeMem(0x8568, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8568);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8568), 0x33);
        EXPECT(gbc.readMem(0x8569), 0x48);
        // CF 027B
        gbc.setState(0x39bb, 0x92e3, 0xa6c0, 0x33b, 0x2522, 0x6ebc, 0x0, 0x1);
        gbc.writeMem(0x39bb, { 0xcf });
        gbc.writeMem(0x92e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x92e1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e1), 0xbc);
        EXPECT(gbc.readMem(0x92e2), 0x39);
        // CF 027D
        gbc.setState(0x791a, 0x9813, 0xb250, 0xb073, 0x1f20, 0x6bb6, 0x0, 0x0);
        gbc.writeMem(0x791a, { 0xcf });
        gbc.writeMem(0x9811, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9811);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9811), 0x1b);
        EXPECT(gbc.readMem(0x9812), 0x79);
        // CF 027E
        gbc.setState(0xa35a, 0xe4ce, 0x9fb0, 0x8fa1, 0x1f8e, 0xd127, 0x1, 0x1);
        gbc.writeMem(0xa35a, { 0xcf });
        gbc.writeMem(0xe4cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xe4cc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35a), 0xcf);
        EXPECT(gbc.readMem(0xe4cc), 0x5b);
        EXPECT(gbc.readMem(0xe4cd), 0xa3);
        // CF 0280
        gbc.setState(0x286a, 0xf24b, 0x590, 0x3bc1, 0x9c22, 0x45d9, 0x0, 0x1);
        gbc.writeMem(0x286a, { 0xcf });
        gbc.writeMem(0xf249, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf249);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf249), 0x6b);
        EXPECT(gbc.readMem(0xf24a), 0x28);
        // CF 0282
        gbc.setState(0x5182, 0xbd50, 0xe900, 0x7216, 0xbdea, 0xba10, 0x1, 0x0);
        gbc.writeMem(0x5182, { 0xcf });
        gbc.writeMem(0xbd4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xbd4e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4e), 0x83);
        EXPECT(gbc.readMem(0xbd4f), 0x51);
        // CF 0286
        gbc.setState(0x86b6, 0xfe08, 0x6fa0, 0x16da, 0xd976, 0xc8a3, 0x1, 0x1);
        gbc.writeMem(0x86b6, { 0xcf });
        gbc.writeMem(0xfe06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfe06);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86b6), 0xcf);
        EXPECT(gbc.readMem(0xfe06), 0xb7);
        EXPECT(gbc.readMem(0xfe07), 0x86);
        // CF 0287
        gbc.setState(0x4150, 0xd7a5, 0xde0, 0xe522, 0x76db, 0x46ed, 0x1, 0x1);
        gbc.writeMem(0x4150, { 0xcf });
        gbc.writeMem(0xd7a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd7a3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a3), 0x51);
        EXPECT(gbc.readMem(0xd7a4), 0x41);
        // CF 028A
        gbc.setState(0xb6f2, 0xfc24, 0x3d0, 0x89f5, 0x2789, 0xf6d3, 0x1, 0x0);
        gbc.writeMem(0xb6f2, { 0xcf });
        gbc.writeMem(0xfc22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xfc22);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f2), 0xcf);
        EXPECT(gbc.readMem(0xfc22), 0xf3);
        EXPECT(gbc.readMem(0xfc23), 0xb6);
        // CF 028D
        gbc.setState(0x5231, 0xb082, 0xa5e0, 0xda13, 0x7f41, 0x2d87, 0x1, 0x1);
        gbc.writeMem(0x5231, { 0xcf });
        gbc.writeMem(0xb080, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb080);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb080), 0x32);
        EXPECT(gbc.readMem(0xb081), 0x52);
        // CF 028E
        gbc.setState(0xa7be, 0xa63f, 0x6f70, 0x1aea, 0xc5e1, 0xe2e7, 0x1, 0x0);
        gbc.writeMem(0xa63d, { 0x0, 0x0 });
        gbc.writeMem(0xa7be, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa63d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63d), 0xbf);
        EXPECT(gbc.readMem(0xa63e), 0xa7);
        EXPECT(gbc.readMem(0xa7be), 0xcf);
        // CF 0290
        gbc.setState(0x8d0, 0xa6b6, 0x84f0, 0xa95b, 0xf59d, 0x5246, 0x0, 0x1);
        gbc.writeMem(0x8d0, { 0xcf });
        gbc.writeMem(0xa6b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa6b4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b4), 0xd1);
        EXPECT(gbc.readMem(0xa6b5), 0x8);
        // CF 0291
        gbc.setState(0x6b08, 0xec85, 0xca10, 0x4b86, 0xfd22, 0x873d, 0x0, 0x0);
        gbc.writeMem(0x6b08, { 0xcf });
        gbc.writeMem(0xec83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xec83);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec83), 0x9);
        EXPECT(gbc.readMem(0xec84), 0x6b);
        // CF 0292
        gbc.setState(0x3a86, 0x8fbf, 0xf680, 0x14cb, 0x2c93, 0xf45f, 0x0, 0x0);
        gbc.writeMem(0x3a86, { 0xcf });
        gbc.writeMem(0x8fbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8fbd);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fbd), 0x87);
        EXPECT(gbc.readMem(0x8fbe), 0x3a);
        // CF 0294
        gbc.setState(0xba11, 0x8c32, 0x9e90, 0x1da5, 0x9a6, 0xa219, 0x1, 0x0);
        gbc.writeMem(0x8c30, { 0x0, 0x0 });
        gbc.writeMem(0xba11, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8c30);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c30), 0x12);
        EXPECT(gbc.readMem(0x8c31), 0xba);
        EXPECT(gbc.readMem(0xba11), 0xcf);
        // CF 0295
        gbc.setState(0x87c2, 0xd1ee, 0x6eb0, 0x20da, 0x5c6, 0x732d, 0x0, 0x0);
        gbc.writeMem(0x87c2, { 0xcf });
        gbc.writeMem(0xd1ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd1ec);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c2), 0xcf);
        EXPECT(gbc.readMem(0xd1ec), 0xc3);
        EXPECT(gbc.readMem(0xd1ed), 0x87);
        // CF 029A
        gbc.setState(0x3ef0, 0xbc69, 0xaa60, 0x8c67, 0x43f, 0xed9a, 0x1, 0x0);
        gbc.writeMem(0x3ef0, { 0xcf });
        gbc.writeMem(0xbc67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbc67);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc67), 0xf1);
        EXPECT(gbc.readMem(0xbc68), 0x3e);
        // CF 029F
        gbc.setState(0x6cf, 0xbc7c, 0x3db0, 0xcddc, 0xf92e, 0xcb29, 0x1, 0x1);
        gbc.writeMem(0x6cf, { 0xcf });
        gbc.writeMem(0xbc7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbc7a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc7a), 0xd0);
        EXPECT(gbc.readMem(0xbc7b), 0x6);
        // CF 02A2
        gbc.setState(0xeefd, 0x8051, 0xb510, 0xc758, 0x3158, 0xcc88, 0x1, 0x0);
        gbc.writeMem(0x804f, { 0x0, 0x0 });
        gbc.writeMem(0xeefd, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x804f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804f), 0xfe);
        EXPECT(gbc.readMem(0x8050), 0xee);
        EXPECT(gbc.readMem(0xeefd), 0xcf);
        // CF 02A3
        gbc.setState(0x6cdf, 0xe7fa, 0x8200, 0xd1de, 0x9af1, 0x7dda, 0x0, 0x1);
        gbc.writeMem(0x6cdf, { 0xcf });
        gbc.writeMem(0xe7f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe7f8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f8), 0xe0);
        EXPECT(gbc.readMem(0xe7f9), 0x6c);
        // CF 02A4
        gbc.setState(0x837b, 0xd89b, 0xab30, 0x5365, 0x6bac, 0x40c1, 0x1, 0x1);
        gbc.writeMem(0x837b, { 0xcf });
        gbc.writeMem(0xd899, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd899);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x837b), 0xcf);
        EXPECT(gbc.readMem(0xd899), 0x7c);
        EXPECT(gbc.readMem(0xd89a), 0x83);
        // CF 02A5
        gbc.setState(0x61f, 0xa4a6, 0x89b0, 0x18a3, 0x79ef, 0x49a0, 0x0, 0x1);
        gbc.writeMem(0x61f, { 0xcf });
        gbc.writeMem(0xa4a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa4a4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a4), 0x20);
        EXPECT(gbc.readMem(0xa4a5), 0x6);
        // CF 02A6
        gbc.setState(0x4c20, 0xcc5b, 0xf310, 0x6b72, 0x8a6, 0xb292, 0x0, 0x1);
        gbc.writeMem(0x4c20, { 0xcf });
        gbc.writeMem(0xcc59, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcc59);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc59), 0x21);
        EXPECT(gbc.readMem(0xcc5a), 0x4c);
        // CF 02A7
        gbc.setState(0xea80, 0x9390, 0xf960, 0xfb87, 0xdaa, 0xfd83, 0x1, 0x1);
        gbc.writeMem(0x938e, { 0x0, 0x0 });
        gbc.writeMem(0xea80, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x938e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938e), 0x81);
        EXPECT(gbc.readMem(0x938f), 0xea);
        EXPECT(gbc.readMem(0xea80), 0xcf);
        // CF 02A9
        gbc.setState(0x49b9, 0x844f, 0x3990, 0x9170, 0x1477, 0x1ceb, 0x0, 0x0);
        gbc.writeMem(0x49b9, { 0xcf });
        gbc.writeMem(0x844d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x844d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x844d), 0xba);
        EXPECT(gbc.readMem(0x844e), 0x49);
        // CF 02AA
        gbc.setState(0xce64, 0xd1e7, 0x530, 0x6a18, 0x96ab, 0x5f09, 0x0, 0x0);
        gbc.writeMem(0xce64, { 0xcf });
        gbc.writeMem(0xd1e5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xd1e5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce64), 0xcf);
        EXPECT(gbc.readMem(0xd1e5), 0x65);
        EXPECT(gbc.readMem(0xd1e6), 0xce);
        // CF 02AC
        gbc.setState(0xc294, 0xcf89, 0xc50, 0xc2e6, 0x2558, 0xe5cd, 0x1, 0x1);
        gbc.writeMem(0xc294, { 0xcf });
        gbc.writeMem(0xcf87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xcf87);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc294), 0xcf);
        EXPECT(gbc.readMem(0xcf87), 0x95);
        EXPECT(gbc.readMem(0xcf88), 0xc2);
        // CF 02AE
        gbc.setState(0x5b3a, 0x8bc2, 0x5c00, 0x63ae, 0xb618, 0xb707, 0x0, 0x0);
        gbc.writeMem(0x5b3a, { 0xcf });
        gbc.writeMem(0x8bc0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8bc0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc0), 0x3b);
        EXPECT(gbc.readMem(0x8bc1), 0x5b);
        // CF 02AF
        gbc.setState(0x620d, 0xea8d, 0x4b90, 0x6747, 0xde70, 0x89de, 0x1, 0x1);
        gbc.writeMem(0x620d, { 0xcf });
        gbc.writeMem(0xea8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xea8b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea8b), 0xe);
        EXPECT(gbc.readMem(0xea8c), 0x62);
        // CF 02B1
        gbc.setState(0x87e9, 0xb1ec, 0x5a50, 0xa6d1, 0x707a, 0x10e0, 0x0, 0x0);
        gbc.writeMem(0x87e9, { 0xcf });
        gbc.writeMem(0xb1ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb1ea);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e9), 0xcf);
        EXPECT(gbc.readMem(0xb1ea), 0xea);
        EXPECT(gbc.readMem(0xb1eb), 0x87);
        // CF 02B2
        gbc.setState(0xd5ae, 0xd500, 0xbf30, 0xefc, 0x24e4, 0xca45, 0x1, 0x0);
        gbc.writeMem(0xd4fe, { 0x0, 0x0 });
        gbc.writeMem(0xd5ae, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd4fe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4fe), 0xaf);
        EXPECT(gbc.readMem(0xd4ff), 0xd5);
        EXPECT(gbc.readMem(0xd5ae), 0xcf);
        // CF 02B5
        gbc.setState(0x1ec3, 0xee6d, 0x2460, 0x42dd, 0x1c4a, 0xb5d3, 0x0, 0x0);
        gbc.writeMem(0x1ec3, { 0xcf });
        gbc.writeMem(0xee6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xee6b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6b), 0xc4);
        EXPECT(gbc.readMem(0xee6c), 0x1e);
        // CF 02B8
        gbc.setState(0xa18d, 0xf81e, 0xff60, 0x60c3, 0xd313, 0xb235, 0x1, 0x0);
        gbc.writeMem(0xa18d, { 0xcf });
        gbc.writeMem(0xf81c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf81c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18d), 0xcf);
        EXPECT(gbc.readMem(0xf81c), 0x8e);
        EXPECT(gbc.readMem(0xf81d), 0xa1);
        // CF 02BB
        gbc.setState(0xd88e, 0x8614, 0x41c0, 0x84e6, 0x748e, 0xec90, 0x1, 0x0);
        gbc.writeMem(0x8612, { 0x0, 0x0 });
        gbc.writeMem(0xd88e, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8612);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8612), 0x8f);
        EXPECT(gbc.readMem(0x8613), 0xd8);
        EXPECT(gbc.readMem(0xd88e), 0xcf);
        // CF 02BC
        gbc.setState(0x9e48, 0x9db7, 0x2f70, 0xa858, 0x9ddc, 0xfcf2, 0x0, 0x0);
        gbc.writeMem(0x9db5, { 0x0, 0x0 });
        gbc.writeMem(0x9e48, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9db5);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db5), 0x49);
        EXPECT(gbc.readMem(0x9db6), 0x9e);
        EXPECT(gbc.readMem(0x9e48), 0xcf);
        // CF 02BD
        gbc.setState(0xca, 0xb744, 0xefc0, 0x43f1, 0x6228, 0x1f3b, 0x0, 0x0);
        gbc.writeMem(0xca, { 0xcf });
        gbc.writeMem(0xb742, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb742);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb742), 0xcb);
        EXPECT(gbc.readMem(0xb743), 0x0);
        // CF 02BE
        gbc.setState(0x3369, 0xa379, 0xb660, 0x82d6, 0xbebc, 0x8534, 0x1, 0x0);
        gbc.writeMem(0x3369, { 0xcf });
        gbc.writeMem(0xa377, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa377);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa377), 0x6a);
        EXPECT(gbc.readMem(0xa378), 0x33);
        // CF 02BF
        gbc.setState(0x15eb, 0xa202, 0x2660, 0x28d6, 0xead, 0x3f62, 0x0, 0x0);
        gbc.writeMem(0x15eb, { 0xcf });
        gbc.writeMem(0xa200, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa200);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa200), 0xec);
        EXPECT(gbc.readMem(0xa201), 0x15);
        // CF 02C1
        gbc.setState(0x51f8, 0xfc49, 0x5600, 0xc0d3, 0x5680, 0x410d, 0x1, 0x0);
        gbc.writeMem(0x51f8, { 0xcf });
        gbc.writeMem(0xfc47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfc47);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc47), 0xf9);
        EXPECT(gbc.readMem(0xfc48), 0x51);
        // CF 02C2
        gbc.setState(0xc106, 0x93ae, 0x5850, 0x7c1f, 0xa096, 0x851b, 0x0, 0x1);
        gbc.writeMem(0x93ac, { 0x0, 0x0 });
        gbc.writeMem(0xc106, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x93ac);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ac), 0x7);
        EXPECT(gbc.readMem(0x93ad), 0xc1);
        EXPECT(gbc.readMem(0xc106), 0xcf);
        // CF 02C4
        gbc.setState(0xac19, 0xa29c, 0xf0a0, 0xd181, 0x29a3, 0x5a83, 0x1, 0x0);
        gbc.writeMem(0xa29a, { 0x0, 0x0 });
        gbc.writeMem(0xac19, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa29a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29a), 0x1a);
        EXPECT(gbc.readMem(0xa29b), 0xac);
        EXPECT(gbc.readMem(0xac19), 0xcf);
        // CF 02C5
        gbc.setState(0x55dd, 0xb556, 0x2070, 0x913a, 0xa004, 0x5f72, 0x0, 0x1);
        gbc.writeMem(0x55dd, { 0xcf });
        gbc.writeMem(0xb554, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb554);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb554), 0xde);
        EXPECT(gbc.readMem(0xb555), 0x55);
        // CF 02C8
        gbc.setState(0x85b8, 0xf3a1, 0x89c0, 0x1e95, 0x72d7, 0x7b49, 0x0, 0x0);
        gbc.writeMem(0x85b8, { 0xcf });
        gbc.writeMem(0xf39f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf39f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b8), 0xcf);
        EXPECT(gbc.readMem(0xf39f), 0xb9);
        EXPECT(gbc.readMem(0xf3a0), 0x85);
        // CF 02CA
        gbc.setState(0x14bd, 0x8032, 0x21b0, 0x1c55, 0x45ee, 0xe75b, 0x0, 0x0);
        gbc.writeMem(0x14bd, { 0xcf });
        gbc.writeMem(0x8030, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8030);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8030), 0xbe);
        EXPECT(gbc.readMem(0x8031), 0x14);
        // CF 02CB
        gbc.setState(0x8c99, 0xeaeb, 0xdb80, 0xe1f4, 0x761c, 0x1790, 0x0, 0x1);
        gbc.writeMem(0x8c99, { 0xcf });
        gbc.writeMem(0xeae9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xeae9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c99), 0xcf);
        EXPECT(gbc.readMem(0xeae9), 0x9a);
        EXPECT(gbc.readMem(0xeaea), 0x8c);
        // CF 02D0
        gbc.setState(0xd3fa, 0x9568, 0x3a00, 0x2f57, 0xa7e3, 0x2c4b, 0x1, 0x0);
        gbc.writeMem(0x9566, { 0x0, 0x0 });
        gbc.writeMem(0xd3fa, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9566);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9566), 0xfb);
        EXPECT(gbc.readMem(0x9567), 0xd3);
        EXPECT(gbc.readMem(0xd3fa), 0xcf);
        // CF 02D2
        gbc.setState(0x37a4, 0xd736, 0x89a0, 0x9834, 0xc02e, 0xd39c, 0x0, 0x1);
        gbc.writeMem(0x37a4, { 0xcf });
        gbc.writeMem(0xd734, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd734);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd734), 0xa5);
        EXPECT(gbc.readMem(0xd735), 0x37);
        // CF 02D4
        gbc.setState(0x642d, 0xa670, 0xac00, 0xc0fb, 0x243d, 0x4614, 0x0, 0x1);
        gbc.writeMem(0x642d, { 0xcf });
        gbc.writeMem(0xa66e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa66e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa66e), 0x2e);
        EXPECT(gbc.readMem(0xa66f), 0x64);
        // CF 02D6
        gbc.setState(0x65a9, 0x807b, 0xed0, 0x28c3, 0xe309, 0x3c77, 0x0, 0x1);
        gbc.writeMem(0x65a9, { 0xcf });
        gbc.writeMem(0x8079, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8079);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8079), 0xaa);
        EXPECT(gbc.readMem(0x807a), 0x65);
        // CF 02D7
        gbc.setState(0xb1db, 0xdfa5, 0x8960, 0x44b4, 0x5f4b, 0xf3a8, 0x1, 0x0);
        gbc.writeMem(0xb1db, { 0xcf });
        gbc.writeMem(0xdfa3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdfa3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1db), 0xcf);
        EXPECT(gbc.readMem(0xdfa3), 0xdc);
        EXPECT(gbc.readMem(0xdfa4), 0xb1);
        // CF 02DB
        gbc.setState(0x869f, 0xe44f, 0x3d80, 0xdeaa, 0x32e5, 0x4c77, 0x1, 0x0);
        gbc.writeMem(0x869f, { 0xcf });
        gbc.writeMem(0xe44d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe44d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x869f), 0xcf);
        EXPECT(gbc.readMem(0xe44d), 0xa0);
        EXPECT(gbc.readMem(0xe44e), 0x86);
        // CF 02DF
        gbc.setState(0xb18c, 0xc966, 0x1830, 0xde50, 0x8ff8, 0x40ce, 0x1, 0x0);
        gbc.writeMem(0xb18c, { 0xcf });
        gbc.writeMem(0xc964, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xc964);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb18c), 0xcf);
        EXPECT(gbc.readMem(0xc964), 0x8d);
        EXPECT(gbc.readMem(0xc965), 0xb1);
        // CF 02E3
        gbc.setState(0x6af6, 0xe81e, 0xa80, 0xd8e3, 0x92ea, 0xa8b1, 0x1, 0x1);
        gbc.writeMem(0x6af6, { 0xcf });
        gbc.writeMem(0xe81c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe81c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81c), 0xf7);
        EXPECT(gbc.readMem(0xe81d), 0x6a);
        // CF 02E6
        gbc.setState(0x61ca, 0x9a4f, 0x3140, 0xd48c, 0x537e, 0x1904, 0x1, 0x0);
        gbc.writeMem(0x61ca, { 0xcf });
        gbc.writeMem(0x9a4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9a4d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a4d), 0xcb);
        EXPECT(gbc.readMem(0x9a4e), 0x61);
        // CF 02E7
        gbc.setState(0x9744, 0xb5e3, 0x2ad0, 0xb2d5, 0xdde0, 0xcde1, 0x0, 0x1);
        gbc.writeMem(0x9744, { 0xcf });
        gbc.writeMem(0xb5e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb5e1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9744), 0xcf);
        EXPECT(gbc.readMem(0xb5e1), 0x45);
        EXPECT(gbc.readMem(0xb5e2), 0x97);
        // CF 02E9
        gbc.setState(0x581a, 0xe08a, 0xc350, 0xcdc3, 0x21d6, 0x6d1a, 0x1, 0x0);
        gbc.writeMem(0x581a, { 0xcf });
        gbc.writeMem(0xe088, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe088);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe088), 0x1b);
        EXPECT(gbc.readMem(0xe089), 0x58);
        // CF 02EA
        gbc.setState(0xa69, 0x8908, 0x240, 0x41ea, 0x6467, 0x34b5, 0x1, 0x1);
        gbc.writeMem(0xa69, { 0xcf });
        gbc.writeMem(0x8906, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8906);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8906), 0x6a);
        EXPECT(gbc.readMem(0x8907), 0xa);
        // CF 02EC
        gbc.setState(0x5f42, 0x8558, 0x6fc0, 0x58e9, 0xd46, 0x6574, 0x1, 0x0);
        gbc.writeMem(0x5f42, { 0xcf });
        gbc.writeMem(0x8556, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x8556);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8556), 0x43);
        EXPECT(gbc.readMem(0x8557), 0x5f);
        // CF 02ED
        gbc.setState(0x3171, 0xf246, 0xa990, 0x29fe, 0xd406, 0xec68, 0x0, 0x0);
        gbc.writeMem(0x3171, { 0xcf });
        gbc.writeMem(0xf244, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf244);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf244), 0x72);
        EXPECT(gbc.readMem(0xf245), 0x31);
        // CF 02EE
        gbc.setState(0x9b26, 0x9cc4, 0xf3b0, 0xa3aa, 0x4e89, 0x70cb, 0x1, 0x0);
        gbc.writeMem(0x9b26, { 0xcf });
        gbc.writeMem(0x9cc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9cc2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b26), 0xcf);
        EXPECT(gbc.readMem(0x9cc2), 0x27);
        EXPECT(gbc.readMem(0x9cc3), 0x9b);
        // CF 02F0
        gbc.setState(0xa0b, 0xda9c, 0x2320, 0x620e, 0xa958, 0xe03e, 0x0, 0x0);
        gbc.writeMem(0xa0b, { 0xcf });
        gbc.writeMem(0xda9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xda9a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda9a), 0xc);
        EXPECT(gbc.readMem(0xda9b), 0xa);
        // CF 02F3
        gbc.setState(0x9c34, 0xbdd6, 0x5760, 0x20e, 0x3124, 0xc241, 0x0, 0x0);
        gbc.writeMem(0x9c34, { 0xcf });
        gbc.writeMem(0xbdd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbdd4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c34), 0xcf);
        EXPECT(gbc.readMem(0xbdd4), 0x35);
        EXPECT(gbc.readMem(0xbdd5), 0x9c);
        // CF 02F4
        gbc.setState(0xe507, 0xc0e1, 0x1e40, 0x5009, 0x6193, 0xe6f5, 0x0, 0x0);
        gbc.writeMem(0xc0df, { 0x0, 0x0 });
        gbc.writeMem(0xe507, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc0df);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0df), 0x8);
        EXPECT(gbc.readMem(0xc0e0), 0xe5);
        EXPECT(gbc.readMem(0xe507), 0xcf);
        // CF 02F6
        gbc.setState(0xe2a5, 0xa5a6, 0x1b00, 0xf1cc, 0x9c4, 0xb26f, 0x1, 0x0);
        gbc.writeMem(0xa5a4, { 0x0, 0x0 });
        gbc.writeMem(0xe2a5, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa5a4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5a4), 0xa6);
        EXPECT(gbc.readMem(0xa5a5), 0xe2);
        EXPECT(gbc.readMem(0xe2a5), 0xcf);
        // CF 02F8
        gbc.setState(0xe9ab, 0x91bd, 0x57e0, 0x883e, 0xd61f, 0xf10f, 0x1, 0x1);
        gbc.writeMem(0x91bb, { 0x0, 0x0 });
        gbc.writeMem(0xe9ab, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x91bb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91bb), 0xac);
        EXPECT(gbc.readMem(0x91bc), 0xe9);
        EXPECT(gbc.readMem(0xe9ab), 0xcf);
        // CF 02F9
        gbc.setState(0xcf3c, 0xfb16, 0xffb0, 0x9307, 0x7953, 0xdf7b, 0x1, 0x0);
        gbc.writeMem(0xcf3c, { 0xcf });
        gbc.writeMem(0xfb14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf3c), 0xcf);
        EXPECT(gbc.readMem(0xfb14), 0x3d);
        EXPECT(gbc.readMem(0xfb15), 0xcf);
        // CF 02FA
        gbc.setState(0x7fa, 0xbeca, 0xa930, 0x848a, 0x41be, 0x3563, 0x0, 0x1);
        gbc.writeMem(0x7fa, { 0xcf });
        gbc.writeMem(0xbec8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xbec8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbec8), 0xfb);
        EXPECT(gbc.readMem(0xbec9), 0x7);
        // CF 0301
        gbc.setState(0xd436, 0xb54d, 0xb1c0, 0x3515, 0x3ba9, 0x665b, 0x1, 0x0);
        gbc.writeMem(0xb54b, { 0x0, 0x0 });
        gbc.writeMem(0xd436, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb54b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb54b), 0x37);
        EXPECT(gbc.readMem(0xb54c), 0xd4);
        EXPECT(gbc.readMem(0xd436), 0xcf);
        // CF 0302
        gbc.setState(0xce98, 0xf63b, 0x1d40, 0x5b5f, 0x4fbb, 0xd197, 0x1, 0x0);
        gbc.writeMem(0xce98, { 0xcf });
        gbc.writeMem(0xf639, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf639);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce98), 0xcf);
        EXPECT(gbc.readMem(0xf639), 0x99);
        EXPECT(gbc.readMem(0xf63a), 0xce);
        // CF 0304
        gbc.setState(0x13b2, 0xcee8, 0x3440, 0x5408, 0x9012, 0xe2ac, 0x0, 0x0);
        gbc.writeMem(0x13b2, { 0xcf });
        gbc.writeMem(0xcee6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xcee6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee6), 0xb3);
        EXPECT(gbc.readMem(0xcee7), 0x13);
        // CF 0305
        gbc.setState(0x128f, 0xa944, 0x81b0, 0xbb9b, 0x69c3, 0x8b25, 0x1, 0x0);
        gbc.writeMem(0x128f, { 0xcf });
        gbc.writeMem(0xa942, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa942);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa942), 0x90);
        EXPECT(gbc.readMem(0xa943), 0x12);
        // CF 0309
        gbc.setState(0xe54d, 0xa73e, 0x6810, 0xb2c8, 0x3495, 0x303b, 0x0, 0x0);
        gbc.writeMem(0xa73c, { 0x0, 0x0 });
        gbc.writeMem(0xe54d, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa73c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa73c), 0x4e);
        EXPECT(gbc.readMem(0xa73d), 0xe5);
        EXPECT(gbc.readMem(0xe54d), 0xcf);
        // CF 030A
        gbc.setState(0x78c2, 0xe5a6, 0x91b0, 0xee99, 0x31db, 0xd801, 0x1, 0x1);
        gbc.writeMem(0x78c2, { 0xcf });
        gbc.writeMem(0xe5a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xe5a4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a4), 0xc3);
        EXPECT(gbc.readMem(0xe5a5), 0x78);
        // CF 030E
        gbc.setState(0x42eb, 0xaa8c, 0xdcd0, 0x165a, 0x9a3c, 0x3c2a, 0x1, 0x1);
        gbc.writeMem(0x42eb, { 0xcf });
        gbc.writeMem(0xaa8a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xaa8a);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa8a), 0xec);
        EXPECT(gbc.readMem(0xaa8b), 0x42);
        // CF 030F
        gbc.setState(0x5677, 0xd433, 0x35c0, 0x654e, 0xde06, 0x8ee7, 0x1, 0x1);
        gbc.writeMem(0x5677, { 0xcf });
        gbc.writeMem(0xd431, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd431);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd431), 0x78);
        EXPECT(gbc.readMem(0xd432), 0x56);
        // CF 0310
        gbc.setState(0x6b4f, 0xc5b6, 0x60f0, 0x42b2, 0xf51, 0xd56d, 0x1, 0x1);
        gbc.writeMem(0x6b4f, { 0xcf });
        gbc.writeMem(0xc5b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc5b4);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b4), 0x50);
        EXPECT(gbc.readMem(0xc5b5), 0x6b);
        // CF 0311
        gbc.setState(0x53c4, 0xe6d1, 0xa950, 0x7dff, 0x4b67, 0x6c42, 0x1, 0x0);
        gbc.writeMem(0x53c4, { 0xcf });
        gbc.writeMem(0xe6cf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe6cf);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6cf), 0xc5);
        EXPECT(gbc.readMem(0xe6d0), 0x53);
        // CF 0314
        gbc.setState(0xed2f, 0x8470, 0x4680, 0x8aae, 0x9a9c, 0xdaef, 0x0, 0x1);
        gbc.writeMem(0x846e, { 0x0, 0x0 });
        gbc.writeMem(0xed2f, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x846e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x846e), 0x30);
        EXPECT(gbc.readMem(0x846f), 0xed);
        EXPECT(gbc.readMem(0xed2f), 0xcf);
        // CF 0316
        gbc.setState(0x56b5, 0xbe5d, 0xba30, 0x1ce8, 0x4749, 0xcc95, 0x1, 0x0);
        gbc.writeMem(0x56b5, { 0xcf });
        gbc.writeMem(0xbe5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbe5b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe5b), 0xb6);
        EXPECT(gbc.readMem(0xbe5c), 0x56);
        // CF 0318
        gbc.setState(0x329, 0x9713, 0x3770, 0x5d54, 0x861, 0x25db, 0x0, 0x0);
        gbc.writeMem(0x329, { 0xcf });
        gbc.writeMem(0x9711, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9711);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9711), 0x2a);
        EXPECT(gbc.readMem(0x9712), 0x3);
        // CF 031B
        gbc.setState(0xb7e5, 0xfb09, 0xdf10, 0xcd0a, 0x7ab0, 0x9d39, 0x1, 0x1);
        gbc.writeMem(0xb7e5, { 0xcf });
        gbc.writeMem(0xfb07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfb07);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e5), 0xcf);
        EXPECT(gbc.readMem(0xfb07), 0xe6);
        EXPECT(gbc.readMem(0xfb08), 0xb7);
        // CF 031C
        gbc.setState(0x92da, 0xaf35, 0x950, 0x8647, 0x3101, 0x2c82, 0x0, 0x1);
        gbc.writeMem(0x92da, { 0xcf });
        gbc.writeMem(0xaf33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xaf33);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92da), 0xcf);
        EXPECT(gbc.readMem(0xaf33), 0xdb);
        EXPECT(gbc.readMem(0xaf34), 0x92);
        // CF 031D
        gbc.setState(0x7ca5, 0xf7da, 0xff80, 0x4c1a, 0x27a9, 0x3a7, 0x1, 0x0);
        gbc.writeMem(0x7ca5, { 0xcf });
        gbc.writeMem(0xf7d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf7d8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7d8), 0xa6);
        EXPECT(gbc.readMem(0xf7d9), 0x7c);
        // CF 0320
        gbc.setState(0xdc15, 0x8a93, 0xafd0, 0x62dc, 0x6ba9, 0x5ad9, 0x1, 0x0);
        gbc.writeMem(0x8a91, { 0x0, 0x0 });
        gbc.writeMem(0xdc15, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8a91);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a91), 0x16);
        EXPECT(gbc.readMem(0x8a92), 0xdc);
        EXPECT(gbc.readMem(0xdc15), 0xcf);
        // CF 0324
        gbc.setState(0xa11c, 0x9ffe, 0xa580, 0xf46f, 0x5d36, 0x9dbe, 0x1, 0x0);
        gbc.writeMem(0x9ffc, { 0x0, 0x0 });
        gbc.writeMem(0xa11c, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9ffc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffc), 0x1d);
        EXPECT(gbc.readMem(0x9ffd), 0xa1);
        EXPECT(gbc.readMem(0xa11c), 0xcf);
        // CF 0325
        gbc.setState(0x185c, 0x862e, 0x4c0, 0x233b, 0x15da, 0x30cf, 0x1, 0x1);
        gbc.writeMem(0x185c, { 0xcf });
        gbc.writeMem(0x862c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x862c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x862c), 0x5d);
        EXPECT(gbc.readMem(0x862d), 0x18);
        // CF 0326
        gbc.setState(0xc2d8, 0xa8c3, 0x1d0, 0x79b9, 0x8127, 0xbc6d, 0x0, 0x1);
        gbc.writeMem(0xa8c1, { 0x0, 0x0 });
        gbc.writeMem(0xc2d8, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa8c1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c1), 0xd9);
        EXPECT(gbc.readMem(0xa8c2), 0xc2);
        EXPECT(gbc.readMem(0xc2d8), 0xcf);
        // CF 0327
        gbc.setState(0x4259, 0x8c3e, 0xd110, 0xd808, 0x1232, 0xe287, 0x0, 0x1);
        gbc.writeMem(0x4259, { 0xcf });
        gbc.writeMem(0x8c3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8c3c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c3c), 0x5a);
        EXPECT(gbc.readMem(0x8c3d), 0x42);
        // CF 032A
        gbc.setState(0x66cc, 0xacb5, 0xfb50, 0x175e, 0x444d, 0x55c2, 0x1, 0x1);
        gbc.writeMem(0x66cc, { 0xcf });
        gbc.writeMem(0xacb3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xacb3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacb3), 0xcd);
        EXPECT(gbc.readMem(0xacb4), 0x66);
        // CF 0332
        gbc.setState(0x2de1, 0xb5fd, 0x53a0, 0x110e, 0x45b4, 0xdd01, 0x0, 0x0);
        gbc.writeMem(0x2de1, { 0xcf });
        gbc.writeMem(0xb5fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb5fb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5fb), 0xe2);
        EXPECT(gbc.readMem(0xb5fc), 0x2d);
        // CF 0333
        gbc.setState(0x756a, 0x824b, 0x3df0, 0x66f5, 0x97c6, 0xf4c2, 0x0, 0x0);
        gbc.writeMem(0x756a, { 0xcf });
        gbc.writeMem(0x8249, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8249);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8249), 0x6b);
        EXPECT(gbc.readMem(0x824a), 0x75);
        // CF 0336
        gbc.setState(0x5265, 0xde12, 0x1e0, 0xf6da, 0x9d34, 0x1d7f, 0x0, 0x0);
        gbc.writeMem(0x5265, { 0xcf });
        gbc.writeMem(0xde10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xde10);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde10), 0x66);
        EXPECT(gbc.readMem(0xde11), 0x52);
        // CF 0338
        gbc.setState(0x2e83, 0xd96f, 0x2cb0, 0x2029, 0x7ad8, 0x4d08, 0x1, 0x1);
        gbc.writeMem(0x2e83, { 0xcf });
        gbc.writeMem(0xd96d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd96d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd96d), 0x84);
        EXPECT(gbc.readMem(0xd96e), 0x2e);
        // CF 0339
        gbc.setState(0x3356, 0xf4b4, 0xfba0, 0xbb01, 0xe4d5, 0x82cd, 0x1, 0x0);
        gbc.writeMem(0x3356, { 0xcf });
        gbc.writeMem(0xf4b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf4b2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4b2), 0x57);
        EXPECT(gbc.readMem(0xf4b3), 0x33);
        // CF 033A
        gbc.setState(0xca59, 0xba00, 0xcef0, 0xeadb, 0x5944, 0x7ba7, 0x1, 0x0);
        gbc.writeMem(0xb9fe, { 0x0, 0x0 });
        gbc.writeMem(0xca59, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb9fe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fe), 0x5a);
        EXPECT(gbc.readMem(0xb9ff), 0xca);
        EXPECT(gbc.readMem(0xca59), 0xcf);
        // CF 033C
        gbc.setState(0xc697, 0xf754, 0xd590, 0x50fd, 0xdc19, 0xb6b4, 0x1, 0x1);
        gbc.writeMem(0xc697, { 0xcf });
        gbc.writeMem(0xf752, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf752);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc697), 0xcf);
        EXPECT(gbc.readMem(0xf752), 0x98);
        EXPECT(gbc.readMem(0xf753), 0xc6);
        // CF 033D
        gbc.setState(0x516, 0xe061, 0xe090, 0x7546, 0x1111, 0x63a0, 0x1, 0x1);
        gbc.writeMem(0x516, { 0xcf });
        gbc.writeMem(0xe05f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe05f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05f), 0x17);
        EXPECT(gbc.readMem(0xe060), 0x5);
        // CF 033E
        gbc.setState(0xee20, 0xf1af, 0xdd50, 0x72b4, 0xddd7, 0xad3, 0x1, 0x0);
        gbc.writeMem(0xee20, { 0xcf });
        gbc.writeMem(0xf1ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf1ad);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee20), 0xcf);
        EXPECT(gbc.readMem(0xf1ad), 0x21);
        EXPECT(gbc.readMem(0xf1ae), 0xee);
        // CF 0341
        gbc.setState(0xde69, 0xbd0a, 0xca50, 0x2731, 0xf99d, 0x563e, 0x1, 0x1);
        gbc.writeMem(0xbd08, { 0x0, 0x0 });
        gbc.writeMem(0xde69, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xbd08);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd08), 0x6a);
        EXPECT(gbc.readMem(0xbd09), 0xde);
        EXPECT(gbc.readMem(0xde69), 0xcf);
        // CF 0342
        gbc.setState(0x411c, 0x8400, 0xedd0, 0x6bc1, 0xfead, 0xbb9c, 0x1, 0x1);
        gbc.writeMem(0x411c, { 0xcf });
        gbc.writeMem(0x83fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x83fe);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83fe), 0x1d);
        EXPECT(gbc.readMem(0x83ff), 0x41);
        // CF 034D
        gbc.setState(0x8ef5, 0xe913, 0x5b60, 0xc61, 0x862d, 0x8700, 0x0, 0x1);
        gbc.writeMem(0x8ef5, { 0xcf });
        gbc.writeMem(0xe911, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe911);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ef5), 0xcf);
        EXPECT(gbc.readMem(0xe911), 0xf6);
        EXPECT(gbc.readMem(0xe912), 0x8e);
        // CF 0350
        gbc.setState(0x1f0f, 0x95f5, 0xc820, 0xcdb, 0x4f75, 0x8d2d, 0x1, 0x0);
        gbc.writeMem(0x1f0f, { 0xcf });
        gbc.writeMem(0x95f3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x95f3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95f3), 0x10);
        EXPECT(gbc.readMem(0x95f4), 0x1f);
        // CF 0352
        gbc.setState(0x1a65, 0xe412, 0x87f0, 0xff04, 0x424f, 0xfdf2, 0x1, 0x0);
        gbc.writeMem(0x1a65, { 0xcf });
        gbc.writeMem(0xe410, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe410);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe410), 0x66);
        EXPECT(gbc.readMem(0xe411), 0x1a);
        // CF 0353
        gbc.setState(0x437b, 0xcfce, 0x9b10, 0xa1b6, 0xcef6, 0x88f7, 0x1, 0x1);
        gbc.writeMem(0x437b, { 0xcf });
        gbc.writeMem(0xcfcc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcfcc);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcc), 0x7c);
        EXPECT(gbc.readMem(0xcfcd), 0x43);
        // CF 0354
        gbc.setState(0x58e3, 0xb9f8, 0xfd60, 0x3213, 0x8e7b, 0x97d, 0x0, 0x0);
        gbc.writeMem(0x58e3, { 0xcf });
        gbc.writeMem(0xb9f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb9f6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f6), 0xe4);
        EXPECT(gbc.readMem(0xb9f7), 0x58);
        // CF 035A
        gbc.setState(0xab65, 0x8255, 0x7c00, 0xcfdb, 0xce7c, 0xafc4, 0x0, 0x1);
        gbc.writeMem(0x8253, { 0x0, 0x0 });
        gbc.writeMem(0xab65, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8253);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8253), 0x66);
        EXPECT(gbc.readMem(0x8254), 0xab);
        EXPECT(gbc.readMem(0xab65), 0xcf);
        // CF 035B
        gbc.setState(0x122f, 0xe37d, 0xdc60, 0x473, 0x1ce, 0x8622, 0x0, 0x1);
        gbc.writeMem(0x122f, { 0xcf });
        gbc.writeMem(0xe37b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe37b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe37b), 0x30);
        EXPECT(gbc.readMem(0xe37c), 0x12);
        // CF 035C
        gbc.setState(0x3a29, 0x90b3, 0xcbf0, 0xe0c0, 0xb654, 0x4602, 0x0, 0x0);
        gbc.writeMem(0x3a29, { 0xcf });
        gbc.writeMem(0x90b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x90b1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b1), 0x2a);
        EXPECT(gbc.readMem(0x90b2), 0x3a);
        // CF 035E
        gbc.setState(0xb306, 0xe21a, 0xcc80, 0xdb13, 0x924f, 0xeec3, 0x1, 0x0);
        gbc.writeMem(0xb306, { 0xcf });
        gbc.writeMem(0xe218, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe218);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0xcf);
        EXPECT(gbc.readMem(0xe218), 0x7);
        EXPECT(gbc.readMem(0xe219), 0xb3);
        // CF 035F
        gbc.setState(0xc435, 0xc0b1, 0x4e20, 0xd37, 0x9b89, 0x51e4, 0x1, 0x0);
        gbc.writeMem(0xc0af, { 0x0, 0x0 });
        gbc.writeMem(0xc435, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc0af);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0af), 0x36);
        EXPECT(gbc.readMem(0xc0b0), 0xc4);
        EXPECT(gbc.readMem(0xc435), 0xcf);
        // CF 0362
        gbc.setState(0x4ace, 0xfe01, 0xfeb0, 0x79a8, 0xf60b, 0x83e5, 0x0, 0x0);
        gbc.writeMem(0x4ace, { 0xcf });
        gbc.writeMem(0xfdff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfdff);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdff), 0xcf);
        EXPECT(gbc.readMem(0xfe00), 0x4a);
        // CF 0365
        gbc.setState(0xc5fb, 0xab36, 0xf490, 0x1848, 0xd3be, 0x79e4, 0x1, 0x1);
        gbc.writeMem(0xab34, { 0x0, 0x0 });
        gbc.writeMem(0xc5fb, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xab34);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab34), 0xfc);
        EXPECT(gbc.readMem(0xab35), 0xc5);
        EXPECT(gbc.readMem(0xc5fb), 0xcf);
        // CF 0368
        gbc.setState(0x5f35, 0xd936, 0xb500, 0x636d, 0xdfb1, 0x2cd1, 0x0, 0x1);
        gbc.writeMem(0x5f35, { 0xcf });
        gbc.writeMem(0xd934, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd934);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd934), 0x36);
        EXPECT(gbc.readMem(0xd935), 0x5f);
        // CF 0369
        gbc.setState(0xb4f, 0xed80, 0x5380, 0xff, 0xb0c9, 0xa658, 0x1, 0x0);
        gbc.writeMem(0xb4f, { 0xcf });
        gbc.writeMem(0xed7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xed7e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed7e), 0x50);
        EXPECT(gbc.readMem(0xed7f), 0xb);
        // CF 036B
        gbc.setState(0xb37a, 0x90a0, 0x3460, 0x9e40, 0xe9c, 0x599f, 0x1, 0x1);
        gbc.writeMem(0x909e, { 0x0, 0x0 });
        gbc.writeMem(0xb37a, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x909e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909e), 0x7b);
        EXPECT(gbc.readMem(0x909f), 0xb3);
        EXPECT(gbc.readMem(0xb37a), 0xcf);
        // CF 036C
        gbc.setState(0x6516, 0xe4c3, 0x5490, 0xdfa9, 0xaa50, 0xb735, 0x0, 0x0);
        gbc.writeMem(0x6516, { 0xcf });
        gbc.writeMem(0xe4c1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe4c1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c1), 0x17);
        EXPECT(gbc.readMem(0xe4c2), 0x65);
        // CF 036E
        gbc.setState(0x76c7, 0xb6df, 0xfdc0, 0xfd37, 0xca8b, 0xe447, 0x1, 0x1);
        gbc.writeMem(0x76c7, { 0xcf });
        gbc.writeMem(0xb6dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb6dd);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6dd), 0xc8);
        EXPECT(gbc.readMem(0xb6de), 0x76);
        // CF 036F
        gbc.setState(0x90b1, 0xcc61, 0x52b0, 0xc134, 0x8031, 0x5814, 0x0, 0x0);
        gbc.writeMem(0x90b1, { 0xcf });
        gbc.writeMem(0xcc5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcc5f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90b1), 0xcf);
        EXPECT(gbc.readMem(0xcc5f), 0xb2);
        EXPECT(gbc.readMem(0xcc60), 0x90);
        // CF 0371
        gbc.setState(0x1a14, 0x8561, 0x2580, 0x7a5c, 0x1aa7, 0xe5bd, 0x1, 0x0);
        gbc.writeMem(0x1a14, { 0xcf });
        gbc.writeMem(0x855f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x855f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x855f), 0x15);
        EXPECT(gbc.readMem(0x8560), 0x1a);
        // CF 0374
        gbc.setState(0x9b84, 0xa516, 0xfdf0, 0x7d88, 0x3380, 0x71d2, 0x0, 0x0);
        gbc.writeMem(0x9b84, { 0xcf });
        gbc.writeMem(0xa514, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa514);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b84), 0xcf);
        EXPECT(gbc.readMem(0xa514), 0x85);
        EXPECT(gbc.readMem(0xa515), 0x9b);
        // CF 0376
        gbc.setState(0x139, 0xaeb2, 0xf060, 0xe6e8, 0xb6de, 0x5067, 0x0, 0x1);
        gbc.writeMem(0x139, { 0xcf });
        gbc.writeMem(0xaeb0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaeb0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb0), 0x3a);
        EXPECT(gbc.readMem(0xaeb1), 0x1);
        // CF 0378
        gbc.setState(0x1c27, 0x94fd, 0xb370, 0x8bd7, 0x5cfe, 0xdcb2, 0x0, 0x0);
        gbc.writeMem(0x1c27, { 0xcf });
        gbc.writeMem(0x94fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x94fb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94fb), 0x28);
        EXPECT(gbc.readMem(0x94fc), 0x1c);
        // CF 037B
        gbc.setState(0x65ae, 0xa7f3, 0x4ca0, 0x3227, 0x3ae7, 0x543, 0x0, 0x1);
        gbc.writeMem(0x65ae, { 0xcf });
        gbc.writeMem(0xa7f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa7f1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f1), 0xaf);
        EXPECT(gbc.readMem(0xa7f2), 0x65);
        // CF 037E
        gbc.setState(0xe705, 0xee3b, 0x28e0, 0x6ecd, 0xc504, 0xfc06, 0x1, 0x1);
        gbc.writeMem(0xe705, { 0xcf });
        gbc.writeMem(0xee39, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xee39);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe705), 0xcf);
        EXPECT(gbc.readMem(0xee39), 0x6);
        EXPECT(gbc.readMem(0xee3a), 0xe7);
        // CF 0381
        gbc.setState(0x96a7, 0xfa05, 0xdf0, 0xbc55, 0x2c01, 0x51c3, 0x1, 0x0);
        gbc.writeMem(0x96a7, { 0xcf });
        gbc.writeMem(0xfa03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfa03);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a7), 0xcf);
        EXPECT(gbc.readMem(0xfa03), 0xa8);
        EXPECT(gbc.readMem(0xfa04), 0x96);
        // CF 0382
        gbc.setState(0x1993, 0xa6b0, 0xbbb0, 0x959d, 0x3d47, 0x965a, 0x1, 0x0);
        gbc.writeMem(0x1993, { 0xcf });
        gbc.writeMem(0xa6ae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa6ae);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ae), 0x94);
        EXPECT(gbc.readMem(0xa6af), 0x19);
        // CF 0384
        gbc.setState(0x3a32, 0x90ed, 0x4240, 0x5c77, 0x861e, 0xc121, 0x1, 0x1);
        gbc.writeMem(0x3a32, { 0xcf });
        gbc.writeMem(0x90eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x90eb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90eb), 0x33);
        EXPECT(gbc.readMem(0x90ec), 0x3a);
        // CF 0389
        gbc.setState(0xbb6e, 0xe6da, 0x9a20, 0x547e, 0xd330, 0xf6da, 0x1, 0x0);
        gbc.writeMem(0xbb6e, { 0xcf });
        gbc.writeMem(0xe6d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe6d8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb6e), 0xcf);
        EXPECT(gbc.readMem(0xe6d8), 0x6f);
        EXPECT(gbc.readMem(0xe6d9), 0xbb);
        // CF 038A
        gbc.setState(0x6894, 0x9360, 0x9c30, 0xb489, 0xe57e, 0xaaea, 0x1, 0x1);
        gbc.writeMem(0x6894, { 0xcf });
        gbc.writeMem(0x935e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x935e);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x935e), 0x95);
        EXPECT(gbc.readMem(0x935f), 0x68);
        // CF 038C
        gbc.setState(0xabe9, 0xdde5, 0xef50, 0x7306, 0x3828, 0xa438, 0x0, 0x1);
        gbc.writeMem(0xabe9, { 0xcf });
        gbc.writeMem(0xdde3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdde3);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe9), 0xcf);
        EXPECT(gbc.readMem(0xdde3), 0xea);
        EXPECT(gbc.readMem(0xdde4), 0xab);
        // CF 0391
        gbc.setState(0x3203, 0xd95b, 0xeda0, 0xa814, 0x22c1, 0xa486, 0x0, 0x1);
        gbc.writeMem(0x3203, { 0xcf });
        gbc.writeMem(0xd959, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd959);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd959), 0x4);
        EXPECT(gbc.readMem(0xd95a), 0x32);
        // CF 0392
        gbc.setState(0x7c57, 0xc8a4, 0x3b60, 0x5fcd, 0x1df, 0x52ff, 0x1, 0x1);
        gbc.writeMem(0x7c57, { 0xcf });
        gbc.writeMem(0xc8a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc8a2);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a2), 0x58);
        EXPECT(gbc.readMem(0xc8a3), 0x7c);
        // CF 0394
        gbc.setState(0x37f5, 0xcda3, 0xb250, 0x61ce, 0xff5c, 0x2426, 0x1, 0x1);
        gbc.writeMem(0x37f5, { 0xcf });
        gbc.writeMem(0xcda1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcda1);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda1), 0xf6);
        EXPECT(gbc.readMem(0xcda2), 0x37);
        // CF 0396
        gbc.setState(0x2f4a, 0xf2ca, 0x8c70, 0x18c6, 0x21b9, 0x4abe, 0x0, 0x0);
        gbc.writeMem(0x2f4a, { 0xcf });
        gbc.writeMem(0xf2c8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf2c8);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf2c8), 0x4b);
        EXPECT(gbc.readMem(0xf2c9), 0x2f);
        // CF 0398
        gbc.setState(0xd225, 0xeb62, 0x6250, 0x96f2, 0x7c18, 0x82b6, 0x1, 0x1);
        gbc.writeMem(0xd225, { 0xcf });
        gbc.writeMem(0xeb60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xeb60);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd225), 0xcf);
        EXPECT(gbc.readMem(0xeb60), 0x26);
        EXPECT(gbc.readMem(0xeb61), 0xd2);
        // CF 0399
        gbc.setState(0xaf04, 0xde33, 0xf990, 0xeae5, 0x90e0, 0x631e, 0x1, 0x0);
        gbc.writeMem(0xaf04, { 0xcf });
        gbc.writeMem(0xde31, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xde31);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf04), 0xcf);
        EXPECT(gbc.readMem(0xde31), 0x5);
        EXPECT(gbc.readMem(0xde32), 0xaf);
        // CF 039D
        gbc.setState(0x7105, 0xcec9, 0xc4e0, 0x29b7, 0x23be, 0xdff3, 0x0, 0x0);
        gbc.writeMem(0x7105, { 0xcf });
        gbc.writeMem(0xcec7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xcec7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec7), 0x6);
        EXPECT(gbc.readMem(0xcec8), 0x71);
        // CF 039E
        gbc.setState(0x5f8e, 0xe755, 0xe060, 0x3a97, 0xe454, 0x7f94, 0x1, 0x0);
        gbc.writeMem(0x5f8e, { 0xcf });
        gbc.writeMem(0xe753, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xe753);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe753), 0x8f);
        EXPECT(gbc.readMem(0xe754), 0x5f);
        // CF 03A0
        gbc.setState(0x40a1, 0xf36e, 0xf6d0, 0x6094, 0xd5c1, 0xf333, 0x1, 0x1);
        gbc.writeMem(0x40a1, { 0xcf });
        gbc.writeMem(0xf36c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf36c);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf36c), 0xa2);
        EXPECT(gbc.readMem(0xf36d), 0x40);
        // CF 03A2
        gbc.setState(0xb96f, 0x8d9d, 0xe480, 0x60a6, 0x9edc, 0x5739, 0x1, 0x1);
        gbc.writeMem(0x8d9b, { 0x0, 0x0 });
        gbc.writeMem(0xb96f, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8d9b);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d9b), 0x70);
        EXPECT(gbc.readMem(0x8d9c), 0xb9);
        EXPECT(gbc.readMem(0xb96f), 0xcf);
        // CF 03A3
        gbc.setState(0x227b, 0xb7b1, 0x60, 0x7ec0, 0xc347, 0x96eb, 0x0, 0x0);
        gbc.writeMem(0x227b, { 0xcf });
        gbc.writeMem(0xb7af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xb7af);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7af), 0x7c);
        EXPECT(gbc.readMem(0xb7b0), 0x22);
        // CF 03A4
        gbc.setState(0xa5b1, 0xa057, 0xb240, 0x3187, 0x5781, 0x6861, 0x1, 0x0);
        gbc.writeMem(0xa055, { 0x0, 0x0 });
        gbc.writeMem(0xa5b1, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa055);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa055), 0xb2);
        EXPECT(gbc.readMem(0xa056), 0xa5);
        EXPECT(gbc.readMem(0xa5b1), 0xcf);
        // CF 03A5
        gbc.setState(0xe8b6, 0x92d9, 0xa040, 0xaa63, 0xf6e4, 0xe2f0, 0x0, 0x0);
        gbc.writeMem(0x92d7, { 0x0, 0x0 });
        gbc.writeMem(0xe8b6, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x92d7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92d7), 0xb7);
        EXPECT(gbc.readMem(0x92d8), 0xe8);
        EXPECT(gbc.readMem(0xe8b6), 0xcf);
        // CF 03A7
        gbc.setState(0xd82e, 0xa727, 0xe170, 0x929a, 0xaec7, 0x69d7, 0x1, 0x1);
        gbc.writeMem(0xa725, { 0x0, 0x0 });
        gbc.writeMem(0xd82e, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa725), 0x2f);
        EXPECT(gbc.readMem(0xa726), 0xd8);
        EXPECT(gbc.readMem(0xd82e), 0xcf);
        // CF 03A9
        gbc.setState(0x8785, 0xd7cb, 0x31a0, 0x59ec, 0x1e7f, 0xbc58, 0x1, 0x0);
        gbc.writeMem(0x8785, { 0xcf });
        gbc.writeMem(0xd7c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd7c9);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8785), 0xcf);
        EXPECT(gbc.readMem(0xd7c9), 0x86);
        EXPECT(gbc.readMem(0xd7ca), 0x87);
        // CF 03AF
        gbc.setState(0xbcf8, 0xed61, 0x6080, 0xa672, 0xde50, 0x762f, 0x1, 0x0);
        gbc.writeMem(0xbcf8, { 0xcf });
        gbc.writeMem(0xed5f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xed5f);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf8), 0xcf);
        EXPECT(gbc.readMem(0xed5f), 0xf9);
        EXPECT(gbc.readMem(0xed60), 0xbc);
        // CF 03B0
        gbc.setState(0x7478, 0xc3a9, 0x99f0, 0xc951, 0xf037, 0x4ac8, 0x1, 0x1);
        gbc.writeMem(0x7478, { 0xcf });
        gbc.writeMem(0xc3a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc3a7);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a7), 0x79);
        EXPECT(gbc.readMem(0xc3a8), 0x74);
        // CF 03B1
        gbc.setState(0xc2d9, 0xfcdc, 0xfba0, 0x1bf9, 0x6189, 0x83dc, 0x1, 0x1);
        gbc.writeMem(0xc2d9, { 0xcf });
        gbc.writeMem(0xfcda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfcda);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d9), 0xcf);
        EXPECT(gbc.readMem(0xfcda), 0xda);
        EXPECT(gbc.readMem(0xfcdb), 0xc2);
        // CF 03B2
        gbc.setState(0xd004, 0xfba2, 0x6540, 0x5f94, 0x3011, 0x4653, 0x0, 0x0);
        gbc.writeMem(0xd004, { 0xcf });
        gbc.writeMem(0xfba0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfba0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd004), 0xcf);
        EXPECT(gbc.readMem(0xfba0), 0x5);
        EXPECT(gbc.readMem(0xfba1), 0xd0);
        // CF 03B3
        gbc.setState(0x5df1, 0x992a, 0x67f0, 0x931c, 0x332, 0xddf8, 0x1, 0x0);
        gbc.writeMem(0x5df1, { 0xcf });
        gbc.writeMem(0x9928, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x9928);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9928), 0xf2);
        EXPECT(gbc.readMem(0x9929), 0x5d);
        // CF 03B5
        gbc.setState(0x4cb1, 0xbcfd, 0x8b20, 0xfde, 0x9efa, 0xb1d0, 0x0, 0x1);
        gbc.writeMem(0x4cb1, { 0xcf });
        gbc.writeMem(0xbcfb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbcfb);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcfb), 0xb2);
        EXPECT(gbc.readMem(0xbcfc), 0x4c);
        // CF 03B9
        gbc.setState(0x692a, 0xc71b, 0x470, 0xb9d6, 0xaa10, 0xec3, 0x1, 0x1);
        gbc.writeMem(0x692a, { 0xcf });
        gbc.writeMem(0xc719, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc719);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc719), 0x2b);
        EXPECT(gbc.readMem(0xc71a), 0x69);
        // CF 03C1
        gbc.setState(0x642a, 0xdd62, 0x1d70, 0xaa94, 0xe7c4, 0x9661, 0x0, 0x0);
        gbc.writeMem(0x642a, { 0xcf });
        gbc.writeMem(0xdd60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xdd60);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd60), 0x2b);
        EXPECT(gbc.readMem(0xdd61), 0x64);
        // CF 03C5
        gbc.setState(0xba66, 0xf14f, 0xd840, 0x7d32, 0x83f1, 0x8d2f, 0x1, 0x1);
        gbc.writeMem(0xba66, { 0xcf });
        gbc.writeMem(0xf14d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf14d);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba66), 0xcf);
        EXPECT(gbc.readMem(0xf14d), 0x67);
        EXPECT(gbc.readMem(0xf14e), 0xba);
        // CF 03C6
        gbc.setState(0x1ed4, 0xdd85, 0x1750, 0xff0e, 0x579e, 0x5dfa, 0x1, 0x0);
        gbc.writeMem(0x1ed4, { 0xcf });
        gbc.writeMem(0xdd83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xdd83);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd83), 0xd5);
        EXPECT(gbc.readMem(0xdd84), 0x1e);
        // CF 03C8
        gbc.setState(0xac0b, 0xdcad, 0xc40, 0x368a, 0x1ba, 0xdd78, 0x0, 0x0);
        gbc.writeMem(0xac0b, { 0xcf });
        gbc.writeMem(0xdcab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdcab);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac0b), 0xcf);
        EXPECT(gbc.readMem(0xdcab), 0xc);
        EXPECT(gbc.readMem(0xdcac), 0xac);
        // CF 03C9
        gbc.setState(0xaf3f, 0xd323, 0x8cc0, 0x30ee, 0xdfab, 0xea7c, 0x1, 0x1);
        gbc.writeMem(0xaf3f, { 0xcf });
        gbc.writeMem(0xd321, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd321);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3f), 0xcf);
        EXPECT(gbc.readMem(0xd321), 0x40);
        EXPECT(gbc.readMem(0xd322), 0xaf);
        // CF 03CA
        gbc.setState(0xae19, 0xa5f2, 0xb930, 0x693, 0xd22a, 0xd875, 0x1, 0x1);
        gbc.writeMem(0xa5f0, { 0x0, 0x0 });
        gbc.writeMem(0xae19, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa5f0);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f0), 0x1a);
        EXPECT(gbc.readMem(0xa5f1), 0xae);
        EXPECT(gbc.readMem(0xae19), 0xcf);
        // CF 03CF
        gbc.setState(0x402, 0xac7a, 0x5ca0, 0x6834, 0x5593, 0xd4ca, 0x0, 0x0);
        gbc.writeMem(0x402, { 0xcf });
        gbc.writeMem(0xac78, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xac78);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac78), 0x3);
        EXPECT(gbc.readMem(0xac79), 0x4);
        // CF 03D6
        gbc.setState(0x3eb2, 0xbd85, 0x6ff0, 0x1b0, 0x75b, 0xdd02, 0x1, 0x1);
        gbc.writeMem(0x3eb2, { 0xcf });
        gbc.writeMem(0xbd83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbd83);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd83), 0xb3);
        EXPECT(gbc.readMem(0xbd84), 0x3e);
        // CF 03D9
        gbc.setState(0xbaf6, 0xf28b, 0x5540, 0x3741, 0x2e0c, 0xd949, 0x0, 0x1);
        gbc.writeMem(0xbaf6, { 0xcf });
        gbc.writeMem(0xf289, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf289);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaf6), 0xcf);
        EXPECT(gbc.readMem(0xf289), 0xf7);
        EXPECT(gbc.readMem(0xf28a), 0xba);
        // CF 03DB
        gbc.setState(0xcea1, 0xa808, 0x35b0, 0x4ced, 0x9875, 0xcff8, 0x0, 0x0);
        gbc.writeMem(0xa806, { 0x0, 0x0 });
        gbc.writeMem(0xcea1, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa806);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa806), 0xa2);
        EXPECT(gbc.readMem(0xa807), 0xce);
        EXPECT(gbc.readMem(0xcea1), 0xcf);
        // CF 03DC
        gbc.setState(0x3d2a, 0x99e8, 0x56d0, 0xce33, 0xa52d, 0x2be7, 0x1, 0x0);
        gbc.writeMem(0x3d2a, { 0xcf });
        gbc.writeMem(0x99e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x99e6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e6), 0x2b);
        EXPECT(gbc.readMem(0x99e7), 0x3d);
        // CF 03DE
        gbc.setState(0x65d9, 0x93b8, 0x5020, 0xaf2, 0xfb58, 0x2b07, 0x0, 0x1);
        gbc.writeMem(0x65d9, { 0xcf });
        gbc.writeMem(0x93b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x93b6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b6), 0xda);
        EXPECT(gbc.readMem(0x93b7), 0x65);
        // CF 03E2
        gbc.setState(0x7bc3, 0xa4d0, 0x8ea0, 0x6a2b, 0x5e8d, 0x2d3b, 0x0, 0x0);
        gbc.writeMem(0x7bc3, { 0xcf });
        gbc.writeMem(0xa4ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xa4ce);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4ce), 0xc4);
        EXPECT(gbc.readMem(0xa4cf), 0x7b);
        // CF 03E4
        gbc.setState(0x988, 0xb1f1, 0x3d30, 0x670b, 0x7f86, 0x88fe, 0x0, 0x1);
        gbc.writeMem(0x988, { 0xcf });
        gbc.writeMem(0xb1ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb1ef);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ef), 0x89);
        EXPECT(gbc.readMem(0xb1f0), 0x9);
        // CF 03E5
        gbc.setState(0xe105, 0xb637, 0xfc90, 0xe195, 0xa1c9, 0x12c4, 0x1, 0x1);
        gbc.writeMem(0xb635, { 0x0, 0x0 });
        gbc.writeMem(0xe105, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb635);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb635), 0x6);
        EXPECT(gbc.readMem(0xb636), 0xe1);
        EXPECT(gbc.readMem(0xe105), 0xcf);
        // CF 03E7
        gbc.setState(0x81aa, 0x92f8, 0xaa0, 0xecda, 0xbcb3, 0xe478, 0x0, 0x1);
        gbc.writeMem(0x81aa, { 0xcf });
        gbc.writeMem(0x92f6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x92f6);
        EXPECT(gbc.pc(), 0x8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81aa), 0xcf);
        EXPECT(gbc.readMem(0x92f6), 0xab);
        EXPECT(gbc.readMem(0x92f7), 0x81);
    }
