    TEST(gbcemu, opcode_cb_89) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 89 0000
        gbc.setState(0x1d58, 0x36d8, 0xb0, 0xb02b, 0x59b8, 0x537a, 0x1, 0x1);
        gbc.writeMem(0x1d58, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x36d8, gbc.sp());
        EXPECT(0x1d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0001
        gbc.setState(0x6abb, 0x89f1, 0xe290, 0x258d, 0xef62, 0x756d, 0x1, 0x1);
        gbc.writeMem(0x6abb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x89f1, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0002
        gbc.setState(0x8b4d, 0xb7c5, 0x9790, 0x9704, 0xac65, 0x97c, 0x1, 0x0);
        gbc.writeMem(0x8b4d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0x8b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4d));
        EXPECT(0x89, gbc.readMem(0x8b4e));
        // CB 89 0003
        gbc.setState(0xafbc, 0xaa9a, 0x5370, 0x1393, 0xe21c, 0x6722, 0x1, 0x1);
        gbc.writeMem(0xafbc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xaa9a, gbc.sp());
        EXPECT(0xafbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafbc));
        EXPECT(0x89, gbc.readMem(0xafbd));
        // CB 89 0004
        gbc.setState(0xee96, 0xa0ef, 0xfa60, 0x24f5, 0xf2f8, 0x8aab, 0x0, 0x1);
        gbc.writeMem(0xee96, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa0ef, gbc.sp());
        EXPECT(0xee98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee96));
        EXPECT(0x89, gbc.readMem(0xee97));
        // CB 89 0005
        gbc.setState(0x54a1, 0x80b8, 0x9880, 0xd6c5, 0x3e02, 0x952a, 0x0, 0x0);
        gbc.writeMem(0x54a1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x80b8, gbc.sp());
        EXPECT(0x54a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0006
        gbc.setState(0xb929, 0xd801, 0x4610, 0x8216, 0xdfc0, 0xc49d, 0x1, 0x0);
        gbc.writeMem(0xb929, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd801, gbc.sp());
        EXPECT(0xb92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb929));
        EXPECT(0x89, gbc.readMem(0xb92a));
        // CB 89 0007
        gbc.setState(0x2a2f, 0x324f, 0x9fa0, 0x8205, 0x8b59, 0x1e5e, 0x0, 0x0);
        gbc.writeMem(0x2a2f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x324f, gbc.sp());
        EXPECT(0x2a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0008
        gbc.setState(0x4711, 0x5e3c, 0x22e0, 0x707, 0x6273, 0x6046, 0x1, 0x1);
        gbc.writeMem(0x4711, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5e3c, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0009
        gbc.setState(0x948f, 0x2e76, 0xd060, 0xebc4, 0xe9ad, 0x325e, 0x1, 0x1);
        gbc.writeMem(0x948f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2e76, gbc.sp());
        EXPECT(0x9491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948f));
        EXPECT(0x89, gbc.readMem(0x9490));
        // CB 89 000A
        gbc.setState(0xbf13, 0x80b9, 0x7ec0, 0xa2e4, 0x5403, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0xbf13, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x80b9, gbc.sp());
        EXPECT(0xbf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf13));
        EXPECT(0x89, gbc.readMem(0xbf14));
        // CB 89 000B
        gbc.setState(0x1ac5, 0x1a57, 0xa090, 0x3289, 0xb37, 0xe9c9, 0x1, 0x0);
        gbc.writeMem(0x1ac5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1a57, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 000C
        gbc.setState(0x40b3, 0xe6c, 0x6630, 0x2fe0, 0xb2b4, 0x56ac, 0x0, 0x1);
        gbc.writeMem(0x40b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe6c, gbc.sp());
        EXPECT(0x40b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 000E
        gbc.setState(0x4a3e, 0xe51, 0x3dd0, 0x809, 0xf31f, 0xb184, 0x1, 0x1);
        gbc.writeMem(0x4a3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe51, gbc.sp());
        EXPECT(0x4a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 000F
        gbc.setState(0x30ad, 0x128f, 0x14d0, 0x90c6, 0x3591, 0x69b7, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x128f, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0010
        gbc.setState(0xa044, 0x8e8c, 0xc270, 0x420b, 0x9f14, 0x580, 0x1, 0x1);
        gbc.writeMem(0xa044, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8e8c, gbc.sp());
        EXPECT(0xa046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa044));
        EXPECT(0x89, gbc.readMem(0xa045));
        // CB 89 0011
        gbc.setState(0xe580, 0x51db, 0x6380, 0x19cf, 0xf1b9, 0xca5b, 0x0, 0x0);
        gbc.writeMem(0xe580, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0xe582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe580));
        EXPECT(0x89, gbc.readMem(0xe581));
        // CB 89 0012
        gbc.setState(0x4db6, 0x9964, 0xe4f0, 0x8983, 0x3367, 0x4fe1, 0x0, 0x1);
        gbc.writeMem(0x4db6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0x4db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0014
        gbc.setState(0x3f6f, 0x8d57, 0xaf80, 0x79af, 0x3462, 0x59d7, 0x0, 0x1);
        gbc.writeMem(0x3f6f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8d57, gbc.sp());
        EXPECT(0x3f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0015
        gbc.setState(0x10a3, 0x3d7d, 0xc780, 0x46be, 0x69f8, 0x5fcf, 0x1, 0x1);
        gbc.writeMem(0x10a3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0016
        gbc.setState(0x6082, 0xb3ce, 0x4570, 0xfe38, 0xab8b, 0xaaa, 0x0, 0x1);
        gbc.writeMem(0x6082, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb3ce, gbc.sp());
        EXPECT(0x6084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0017
        gbc.setState(0xa19d, 0xabb4, 0xa210, 0x6798, 0x8dd5, 0x34c6, 0x1, 0x0);
        gbc.writeMem(0xa19d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xabb4, gbc.sp());
        EXPECT(0xa19f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19d));
        EXPECT(0x89, gbc.readMem(0xa19e));
        // CB 89 0018
        gbc.setState(0xdd0f, 0xb11d, 0xe700, 0xd208, 0x4fd4, 0x4fb8, 0x1, 0x0);
        gbc.writeMem(0xdd0f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb11d, gbc.sp());
        EXPECT(0xdd11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd0f));
        EXPECT(0x89, gbc.readMem(0xdd10));
        // CB 89 0019
        gbc.setState(0x12ec, 0x5bf1, 0x6b80, 0x16e2, 0xe898, 0x9cb6, 0x0, 0x0);
        gbc.writeMem(0x12ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 001A
        gbc.setState(0xce59, 0x17ba, 0xd340, 0x7feb, 0x4c13, 0xc4e1, 0x1, 0x0);
        gbc.writeMem(0xce59, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x17ba, gbc.sp());
        EXPECT(0xce5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce59));
        EXPECT(0x89, gbc.readMem(0xce5a));
        // CB 89 001B
        gbc.setState(0x2be4, 0x15d6, 0x1c90, 0x6ba4, 0x27ee, 0xfc49, 0x0, 0x0);
        gbc.writeMem(0x2be4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x15d6, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 001C
        gbc.setState(0x1958, 0x1a14, 0xba70, 0xbd86, 0x83fb, 0xc704, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1a14, gbc.sp());
        EXPECT(0x195a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 001D
        gbc.setState(0xee77, 0xd416, 0xeb0, 0x15fe, 0x1491, 0xc69b, 0x1, 0x1);
        gbc.writeMem(0xee77, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd416, gbc.sp());
        EXPECT(0xee79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee77));
        EXPECT(0x89, gbc.readMem(0xee78));
        // CB 89 001E
        gbc.setState(0xc99c, 0x2cc7, 0xf2e0, 0x7238, 0xafa4, 0xa560, 0x1, 0x0);
        gbc.writeMem(0xc99c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2cc7, gbc.sp());
        EXPECT(0xc99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99c));
        EXPECT(0x89, gbc.readMem(0xc99d));
        // CB 89 0020
        gbc.setState(0x95b3, 0x1842, 0xdbb0, 0xb691, 0x49f4, 0x9917, 0x0, 0x1);
        gbc.writeMem(0x95b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0x95b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b3));
        EXPECT(0x89, gbc.readMem(0x95b4));
        // CB 89 0021
        gbc.setState(0xb483, 0xd93f, 0xe390, 0xf643, 0xae7c, 0xd90, 0x1, 0x1);
        gbc.writeMem(0xb483, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd93f, gbc.sp());
        EXPECT(0xb485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb483));
        EXPECT(0x89, gbc.readMem(0xb484));
        // CB 89 0022
        gbc.setState(0xba5b, 0x8d65, 0x1ed0, 0xbc05, 0x6e31, 0x9c33, 0x1, 0x1);
        gbc.writeMem(0xba5b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8d65, gbc.sp());
        EXPECT(0xba5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5b));
        EXPECT(0x89, gbc.readMem(0xba5c));
        // CB 89 0023
        gbc.setState(0x27ae, 0x9ba1, 0x2700, 0x80b, 0xe87, 0xd16f, 0x0, 0x1);
        gbc.writeMem(0x27ae, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0x27b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0024
        gbc.setState(0xa645, 0x7e02, 0x2d10, 0x6472, 0xae2d, 0x3511, 0x1, 0x1);
        gbc.writeMem(0xa645, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7e02, gbc.sp());
        EXPECT(0xa647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa645));
        EXPECT(0x89, gbc.readMem(0xa646));
        // CB 89 0025
        gbc.setState(0x401, 0x5b12, 0xea80, 0x3bad, 0x45ff, 0x481d, 0x1, 0x1);
        gbc.writeMem(0x401, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5b12, gbc.sp());
        EXPECT(0x403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0026
        gbc.setState(0x92c9, 0x19f8, 0x4390, 0xeb19, 0x9373, 0xb7a6, 0x1, 0x0);
        gbc.writeMem(0x92c9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x19f8, gbc.sp());
        EXPECT(0x92cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c9));
        EXPECT(0x89, gbc.readMem(0x92ca));
        // CB 89 0027
        gbc.setState(0xb50e, 0x1ce6, 0xd370, 0xded6, 0x5144, 0x4ae, 0x1, 0x1);
        gbc.writeMem(0xb50e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1ce6, gbc.sp());
        EXPECT(0xb510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50e));
        EXPECT(0x89, gbc.readMem(0xb50f));
        // CB 89 0028
        gbc.setState(0x9b35, 0x4ab3, 0x54f0, 0x65d1, 0x830a, 0xc837, 0x0, 0x0);
        gbc.writeMem(0x9b35, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ab3, gbc.sp());
        EXPECT(0x9b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b35));
        EXPECT(0x89, gbc.readMem(0x9b36));
        // CB 89 002A
        gbc.setState(0x8093, 0x1f84, 0xf1b0, 0xf6a7, 0x23f3, 0x77fb, 0x0, 0x1);
        gbc.writeMem(0x8093, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1f84, gbc.sp());
        EXPECT(0x8095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8093));
        EXPECT(0x89, gbc.readMem(0x8094));
        // CB 89 002B
        gbc.setState(0x28b6, 0x865f, 0x5470, 0x9441, 0x7714, 0x61df, 0x1, 0x1);
        gbc.writeMem(0x28b6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x865f, gbc.sp());
        EXPECT(0x28b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 002C
        gbc.setState(0xebba, 0xf844, 0x56d0, 0xe8b6, 0xd369, 0xb86b, 0x0, 0x0);
        gbc.writeMem(0xebba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf844, gbc.sp());
        EXPECT(0xebbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebba));
        EXPECT(0x89, gbc.readMem(0xebbb));
        // CB 89 002D
        gbc.setState(0x1c31, 0x9d5f, 0xb140, 0xac8c, 0xda3d, 0x33e8, 0x0, 0x1);
        gbc.writeMem(0x1c31, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9d5f, gbc.sp());
        EXPECT(0x1c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 002E
        gbc.setState(0x8aad, 0xf06e, 0x4720, 0x7c53, 0xdbfa, 0x8a4a, 0x0, 0x1);
        gbc.writeMem(0x8aad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aad));
        EXPECT(0x89, gbc.readMem(0x8aae));
        // CB 89 002F
        gbc.setState(0xa11b, 0x355a, 0xf040, 0x12a1, 0x2b01, 0xdaeb, 0x1, 0x0);
        gbc.writeMem(0xa11b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x355a, gbc.sp());
        EXPECT(0xa11d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11b));
        EXPECT(0x89, gbc.readMem(0xa11c));
        // CB 89 0030
        gbc.setState(0x3b94, 0xf52d, 0xecd0, 0x728d, 0x4acf, 0x9fb7, 0x1, 0x0);
        gbc.writeMem(0x3b94, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf52d, gbc.sp());
        EXPECT(0x3b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0032
        gbc.setState(0x11d, 0xb053, 0xeff0, 0x94d2, 0xae10, 0x6bbf, 0x1, 0x0);
        gbc.writeMem(0x11d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb053, gbc.sp());
        EXPECT(0x11f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0033
        gbc.setState(0xdea3, 0x5a94, 0x8cf0, 0x630a, 0xf66b, 0x7815, 0x0, 0x0);
        gbc.writeMem(0xdea3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5a94, gbc.sp());
        EXPECT(0xdea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea3));
        EXPECT(0x89, gbc.readMem(0xdea4));
        // CB 89 0034
        gbc.setState(0xa484, 0xc9fb, 0x960, 0x591c, 0xa57, 0x706c, 0x0, 0x0);
        gbc.writeMem(0xa484, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc9fb, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa484));
        EXPECT(0x89, gbc.readMem(0xa485));
        // CB 89 0035
        gbc.setState(0x6f01, 0x4d39, 0xadd0, 0x8ba6, 0xd2bf, 0x58d0, 0x1, 0x1);
        gbc.writeMem(0x6f01, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4d39, gbc.sp());
        EXPECT(0x6f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0036
        gbc.setState(0x86db, 0x5d96, 0xd7a0, 0x8539, 0xb8d5, 0x2042, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86db));
        EXPECT(0x89, gbc.readMem(0x86dc));
        // CB 89 0037
        gbc.setState(0xe25e, 0xa616, 0x2270, 0x4eae, 0xba10, 0x2536, 0x0, 0x0);
        gbc.writeMem(0xe25e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa616, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25e));
        EXPECT(0x89, gbc.readMem(0xe25f));
        // CB 89 0038
        gbc.setState(0x265, 0x3b1d, 0xf7a0, 0x6b13, 0x52fe, 0x4837, 0x1, 0x0);
        gbc.writeMem(0x265, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3b1d, gbc.sp());
        EXPECT(0x267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0039
        gbc.setState(0x3814, 0x5868, 0x9330, 0xba3b, 0x8d99, 0xb96f, 0x0, 0x0);
        gbc.writeMem(0x3814, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5868, gbc.sp());
        EXPECT(0x3816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 003A
        gbc.setState(0x9bc7, 0xcc4d, 0xbc30, 0xdd3a, 0xaede, 0xfcc7, 0x1, 0x1);
        gbc.writeMem(0x9bc7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcc4d, gbc.sp());
        EXPECT(0x9bc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc7));
        EXPECT(0x89, gbc.readMem(0x9bc8));
        // CB 89 003B
        gbc.setState(0x855, 0xb781, 0x9c50, 0xdf4d, 0xcad2, 0x3d5a, 0x0, 0x0);
        gbc.writeMem(0x855, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb781, gbc.sp());
        EXPECT(0x857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 003C
        gbc.setState(0x3af9, 0x5875, 0xf7e0, 0x17b5, 0xdee3, 0x2af8, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5875, gbc.sp());
        EXPECT(0x3afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 003D
        gbc.setState(0xe159, 0xe3b0, 0x2a10, 0x95ca, 0xf92c, 0xf155, 0x0, 0x0);
        gbc.writeMem(0xe159, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe3b0, gbc.sp());
        EXPECT(0xe15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe159));
        EXPECT(0x89, gbc.readMem(0xe15a));
        // CB 89 003E
        gbc.setState(0x18dc, 0x9ada, 0xa1e0, 0x22f0, 0x29c2, 0x89e1, 0x0, 0x1);
        gbc.writeMem(0x18dc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9ada, gbc.sp());
        EXPECT(0x18de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 003F
        gbc.setState(0xab36, 0xa584, 0x2b80, 0x1c4f, 0x693f, 0x1409, 0x0, 0x0);
        gbc.writeMem(0xab36, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa584, gbc.sp());
        EXPECT(0xab38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab36));
        EXPECT(0x89, gbc.readMem(0xab37));
        // CB 89 0040
        gbc.setState(0xa3f5, 0xa0a8, 0x5aa0, 0xacef, 0xc9ee, 0x287, 0x1, 0x0);
        gbc.writeMem(0xa3f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa0a8, gbc.sp());
        EXPECT(0xa3f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3f5));
        EXPECT(0x89, gbc.readMem(0xa3f6));
        // CB 89 0041
        gbc.setState(0xdc47, 0xee87, 0xa450, 0x8a28, 0xb824, 0xed4, 0x1, 0x1);
        gbc.writeMem(0xdc47, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xee87, gbc.sp());
        EXPECT(0xdc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc47));
        EXPECT(0x89, gbc.readMem(0xdc48));
        // CB 89 0042
        gbc.setState(0xbd6, 0xa47, 0x5ec0, 0xfb4b, 0x7881, 0xaf4d, 0x1, 0x1);
        gbc.writeMem(0xbd6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa47, gbc.sp());
        EXPECT(0xbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0043
        gbc.setState(0x3eba, 0xb445, 0xae0, 0x8dd7, 0x33c9, 0xe1b, 0x0, 0x1);
        gbc.writeMem(0x3eba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0x3ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0044
        gbc.setState(0x7a14, 0x61d0, 0x890, 0x1e8a, 0x2525, 0x70f6, 0x1, 0x1);
        gbc.writeMem(0x7a14, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x61d0, gbc.sp());
        EXPECT(0x7a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0045
        gbc.setState(0x267c, 0x1a73, 0x6dd0, 0x3757, 0x5999, 0x58d0, 0x1, 0x0);
        gbc.writeMem(0x267c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1a73, gbc.sp());
        EXPECT(0x267e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0046
        gbc.setState(0xb38, 0xe1f0, 0xa9b0, 0x16ce, 0xdf7, 0xe856, 0x0, 0x1);
        gbc.writeMem(0xb38, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe1f0, gbc.sp());
        EXPECT(0xb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0047
        gbc.setState(0x8a08, 0x6cf2, 0x30e0, 0xe1a8, 0x2482, 0xd69f, 0x0, 0x0);
        gbc.writeMem(0x8a08, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6cf2, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a08));
        EXPECT(0x89, gbc.readMem(0x8a09));
        // CB 89 0048
        gbc.setState(0x2c19, 0x22b8, 0x19f0, 0xbed5, 0xf254, 0xa734, 0x1, 0x0);
        gbc.writeMem(0x2c19, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0x2c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0049
        gbc.setState(0x36d1, 0x5c32, 0xfd90, 0xb95d, 0x35ac, 0x8034, 0x1, 0x1);
        gbc.writeMem(0x36d1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5c32, gbc.sp());
        EXPECT(0x36d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 004A
        gbc.setState(0xce1, 0xff91, 0xb7b0, 0xf924, 0xc855, 0x35a9, 0x1, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xff91, gbc.sp());
        EXPECT(0xce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 004B
        gbc.setState(0x1a7d, 0x94a3, 0xdf80, 0x19e3, 0xdb1, 0x8013, 0x0, 0x0);
        gbc.writeMem(0x1a7d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x94a3, gbc.sp());
        EXPECT(0x1a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 004C
        gbc.setState(0x5784, 0xf32e, 0xb4e0, 0xd45f, 0xeaac, 0x4ac4, 0x0, 0x1);
        gbc.writeMem(0x5784, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf32e, gbc.sp());
        EXPECT(0x5786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 004D
        gbc.setState(0xef66, 0xfa0b, 0x4b90, 0xbb16, 0xa5dd, 0x7298, 0x1, 0x0);
        gbc.writeMem(0xef66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfa0b, gbc.sp());
        EXPECT(0xef68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef66));
        EXPECT(0x89, gbc.readMem(0xef67));
        // CB 89 004E
        gbc.setState(0xd05, 0xb166, 0xb590, 0x454e, 0x5ec, 0x616a, 0x1, 0x1);
        gbc.writeMem(0xd05, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb166, gbc.sp());
        EXPECT(0xd07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0050
        gbc.setState(0xdf74, 0x7173, 0xf750, 0xd5d1, 0xd677, 0xb95c, 0x0, 0x1);
        gbc.writeMem(0xdf74, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7173, gbc.sp());
        EXPECT(0xdf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf74));
        EXPECT(0x89, gbc.readMem(0xdf75));
        // CB 89 0051
        gbc.setState(0x25d0, 0xab40, 0x8d10, 0xdb12, 0x23f7, 0x40ad, 0x0, 0x1);
        gbc.writeMem(0x25d0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xab40, gbc.sp());
        EXPECT(0x25d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0052
        gbc.setState(0x80a0, 0x4f12, 0xb3a0, 0x4e4d, 0x2a79, 0xd6a3, 0x1, 0x1);
        gbc.writeMem(0x80a0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4f12, gbc.sp());
        EXPECT(0x80a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a0));
        EXPECT(0x89, gbc.readMem(0x80a1));
        // CB 89 0054
        gbc.setState(0x4667, 0x97de, 0x4100, 0xe5b0, 0x888b, 0x800f, 0x1, 0x1);
        gbc.writeMem(0x4667, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x4669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0055
        gbc.setState(0x4894, 0xd46e, 0x1550, 0xc8b, 0x3ed7, 0xb913, 0x1, 0x1);
        gbc.writeMem(0x4894, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd46e, gbc.sp());
        EXPECT(0x4896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0056
        gbc.setState(0xd2e3, 0x9c48, 0x2e20, 0x2476, 0x9159, 0xd487, 0x1, 0x1);
        gbc.writeMem(0xd2e3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9c48, gbc.sp());
        EXPECT(0xd2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e3));
        EXPECT(0x89, gbc.readMem(0xd2e4));
        // CB 89 0057
        gbc.setState(0x4dbe, 0x22d8, 0xa9b0, 0x2e79, 0x614, 0x74a, 0x0, 0x0);
        gbc.writeMem(0x4dbe, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x22d8, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0058
        gbc.setState(0x72c2, 0x9cf3, 0xf290, 0xe39a, 0x3b97, 0x3ea7, 0x1, 0x0);
        gbc.writeMem(0x72c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9cf3, gbc.sp());
        EXPECT(0x72c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0059
        gbc.setState(0x9931, 0x8bbf, 0xb5d0, 0xf05f, 0xe410, 0x1d0e, 0x1, 0x0);
        gbc.writeMem(0x9931, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0x9933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9931));
        EXPECT(0x89, gbc.readMem(0x9932));
        // CB 89 005A
        gbc.setState(0x4660, 0x6ca0, 0x3550, 0x3a91, 0x718d, 0xeacb, 0x0, 0x1);
        gbc.writeMem(0x4660, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6ca0, gbc.sp());
        EXPECT(0x4662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 005B
        gbc.setState(0x7330, 0x96, 0x5dc0, 0xf96f, 0xf3d, 0x8534, 0x1, 0x0);
        gbc.writeMem(0x7330, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 005C
        gbc.setState(0xb9d8, 0x6faa, 0x94b0, 0x21a8, 0x1a39, 0x10cd, 0x1, 0x0);
        gbc.writeMem(0xb9d8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6faa, gbc.sp());
        EXPECT(0xb9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d8));
        EXPECT(0x89, gbc.readMem(0xb9d9));
        // CB 89 005D
        gbc.setState(0xa698, 0x869, 0x98b0, 0x16dd, 0x7b63, 0x4fcc, 0x1, 0x0);
        gbc.writeMem(0xa698, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x869, gbc.sp());
        EXPECT(0xa69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa698));
        EXPECT(0x89, gbc.readMem(0xa699));
        // CB 89 005E
        gbc.setState(0xc2df, 0xa281, 0x42a0, 0x8f8, 0x69e6, 0x9ade, 0x0, 0x0);
        gbc.writeMem(0xc2df, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa281, gbc.sp());
        EXPECT(0xc2e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2df));
        EXPECT(0x89, gbc.readMem(0xc2e0));
        // CB 89 005F
        gbc.setState(0x3feb, 0xdb4f, 0x6230, 0xbc70, 0x433f, 0x1ebe, 0x0, 0x1);
        gbc.writeMem(0x3feb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdb4f, gbc.sp());
        EXPECT(0x3fed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0060
        gbc.setState(0x1173, 0xf74f, 0x29b0, 0xf055, 0x686, 0xbcf, 0x1, 0x0);
        gbc.writeMem(0x1173, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf74f, gbc.sp());
        EXPECT(0x1175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0061
        gbc.setState(0xd17f, 0x5aaf, 0x72d0, 0x4036, 0x5791, 0x6de7, 0x1, 0x1);
        gbc.writeMem(0xd17f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5aaf, gbc.sp());
        EXPECT(0xd181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17f));
        EXPECT(0x89, gbc.readMem(0xd180));
        // CB 89 0062
        gbc.setState(0x217a, 0x5338, 0x7810, 0xc19c, 0x4484, 0x125d, 0x1, 0x0);
        gbc.writeMem(0x217a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5338, gbc.sp());
        EXPECT(0x217c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0063
        gbc.setState(0x3679, 0xe0ff, 0xbb50, 0xa6a, 0xc369, 0x6cda, 0x1, 0x0);
        gbc.writeMem(0x3679, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe0ff, gbc.sp());
        EXPECT(0x367b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0064
        gbc.setState(0x6e16, 0x470f, 0x3d80, 0xfb70, 0x74fc, 0x7086, 0x0, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x470f, gbc.sp());
        EXPECT(0x6e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0066
        gbc.setState(0xcc35, 0x7fd9, 0x9140, 0xab97, 0xf18b, 0xbc, 0x1, 0x1);
        gbc.writeMem(0xcc35, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7fd9, gbc.sp());
        EXPECT(0xcc37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc35));
        EXPECT(0x89, gbc.readMem(0xcc36));
        // CB 89 0067
        gbc.setState(0xe35c, 0x30ec, 0x1cf0, 0x501f, 0x7c74, 0xc3d1, 0x1, 0x1);
        gbc.writeMem(0xe35c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0xe35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35c));
        EXPECT(0x89, gbc.readMem(0xe35d));
        // CB 89 0068
        gbc.setState(0xac89, 0xbc42, 0xee70, 0xe2a6, 0x2faf, 0x1a5d, 0x0, 0x1);
        gbc.writeMem(0xac89, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbc42, gbc.sp());
        EXPECT(0xac8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac89));
        EXPECT(0x89, gbc.readMem(0xac8a));
        // CB 89 0069
        gbc.setState(0xb28a, 0x9b9d, 0x7760, 0x2084, 0xad98, 0x6f7a, 0x0, 0x0);
        gbc.writeMem(0xb28a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9b9d, gbc.sp());
        EXPECT(0xb28c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28a));
        EXPECT(0x89, gbc.readMem(0xb28b));
        // CB 89 006A
        gbc.setState(0x62d5, 0xd660, 0x3a10, 0x492d, 0xb394, 0x1cac, 0x1, 0x1);
        gbc.writeMem(0x62d5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd660, gbc.sp());
        EXPECT(0x62d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 006B
        gbc.setState(0xcf49, 0x40f2, 0x41e0, 0xb9e4, 0x7cc7, 0x992d, 0x1, 0x1);
        gbc.writeMem(0xcf49, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x40f2, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf49));
        EXPECT(0x89, gbc.readMem(0xcf4a));
        // CB 89 006C
        gbc.setState(0x112f, 0x4662, 0x42c0, 0xbbe6, 0x3e51, 0xa836, 0x0, 0x0);
        gbc.writeMem(0x112f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4662, gbc.sp());
        EXPECT(0x1131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 006D
        gbc.setState(0xe16c, 0xaed, 0xb060, 0x443d, 0x68aa, 0xf4cb, 0x0, 0x0);
        gbc.writeMem(0xe16c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xaed, gbc.sp());
        EXPECT(0xe16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16c));
        EXPECT(0x89, gbc.readMem(0xe16d));
        // CB 89 006E
        gbc.setState(0xe78b, 0xf966, 0x9120, 0x5a55, 0x46f, 0xba10, 0x1, 0x0);
        gbc.writeMem(0xe78b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0xe78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78b));
        EXPECT(0x89, gbc.readMem(0xe78c));
        // CB 89 006F
        gbc.setState(0x7aba, 0x45ea, 0x4010, 0x1f90, 0x2b08, 0x1574, 0x1, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x45ea, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0070
        gbc.setState(0x8cd0, 0x8149, 0xb410, 0x2a95, 0x47b7, 0x8e24, 0x0, 0x0);
        gbc.writeMem(0x8cd0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8149, gbc.sp());
        EXPECT(0x8cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd0));
        EXPECT(0x89, gbc.readMem(0x8cd1));
        // CB 89 0071
        gbc.setState(0x1e65, 0x62e8, 0x44f0, 0x73b3, 0xba91, 0x2114, 0x1, 0x1);
        gbc.writeMem(0x1e65, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x62e8, gbc.sp());
        EXPECT(0x1e67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0072
        gbc.setState(0x8682, 0xbf2c, 0xbb40, 0x147e, 0xbab2, 0x93ea, 0x1, 0x1);
        gbc.writeMem(0x8682, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbf2c, gbc.sp());
        EXPECT(0x8684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8682));
        EXPECT(0x89, gbc.readMem(0x8683));
        // CB 89 0074
        gbc.setState(0x22cc, 0x4249, 0x6430, 0x687b, 0xec75, 0x29d9, 0x1, 0x0);
        gbc.writeMem(0x22cc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4249, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0075
        gbc.setState(0xcca, 0xbe1f, 0x270, 0xf837, 0x739e, 0x4e1, 0x0, 0x1);
        gbc.writeMem(0xcca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0076
        gbc.setState(0x46e, 0x7e8d, 0x9410, 0x2a4c, 0xe22c, 0x959a, 0x0, 0x0);
        gbc.writeMem(0x46e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0x470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0077
        gbc.setState(0x607f, 0xb55f, 0x3a80, 0xc262, 0x24e7, 0x767a, 0x1, 0x0);
        gbc.writeMem(0x607f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb55f, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0078
        gbc.setState(0xa8f5, 0x1122, 0x8d70, 0xddce, 0x1284, 0xeddf, 0x0, 0x0);
        gbc.writeMem(0xa8f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1122, gbc.sp());
        EXPECT(0xa8f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f5));
        EXPECT(0x89, gbc.readMem(0xa8f6));
        // CB 89 0079
        gbc.setState(0xd1bd, 0x8ce8, 0x8680, 0x96ce, 0x8df2, 0x9389, 0x0, 0x0);
        gbc.writeMem(0xd1bd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8ce8, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0x89, gbc.readMem(0xd1be));
        // CB 89 007A
        gbc.setState(0x8f47, 0xbea8, 0x44d0, 0x36b8, 0xbf0e, 0x5b18, 0x0, 0x1);
        gbc.writeMem(0x8f47, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x8f49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f47));
        EXPECT(0x89, gbc.readMem(0x8f48));
        // CB 89 007B
        gbc.setState(0x9fea, 0x4bae, 0x97d0, 0x2e0e, 0x3a1a, 0x52b7, 0x0, 0x1);
        gbc.writeMem(0x9fea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4bae, gbc.sp());
        EXPECT(0x9fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fea));
        EXPECT(0x89, gbc.readMem(0x9feb));
        // CB 89 007C
        gbc.setState(0xddd, 0x5baf, 0x6190, 0x339a, 0x3977, 0x9e70, 0x1, 0x1);
        gbc.writeMem(0xddd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5baf, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 007D
        gbc.setState(0xe31a, 0xb2b2, 0x5070, 0x9f65, 0xa3c8, 0xc446, 0x0, 0x0);
        gbc.writeMem(0xe31a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0xe31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31a));
        EXPECT(0x89, gbc.readMem(0xe31b));
        // CB 89 007E
        gbc.setState(0xe6df, 0xb062, 0xede0, 0x5382, 0xd85a, 0x4c10, 0x0, 0x0);
        gbc.writeMem(0xe6df, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb062, gbc.sp());
        EXPECT(0xe6e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6df));
        EXPECT(0x89, gbc.readMem(0xe6e0));
        // CB 89 007F
        gbc.setState(0xa25a, 0x50ce, 0x7d00, 0x9cf8, 0x1973, 0xa454, 0x0, 0x0);
        gbc.writeMem(0xa25a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x50ce, gbc.sp());
        EXPECT(0xa25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25a));
        EXPECT(0x89, gbc.readMem(0xa25b));
        // CB 89 0080
        gbc.setState(0x7143, 0x89f8, 0xdc10, 0xbc34, 0x38e1, 0x3b81, 0x0, 0x1);
        gbc.writeMem(0x7143, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x89f8, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0081
        gbc.setState(0xefbd, 0xedba, 0x5b40, 0x10f, 0xed89, 0x9de, 0x0, 0x0);
        gbc.writeMem(0xefbd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xedba, gbc.sp());
        EXPECT(0xefbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbd));
        EXPECT(0x89, gbc.readMem(0xefbe));
        // CB 89 0082
        gbc.setState(0x3681, 0x4851, 0x75b0, 0xa822, 0xa4b1, 0x8a2e, 0x1, 0x1);
        gbc.writeMem(0x3681, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4851, gbc.sp());
        EXPECT(0x3683, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0083
        gbc.setState(0x6e8e, 0x45f9, 0x1c0, 0x2ad9, 0x8c93, 0x86cb, 0x0, 0x1);
        gbc.writeMem(0x6e8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x45f9, gbc.sp());
        EXPECT(0x6e90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0085
        gbc.setState(0xd042, 0xd3a6, 0x5860, 0x5122, 0x2472, 0x5a21, 0x0, 0x0);
        gbc.writeMem(0xd042, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0xd044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd042));
        EXPECT(0x89, gbc.readMem(0xd043));
        // CB 89 0086
        gbc.setState(0x16fa, 0x9023, 0xed70, 0x9fe2, 0x2d86, 0xded9, 0x1, 0x0);
        gbc.writeMem(0x16fa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9023, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0087
        gbc.setState(0x5ed7, 0xb322, 0x91e0, 0xfbc6, 0x4d03, 0x8414, 0x0, 0x0);
        gbc.writeMem(0x5ed7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb322, gbc.sp());
        EXPECT(0x5ed9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0088
        gbc.setState(0x90f4, 0x3bab, 0xea30, 0x5e71, 0xa28b, 0x1db6, 0x1, 0x0);
        gbc.writeMem(0x90f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0x90f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f4));
        EXPECT(0x89, gbc.readMem(0x90f5));
        // CB 89 0089
        gbc.setState(0x30e, 0xd49f, 0xe930, 0xc47f, 0xa6f2, 0x32c5, 0x1, 0x1);
        gbc.writeMem(0x30e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd49f, gbc.sp());
        EXPECT(0x310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 008A
        gbc.setState(0x43b3, 0xe8fe, 0xa6b0, 0x56d3, 0xcf86, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0x43b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 008B
        gbc.setState(0xc202, 0xc9e1, 0xcdc0, 0xdfff, 0x2e32, 0xa71f, 0x0, 0x1);
        gbc.writeMem(0xc202, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc9e1, gbc.sp());
        EXPECT(0xc204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc202));
        EXPECT(0x89, gbc.readMem(0xc203));
        // CB 89 008C
        gbc.setState(0xde1d, 0x38b3, 0xc200, 0xa32a, 0x6eb6, 0x480, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x38b3, gbc.sp());
        EXPECT(0xde1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1d));
        EXPECT(0x89, gbc.readMem(0xde1e));
        // CB 89 008D
        gbc.setState(0x95b2, 0x73e7, 0xee10, 0x36a0, 0x41ab, 0x3924, 0x1, 0x0);
        gbc.writeMem(0x95b2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x73e7, gbc.sp());
        EXPECT(0x95b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b2));
        EXPECT(0x89, gbc.readMem(0x95b3));
        // CB 89 008E
        gbc.setState(0x621b, 0xa12c, 0x9310, 0x8a5e, 0xe312, 0xa10c, 0x1, 0x0);
        gbc.writeMem(0x621b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa12c, gbc.sp());
        EXPECT(0x621d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 008F
        gbc.setState(0xe192, 0xd0ec, 0xe8a0, 0xd4e8, 0xffca, 0x529d, 0x0, 0x0);
        gbc.writeMem(0xe192, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd0ec, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe192));
        EXPECT(0x89, gbc.readMem(0xe193));
        // CB 89 0091
        gbc.setState(0x2786, 0x7e24, 0xbee0, 0x5526, 0x589, 0xe238, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0092
        gbc.setState(0xa6d6, 0x3ade, 0xedd0, 0xa9f6, 0xd03d, 0xa703, 0x0, 0x1);
        gbc.writeMem(0xa6d6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3ade, gbc.sp());
        EXPECT(0xa6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d6));
        EXPECT(0x89, gbc.readMem(0xa6d7));
        // CB 89 0093
        gbc.setState(0x2c52, 0x9d06, 0x4bb0, 0x21d3, 0x428f, 0x7473, 0x0, 0x0);
        gbc.writeMem(0x2c52, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9d06, gbc.sp());
        EXPECT(0x2c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0094
        gbc.setState(0x3bd4, 0x627d, 0x4c90, 0x3340, 0x6c4b, 0x522d, 0x1, 0x1);
        gbc.writeMem(0x3bd4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0095
        gbc.setState(0x4112, 0x9863, 0xea60, 0xf814, 0x3d09, 0x4e4d, 0x0, 0x1);
        gbc.writeMem(0x4112, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9863, gbc.sp());
        EXPECT(0x4114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0096
        gbc.setState(0x8d11, 0xca4c, 0x4170, 0xf0f2, 0xc3d9, 0xc142, 0x1, 0x0);
        gbc.writeMem(0x8d11, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xca4c, gbc.sp());
        EXPECT(0x8d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d11));
        EXPECT(0x89, gbc.readMem(0x8d12));
        // CB 89 0097
        gbc.setState(0x2501, 0x213d, 0x6860, 0x3780, 0x53d4, 0x89fb, 0x0, 0x1);
        gbc.writeMem(0x2501, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x213d, gbc.sp());
        EXPECT(0x2503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0098
        gbc.setState(0xd07d, 0x5c70, 0x2a10, 0x75de, 0xc7bc, 0xec77, 0x1, 0x0);
        gbc.writeMem(0xd07d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5c70, gbc.sp());
        EXPECT(0xd07f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07d));
        EXPECT(0x89, gbc.readMem(0xd07e));
        // CB 89 0099
        gbc.setState(0x2a5d, 0x390, 0xa8e0, 0x5c53, 0xd55a, 0x9fcd, 0x1, 0x1);
        gbc.writeMem(0x2a5d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0x2a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 009A
        gbc.setState(0x8c5b, 0x29a7, 0x2030, 0xee3d, 0x28f2, 0xeb59, 0x0, 0x1);
        gbc.writeMem(0x8c5b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x29a7, gbc.sp());
        EXPECT(0x8c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c5b));
        EXPECT(0x89, gbc.readMem(0x8c5c));
        // CB 89 009B
        gbc.setState(0x4f6e, 0xeef3, 0x8cc0, 0xc48d, 0x9571, 0xe30a, 0x0, 0x0);
        gbc.writeMem(0x4f6e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xeef3, gbc.sp());
        EXPECT(0x4f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 009C
        gbc.setState(0x6dcb, 0xaf02, 0xa4c0, 0x3cd8, 0x2803, 0x427a, 0x0, 0x1);
        gbc.writeMem(0x6dcb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaf02, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 009D
        gbc.setState(0x4cbd, 0xc408, 0x8ed0, 0x5237, 0x1487, 0x992c, 0x1, 0x0);
        gbc.writeMem(0x4cbd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc408, gbc.sp());
        EXPECT(0x4cbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 009E
        gbc.setState(0x6f60, 0xf05c, 0x6450, 0x15dd, 0x174a, 0x6256, 0x0, 0x1);
        gbc.writeMem(0x6f60, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf05c, gbc.sp());
        EXPECT(0x6f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 009F
        gbc.setState(0xbde8, 0x6e85, 0xce60, 0xa2f9, 0xab50, 0xa49b, 0x1, 0x0);
        gbc.writeMem(0xbde8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6e85, gbc.sp());
        EXPECT(0xbdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde8));
        EXPECT(0x89, gbc.readMem(0xbde9));
        // CB 89 00A0
        gbc.setState(0x4b6a, 0x679f, 0x7d40, 0x3597, 0x236f, 0xd3c0, 0x1, 0x1);
        gbc.writeMem(0x4b6a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x679f, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00A1
        gbc.setState(0x471b, 0x2fee, 0x1070, 0x66a5, 0x11f2, 0x2b12, 0x1, 0x1);
        gbc.writeMem(0x471b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2fee, gbc.sp());
        EXPECT(0x471d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00A2
        gbc.setState(0x8698, 0xb142, 0x54b0, 0x88e6, 0x4e5b, 0xedbe, 0x1, 0x0);
        gbc.writeMem(0x8698, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb142, gbc.sp());
        EXPECT(0x869a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8698));
        EXPECT(0x89, gbc.readMem(0x8699));
        // CB 89 00A3
        gbc.setState(0xa1b5, 0x71ad, 0xa1c0, 0x1593, 0xd05b, 0x7adb, 0x1, 0x1);
        gbc.writeMem(0xa1b5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x71ad, gbc.sp());
        EXPECT(0xa1b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b5));
        EXPECT(0x89, gbc.readMem(0xa1b6));
        // CB 89 00A4
        gbc.setState(0xc03a, 0xddfb, 0x3470, 0x7d9e, 0x7c4c, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0xc03a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xddfb, gbc.sp());
        EXPECT(0xc03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03a));
        EXPECT(0x89, gbc.readMem(0xc03b));
        // CB 89 00A5
        gbc.setState(0xa06d, 0x5a7e, 0x2910, 0x6a04, 0x70c0, 0x9574, 0x0, 0x0);
        gbc.writeMem(0xa06d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5a7e, gbc.sp());
        EXPECT(0xa06f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06d));
        EXPECT(0x89, gbc.readMem(0xa06e));
        // CB 89 00A6
        gbc.setState(0xcac4, 0x7363, 0xa0e0, 0xbce, 0x23a0, 0x572e, 0x1, 0x0);
        gbc.writeMem(0xcac4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7363, gbc.sp());
        EXPECT(0xcac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac4));
        EXPECT(0x89, gbc.readMem(0xcac5));
        // CB 89 00A7
        gbc.setState(0x3374, 0x3de5, 0x1510, 0x4be1, 0xd2e8, 0x7c0a, 0x1, 0x0);
        gbc.writeMem(0x3374, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3de5, gbc.sp());
        EXPECT(0x3376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00A8
        gbc.setState(0xe52d, 0xbb6b, 0xbe10, 0x43b2, 0xe783, 0x4409, 0x0, 0x1);
        gbc.writeMem(0xe52d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbb6b, gbc.sp());
        EXPECT(0xe52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe52d));
        EXPECT(0x89, gbc.readMem(0xe52e));
        // CB 89 00A9
        gbc.setState(0x6809, 0x263a, 0x4980, 0x1d91, 0x3ce4, 0x7345, 0x1, 0x0);
        gbc.writeMem(0x6809, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x263a, gbc.sp());
        EXPECT(0x680b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00AA
        gbc.setState(0x8ed6, 0xd9ee, 0x7240, 0x80a2, 0xd972, 0x9356, 0x1, 0x0);
        gbc.writeMem(0x8ed6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd9ee, gbc.sp());
        EXPECT(0x8ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed6));
        EXPECT(0x89, gbc.readMem(0x8ed7));
        // CB 89 00AB
        gbc.setState(0x7535, 0xee3f, 0x7e70, 0x3cd, 0x27fa, 0xcbf7, 0x0, 0x0);
        gbc.writeMem(0x7535, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xee3f, gbc.sp());
        EXPECT(0x7537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00AC
        gbc.setState(0x2a1a, 0x1792, 0x2d10, 0xc1a9, 0xdc07, 0x51ec, 0x1, 0x1);
        gbc.writeMem(0x2a1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1792, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00AD
        gbc.setState(0xa3ec, 0xffc3, 0x5990, 0x3f0f, 0xfe4, 0xa4e2, 0x1, 0x1);
        gbc.writeMem(0xa3ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xffc3, gbc.sp());
        EXPECT(0xa3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ec));
        EXPECT(0x89, gbc.readMem(0xa3ed));
        // CB 89 00AE
        gbc.setState(0x95b6, 0x2704, 0x9950, 0x267c, 0x685c, 0x5d6f, 0x0, 0x0);
        gbc.writeMem(0x95b6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2704, gbc.sp());
        EXPECT(0x95b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b6));
        EXPECT(0x89, gbc.readMem(0x95b7));
        // CB 89 00B0
        gbc.setState(0xc6c7, 0xfa83, 0x5630, 0xc3b0, 0x2e9d, 0x256e, 0x1, 0x0);
        gbc.writeMem(0xc6c7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa83, gbc.sp());
        EXPECT(0xc6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c7));
        EXPECT(0x89, gbc.readMem(0xc6c8));
        // CB 89 00B1
        gbc.setState(0xdd54, 0x270a, 0x3e10, 0x8184, 0x521c, 0x902d, 0x1, 0x1);
        gbc.writeMem(0xdd54, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x270a, gbc.sp());
        EXPECT(0xdd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd54));
        EXPECT(0x89, gbc.readMem(0xdd55));
        // CB 89 00B2
        gbc.setState(0x1d0b, 0x766c, 0x5c0, 0x960e, 0x1cf5, 0x2040, 0x1, 0x0);
        gbc.writeMem(0x1d0b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x766c, gbc.sp());
        EXPECT(0x1d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00B3
        gbc.setState(0x15f2, 0x991c, 0xdcc0, 0x7204, 0xe9ca, 0x1e48, 0x1, 0x1);
        gbc.writeMem(0x15f2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x991c, gbc.sp());
        EXPECT(0x15f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00B4
        gbc.setState(0x5a1c, 0x9761, 0x31b0, 0x8ae3, 0xfd, 0xae06, 0x0, 0x1);
        gbc.writeMem(0x5a1c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9761, gbc.sp());
        EXPECT(0x5a1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00B5
        gbc.setState(0x7ee8, 0xb22b, 0xd5e0, 0x3048, 0xee86, 0xa9de, 0x0, 0x0);
        gbc.writeMem(0x7ee8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb22b, gbc.sp());
        EXPECT(0x7eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00B6
        gbc.setState(0xc214, 0xab16, 0xe30, 0xde2f, 0xacb, 0xb98b, 0x1, 0x0);
        gbc.writeMem(0xc214, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xab16, gbc.sp());
        EXPECT(0xc216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc214));
        EXPECT(0x89, gbc.readMem(0xc215));
        // CB 89 00B7
        gbc.setState(0x9e93, 0xe20c, 0x9910, 0x3d71, 0xd275, 0x73e7, 0x1, 0x1);
        gbc.writeMem(0x9e93, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe20c, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e93));
        EXPECT(0x89, gbc.readMem(0x9e94));
        // CB 89 00B8
        gbc.setState(0x54ec, 0x92f, 0x2330, 0x805b, 0xe945, 0x6fb6, 0x1, 0x1);
        gbc.writeMem(0x54ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0x54ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00B9
        gbc.setState(0x1f05, 0xcdc1, 0x6940, 0x5b52, 0x9f77, 0x6193, 0x1, 0x1);
        gbc.writeMem(0x1f05, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcdc1, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00BA
        gbc.setState(0x6b7b, 0xdda2, 0x3bc0, 0x11a8, 0x2b66, 0x84e8, 0x1, 0x0);
        gbc.writeMem(0x6b7b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0x6b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00BB
        gbc.setState(0xd24f, 0xf21b, 0x4400, 0xd839, 0xfbe6, 0x885d, 0x1, 0x1);
        gbc.writeMem(0xd24f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf21b, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0x89, gbc.readMem(0xd250));
        // CB 89 00BC
        gbc.setState(0xa8d1, 0xf005, 0xa6d0, 0xf6da, 0x87be, 0xc8ee, 0x0, 0x1);
        gbc.writeMem(0xa8d1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf005, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d1));
        EXPECT(0x89, gbc.readMem(0xa8d2));
        // CB 89 00BD
        gbc.setState(0xc690, 0xea9d, 0x8350, 0xa851, 0x7f7e, 0xf06a, 0x0, 0x0);
        gbc.writeMem(0xc690, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xea9d, gbc.sp());
        EXPECT(0xc692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc690));
        EXPECT(0x89, gbc.readMem(0xc691));
        // CB 89 00BE
        gbc.setState(0x7d8c, 0xa84, 0x3960, 0x9a3b, 0xedf9, 0xcf63, 0x1, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa84, gbc.sp());
        EXPECT(0x7d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00BF
        gbc.setState(0x7700, 0xebbf, 0x5e50, 0xd596, 0x6b25, 0x3079, 0x0, 0x0);
        gbc.writeMem(0x7700, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xebbf, gbc.sp());
        EXPECT(0x7702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00C0
        gbc.setState(0x7317, 0xa9ca, 0xa6b0, 0x6b39, 0xbb86, 0x4f9c, 0x0, 0x1);
        gbc.writeMem(0x7317, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa9ca, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00C1
        gbc.setState(0xd229, 0xf244, 0x7620, 0x8968, 0xf4c3, 0xcc35, 0x1, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf244, gbc.sp());
        EXPECT(0xd22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd229));
        EXPECT(0x89, gbc.readMem(0xd22a));
        // CB 89 00C2
        gbc.setState(0x61f8, 0x48ba, 0x2900, 0x20ae, 0xbe3e, 0xecae, 0x0, 0x1);
        gbc.writeMem(0x61f8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x48ba, gbc.sp());
        EXPECT(0x61fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00C3
        gbc.setState(0x3475, 0xce5c, 0x9960, 0xcfe4, 0x396c, 0x2c83, 0x0, 0x0);
        gbc.writeMem(0x3475, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xce5c, gbc.sp());
        EXPECT(0x3477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00C4
        gbc.setState(0xca42, 0x94b4, 0xa1e0, 0xcec0, 0x6cb0, 0x178c, 0x0, 0x0);
        gbc.writeMem(0xca42, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x94b4, gbc.sp());
        EXPECT(0xca44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca42));
        EXPECT(0x89, gbc.readMem(0xca43));
        // CB 89 00C5
        gbc.setState(0x7e5f, 0x239a, 0xbc40, 0xaaf2, 0x9088, 0x8f4e, 0x0, 0x1);
        gbc.writeMem(0x7e5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0x7e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00C6
        gbc.setState(0x4478, 0xe874, 0xbea0, 0x1ea3, 0xe8a2, 0xcd27, 0x0, 0x1);
        gbc.writeMem(0x4478, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe874, gbc.sp());
        EXPECT(0x447a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00C7
        gbc.setState(0x46e6, 0x7dad, 0x6d50, 0xf553, 0x6f, 0xab61, 0x1, 0x0);
        gbc.writeMem(0x46e6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7dad, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00C8
        gbc.setState(0x876e, 0x9205, 0x39e0, 0xcdda, 0xec26, 0x9928, 0x1, 0x0);
        gbc.writeMem(0x876e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9205, gbc.sp());
        EXPECT(0x8770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x876e));
        EXPECT(0x89, gbc.readMem(0x876f));
        // CB 89 00C9
        gbc.setState(0x7b75, 0x8758, 0x2ee0, 0xcaa5, 0xfb4c, 0xafc5, 0x0, 0x0);
        gbc.writeMem(0x7b75, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8758, gbc.sp());
        EXPECT(0x7b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00CA
        gbc.setState(0x68, 0xa8af, 0xb830, 0xee71, 0xb855, 0x54b8, 0x0, 0x0);
        gbc.writeMem(0x68, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa8af, gbc.sp());
        EXPECT(0x6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00CB
        gbc.setState(0xc827, 0x4643, 0xc0c0, 0x4508, 0xf547, 0x890b, 0x1, 0x0);
        gbc.writeMem(0xc827, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4643, gbc.sp());
        EXPECT(0xc829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc827));
        EXPECT(0x89, gbc.readMem(0xc828));
        // CB 89 00CC
        gbc.setState(0xc504, 0xcbbf, 0x2870, 0xc244, 0x1c75, 0x6ec2, 0x0, 0x1);
        gbc.writeMem(0xc504, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcbbf, gbc.sp());
        EXPECT(0xc506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc504));
        EXPECT(0x89, gbc.readMem(0xc505));
        // CB 89 00CD
        gbc.setState(0xed52, 0x2302, 0x1fa0, 0x7c12, 0x8d81, 0xcfb1, 0x1, 0x0);
        gbc.writeMem(0xed52, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2302, gbc.sp());
        EXPECT(0xed54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed52));
        EXPECT(0x89, gbc.readMem(0xed53));
        // CB 89 00CE
        gbc.setState(0xa79c, 0x87d4, 0x9210, 0x796f, 0x2523, 0x62cf, 0x0, 0x1);
        gbc.writeMem(0xa79c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x87d4, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa79c));
        EXPECT(0x89, gbc.readMem(0xa79d));
        // CB 89 00CF
        gbc.setState(0x3253, 0xcadc, 0xcdc0, 0xc4ab, 0xcd67, 0x688b, 0x1, 0x0);
        gbc.writeMem(0x3253, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcadc, gbc.sp());
        EXPECT(0x3255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00D0
        gbc.setState(0xe7ec, 0xbfcd, 0x9de0, 0x6311, 0x5ac2, 0x69, 0x0, 0x1);
        gbc.writeMem(0xe7ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbfcd, gbc.sp());
        EXPECT(0xe7ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ec));
        EXPECT(0x89, gbc.readMem(0xe7ed));
        // CB 89 00D1
        gbc.setState(0x5eaf, 0x5def, 0x9b30, 0x98d, 0x23d0, 0x8585, 0x0, 0x0);
        gbc.writeMem(0x5eaf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5def, gbc.sp());
        EXPECT(0x5eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00D2
        gbc.setState(0x2848, 0x64e5, 0xd0e0, 0x12e9, 0xa898, 0x95b8, 0x0, 0x1);
        gbc.writeMem(0x2848, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x64e5, gbc.sp());
        EXPECT(0x284a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00D3
        gbc.setState(0x7e77, 0x6618, 0x380, 0x43fa, 0xb06c, 0xb9ca, 0x1, 0x0);
        gbc.writeMem(0x7e77, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6618, gbc.sp());
        EXPECT(0x7e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00D4
        gbc.setState(0x7f53, 0xebfa, 0x85b0, 0x65be, 0x3f05, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00D5
        gbc.setState(0x6a3e, 0xd81f, 0x8c20, 0x4944, 0x6e7d, 0x6a87, 0x0, 0x1);
        gbc.writeMem(0x6a3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd81f, gbc.sp());
        EXPECT(0x6a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00D6
        gbc.setState(0x614, 0xfdbd, 0xa2a0, 0x3916, 0xc5d7, 0xb581, 0x1, 0x0);
        gbc.writeMem(0x614, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfdbd, gbc.sp());
        EXPECT(0x616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00D7
        gbc.setState(0x7fe3, 0x68f7, 0x92d0, 0x4125, 0x39d3, 0xa87c, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x68f7, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00D8
        gbc.setState(0xb121, 0x5d95, 0xab60, 0x7728, 0x140f, 0x61da, 0x1, 0x1);
        gbc.writeMem(0xb121, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5d95, gbc.sp());
        EXPECT(0xb123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb121));
        EXPECT(0x89, gbc.readMem(0xb122));
        // CB 89 00D9
        gbc.setState(0x1409, 0xad22, 0x45f0, 0x323, 0xa7d9, 0xbdd4, 0x0, 0x1);
        gbc.writeMem(0x1409, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xad22, gbc.sp());
        EXPECT(0x140b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00DA
        gbc.setState(0xe29c, 0x9a53, 0xb680, 0x8151, 0xa98, 0xd5ca, 0x1, 0x0);
        gbc.writeMem(0xe29c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9a53, gbc.sp());
        EXPECT(0xe29e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29c));
        EXPECT(0x89, gbc.readMem(0xe29d));
        // CB 89 00DB
        gbc.setState(0x6b41, 0xaf6c, 0xfee0, 0x107d, 0xa433, 0x121e, 0x0, 0x1);
        gbc.writeMem(0x6b41, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaf6c, gbc.sp());
        EXPECT(0x6b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00DC
        gbc.setState(0x24ab, 0xc290, 0xdd50, 0x69ce, 0x922c, 0xec24, 0x0, 0x1);
        gbc.writeMem(0x24ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc290, gbc.sp());
        EXPECT(0x24ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00DD
        gbc.setState(0x1f1e, 0xea, 0x8680, 0x54fc, 0x51c3, 0xdfbe, 0x0, 0x1);
        gbc.writeMem(0x1f1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xea, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00DE
        gbc.setState(0x361a, 0x3103, 0x6110, 0x7e19, 0x425a, 0xb2bc, 0x1, 0x0);
        gbc.writeMem(0x361a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3103, gbc.sp());
        EXPECT(0x361c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00DF
        gbc.setState(0x4445, 0x3c72, 0x22d0, 0x1361, 0x3cd0, 0xda90, 0x0, 0x0);
        gbc.writeMem(0x4445, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3c72, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00E0
        gbc.setState(0x79ff, 0xdd63, 0x2390, 0x1f2a, 0x886b, 0x2713, 0x1, 0x0);
        gbc.writeMem(0x79ff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdd63, gbc.sp());
        EXPECT(0x7a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00E1
        gbc.setState(0x6cf5, 0x8c77, 0xfec0, 0xc9dd, 0x402a, 0x3dad, 0x0, 0x0);
        gbc.writeMem(0x6cf5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8c77, gbc.sp());
        EXPECT(0x6cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00E2
        gbc.setState(0xdb39, 0x9dd7, 0xace0, 0x8014, 0x800a, 0x4ae0, 0x1, 0x0);
        gbc.writeMem(0xdb39, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9dd7, gbc.sp());
        EXPECT(0xdb3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb39));
        EXPECT(0x89, gbc.readMem(0xdb3a));
        // CB 89 00E3
        gbc.setState(0xcd59, 0xb2d2, 0xebe0, 0x3701, 0x511c, 0x97c2, 0x1, 0x0);
        gbc.writeMem(0xcd59, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb2d2, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd59));
        EXPECT(0x89, gbc.readMem(0xcd5a));
        // CB 89 00E4
        gbc.setState(0xe1de, 0x58d2, 0x3740, 0xb5cd, 0x964e, 0x77ba, 0x1, 0x0);
        gbc.writeMem(0xe1de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0xe1e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1de));
        EXPECT(0x89, gbc.readMem(0xe1df));
        // CB 89 00E5
        gbc.setState(0xb917, 0xa1cc, 0x20, 0x19a7, 0xd4ed, 0xd87b, 0x0, 0x0);
        gbc.writeMem(0xb917, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa1cc, gbc.sp());
        EXPECT(0xb919, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb917));
        EXPECT(0x89, gbc.readMem(0xb918));
        // CB 89 00E6
        gbc.setState(0x9bbf, 0x9b3a, 0x4a70, 0x6269, 0x1371, 0xa230, 0x1, 0x0);
        gbc.writeMem(0x9bbf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9b3a, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbf));
        EXPECT(0x89, gbc.readMem(0x9bc0));
        // CB 89 00E7
        gbc.setState(0xdb5a, 0x59f3, 0x79a0, 0x9a1a, 0xf30d, 0xbb26, 0x0, 0x1);
        gbc.writeMem(0xdb5a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x59f3, gbc.sp());
        EXPECT(0xdb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5a));
        EXPECT(0x89, gbc.readMem(0xdb5b));
        // CB 89 00E8
        gbc.setState(0x733e, 0x8aaa, 0x8a00, 0x9cb7, 0x50d8, 0xa229, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8aaa, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00E9
        gbc.setState(0xda8a, 0x63cc, 0x22e0, 0x754, 0xf474, 0x296d, 0x0, 0x1);
        gbc.writeMem(0xda8a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x63cc, gbc.sp());
        EXPECT(0xda8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda8a));
        EXPECT(0x89, gbc.readMem(0xda8b));
        // CB 89 00EA
        gbc.setState(0x3ef5, 0xad89, 0x80, 0x7011, 0xe808, 0xded3, 0x1, 0x1);
        gbc.writeMem(0x3ef5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xad89, gbc.sp());
        EXPECT(0x3ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00EB
        gbc.setState(0xbf1e, 0xdfd7, 0x3cc0, 0x957, 0x939c, 0xda45, 0x1, 0x1);
        gbc.writeMem(0xbf1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdfd7, gbc.sp());
        EXPECT(0xbf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1e));
        EXPECT(0x89, gbc.readMem(0xbf1f));
        // CB 89 00EC
        gbc.setState(0xe362, 0x2959, 0x8a00, 0x73, 0xc017, 0x7656, 0x0, 0x0);
        gbc.writeMem(0xe362, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2959, gbc.sp());
        EXPECT(0xe364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe362));
        EXPECT(0x89, gbc.readMem(0xe363));
        // CB 89 00ED
        gbc.setState(0xde01, 0x3a5b, 0x1560, 0x3c7c, 0x7cd9, 0x83cc, 0x1, 0x0);
        gbc.writeMem(0xde01, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3a5b, gbc.sp());
        EXPECT(0xde03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde01));
        EXPECT(0x89, gbc.readMem(0xde02));
        // CB 89 00EE
        gbc.setState(0xd680, 0x9ca0, 0xd980, 0xf20, 0xfc46, 0xb977, 0x1, 0x1);
        gbc.writeMem(0xd680, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9ca0, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd680));
        EXPECT(0x89, gbc.readMem(0xd681));
        // CB 89 00EF
        gbc.setState(0x4a6b, 0xb0bd, 0x3360, 0xf958, 0xc148, 0x42c1, 0x1, 0x1);
        gbc.writeMem(0x4a6b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb0bd, gbc.sp());
        EXPECT(0x4a6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 00F0
        gbc.setState(0xaf25, 0x564, 0x9800, 0xaef0, 0xddfb, 0xfad1, 0x1, 0x1);
        gbc.writeMem(0xaf25, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x564, gbc.sp());
        EXPECT(0xaf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf25));
        EXPECT(0x89, gbc.readMem(0xaf26));
        // CB 89 00F1
        gbc.setState(0xe562, 0x1dba, 0xafd0, 0xf6be, 0xb1a2, 0xad4, 0x0, 0x1);
        gbc.writeMem(0xe562, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1dba, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0x89, gbc.readMem(0xe563));
        // CB 89 00F2
        gbc.setState(0xebb, 0x7866, 0x9730, 0x549c, 0xf3da, 0x4c5b, 0x1, 0x1);
        gbc.writeMem(0xebb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7866, gbc.sp());
        EXPECT(0xebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00F3
        gbc.setState(0xbd87, 0x3d03, 0x6360, 0x2a5e, 0x14d3, 0x346, 0x0, 0x0);
        gbc.writeMem(0xbd87, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3d03, gbc.sp());
        EXPECT(0xbd89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd87));
        EXPECT(0x89, gbc.readMem(0xbd88));
        // CB 89 00F4
        gbc.setState(0xcd56, 0x9a5f, 0xb920, 0xf59, 0x391a, 0xec42, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9a5f, gbc.sp());
        EXPECT(0xcd58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd56));
        EXPECT(0x89, gbc.readMem(0xcd57));
        // CB 89 00F5
        gbc.setState(0xeeff, 0x9227, 0xf110, 0x4c24, 0x9ce9, 0xd34a, 0x1, 0x1);
        gbc.writeMem(0xeeff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9227, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0x89, gbc.readMem(0xef00));
        // CB 89 00F6
        gbc.setState(0x33a2, 0x2677, 0x7af0, 0x8565, 0xa9c5, 0x68df, 0x0, 0x0);
        gbc.writeMem(0x33a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2677, gbc.sp());
        EXPECT(0x33a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00F7
        gbc.setState(0xb4dc, 0x193a, 0x16a0, 0x8a76, 0xf0e, 0xdc0, 0x0, 0x1);
        gbc.writeMem(0xb4dc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x193a, gbc.sp());
        EXPECT(0xb4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4dc));
        EXPECT(0x89, gbc.readMem(0xb4dd));
        // CB 89 00F8
        gbc.setState(0x8288, 0xb3d0, 0x41f0, 0x7de1, 0xaacb, 0xa953, 0x1, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb3d0, gbc.sp());
        EXPECT(0x828a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8288));
        EXPECT(0x89, gbc.readMem(0x8289));
        // CB 89 00F9
        gbc.setState(0xa1a9, 0xf994, 0xb0e0, 0xfe12, 0x621e, 0xaebf, 0x0, 0x1);
        gbc.writeMem(0xa1a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf994, gbc.sp());
        EXPECT(0xa1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a9));
        EXPECT(0x89, gbc.readMem(0xa1aa));
        // CB 89 00FA
        gbc.setState(0x1523, 0x25ea, 0xf1b0, 0x9a43, 0xede6, 0x2740, 0x1, 0x0);
        gbc.writeMem(0x1523, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x25ea, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00FB
        gbc.setState(0x8665, 0xfc88, 0xcd30, 0xddc7, 0xa24d, 0xeb07, 0x0, 0x1);
        gbc.writeMem(0x8665, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfc88, gbc.sp());
        EXPECT(0x8667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8665));
        EXPECT(0x89, gbc.readMem(0x8666));
        // CB 89 00FC
        gbc.setState(0x602d, 0x9a3f, 0xf850, 0x658b, 0x49cd, 0x6bc2, 0x1, 0x0);
        gbc.writeMem(0x602d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a3f, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 00FD
        gbc.setState(0xba87, 0xaae5, 0x8f20, 0xf42e, 0x1565, 0x54fb, 0x1, 0x0);
        gbc.writeMem(0xba87, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaae5, gbc.sp());
        EXPECT(0xba89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba87));
        EXPECT(0x89, gbc.readMem(0xba88));
        // CB 89 00FE
        gbc.setState(0xb9aa, 0x62a8, 0xfa30, 0x3f3b, 0x67b0, 0x15b0, 0x0, 0x1);
        gbc.writeMem(0xb9aa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x62a8, gbc.sp());
        EXPECT(0xb9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9aa));
        EXPECT(0x89, gbc.readMem(0xb9ab));
        // CB 89 00FF
        gbc.setState(0x5f06, 0x53c0, 0xfcf0, 0x141e, 0xa147, 0x2bba, 0x1, 0x1);
        gbc.writeMem(0x5f06, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x53c0, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0100
        gbc.setState(0x2c43, 0xb0cf, 0xd130, 0x61c2, 0x91f4, 0x2cb4, 0x1, 0x0);
        gbc.writeMem(0x2c43, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb0cf, gbc.sp());
        EXPECT(0x2c45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0101
        gbc.setState(0x6760, 0xdcd6, 0xf870, 0x216a, 0x92bd, 0xc66c, 0x0, 0x0);
        gbc.writeMem(0x6760, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdcd6, gbc.sp());
        EXPECT(0x6762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0102
        gbc.setState(0x8fa0, 0x20ba, 0x310, 0xcf8d, 0xdca7, 0x5092, 0x1, 0x1);
        gbc.writeMem(0x8fa0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x20ba, gbc.sp());
        EXPECT(0x8fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa0));
        EXPECT(0x89, gbc.readMem(0x8fa1));
        // CB 89 0103
        gbc.setState(0xcbb8, 0x8801, 0xbb70, 0x2500, 0x25ff, 0x45f3, 0x1, 0x1);
        gbc.writeMem(0xcbb8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8801, gbc.sp());
        EXPECT(0xcbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb8));
        EXPECT(0x89, gbc.readMem(0xcbb9));
        // CB 89 0104
        gbc.setState(0xed1b, 0x433c, 0xbc60, 0x3f4f, 0x632f, 0x9587, 0x0, 0x1);
        gbc.writeMem(0xed1b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x433c, gbc.sp());
        EXPECT(0xed1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1b));
        EXPECT(0x89, gbc.readMem(0xed1c));
        // CB 89 0105
        gbc.setState(0x5927, 0xc166, 0xdab0, 0x3898, 0xee09, 0x1083, 0x0, 0x0);
        gbc.writeMem(0x5927, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x5929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0106
        gbc.setState(0x6f88, 0x7d3b, 0x2fa0, 0xde54, 0x8ab2, 0xf274, 0x1, 0x1);
        gbc.writeMem(0x6f88, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7d3b, gbc.sp());
        EXPECT(0x6f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0107
        gbc.setState(0xa745, 0x6323, 0x94a0, 0xbdf7, 0x600c, 0xab7b, 0x1, 0x1);
        gbc.writeMem(0xa745, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6323, gbc.sp());
        EXPECT(0xa747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa745));
        EXPECT(0x89, gbc.readMem(0xa746));
        // CB 89 0108
        gbc.setState(0xc11b, 0x2e75, 0xfc20, 0xe75d, 0xb87a, 0xa7ba, 0x0, 0x0);
        gbc.writeMem(0xc11b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0xc11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11b));
        EXPECT(0x89, gbc.readMem(0xc11c));
        // CB 89 0109
        gbc.setState(0xd1e0, 0x82b7, 0xa3e0, 0xd997, 0x61be, 0x90f1, 0x1, 0x1);
        gbc.writeMem(0xd1e0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0xd1e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e0));
        EXPECT(0x89, gbc.readMem(0xd1e1));
        // CB 89 010A
        gbc.setState(0xebfd, 0xdd5d, 0xc10, 0xc3e5, 0x7f21, 0x645c, 0x1, 0x0);
        gbc.writeMem(0xebfd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdd5d, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebfd));
        EXPECT(0x89, gbc.readMem(0xebfe));
        // CB 89 010B
        gbc.setState(0xc4fb, 0x8453, 0xd80, 0xd523, 0x427, 0x9193, 0x0, 0x0);
        gbc.writeMem(0xc4fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fb));
        EXPECT(0x89, gbc.readMem(0xc4fc));
        // CB 89 010C
        gbc.setState(0x11e2, 0xefc8, 0x5490, 0xd1ac, 0x375e, 0x1b30, 0x0, 0x0);
        gbc.writeMem(0x11e2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0x11e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 010F
        gbc.setState(0x9483, 0x47ee, 0x5740, 0xa56c, 0xfe48, 0xc1db, 0x1, 0x1);
        gbc.writeMem(0x9483, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x47ee, gbc.sp());
        EXPECT(0x9485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9483));
        EXPECT(0x89, gbc.readMem(0x9484));
        // CB 89 0110
        gbc.setState(0x96ed, 0xb45d, 0x4490, 0xf0c8, 0xd3ad, 0xb5fb, 0x0, 0x1);
        gbc.writeMem(0x96ed, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb45d, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ed));
        EXPECT(0x89, gbc.readMem(0x96ee));
        // CB 89 0111
        gbc.setState(0xe7d3, 0x677c, 0xb900, 0xdb0b, 0xf060, 0x7235, 0x0, 0x0);
        gbc.writeMem(0xe7d3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0xe7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d3));
        EXPECT(0x89, gbc.readMem(0xe7d4));
        // CB 89 0112
        gbc.setState(0x2523, 0x5894, 0x3b70, 0xaba7, 0xe324, 0x9cdc, 0x0, 0x0);
        gbc.writeMem(0x2523, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5894, gbc.sp());
        EXPECT(0x2525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0113
        gbc.setState(0x2c5, 0x3ba8, 0x7f40, 0xbe01, 0xea7b, 0x2a2, 0x1, 0x0);
        gbc.writeMem(0x2c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3ba8, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0115
        gbc.setState(0x55b, 0xac61, 0xf440, 0x7fb1, 0xdb6f, 0xe46, 0x0, 0x1);
        gbc.writeMem(0x55b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xac61, gbc.sp());
        EXPECT(0x55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0116
        gbc.setState(0x700f, 0xb47a, 0xdd30, 0xe33b, 0xac50, 0x4861, 0x1, 0x0);
        gbc.writeMem(0x700f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb47a, gbc.sp());
        EXPECT(0x7011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0117
        gbc.setState(0x6e46, 0x63fc, 0xe5f0, 0x36a6, 0x222a, 0xd277, 0x1, 0x1);
        gbc.writeMem(0x6e46, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0x6e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0118
        gbc.setState(0x4f59, 0x746d, 0xfbc0, 0x4dab, 0x5401, 0xe17a, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x746d, gbc.sp());
        EXPECT(0x4f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0119
        gbc.setState(0xc975, 0x22b6, 0xb7b0, 0xd5da, 0xdcf6, 0x5322, 0x0, 0x1);
        gbc.writeMem(0xc975, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x22b6, gbc.sp());
        EXPECT(0xc977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc975));
        EXPECT(0x89, gbc.readMem(0xc976));
        // CB 89 011A
        gbc.setState(0xc9fb, 0x1273, 0xf0b0, 0x4afc, 0x860d, 0x89e6, 0x1, 0x0);
        gbc.writeMem(0xc9fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1273, gbc.sp());
        EXPECT(0xc9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fb));
        EXPECT(0x89, gbc.readMem(0xc9fc));
        // CB 89 011B
        gbc.setState(0xda6, 0x9f33, 0xc5c0, 0x6ef0, 0x9580, 0x868e, 0x0, 0x0);
        gbc.writeMem(0xda6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9f33, gbc.sp());
        EXPECT(0xda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 011C
        gbc.setState(0xcd54, 0x5513, 0xaa40, 0x3484, 0x33f4, 0xd923, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0xcd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd54));
        EXPECT(0x89, gbc.readMem(0xcd55));
        // CB 89 011D
        gbc.setState(0xcb, 0x1299, 0x240, 0x2f2c, 0x3660, 0xa894, 0x1, 0x1);
        gbc.writeMem(0xcb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1299, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 011E
        gbc.setState(0xd4a4, 0x7c64, 0xa2a0, 0xd229, 0xc920, 0x8023, 0x0, 0x0);
        gbc.writeMem(0xd4a4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7c64, gbc.sp());
        EXPECT(0xd4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4a4));
        EXPECT(0x89, gbc.readMem(0xd4a5));
        // CB 89 011F
        gbc.setState(0xe82f, 0xb540, 0xe8a0, 0x4d81, 0x1a30, 0xa66, 0x1, 0x1);
        gbc.writeMem(0xe82f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb540, gbc.sp());
        EXPECT(0xe831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82f));
        EXPECT(0x89, gbc.readMem(0xe830));
        // CB 89 0120
        gbc.setState(0x7e9c, 0xa719, 0x16f0, 0x844a, 0x5e58, 0x2a54, 0x0, 0x0);
        gbc.writeMem(0x7e9c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa719, gbc.sp());
        EXPECT(0x7e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0121
        gbc.setState(0xc684, 0x1cf0, 0xa100, 0x1652, 0x549, 0xf5c4, 0x1, 0x0);
        gbc.writeMem(0xc684, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1cf0, gbc.sp());
        EXPECT(0xc686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc684));
        EXPECT(0x89, gbc.readMem(0xc685));
        // CB 89 0122
        gbc.setState(0xec5b, 0x3209, 0x7ac0, 0x8faa, 0xb942, 0xcdf1, 0x1, 0x0);
        gbc.writeMem(0xec5b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3209, gbc.sp());
        EXPECT(0xec5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5b));
        EXPECT(0x89, gbc.readMem(0xec5c));
        // CB 89 0123
        gbc.setState(0x551c, 0x6f51, 0x2d20, 0xdfb4, 0xdb24, 0x5ae3, 0x1, 0x0);
        gbc.writeMem(0x551c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x551e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0124
        gbc.setState(0x7348, 0xd97c, 0x30c0, 0xe01b, 0xe798, 0x463b, 0x1, 0x1);
        gbc.writeMem(0x7348, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0x734a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0125
        gbc.setState(0xc78f, 0x1b96, 0xeca0, 0x1f11, 0x1a2a, 0x8237, 0x1, 0x0);
        gbc.writeMem(0xc78f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1b96, gbc.sp());
        EXPECT(0xc791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78f));
        EXPECT(0x89, gbc.readMem(0xc790));
        // CB 89 0126
        gbc.setState(0x63b6, 0xecf0, 0x87a0, 0x8a6b, 0xd616, 0x3599, 0x0, 0x0);
        gbc.writeMem(0x63b6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xecf0, gbc.sp());
        EXPECT(0x63b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0127
        gbc.setState(0x6ad6, 0xec7b, 0x1690, 0x9e06, 0xcb5c, 0x15ea, 0x0, 0x0);
        gbc.writeMem(0x6ad6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0x6ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0129
        gbc.setState(0x868a, 0x6927, 0xcb20, 0x2db0, 0xaaf1, 0xc7ac, 0x0, 0x1);
        gbc.writeMem(0x868a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6927, gbc.sp());
        EXPECT(0x868c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868a));
        EXPECT(0x89, gbc.readMem(0x868b));
        // CB 89 012A
        gbc.setState(0x5df7, 0xb263, 0xedb0, 0xc84, 0xd57c, 0xd59d, 0x0, 0x1);
        gbc.writeMem(0x5df7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb263, gbc.sp());
        EXPECT(0x5df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 012C
        gbc.setState(0xcc6b, 0xeb2a, 0x1830, 0x4e0d, 0xd764, 0x8495, 0x1, 0x1);
        gbc.writeMem(0xcc6b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeb2a, gbc.sp());
        EXPECT(0xcc6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc6b));
        EXPECT(0x89, gbc.readMem(0xcc6c));
        // CB 89 012D
        gbc.setState(0xa46, 0x52f9, 0xb160, 0xb429, 0xaf8c, 0x7af8, 0x1, 0x0);
        gbc.writeMem(0xa46, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x52f9, gbc.sp());
        EXPECT(0xa48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 012E
        gbc.setState(0x9554, 0xdead, 0xf4d0, 0x8f1f, 0x3940, 0xd9fa, 0x0, 0x1);
        gbc.writeMem(0x9554, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdead, gbc.sp());
        EXPECT(0x9556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9554));
        EXPECT(0x89, gbc.readMem(0x9555));
        // CB 89 012F
        gbc.setState(0xf25, 0xc0c8, 0x9760, 0xac6a, 0xddea, 0x1352, 0x1, 0x1);
        gbc.writeMem(0xf25, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc0c8, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0130
        gbc.setState(0x9a17, 0x6ad3, 0xcbf0, 0xb910, 0x3e1a, 0xeb89, 0x1, 0x0);
        gbc.writeMem(0x9a17, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6ad3, gbc.sp());
        EXPECT(0x9a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a17));
        EXPECT(0x89, gbc.readMem(0x9a18));
        // CB 89 0131
        gbc.setState(0xb921, 0x1d3, 0xccd0, 0xf745, 0xde5a, 0x98f, 0x1, 0x1);
        gbc.writeMem(0xb921, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1d3, gbc.sp());
        EXPECT(0xb923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb921));
        EXPECT(0x89, gbc.readMem(0xb922));
        // CB 89 0132
        gbc.setState(0x1252, 0x1b64, 0x4e40, 0xdebb, 0xa278, 0xeac2, 0x0, 0x1);
        gbc.writeMem(0x1252, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1b64, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0133
        gbc.setState(0xa6fd, 0xf714, 0x64d0, 0xcb2c, 0x69ca, 0x978a, 0x1, 0x0);
        gbc.writeMem(0xa6fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf714, gbc.sp());
        EXPECT(0xa6ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fd));
        EXPECT(0x89, gbc.readMem(0xa6fe));
        // CB 89 0134
        gbc.setState(0x4a1e, 0x100d, 0x9290, 0x3d83, 0x3867, 0x1e4, 0x1, 0x0);
        gbc.writeMem(0x4a1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x100d, gbc.sp());
        EXPECT(0x4a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0135
        gbc.setState(0x69a3, 0x506e, 0xe940, 0xeae7, 0xa04e, 0x9e03, 0x0, 0x1);
        gbc.writeMem(0x69a3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x506e, gbc.sp());
        EXPECT(0x69a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0136
        gbc.setState(0xd024, 0x25e9, 0x360, 0x4740, 0x8c20, 0x2248, 0x1, 0x0);
        gbc.writeMem(0xd024, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x25e9, gbc.sp());
        EXPECT(0xd026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd024));
        EXPECT(0x89, gbc.readMem(0xd025));
        // CB 89 0137
        gbc.setState(0xd34e, 0x9dde, 0xee00, 0xa818, 0x8baf, 0x81f0, 0x1, 0x0);
        gbc.writeMem(0xd34e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9dde, gbc.sp());
        EXPECT(0xd350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34e));
        EXPECT(0x89, gbc.readMem(0xd34f));
        // CB 89 0138
        gbc.setState(0xe0c2, 0x9e11, 0x6e40, 0x16f9, 0xfe8d, 0x4c19, 0x0, 0x0);
        gbc.writeMem(0xe0c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9e11, gbc.sp());
        EXPECT(0xe0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c2));
        EXPECT(0x89, gbc.readMem(0xe0c3));
        // CB 89 0139
        gbc.setState(0xc445, 0xa1c6, 0x2b30, 0x146e, 0x4bd8, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0xc445, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa1c6, gbc.sp());
        EXPECT(0xc447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc445));
        EXPECT(0x89, gbc.readMem(0xc446));
        // CB 89 013A
        gbc.setState(0xe12e, 0xe0e7, 0x1d00, 0x3acb, 0x5da, 0x70ad, 0x0, 0x1);
        gbc.writeMem(0xe12e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0xe130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe12e));
        EXPECT(0x89, gbc.readMem(0xe12f));
        // CB 89 013B
        gbc.setState(0x83a1, 0x846c, 0x5710, 0xc6e1, 0xa279, 0x637b, 0x1, 0x1);
        gbc.writeMem(0x83a1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x846c, gbc.sp());
        EXPECT(0x83a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a1));
        EXPECT(0x89, gbc.readMem(0x83a2));
        // CB 89 013D
        gbc.setState(0x8778, 0x7597, 0x8360, 0xdbb4, 0x721a, 0x8c7c, 0x0, 0x0);
        gbc.writeMem(0x8778, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7597, gbc.sp());
        EXPECT(0x877a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8778));
        EXPECT(0x89, gbc.readMem(0x8779));
        // CB 89 013E
        gbc.setState(0x7b9b, 0xdb79, 0xb300, 0xbbd4, 0x1039, 0x8045, 0x0, 0x1);
        gbc.writeMem(0x7b9b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdb79, gbc.sp());
        EXPECT(0x7b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 013F
        gbc.setState(0xb537, 0x6dce, 0x9610, 0x1e44, 0x4967, 0x949c, 0x0, 0x0);
        gbc.writeMem(0xb537, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6dce, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb537));
        EXPECT(0x89, gbc.readMem(0xb538));
        // CB 89 0140
        gbc.setState(0x547c, 0x719d, 0x8180, 0x2bfd, 0xa96c, 0xc956, 0x1, 0x1);
        gbc.writeMem(0x547c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x719d, gbc.sp());
        EXPECT(0x547e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0141
        gbc.setState(0x7e4, 0x28bc, 0x7750, 0xa2c4, 0xd15d, 0x70ea, 0x1, 0x1);
        gbc.writeMem(0x7e4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0142
        gbc.setState(0xc5fa, 0xb0a, 0x3bb0, 0x8e28, 0xff04, 0x3268, 0x1, 0x1);
        gbc.writeMem(0xc5fa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb0a, gbc.sp());
        EXPECT(0xc5fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fa));
        EXPECT(0x89, gbc.readMem(0xc5fb));
        // CB 89 0145
        gbc.setState(0xe85b, 0xac51, 0x2b80, 0x17f8, 0x5d16, 0x98a7, 0x1, 0x1);
        gbc.writeMem(0xe85b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0xe85d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe85b));
        EXPECT(0x89, gbc.readMem(0xe85c));
        // CB 89 0146
        gbc.setState(0x2c5, 0x9715, 0x4660, 0xb56d, 0x3455, 0xf1ba, 0x1, 0x1);
        gbc.writeMem(0x2c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9715, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0148
        gbc.setState(0xa90, 0xba9e, 0x1450, 0x22ab, 0xb82e, 0x8abd, 0x1, 0x0);
        gbc.writeMem(0xa90, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xba9e, gbc.sp());
        EXPECT(0xa92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0149
        gbc.setState(0x4702, 0x3cef, 0x2a30, 0x5c65, 0xd0d1, 0x30dc, 0x1, 0x1);
        gbc.writeMem(0x4702, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0x4704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 014B
        gbc.setState(0x3e8, 0xfc32, 0x3b90, 0x9d0c, 0x7ac9, 0x4607, 0x1, 0x0);
        gbc.writeMem(0x3e8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xfc32, gbc.sp());
        EXPECT(0x3ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 014C
        gbc.setState(0x4927, 0x1d4e, 0x6860, 0x8a8e, 0x8769, 0x10e3, 0x0, 0x1);
        gbc.writeMem(0x4927, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1d4e, gbc.sp());
        EXPECT(0x4929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 014D
        gbc.setState(0x92ba, 0x72b8, 0xbee0, 0x1024, 0xe4f9, 0x3945, 0x1, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x72b8, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0x89, gbc.readMem(0x92bb));
        // CB 89 014F
        gbc.setState(0xeb6f, 0x5dcf, 0x2eb0, 0x65da, 0xfd57, 0xfe27, 0x1, 0x0);
        gbc.writeMem(0xeb6f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5dcf, gbc.sp());
        EXPECT(0xeb71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6f));
        EXPECT(0x89, gbc.readMem(0xeb70));
        // CB 89 0150
        gbc.setState(0x7ecf, 0x8677, 0x89e0, 0xbb0a, 0xb07d, 0xb519, 0x0, 0x0);
        gbc.writeMem(0x7ecf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8677, gbc.sp());
        EXPECT(0x7ed1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0152
        gbc.setState(0xcce6, 0x9d4a, 0xf7b0, 0x7e06, 0xcb9f, 0x8fa0, 0x1, 0x0);
        gbc.writeMem(0xcce6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9d4a, gbc.sp());
        EXPECT(0xcce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce6));
        EXPECT(0x89, gbc.readMem(0xcce7));
        // CB 89 0153
        gbc.setState(0x8a69, 0x9d77, 0x9110, 0xf94f, 0x9312, 0x4a73, 0x1, 0x0);
        gbc.writeMem(0x8a69, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9d77, gbc.sp());
        EXPECT(0x8a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a69));
        EXPECT(0x89, gbc.readMem(0x8a6a));
        // CB 89 0154
        gbc.setState(0x6311, 0xb925, 0xb680, 0xb455, 0xb3b6, 0xb1db, 0x1, 0x0);
        gbc.writeMem(0x6311, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0x6313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0155
        gbc.setState(0x5339, 0x7590, 0x6390, 0x734b, 0xd5b2, 0x57a3, 0x1, 0x0);
        gbc.writeMem(0x5339, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7590, gbc.sp());
        EXPECT(0x533b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0156
        gbc.setState(0x4039, 0xd801, 0xe4f0, 0x2ffd, 0x9843, 0x9196, 0x0, 0x0);
        gbc.writeMem(0x4039, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd801, gbc.sp());
        EXPECT(0x403b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0157
        gbc.setState(0xb52b, 0xbe1b, 0xd430, 0xfd5e, 0x3182, 0x48b2, 0x1, 0x0);
        gbc.writeMem(0xb52b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xbe1b, gbc.sp());
        EXPECT(0xb52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb52b));
        EXPECT(0x89, gbc.readMem(0xb52c));
        // CB 89 0158
        gbc.setState(0xe606, 0x5482, 0x1100, 0x6e3b, 0xdd8, 0x7648, 0x1, 0x0);
        gbc.writeMem(0xe606, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5482, gbc.sp());
        EXPECT(0xe608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe606));
        EXPECT(0x89, gbc.readMem(0xe607));
        // CB 89 0159
        gbc.setState(0x369, 0xc055, 0x6980, 0xca10, 0x911a, 0xd3bf, 0x0, 0x1);
        gbc.writeMem(0x369, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc055, gbc.sp());
        EXPECT(0x36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 015A
        gbc.setState(0x1eb9, 0x513a, 0xcdb0, 0xeafd, 0xf7a1, 0xc8bf, 0x1, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x513a, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 015B
        gbc.setState(0xac68, 0x6ba3, 0xf280, 0x3f79, 0x5f03, 0x14a3, 0x0, 0x0);
        gbc.writeMem(0xac68, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6ba3, gbc.sp());
        EXPECT(0xac6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac68));
        EXPECT(0x89, gbc.readMem(0xac69));
        // CB 89 015C
        gbc.setState(0x94b5, 0x99e4, 0x1650, 0xdd7a, 0xd951, 0x413e, 0x0, 0x0);
        gbc.writeMem(0x94b5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x99e4, gbc.sp());
        EXPECT(0x94b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b5));
        EXPECT(0x89, gbc.readMem(0x94b6));
        // CB 89 015D
        gbc.setState(0x93bf, 0x6d20, 0x5370, 0xca43, 0xcd2, 0x9ac8, 0x0, 0x1);
        gbc.writeMem(0x93bf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6d20, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93bf));
        EXPECT(0x89, gbc.readMem(0x93c0));
        // CB 89 015E
        gbc.setState(0x6d42, 0x9ed1, 0xfc70, 0x76dd, 0x68d4, 0x20c8, 0x1, 0x1);
        gbc.writeMem(0x6d42, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0x6d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 015F
        gbc.setState(0x88c1, 0x8e25, 0x9bd0, 0x6baf, 0x2ac8, 0x547f, 0x0, 0x1);
        gbc.writeMem(0x88c1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0x88c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c1));
        EXPECT(0x89, gbc.readMem(0x88c2));
        // CB 89 0160
        gbc.setState(0x84ca, 0xb818, 0xe9b0, 0xdca9, 0x7091, 0xc92b, 0x1, 0x0);
        gbc.writeMem(0x84ca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb818, gbc.sp());
        EXPECT(0x84cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ca));
        EXPECT(0x89, gbc.readMem(0x84cb));
        // CB 89 0161
        gbc.setState(0x4853, 0x6033, 0x7430, 0x8fb7, 0x6295, 0xae88, 0x1, 0x0);
        gbc.writeMem(0x4853, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6033, gbc.sp());
        EXPECT(0x4855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0162
        gbc.setState(0x764a, 0x3563, 0x1590, 0xd0b7, 0x51c4, 0xc9a6, 0x1, 0x0);
        gbc.writeMem(0x764a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3563, gbc.sp());
        EXPECT(0x764c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0163
        gbc.setState(0x46a9, 0xe36a, 0x35b0, 0x2090, 0xf8f6, 0x3e3d, 0x0, 0x1);
        gbc.writeMem(0x46a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe36a, gbc.sp());
        EXPECT(0x46ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0164
        gbc.setState(0xa451, 0x389c, 0xedc0, 0xa4bf, 0xb11f, 0xaca4, 0x0, 0x1);
        gbc.writeMem(0xa451, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x389c, gbc.sp());
        EXPECT(0xa453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa451));
        EXPECT(0x89, gbc.readMem(0xa452));
        // CB 89 0165
        gbc.setState(0x2c2d, 0xb3f2, 0x9e50, 0x2bb5, 0x5e8d, 0xd25a, 0x1, 0x1);
        gbc.writeMem(0x2c2d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb3f2, gbc.sp());
        EXPECT(0x2c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0166
        gbc.setState(0x4f78, 0xf4cc, 0x8850, 0x80ae, 0xc4f2, 0x559a, 0x1, 0x0);
        gbc.writeMem(0x4f78, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf4cc, gbc.sp());
        EXPECT(0x4f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0167
        gbc.setState(0x7bc, 0x3864, 0x4e90, 0x7d76, 0x6297, 0x40c0, 0x1, 0x1);
        gbc.writeMem(0x7bc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3864, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0168
        gbc.setState(0x3740, 0x358a, 0xf400, 0xef31, 0xb99e, 0x6969, 0x0, 0x0);
        gbc.writeMem(0x3740, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x358a, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0169
        gbc.setState(0x662, 0x2529, 0x4d00, 0xce4, 0x505a, 0xab0, 0x0, 0x0);
        gbc.writeMem(0x662, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2529, gbc.sp());
        EXPECT(0x664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 016A
        gbc.setState(0xe529, 0xd452, 0x3340, 0xa837, 0xe5d, 0x1db8, 0x0, 0x1);
        gbc.writeMem(0xe529, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd452, gbc.sp());
        EXPECT(0xe52b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe529));
        EXPECT(0x89, gbc.readMem(0xe52a));
        // CB 89 016B
        gbc.setState(0xa8f0, 0x7503, 0x640, 0xfa08, 0xe0ed, 0x5c02, 0x1, 0x1);
        gbc.writeMem(0xa8f0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7503, gbc.sp());
        EXPECT(0xa8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f0));
        EXPECT(0x89, gbc.readMem(0xa8f1));
        // CB 89 016C
        gbc.setState(0x30f2, 0x4092, 0x38b0, 0x5672, 0x401, 0x52d5, 0x1, 0x1);
        gbc.writeMem(0x30f2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4092, gbc.sp());
        EXPECT(0x30f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 016D
        gbc.setState(0x28fd, 0x824b, 0x53b0, 0x33de, 0xc20c, 0x8da3, 0x0, 0x1);
        gbc.writeMem(0x28fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x824b, gbc.sp());
        EXPECT(0x28ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 016F
        gbc.setState(0x5295, 0x81a4, 0xf980, 0x19ef, 0x44b4, 0x63a6, 0x1, 0x0);
        gbc.writeMem(0x5295, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0x5297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0170
        gbc.setState(0x25fa, 0xeb72, 0xb00, 0x6d55, 0x79b5, 0x2eb6, 0x0, 0x0);
        gbc.writeMem(0x25fa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xeb72, gbc.sp());
        EXPECT(0x25fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0171
        gbc.setState(0x86c3, 0x95e7, 0xab50, 0x353b, 0xf701, 0xe464, 0x1, 0x1);
        gbc.writeMem(0x86c3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x95e7, gbc.sp());
        EXPECT(0x86c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c3));
        EXPECT(0x89, gbc.readMem(0x86c4));
        // CB 89 0172
        gbc.setState(0xb7e9, 0xa0cf, 0xe840, 0x1df, 0xa0de, 0x2bd4, 0x1, 0x0);
        gbc.writeMem(0xb7e9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa0cf, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e9));
        EXPECT(0x89, gbc.readMem(0xb7ea));
        // CB 89 0174
        gbc.setState(0xb06a, 0x7820, 0x160, 0xdab3, 0xfd93, 0xa43, 0x0, 0x1);
        gbc.writeMem(0xb06a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7820, gbc.sp());
        EXPECT(0xb06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06a));
        EXPECT(0x89, gbc.readMem(0xb06b));
        // CB 89 0175
        gbc.setState(0x4332, 0xaf8f, 0xb520, 0xca92, 0x5a3b, 0x3c74, 0x1, 0x0);
        gbc.writeMem(0x4332, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaf8f, gbc.sp());
        EXPECT(0x4334, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0176
        gbc.setState(0xa86d, 0x4e1d, 0x14a0, 0xb780, 0x5470, 0x7bff, 0x1, 0x1);
        gbc.writeMem(0xa86d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0xa86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86d));
        EXPECT(0x89, gbc.readMem(0xa86e));
        // CB 89 0177
        gbc.setState(0x8640, 0x559b, 0xe080, 0xfea2, 0x577, 0x38ff, 0x0, 0x0);
        gbc.writeMem(0x8640, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x559b, gbc.sp());
        EXPECT(0x8642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8640));
        EXPECT(0x89, gbc.readMem(0x8641));
        // CB 89 0178
        gbc.setState(0x2de9, 0x91ff, 0xe450, 0xd5f4, 0x29fb, 0x9dd6, 0x1, 0x1);
        gbc.writeMem(0x2de9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x91ff, gbc.sp());
        EXPECT(0x2deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0179
        gbc.setState(0x822f, 0xfed1, 0xfb10, 0x1989, 0x9ec4, 0x6713, 0x0, 0x1);
        gbc.writeMem(0x822f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfed1, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822f));
        EXPECT(0x89, gbc.readMem(0x8230));
        // CB 89 017A
        gbc.setState(0x3d62, 0xb624, 0x21e0, 0x4b4f, 0x952d, 0x7c1c, 0x1, 0x0);
        gbc.writeMem(0x3d62, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb624, gbc.sp());
        EXPECT(0x3d64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 017B
        gbc.setState(0x9876, 0xa822, 0x5210, 0x53bc, 0xe25, 0xfabf, 0x0, 0x0);
        gbc.writeMem(0x9876, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa822, gbc.sp());
        EXPECT(0x9878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9876));
        EXPECT(0x89, gbc.readMem(0x9877));
        // CB 89 017C
        gbc.setState(0x914e, 0x22cd, 0xe540, 0x74ee, 0x2412, 0xfda, 0x0, 0x1);
        gbc.writeMem(0x914e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0x9150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x914e));
        EXPECT(0x89, gbc.readMem(0x914f));
        // CB 89 017D
        gbc.setState(0x8bdc, 0x2b03, 0x9430, 0x315b, 0x2623, 0xbc7e, 0x1, 0x1);
        gbc.writeMem(0x8bdc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0x8bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdc));
        EXPECT(0x89, gbc.readMem(0x8bdd));
        // CB 89 017E
        gbc.setState(0xbd20, 0x206f, 0x300, 0xa1ad, 0xc4cb, 0xae3c, 0x1, 0x0);
        gbc.writeMem(0xbd20, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x206f, gbc.sp());
        EXPECT(0xbd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd20));
        EXPECT(0x89, gbc.readMem(0xbd21));
        // CB 89 017F
        gbc.setState(0x8d0f, 0x9e5e, 0x2cc0, 0x1844, 0x9980, 0xd060, 0x0, 0x1);
        gbc.writeMem(0x8d0f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9e5e, gbc.sp());
        EXPECT(0x8d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d0f));
        EXPECT(0x89, gbc.readMem(0x8d10));
        // CB 89 0180
        gbc.setState(0xd181, 0x84b6, 0xf260, 0x6829, 0xe6b2, 0x6b2d, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd181));
        EXPECT(0x89, gbc.readMem(0xd182));
        // CB 89 0181
        gbc.setState(0x9a21, 0xcc62, 0x3c10, 0xafa2, 0xa857, 0x282b, 0x1, 0x0);
        gbc.writeMem(0x9a21, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcc62, gbc.sp());
        EXPECT(0x9a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a21));
        EXPECT(0x89, gbc.readMem(0x9a22));
        // CB 89 0182
        gbc.setState(0x9ce9, 0xc791, 0x8910, 0xe5d7, 0x87af, 0x1043, 0x1, 0x1);
        gbc.writeMem(0x9ce9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc791, gbc.sp());
        EXPECT(0x9ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce9));
        EXPECT(0x89, gbc.readMem(0x9cea));
        // CB 89 0183
        gbc.setState(0xdfcd, 0x641d, 0x7140, 0x3230, 0x457c, 0xc931, 0x1, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x641d, gbc.sp());
        EXPECT(0xdfcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcd));
        EXPECT(0x89, gbc.readMem(0xdfce));
        // CB 89 0184
        gbc.setState(0x3bf4, 0xa403, 0x3c80, 0x6590, 0x40b8, 0x6ca9, 0x1, 0x1);
        gbc.writeMem(0x3bf4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa403, gbc.sp());
        EXPECT(0x3bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0185
        gbc.setState(0x9291, 0xa1eb, 0x8a90, 0xca9e, 0xe9d7, 0x19f2, 0x0, 0x0);
        gbc.writeMem(0x9291, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa1eb, gbc.sp());
        EXPECT(0x9293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9291));
        EXPECT(0x89, gbc.readMem(0x9292));
        // CB 89 0186
        gbc.setState(0x67d2, 0xe841, 0x6eb0, 0xd8d, 0x54d8, 0x5a45, 0x0, 0x1);
        gbc.writeMem(0x67d2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe841, gbc.sp());
        EXPECT(0x67d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0187
        gbc.setState(0xb7e3, 0xadf8, 0x2330, 0x42ca, 0xce48, 0x697a, 0x1, 0x1);
        gbc.writeMem(0xb7e3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0xb7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e3));
        EXPECT(0x89, gbc.readMem(0xb7e4));
        // CB 89 0188
        gbc.setState(0x86f6, 0xf520, 0x79c0, 0x95d8, 0xd827, 0xf3a1, 0x0, 0x1);
        gbc.writeMem(0x86f6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf520, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f6));
        EXPECT(0x89, gbc.readMem(0x86f7));
        // CB 89 0189
        gbc.setState(0xd2e5, 0xdb99, 0xfdc0, 0x4647, 0xdb44, 0x9daa, 0x0, 0x0);
        gbc.writeMem(0xd2e5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xdb99, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e5));
        EXPECT(0x89, gbc.readMem(0xd2e6));
        // CB 89 018A
        gbc.setState(0x49a2, 0xe560, 0x7320, 0xe8cc, 0x6346, 0x13ab, 0x0, 0x0);
        gbc.writeMem(0x49a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe560, gbc.sp());
        EXPECT(0x49a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 018B
        gbc.setState(0x69ef, 0x86f5, 0x5c50, 0xe99a, 0xee9c, 0x3204, 0x0, 0x1);
        gbc.writeMem(0x69ef, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x86f5, gbc.sp());
        EXPECT(0x69f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 018C
        gbc.setState(0x463a, 0x42c0, 0x1100, 0x666, 0xb52f, 0xa7ca, 0x1, 0x1);
        gbc.writeMem(0x463a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x42c0, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 018D
        gbc.setState(0xa2ef, 0x37e5, 0xa620, 0xcfea, 0xb4e1, 0x71af, 0x1, 0x1);
        gbc.writeMem(0xa2ef, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x37e5, gbc.sp());
        EXPECT(0xa2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ef));
        EXPECT(0x89, gbc.readMem(0xa2f0));
        // CB 89 018E
        gbc.setState(0xaca3, 0x8844, 0x81f0, 0xf77b, 0xa2f8, 0x1294, 0x1, 0x1);
        gbc.writeMem(0xaca3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8844, gbc.sp());
        EXPECT(0xaca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca3));
        EXPECT(0x89, gbc.readMem(0xaca4));
        // CB 89 018F
        gbc.setState(0x2094, 0xe391, 0x47c0, 0xf85c, 0x3cf0, 0xd83a, 0x1, 0x1);
        gbc.writeMem(0x2094, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe391, gbc.sp());
        EXPECT(0x2096, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0190
        gbc.setState(0x646c, 0x3d1, 0x7b70, 0x8fdd, 0xa844, 0x996b, 0x1, 0x1);
        gbc.writeMem(0x646c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3d1, gbc.sp());
        EXPECT(0x646e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0191
        gbc.setState(0xdf5f, 0x5cde, 0xcd10, 0x3186, 0xb04, 0xbaf, 0x0, 0x0);
        gbc.writeMem(0xdf5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5cde, gbc.sp());
        EXPECT(0xdf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5f));
        EXPECT(0x89, gbc.readMem(0xdf60));
        // CB 89 0192
        gbc.setState(0x7f33, 0x65a1, 0x9d40, 0xd528, 0x8ac9, 0xcad6, 0x0, 0x0);
        gbc.writeMem(0x7f33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x65a1, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0193
        gbc.setState(0x2a5, 0xf86, 0x7610, 0x2a2a, 0x2260, 0xe04, 0x1, 0x0);
        gbc.writeMem(0x2a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf86, gbc.sp());
        EXPECT(0x2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0194
        gbc.setState(0x6189, 0x165a, 0xd30, 0x9b65, 0xc817, 0x6227, 0x1, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x165a, gbc.sp());
        EXPECT(0x618b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0195
        gbc.setState(0xdd2b, 0x99fc, 0x6890, 0x1b19, 0xf7d7, 0x7503, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x99fc, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2b));
        EXPECT(0x89, gbc.readMem(0xdd2c));
        // CB 89 0197
        gbc.setState(0xa98, 0x3ff6, 0xfe70, 0xdd21, 0x9d22, 0xac70, 0x1, 0x0);
        gbc.writeMem(0xa98, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3ff6, gbc.sp());
        EXPECT(0xa9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0198
        gbc.setState(0xbfc9, 0x3f39, 0xf550, 0xa6a, 0x2b07, 0x78dd, 0x1, 0x0);
        gbc.writeMem(0xbfc9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3f39, gbc.sp());
        EXPECT(0xbfcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc9));
        EXPECT(0x89, gbc.readMem(0xbfca));
        // CB 89 0199
        gbc.setState(0xe61a, 0x63bb, 0x2930, 0xcb20, 0x270d, 0xc068, 0x1, 0x1);
        gbc.writeMem(0xe61a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x63bb, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61a));
        EXPECT(0x89, gbc.readMem(0xe61b));
        // CB 89 019A
        gbc.setState(0x5944, 0xbed9, 0x76e0, 0x479f, 0x18f1, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0x5944, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbed9, gbc.sp());
        EXPECT(0x5946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 019B
        gbc.setState(0xa705, 0xc4a4, 0x55e0, 0xcfec, 0xb25f, 0xb3ed, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc4a4, gbc.sp());
        EXPECT(0xa707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa705));
        EXPECT(0x89, gbc.readMem(0xa706));
        // CB 89 019C
        gbc.setState(0x2e8e, 0x4285, 0x8ae0, 0x6a22, 0xcb55, 0x420, 0x1, 0x1);
        gbc.writeMem(0x2e8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4285, gbc.sp());
        EXPECT(0x2e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 019D
        gbc.setState(0x731f, 0xc177, 0x81e0, 0x90d4, 0xe614, 0x193e, 0x0, 0x0);
        gbc.writeMem(0x731f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc177, gbc.sp());
        EXPECT(0x7321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 019E
        gbc.setState(0x6f78, 0x8453, 0x1ef0, 0x6ad8, 0x1089, 0x78ae, 0x0, 0x1);
        gbc.writeMem(0x6f78, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8453, gbc.sp());
        EXPECT(0x6f7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 019F
        gbc.setState(0x5e2b, 0x2003, 0x8480, 0x19bf, 0x4b79, 0x6f87, 0x1, 0x0);
        gbc.writeMem(0x5e2b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2003, gbc.sp());
        EXPECT(0x5e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01A1
        gbc.setState(0xdb4b, 0x83dd, 0x4db0, 0xbf92, 0x1ca8, 0x6037, 0x0, 0x1);
        gbc.writeMem(0xdb4b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x83dd, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4b));
        EXPECT(0x89, gbc.readMem(0xdb4c));
        // CB 89 01A2
        gbc.setState(0x27be, 0xbc9c, 0x4d00, 0x55b0, 0x4429, 0x3986, 0x1, 0x0);
        gbc.writeMem(0x27be, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0x27c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01A3
        gbc.setState(0xae1a, 0x37ef, 0x7df0, 0x1ab2, 0xce63, 0x35cd, 0x0, 0x0);
        gbc.writeMem(0xae1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x37ef, gbc.sp());
        EXPECT(0xae1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1a));
        EXPECT(0x89, gbc.readMem(0xae1b));
        // CB 89 01A4
        gbc.setState(0x7c2, 0x5ebe, 0x8fd0, 0x5076, 0x2ed0, 0x4d6f, 0x1, 0x0);
        gbc.writeMem(0x7c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5ebe, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01A5
        gbc.setState(0x31d9, 0x92fa, 0x8130, 0x8e40, 0xd404, 0xb7bc, 0x0, 0x0);
        gbc.writeMem(0x31d9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x92fa, gbc.sp());
        EXPECT(0x31db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01A6
        gbc.setState(0x6bdc, 0xbdb4, 0x4ca0, 0xc8a1, 0xac12, 0xf63e, 0x0, 0x0);
        gbc.writeMem(0x6bdc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbdb4, gbc.sp());
        EXPECT(0x6bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01A7
        gbc.setState(0x507e, 0xe04f, 0xea90, 0xf870, 0x5f1e, 0x9961, 0x1, 0x1);
        gbc.writeMem(0x507e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe04f, gbc.sp());
        EXPECT(0x5080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01A8
        gbc.setState(0x460a, 0x57fc, 0xcf0, 0xb1d6, 0xb746, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x460a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0x460c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01A9
        gbc.setState(0xadae, 0x521c, 0x9080, 0x5ac4, 0x609f, 0x93de, 0x0, 0x1);
        gbc.writeMem(0xadae, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x521c, gbc.sp());
        EXPECT(0xadb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadae));
        EXPECT(0x89, gbc.readMem(0xadaf));
        // CB 89 01AB
        gbc.setState(0x2896, 0x982, 0x6490, 0xedfc, 0x1e4a, 0x1031, 0x1, 0x0);
        gbc.writeMem(0x2896, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x982, gbc.sp());
        EXPECT(0x2898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01AD
        gbc.setState(0x60a8, 0x49e5, 0x7740, 0xe276, 0x8389, 0xae9f, 0x0, 0x0);
        gbc.writeMem(0x60a8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x49e5, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01AE
        gbc.setState(0x80cc, 0x5b11, 0x6420, 0x79aa, 0x8485, 0x449c, 0x0, 0x0);
        gbc.writeMem(0x80cc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5b11, gbc.sp());
        EXPECT(0x80ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cc));
        EXPECT(0x89, gbc.readMem(0x80cd));
        // CB 89 01AF
        gbc.setState(0x7df2, 0x19c4, 0xf180, 0xd61a, 0xedf8, 0x4679, 0x1, 0x1);
        gbc.writeMem(0x7df2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x19c4, gbc.sp());
        EXPECT(0x7df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01B0
        gbc.setState(0x1eb9, 0xc97e, 0x1a10, 0xf096, 0xcf81, 0x7064, 0x1, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc97e, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01B1
        gbc.setState(0x760c, 0x4a3e, 0x90f0, 0xebca, 0x1121, 0xe93a, 0x1, 0x0);
        gbc.writeMem(0x760c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4a3e, gbc.sp());
        EXPECT(0x760e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01B2
        gbc.setState(0x44d7, 0x43f4, 0x2af0, 0x91c2, 0x62f2, 0x40f, 0x1, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x43f4, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01B3
        gbc.setState(0x7ba3, 0x2d41, 0xc7b0, 0xb2c, 0x962, 0x5aa9, 0x1, 0x1);
        gbc.writeMem(0x7ba3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2d41, gbc.sp());
        EXPECT(0x7ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01B4
        gbc.setState(0x2ec3, 0x6c35, 0x9fa0, 0x3fac, 0xf55e, 0x671, 0x1, 0x1);
        gbc.writeMem(0x2ec3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6c35, gbc.sp());
        EXPECT(0x2ec5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01B5
        gbc.setState(0xba08, 0x5f85, 0x4a70, 0x41c2, 0x408, 0x2acd, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5f85, gbc.sp());
        EXPECT(0xba0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba08));
        EXPECT(0x89, gbc.readMem(0xba09));
        // CB 89 01B6
        gbc.setState(0xcf5f, 0x28c3, 0x5fa0, 0x3def, 0xb188, 0x3b83, 0x0, 0x0);
        gbc.writeMem(0xcf5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0xcf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf5f));
        EXPECT(0x89, gbc.readMem(0xcf60));
        // CB 89 01B7
        gbc.setState(0x1507, 0x1d87, 0x8130, 0xc7fb, 0x7263, 0x94e6, 0x0, 0x1);
        gbc.writeMem(0x1507, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d87, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01B8
        gbc.setState(0x5ec6, 0x9e36, 0x2cd0, 0xe00e, 0x8f0f, 0x9d87, 0x0, 0x1);
        gbc.writeMem(0x5ec6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9e36, gbc.sp());
        EXPECT(0x5ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01B9
        gbc.setState(0x1836, 0x6e00, 0xbf0, 0x9049, 0x38b5, 0xefb1, 0x0, 0x1);
        gbc.writeMem(0x1836, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6e00, gbc.sp());
        EXPECT(0x1838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01BA
        gbc.setState(0x29f0, 0x9f34, 0xd0a0, 0x8e5c, 0xde7b, 0xef95, 0x1, 0x1);
        gbc.writeMem(0x29f0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9f34, gbc.sp());
        EXPECT(0x29f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01BB
        gbc.setState(0x6a8a, 0x56f4, 0x4440, 0x7e26, 0xef1d, 0xa54b, 0x1, 0x1);
        gbc.writeMem(0x6a8a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x56f4, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01BC
        gbc.setState(0xb29d, 0x9da8, 0xd8e0, 0x497, 0xa02, 0x41f9, 0x1, 0x0);
        gbc.writeMem(0xb29d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9da8, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29d));
        EXPECT(0x89, gbc.readMem(0xb29e));
        // CB 89 01BD
        gbc.setState(0x1481, 0x187c, 0xb760, 0xf9a3, 0xd6e5, 0xd227, 0x0, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x187c, gbc.sp());
        EXPECT(0x1483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01BE
        gbc.setState(0x353e, 0xc4f4, 0xb410, 0xbb7, 0x16e9, 0xf9c4, 0x0, 0x0);
        gbc.writeMem(0x353e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc4f4, gbc.sp());
        EXPECT(0x3540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01BF
        gbc.setState(0x25b3, 0x930b, 0xf2b0, 0xdc73, 0x434b, 0xd120, 0x1, 0x0);
        gbc.writeMem(0x25b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x930b, gbc.sp());
        EXPECT(0x25b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01C0
        gbc.setState(0x8b8e, 0x293c, 0x75f0, 0xa765, 0xcae2, 0xa899, 0x0, 0x0);
        gbc.writeMem(0x8b8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x293c, gbc.sp());
        EXPECT(0x8b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8e));
        EXPECT(0x89, gbc.readMem(0x8b8f));
        // CB 89 01C1
        gbc.setState(0xa2b5, 0x2358, 0x830, 0x55b8, 0xbd2c, 0xc2a1, 0x1, 0x0);
        gbc.writeMem(0xa2b5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2358, gbc.sp());
        EXPECT(0xa2b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b5));
        EXPECT(0x89, gbc.readMem(0xa2b6));
        // CB 89 01C2
        gbc.setState(0x8458, 0x673d, 0x5730, 0x327b, 0x4add, 0xcaa, 0x1, 0x1);
        gbc.writeMem(0x8458, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x673d, gbc.sp());
        EXPECT(0x845a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8458));
        EXPECT(0x89, gbc.readMem(0x8459));
        // CB 89 01C3
        gbc.setState(0x5cd2, 0x597d, 0x3b90, 0xa131, 0xcfbd, 0x8adb, 0x1, 0x1);
        gbc.writeMem(0x5cd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x597d, gbc.sp());
        EXPECT(0x5cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01C4
        gbc.setState(0xbad, 0x304f, 0x91a0, 0x80e3, 0x7b50, 0xac8c, 0x0, 0x0);
        gbc.writeMem(0xbad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x304f, gbc.sp());
        EXPECT(0xbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01C5
        gbc.setState(0x4ea, 0xc61, 0x4e80, 0x1a78, 0x6666, 0xd68f, 0x0, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc61, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01C6
        gbc.setState(0xcdd2, 0xe96c, 0x93b0, 0x4a39, 0x9791, 0x173a, 0x1, 0x1);
        gbc.writeMem(0xcdd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe96c, gbc.sp());
        EXPECT(0xcdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd2));
        EXPECT(0x89, gbc.readMem(0xcdd3));
        // CB 89 01C7
        gbc.setState(0x188c, 0xe9a8, 0x90a0, 0x657d, 0x9d4e, 0x4639, 0x1, 0x1);
        gbc.writeMem(0x188c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe9a8, gbc.sp());
        EXPECT(0x188e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01C8
        gbc.setState(0xc20f, 0x8345, 0xc350, 0x36fb, 0x40d4, 0x9416, 0x1, 0x0);
        gbc.writeMem(0xc20f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8345, gbc.sp());
        EXPECT(0xc211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20f));
        EXPECT(0x89, gbc.readMem(0xc210));
        // CB 89 01CA
        gbc.setState(0x49de, 0x470d, 0xa2d0, 0x89f6, 0x49d6, 0xc12a, 0x1, 0x0);
        gbc.writeMem(0x49de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x470d, gbc.sp());
        EXPECT(0x49e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01CB
        gbc.setState(0x4b4b, 0x4f88, 0x9920, 0x9d53, 0xd8b0, 0x89f6, 0x1, 0x0);
        gbc.writeMem(0x4b4b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4f88, gbc.sp());
        EXPECT(0x4b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01CC
        gbc.setState(0x908f, 0xe035, 0xab30, 0xf553, 0xe369, 0xed9d, 0x0, 0x1);
        gbc.writeMem(0x908f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe035, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908f));
        EXPECT(0x89, gbc.readMem(0x9090));
        // CB 89 01CD
        gbc.setState(0xa1f5, 0x15bd, 0x5b20, 0xd3d5, 0x61c3, 0x6166, 0x1, 0x0);
        gbc.writeMem(0xa1f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15bd, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f5));
        EXPECT(0x89, gbc.readMem(0xa1f6));
        // CB 89 01CE
        gbc.setState(0x1168, 0xddf4, 0xc4f0, 0xf212, 0x36f7, 0x6211, 0x1, 0x1);
        gbc.writeMem(0x1168, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xddf4, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01CF
        gbc.setState(0xb409, 0x67c9, 0xc580, 0x9852, 0xcb98, 0xc59e, 0x1, 0x0);
        gbc.writeMem(0xb409, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0xb40b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb409));
        EXPECT(0x89, gbc.readMem(0xb40a));
        // CB 89 01D0
        gbc.setState(0x2417, 0x7bfa, 0xcd80, 0xeadf, 0xe6ae, 0x8189, 0x0, 0x1);
        gbc.writeMem(0x2417, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x7bfa, gbc.sp());
        EXPECT(0x2419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01D1
        gbc.setState(0xcd2a, 0xe275, 0xcab0, 0x2ab4, 0xa70d, 0x4ae0, 0x0, 0x0);
        gbc.writeMem(0xcd2a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0xcd2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2a));
        EXPECT(0x89, gbc.readMem(0xcd2b));
        // CB 89 01D2
        gbc.setState(0x95, 0x763d, 0x6470, 0xdf84, 0x31f3, 0x6309, 0x1, 0x0);
        gbc.writeMem(0x95, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x763d, gbc.sp());
        EXPECT(0x97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01D3
        gbc.setState(0x9bdb, 0x678d, 0xbfe0, 0xa490, 0x165b, 0x99d8, 0x1, 0x0);
        gbc.writeMem(0x9bdb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x678d, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdb));
        EXPECT(0x89, gbc.readMem(0x9bdc));
        // CB 89 01D4
        gbc.setState(0x3732, 0x671d, 0x3d30, 0xf97, 0x47cb, 0xb953, 0x1, 0x0);
        gbc.writeMem(0x3732, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x671d, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01D5
        gbc.setState(0x5ca4, 0x8e4f, 0x6750, 0xd681, 0x712c, 0xb6c6, 0x1, 0x0);
        gbc.writeMem(0x5ca4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8e4f, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01D6
        gbc.setState(0x3c3, 0x168a, 0x5f30, 0xd4f7, 0xef53, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x3c3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x168a, gbc.sp());
        EXPECT(0x3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01D7
        gbc.setState(0xd5ca, 0x10e9, 0x6a60, 0x4dec, 0x6332, 0x378f, 0x1, 0x1);
        gbc.writeMem(0xd5ca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ca));
        EXPECT(0x89, gbc.readMem(0xd5cb));
        // CB 89 01D8
        gbc.setState(0x9402, 0x2d11, 0x6e70, 0xf840, 0xc4f4, 0x3c94, 0x0, 0x1);
        gbc.writeMem(0x9402, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2d11, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9402));
        EXPECT(0x89, gbc.readMem(0x9403));
        // CB 89 01DA
        gbc.setState(0x1ff7, 0x8eca, 0x8610, 0x192d, 0xb032, 0x9112, 0x1, 0x1);
        gbc.writeMem(0x1ff7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0x1ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01DB
        gbc.setState(0x2855, 0x5194, 0x8db0, 0x609a, 0xf44, 0x55e6, 0x0, 0x1);
        gbc.writeMem(0x2855, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5194, gbc.sp());
        EXPECT(0x2857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01DC
        gbc.setState(0x1031, 0x3844, 0x7420, 0xb16b, 0xd79e, 0xd571, 0x1, 0x0);
        gbc.writeMem(0x1031, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3844, gbc.sp());
        EXPECT(0x1033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01DD
        gbc.setState(0x207f, 0xe088, 0xd460, 0x8092, 0xcbeb, 0xcac5, 0x0, 0x1);
        gbc.writeMem(0x207f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe088, gbc.sp());
        EXPECT(0x2081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01DE
        gbc.setState(0xd64a, 0xdb03, 0x1e30, 0xeda8, 0xe9f3, 0xa29d, 0x1, 0x0);
        gbc.writeMem(0xd64a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdb03, gbc.sp());
        EXPECT(0xd64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64a));
        EXPECT(0x89, gbc.readMem(0xd64b));
        // CB 89 01DF
        gbc.setState(0x1a0, 0x2119, 0x4a10, 0x9cc4, 0xaf3, 0x3386, 0x0, 0x0);
        gbc.writeMem(0x1a0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2119, gbc.sp());
        EXPECT(0x1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01E0
        gbc.setState(0x6db4, 0xda70, 0xc80, 0x9f72, 0x7832, 0x8c0c, 0x0, 0x1);
        gbc.writeMem(0x6db4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xda70, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01E1
        gbc.setState(0x749b, 0x3f55, 0x1b40, 0xd008, 0x1c38, 0xba5b, 0x0, 0x0);
        gbc.writeMem(0x749b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3f55, gbc.sp());
        EXPECT(0x749d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01E2
        gbc.setState(0x8e12, 0xd065, 0xa2b0, 0x4b7d, 0xf79a, 0x1564, 0x0, 0x1);
        gbc.writeMem(0x8e12, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd065, gbc.sp());
        EXPECT(0x8e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e12));
        EXPECT(0x89, gbc.readMem(0x8e13));
        // CB 89 01E3
        gbc.setState(0xaad9, 0xb19f, 0x5bb0, 0xc91c, 0x8a16, 0x8ba9, 0x0, 0x1);
        gbc.writeMem(0xaad9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb19f, gbc.sp());
        EXPECT(0xaadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad9));
        EXPECT(0x89, gbc.readMem(0xaada));
        // CB 89 01E4
        gbc.setState(0x75f4, 0xd7ce, 0xc80, 0x85df, 0x8d4, 0x5f78, 0x1, 0x1);
        gbc.writeMem(0x75f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd7ce, gbc.sp());
        EXPECT(0x75f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01E5
        gbc.setState(0x2351, 0xb2b2, 0x1460, 0x713, 0xe55c, 0x72ea, 0x1, 0x1);
        gbc.writeMem(0x2351, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01E6
        gbc.setState(0x9660, 0x30ed, 0x6730, 0x92b5, 0x1cdc, 0xe87e, 0x0, 0x1);
        gbc.writeMem(0x9660, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x30ed, gbc.sp());
        EXPECT(0x9662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9660));
        EXPECT(0x89, gbc.readMem(0x9661));
        // CB 89 01E7
        gbc.setState(0xd7cc, 0x37f8, 0x8e40, 0xa135, 0x36ea, 0x72c7, 0x0, 0x1);
        gbc.writeMem(0xd7cc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x37f8, gbc.sp());
        EXPECT(0xd7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7cc));
        EXPECT(0x89, gbc.readMem(0xd7cd));
        // CB 89 01E8
        gbc.setState(0xeefa, 0x3239, 0x8350, 0x6e47, 0x10e0, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0xeefa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3239, gbc.sp());
        EXPECT(0xeefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefa));
        EXPECT(0x89, gbc.readMem(0xeefb));
        // CB 89 01E9
        gbc.setState(0xbbc, 0x8c8d, 0xec70, 0xb809, 0xc571, 0x24e, 0x1, 0x0);
        gbc.writeMem(0xbbc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8c8d, gbc.sp());
        EXPECT(0xbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01EA
        gbc.setState(0xa6e7, 0xed92, 0x3c80, 0x2928, 0xec1c, 0xca6a, 0x1, 0x1);
        gbc.writeMem(0xa6e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0xa6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e7));
        EXPECT(0x89, gbc.readMem(0xa6e8));
        // CB 89 01EB
        gbc.setState(0x463d, 0xde, 0xfc70, 0xd2fe, 0x5d1c, 0xefcb, 0x0, 0x0);
        gbc.writeMem(0x463d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0x463f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01ED
        gbc.setState(0xeab4, 0x60c5, 0x4850, 0x48ef, 0x608e, 0x381d, 0x1, 0x1);
        gbc.writeMem(0xeab4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x60c5, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab4));
        EXPECT(0x89, gbc.readMem(0xeab5));
        // CB 89 01EE
        gbc.setState(0x748a, 0x159b, 0x1210, 0x5d90, 0xa517, 0x1dd7, 0x0, 0x0);
        gbc.writeMem(0x748a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x159b, gbc.sp());
        EXPECT(0x748c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01EF
        gbc.setState(0x19e8, 0x33e7, 0xbe50, 0x72b2, 0x907b, 0x1a33, 0x1, 0x0);
        gbc.writeMem(0x19e8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x33e7, gbc.sp());
        EXPECT(0x19ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01F0
        gbc.setState(0x3484, 0x79b5, 0x1850, 0x67b2, 0x3612, 0xbaa, 0x1, 0x0);
        gbc.writeMem(0x3484, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x79b5, gbc.sp());
        EXPECT(0x3486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01F1
        gbc.setState(0x2e54, 0x250f, 0xc420, 0xb03f, 0x16a6, 0xd3b0, 0x1, 0x0);
        gbc.writeMem(0x2e54, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x250f, gbc.sp());
        EXPECT(0x2e56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01F2
        gbc.setState(0xc622, 0xe71c, 0x42c0, 0x9325, 0xef2a, 0xf789, 0x0, 0x0);
        gbc.writeMem(0xc622, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe71c, gbc.sp());
        EXPECT(0xc624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc622));
        EXPECT(0x89, gbc.readMem(0xc623));
        // CB 89 01F3
        gbc.setState(0x8a89, 0xc096, 0xa7b0, 0x56d9, 0xc8c4, 0x9767, 0x1, 0x1);
        gbc.writeMem(0x8a89, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc096, gbc.sp());
        EXPECT(0x8a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a89));
        EXPECT(0x89, gbc.readMem(0x8a8a));
        // CB 89 01F4
        gbc.setState(0x35dc, 0xc46d, 0x7920, 0x3818, 0x17d, 0x15b6, 0x1, 0x1);
        gbc.writeMem(0x35dc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc46d, gbc.sp());
        EXPECT(0x35de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01F5
        gbc.setState(0x83c7, 0xad49, 0xe910, 0x80bb, 0x48a8, 0x5b4a, 0x1, 0x1);
        gbc.writeMem(0x83c7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0x83c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c7));
        EXPECT(0x89, gbc.readMem(0x83c8));
        // CB 89 01F6
        gbc.setState(0x12f2, 0xe4a, 0xbb90, 0xc912, 0xa433, 0x6583, 0x1, 0x1);
        gbc.writeMem(0x12f2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe4a, gbc.sp());
        EXPECT(0x12f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01F7
        gbc.setState(0x8cca, 0x6106, 0x4f00, 0x3450, 0xa002, 0xb50a, 0x0, 0x1);
        gbc.writeMem(0x8cca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6106, gbc.sp());
        EXPECT(0x8ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cca));
        EXPECT(0x89, gbc.readMem(0x8ccb));
        // CB 89 01F8
        gbc.setState(0x98ec, 0x8321, 0x8560, 0x1d0e, 0xdec4, 0x8349, 0x1, 0x0);
        gbc.writeMem(0x98ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8321, gbc.sp());
        EXPECT(0x98ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ec));
        EXPECT(0x89, gbc.readMem(0x98ed));
        // CB 89 01F9
        gbc.setState(0x6f2c, 0xd87a, 0xf020, 0x42f, 0xa9a5, 0x52a8, 0x1, 0x1);
        gbc.writeMem(0x6f2c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd87a, gbc.sp());
        EXPECT(0x6f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 01FA
        gbc.setState(0xde86, 0xf2b7, 0xbcd0, 0x5e25, 0xe34b, 0xb6e3, 0x0, 0x1);
        gbc.writeMem(0xde86, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf2b7, gbc.sp());
        EXPECT(0xde88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde86));
        EXPECT(0x89, gbc.readMem(0xde87));
        // CB 89 01FB
        gbc.setState(0x61e6, 0x9802, 0xca30, 0xf5a8, 0x7ebf, 0xa221, 0x0, 0x1);
        gbc.writeMem(0x61e6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9802, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 01FC
        gbc.setState(0xdbe8, 0x63a, 0x2ab0, 0x9b39, 0x1618, 0xdba5, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x63a, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe8));
        EXPECT(0x89, gbc.readMem(0xdbe9));
        // CB 89 01FD
        gbc.setState(0xa133, 0xff8e, 0x5aa0, 0xfa99, 0x611e, 0x98fd, 0x1, 0x0);
        gbc.writeMem(0xa133, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff8e, gbc.sp());
        EXPECT(0xa135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa133));
        EXPECT(0x89, gbc.readMem(0xa134));
        // CB 89 01FE
        gbc.setState(0x63b0, 0xd868, 0x7210, 0xac76, 0x24dd, 0xa8be, 0x0, 0x1);
        gbc.writeMem(0x63b0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd868, gbc.sp());
        EXPECT(0x63b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0200
        gbc.setState(0xacc8, 0xd5f1, 0xa040, 0x55bf, 0xf1c, 0x31a1, 0x0, 0x1);
        gbc.writeMem(0xacc8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd5f1, gbc.sp());
        EXPECT(0xacca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc8));
        EXPECT(0x89, gbc.readMem(0xacc9));
        // CB 89 0201
        gbc.setState(0x660b, 0xb97f, 0x1590, 0x816a, 0xda57, 0xbd9a, 0x0, 0x0);
        gbc.writeMem(0x660b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb97f, gbc.sp());
        EXPECT(0x660d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0202
        gbc.setState(0x94ab, 0x5920, 0x1940, 0x189, 0x5f98, 0x3216, 0x1, 0x0);
        gbc.writeMem(0x94ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0x94ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ab));
        EXPECT(0x89, gbc.readMem(0x94ac));
        // CB 89 0203
        gbc.setState(0x447f, 0xca7b, 0xd3b0, 0x28c1, 0x45ce, 0x1f76, 0x1, 0x1);
        gbc.writeMem(0x447f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xca7b, gbc.sp());
        EXPECT(0x4481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0204
        gbc.setState(0x8d23, 0x733e, 0x3b80, 0x1491, 0xfc04, 0xa03f, 0x0, 0x0);
        gbc.writeMem(0x8d23, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x733e, gbc.sp());
        EXPECT(0x8d25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d23));
        EXPECT(0x89, gbc.readMem(0x8d24));
        // CB 89 0205
        gbc.setState(0x3a0a, 0x31f9, 0x100, 0x76f0, 0x21b, 0xebae, 0x1, 0x1);
        gbc.writeMem(0x3a0a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x31f9, gbc.sp());
        EXPECT(0x3a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0206
        gbc.setState(0xb73a, 0x5ccf, 0xf320, 0x2120, 0x647f, 0x984b, 0x1, 0x0);
        gbc.writeMem(0xb73a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5ccf, gbc.sp());
        EXPECT(0xb73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb73a));
        EXPECT(0x89, gbc.readMem(0xb73b));
        // CB 89 0207
        gbc.setState(0x85ba, 0x6010, 0x29f0, 0xe056, 0xcbd7, 0xedbb, 0x0, 0x1);
        gbc.writeMem(0x85ba, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6010, gbc.sp());
        EXPECT(0x85bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ba));
        EXPECT(0x89, gbc.readMem(0x85bb));
        // CB 89 0208
        gbc.setState(0xafff, 0x6a5e, 0x3c60, 0xf510, 0xbb4f, 0xe008, 0x1, 0x0);
        gbc.writeMem(0xafff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a5e, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafff));
        EXPECT(0x89, gbc.readMem(0xb000));
        // CB 89 0209
        gbc.setState(0x98c5, 0x723, 0xc1a0, 0x4f90, 0xde25, 0x77c8, 0x1, 0x1);
        gbc.writeMem(0x98c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x723, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c5));
        EXPECT(0x89, gbc.readMem(0x98c6));
        // CB 89 020B
        gbc.setState(0xd185, 0x8ad7, 0x5920, 0xec69, 0x9f84, 0x9bf0, 0x1, 0x1);
        gbc.writeMem(0xd185, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8ad7, gbc.sp());
        EXPECT(0xd187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd185));
        EXPECT(0x89, gbc.readMem(0xd186));
        // CB 89 020C
        gbc.setState(0x505c, 0x34d4, 0x5da0, 0x3058, 0x20dc, 0x367d, 0x1, 0x1);
        gbc.writeMem(0x505c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x34d4, gbc.sp());
        EXPECT(0x505e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 020D
        gbc.setState(0x714e, 0x9d3e, 0x6b60, 0x8062, 0xf28a, 0xf8e, 0x1, 0x0);
        gbc.writeMem(0x714e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9d3e, gbc.sp());
        EXPECT(0x7150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 020F
        gbc.setState(0x236, 0x75d8, 0xf590, 0xf403, 0xd64e, 0x10ba, 0x1, 0x1);
        gbc.writeMem(0x236, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x75d8, gbc.sp());
        EXPECT(0x238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0211
        gbc.setState(0x4b42, 0x100e, 0x1290, 0xc27, 0x7f2, 0xe726, 0x1, 0x1);
        gbc.writeMem(0x4b42, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x100e, gbc.sp());
        EXPECT(0x4b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0213
        gbc.setState(0x1cea, 0x934b, 0xa0b0, 0xcb53, 0xdbdc, 0x2935, 0x0, 0x0);
        gbc.writeMem(0x1cea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x934b, gbc.sp());
        EXPECT(0x1cec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0214
        gbc.setState(0x966b, 0xdf97, 0xbd80, 0xd043, 0xa986, 0x10ee, 0x0, 0x1);
        gbc.writeMem(0x966b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdf97, gbc.sp());
        EXPECT(0x966d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966b));
        EXPECT(0x89, gbc.readMem(0x966c));
        // CB 89 0215
        gbc.setState(0xa249, 0xb54a, 0x11e0, 0x6e6f, 0x2b68, 0xf509, 0x1, 0x0);
        gbc.writeMem(0xa249, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb54a, gbc.sp());
        EXPECT(0xa24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa249));
        EXPECT(0x89, gbc.readMem(0xa24a));
        // CB 89 0216
        gbc.setState(0x6a, 0x5a63, 0x1590, 0x74a3, 0xd5e1, 0xd7ec, 0x1, 0x0);
        gbc.writeMem(0x6a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5a63, gbc.sp());
        EXPECT(0x6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0217
        gbc.setState(0xe270, 0x6497, 0x4e90, 0xf8b5, 0x5716, 0x56cc, 0x1, 0x0);
        gbc.writeMem(0xe270, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6497, gbc.sp());
        EXPECT(0xe272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe270));
        EXPECT(0x89, gbc.readMem(0xe271));
        // CB 89 0218
        gbc.setState(0xcbe9, 0x5b15, 0x65c0, 0xf662, 0x34cf, 0xfafc, 0x1, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5b15, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe9));
        EXPECT(0x89, gbc.readMem(0xcbea));
        // CB 89 0219
        gbc.setState(0xac92, 0x2789, 0x5390, 0xce6d, 0xe750, 0x4eae, 0x1, 0x0);
        gbc.writeMem(0xac92, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2789, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac92));
        EXPECT(0x89, gbc.readMem(0xac93));
        // CB 89 021A
        gbc.setState(0xa797, 0x3cfb, 0xa630, 0xf06d, 0xc60a, 0x1acb, 0x0, 0x1);
        gbc.writeMem(0xa797, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0xa799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa797));
        EXPECT(0x89, gbc.readMem(0xa798));
        // CB 89 021B
        gbc.setState(0xd201, 0x81c0, 0x65e0, 0xdb0a, 0x670, 0x8a50, 0x1, 0x1);
        gbc.writeMem(0xd201, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x81c0, gbc.sp());
        EXPECT(0xd203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd201));
        EXPECT(0x89, gbc.readMem(0xd202));
        // CB 89 021C
        gbc.setState(0x2674, 0x93e8, 0xc30, 0xfd32, 0x4fda, 0x898a, 0x0, 0x0);
        gbc.writeMem(0x2674, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x93e8, gbc.sp());
        EXPECT(0x2676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 021D
        gbc.setState(0xaf81, 0xd823, 0x5260, 0x2e0, 0x9fb8, 0x2559, 0x0, 0x1);
        gbc.writeMem(0xaf81, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd823, gbc.sp());
        EXPECT(0xaf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf81));
        EXPECT(0x89, gbc.readMem(0xaf82));
        // CB 89 021E
        gbc.setState(0xba3d, 0x47e0, 0x5460, 0xf2b, 0x3faa, 0xd666, 0x0, 0x0);
        gbc.writeMem(0xba3d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x47e0, gbc.sp());
        EXPECT(0xba3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3d));
        EXPECT(0x89, gbc.readMem(0xba3e));
        // CB 89 021F
        gbc.setState(0x7972, 0x49f0, 0xfd00, 0xbe23, 0xb8e4, 0x55ca, 0x1, 0x0);
        gbc.writeMem(0x7972, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x49f0, gbc.sp());
        EXPECT(0x7974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0220
        gbc.setState(0x5fe9, 0xb193, 0x1a10, 0x426d, 0x6a04, 0xcd2c, 0x0, 0x1);
        gbc.writeMem(0x5fe9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb193, gbc.sp());
        EXPECT(0x5feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0222
        gbc.setState(0x394a, 0xc4d1, 0x40a0, 0x7f8, 0x21a5, 0x2fcb, 0x0, 0x0);
        gbc.writeMem(0x394a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc4d1, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0223
        gbc.setState(0x2852, 0x5300, 0x3510, 0x3d3e, 0xa8d3, 0xd966, 0x1, 0x0);
        gbc.writeMem(0x2852, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5300, gbc.sp());
        EXPECT(0x2854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0225
        gbc.setState(0xc1a9, 0x714, 0x86c0, 0x76f0, 0x6329, 0x8eb0, 0x0, 0x0);
        gbc.writeMem(0xc1a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x714, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a9));
        EXPECT(0x89, gbc.readMem(0xc1aa));
        // CB 89 0226
        gbc.setState(0xd127, 0xb8f2, 0xf000, 0x8d86, 0x48f1, 0x2637, 0x1, 0x0);
        gbc.writeMem(0xd127, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb8f2, gbc.sp());
        EXPECT(0xd129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd127));
        EXPECT(0x89, gbc.readMem(0xd128));
        // CB 89 0227
        gbc.setState(0x3e3c, 0x47f, 0x6ad0, 0x8251, 0x25d3, 0x33e0, 0x0, 0x0);
        gbc.writeMem(0x3e3c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x47f, gbc.sp());
        EXPECT(0x3e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0228
        gbc.setState(0xd3b3, 0x8567, 0x3530, 0x1a10, 0xf249, 0x9dd1, 0x0, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8567, gbc.sp());
        EXPECT(0xd3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b3));
        EXPECT(0x89, gbc.readMem(0xd3b4));
        // CB 89 0229
        gbc.setState(0x4655, 0xf83b, 0x5a90, 0x6893, 0x2216, 0x1fd4, 0x1, 0x1);
        gbc.writeMem(0x4655, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf83b, gbc.sp());
        EXPECT(0x4657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 022A
        gbc.setState(0x13ec, 0xa5c2, 0x8ae0, 0x25e0, 0x6d4, 0xc0b1, 0x1, 0x1);
        gbc.writeMem(0x13ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x13ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 022B
        gbc.setState(0xbef5, 0xb8b8, 0xc440, 0xd9bb, 0xcdc3, 0xea27, 0x0, 0x0);
        gbc.writeMem(0xbef5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb8b8, gbc.sp());
        EXPECT(0xbef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef5));
        EXPECT(0x89, gbc.readMem(0xbef6));
        // CB 89 022C
        gbc.setState(0x9e1a, 0x3391, 0x7930, 0xadef, 0x6845, 0xea68, 0x1, 0x1);
        gbc.writeMem(0x9e1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3391, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e1a));
        EXPECT(0x89, gbc.readMem(0x9e1b));
        // CB 89 022D
        gbc.setState(0xcf9d, 0x7c0, 0xd660, 0x8520, 0xc45b, 0xea70, 0x1, 0x1);
        gbc.writeMem(0xcf9d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7c0, gbc.sp());
        EXPECT(0xcf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf9d));
        EXPECT(0x89, gbc.readMem(0xcf9e));
        // CB 89 022E
        gbc.setState(0xce33, 0x9ba3, 0x2920, 0x4f63, 0xda3e, 0x19df, 0x1, 0x1);
        gbc.writeMem(0xce33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9ba3, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce33));
        EXPECT(0x89, gbc.readMem(0xce34));
        // CB 89 022F
        gbc.setState(0x6ea5, 0x4151, 0xe750, 0x353c, 0x3407, 0x9b, 0x0, 0x0);
        gbc.writeMem(0x6ea5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4151, gbc.sp());
        EXPECT(0x6ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0230
        gbc.setState(0x5b2c, 0x736b, 0x8340, 0x7687, 0x211b, 0xe5e, 0x0, 0x0);
        gbc.writeMem(0x5b2c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x736b, gbc.sp());
        EXPECT(0x5b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0231
        gbc.setState(0x11c3, 0x83c6, 0xcfb0, 0xba68, 0xcc23, 0xa1f2, 0x0, 0x1);
        gbc.writeMem(0x11c3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x83c6, gbc.sp());
        EXPECT(0x11c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0232
        gbc.setState(0xbd82, 0xffbf, 0xed80, 0x4aae, 0x4e8f, 0x423e, 0x0, 0x0);
        gbc.writeMem(0xbd82, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xffbf, gbc.sp());
        EXPECT(0xbd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd82));
        EXPECT(0x89, gbc.readMem(0xbd83));
        // CB 89 0234
        gbc.setState(0xa2ec, 0xd121, 0x1dc0, 0x4f1f, 0x9af, 0x598, 0x0, 0x0);
        gbc.writeMem(0xa2ec, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0xa2ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ec));
        EXPECT(0x89, gbc.readMem(0xa2ed));
        // CB 89 0235
        gbc.setState(0x1194, 0x9013, 0x5e50, 0x2f2d, 0xc588, 0xb5c9, 0x1, 0x1);
        gbc.writeMem(0x1194, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9013, gbc.sp());
        EXPECT(0x1196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0237
        gbc.setState(0x3812, 0xf4b5, 0x8f90, 0x635f, 0xb379, 0x5c67, 0x1, 0x0);
        gbc.writeMem(0x3812, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf4b5, gbc.sp());
        EXPECT(0x3814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0238
        gbc.setState(0x1b8e, 0x36f3, 0x90f0, 0x9c0, 0xa385, 0x9421, 0x0, 0x1);
        gbc.writeMem(0x1b8e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0x1b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0239
        gbc.setState(0x6756, 0x867, 0xabd0, 0x1348, 0xdf1c, 0xd546, 0x0, 0x1);
        gbc.writeMem(0x6756, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x867, gbc.sp());
        EXPECT(0x6758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 023A
        gbc.setState(0xdf30, 0x7b1a, 0x1760, 0xd077, 0xe59a, 0x45e9, 0x0, 0x1);
        gbc.writeMem(0xdf30, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7b1a, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf30));
        EXPECT(0x89, gbc.readMem(0xdf31));
        // CB 89 023B
        gbc.setState(0xda5c, 0x6a4e, 0x6db0, 0x9760, 0x8152, 0x1310, 0x1, 0x1);
        gbc.writeMem(0xda5c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6a4e, gbc.sp());
        EXPECT(0xda5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5c));
        EXPECT(0x89, gbc.readMem(0xda5d));
        // CB 89 023C
        gbc.setState(0xd8bc, 0xee3a, 0x4a40, 0x6ccc, 0xf4d5, 0xd0f8, 0x0, 0x1);
        gbc.writeMem(0xd8bc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xee3a, gbc.sp());
        EXPECT(0xd8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8bc));
        EXPECT(0x89, gbc.readMem(0xd8bd));
        // CB 89 023D
        gbc.setState(0x9e6e, 0x8af9, 0xa810, 0x7495, 0x3a2c, 0xc3c2, 0x1, 0x1);
        gbc.writeMem(0x9e6e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0x9e70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6e));
        EXPECT(0x89, gbc.readMem(0x9e6f));
        // CB 89 023E
        gbc.setState(0x1097, 0xbaf7, 0x5b00, 0xfb6c, 0xa3f5, 0x51da, 0x1, 0x1);
        gbc.writeMem(0x1097, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x1099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 023F
        gbc.setState(0x9b71, 0x952, 0x62a0, 0xf2e0, 0xa1d9, 0x2c72, 0x1, 0x1);
        gbc.writeMem(0x9b71, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x952, gbc.sp());
        EXPECT(0x9b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b71));
        EXPECT(0x89, gbc.readMem(0x9b72));
        // CB 89 0240
        gbc.setState(0x5581, 0x5d3f, 0x6030, 0x749b, 0xb797, 0x220f, 0x0, 0x1);
        gbc.writeMem(0x5581, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5d3f, gbc.sp());
        EXPECT(0x5583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0241
        gbc.setState(0x4f7c, 0x6423, 0x9bf0, 0xea7, 0x8045, 0x720b, 0x1, 0x1);
        gbc.writeMem(0x4f7c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6423, gbc.sp());
        EXPECT(0x4f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0242
        gbc.setState(0xb402, 0xe423, 0x2ac0, 0xb336, 0x3fee, 0x9d36, 0x1, 0x1);
        gbc.writeMem(0xb402, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe423, gbc.sp());
        EXPECT(0xb404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb402));
        EXPECT(0x89, gbc.readMem(0xb403));
        // CB 89 0244
        gbc.setState(0x4b06, 0xb3dd, 0xbde0, 0x599d, 0x23be, 0xf743, 0x0, 0x1);
        gbc.writeMem(0x4b06, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb3dd, gbc.sp());
        EXPECT(0x4b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0245
        gbc.setState(0x599, 0x4551, 0x49a0, 0x7156, 0x7a4c, 0x36f0, 0x0, 0x0);
        gbc.writeMem(0x599, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4551, gbc.sp());
        EXPECT(0x59b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0246
        gbc.setState(0xdc9, 0x2a22, 0xea20, 0xe854, 0xe8be, 0x764f, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2a22, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0247
        gbc.setState(0xb0fd, 0x93ec, 0x4a80, 0x1319, 0x5bdc, 0xb3e, 0x0, 0x1);
        gbc.writeMem(0xb0fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x93ec, gbc.sp());
        EXPECT(0xb0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fd));
        EXPECT(0x89, gbc.readMem(0xb0fe));
        // CB 89 0248
        gbc.setState(0x120f, 0x5794, 0x5ee0, 0x4e08, 0x31db, 0x6d14, 0x1, 0x1);
        gbc.writeMem(0x120f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5794, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0249
        gbc.setState(0x2d41, 0xb770, 0x8ee0, 0xe80c, 0x8489, 0x4938, 0x0, 0x1);
        gbc.writeMem(0x2d41, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb770, gbc.sp());
        EXPECT(0x2d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 024A
        gbc.setState(0xd9c8, 0x59cf, 0x8b30, 0x29ee, 0x7f9f, 0x9c84, 0x0, 0x0);
        gbc.writeMem(0xd9c8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x59cf, gbc.sp());
        EXPECT(0xd9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c8));
        EXPECT(0x89, gbc.readMem(0xd9c9));
        // CB 89 024B
        gbc.setState(0xd643, 0xa2da, 0x5750, 0x1712, 0x5e43, 0x8caf, 0x1, 0x1);
        gbc.writeMem(0xd643, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa2da, gbc.sp());
        EXPECT(0xd645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd643));
        EXPECT(0x89, gbc.readMem(0xd644));
        // CB 89 024C
        gbc.setState(0x5639, 0x9332, 0x920, 0xe3b0, 0xde98, 0x36e5, 0x1, 0x0);
        gbc.writeMem(0x5639, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9332, gbc.sp());
        EXPECT(0x563b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 024D
        gbc.setState(0x7408, 0xd250, 0xe6b0, 0x3a7a, 0xe52e, 0x53e4, 0x1, 0x1);
        gbc.writeMem(0x7408, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd250, gbc.sp());
        EXPECT(0x740a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 024E
        gbc.setState(0xbe2b, 0x8605, 0xb6f0, 0x4f37, 0xc3eb, 0xc1ac, 0x0, 0x1);
        gbc.writeMem(0xbe2b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8605, gbc.sp());
        EXPECT(0xbe2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2b));
        EXPECT(0x89, gbc.readMem(0xbe2c));
        // CB 89 024F
        gbc.setState(0x1bde, 0xb63d, 0xc4a0, 0x6053, 0x3803, 0xbcb1, 0x1, 0x1);
        gbc.writeMem(0x1bde, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb63d, gbc.sp());
        EXPECT(0x1be0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0250
        gbc.setState(0x96df, 0x9543, 0x7b00, 0xab7, 0xff61, 0x4bef, 0x1, 0x0);
        gbc.writeMem(0x96df, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9543, gbc.sp());
        EXPECT(0x96e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96df));
        EXPECT(0x89, gbc.readMem(0x96e0));
        // CB 89 0251
        gbc.setState(0xddc9, 0x1524, 0xe400, 0xa2f3, 0x3e4b, 0x99dd, 0x0, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0x89, gbc.readMem(0xddca));
        // CB 89 0252
        gbc.setState(0x3086, 0x6d74, 0x54b0, 0xeced, 0xe935, 0x408d, 0x0, 0x1);
        gbc.writeMem(0x3086, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6d74, gbc.sp());
        EXPECT(0x3088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0253
        gbc.setState(0xe266, 0xe5c8, 0xc5f0, 0x3e5a, 0xa46b, 0x3708, 0x0, 0x1);
        gbc.writeMem(0xe266, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe5c8, gbc.sp());
        EXPECT(0xe268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe266));
        EXPECT(0x89, gbc.readMem(0xe267));
        // CB 89 0254
        gbc.setState(0x9ee6, 0xf53c, 0xc870, 0xd23c, 0xaf9a, 0xa775, 0x0, 0x1);
        gbc.writeMem(0x9ee6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf53c, gbc.sp());
        EXPECT(0x9ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee6));
        EXPECT(0x89, gbc.readMem(0x9ee7));
        // CB 89 0255
        gbc.setState(0x67e2, 0x53f7, 0xfa10, 0xfe24, 0x1d11, 0x5078, 0x0, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x53f7, gbc.sp());
        EXPECT(0x67e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0256
        gbc.setState(0xcd47, 0x7991, 0x5df0, 0x129e, 0xc6c4, 0x23d6, 0x0, 0x1);
        gbc.writeMem(0xcd47, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7991, gbc.sp());
        EXPECT(0xcd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd47));
        EXPECT(0x89, gbc.readMem(0xcd48));
        // CB 89 0257
        gbc.setState(0x4b24, 0xe5e7, 0xe280, 0xd02d, 0xf629, 0xbeed, 0x1, 0x1);
        gbc.writeMem(0x4b24, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe5e7, gbc.sp());
        EXPECT(0x4b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0258
        gbc.setState(0xdebf, 0xddf9, 0x3310, 0xb6d4, 0x1559, 0x7220, 0x0, 0x0);
        gbc.writeMem(0xdebf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xddf9, gbc.sp());
        EXPECT(0xdec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebf));
        EXPECT(0x89, gbc.readMem(0xdec0));
        // CB 89 0259
        gbc.setState(0x6076, 0xc46e, 0xca20, 0x3451, 0x2aaf, 0xec7d, 0x1, 0x1);
        gbc.writeMem(0x6076, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0x6078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 025A
        gbc.setState(0x6fc5, 0x7918, 0xe0c0, 0x47d9, 0x3dd3, 0xbfa4, 0x1, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7918, gbc.sp());
        EXPECT(0x6fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 025B
        gbc.setState(0x361e, 0xfcfa, 0xcc90, 0x77da, 0x8ba0, 0xaa, 0x1, 0x0);
        gbc.writeMem(0x361e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfcfa, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 025D
        gbc.setState(0x121, 0xfc26, 0x1a0, 0xab82, 0xe247, 0xd89b, 0x1, 0x1);
        gbc.writeMem(0x121, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0x123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 025E
        gbc.setState(0x58b4, 0x6d6c, 0x5830, 0x19a1, 0xd4af, 0xe2c6, 0x1, 0x0);
        gbc.writeMem(0x58b4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6d6c, gbc.sp());
        EXPECT(0x58b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 025F
        gbc.setState(0x4fe3, 0xb500, 0xcbb0, 0x4c99, 0x6fe0, 0x8756, 0x0, 0x1);
        gbc.writeMem(0x4fe3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb500, gbc.sp());
        EXPECT(0x4fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0260
        gbc.setState(0x35cb, 0xc3a9, 0x94f0, 0x42d0, 0xb299, 0xfe9c, 0x0, 0x1);
        gbc.writeMem(0x35cb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc3a9, gbc.sp());
        EXPECT(0x35cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0261
        gbc.setState(0x9f40, 0x62fe, 0x2480, 0x6b66, 0xc661, 0xecf2, 0x1, 0x0);
        gbc.writeMem(0x9f40, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x62fe, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f40));
        EXPECT(0x89, gbc.readMem(0x9f41));
        // CB 89 0262
        gbc.setState(0xccac, 0xe0ec, 0x6e70, 0x1a50, 0x6ef7, 0x177d, 0x1, 0x0);
        gbc.writeMem(0xccac, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccac));
        EXPECT(0x89, gbc.readMem(0xccad));
        // CB 89 0263
        gbc.setState(0x75f7, 0xcba, 0x6b90, 0x7b1e, 0x1877, 0xbb14, 0x0, 0x1);
        gbc.writeMem(0x75f7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcba, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0264
        gbc.setState(0xa391, 0xf7da, 0x4610, 0x309, 0xc0f3, 0x8fca, 0x0, 0x1);
        gbc.writeMem(0xa391, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf7da, gbc.sp());
        EXPECT(0xa393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa391));
        EXPECT(0x89, gbc.readMem(0xa392));
        // CB 89 0265
        gbc.setState(0x36a2, 0x8b81, 0xb4e0, 0xc277, 0xf75a, 0xf341, 0x1, 0x0);
        gbc.writeMem(0x36a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8b81, gbc.sp());
        EXPECT(0x36a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0266
        gbc.setState(0x70aa, 0xdd8d, 0x89c0, 0xb52b, 0x3ada, 0x9c7a, 0x0, 0x0);
        gbc.writeMem(0x70aa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdd8d, gbc.sp());
        EXPECT(0x70ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0267
        gbc.setState(0x7925, 0x7418, 0xb9f0, 0xbcea, 0xeb86, 0x1f35, 0x0, 0x1);
        gbc.writeMem(0x7925, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7418, gbc.sp());
        EXPECT(0x7927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0268
        gbc.setState(0x2c85, 0x2efb, 0x69a0, 0x44b9, 0xbef1, 0xdb13, 0x0, 0x1);
        gbc.writeMem(0x2c85, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2efb, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 026A
        gbc.setState(0xb77d, 0x22a4, 0x47c0, 0x665d, 0xf658, 0x5ff2, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x22a4, gbc.sp());
        EXPECT(0xb77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77d));
        EXPECT(0x89, gbc.readMem(0xb77e));
        // CB 89 026C
        gbc.setState(0xe354, 0x5fef, 0x59c0, 0x475e, 0xff85, 0xb43d, 0x0, 0x1);
        gbc.writeMem(0xe354, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5fef, gbc.sp());
        EXPECT(0xe356, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe354));
        EXPECT(0x89, gbc.readMem(0xe355));
        // CB 89 026E
        gbc.setState(0xeaee, 0x664e, 0x1fe0, 0x2994, 0x2290, 0x507d, 0x1, 0x0);
        gbc.writeMem(0xeaee, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x664e, gbc.sp());
        EXPECT(0xeaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaee));
        EXPECT(0x89, gbc.readMem(0xeaef));
        // CB 89 026F
        gbc.setState(0x2e69, 0x9bf3, 0x3d20, 0xde2c, 0xe255, 0xb02f, 0x0, 0x0);
        gbc.writeMem(0x2e69, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9bf3, gbc.sp());
        EXPECT(0x2e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0270
        gbc.setState(0xb3bf, 0x80e3, 0xf0c0, 0xcf93, 0xdb66, 0xbc5, 0x0, 0x0);
        gbc.writeMem(0xb3bf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x80e3, gbc.sp());
        EXPECT(0xb3c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bf));
        EXPECT(0x89, gbc.readMem(0xb3c0));
        // CB 89 0271
        gbc.setState(0x6fc4, 0xcf26, 0xcf60, 0x8f16, 0xc000, 0x1307, 0x1, 0x1);
        gbc.writeMem(0x6fc4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcf26, gbc.sp());
        EXPECT(0x6fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0272
        gbc.setState(0x21ed, 0x255f, 0x2c90, 0xb0f9, 0x434f, 0x5f67, 0x0, 0x0);
        gbc.writeMem(0x21ed, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x255f, gbc.sp());
        EXPECT(0x21ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0273
        gbc.setState(0x307e, 0x3d3b, 0x6aa0, 0xbf0d, 0x8be1, 0x61dd, 0x1, 0x1);
        gbc.writeMem(0x307e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3d3b, gbc.sp());
        EXPECT(0x3080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0274
        gbc.setState(0x12e0, 0x142f, 0xe820, 0xda9c, 0x8f3f, 0x2ac5, 0x0, 0x0);
        gbc.writeMem(0x12e0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x142f, gbc.sp());
        EXPECT(0x12e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0275
        gbc.setState(0x2bff, 0xd072, 0xeae0, 0xa006, 0x98c9, 0xdad8, 0x1, 0x1);
        gbc.writeMem(0x2bff, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xd072, gbc.sp());
        EXPECT(0x2c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0276
        gbc.setState(0x427, 0x3951, 0x200, 0xa684, 0xe0c, 0x3f51, 0x1, 0x1);
        gbc.writeMem(0x427, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3951, gbc.sp());
        EXPECT(0x429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0278
        gbc.setState(0x984e, 0x1932, 0x3330, 0x4575, 0x1af7, 0xf886, 0x1, 0x1);
        gbc.writeMem(0x984e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0x9850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984e));
        EXPECT(0x89, gbc.readMem(0x984f));
        // CB 89 0279
        gbc.setState(0xa76d, 0x22bd, 0xdab0, 0xb6dc, 0xf3d3, 0xa445, 0x0, 0x1);
        gbc.writeMem(0xa76d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0xa76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76d));
        EXPECT(0x89, gbc.readMem(0xa76e));
        // CB 89 027A
        gbc.setState(0x3af2, 0x3ca8, 0xd760, 0xcea2, 0x2aaa, 0x8777, 0x1, 0x1);
        gbc.writeMem(0x3af2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3ca8, gbc.sp());
        EXPECT(0x3af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 027B
        gbc.setState(0x60db, 0x810c, 0xca60, 0xbaaa, 0xcebe, 0xb6a, 0x0, 0x0);
        gbc.writeMem(0x60db, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x810c, gbc.sp());
        EXPECT(0x60dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 027C
        gbc.setState(0x2b32, 0xe4ea, 0xe8d0, 0x2f02, 0x6cf1, 0xf0bf, 0x1, 0x0);
        gbc.writeMem(0x2b32, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe4ea, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 027D
        gbc.setState(0x13bb, 0x96f4, 0x8330, 0x4bca, 0x8e2b, 0xd346, 0x1, 0x1);
        gbc.writeMem(0x13bb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x96f4, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 027E
        gbc.setState(0x8d66, 0x5eec, 0x6e30, 0x8faf, 0xedd2, 0x5cd2, 0x0, 0x1);
        gbc.writeMem(0x8d66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5eec, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d66));
        EXPECT(0x89, gbc.readMem(0x8d67));
        // CB 89 027F
        gbc.setState(0x2683, 0x466c, 0x7320, 0xd324, 0x4d81, 0x687d, 0x0, 0x0);
        gbc.writeMem(0x2683, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x466c, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0280
        gbc.setState(0x82d2, 0x54a0, 0x8d20, 0x29fd, 0x48b9, 0x3ec3, 0x1, 0x0);
        gbc.writeMem(0x82d2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x54a0, gbc.sp());
        EXPECT(0x82d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d2));
        EXPECT(0x89, gbc.readMem(0x82d3));
        // CB 89 0281
        gbc.setState(0x9658, 0x4806, 0x40a0, 0xa8ea, 0x7e2c, 0x7e40, 0x0, 0x0);
        gbc.writeMem(0x9658, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4806, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9658));
        EXPECT(0x89, gbc.readMem(0x9659));
        // CB 89 0282
        gbc.setState(0x4fe7, 0x327d, 0x3050, 0xc663, 0xd6a0, 0x72a, 0x1, 0x0);
        gbc.writeMem(0x4fe7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x327d, gbc.sp());
        EXPECT(0x4fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0283
        gbc.setState(0x91ce, 0x35ec, 0x4b40, 0xa0fc, 0x929d, 0x978c, 0x1, 0x1);
        gbc.writeMem(0x91ce, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0x91d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ce));
        EXPECT(0x89, gbc.readMem(0x91cf));
        // CB 89 0284
        gbc.setState(0x6bed, 0x30cb, 0xeba0, 0xa447, 0x1180, 0x1158, 0x0, 0x1);
        gbc.writeMem(0x6bed, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x30cb, gbc.sp());
        EXPECT(0x6bef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0285
        gbc.setState(0x2ec9, 0x207a, 0x580, 0x45d2, 0x77a9, 0xcd76, 0x0, 0x0);
        gbc.writeMem(0x2ec9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x207a, gbc.sp());
        EXPECT(0x2ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0286
        gbc.setState(0xa26a, 0xbe5a, 0x7d50, 0x21a7, 0x2032, 0xde7a, 0x1, 0x1);
        gbc.writeMem(0xa26a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xbe5a, gbc.sp());
        EXPECT(0xa26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26a));
        EXPECT(0x89, gbc.readMem(0xa26b));
        // CB 89 0287
        gbc.setState(0xc3cb, 0xeecd, 0xf850, 0x5726, 0x4be7, 0xd0bf, 0x1, 0x0);
        gbc.writeMem(0xc3cb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeecd, gbc.sp());
        EXPECT(0xc3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cb));
        EXPECT(0x89, gbc.readMem(0xc3cc));
        // CB 89 0288
        gbc.setState(0x95ab, 0xe0b8, 0x2aa0, 0xf172, 0x7b65, 0x1ba2, 0x1, 0x1);
        gbc.writeMem(0x95ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe0b8, gbc.sp());
        EXPECT(0x95ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ab));
        EXPECT(0x89, gbc.readMem(0x95ac));
        // CB 89 0289
        gbc.setState(0x9744, 0x6ba5, 0xca00, 0x3326, 0x3427, 0xe621, 0x0, 0x0);
        gbc.writeMem(0x9744, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6ba5, gbc.sp());
        EXPECT(0x9746, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9744));
        EXPECT(0x89, gbc.readMem(0x9745));
        // CB 89 028A
        gbc.setState(0xc101, 0xb561, 0x5720, 0xa6f8, 0xd957, 0x7220, 0x1, 0x1);
        gbc.writeMem(0xc101, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb561, gbc.sp());
        EXPECT(0xc103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc101));
        EXPECT(0x89, gbc.readMem(0xc102));
        // CB 89 028B
        gbc.setState(0x581c, 0x7af7, 0x2b20, 0x9d74, 0x4de, 0x5300, 0x1, 0x0);
        gbc.writeMem(0x581c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7af7, gbc.sp());
        EXPECT(0x581e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 028C
        gbc.setState(0xe57, 0xf1ac, 0xa890, 0x4e24, 0xf7e8, 0x1855, 0x0, 0x0);
        gbc.writeMem(0xe57, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf1ac, gbc.sp());
        EXPECT(0xe59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 028D
        gbc.setState(0x3ffb, 0x9f50, 0xa4b0, 0xb07, 0xdc0b, 0x7f95, 0x0, 0x1);
        gbc.writeMem(0x3ffb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9f50, gbc.sp());
        EXPECT(0x3ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 028E
        gbc.setState(0xed2c, 0x1974, 0xae90, 0xaa70, 0x9ee4, 0xa981, 0x0, 0x0);
        gbc.writeMem(0xed2c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1974, gbc.sp());
        EXPECT(0xed2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed2c));
        EXPECT(0x89, gbc.readMem(0xed2d));
        // CB 89 028F
        gbc.setState(0x902, 0x2dc5, 0x8f70, 0x238c, 0x543b, 0xab65, 0x0, 0x0);
        gbc.writeMem(0x902, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2dc5, gbc.sp());
        EXPECT(0x904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0290
        gbc.setState(0x2a20, 0x481c, 0xe410, 0x2913, 0x54a, 0x250b, 0x0, 0x1);
        gbc.writeMem(0x2a20, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x481c, gbc.sp());
        EXPECT(0x2a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0291
        gbc.setState(0x9ce2, 0x2967, 0x7b80, 0x9785, 0x402d, 0xf80, 0x1, 0x1);
        gbc.writeMem(0x9ce2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2967, gbc.sp());
        EXPECT(0x9ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce2));
        EXPECT(0x89, gbc.readMem(0x9ce3));
        // CB 89 0292
        gbc.setState(0xcc66, 0x79ae, 0x97c0, 0x4312, 0x2c2d, 0xb568, 0x1, 0x0);
        gbc.writeMem(0xcc66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x79ae, gbc.sp());
        EXPECT(0xcc68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc66));
        EXPECT(0x89, gbc.readMem(0xcc67));
        // CB 89 0293
        gbc.setState(0x2f31, 0x58a5, 0xd200, 0x9571, 0x8a90, 0x2316, 0x1, 0x1);
        gbc.writeMem(0x2f31, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x58a5, gbc.sp());
        EXPECT(0x2f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0294
        gbc.setState(0x73fb, 0x3ce7, 0x8690, 0xa1ba, 0xc5c3, 0xb882, 0x0, 0x1);
        gbc.writeMem(0x73fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3ce7, gbc.sp());
        EXPECT(0x73fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0295
        gbc.setState(0x291d, 0xeb3f, 0x98c0, 0xda7c, 0xc864, 0x6625, 0x0, 0x0);
        gbc.writeMem(0x291d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x291f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0296
        gbc.setState(0xe6a9, 0x2507, 0xbe00, 0x2997, 0x846b, 0xe18b, 0x1, 0x0);
        gbc.writeMem(0xe6a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2507, gbc.sp());
        EXPECT(0xe6ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a9));
        EXPECT(0x89, gbc.readMem(0xe6aa));
        // CB 89 0297
        gbc.setState(0xd84b, 0xc1e8, 0xb950, 0xe113, 0xb684, 0xf122, 0x0, 0x0);
        gbc.writeMem(0xd84b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0xd84d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84b));
        EXPECT(0x89, gbc.readMem(0xd84c));
        // CB 89 0298
        gbc.setState(0x76e2, 0x7cd1, 0xd9e0, 0xd7a, 0x82f0, 0xc9cd, 0x0, 0x0);
        gbc.writeMem(0x76e2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0x76e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0299
        gbc.setState(0x702f, 0xe74d, 0x3940, 0xe5dd, 0xd506, 0x8cca, 0x0, 0x0);
        gbc.writeMem(0x702f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe74d, gbc.sp());
        EXPECT(0x7031, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 029A
        gbc.setState(0x1d15, 0x941, 0x740, 0xdacb, 0x473, 0x6751, 0x0, 0x1);
        gbc.writeMem(0x1d15, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x941, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 029B
        gbc.setState(0x30c1, 0xa35c, 0x9dd0, 0xc098, 0x688, 0xa4cd, 0x0, 0x1);
        gbc.writeMem(0x30c1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa35c, gbc.sp());
        EXPECT(0x30c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 029C
        gbc.setState(0xde75, 0xbea9, 0x9e50, 0x11fb, 0x3827, 0xf9fc, 0x1, 0x1);
        gbc.writeMem(0xde75, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbea9, gbc.sp());
        EXPECT(0xde77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde75));
        EXPECT(0x89, gbc.readMem(0xde76));
        // CB 89 029D
        gbc.setState(0xd9e0, 0xb28d, 0x2550, 0xfb2, 0x7797, 0x7857, 0x0, 0x1);
        gbc.writeMem(0xd9e0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb28d, gbc.sp());
        EXPECT(0xd9e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e0));
        EXPECT(0x89, gbc.readMem(0xd9e1));
        // CB 89 029E
        gbc.setState(0x3e85, 0xcba9, 0x2550, 0x9043, 0x937d, 0xe11c, 0x1, 0x0);
        gbc.writeMem(0x3e85, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcba9, gbc.sp());
        EXPECT(0x3e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 029F
        gbc.setState(0x3ae9, 0xbd12, 0x5b00, 0xe9b1, 0x9723, 0xa437, 0x1, 0x0);
        gbc.writeMem(0x3ae9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbd12, gbc.sp());
        EXPECT(0x3aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02A0
        gbc.setState(0x444e, 0x8783, 0x2900, 0x76f1, 0x2597, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0x444e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8783, gbc.sp());
        EXPECT(0x4450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02A1
        gbc.setState(0x9770, 0x20f6, 0x41d0, 0xb201, 0x73f7, 0x5090, 0x1, 0x1);
        gbc.writeMem(0x9770, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x20f6, gbc.sp());
        EXPECT(0x9772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9770));
        EXPECT(0x89, gbc.readMem(0x9771));
        // CB 89 02A2
        gbc.setState(0xab6b, 0x331a, 0xb7e0, 0xcda8, 0x9101, 0x7ecb, 0x0, 0x1);
        gbc.writeMem(0xab6b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x331a, gbc.sp());
        EXPECT(0xab6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab6b));
        EXPECT(0x89, gbc.readMem(0xab6c));
        // CB 89 02A3
        gbc.setState(0xaf2, 0xa095, 0x8e80, 0x2a54, 0xef56, 0xb3df, 0x0, 0x1);
        gbc.writeMem(0xaf2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa095, gbc.sp());
        EXPECT(0xaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02A4
        gbc.setState(0x3945, 0x77f1, 0xe960, 0xdda, 0x93d2, 0x62f0, 0x1, 0x0);
        gbc.writeMem(0x3945, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x77f1, gbc.sp());
        EXPECT(0x3947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02A5
        gbc.setState(0x1ad6, 0x6d1, 0xb9e0, 0x7715, 0x4411, 0x3a, 0x0, 0x0);
        gbc.writeMem(0x1ad6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6d1, gbc.sp());
        EXPECT(0x1ad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02A6
        gbc.setState(0x544, 0xed9c, 0x22b0, 0xa876, 0x7c03, 0x2a7e, 0x1, 0x1);
        gbc.writeMem(0x544, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xed9c, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02A7
        gbc.setState(0x4cfe, 0x3492, 0x5630, 0xa43d, 0xdfe0, 0x969f, 0x1, 0x0);
        gbc.writeMem(0x4cfe, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0x4d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02A8
        gbc.setState(0xc8b0, 0x986, 0x9520, 0x6a5f, 0x1082, 0xa1ab, 0x1, 0x1);
        gbc.writeMem(0xc8b0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x986, gbc.sp());
        EXPECT(0xc8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b0));
        EXPECT(0x89, gbc.readMem(0xc8b1));
        // CB 89 02A9
        gbc.setState(0x6a8b, 0x6702, 0x7920, 0x16b, 0x6927, 0x54c3, 0x0, 0x0);
        gbc.writeMem(0x6a8b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6702, gbc.sp());
        EXPECT(0x6a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02AA
        gbc.setState(0xadc4, 0x548c, 0x16a0, 0x5fdf, 0x92ca, 0x8077, 0x1, 0x0);
        gbc.writeMem(0xadc4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x548c, gbc.sp());
        EXPECT(0xadc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc4));
        EXPECT(0x89, gbc.readMem(0xadc5));
        // CB 89 02AB
        gbc.setState(0x9a5d, 0x2519, 0x5370, 0x978, 0xc524, 0x9378, 0x1, 0x0);
        gbc.writeMem(0x9a5d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2519, gbc.sp());
        EXPECT(0x9a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a5d));
        EXPECT(0x89, gbc.readMem(0x9a5e));
        // CB 89 02AC
        gbc.setState(0xe509, 0x5a05, 0x6060, 0xa3f6, 0xe124, 0x866d, 0x1, 0x1);
        gbc.writeMem(0xe509, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5a05, gbc.sp());
        EXPECT(0xe50b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe509));
        EXPECT(0x89, gbc.readMem(0xe50a));
        // CB 89 02AD
        gbc.setState(0x401f, 0x747, 0xfea0, 0xaee4, 0x74ca, 0xdcd2, 0x0, 0x0);
        gbc.writeMem(0x401f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x747, gbc.sp());
        EXPECT(0x4021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02AE
        gbc.setState(0x4066, 0x403c, 0x54d0, 0x57a9, 0x5888, 0xf122, 0x0, 0x0);
        gbc.writeMem(0x4066, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x403c, gbc.sp());
        EXPECT(0x4068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02AF
        gbc.setState(0x28c4, 0x3ba5, 0x4710, 0xb39e, 0x9195, 0x6821, 0x1, 0x1);
        gbc.writeMem(0x28c4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3ba5, gbc.sp());
        EXPECT(0x28c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02B0
        gbc.setState(0xef9c, 0xe1b4, 0x56a0, 0xd812, 0xfc66, 0x752f, 0x1, 0x1);
        gbc.writeMem(0xef9c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe1b4, gbc.sp());
        EXPECT(0xef9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9c));
        EXPECT(0x89, gbc.readMem(0xef9d));
        // CB 89 02B1
        gbc.setState(0x405f, 0x2c5d, 0x4e80, 0x566e, 0x90b7, 0x18f8, 0x0, 0x0);
        gbc.writeMem(0x405f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x2c5d, gbc.sp());
        EXPECT(0x4061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02B2
        gbc.setState(0xa03b, 0x13d2, 0x4cf0, 0xfbf8, 0xea6e, 0x8454, 0x1, 0x0);
        gbc.writeMem(0xa03b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x13d2, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03b));
        EXPECT(0x89, gbc.readMem(0xa03c));
        // CB 89 02B3
        gbc.setState(0xb25f, 0x49cf, 0x4270, 0x4f43, 0xb90c, 0xc17f, 0x0, 0x0);
        gbc.writeMem(0xb25f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x49cf, gbc.sp());
        EXPECT(0xb261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25f));
        EXPECT(0x89, gbc.readMem(0xb260));
        // CB 89 02B4
        gbc.setState(0x910e, 0x7547, 0xb330, 0xdeee, 0xcf53, 0xb720, 0x1, 0x1);
        gbc.writeMem(0x910e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0x9110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x910e));
        EXPECT(0x89, gbc.readMem(0x910f));
        // CB 89 02B5
        gbc.setState(0xe265, 0x118c, 0x9d20, 0xefd1, 0x9a76, 0x2daf, 0x1, 0x1);
        gbc.writeMem(0xe265, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0xe267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe265));
        EXPECT(0x89, gbc.readMem(0xe266));
        // CB 89 02B6
        gbc.setState(0x195b, 0x4efa, 0x6980, 0xae90, 0xf581, 0xabcf, 0x1, 0x1);
        gbc.writeMem(0x195b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4efa, gbc.sp());
        EXPECT(0x195d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02B7
        gbc.setState(0x373e, 0x963c, 0x8550, 0xff5a, 0x3ceb, 0x4c44, 0x0, 0x1);
        gbc.writeMem(0x373e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x963c, gbc.sp());
        EXPECT(0x3740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02B8
        gbc.setState(0x8dda, 0x5e21, 0xbb20, 0x54b, 0x88be, 0x6233, 0x0, 0x1);
        gbc.writeMem(0x8dda, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0x8ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dda));
        EXPECT(0x89, gbc.readMem(0x8ddb));
        // CB 89 02B9
        gbc.setState(0xa0b0, 0xd62f, 0x2da0, 0xd77, 0xa50a, 0x48be, 0x0, 0x0);
        gbc.writeMem(0xa0b0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd62f, gbc.sp());
        EXPECT(0xa0b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b0));
        EXPECT(0x89, gbc.readMem(0xa0b1));
        // CB 89 02BA
        gbc.setState(0x9673, 0x9de5, 0x79b0, 0x421d, 0x29fc, 0x5eac, 0x0, 0x1);
        gbc.writeMem(0x9673, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9de5, gbc.sp());
        EXPECT(0x9675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9673));
        EXPECT(0x89, gbc.readMem(0x9674));
        // CB 89 02BB
        gbc.setState(0xdb74, 0xf3e8, 0x74d0, 0x21c2, 0xb266, 0xa80a, 0x0, 0x1);
        gbc.writeMem(0xdb74, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf3e8, gbc.sp());
        EXPECT(0xdb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb74));
        EXPECT(0x89, gbc.readMem(0xdb75));
        // CB 89 02BC
        gbc.setState(0x5ebf, 0xb12f, 0xdb40, 0x9148, 0xc5d6, 0xc390, 0x1, 0x0);
        gbc.writeMem(0x5ebf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0x5ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02BD
        gbc.setState(0xc370, 0x2ffc, 0xb570, 0x7aaf, 0x9c38, 0x636f, 0x1, 0x0);
        gbc.writeMem(0xc370, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2ffc, gbc.sp());
        EXPECT(0xc372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc370));
        EXPECT(0x89, gbc.readMem(0xc371));
        // CB 89 02BE
        gbc.setState(0xd64d, 0x83a, 0x51d0, 0x9535, 0xeae6, 0x72ea, 0x0, 0x0);
        gbc.writeMem(0xd64d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x83a, gbc.sp());
        EXPECT(0xd64f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64d));
        EXPECT(0x89, gbc.readMem(0xd64e));
        // CB 89 02BF
        gbc.setState(0xeed4, 0x6f30, 0xfec0, 0x8cb0, 0x7a24, 0x6485, 0x0, 0x0);
        gbc.writeMem(0xeed4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6f30, gbc.sp());
        EXPECT(0xeed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed4));
        EXPECT(0x89, gbc.readMem(0xeed5));
        // CB 89 02C0
        gbc.setState(0xc102, 0x104d, 0xa2d0, 0xcaf5, 0xedc6, 0xb5d9, 0x0, 0x1);
        gbc.writeMem(0xc102, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x104d, gbc.sp());
        EXPECT(0xc104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc102));
        EXPECT(0x89, gbc.readMem(0xc103));
        // CB 89 02C1
        gbc.setState(0x8eae, 0x8213, 0x43c0, 0xdb2d, 0x6e68, 0xf554, 0x0, 0x0);
        gbc.writeMem(0x8eae, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8213, gbc.sp());
        EXPECT(0x8eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eae));
        EXPECT(0x89, gbc.readMem(0x8eaf));
        // CB 89 02C2
        gbc.setState(0x9210, 0x72d0, 0xc070, 0xdb2d, 0xa2d5, 0x2097, 0x1, 0x1);
        gbc.writeMem(0x9210, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x72d0, gbc.sp());
        EXPECT(0x9212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9210));
        EXPECT(0x89, gbc.readMem(0x9211));
        // CB 89 02C3
        gbc.setState(0xbf2, 0x4e10, 0x6c80, 0xb4ac, 0x2583, 0x3de1, 0x0, 0x1);
        gbc.writeMem(0xbf2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4e10, gbc.sp());
        EXPECT(0xbf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02C4
        gbc.setState(0xaadd, 0xd0fd, 0xd110, 0x3bd2, 0xad2, 0x5704, 0x0, 0x1);
        gbc.writeMem(0xaadd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd0fd, gbc.sp());
        EXPECT(0xaadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaadd));
        EXPECT(0x89, gbc.readMem(0xaade));
        // CB 89 02C5
        gbc.setState(0x9a33, 0xb20e, 0x1010, 0xc7cb, 0x305a, 0xd71c, 0x0, 0x0);
        gbc.writeMem(0x9a33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb20e, gbc.sp());
        EXPECT(0x9a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a33));
        EXPECT(0x89, gbc.readMem(0x9a34));
        // CB 89 02C6
        gbc.setState(0x4e16, 0xc863, 0xafc0, 0x81db, 0x414a, 0xcc7, 0x1, 0x1);
        gbc.writeMem(0x4e16, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc863, gbc.sp());
        EXPECT(0x4e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02C7
        gbc.setState(0x704e, 0xdcf2, 0x8fe0, 0x1108, 0x9700, 0xdbd2, 0x1, 0x1);
        gbc.writeMem(0x704e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xdcf2, gbc.sp());
        EXPECT(0x7050, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02C8
        gbc.setState(0xd957, 0x9d04, 0x9fa0, 0x3e1f, 0xb8d, 0x567f, 0x0, 0x0);
        gbc.writeMem(0xd957, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9d04, gbc.sp());
        EXPECT(0xd959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd957));
        EXPECT(0x89, gbc.readMem(0xd958));
        // CB 89 02C9
        gbc.setState(0x83d, 0x235, 0x2d90, 0x3371, 0x7902, 0x429e, 0x1, 0x1);
        gbc.writeMem(0x83d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x235, gbc.sp());
        EXPECT(0x83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02CA
        gbc.setState(0x1710, 0x9246, 0x8fa0, 0x12a0, 0x45b2, 0xbec6, 0x1, 0x1);
        gbc.writeMem(0x1710, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9246, gbc.sp());
        EXPECT(0x1712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02CB
        gbc.setState(0x6e98, 0x28bc, 0x1260, 0x105b, 0xcac5, 0x6f7e, 0x0, 0x0);
        gbc.writeMem(0x6e98, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x28bc, gbc.sp());
        EXPECT(0x6e9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02CC
        gbc.setState(0x3e, 0x8b69, 0x7750, 0x7aeb, 0x43b5, 0x2249, 0x1, 0x0);
        gbc.writeMem(0x3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8b69, gbc.sp());
        EXPECT(0x40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02CD
        gbc.setState(0x3bf8, 0xc9d, 0x52c0, 0xccfe, 0xc5e4, 0x8417, 0x0, 0x1);
        gbc.writeMem(0x3bf8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc9d, gbc.sp());
        EXPECT(0x3bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02CE
        gbc.setState(0x42a5, 0x85c9, 0x3230, 0xc067, 0xeb66, 0xeb83, 0x0, 0x1);
        gbc.writeMem(0x42a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x85c9, gbc.sp());
        EXPECT(0x42a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02CF
        gbc.setState(0xc2e4, 0x40bd, 0x9240, 0x97f0, 0xbb2a, 0xb1e6, 0x0, 0x0);
        gbc.writeMem(0xc2e4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x40bd, gbc.sp());
        EXPECT(0xc2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e4));
        EXPECT(0x89, gbc.readMem(0xc2e5));
        // CB 89 02D0
        gbc.setState(0x271a, 0x32c8, 0xb430, 0xfaab, 0xf9f1, 0x54e8, 0x1, 0x1);
        gbc.writeMem(0x271a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0x271c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02D1
        gbc.setState(0xda7e, 0xfa95, 0xe500, 0xb652, 0x6728, 0x4e77, 0x0, 0x1);
        gbc.writeMem(0xda7e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfa95, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7e));
        EXPECT(0x89, gbc.readMem(0xda7f));
        // CB 89 02D2
        gbc.setState(0xe68f, 0x4f5e, 0x4620, 0x21ee, 0xf745, 0x2073, 0x1, 0x1);
        gbc.writeMem(0xe68f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4f5e, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0x89, gbc.readMem(0xe690));
        // CB 89 02D3
        gbc.setState(0xc484, 0x6c2b, 0x5970, 0xce8, 0xcc6e, 0x5d51, 0x0, 0x0);
        gbc.writeMem(0xc484, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6c2b, gbc.sp());
        EXPECT(0xc486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc484));
        EXPECT(0x89, gbc.readMem(0xc485));
        // CB 89 02D4
        gbc.setState(0xb93c, 0x54f5, 0xf360, 0x9ddd, 0xe4eb, 0xc61f, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x54f5, gbc.sp());
        EXPECT(0xb93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93c));
        EXPECT(0x89, gbc.readMem(0xb93d));
        // CB 89 02D5
        gbc.setState(0x919d, 0x8522, 0xdf70, 0xb4bc, 0x7cd1, 0xbcc3, 0x1, 0x1);
        gbc.writeMem(0x919d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8522, gbc.sp());
        EXPECT(0x919f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919d));
        EXPECT(0x89, gbc.readMem(0x919e));
        // CB 89 02D6
        gbc.setState(0xdc0e, 0x4af5, 0xc7b0, 0xf6b8, 0xfbde, 0x35bc, 0x0, 0x0);
        gbc.writeMem(0xdc0e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4af5, gbc.sp());
        EXPECT(0xdc10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0e));
        EXPECT(0x89, gbc.readMem(0xdc0f));
        // CB 89 02D7
        gbc.setState(0x98de, 0xc62c, 0x1ba0, 0x24f9, 0x10b4, 0x82de, 0x1, 0x1);
        gbc.writeMem(0x98de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc62c, gbc.sp());
        EXPECT(0x98e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98de));
        EXPECT(0x89, gbc.readMem(0x98df));
        // CB 89 02D8
        gbc.setState(0xc374, 0x7d95, 0x5c10, 0x5990, 0x4176, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0xc374, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7d95, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc374));
        EXPECT(0x89, gbc.readMem(0xc375));
        // CB 89 02D9
        gbc.setState(0xaaea, 0xc14f, 0x17a0, 0x23c7, 0x4aaa, 0xa390, 0x0, 0x0);
        gbc.writeMem(0xaaea, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc14f, gbc.sp());
        EXPECT(0xaaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaea));
        EXPECT(0x89, gbc.readMem(0xaaeb));
        // CB 89 02DA
        gbc.setState(0xd698, 0x86d6, 0x8fb0, 0xde6b, 0x1100, 0xd043, 0x1, 0x0);
        gbc.writeMem(0xd698, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x86d6, gbc.sp());
        EXPECT(0xd69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd698));
        EXPECT(0x89, gbc.readMem(0xd699));
        // CB 89 02DB
        gbc.setState(0x3b3, 0x1b2b, 0x7770, 0x2d3a, 0x153c, 0xb0f7, 0x0, 0x1);
        gbc.writeMem(0x3b3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1b2b, gbc.sp());
        EXPECT(0x3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02DC
        gbc.setState(0x7737, 0x5704, 0x17b0, 0xd984, 0xbf15, 0xee0, 0x1, 0x0);
        gbc.writeMem(0x7737, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0x7739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02DD
        gbc.setState(0x4973, 0x7d50, 0x20b0, 0x732a, 0x424d, 0xe09f, 0x1, 0x0);
        gbc.writeMem(0x4973, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7d50, gbc.sp());
        EXPECT(0x4975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02DE
        gbc.setState(0xbfa2, 0x12b0, 0x6b60, 0x5498, 0x2014, 0x5c67, 0x1, 0x1);
        gbc.writeMem(0xbfa2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x12b0, gbc.sp());
        EXPECT(0xbfa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa2));
        EXPECT(0x89, gbc.readMem(0xbfa3));
        // CB 89 02DF
        gbc.setState(0x7a73, 0xe172, 0xa580, 0x6a4, 0x25fb, 0x22bd, 0x0, 0x0);
        gbc.writeMem(0x7a73, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe172, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02E0
        gbc.setState(0xd665, 0xe395, 0x6500, 0xb250, 0x91e6, 0xf69, 0x1, 0x1);
        gbc.writeMem(0xd665, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe395, gbc.sp());
        EXPECT(0xd667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd665));
        EXPECT(0x89, gbc.readMem(0xd666));
        // CB 89 02E1
        gbc.setState(0x7f7b, 0x3b1b, 0xb450, 0x364d, 0x47b, 0x8cc5, 0x1, 0x1);
        gbc.writeMem(0x7f7b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0x7f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02E2
        gbc.setState(0xba0c, 0xd124, 0xabb0, 0xd075, 0x622, 0x4504, 0x0, 0x1);
        gbc.writeMem(0xba0c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd124, gbc.sp());
        EXPECT(0xba0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba0c));
        EXPECT(0x89, gbc.readMem(0xba0d));
        // CB 89 02E3
        gbc.setState(0xe465, 0x191b, 0x5380, 0x6ad8, 0xcd7, 0x6856, 0x0, 0x0);
        gbc.writeMem(0xe465, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x191b, gbc.sp());
        EXPECT(0xe467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe465));
        EXPECT(0x89, gbc.readMem(0xe466));
        // CB 89 02E4
        gbc.setState(0x89c9, 0x79f5, 0x3950, 0xed65, 0xa14a, 0xf5f9, 0x1, 0x0);
        gbc.writeMem(0x89c9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x79f5, gbc.sp());
        EXPECT(0x89cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c9));
        EXPECT(0x89, gbc.readMem(0x89ca));
        // CB 89 02E5
        gbc.setState(0x2880, 0x682c, 0x8e00, 0xf647, 0xeda3, 0xb250, 0x0, 0x1);
        gbc.writeMem(0x2880, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02E6
        gbc.setState(0x437a, 0x1f42, 0x9900, 0xf8f6, 0xab7e, 0x5b89, 0x0, 0x1);
        gbc.writeMem(0x437a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0x437c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02E7
        gbc.setState(0xe823, 0x66c0, 0x6030, 0xb5e8, 0x75ff, 0x69a3, 0x0, 0x1);
        gbc.writeMem(0xe823, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x66c0, gbc.sp());
        EXPECT(0xe825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe823));
        EXPECT(0x89, gbc.readMem(0xe824));
        // CB 89 02E8
        gbc.setState(0xae92, 0x338e, 0xce60, 0xb1cd, 0x29db, 0x53d, 0x1, 0x1);
        gbc.writeMem(0xae92, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x338e, gbc.sp());
        EXPECT(0xae94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae92));
        EXPECT(0x89, gbc.readMem(0xae93));
        // CB 89 02E9
        gbc.setState(0xe371, 0xf20a, 0xab30, 0xdd9a, 0xb7c6, 0xc403, 0x1, 0x0);
        gbc.writeMem(0xe371, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf20a, gbc.sp());
        EXPECT(0xe373, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe371));
        EXPECT(0x89, gbc.readMem(0xe372));
        // CB 89 02EB
        gbc.setState(0xd1ab, 0x4cc4, 0x8380, 0x42d9, 0x54c6, 0xc85, 0x0, 0x1);
        gbc.writeMem(0xd1ab, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4cc4, gbc.sp());
        EXPECT(0xd1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ab));
        EXPECT(0x89, gbc.readMem(0xd1ac));
        // CB 89 02EC
        gbc.setState(0x3234, 0x6327, 0xaff0, 0x5410, 0xf04d, 0xf96f, 0x1, 0x1);
        gbc.writeMem(0x3234, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6327, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02ED
        gbc.setState(0xc55c, 0x2192, 0xf610, 0xfb9f, 0x1f12, 0xe815, 0x0, 0x1);
        gbc.writeMem(0xc55c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2192, gbc.sp());
        EXPECT(0xc55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55c));
        EXPECT(0x89, gbc.readMem(0xc55d));
        // CB 89 02EE
        gbc.setState(0x651, 0xb8e2, 0xf890, 0xc359, 0x3b1e, 0x3773, 0x0, 0x0);
        gbc.writeMem(0x651, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb8e2, gbc.sp());
        EXPECT(0x653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02EF
        gbc.setState(0x465d, 0x7c6e, 0x180, 0x8ab4, 0x9166, 0x5e8c, 0x0, 0x0);
        gbc.writeMem(0x465d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02F0
        gbc.setState(0x5e99, 0x985a, 0xe580, 0xc327, 0xe1f2, 0x59ac, 0x0, 0x0);
        gbc.writeMem(0x5e99, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x985a, gbc.sp());
        EXPECT(0x5e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02F1
        gbc.setState(0xce45, 0x45bc, 0xdff0, 0x4bef, 0x33a8, 0xcca4, 0x1, 0x0);
        gbc.writeMem(0xce45, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x45bc, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce45));
        EXPECT(0x89, gbc.readMem(0xce46));
        // CB 89 02F2
        gbc.setState(0x4c5, 0x6fbb, 0xde90, 0x4340, 0xdbc, 0xa659, 0x1, 0x1);
        gbc.writeMem(0x4c5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02F3
        gbc.setState(0xa191, 0xb175, 0x9a20, 0xe419, 0x6c33, 0xd2d8, 0x1, 0x1);
        gbc.writeMem(0xa191, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb175, gbc.sp());
        EXPECT(0xa193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa191));
        EXPECT(0x89, gbc.readMem(0xa192));
        // CB 89 02F4
        gbc.setState(0x7d4c, 0x256b, 0x1170, 0x4c55, 0x1e88, 0xcb1d, 0x1, 0x0);
        gbc.writeMem(0x7d4c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x256b, gbc.sp());
        EXPECT(0x7d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02F5
        gbc.setState(0x341f, 0x3a27, 0x5f10, 0xc84e, 0xdfb, 0x8934, 0x1, 0x1);
        gbc.writeMem(0x341f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3a27, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02F6
        gbc.setState(0x86f4, 0xab80, 0xd770, 0xc670, 0x654b, 0xf146, 0x0, 0x1);
        gbc.writeMem(0x86f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xab80, gbc.sp());
        EXPECT(0x86f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f4));
        EXPECT(0x89, gbc.readMem(0x86f5));
        // CB 89 02F7
        gbc.setState(0x8162, 0x56e8, 0x3760, 0xcab5, 0x22dc, 0x56e, 0x0, 0x0);
        gbc.writeMem(0x8162, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x56e8, gbc.sp());
        EXPECT(0x8164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8162));
        EXPECT(0x89, gbc.readMem(0x8163));
        // CB 89 02F8
        gbc.setState(0x262f, 0x8302, 0x18a0, 0xa5e7, 0xb8a2, 0x2e38, 0x0, 0x1);
        gbc.writeMem(0x262f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8302, gbc.sp());
        EXPECT(0x2631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02F9
        gbc.setState(0x8212, 0xafc0, 0x4ec0, 0xe862, 0x47a5, 0xb317, 0x0, 0x0);
        gbc.writeMem(0x8212, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xafc0, gbc.sp());
        EXPECT(0x8214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8212));
        EXPECT(0x89, gbc.readMem(0x8213));
        // CB 89 02FA
        gbc.setState(0x5a9c, 0xe5fc, 0x4370, 0xf2af, 0xa2d1, 0xaca0, 0x1, 0x0);
        gbc.writeMem(0x5a9c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe5fc, gbc.sp());
        EXPECT(0x5a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 02FB
        gbc.setState(0xccd0, 0x3ac4, 0x5d70, 0xb054, 0xacbf, 0x7680, 0x0, 0x1);
        gbc.writeMem(0xccd0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3ac4, gbc.sp());
        EXPECT(0xccd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd0));
        EXPECT(0x89, gbc.readMem(0xccd1));
        // CB 89 02FD
        gbc.setState(0x20ad, 0xe814, 0x7820, 0x268e, 0xcaf5, 0x2952, 0x1, 0x0);
        gbc.writeMem(0x20ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe814, gbc.sp());
        EXPECT(0x20af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 02FE
        gbc.setState(0xae08, 0x3b96, 0x7760, 0x84d1, 0xef98, 0x175f, 0x0, 0x0);
        gbc.writeMem(0xae08, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3b96, gbc.sp());
        EXPECT(0xae0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae08));
        EXPECT(0x89, gbc.readMem(0xae09));
        // CB 89 02FF
        gbc.setState(0x630, 0xcce2, 0x24c0, 0xf1, 0xaa3, 0xd04b, 0x0, 0x0);
        gbc.writeMem(0x630, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcce2, gbc.sp());
        EXPECT(0x632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0300
        gbc.setState(0x53cf, 0x306a, 0xd80, 0x884d, 0x9475, 0x8049, 0x1, 0x1);
        gbc.writeMem(0x53cf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x306a, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0301
        gbc.setState(0x344b, 0x55cc, 0xaf20, 0x6555, 0xc145, 0x328e, 0x1, 0x1);
        gbc.writeMem(0x344b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x55cc, gbc.sp());
        EXPECT(0x344d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0302
        gbc.setState(0x1ca8, 0x943e, 0xe1b0, 0xb0a, 0x705, 0x72df, 0x0, 0x0);
        gbc.writeMem(0x1ca8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x943e, gbc.sp());
        EXPECT(0x1caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0303
        gbc.setState(0xa5a, 0xc675, 0xaba0, 0x9242, 0x1609, 0x5668, 0x0, 0x0);
        gbc.writeMem(0xa5a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc675, gbc.sp());
        EXPECT(0xa5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0304
        gbc.setState(0xed10, 0xf87f, 0xa860, 0xf064, 0xb13, 0x3be3, 0x1, 0x0);
        gbc.writeMem(0xed10, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf87f, gbc.sp());
        EXPECT(0xed12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed10));
        EXPECT(0x89, gbc.readMem(0xed11));
        // CB 89 0305
        gbc.setState(0xb85e, 0x7ac9, 0x3160, 0x3a3c, 0x2cf3, 0x35e6, 0x1, 0x1);
        gbc.writeMem(0xb85e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7ac9, gbc.sp());
        EXPECT(0xb860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb85e));
        EXPECT(0x89, gbc.readMem(0xb85f));
        // CB 89 0306
        gbc.setState(0x64e7, 0xd861, 0xc230, 0xb280, 0xd664, 0x3c39, 0x1, 0x1);
        gbc.writeMem(0x64e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd861, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0307
        gbc.setState(0x2ac6, 0xeea0, 0x5b50, 0xb052, 0x4ddc, 0xad90, 0x1, 0x0);
        gbc.writeMem(0x2ac6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeea0, gbc.sp());
        EXPECT(0x2ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0308
        gbc.setState(0x4be2, 0xbbaa, 0x6e60, 0xf1d0, 0x225a, 0x8a48, 0x0, 0x0);
        gbc.writeMem(0x4be2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbbaa, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 030A
        gbc.setState(0x917e, 0x3fb4, 0x6f40, 0xcee7, 0xdc5e, 0x5e2e, 0x0, 0x1);
        gbc.writeMem(0x917e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0x9180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917e));
        EXPECT(0x89, gbc.readMem(0x917f));
        // CB 89 030C
        gbc.setState(0xd0d6, 0x882e, 0x97e0, 0xb73b, 0x19ab, 0xd592, 0x1, 0x1);
        gbc.writeMem(0xd0d6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x882e, gbc.sp());
        EXPECT(0xd0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d6));
        EXPECT(0x89, gbc.readMem(0xd0d7));
        // CB 89 030D
        gbc.setState(0x904c, 0xa923, 0xbfa0, 0x66a9, 0x4144, 0xf38d, 0x1, 0x1);
        gbc.writeMem(0x904c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa923, gbc.sp());
        EXPECT(0x904e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904c));
        EXPECT(0x89, gbc.readMem(0x904d));
        // CB 89 030E
        gbc.setState(0x4781, 0x88de, 0x6ad0, 0x6b2d, 0x6fe9, 0xd0ac, 0x1, 0x1);
        gbc.writeMem(0x4781, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x88de, gbc.sp());
        EXPECT(0x4783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 030F
        gbc.setState(0x290f, 0xdd40, 0x7580, 0x9650, 0x353b, 0xa95a, 0x1, 0x1);
        gbc.writeMem(0x290f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdd40, gbc.sp());
        EXPECT(0x2911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0310
        gbc.setState(0x1d88, 0xdb5a, 0x1620, 0xf4d1, 0x16c7, 0xd5f6, 0x0, 0x0);
        gbc.writeMem(0x1d88, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdb5a, gbc.sp());
        EXPECT(0x1d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0311
        gbc.setState(0x1219, 0xaf54, 0xec20, 0xb8b9, 0x2149, 0x3c42, 0x0, 0x1);
        gbc.writeMem(0x1219, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaf54, gbc.sp());
        EXPECT(0x121b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0312
        gbc.setState(0x7e4e, 0x904e, 0x5420, 0x549f, 0xc852, 0xad80, 0x1, 0x1);
        gbc.writeMem(0x7e4e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x904e, gbc.sp());
        EXPECT(0x7e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0313
        gbc.setState(0xc620, 0x9efe, 0xef40, 0x784, 0xbe98, 0x75c7, 0x1, 0x1);
        gbc.writeMem(0xc620, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9efe, gbc.sp());
        EXPECT(0xc622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc620));
        EXPECT(0x89, gbc.readMem(0xc621));
        // CB 89 0314
        gbc.setState(0x3027, 0x70b7, 0x5cd0, 0x99f3, 0x2952, 0x9c44, 0x1, 0x0);
        gbc.writeMem(0x3027, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x70b7, gbc.sp());
        EXPECT(0x3029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0315
        gbc.setState(0x823e, 0xf24a, 0x18d0, 0xfa8a, 0x7f5b, 0xc5db, 0x1, 0x0);
        gbc.writeMem(0x823e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0x8240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x823e));
        EXPECT(0x89, gbc.readMem(0x823f));
        // CB 89 0316
        gbc.setState(0x9430, 0x2354, 0x6940, 0x2f6a, 0x7d07, 0x6290, 0x0, 0x0);
        gbc.writeMem(0x9430, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0x9432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9430));
        EXPECT(0x89, gbc.readMem(0x9431));
        // CB 89 0317
        gbc.setState(0xdd60, 0x4790, 0x6b40, 0x3fe, 0xa88f, 0x4514, 0x1, 0x0);
        gbc.writeMem(0xdd60, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4790, gbc.sp());
        EXPECT(0xdd62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd60));
        EXPECT(0x89, gbc.readMem(0xdd61));
        // CB 89 0318
        gbc.setState(0x392f, 0x26b4, 0x2350, 0x727c, 0x60af, 0x5f5d, 0x0, 0x1);
        gbc.writeMem(0x392f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x26b4, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0319
        gbc.setState(0x163e, 0xaaa, 0xa790, 0x9324, 0xd5f3, 0x40f3, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 031A
        gbc.setState(0x609f, 0xbee1, 0x4ed0, 0xca5d, 0x358, 0x94f6, 0x1, 0x1);
        gbc.writeMem(0x609f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbee1, gbc.sp());
        EXPECT(0x60a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 031B
        gbc.setState(0xa18d, 0x2f66, 0xb050, 0x3112, 0x92a6, 0x70fc, 0x1, 0x0);
        gbc.writeMem(0xa18d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2f66, gbc.sp());
        EXPECT(0xa18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18d));
        EXPECT(0x89, gbc.readMem(0xa18e));
        // CB 89 031C
        gbc.setState(0x610c, 0xbc89, 0xdcb0, 0x99fb, 0xfbb0, 0x85cd, 0x0, 0x0);
        gbc.writeMem(0x610c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbc89, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 031D
        gbc.setState(0x25f4, 0x9283, 0x750, 0x9171, 0xf61b, 0x2e39, 0x0, 0x1);
        gbc.writeMem(0x25f4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9283, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 031E
        gbc.setState(0x77ca, 0x9de2, 0xc0b0, 0x4a7a, 0xac05, 0xd8b2, 0x0, 0x1);
        gbc.writeMem(0x77ca, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0x77cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 031F
        gbc.setState(0x897e, 0xbd83, 0x5860, 0xc574, 0x4303, 0x30bc, 0x1, 0x0);
        gbc.writeMem(0x897e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbd83, gbc.sp());
        EXPECT(0x8980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897e));
        EXPECT(0x89, gbc.readMem(0x897f));
        // CB 89 0320
        gbc.setState(0x2531, 0x234e, 0xb0a0, 0x98ef, 0x387c, 0xf3c4, 0x1, 0x1);
        gbc.writeMem(0x2531, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x234e, gbc.sp());
        EXPECT(0x2533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0321
        gbc.setState(0x3220, 0xa550, 0xc540, 0xbb5b, 0x7c12, 0x7d46, 0x0, 0x1);
        gbc.writeMem(0x3220, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa550, gbc.sp());
        EXPECT(0x3222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0322
        gbc.setState(0x331c, 0x1f1b, 0xfa60, 0x638b, 0xc8d7, 0x122a, 0x1, 0x1);
        gbc.writeMem(0x331c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1f1b, gbc.sp());
        EXPECT(0x331e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0323
        gbc.setState(0xa88e, 0x83e1, 0xd200, 0x775, 0x3b81, 0xa7ad, 0x1, 0x1);
        gbc.writeMem(0xa88e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x83e1, gbc.sp());
        EXPECT(0xa890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88e));
        EXPECT(0x89, gbc.readMem(0xa88f));
        // CB 89 0324
        gbc.setState(0x8476, 0x71ae, 0x95c0, 0x6ddc, 0x697, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0x8476, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0x8478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8476));
        EXPECT(0x89, gbc.readMem(0x8477));
        // CB 89 0325
        gbc.setState(0x5071, 0x8d19, 0x5e80, 0xd6d9, 0x7ac1, 0xd18b, 0x1, 0x1);
        gbc.writeMem(0x5071, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x5073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0326
        gbc.setState(0xaa7c, 0x24da, 0x7860, 0x88c9, 0x907a, 0x4707, 0x1, 0x0);
        gbc.writeMem(0xaa7c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x24da, gbc.sp());
        EXPECT(0xaa7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7c));
        EXPECT(0x89, gbc.readMem(0xaa7d));
        // CB 89 0327
        gbc.setState(0x4718, 0x689f, 0x7580, 0xae2b, 0x7bf9, 0x202e, 0x1, 0x1);
        gbc.writeMem(0x4718, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x689f, gbc.sp());
        EXPECT(0x471a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0329
        gbc.setState(0xa2a5, 0xc4af, 0xd680, 0x50ec, 0xb42f, 0xd93d, 0x1, 0x1);
        gbc.writeMem(0xa2a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0xa2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a5));
        EXPECT(0x89, gbc.readMem(0xa2a6));
        // CB 89 032A
        gbc.setState(0x7015, 0x1cc7, 0xb80, 0x393d, 0xfca4, 0xed10, 0x0, 0x0);
        gbc.writeMem(0x7015, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1cc7, gbc.sp());
        EXPECT(0x7017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 032B
        gbc.setState(0xc56a, 0x5479, 0x9050, 0x86d6, 0xa218, 0xe03b, 0x0, 0x1);
        gbc.writeMem(0xc56a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x5479, gbc.sp());
        EXPECT(0xc56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56a));
        EXPECT(0x89, gbc.readMem(0xc56b));
        // CB 89 032D
        gbc.setState(0x1ce1, 0x75e3, 0x7510, 0xf8a3, 0x81c9, 0xcba, 0x0, 0x1);
        gbc.writeMem(0x1ce1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x75e3, gbc.sp());
        EXPECT(0x1ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 032E
        gbc.setState(0xb577, 0xa2de, 0x51d0, 0xf45e, 0x5aa2, 0x540d, 0x0, 0x1);
        gbc.writeMem(0xb577, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa2de, gbc.sp());
        EXPECT(0xb579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb577));
        EXPECT(0x89, gbc.readMem(0xb578));
        // CB 89 032F
        gbc.setState(0x367, 0xea9c, 0x9760, 0x4c3d, 0x1972, 0xd7a3, 0x0, 0x0);
        gbc.writeMem(0x367, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xea9c, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0330
        gbc.setState(0x50de, 0x19fb, 0xa1f0, 0x4667, 0xaffd, 0x7c2e, 0x0, 0x0);
        gbc.writeMem(0x50de, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0x50e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0331
        gbc.setState(0x3311, 0x2b96, 0x2490, 0x6331, 0x368f, 0xca65, 0x0, 0x0);
        gbc.writeMem(0x3311, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2b96, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0332
        gbc.setState(0xbca7, 0x3022, 0xd6e0, 0xf84a, 0x1f18, 0x6c76, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3022, gbc.sp());
        EXPECT(0xbca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca7));
        EXPECT(0x89, gbc.readMem(0xbca8));
        // CB 89 0333
        gbc.setState(0x3fe1, 0xb32d, 0x610, 0xddb1, 0xecef, 0x67ef, 0x1, 0x1);
        gbc.writeMem(0x3fe1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb32d, gbc.sp());
        EXPECT(0x3fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0334
        gbc.setState(0x6ccd, 0xcfcf, 0xcb60, 0x3eeb, 0x1197, 0x595f, 0x0, 0x1);
        gbc.writeMem(0x6ccd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcfcf, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0335
        gbc.setState(0x136e, 0xef37, 0x7390, 0xe7f7, 0x5322, 0x382d, 0x1, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xef37, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0336
        gbc.setState(0xc7a, 0xbb2d, 0x46e0, 0xace3, 0xa215, 0x3809, 0x1, 0x0);
        gbc.writeMem(0xc7a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbb2d, gbc.sp());
        EXPECT(0xc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0338
        gbc.setState(0x64b, 0xf796, 0x1880, 0xac09, 0xe9d, 0xb73b, 0x0, 0x1);
        gbc.writeMem(0x64b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf796, gbc.sp());
        EXPECT(0x64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0339
        gbc.setState(0x54f8, 0xf9bf, 0xbe20, 0xf1aa, 0xfaa5, 0x235c, 0x1, 0x1);
        gbc.writeMem(0x54f8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf9bf, gbc.sp());
        EXPECT(0x54fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 033A
        gbc.setState(0x4cd2, 0x27e5, 0xe020, 0xf687, 0xe006, 0x62d, 0x1, 0x0);
        gbc.writeMem(0x4cd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x27e5, gbc.sp());
        EXPECT(0x4cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 033B
        gbc.setState(0xc328, 0xf3d9, 0x1520, 0xef67, 0xeed, 0x25b, 0x1, 0x0);
        gbc.writeMem(0xc328, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf3d9, gbc.sp());
        EXPECT(0xc32a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc328));
        EXPECT(0x89, gbc.readMem(0xc329));
        // CB 89 033C
        gbc.setState(0x7f3f, 0xa62f, 0xf3e0, 0x4bcf, 0xc6f7, 0x8bb0, 0x0, 0x0);
        gbc.writeMem(0x7f3f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa62f, gbc.sp());
        EXPECT(0x7f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 033D
        gbc.setState(0x2a2e, 0x745e, 0xacc0, 0xb3a9, 0xc7f, 0x73c, 0x0, 0x1);
        gbc.writeMem(0x2a2e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x745e, gbc.sp());
        EXPECT(0x2a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 033E
        gbc.setState(0x897a, 0xa932, 0xd2a0, 0x2303, 0xd3c0, 0x5fb5, 0x1, 0x1);
        gbc.writeMem(0x897a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa932, gbc.sp());
        EXPECT(0x897c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897a));
        EXPECT(0x89, gbc.readMem(0x897b));
        // CB 89 033F
        gbc.setState(0xd544, 0xa9c0, 0xe3d0, 0x830d, 0xc054, 0x10b5, 0x1, 0x1);
        gbc.writeMem(0xd544, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa9c0, gbc.sp());
        EXPECT(0xd546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd544));
        EXPECT(0x89, gbc.readMem(0xd545));
        // CB 89 0340
        gbc.setState(0x8848, 0x4e0c, 0x2e50, 0x4706, 0xfb59, 0x4505, 0x1, 0x1);
        gbc.writeMem(0x8848, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4e0c, gbc.sp());
        EXPECT(0x884a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8848));
        EXPECT(0x89, gbc.readMem(0x8849));
        // CB 89 0341
        gbc.setState(0x988a, 0xf1da, 0x8000, 0x5508, 0x8c71, 0x7e20, 0x0, 0x1);
        gbc.writeMem(0x988a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0x988c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988a));
        EXPECT(0x89, gbc.readMem(0x988b));
        // CB 89 0342
        gbc.setState(0xd721, 0xedb9, 0xc30, 0xd605, 0x39d3, 0x2f77, 0x1, 0x0);
        gbc.writeMem(0xd721, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xedb9, gbc.sp());
        EXPECT(0xd723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd721));
        EXPECT(0x89, gbc.readMem(0xd722));
        // CB 89 0343
        gbc.setState(0xe7af, 0x6b72, 0x5990, 0xb698, 0x8690, 0xe635, 0x1, 0x0);
        gbc.writeMem(0xe7af, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6b72, gbc.sp());
        EXPECT(0xe7b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7af));
        EXPECT(0x89, gbc.readMem(0xe7b0));
        // CB 89 0344
        gbc.setState(0x5d31, 0xfb2a, 0x3ca0, 0x87c2, 0x7735, 0x196a, 0x1, 0x1);
        gbc.writeMem(0x5d31, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x5d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0345
        gbc.setState(0xa0ef, 0xcbca, 0xbf10, 0xbc2, 0x5441, 0x9e1a, 0x1, 0x1);
        gbc.writeMem(0xa0ef, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcbca, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0ef));
        EXPECT(0x89, gbc.readMem(0xa0f0));
        // CB 89 0346
        gbc.setState(0x5923, 0xd6b, 0x3c50, 0x6a34, 0x6fa0, 0xa286, 0x1, 0x1);
        gbc.writeMem(0x5923, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd6b, gbc.sp());
        EXPECT(0x5925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0347
        gbc.setState(0x6d64, 0xcfd8, 0x79f0, 0xb087, 0xf797, 0x11a5, 0x1, 0x0);
        gbc.writeMem(0x6d64, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcfd8, gbc.sp());
        EXPECT(0x6d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0348
        gbc.setState(0xe7d5, 0xe8bf, 0xe1d0, 0x7935, 0xefed, 0x5283, 0x1, 0x0);
        gbc.writeMem(0xe7d5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0xe7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7d5));
        EXPECT(0x89, gbc.readMem(0xe7d6));
        // CB 89 0349
        gbc.setState(0x72d3, 0xacb, 0xc2f0, 0x283c, 0x4ff3, 0x44ae, 0x0, 0x0);
        gbc.writeMem(0x72d3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xacb, gbc.sp());
        EXPECT(0x72d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 034B
        gbc.setState(0xcabc, 0x30d2, 0xdbb0, 0x7494, 0xdc0e, 0xb491, 0x0, 0x1);
        gbc.writeMem(0xcabc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0xcabe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabc));
        EXPECT(0x89, gbc.readMem(0xcabd));
        // CB 89 034C
        gbc.setState(0x1ad7, 0xbe23, 0x4780, 0x4e3e, 0xe9f5, 0x73bf, 0x0, 0x1);
        gbc.writeMem(0x1ad7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbe23, gbc.sp());
        EXPECT(0x1ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 034E
        gbc.setState(0x5290, 0x1fe7, 0x8b80, 0xe4e3, 0xab10, 0x400a, 0x1, 0x0);
        gbc.writeMem(0x5290, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1fe7, gbc.sp());
        EXPECT(0x5292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 034F
        gbc.setState(0xdf9, 0x8c03, 0x2f40, 0x92a9, 0xe77e, 0x53ae, 0x0, 0x1);
        gbc.writeMem(0xdf9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0xdfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0350
        gbc.setState(0xb8f3, 0x52bb, 0xe630, 0xb494, 0x779f, 0x6b63, 0x1, 0x1);
        gbc.writeMem(0xb8f3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x52bb, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f3));
        EXPECT(0x89, gbc.readMem(0xb8f4));
        // CB 89 0351
        gbc.setState(0x36c4, 0x5d00, 0x9e70, 0xc1b4, 0x677f, 0xd650, 0x1, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5d00, gbc.sp());
        EXPECT(0x36c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0352
        gbc.setState(0x2b7a, 0xa806, 0xa670, 0x6810, 0x8fc0, 0xe729, 0x1, 0x0);
        gbc.writeMem(0x2b7a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0x2b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0353
        gbc.setState(0xe476, 0xcea9, 0x84a0, 0x3431, 0x414, 0x1032, 0x1, 0x1);
        gbc.writeMem(0xe476, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcea9, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe476));
        EXPECT(0x89, gbc.readMem(0xe477));
        // CB 89 0354
        gbc.setState(0x3c67, 0x34c6, 0x4cc0, 0x27a8, 0xa40a, 0x1d27, 0x1, 0x1);
        gbc.writeMem(0x3c67, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x34c6, gbc.sp());
        EXPECT(0x3c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0355
        gbc.setState(0xaf6a, 0xf583, 0xfb00, 0x18ff, 0xe27e, 0x2f7f, 0x1, 0x0);
        gbc.writeMem(0xaf6a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf583, gbc.sp());
        EXPECT(0xaf6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6a));
        EXPECT(0x89, gbc.readMem(0xaf6b));
        // CB 89 0356
        gbc.setState(0xcba3, 0x1456, 0xadb0, 0x361b, 0x1709, 0x3f40, 0x0, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1456, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0x89, gbc.readMem(0xcba4));
        // CB 89 0357
        gbc.setState(0x1ba5, 0xc345, 0xe780, 0x3e44, 0x1665, 0xa5eb, 0x0, 0x1);
        gbc.writeMem(0x1ba5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc345, gbc.sp());
        EXPECT(0x1ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0358
        gbc.setState(0x2ab3, 0x9706, 0x1780, 0x1458, 0x8d9d, 0x7d3d, 0x1, 0x1);
        gbc.writeMem(0x2ab3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0x2ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0359
        gbc.setState(0xdc22, 0x759c, 0x2a70, 0x65bd, 0x7e63, 0xc157, 0x0, 0x1);
        gbc.writeMem(0xdc22, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x759c, gbc.sp());
        EXPECT(0xdc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc22));
        EXPECT(0x89, gbc.readMem(0xdc23));
        // CB 89 035A
        gbc.setState(0xbf81, 0x3cef, 0xbd80, 0x902e, 0x5bb6, 0x257d, 0x0, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3cef, gbc.sp());
        EXPECT(0xbf83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf81));
        EXPECT(0x89, gbc.readMem(0xbf82));
        // CB 89 035B
        gbc.setState(0x7cd9, 0xf884, 0xa5d0, 0xee52, 0x8d21, 0xa92a, 0x1, 0x1);
        gbc.writeMem(0x7cd9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf884, gbc.sp());
        EXPECT(0x7cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 035C
        gbc.setState(0xdfaa, 0xcee6, 0xba20, 0xab19, 0x35d8, 0xdd5f, 0x1, 0x1);
        gbc.writeMem(0xdfaa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0xdfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfaa));
        EXPECT(0x89, gbc.readMem(0xdfab));
        // CB 89 035D
        gbc.setState(0xb432, 0xa4ab, 0x5750, 0xd983, 0x4ce8, 0x3fe9, 0x0, 0x0);
        gbc.writeMem(0xb432, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0xb434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb432));
        EXPECT(0x89, gbc.readMem(0xb433));
        // CB 89 035E
        gbc.setState(0x520e, 0xfaf0, 0xed00, 0xe937, 0xdde2, 0xfebd, 0x0, 0x1);
        gbc.writeMem(0x520e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfaf0, gbc.sp());
        EXPECT(0x5210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 035F
        gbc.setState(0x72b9, 0xee49, 0xb720, 0x64ff, 0x68c2, 0x2dd1, 0x1, 0x1);
        gbc.writeMem(0x72b9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xee49, gbc.sp());
        EXPECT(0x72bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0360
        gbc.setState(0xb568, 0x6ea0, 0x98f0, 0x8031, 0x4c1a, 0xb668, 0x0, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6ea0, gbc.sp());
        EXPECT(0xb56a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb568));
        EXPECT(0x89, gbc.readMem(0xb569));
        // CB 89 0361
        gbc.setState(0xb118, 0x8542, 0x8ed0, 0x3851, 0x5fc8, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0xb118, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8542, gbc.sp());
        EXPECT(0xb11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb118));
        EXPECT(0x89, gbc.readMem(0xb119));
        // CB 89 0363
        gbc.setState(0xcac8, 0x2ded, 0x34d0, 0x87f9, 0x75a5, 0xae89, 0x0, 0x1);
        gbc.writeMem(0xcac8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2ded, gbc.sp());
        EXPECT(0xcaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac8));
        EXPECT(0x89, gbc.readMem(0xcac9));
        // CB 89 0364
        gbc.setState(0x4b2f, 0x859b, 0xdbf0, 0xa5c7, 0x6a04, 0x33f5, 0x0, 0x0);
        gbc.writeMem(0x4b2f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x859b, gbc.sp());
        EXPECT(0x4b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0365
        gbc.setState(0x9f5f, 0x24aa, 0xfca0, 0xfdd4, 0x125, 0xf6b8, 0x1, 0x1);
        gbc.writeMem(0x9f5f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x24aa, gbc.sp());
        EXPECT(0x9f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5f));
        EXPECT(0x89, gbc.readMem(0x9f60));
        // CB 89 0366
        gbc.setState(0x84c6, 0x53cd, 0x2800, 0x8e72, 0x77fd, 0xa464, 0x1, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x53cd, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0x89, gbc.readMem(0x84c7));
        // CB 89 0367
        gbc.setState(0xbef0, 0x8988, 0x6a80, 0xc92d, 0x9b86, 0x368b, 0x0, 0x1);
        gbc.writeMem(0xbef0, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0xbef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef0));
        EXPECT(0x89, gbc.readMem(0xbef1));
        // CB 89 0368
        gbc.setState(0x7253, 0x209e, 0x24b0, 0xc366, 0x48da, 0x405a, 0x0, 0x1);
        gbc.writeMem(0x7253, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x209e, gbc.sp());
        EXPECT(0x7255, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0369
        gbc.setState(0x21ad, 0xa6ab, 0xc610, 0x740a, 0xe17a, 0x6f3, 0x0, 0x1);
        gbc.writeMem(0x21ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa6ab, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 036A
        gbc.setState(0xc21d, 0xa7ae, 0x3dd0, 0x58e7, 0xf70b, 0x3a76, 0x1, 0x1);
        gbc.writeMem(0xc21d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa7ae, gbc.sp());
        EXPECT(0xc21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21d));
        EXPECT(0x89, gbc.readMem(0xc21e));
        // CB 89 036B
        gbc.setState(0x4129, 0x3e96, 0xc070, 0x803c, 0xa8ce, 0x6bbb, 0x0, 0x1);
        gbc.writeMem(0x4129, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0x412b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 036C
        gbc.setState(0x9676, 0xb092, 0x1680, 0x3bc0, 0xbf32, 0xa396, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb092, gbc.sp());
        EXPECT(0x9678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9676));
        EXPECT(0x89, gbc.readMem(0x9677));
        // CB 89 036D
        gbc.setState(0xa775, 0x346b, 0x1a80, 0x12a6, 0xe89e, 0xe908, 0x1, 0x0);
        gbc.writeMem(0xa775, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x346b, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa775));
        EXPECT(0x89, gbc.readMem(0xa776));
        // CB 89 036E
        gbc.setState(0x9d4d, 0x830d, 0x2fb0, 0xec37, 0x6bbd, 0x3a2, 0x0, 0x1);
        gbc.writeMem(0x9d4d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0x9d4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d4d));
        EXPECT(0x89, gbc.readMem(0x9d4e));
        // CB 89 036F
        gbc.setState(0x94f6, 0xf7f6, 0xaf90, 0xfe74, 0x451, 0xab6d, 0x0, 0x0);
        gbc.writeMem(0x94f6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf7f6, gbc.sp());
        EXPECT(0x94f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f6));
        EXPECT(0x89, gbc.readMem(0x94f7));
        // CB 89 0370
        gbc.setState(0x29a5, 0xbb14, 0xff10, 0x7762, 0x6827, 0xa675, 0x0, 0x0);
        gbc.writeMem(0x29a5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbb14, gbc.sp());
        EXPECT(0x29a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0371
        gbc.setState(0xdd1d, 0xcecf, 0x2e30, 0xea38, 0x2866, 0x9044, 0x0, 0x1);
        gbc.writeMem(0xdd1d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcecf, gbc.sp());
        EXPECT(0xdd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1d));
        EXPECT(0x89, gbc.readMem(0xdd1e));
        // CB 89 0372
        gbc.setState(0x9a2a, 0x96fd, 0x4830, 0xba4f, 0xf3d7, 0xff97, 0x0, 0x0);
        gbc.writeMem(0x9a2a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x96fd, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2a));
        EXPECT(0x89, gbc.readMem(0x9a2b));
        // CB 89 0373
        gbc.setState(0x8a1e, 0x2674, 0x86d0, 0x4810, 0xd7c4, 0x6b6f, 0x0, 0x1);
        gbc.writeMem(0x8a1e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2674, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0x89, gbc.readMem(0x8a1f));
        // CB 89 0374
        gbc.setState(0xa689, 0x8bc8, 0xf800, 0x4d67, 0x5f95, 0xde5b, 0x0, 0x0);
        gbc.writeMem(0xa689, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8bc8, gbc.sp());
        EXPECT(0xa68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa689));
        EXPECT(0x89, gbc.readMem(0xa68a));
        // CB 89 0375
        gbc.setState(0x2edf, 0x8042, 0xcd30, 0xf3a5, 0x5f33, 0x6c45, 0x0, 0x1);
        gbc.writeMem(0x2edf, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8042, gbc.sp());
        EXPECT(0x2ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0376
        gbc.setState(0x168f, 0xb9bd, 0x6d00, 0x6b55, 0xd450, 0xa944, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb9bd, gbc.sp());
        EXPECT(0x1691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0378
        gbc.setState(0x3d3b, 0x16ee, 0xc150, 0xeef, 0x26e4, 0xeb29, 0x0, 0x1);
        gbc.writeMem(0x3d3b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x16ee, gbc.sp());
        EXPECT(0x3d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0379
        gbc.setState(0xa2fb, 0x1393, 0xc570, 0x1c6b, 0xbd6e, 0xd00d, 0x1, 0x1);
        gbc.writeMem(0xa2fb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1393, gbc.sp());
        EXPECT(0xa2fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2fb));
        EXPECT(0x89, gbc.readMem(0xa2fc));
        // CB 89 037A
        gbc.setState(0x1828, 0xc12c, 0xd510, 0x3b2e, 0x4b81, 0xa729, 0x0, 0x0);
        gbc.writeMem(0x1828, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0x182a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 037B
        gbc.setState(0x804b, 0x29e8, 0x79d0, 0x659e, 0x26b4, 0xce56, 0x1, 0x0);
        gbc.writeMem(0x804b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x29e8, gbc.sp());
        EXPECT(0x804d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804b));
        EXPECT(0x89, gbc.readMem(0x804c));
        // CB 89 037C
        gbc.setState(0x1a17, 0x2bc1, 0xa4f0, 0xffd8, 0x3abc, 0x41e7, 0x1, 0x0);
        gbc.writeMem(0x1a17, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2bc1, gbc.sp());
        EXPECT(0x1a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 037E
        gbc.setState(0x9bbb, 0xeaf8, 0x6870, 0xc682, 0x91d, 0x330e, 0x0, 0x1);
        gbc.writeMem(0x9bbb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x9bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbb));
        EXPECT(0x89, gbc.readMem(0x9bbc));
        // CB 89 037F
        gbc.setState(0x9d8c, 0xe249, 0x3da0, 0x395e, 0x65cd, 0xa4c, 0x0, 0x1);
        gbc.writeMem(0x9d8c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe249, gbc.sp());
        EXPECT(0x9d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8c));
        EXPECT(0x89, gbc.readMem(0x9d8d));
        // CB 89 0380
        gbc.setState(0xb9e7, 0xf74e, 0x1da0, 0x4ed7, 0xe440, 0x2ced, 0x0, 0x1);
        gbc.writeMem(0xb9e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0xb9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e7));
        EXPECT(0x89, gbc.readMem(0xb9e8));
        // CB 89 0381
        gbc.setState(0xaa43, 0xb69b, 0x2eb0, 0xdb68, 0xdb35, 0xddac, 0x1, 0x1);
        gbc.writeMem(0xaa43, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb69b, gbc.sp());
        EXPECT(0xaa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa43));
        EXPECT(0x89, gbc.readMem(0xaa44));
        // CB 89 0382
        gbc.setState(0xd07a, 0xb55c, 0x65a0, 0xeeea, 0x513, 0xaa53, 0x1, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb55c, gbc.sp());
        EXPECT(0xd07c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07a));
        EXPECT(0x89, gbc.readMem(0xd07b));
        // CB 89 0383
        gbc.setState(0x8780, 0xd7b3, 0xeee0, 0x9a0e, 0xe2aa, 0xacd6, 0x1, 0x1);
        gbc.writeMem(0x8780, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd7b3, gbc.sp());
        EXPECT(0x8782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8780));
        EXPECT(0x89, gbc.readMem(0x8781));
        // CB 89 0384
        gbc.setState(0xb637, 0x769d, 0x9df0, 0x1ad6, 0xbacd, 0x5597, 0x1, 0x0);
        gbc.writeMem(0xb637, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x769d, gbc.sp());
        EXPECT(0xb639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb637));
        EXPECT(0x89, gbc.readMem(0xb638));
        // CB 89 0385
        gbc.setState(0x880e, 0x44b9, 0x94d0, 0xa2ec, 0xa0f4, 0x3c95, 0x1, 0x0);
        gbc.writeMem(0x880e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x44b9, gbc.sp());
        EXPECT(0x8810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x880e));
        EXPECT(0x89, gbc.readMem(0x880f));
        // CB 89 0386
        gbc.setState(0xbf72, 0x6de4, 0x7340, 0x3b8b, 0x776e, 0x2161, 0x1, 0x1);
        gbc.writeMem(0xbf72, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6de4, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf72));
        EXPECT(0x89, gbc.readMem(0xbf73));
        // CB 89 0387
        gbc.setState(0x9b1a, 0x9099, 0xb680, 0x82c, 0x5409, 0xd7c1, 0x1, 0x0);
        gbc.writeMem(0x9b1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9099, gbc.sp());
        EXPECT(0x9b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b1a));
        EXPECT(0x89, gbc.readMem(0x9b1b));
        // CB 89 0388
        gbc.setState(0xa148, 0xaa14, 0x8be0, 0x3367, 0x726a, 0x1344, 0x1, 0x0);
        gbc.writeMem(0xa148, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0xa14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa148));
        EXPECT(0x89, gbc.readMem(0xa149));
        // CB 89 0389
        gbc.setState(0x635f, 0x9a7b, 0x2410, 0x1035, 0xcdc2, 0xa438, 0x0, 0x0);
        gbc.writeMem(0x635f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0x6361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 038A
        gbc.setState(0xa027, 0xdcc3, 0x8da0, 0x6cd7, 0xb810, 0xed3a, 0x1, 0x1);
        gbc.writeMem(0xa027, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0xa029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa027));
        EXPECT(0x89, gbc.readMem(0xa028));
        // CB 89 038B
        gbc.setState(0x38a2, 0x4b40, 0xc1b0, 0x4d9f, 0xe590, 0xf4f3, 0x0, 0x0);
        gbc.writeMem(0x38a2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4b40, gbc.sp());
        EXPECT(0x38a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 038C
        gbc.setState(0x8f5, 0x42e4, 0x2b20, 0x4c2f, 0xe348, 0xf258, 0x1, 0x0);
        gbc.writeMem(0x8f5, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x42e4, gbc.sp());
        EXPECT(0x8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 038D
        gbc.setState(0xb7f9, 0x91f1, 0x3100, 0xeeb1, 0x5356, 0x740f, 0x0, 0x0);
        gbc.writeMem(0xb7f9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x91f1, gbc.sp());
        EXPECT(0xb7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f9));
        EXPECT(0x89, gbc.readMem(0xb7fa));
        // CB 89 038E
        gbc.setState(0xcd3b, 0xee42, 0xb140, 0xbba4, 0xbf71, 0xc0aa, 0x1, 0x0);
        gbc.writeMem(0xcd3b, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xee42, gbc.sp());
        EXPECT(0xcd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3b));
        EXPECT(0x89, gbc.readMem(0xcd3c));
        // CB 89 038F
        gbc.setState(0x3089, 0x44ed, 0xb0c0, 0x248, 0x9de8, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0x3089, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x44ed, gbc.sp());
        EXPECT(0x308b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0391
        gbc.setState(0x9659, 0x33f8, 0x8550, 0xe61a, 0xee1d, 0xdd1a, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x33f8, gbc.sp());
        EXPECT(0x965b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9659));
        EXPECT(0x89, gbc.readMem(0x965a));
        // CB 89 0392
        gbc.setState(0x2b2d, 0xead0, 0xb500, 0x4edb, 0xf4b4, 0x6ea6, 0x1, 0x0);
        gbc.writeMem(0x2b2d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xead0, gbc.sp());
        EXPECT(0x2b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0393
        gbc.setState(0xb028, 0x55ce, 0xbea0, 0x7910, 0x8637, 0xd50e, 0x0, 0x0);
        gbc.writeMem(0xb028, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x55ce, gbc.sp());
        EXPECT(0xb02a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb028));
        EXPECT(0x89, gbc.readMem(0xb029));
        // CB 89 0395
        gbc.setState(0x9c6, 0xc723, 0x9dd0, 0x4a73, 0xf70, 0x83b0, 0x1, 0x1);
        gbc.writeMem(0x9c6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 0396
        gbc.setState(0xb014, 0xc426, 0xd040, 0x65e1, 0xe027, 0xfd05, 0x1, 0x0);
        gbc.writeMem(0xb014, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc426, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb014));
        EXPECT(0x89, gbc.readMem(0xb015));
        // CB 89 0397
        gbc.setState(0xedd6, 0x29e, 0xc830, 0xd40b, 0xf1ed, 0x3d73, 0x1, 0x1);
        gbc.writeMem(0xedd6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x29e, gbc.sp());
        EXPECT(0xedd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd6));
        EXPECT(0x89, gbc.readMem(0xedd7));
        // CB 89 0398
        gbc.setState(0x25c1, 0xb429, 0x3680, 0x51a8, 0x42dd, 0x4077, 0x1, 0x1);
        gbc.writeMem(0x25c1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb429, gbc.sp());
        EXPECT(0x25c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 0399
        gbc.setState(0x5cd7, 0xc1f6, 0x9d80, 0xfd24, 0xa83, 0xc891, 0x0, 0x0);
        gbc.writeMem(0x5cd7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc1f6, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 039A
        gbc.setState(0xe4a3, 0xea57, 0xa330, 0x8d94, 0x7094, 0x5971, 0x0, 0x1);
        gbc.writeMem(0xe4a3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xea57, gbc.sp());
        EXPECT(0xe4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a3));
        EXPECT(0x89, gbc.readMem(0xe4a4));
        // CB 89 039B
        gbc.setState(0xce33, 0x38d8, 0xc4d0, 0x163a, 0x28f9, 0xa36, 0x1, 0x0);
        gbc.writeMem(0xce33, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x38d8, gbc.sp());
        EXPECT(0xce35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce33));
        EXPECT(0x89, gbc.readMem(0xce34));
        // CB 89 039C
        gbc.setState(0x2940, 0x1d44, 0x8b20, 0x9537, 0xd044, 0x1ffd, 0x1, 0x1);
        gbc.writeMem(0x2940, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1d44, gbc.sp());
        EXPECT(0x2942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 039D
        gbc.setState(0xc694, 0x6c07, 0x91e0, 0x2edd, 0x5c34, 0x6b80, 0x1, 0x0);
        gbc.writeMem(0xc694, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6c07, gbc.sp());
        EXPECT(0xc696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc694));
        EXPECT(0x89, gbc.readMem(0xc695));
        // CB 89 039E
        gbc.setState(0xbf66, 0x9193, 0x1e50, 0x607d, 0x8fb0, 0xe612, 0x0, 0x0);
        gbc.writeMem(0xbf66, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9193, gbc.sp());
        EXPECT(0xbf68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf66));
        EXPECT(0x89, gbc.readMem(0xbf67));
        // CB 89 03A0
        gbc.setState(0x2f74, 0x1705, 0x5040, 0x418c, 0xb7d1, 0x5ca, 0x0, 0x0);
        gbc.writeMem(0x2f74, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1705, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03A1
        gbc.setState(0x9f6f, 0xfd81, 0x4900, 0xbe11, 0xba6d, 0x545d, 0x1, 0x1);
        gbc.writeMem(0x9f6f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfd81, gbc.sp());
        EXPECT(0x9f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6f));
        EXPECT(0x89, gbc.readMem(0x9f70));
        // CB 89 03A2
        gbc.setState(0xb555, 0xcbb9, 0x9a80, 0xd731, 0xf37c, 0xc422, 0x0, 0x1);
        gbc.writeMem(0xb555, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcbb9, gbc.sp());
        EXPECT(0xb557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb555));
        EXPECT(0x89, gbc.readMem(0xb556));
        // CB 89 03A3
        gbc.setState(0xd8e1, 0xadaf, 0x9810, 0xbbe6, 0x2369, 0xa51c, 0x1, 0x0);
        gbc.writeMem(0xd8e1, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xadaf, gbc.sp());
        EXPECT(0xd8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e1));
        EXPECT(0x89, gbc.readMem(0xd8e2));
        // CB 89 03A4
        gbc.setState(0x6cdd, 0x1770, 0xc470, 0xe51b, 0x1a01, 0x95c3, 0x1, 0x0);
        gbc.writeMem(0x6cdd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1770, gbc.sp());
        EXPECT(0x6cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03A6
        gbc.setState(0x44fe, 0xc954, 0xea50, 0xcdba, 0x26ab, 0x2abb, 0x0, 0x0);
        gbc.writeMem(0x44fe, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc954, gbc.sp());
        EXPECT(0x4500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03A8
        gbc.setState(0x64f8, 0x37e3, 0xda0, 0xd2b4, 0x5b4a, 0xd073, 0x0, 0x0);
        gbc.writeMem(0x64f8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x37e3, gbc.sp());
        EXPECT(0x64fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03A9
        gbc.setState(0x7d3c, 0x5bdd, 0xda40, 0xca12, 0x6f31, 0x3588, 0x0, 0x1);
        gbc.writeMem(0x7d3c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5bdd, gbc.sp());
        EXPECT(0x7d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03AA
        gbc.setState(0x26eb, 0x570e, 0xfa20, 0x9cea, 0x484b, 0x4e19, 0x0, 0x0);
        gbc.writeMem(0x26eb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x570e, gbc.sp());
        EXPECT(0x26ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03AB
        gbc.setState(0xb3fd, 0x3015, 0x7ee0, 0x2fe, 0x4209, 0x92a7, 0x1, 0x0);
        gbc.writeMem(0xb3fd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3015, gbc.sp());
        EXPECT(0xb3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3fd));
        EXPECT(0x89, gbc.readMem(0xb3fe));
        // CB 89 03AC
        gbc.setState(0x84, 0x9e3b, 0x6b10, 0x37c5, 0x3d6e, 0xb6a2, 0x0, 0x0);
        gbc.writeMem(0x84, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9e3b, gbc.sp());
        EXPECT(0x86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03AD
        gbc.setState(0x66fc, 0xf3d9, 0xbb70, 0x9fc, 0x19e9, 0x504f, 0x0, 0x1);
        gbc.writeMem(0x66fc, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf3d9, gbc.sp());
        EXPECT(0x66fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03AE
        gbc.setState(0x6cc3, 0x5cff, 0x3b70, 0xc319, 0x20d0, 0x4f39, 0x0, 0x1);
        gbc.writeMem(0x6cc3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5cff, gbc.sp());
        EXPECT(0x6cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03AF
        gbc.setState(0x548d, 0xb818, 0xfef0, 0xae0e, 0x1da2, 0x41cf, 0x0, 0x0);
        gbc.writeMem(0x548d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb818, gbc.sp());
        EXPECT(0x548f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03B1
        gbc.setState(0x4746, 0xd41e, 0x7030, 0x17b3, 0x9e96, 0x1e23, 0x0, 0x0);
        gbc.writeMem(0x4746, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x4748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03B2
        gbc.setState(0xe926, 0xcdf5, 0xea70, 0x2286, 0x7b99, 0x5957, 0x1, 0x0);
        gbc.writeMem(0xe926, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xcdf5, gbc.sp());
        EXPECT(0xe928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe926));
        EXPECT(0x89, gbc.readMem(0xe927));
        // CB 89 03B3
        gbc.setState(0xdf30, 0x9b47, 0xf3d0, 0xd960, 0xe113, 0x66f9, 0x0, 0x0);
        gbc.writeMem(0xdf30, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9b47, gbc.sp());
        EXPECT(0xdf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf30));
        EXPECT(0x89, gbc.readMem(0xdf31));
        // CB 89 03B4
        gbc.setState(0xde65, 0x99f9, 0x1030, 0x7fba, 0xb58a, 0xf18e, 0x0, 0x1);
        gbc.writeMem(0xde65, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x99f9, gbc.sp());
        EXPECT(0xde67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde65));
        EXPECT(0x89, gbc.readMem(0xde66));
        // CB 89 03B5
        gbc.setState(0x6641, 0xd485, 0xb1e0, 0x3a94, 0xdd09, 0x89a9, 0x0, 0x0);
        gbc.writeMem(0x6641, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0x6643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03B6
        gbc.setState(0xd9ad, 0xbe98, 0x33f0, 0xeb5a, 0x6bb7, 0xc82c, 0x0, 0x1);
        gbc.writeMem(0xd9ad, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbe98, gbc.sp());
        EXPECT(0xd9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ad));
        EXPECT(0x89, gbc.readMem(0xd9ae));
        // CB 89 03B7
        gbc.setState(0xc30f, 0xd324, 0x9320, 0xa67c, 0x195b, 0x72cf, 0x0, 0x0);
        gbc.writeMem(0xc30f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd324, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30f));
        EXPECT(0x89, gbc.readMem(0xc310));
        // CB 89 03B8
        gbc.setState(0x42ee, 0xd247, 0xb1e0, 0x8fa9, 0x552b, 0x249a, 0x1, 0x1);
        gbc.writeMem(0x42ee, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd247, gbc.sp());
        EXPECT(0x42f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03B9
        gbc.setState(0x7371, 0xeaa, 0xfc60, 0x90aa, 0xb23f, 0x8ae5, 0x0, 0x0);
        gbc.writeMem(0x7371, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0x7373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03BA
        gbc.setState(0xcaa3, 0xc9d0, 0x7df0, 0xf814, 0xd232, 0x5899, 0x0, 0x0);
        gbc.writeMem(0xcaa3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc9d0, gbc.sp());
        EXPECT(0xcaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaa3));
        EXPECT(0x89, gbc.readMem(0xcaa4));
        // CB 89 03BB
        gbc.setState(0x8567, 0xc13a, 0x3760, 0xb11c, 0x35f0, 0x5385, 0x1, 0x1);
        gbc.writeMem(0x8567, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc13a, gbc.sp());
        EXPECT(0x8569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8567));
        EXPECT(0x89, gbc.readMem(0x8568));
        // CB 89 03BC
        gbc.setState(0x7344, 0xb8c8, 0x650, 0x4f7d, 0xa935, 0x503c, 0x1, 0x0);
        gbc.writeMem(0x7344, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb8c8, gbc.sp());
        EXPECT(0x7346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03BD
        gbc.setState(0x2bc2, 0xa511, 0xaa30, 0x991f, 0xde19, 0x33dd, 0x0, 0x1);
        gbc.writeMem(0x2bc2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa511, gbc.sp());
        EXPECT(0x2bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03BE
        gbc.setState(0x35ce, 0xc19, 0xdb80, 0x27e5, 0x635e, 0x6cee, 0x0, 0x1);
        gbc.writeMem(0x35ce, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc19, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03BF
        gbc.setState(0x8efa, 0xfd, 0xa570, 0xcce7, 0xeebe, 0x58a2, 0x0, 0x1);
        gbc.writeMem(0x8efa, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfd, gbc.sp());
        EXPECT(0x8efc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efa));
        EXPECT(0x89, gbc.readMem(0x8efb));
        // CB 89 03C0
        gbc.setState(0x4a1c, 0xb4af, 0xe140, 0x2104, 0x635a, 0xcb63, 0x1, 0x1);
        gbc.writeMem(0x4a1c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb4af, gbc.sp());
        EXPECT(0x4a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03C1
        gbc.setState(0x17d9, 0x859, 0x99b0, 0x62a8, 0xf7a4, 0xd8cf, 0x1, 0x1);
        gbc.writeMem(0x17d9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x859, gbc.sp());
        EXPECT(0x17db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03C2
        gbc.setState(0xd5c, 0x1387, 0x8c50, 0xa302, 0x4491, 0xc9e7, 0x1, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1387, gbc.sp());
        EXPECT(0xd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03C3
        gbc.setState(0x56eb, 0x24e4, 0xe700, 0x6923, 0x4545, 0x73c3, 0x0, 0x1);
        gbc.writeMem(0x56eb, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x24e4, gbc.sp());
        EXPECT(0x56ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03C4
        gbc.setState(0xe82f, 0xa15f, 0x3bc0, 0xaa35, 0x5607, 0xd5ae, 0x1, 0x1);
        gbc.writeMem(0xe82f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa15f, gbc.sp());
        EXPECT(0xe831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe82f));
        EXPECT(0x89, gbc.readMem(0xe830));
        // CB 89 03C5
        gbc.setState(0x869d, 0x85cf, 0xc010, 0x2a62, 0x3ea4, 0xc289, 0x0, 0x1);
        gbc.writeMem(0x869d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x85cf, gbc.sp());
        EXPECT(0x869f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869d));
        EXPECT(0x89, gbc.readMem(0x869e));
        // CB 89 03C6
        gbc.setState(0xd670, 0xa02b, 0xece0, 0xa45, 0x159b, 0x76d1, 0x0, 0x0);
        gbc.writeMem(0xd670, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa02b, gbc.sp());
        EXPECT(0xd672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd670));
        EXPECT(0x89, gbc.readMem(0xd671));
        // CB 89 03C7
        gbc.setState(0x4c2, 0x52f, 0x87a0, 0xe43, 0x505f, 0x5328, 0x1, 0x0);
        gbc.writeMem(0x4c2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x52f, gbc.sp());
        EXPECT(0x4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03C8
        gbc.setState(0x969f, 0xcbb5, 0x310, 0x41cb, 0x8dc1, 0xd695, 0x1, 0x1);
        gbc.writeMem(0x969f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcbb5, gbc.sp());
        EXPECT(0x96a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x969f));
        EXPECT(0x89, gbc.readMem(0x96a0));
        // CB 89 03C9
        gbc.setState(0x3bd2, 0x1e2, 0xc260, 0xeaf8, 0x3702, 0x5995, 0x0, 0x1);
        gbc.writeMem(0x3bd2, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1e2, gbc.sp());
        EXPECT(0x3bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03CA
        gbc.setState(0xebd3, 0xf59b, 0x5650, 0x9802, 0x2dae, 0xe8fe, 0x0, 0x1);
        gbc.writeMem(0xebd3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf59b, gbc.sp());
        EXPECT(0xebd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebd3));
        EXPECT(0x89, gbc.readMem(0xebd4));
        // CB 89 03CB
        gbc.setState(0x6656, 0xb77f, 0xdeb0, 0xadb7, 0x336f, 0xe47a, 0x0, 0x1);
        gbc.writeMem(0x6656, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb77f, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03CC
        gbc.setState(0x55cd, 0x6646, 0xa130, 0xed4c, 0xb84b, 0x787e, 0x0, 0x1);
        gbc.writeMem(0x55cd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6646, gbc.sp());
        EXPECT(0x55cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03CD
        gbc.setState(0x5ee8, 0x11e2, 0x9720, 0xac7c, 0x7d66, 0x7716, 0x0, 0x1);
        gbc.writeMem(0x5ee8, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x11e2, gbc.sp());
        EXPECT(0x5eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03CE
        gbc.setState(0x7142, 0xf726, 0x53b0, 0x10ed, 0x4c4d, 0x3d18, 0x0, 0x0);
        gbc.writeMem(0x7142, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf726, gbc.sp());
        EXPECT(0x7144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03CF
        gbc.setState(0x9d11, 0xd70d, 0x6c90, 0xccc8, 0x6f5, 0xcc4b, 0x1, 0x0);
        gbc.writeMem(0x9d11, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d11));
        EXPECT(0x89, gbc.readMem(0x9d12));
        // CB 89 03D0
        gbc.setState(0x9b30, 0x6913, 0x3640, 0xb4d9, 0x5302, 0x55f3, 0x1, 0x1);
        gbc.writeMem(0x9b30, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0x9b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b30));
        EXPECT(0x89, gbc.readMem(0x9b31));
        // CB 89 03D2
        gbc.setState(0x59a9, 0x8ec1, 0x4db0, 0xc3d4, 0x98e8, 0x30e2, 0x1, 0x1);
        gbc.writeMem(0x59a9, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ec1, gbc.sp());
        EXPECT(0x59ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03D3
        gbc.setState(0x8a1a, 0x3842, 0x2a30, 0x1126, 0x386a, 0xb215, 0x1, 0x0);
        gbc.writeMem(0x8a1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3842, gbc.sp());
        EXPECT(0x8a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1a));
        EXPECT(0x89, gbc.readMem(0x8a1b));
        // CB 89 03D4
        gbc.setState(0x6fe3, 0x635b, 0xdf70, 0xd9af, 0xa40b, 0x859b, 0x0, 0x0);
        gbc.writeMem(0x6fe3, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x635b, gbc.sp());
        EXPECT(0x6fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03D5
        gbc.setState(0xb679, 0xe355, 0x2dc0, 0x1bc9, 0x406a, 0x6a3c, 0x0, 0x0);
        gbc.writeMem(0xb679, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0xb67b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb679));
        EXPECT(0x89, gbc.readMem(0xb67a));
        // CB 89 03D6
        gbc.setState(0x9ef6, 0xa981, 0x9c50, 0x2d2e, 0x6c43, 0x43e1, 0x1, 0x1);
        gbc.writeMem(0x9ef6, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0x9ef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ef6));
        EXPECT(0x89, gbc.readMem(0x9ef7));
        // CB 89 03D7
        gbc.setState(0x6c1a, 0x47ee, 0x3bd0, 0x40ae, 0xf7d3, 0x83e6, 0x1, 0x0);
        gbc.writeMem(0x6c1a, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x47ee, gbc.sp());
        EXPECT(0x6c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03D8
        gbc.setState(0x5d81, 0x9a28, 0x100, 0xae02, 0xdafa, 0x6827, 0x1, 0x1);
        gbc.writeMem(0x5d81, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a28, gbc.sp());
        EXPECT(0x5d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 89 03D9
        gbc.setState(0xa930, 0x3b6d, 0x39c0, 0xdb47, 0xc1eb, 0x9cc0, 0x1, 0x0);
        gbc.writeMem(0xa930, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3b6d, gbc.sp());
        EXPECT(0xa932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa930));
        EXPECT(0x89, gbc.readMem(0xa931));
        // CB 89 03DA
        gbc.setState(0x3a7f, 0x1788, 0x64f0, 0x4ab1, 0xd836, 0xa159, 0x1, 0x0);
        gbc.writeMem(0x3a7f, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1788, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03DB
        gbc.setState(0x9c3e, 0x439d, 0x6850, 0x117f, 0x1ca1, 0x8d1c, 0x1, 0x0);
        gbc.writeMem(0x9c3e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x439d, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3e));
        EXPECT(0x89, gbc.readMem(0x9c3f));
        // CB 89 03DD
        gbc.setState(0x7296, 0x59cb, 0x6610, 0x1bba, 0xb1e9, 0x34a6, 0x1, 0x1);
        gbc.writeMem(0x7296, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x59cb, gbc.sp());
        EXPECT(0x7298, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03DE
        gbc.setState(0xac, 0xb9c8, 0xfb70, 0x5f9e, 0x24a3, 0x3239, 0x1, 0x1);
        gbc.writeMem(0xac, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb9c8, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03E1
        gbc.setState(0xadbd, 0xfc26, 0x99f0, 0xdd9e, 0xe257, 0x6415, 0x0, 0x0);
        gbc.writeMem(0xadbd, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfc26, gbc.sp());
        EXPECT(0xadbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbd));
        EXPECT(0x89, gbc.readMem(0xadbe));
        // CB 89 03E2
        gbc.setState(0x9679, 0xf1d1, 0x9820, 0x8b30, 0x115d, 0x7741, 0x1, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf1d1, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0x89, gbc.readMem(0x967a));
        // CB 89 03E3
        gbc.setState(0xa72d, 0xc8e8, 0xc2a0, 0x6a46, 0xc4c9, 0x4ee1, 0x0, 0x0);
        gbc.writeMem(0xa72d, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc8e8, gbc.sp());
        EXPECT(0xa72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa72d));
        EXPECT(0x89, gbc.readMem(0xa72e));
        // CB 89 03E4
        gbc.setState(0xe0c4, 0x9b92, 0x3f00, 0xd484, 0xaed9, 0x6787, 0x1, 0x1);
        gbc.writeMem(0xe0c4, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9b92, gbc.sp());
        EXPECT(0xe0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0c4));
        EXPECT(0x89, gbc.readMem(0xe0c5));
        // CB 89 03E5
        gbc.setState(0x649e, 0xcfcb, 0x3f70, 0xa2f3, 0x8ca4, 0x3bbb, 0x1, 0x0);
        gbc.writeMem(0x649e, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xcfcb, gbc.sp());
        EXPECT(0x64a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03E6
        gbc.setState(0x4d09, 0x6138, 0x4d0, 0xd573, 0xfe11, 0xa212, 0x1, 0x0);
        gbc.writeMem(0x4d09, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 89 03E7
        gbc.setState(0x2e7, 0x1652, 0x8f50, 0x2a53, 0x7a07, 0x45a7, 0x0, 0x1);
        gbc.writeMem(0x2e7, { 0xcb, 0x89 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1652, gbc.sp());
        EXPECT(0x2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
